[package]
name = "fuzzer_device"
version = "0.1.0"
edition = "2021"

[features]
default = ["device_brix", "mutation_all", "rand_isaac"]

no_std = []
uefi = ["coverage/uefi", "no_std", "dep:uefi", "dep:uefi_udp4", "dep:uefi-raw"]

device_bochs = ["platform_bochs", "bios_bochs", "uefi"]
device_brix  = ["platform_intel", "bios_ami", "uefi"]

platform_intel = [] # CMOS io port 0x70,0x71,0x72,0x73
platform_bochs = [] # no CMOS memory
bios_ami = []       # American Megatrends BIOS -> CMOS memory offset 0x80, len 64
bios_bochs = []     # no CMOS memory, no internet

# Random number generator
rand_isaac  = ["dep:rand_isaac"]

mutation_all = ["mutation_random"]
mutation_random = []  # Random mutation

__debug_bochs_pretend = [] # pretend bochs to be a compatible device for coverage collection
__debug_print_dissassembly = [] # print disassembly of the code
__debug_print_progress_print = [] # print continous progress, slows down the fuzzer, useful for debugging
__debug_print_progress_net = [] # print continous progress, slows down the fuzzer, useful for debugging
__debug_print_external_interrupt_notification = [] # print external interrupt notification
__debug_print_mutation_info = [] # print mutation info
__debug_pretend_no_coverage = [] # pretend no coverage collection possible
__debug_print_udp = [] # print debug information from udp interface
__debug_print_events = [] # print coverage events

__device_brix = ["device_brix", "rand_isaac", "mutation_all", "__debug_print_mutation_info", "__debug_print_dissassembly", "__debug_print_progress_print", "__debug_print_progress_net"]
__device_bochs = ["device_bochs", "rand_isaac", "mutation_all", "__debug_print_external_interrupt_notification", "__debug_print_mutation_info"]

[dependencies]
hypervisor = { path = "../hypervisor" }
coverage = { path = "../coverage", default-features = false }
log = "0.4.25"
rand_core = "0.9.0"
rand_isaac = {version = "0.4.0", optional = true}
libm = "0.2.11"
data_types = {path = "../data_types"}
iced-x86 = { version = "1.21.0", default-features = false, features = ["decoder", "encoder", "block_encoder", "op_code_info", "instr_info", "gas", "intel", "masm", "nasm", "fast_fmt", "code_asm", "no_std"] }
x86 = "0.52"
custom_processing_unit = {path = "../custom_processing_unit"}
num-traits = { version = "0.2.19", default-features = false }
ucode_dump = { path = "../ucode_dump" }
uefi = { version = "0.34.1", features = ["logger", "panic_handler", "alloc", "global_allocator"], optional = true }
uefi_udp4 = { path = "../uefi_udp4", optional = true }
uefi-raw = {version = "0.10.0", optional = true}
fuzzer_data = { path = "../fuzzer_data" }
serde = {version = "1.0.218", default-features = false, features = ["alloc"]}
itertools = { version = "0.14.0", default-features = false, features = ["use_alloc"] }

[build-dependencies]
chrono = "0.4.39"
sha2 = "0.10.8"

[[bin]]
name = "fuzzer_device"
path = "src/main.rs"
required-features = ["uefi"]
