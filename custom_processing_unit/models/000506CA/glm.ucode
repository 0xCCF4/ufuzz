U0000: tmp15:= MOVEFROMCREG_DSZ64( , 0x068) 
U0001: tmp0:= ZEROEXT_DSZ32(0x00000001) SEQW GOTO U3452
U0002: tmp7:= ZEROEXT_DSZ64() 

U0004: mm7:= unk_5b9() 
U0005: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U0002
U0006: SYNCWAIT-> URET(0x00) 

U0008: tmp14:= SAVEUIP(0x01, U0574) !m0 SEQW GOTO U0909
U0009: tmp13:= SUB_DSZ32(0x000001a4, tmp8) 
U000a: tmp13:= SELECTCC_DSZ32_CONDNZ(tmp13, 0x00000800) 

U000c: tmp13:= NOTAND_DSZ64(tmp13, tmp1) 
U000d: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp13, U3701) 
U000e: NOP SEQW GOTO U2711

U0010: tmp14:= SAVEUIP(0x01, U0574) !m0 SEQW GOTO U07e1
sha256_ret:
U0011: tmp13:= READURAM( , 0x008e, 64) 
U0012: tmp14:= SHR_DSZ64(tmp13, 0x00000020) 

U0014: tmp13:= MOVEINSERTFLGS_DSZ32(tmp14, tmp13) 
U0015: tmp14:= READURAM( , 0x008d, 64) 
U0016: UJMP( , tmp11) 

U0018: tmp14:= SAVEUIP(0x01, U0352) !m0 SEQW GOTO U0911
U0019: tmp13:= RDSEGFLD(TSS, SEL) 
U001a: LFNCEMARK-> unk_e7b(tmp0, tmp2) 

U001c: tmp2:= ZEROEXT_DSZ32(tmp13) 
U001d: LFNCEWAIT-> unk_da8( , tmp2) 
U001e: tmp5:= BTS_DSZ64(0x00000000, 0x0000000e) SEQW GOTO U11ba

U0020: tmp4:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 SEQW GOTO U0919
FUN_ucode_0000021:
U0021: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U0022: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U0024: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040) 
U0025: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000060) 
U0026: tmp12:= ADD_DSZ32(0x00000080, tmp12) SEQW URET0

U0028: tmp0:= RCXBTCNTMSK_DSZ8(rcx) SEQW GOTO U0969
U0029: tmp8:= ZEROEXT_DSZ32N(tmp1, r64dst) !m1 
U002a: tmp1:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 

U002c: GENARITHFLAGS(tmp1, tmp2) !m2 
U002d: tmp8:= OR_DSZN(tmp2, tmp8) !m1 
U002e: r64dst:= CMOVCC_DSZ64_CONDZ(r64dst, tmp8) !m2 SEQW UEND0

U0030: tmp0:= RCXBTCNTMSK_DSZ8(rcx) SEQW GOTO U0801
U0031: tmp1:= SUB_DSZN(tmp0, IMM_MACRO_43) !m0,m1 
U0032: tmp2:= unk_12f(tmp2, tmp1) !m1 

U0034: tmp2:= SELECTCC_DSZ64_CONDZ(tmp4, tmp2) 
U0035: tmp4:= SELECTCC_DSZ32_CONDZ(tmp4, 0x00000021) 
U0036: tmp3:= unk_10f(tmp3, tmp2) !m1 SEQW URET1

U0038: tmp0:= OR_DSZ64(rcx) SEQW GOTO U0809
U0039: tmp0:= unk_08f(0x00000106) 
U003a: tmp0:= CMOVCC_DSZ16_CONDZ(tmp3, tmp0) 

U003c: tmp7:= CMOVCC_DSZ16_CONDZ(tmp3, 0x00000005) 
U003d: rax:= ADD_DSZ16(tmp0, rax) 
U003e: rax:= AND_DSZ8(0x0000000f, rax) !m2 SEQW GOTO U6059

U0040: tmp0:= OR_DSZ64(rcx) SEQW GOTO U0981
U0041: tmp14:= ZEROEXT_DSZ16(0x00005ac4) 
U0042: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 

U0044: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000006, U5f74) !m0,m2 
U0045: SYNCFULL-> NOP 
U0046: NOP SEQW GOTO U0045

U0048: tmp0:= CMOVCC_DSZ64_CONDZ(0x00000001) !m2 SEQW GOTO U09c1
U0049: tmp11:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
U004a: tmp11:= OR_DSZ32(0x00000101, tmp11) 

U004c: MOVETOCREG_DSZ64(tmp11, 0x2cd, 32) !m1,m2 
U004d: tmp4:= ZEROEXT_DSZ32(0xffffffffffffffff) 
U004e: MOVETOCREG_DSZ64(tmp4, 0x281, 32) !m1,m2 SEQW GOTO U64cd

U0050: tmp0:= CMOVCC_DSZ64_CONDNZ(0x00000001) !m2 SEQW GOTO U09c1
FUN_ucode_0000051:
U0051: tmp13:= ZEROEXT_DSZ64(tmp7) 
U0052: SYNCFULL-> UJMP( , U6099) SEQW SAVEUIP1 U0054

U0054: tmp12:= SUB_DSZ64(0x00000008, tmp12) 
U0055: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U0051
U0056: NOP SEQW URET0

U0058: SAVEUIP( , 0x01, U0c75) !m0 SEQW GOTO U06f1
compute_ucode_sha_start:
U0059: tmp7:= SUB_DSZ64(0x00000200, tmp7) 
U005a: tmp5:= ZEROEXT_DSZ64(tmp14) 

U005c: tmp6:= ZEROEXT_DSZ32(0x00000002) 
U005d: tmp11:= ZEROEXT_DSZ16(0x00002a91) 
U005e: WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U519c

U0060: SAVEUIP( , 0x01, U4120) !m0 SEQW GOTO U0841
caseD_61:
U0061: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000001) 
U0062: tmp4:= ADD_DSZ64(0x00000005, tmp4) 

U0064: tmp0:= AND_DSZ8(tmp0, tmp10) 
U0065: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp0, tmp1) 
U0066: tmp4:= ADD_DSZ64(tmp1, tmp4) SEQW GOTO U1f9a

U0068: SAVEUIP( , 0x01, U426a) !m0 SEQW GOTO U0841
U0069: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0xfffffffffffffffc) 
U006a: tmp4:= ADD_DSZ64(tmp1, tmp4) 

U006c: tmp0:= READURAM( , 0x0053, 64) 
U006d: tmp0:= OR_DSZ32(0x00000001, tmp0) 
U006e: WRITEURAM(tmp0, 0x0053, 32) !m2 SEQW GOTO U1f9a

U0070: NOP SEQW GOTO U221e
U0071: NOP 
U0072: SAVEUIP( , 0x00, U2769) 

U0074: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U2e91
U0075: TESTUSTATE( , SYS, UST_VMX_DIS | UST_VMX_OP_DIS) !m1 ? SEQW URET0
U0076: UJMP( , U2711) 

U0078: tmp13:= SAVEUIP(0x00, U221e) SEQW GOTO U0d92
U0079: tmp14:= READUIP_REGOVR(0x01) !m0 
U007a: tmp0:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 

U007c: tmp4:= ADD_DSZ64(0x00000002, tmp4) 
U007d: tmp12:= SUB_DSZ32(0x00000001, tmp0) 
U007e: SYNCFULL-> UFLOWCTRL( , tmp12, MSLOOPCTR) SEQW URET1

U0080: tmp8:= unk_6a0() !m2 SEQW GOTO U02c9
U0081: NOP 
U0082: UFLOWCTRL( , tmp15, MSLOOPCTR) 

U0084: SYNCFULL-> NOP 
U0085: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U0084
U0086: URET(0x00) 

U0088: tmp8:= unk_6a0() !m2 SEQW GOTO U02c9
U0089: NOP 
U008a: LFNCEMARK-> unk_e7b(tmp0, tmp2) !m0 

U008c: NOP 
U008d: NOP 
U008e: LFNCEWAIT-> NOP SEQW UEND0

U0090: tmp8:= unk_6a0() !m2 SEQW GOTO U02c9
U0091: NOP 
U0092: LFNCEMARK-> tmp1:= unk_e7b(tmp0, tmp2) !m1,m2 

U0094: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp1, tmp1) 
U0095: tmp14:= SAVEUIP(0x01, U3bdc) !m0 
U0096: tmp1:= MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x7f5) !m2 SEQW GOTO U3bcc

U0098: tmp8:= unk_6a0() !m2 SEQW GOTO U02c9
U0099: NOP 
U009a: SYNCFULL-> MOVETOCREG_OR_DSZ64( , 0x00000001, 0x201) !m1,m2 

U009c: SYNCFULL-> MOVETOCREG_OR_DSZ64( , 0x00000001, 0x204) !m1,m2 
U009d: MOVETOCREG_DSZ64( , 0x00000000, 0x201, 32) !m1,m2 
U009e: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW URET0

U00a0: SAVEUIP( , 0x01, U0372) !m0 SEQW GOTO U0a49
patch_handle_get_value:
U00a1: tmp14:= READUIP_REGOVR(0x01) !m0 
U00a2: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 

U00a4: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x00000004) 
U00a5: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x0000000c) 
U00a6: tmp4:= ADD_DSZ64(0x00000014, tmp4) SEQW URET1

U00a8: tmp8:= OR_DSZ32(0x00000004) SEQW GOTO U0a62
U00a9: tmp0:= CONCAT_DSZ16(0x00000100, tmp0) 
U00aa: WRITEURAM(tmp0, 0x000e, 32) !m2 

U00ac: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U00ad: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U21cd) !m0,m1 
U00ae: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x29d) !m1,m2 SEQW GOTO U5796

U00b0: SAVEUIP( , 0x01, U4291) !m0 SEQW GOTO U0841
FUN_ucode_00000b1:
U00b1: tmp14:= READURAM( , 0x0047, 64) 
U00b2: tmp3:= READURAM( , 0x0053, 64) 

U00b4: tmp3:= BT_DSZ64(tmp3, 0x0000000f) 
U00b5: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp3, tmp14) 
U00b6: tmp3:= ZEROEXT_DSZ32() SEQW GOTO U4ead

U00b8: tmp15:= ADD_DSZ32(0x00000001) SEQW GOTO U0a59
U00b9: tmpv1:= OR_DSZ32(tmp3, tmpv1) 
U00ba: tmpv2:= CONCAT_DSZ16(tmpv2, tmpv1) 

U00bc: tmpv2:= CONCAT_DSZ32(0xffffffffffffffff, tmpv2) 
U00bd: WRSEGFLD(0x00000000) !m0 
U00be: WRSEGFLD(tmpv2) !m0 SEQW URET1

U00c0: SAVEUIP( , 0x01, U4195) !m0 SEQW GOTO U0841
FUN_ucode_00000c1:
U00c1: tmp2:= RDSEGFLD(UNK_SEG_04, SEL) 
U00c2: unk_da2() 

U00c4: tmp8:= NOTAND_DSZ32(0x00000007, tmp2) 
U00c5: unk_d62(tmp8) 
U00c6: tmp13:= ZEROEXT_DSZ16(0x00000019) SEQW GOTO U4799

U00c8: SAVEUIP( , 0x01, U41ad) !m0 SEQW GOTO U0841
U00c9: tmp14:= READUIP_REGOVR(0x01) !m0 
U00ca: LFNCEWAIT-> tmp2:= RDSEGFLD(SEG_V0, SEL) 

U00cc: tmp0:= unk_d61(tmp2) 
U00cd: tmp1:= unk_d61(tmp2) 
U00ce: tmp0:= CMOVCC_DSZ64_CONDNB(tmp1, tmp0) SEQW URET1

U00d0: NOP 
U00d1: LFNCEMARK-> NOP SEQW GOTO U008e
U00d2: WRMSLOOPCTRFBR(0x00000007) 

U00d4: SYNCWAIT-> xmm7:= unk_5b9() 
U00d5: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U00d4
U00d6: NOP SEQW URET1

U00d8: LBSYNC(0x00000000) 
U00d9: LFNCEMARK-> NOP SEQW GOTO U008e
U00da: tmp15:= SELECTCC_DSZ32_CONDNB(tmp4, 0x00002000) 

U00dc: SYNCFULL-> MOVETOCREG_DSZ64(tmp15, 0x7f5) 
U00dd: MOVETOCREG_DSZ64(tmp1, 0x71a) 
U00de: UJMP( , tmp11) 

U00e0: SAVEUIP_REGOVR(0x01, U00e1, 0x000e) !m0 SEQW GOTO U0b91
U00e1: tmp1:= AND_DSZ32(0x000000fc, tmp6) 
U00e2: tmp1:= SUB_DSZ32(0x00000030, tmp1) 

U00e4: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U0414) 
U00e5: tmp6:= NOTAND_DSZ32(0x00000003, tmp6) 
U00e6: tmp6:= OR_DSZ32(0x00000001, tmp6) SEQW GOTO U0414

U00e8: tmp2:= SAVEUIP(r64src, 0x01, U072c) !m0 SEQW GOTO U0561
FUN_ucode_00000e9:
U00e9: tmp2:= ZEROEXT_DSZ32(0x00000004) 
U00ea: tmp2:= SUB_DSZ32(0x00000001, tmp2) 

U00ec: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp2, U1bd0) 
U00ed: tmp1:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U00ee: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U00ea) SEQW GOTO U1bd0

U00f0: tmp2:= RDSEGFLD(TSS, SEL) SEQW GOTO U0a69
U00f1: tmp0:= ZEROEXT_DSZ32(0x0002001c) 
U00f2: TESTUSTATE( , VMX, !0x4000) !m0,m2 ? SEQW URET1

U00f4: TESTUSTATE( , VMX, 0x8000) !m2 ? SEQW GOTO U0c72
U00f5: tmp12:= READURAM( , 0x0011, 64) 
U00f6: SAVEUIP_REGOVR(0x01, U00f8, 0x0001) !m0 SEQW URET0

U00f8: tmp14:= SAVEUIP(0x01, U4055) !m0 SEQW GOTO U0861
U00f9: tmp13:= ZEROEXT_DSZ32(tmp0) 
U00fa: MOVETOCREG_SHR_DSZ64(tmp2, 0x00000010, 0x6c5) 

U00fc: tmp12:= SHR_DSZ64(tmp2, 0x00000020) 
U00fd: tmp15:= SUB_DSZ16(tmp4) 
U00fe: tmp12:= ADDSUB_DSZ16_CONDD(tmp15, tmp12) SEQW GOTO U2db0

U0100: tmp14:= SAVEUIP(0x01, U4055) !m0 SEQW GOTO U0569
U0101: tmp2:= SUB_DSZN(0x000006e0, rcx) !m1 
U0102: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U0105) 

U0104: LBSYNC(0x00000002) 
U0105: tmp10:= OR_DSZ32(0x00004000, tmp8) 
U0106: tmp10:= NOTAND_DSZ32(0x00018000, tmp10) SEQW GOTO U0ae5

U0108: tmp14:= SAVEUIP(0x01, U3a92) !m0 SEQW GOTO U0569
U0109: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3300) 
U010a: tmp1:= READURAM( , 0x005c, 64) 

U010c: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U2711) !m1 
U010d: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U2711
U010e: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNO(tmp8, U2711) SEQW URET1

U0110: tmp14:= SAVEUIP(0x01, U07ee) !m0 SEQW GOTO U0861
U0111: tmp3:= BT_DSZ64(tmp3, 0x0000002c) 
U0112: tmp1:= SELECTCC_DSZ32_CONDNB(tmp3, tmp1) 

U0114: tmp5:= NOTAND_DSZ64(tmp1, tmp5) 
U0115: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 
U0116: PORTOUT_DSZ32_ASZ16_SC1(0x0000, tmp2, tmp5) !m1,m2 SEQW GOTO U5594

U0118: tmp14:= SAVEUIP(0x01, U07f6) !m0 SEQW GOTO U0861
U0119: tmp1:= READURAM( , 0x0042, 64) 
U011a: tmp1:= BT_DSZ32(tmp1, 0x0000000f) 

U011c: tmp1:= CMOVCC_DSZ16_CONDB(tmp1, tmp5) 
U011d: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, U2711, tmp5) !m1 
U011e: PORTOUT_DSZ32_ASZ16_SC1(0x00c4,  , tmp5) !m2 SEQW GOTO U3204

U0120: tmp14:= SAVEUIP(0x01, U07f6) !m0 SEQW GOTO U0569
U0121: tmp1:= unk_226(0x00000064, tmp1) 
U0122: unk_114( , tmp1) 

U0124: tmp1:= ADD_DSZ32(0x00000800, tmp1) 
U0125: tmp1:= SHL_DSZ64(tmp1, 0x00000020) 
U0126: tmp5:= AND_DSZ32(0x0000ff00, tmp5) SEQW GOTO U3056

U0128: SAVEUIP( , 0x00, U2919) SEQW GOTO U0862
FUN_ucode_0000129:
U0129: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U012a: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U2711) !m1 

U012c: LFNCEMARK-> tmp2:= READURAM( , 0x003a, 64) 
U012d: tmp2:= BTR_DSZ64(tmp2, 0x00000020) 
U012e: WRITEURAM(tmp2, 0x003a, 64) !m2 SEQW URET1

U0130: tmp2:= SAVEUIP(r64src, 0x01, U008a) !m0 SEQW GOTO U2c00
U0131: tmp2:= OR_DSZ32(0x00000100, tmp2) 
U0132: FETCHFROMEIP0_ASZ64( , tmp6) 

U0134: tmp0:= READURAM( , 0x001f, 64) !m2 
U0135: tmp0:= BTS_DSZ64(tmp0, 0x00000024) 
U0136: LFNCEMARK-> WRITEURAM(tmp0, 0x011f, 64) !m2 SEQW GOTO U4f46

U0138: tmp2:= LDZX_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 SEQW GOTO U0c91
FUN_ucode_0000139:
U0139: tmp1:= MOVEFROMCREG_DSZ64( , 0x513) 
U013a: tmp15:= ZEROEXT_DSZ32(0x000000ff) 

U013c: tmp15:= CONCAT_DSZ32(tmp15, 0xfffffffffffff000) 
U013d: tmp4:= AND_DSZ64(tmp15, tmp1) 
U013e: tmp1:= SHR_DSZ64(tmp1, 0x00000032) SEQW URET0

U0140: tmp8:= UPDATEUSTATE(!0x04) !m0 
U0141: LFNCEMARK-> tmp14:= SAVEUIP(0x01, U43ec) !m0 SEQW GOTO U0752
U0142: tmp2:= unk_16f(r64dst, tmp2) 

U0144: tmp2:= SELECTCC_DSZ64_CONDZ(tmp4, tmp2) 
U0145: tmp4:= SELECTCC_DSZ32_CONDZ(tmp4, 0x0000003f) 
U0146: tmp3:= unk_34f(tmp3, tmp2) SEQW URET1

U0148: tmp4:= SAVEUIP(r64dst, 0x00, U2df1) SEQW GOTO U0631
U0149: tmp3:= ZEROEXT_DSZ32(0x00000003) 
U014a: tmp0:= READURAM( , 0x0058, 64) 

U014c: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000c00, mode=0x01, tmp0) 
U014d: tmp15:= ZEROEXT_DSZ32() 
U014e: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U2769) !m1 SEQW GOTO U04ce

U0150: tmp12:= READURAM( , 0x0011, 64) SEQW GOTO U154e
U0151: tmp15:= READURAM( , 0x0020, 64) 
U0152: tmp15:= BT_DSZ32(tmp15, 0x00000001) 

U0154: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00003b00) 
U0155: tmp15:= ADD_DSZ32(0x000020c0, tmp15) 
U0156: WRMSLOOPCTRFBR( , 0x0000000f) SEQW URET0

U0158: tmp12:= READURAM( , 0x0011, 64) SEQW GOTO U154e
U0159: MOVETOCREG_DSZ64(tmp6, 0x7fe) !m2 
U015a: tmp14:= SHL_DSZ32(tmp2, 0x00000005) 

U015c: tmp15:= ADD_DSZ32(0x00004414, tmp14) 
U015d: SAVEUIP( , 0x00, U0686) 
U015e: UFLOWCTRL( , tmp15, URET0) SEQW GOTO U2512

U0160: tmp1:= LDTICKLE_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m2 
U0161: tmp1:= unk_3af(r64dst, tmp1) !m2 SEQW GOTO U03aa
U0162: SYNCFULL-> UFLOWCTRL( , tmp11, URET1) 

FUN_ucode_0000164:
U0164: unk_dff() 
U0165: LFNCEWAIT-> MOVETOCREG_OR_DSZ64( , 0x00000008, 0x63a) 
U0166: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x63e) !m0 SEQW GOTO U2906

U0168: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0169: tmp1:= ADC(r64dst, tmp1) !m1,m2 SEQW GOTO U03aa
U016a: SYNCFULL-> SFENCE() 

U016c: tmp15:= MOVETOCREG_BTS_DSZ64( , 0x089) !m2 
U016d: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000001, U5c44) !m2 
U016e: tmp15:= MOVEFROMCREG_DSZ64( , 0x089) SEQW GOTO U016d

U0170: tmp1:= LDTICKLE_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m2 
U0171: tmp1:= unk_3a8(r64dst, tmp1) !m2 SEQW GOTO U03aa
U0172: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_d3, mode=0x0a, rbp) !m0,m1 

U0174: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_cb, mode=0x0a, rsi) !m0,m1 
U0175: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_c3, mode=0x0a, rdi) !m0,m1 
U0176: rsp:= ADD_DSZN(IMM_MACRO_c3, rsp) !m0,m1 SEQW UEND0

U0178: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0179: tmp1:= SBB(r64dst, tmp1) !m1,m2 SEQW GOTO U03aa
U017a: rax:= SELECTCC_DSZ64_CONDNZ(tmp5, rax) 

U017c: unk_eff() 
U017d: SYNCFULL-> NOP 
U017e: unk_256() !m1 SEQW UEND0

U0180: tmp1:= LDTICKLE_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m2 
U0181: tmp1:= unk_3a9(r64dst, tmp1) !m2 SEQW GOTO U03aa
U0182: tmp0:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

U0184: tmp4:= SUB_DSZN(tmp0, tmp3) !m1 
U0185: tmp5:= ZEROEXT_DSZ16(0x00000025) 
U0186: SAVEUIP( , 0x01, U3635) !m0 SEQW GOTO U0dc8

U0188: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0189: tmp1:= unk_00f(IMM_MACRO_ALIAS_IMMEDIATE, tmp1) !m0,m1,m2 SEQW GOTO U03aa
U018a: WRITEURAM( , 0x00000000, 0x0007, 32) 

U018c: tmp15:= ZEROEXT_DSZ32(0x00000120) 
U018d: MOVETOCREG_DSZ64(tmp15, 0x00b) 
U018e: tmp3:= ZEROEXT_DSZ32(0x00002048) SEQW GOTO U28d0

U0190: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0191: tmp1:= ADC(IMM_MACRO_ALIAS_IMMEDIATE, tmp1) !m0,m1,m2 SEQW GOTO U03aa
U0192: tmp10:= unk_6ed(tmp9, tmp11) !m2 

U0194: tmp9:= unk_52b(tmp10) 
U0195: tmp11:= unk_52b(tmp10) 
U0196: r64dst:= unk_6ed(tmp11, tmp9) !m0,m2 SEQW UEND0

U0198: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0199: tmp1:= SBB(IMM_MACRO_ALIAS_IMMEDIATE, tmp1) !m0,m1,m2 SEQW GOTO U03aa
U019a: tmp0:= OR_DSZ16(0x0000003f, tmp0) 

U019c: MOVETOCREG_DSZ64(tmp0, 0x486) !m2 
U019d: tmp10:= NOTAND_DSZ16(0x00008080, tmp10) 
U019e: SYNCFULL-> MOVETOCREG_DSZ64(tmp10, 0x48c) !m2 SEQW GOTO U221e

U01a0: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U01a1: tmp1:= XOR_DSZN(0xffffffffffffffff, tmp1) !m1 SEQW GOTO U03aa
U01a2: tmp7:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 

U01a4: tmp7:= BT_DSZ64(tmp7, 0x0000003f) 
U01a5: LFNCEWAIT-> unk_cc2(tmp11, 0x000038ff) 
U01a6: SAVEUIP( , 0x00, U575d) SEQW GOTO U6eed

U01a8: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U01a9: tmp1:= SUB_DSZ32(tmp1) !m1,m2 SEQW GOTO U03aa
U01aa: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U01ac: tmp7:= AND_DSZ32(0x00000020, tmp5) 
U01ad: tmp8:= MOVEFROMCREG_DSZ64( , 0x48c) 
U01ae: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U4566) SEQW GOTO U0404

U01b0: tmp0:= LA2LIN_DSZ64(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0 
U01b1: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0
U01b2: WRSEGFLD(tmp7, LDT, SEL+FLGS+LIM) 

U01b4: tmp7:= RDSEGFLD(UNK_SEG_04, BASE) 
U01b5: tmp3:= CONCAT_DSZ32(tmp0, tmp7) 
U01b6: LFNCEMARK-> WRSEGFLD(tmp3, LDT, BASE) SEQW GOTO U1bd0

U01b8: tmp0:= unk_2a2(r64src) !m2 
U01b9: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0
U01ba: LFNCEWAIT-> tmp11:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) 

U01bc: WRSEGFLD(tmp11, LDT, SEL+FLGS+LIM) 
U01bd: tmp11:= RDSEGFLD(UNK_SEG_04, BASE) 
U01be: LFNCEMARK-> WRSEGFLD(tmp11, LDT, BASE) SEQW GOTO U1bd0

U01c0: tmp0:= unk_0bc(r64src) 
U01c1: r64dst:= unk_2e3(tmp0, r64dst) SEQW UEND0
U01c2: tmp3:= unk_d61(tmp2) 

U01c4: tmp1:= unk_d61(tmp2) 
U01c5: tmp3:= CMOVCC_DSZ64_CONDNB(tmp1, tmp3) 
U01c6: LFNCEMARK-> unk_e6b(tmp3) !m1,m2 SEQW URET0

U01c8: tmp0:= unk_2a5(r64src, r64dst) !m2 
U01c9: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0
U01ca: WRSEGFLD(0x00000000, DS, SEL) 

U01cc: WRSEGFLD(0x00000000, ES, SEL) 
U01cd: WRSEGFLD(0x00000000, FS, SEL) 
U01ce: LFNCEMARK-> WRSEGFLD(0x00000000, GS, SEL) SEQW GOTO U1de5

U01d0: tmp0:= unk_2a5(IMM_MACRO_ALIAS_IMMEDIATE, r64src) !m0,m2 
U01d1: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0
U01d2: LFNCEWAIT-> r11:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U01d4: r11:= READAFLAGS( , r11) !m2 
U01d5: tmp6:= NOTAND_DSZ32(tmp4, r11) 
U01d6: tmp5:= MOVE_DSZ64(tmp0) SEQW GOTO U19f9

U01d8: tmp0:= unk_2ef(r64src, rax) !m2 
U01d9: rax:= ZEROEXT_DSZ16(tmp0, rax) SEQW UEND0
U01da: tmp2:= SHR_DSZ32(tmp0, 0x00000010) 

U01dc: tmp2:= ZEROEXT_DSZ16(tmp2) 
U01dd: tmp0:= unk_d61(tmp2) 
U01de: LFNCEMARK-> unk_e7b(tmp0, tmp2) !m1 SEQW GOTO U3965

U01e0: tmp3:= LDTICKLE_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U01e1: SAVEUIP( , 0x01, U057c) !m0 SEQW GOTO U0462
U01e2: tmp2:= RDSEGFLD(TSS, SEL) 

U01e4: tmp7:= NOTAND_DSZ32(0x00000007, tmp2) 
U01e5: unk_d62(tmp7) 
U01e6: NOP SEQW GOTO U3ef8

U01e8: tmp3:= LDTICKLE_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U01e9: SAVEUIP( , 0x01, U057c) !m0 SEQW GOTO U046a
U01ea: LFNCEWAIT-> tmp0:= RDSEGFLD(CS, BASE) 

U01ec: WRSEGFLD(tmp0, UNK_SEG_09, BASE) 
U01ed: tmp0:= RDSEGFLD(CS, SEL+FLGS+LIM) 
U01ee: SYNCFULL-> WRSEGFLD(tmp0, UNK_SEG_09, FLGS) SEQW GOTO U2e30

U01f0: tmp3:= LDTICKLE_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U01f1: SAVEUIP( , 0x01, U057c) !m0 SEQW GOTO U0962
U01f2: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 

U01f4: tmp10:= RDSEGFLD(SS_KERNM, UNK_FLD_0c) 
U01f5: tmp15:= OR_DSZN(rsi) !m1 
U01f6: tmp10:= ADD_DSZN(tmp15, tmp10) !m1 SEQW GOTO U35ac

U01f8: tmp3:= LDTICKLE_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U01f9: SAVEUIP( , 0x01, U057c) !m0 SEQW GOTO U0972
U01fa: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 

U01fc: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 
U01fd: tmp0:= IMUL64L_DSZ64(tmp15, tmp0) 
U01fe: tmp0:= SHR_DSZ64(tmp0, 0x00000020) SEQW GOTO U5b8a

U0200: tmp3:= LDTICKLE_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0201: tmp0:= OR_DSZ64(rcx) SEQW GOTO U097a
U0202: tmp14:= SHL_DSZ32(tmp1, 0x00000003) 

U0204: PORTOUT_DSZ64_ASZ16_SC1(0x4730, tmp14, tmp5) !m2 
U0205: tmp1:= ADD_DSZ32(tmp1, 0x00002205) 
U0206: MOVETOCREG_DSZ64(tmp5, tmp1) !m1,m2 SEQW GOTO U3398

U0208: tmp3:= CONCAT_DSZ32(r64dst, r64src) 
U0209: r64src:= unk_12f(tmp3, rcx) !m2 SEQW UEND0
U020a: tmp1:= AND_DSZ32(0x00007f00, tmp1) 

U020c: tmp1:= MOVEMERGEFLGS_DSZ32(tmp1, tmp2) 
U020d: tmp1:= CMOVCC_DSZ32_CONDNZ(tmp1, tmp5) 
U020e: tmp5:= NOTAND_DSZ64(0x00007f00, tmp5) SEQW GOTO U3056

U0210: tmp3:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0211: tmp0:= OR_DSZ64(rcx) SEQW GOTO U098a
U0212: tmp1:= unk_d9b(0x000000c0) !m2 

U0214: tmp1:= NOTAND_DSZ32(0x00400001, tmp1) 
U0215: tmp5:= OR_DSZ32(tmp5, tmp1) 
U0216: tmp5:= unk_d9f(0x000000c0) !m2 SEQW GOTO U5718

U0218: tmp0:= SAVEUIP(rcx, 0x01, U080a) !m0 
U0219: tmp3:= OR_DSZ64(r64src) SEQW GOTO U0994
U021a: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x46bc) !m2 

U021c: tmp1:= NOTAND_DSZ32(0x0003c000, tmp1) 
U021d: tmp1:= OR_DSZ32(tmp5, tmp1) 
U021e: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(0x46bc,  , tmp1) !m2 SEQW GOTO U6380

U0220: tmp3:= LDTICKLE_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0221: SAVEUIP( , 0x01, U057c) !m0 SEQW GOTO U0992
U0222: tmp2:= AND_DSZ32(0x003ff000, tmp5) 

U0224: tmp2:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000800) 
U0225: tmp1:= OR_DSZ64(tmp2, tmp1) 
U0226: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, tmp3) SEQW GOTO U3200

U0228: tmp3:= LDTICKLE_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0229: tmp0:= SAVEUIP(rcx, 0x01, U057c) !m0 SEQW GOTO U0994
U022a: tmp5:= OR_DSZ8(tmp5, tmp1) 

U022c: tmp1:= READURAM( , 0x005c, 64) 
U022d: tmp1:= SHR_DSZ64(tmp1, 0x00000013) 
U022e: tmp1:= AND_DSZ32(0x00200000, tmp1) SEQW GOTO U3056

U0230: tmp0:= unk_02f(r64src, 0x00000008) !m1 
U0231: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0
U0232: tmp1:= NOTAND_DSZ32(0x00000001, tmp1) 

U0234: tmp1:= OR_DSZ8(tmp5, tmp1) 
U0235: PORTOUT_DSZ32_ASZ16_SC1(0x4c18,  , tmp1) !m2 
U0236: tmp12:= ZEROEXT_DSZ32(0x00001001) SEQW GOTO U3234

U0238: rdx:= ZEROEXT_DSZ32N(rax, rdx) !m1 
U0239: rdx:= SAR_DSZN(rdx, 0x0000000f) !m1 SEQW UEND0
U023a: LFNCEMARK-> tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000278) 

U023c: tmp9:= AND_DSZ32(0x00004000, tmp9) 
U023d: tmp8:= MOVEFROMCREG_DSZ64( , 0x105) 
U023e: LFNCEWAIT-> MOVETOCREG_OR_DSZ64(tmp8, 0x105, tmp9) SEQW GOTO U1399

U0240: tmp0:= MOVSX_DSZ8(rax) 
U0241: rax:= ZEROEXT_DSZ16(tmp0, rax) SEQW UEND0
U0242: tmp7:= MOVEMERGEFLGS_DSZ32(0x00000005, tmp7) 

U0244: tmp7:= CMOVCC_DSZ32_CONDNZ(tmp7, 0x00000006) 
U0245: tmp13:= MOVEMERGEFLGS_DSZ32(tmp7, tmp8) 
U0246: tmp13:= CMOVCC_DSZ32_CONDNZ(tmp13, 0x00000004) SEQW GOTO U2d5d

U0248: tmp0:= CMOVCC_DSZ16_CONDB(0x000000ff) !m2 
U0249: rax:= ZEROEXT_DSZ8(tmp0, rax) SEQW UEND0
FUN_ucode_000024a:
U024a: tmp7:= LDZX_DSZN_ASZ32_SC1(tmp5, mode=0x18) !m1 

U024c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, U0dfc) 
U024d: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x0000000d, U0dfc) 
U024e: tmp7:= unk_07e(tmp7, tmp2) !m2 SEQW URET0

U0250: tmp0:= SUB_DSZN(0x00000000, rcx) !m1 
U0251: unk_118(tmp0, IMM_MACRO_0a) !m0,m1 SEQW UEND0
FUN_ucode_0000252:
U0252: SYNCWAIT-> tmp14:= READUIP_REGOVR(0x01) !m0 

U0254: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U2285
U0255: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, mode=0x01) 
U0256: LFNCEMARK-> tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000008, mode=0x01) SEQW URET1

U0258: tmp1:= SUB_DSZ8(0x00000006, rax) 
U0259: tmp1:= MOVEMERGEFLGS_DSZ32(0xfffffffffffffffa, tmp1) SEQW GOTO U09d1
FUN_ucode_000025a:
U025a: tmp14:= READUIP_REGOVR(0x01) !m0 

U025c: tmp0:= READURAM( , 0x0058, 64) 
U025d: tmp1:= ADD_DSZ64(0x00000c00, tmp0) 
U025e: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000008, mode=0x01, tmp1) SEQW URET1

U0260: MOVE_DSZ32() 
U0261: SAVEUIP( , 0x01, U4746) !m0 SEQW GOTO U09fa
U0262: tmp15:= READURAM( , 0x0020, 64) 

U0264: tmp15:= BT_DSZ32(tmp15, 0x00000001) 
U0265: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00003b00) 
U0266: tmp15:= ADD_DSZ32(tmp14, tmp15) SEQW URET0

U0268: tmm1:= PSHUFD(mm0) 
U0269: tmm0:= PSHUFD(mm2) SEQW GOTO U0a04
FUN_ucode_000026a:
U026a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U026c: LFNCEMARK-> tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U026d: tmp14:= XOR_DSZ32(0xc0000000, r64dst) 
U026e: tmp14:= ZEROEXT_DSZ16(0x000043f5, tmp14) SEQW URET0

U0270: tmm7:= unk_511(xmmdst, xmm0) !m1 
U0271: xmm2:= unk_510(xmmsrc, tmm7) !m1 SEQW UEND0
U0272: tmp9:= MOVEINSERTFLGS_DSZ64(tmp4, 0x00000020) 

U0274: tmp4:= SELECTCC_DSZ32_CONDNB(tmp9, 0x00000004) 
U0275: tmp9:= CMOVCC_DSZ32_CONDP(tmp9, tmp4) 
U0276: unk_25e( , tmp9) SEQW URET1

U0278: tmp10:= unk_dc6(r64base, r64idx) !m0 
U0279: tmm0:= unk_526(xmmdst, tmm2) !m0 SEQW GOTO U0a21
U027a: tmp7:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 

U027c: tmp7:= NOTAND_DSZ32(tmp1, tmp7) 
U027d: SYNCFULL-> tmp7:= MOVETOCREG_OR_DSZ64(tmp7, 0x38f, tmp0) !m1 
U027e: tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x00000008, 0x38f) !m1,m2 SEQW URET1

U0280: tmp10:= unk_dc6(r64base, r64idx) !m0 
U0281: SAVEUIP( , 0x01, U0716) !m0 SEQW GOTO U06f1
U0282: tmp0:= SHL_DSZ32(tmp7, 0x0000000b) 

U0284: tmp0:= NOTAND_DSZ32(tmp0, 0x04000000) 
U0285: rdx:= OR_DSZ32(tmp0, rdx) 
U0286: rcx:= ZEROEXT_DSZ32(0x00000101) SEQW GOTO U1bd0

U0288: tmp10:= unk_dc6(r64base, r64idx) !m0 
U0289: SAVEUIP( , 0x01, U07d6) !m0 SEQW GOTO U06f1
U028a: tmp3:= MOVEFROMCREG_DSZ64( , 0x2e6, 32) !m1 

U028c: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000009, U2769) !m1 
U028d: tmp3:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U028e: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000000a, U2769) !m0,m1 SEQW GOTO U2939

U0290: NOP 
U0291: LFNCEMARK->WRTAGW-> tmm0:= unk_6a8(IMM_MACRO_ALIAS_STi) !m0 SEQW GOTO U4261
U0292: tmp9:= ADD_DSZ32() 

U0294: tmp1:= ZEROEXT_DSZ32(0x00000018) 
U0295: tmp2:= ZEROEXT_DSZ32(0x000023ea) 
U0296: tmp14:= SAVEUIP(0x01, U2eb2) !m0 SEQW GOTO U66c6

U0298: tmp1:= ZEROEXT_DSZ32(0x0000004f) 
U0299: LFNCEMARK-> tmp13:= SAVEUIP(0x00, U1c04) SEQW GOTO U0a32
U029a: tmp5:= SUB_DSZ32(0x00000006, rax) 

U029c: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp5, U2711) 
U029d: tmp5:= SHL_DSZ32(rax, 0x00000010) 
U029e: SYNCMARK-> UFLOWCTRL( , tmp5, URET0) SEQW URET1

U02a0: tmp1:= ZEROEXT_DSZ32(0x0000004f) 
U02a1: LFNCEMARK-> tmp13:= SAVEUIP(0x00, U1c24) SEQW GOTO U0a3a
U02a2: tmm2:= unk_76f(tmm0) 

U02a4: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp10, 0x2c1, 32) !m1 
U02a5: tmp10:= MOVEFROMCREG_DSZ64( , 0x480) 
U02a6: WRITEURAM(tmp10, 0x0062, 64) SEQW GOTO U11b6

U02a8: mm0:= unk_73a() 
U02a9: rax:= ZEROEXT_DSZ16(tmp0, rax) SEQW UEND0
U02aa: tmm1:= unk_747(tmm2) 

U02ac: xmm0:= MOVHLPS(tmm1, tmm0) 
U02ad: tmp10:= READURAM( , 0x0062, 64) 
U02ae: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x480) !m2 SEQW GOTO U6380

U02b0: tmm1:= FMOV( , 0x00004081) !m0 
U02b1: tmm6:= FMOV( , 0x00000091) !m0,m2 SEQW UEND1
FUN_ucode_00002b2:
U02b2: tmpv0:= ZEROEXT_DSZ32(0x00000002) 

U02b4: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , tmpv0) !m2 
U02b5: tmpv0:= PORTIN_DSZ32_ASZ16_SC1(0x0040) !m2 
U02b6: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U02b5) SEQW URET0

U02b8: tmp14:= SAVEUIP(0x01, U02b9) !m0 SEQW GOTO U0a41
U02b9: tmm1:= FMOV( , 0x00000091) !m0 SEQW UEND0
FUN_ucode_00002ba:
U02ba: tmpv0:= ZEROEXT_DSZ32(0x00000002) 

U02bc: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , tmpv0) !m2 
U02bd: tmpv0:= PORTIN_DSZ32_ASZ16_SC1(0x0040) !m2 
U02be: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U02bd) SEQW URET1

U02c0: tmp8:= unk_6a0() !m2 
U02c1: mm7:= FMOV( , tmm0) !m0 SEQW UEND1
FUN_ucode_00002c2:
U02c2: LFNCEWAIT-> tmpv1:= MOVEFROMCREG_DSZ64( , 0x00c) 

U02c4: tmpv1:= AND_DSZ32(0x00000400, tmpv1) 
U02c5: tmpv0:= MOVEFROMCREG_DSZ64( , 0x065) 
U02c6: tmpv0:= SELECTCC_DSZ32_CONDNZ(tmpv1, tmpv0) SEQW GOTO U0515

U02c8: tmp8:= unk_6a0() !m2 
U02c9: mm7:= unk_6dc( , tmm0) !m0 SEQW UEND1
FUN_ucode_00002ca:
U02ca: tmpv0:= MOVEFROMCREG_DSZ64( , 0x067) 

U02cc: tmpv1:= MOVEFROMCREG_DSZ64( , 0x065) 
U02cd: tmpv0:= SUB_DSZN(tmpv1, tmpv0) !m1 
U02ce: MOVETOCREG_DSZ64(tmpv0, 0x067) !m2 SEQW URET1

U02d0: NOP 
U02d1: NOP SEQW GOTO U2769
FUN_ucode_00002d2:
U02d2: tmpv0:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 

U02d4: WRSEGFLD(tmpv0, CS, SEL+FLGS+LIM) 
U02d5: tmpv0:= RDSEGFLD(UNK_SEG_09, BASE) 
U02d6: WRSEGFLD(tmpv0, CS, BASE) SEQW URET1

sidt_xlat:
U02d8: tmp1:= RDSEGFLD(IDT, LIMIT) 
U02d9: tmp3:= RDSEGFLD(IDT, BASE) SEQW GOTO U0c12
FUN_ucode_00002da:
U02da: tmpv0:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U02dc: WRSEGFLD(tmpv0, SS, SEL+FLGS+LIM) 
U02dd: tmpv0:= RDSEGFLD(SS_USERM, BASE) 
U02de: WRSEGFLD(tmpv0, SS, BASE) SEQW URET1

U02e0: tmp3:= UPDATEUSTATE( , !0x04) !m0 
U02e1: LFNCEMARK-> tmp4:= READURAM( , 0x0084, 64) 
U02e2: tmp1:= READURAM( , 0x0082, 64) SEQW SAVEUIP1 U02e4SEQW GOTO U0bb2

U02e4: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U02e5: tmp0:= NOTAND_DSZ16(0x00000003, tmp0) 
U02e6: rcx:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_RIP) !m0 SEQW GOTO U01d2

U02e8: tmp2:= LDZX_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U02e9: SAVEUIP( , 0x01, U008a) !m0 SEQW GOTO U2c00
FUN_ucode_00002ea:
U02ea: tmpv0:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 

U02ec: WRSEGFLD(tmpv0, CS, SEL+FLGS+LIM) 
U02ed: tmpv0:= RDSEGFLD(UNK_SEG_09, BASE) 
U02ee: WRSEGFLD(tmpv0, CS, BASE) SEQW URET0

U02f0: tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, mode=0x0a) 
U02f1: SAVEUIP( , 0x01, U400a) !m0 SEQW GOTO U2c00
FUN_ucode_00002f2:
U02f2: tmpv0:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U02f4: WRSEGFLD(tmpv0, SS, SEL+FLGS+LIM) 
U02f5: tmpv0:= RDSEGFLD(SS_USERM, BASE) 
U02f6: WRSEGFLD(tmpv0, SS, BASE) SEQW URET1

U02f8: tmp13:= SAVEUIP(0x00, U4014) 
U02f9: tmp14:= SAVEUIP(0x01, U0c94) !m0 SEQW GOTO U0869
FUN_ucode_00002fa:
U02fa: LFNCEWAIT-> tmpv0:= RDSEGFLD(CS, SEL+FLGS+LIM) 

U02fc: WRSEGFLD(tmpv0, UNK_SEG_09, SEL+FLGS+LIM) 
U02fd: tmpv0:= RDSEGFLD(CS, BASE) 
U02fe: WRSEGFLD(tmpv0, UNK_SEG_09, BASE) SEQW URET0

U0300: tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, mode=0x0a) 
U0301: tmp3:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 SEQW GOTO U0c92
U0302: MOVETOCREG_DSZ64(tmp1, 0x3ff, 32) !m1,m2 

U0304: MOVETOCREG_DSZ64(tmp0, 0x3ff, 32) !m1,m2 
U0305: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1,m2 
U0306: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000005, U304e) !m1,m2 SEQW GOTO U0305

U0308: tmp3:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0309: LFNCEMARK-> tmp8:= UPDATEUSTATE(!0x0c) !m0 
U030a: tmp14:= SAVEUIP(0x01, U43ec) !m0 SEQW GOTO U0595

U030c: rcx:= ZEROEXT_DSZ32(tmp5) 
U030d: rdx:= SHR_DSZ64(tmpv1, 0x00000020) 
U030e: rax:= ZEROEXT_DSZ32(tmpv1) SEQW UEND0

U0310: SAVEUIP( , 0x00, U08de) 
U0311: SAVEUIP( , 0x01, U1e22) !m0 SEQW GOTO U2d1c
FUN_ucode_0000312:
U0312: tmp2:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 

U0314: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bd80) !m2 
U0315: tmp1:= ADD_DSZ64(tmp2, tmp1) 
U0316: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000bd80,  , tmp1) !m2 SEQW URET1

U0318: STAD_DSZN_ASZ32_SC1(rdi, mode=0x08,  , rax) !m1 
U0319: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 SEQW UEND0
U031a: tmm6:= unk_620(tmm5) 

U031c: tmp8:= PINTMOVDTMM2I_DSZ32(tmm6) 
U031d: tmp4:= XOR_DSZ16(0x0000411e, tmp8) 
U031e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, tmp8) SEQW GOTO U2fb8

vmresume_xlat:
U0320: tmp8:= ADD_DSZ32(0x00000001) 
U0321: LFNCEMARK-> tmp0:= MOVE_DSZ32(0x00000018) SEQW GOTO U3e00
U0322: mm3:= unk_72a(0x00000000) 

U0324: tmp4:= SHL_DSZ8(tmp3, 0x00000001) 
U0325: tmp4:= OR_DSZ8(0x00000009, tmp4) 
U0326: tmm6:= unk_741(mm4) !m2 SEQW GOTO U1bd0

vmlaunch_xlat:
U0328: tmp8:= ADD_DSZ32() 
U0329: LFNCEMARK-> tmp0:= MOVE_DSZ32(0x00000014) SEQW GOTO U3e00
U032a: tmp12:= OR_DSZ16(0x00000002, tmp12) 

U032c: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U032d: tmp3:= AND_DSZ16(0x00000002, tmp2) 
U032e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1a50) SEQW GOTO U18f9

vmwrite_r64_mem_xlat:
U0330: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0331: tmp14:= SAVEUIP(0x01, U024a) !m0 SEQW GOTO U0cda
U0332: tmm6:= unk_620(tmm5) 

U0334: tmp2:= PINTMOVDTMM2I_DSZ32(tmm6) 
U0335: tmp4:= XOR_DSZ16(0x0000411e, tmp2) 
U0336: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, tmp2) SEQW GOTO U2ff8

U0338: tmp8:= ZEROEXT_DSZ32(0x80000301) 
U0339: tmp5:= ZEROEXT_DSZ32(0x00000c41) 
U033a: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U0149

U033c: SYNCFULL-> UJMP( , U2f19) 
U033d: WRITEURAM(tmp1, 0x005c, 64) 
U033e: NOP SEQW GOTO U3780

U0340: tmp8:= ZEROEXT_DSZ32(0x80000603) 
U0341: tmp5:= ZEROEXT_DSZ32(0x000005dc) SEQW GOTO U0149
U0342: tmp11:= ZEROEXT_DSZ32(0x000022e2) 

U0344: tmp12:= WRMSLOOPCTRFBR(0x00000001) 
U0345: tmp14:= SAVEUIP(0x01, U0ca1) !m0 
U0346: tmp8:= ZEROEXT_DSZ16(0x0000fc01) SEQW GOTO U2bde

U0348: SAVEUIP_REGOVR(0x00, U0349, 0x0000) SEQW GOTO U2511
U0349: r64dst:= ADD_DSZ32(r64src) !m1,m2 SEQW UEND0
U034a: tmp9:= ZEROEXT_DSZ64(tmp10) 

U034c: tmm7:= SHUFPD(tmm7, tmm7) 
U034d: tmp9:= unk_52b(tmp15) 
U034e: tmp11:= unk_52b(tmp15) SEQW GOTO U236a

U0350: NOP 
U0351: NOP SEQW GOTO U008e
U0352: tmp4:= LDTICKLE_DSZ32_ASZ32_SC1(tmp2, mode=0x18, tmp1) !m1,m2 

U0354: unk_01f(tmp4, r64dst) !m1,m2 
U0355: tmp4:= unk_01f(tmp4, r64dst) !m1 
U0356: STAD_DSZ32_ASZ32_SC1(tmp2, mode=0x18, tmp1, tmp4) !m1,m2 SEQW UEND0

U0358: NOP 
U0359: NOP SEQW GOTO U008e
U035a: tmp2:= ZEROEXT_DSZ32(0x0000fff0) 

U035c: tmp1:= MOVEFROMCREG_DSZ64( , 0x78e) 
U035d: tmp1:= ADD_DSZ32(tmp2, tmp1) 
U035e: MOVETOCREG_DSZ64(tmp1, 0x067) !m2 SEQW GOTO U43ae

U0360: tmp4:= LDZX_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0361: tmp8:= ADD_DSZ32(0x00000001) SEQW GOTO U08fa
U0362: tmp2:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 

U0364: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U0365: tmp5:= BTS_DSZ32(0x00000000, 0x00000010) 
U0366: tmp5:= SELECTCC_DSZ32_CONDNZ(tmp2, tmp5) SEQW GOTO U28e8

U0368: tmp4:= LDZX_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0369: tmp8:= ADD_DSZ32(0x00000001) SEQW GOTO U0b2a
U036a: tmp2:= AND_DSZ32(0x00000014, tmp2) 

U036c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U6506) 
U036d: tmp2:= SUB_DSZ32(0x00000040, tmp5) 
U036e: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp2, U5191) SEQW URET1

U0370: tmp4:= LDZX_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0371: tmp8:= ADD_DSZ32(0x00000001) SEQW GOTO U0b32
U0372: unk_cc1(tmp11, 0x000038ff) 

U0374: tmp0:= LDZX_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0375: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0376: tmp13:= SAVEUIP(0x00, U1b91) SEQW GOTO U6456

U0378: tmp4:= LDZX_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0379: tmp8:= ADD_DSZ32(0x00000001) SEQW GOTO U0b3a
U037a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp8, 0x48c) 

U037c: tmp5:= ZEROEXT_DSZ32(0x0000c001) 
U037d: mm0:= unk_7c2(mm5, 0x00000000) 
U037e: LFNCEWAIT-> mm7:= FMOV( , tmm1) !m0 SEQW GOTO U21fe

U0380: MOVE_DSZ64() 
U0381: tmp12:= ZEROEXT_DSZ16(IMM_MACRO_ALIAS_IMMEDIATE) !m0 SEQW GOTO U07c1
U0382: tmp13:= ADD_DSZ32() 

U0384: tmp11:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 
U0385: GENARITHFLAGS(tmp11, tmp13) !m2 
U0386: r64dst:= ZEROEXT_DSZ32N(tmp12, r64dst) !m1 SEQW UEND0

U0388: NOP 
U0389: NOP SEQW GOTO U2769
U038a: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 

U038c: tmp13:= ADD_DSZ32() 
U038d: tmp11:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 
U038e: GENARITHFLAGS(tmp11, tmp13) !m2 SEQW UEND0

U0390: tmp12:= unk_dd6(r64base, r64idx) !m0 
U0391: xmm2:= unk_7cf(xmmdst, tmm4) SEQW UEND0
U0392: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp6, U0394) SEQW GOTO U1a50

U0394: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000b, U5ac2) !m0,m2 
U0395: tmp2:= ZEROEXT_DSZ32(0x0000000d) 
U0396: LFNCEMARK-> tmm6:= unk_701(mm2) !m2 SEQW GOTO U1a50

U0398: tmp12:= unk_dd6(r64base, r64idx) !m0 
U0399: xmm2:= unk_7cf(xmmdst, tmm4) SEQW UEND0
U039a: SAVEUIP_REGOVR(0x01, U039c, 0x0000) !m0 SEQW GOTO U32cd

U039c: tmp6:= READURAM( , 0x0073, 64) 
U039d: MOVETOCREG_DSZ64(tmp6, 0x39e, 32) !m1,m2 
U039e: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW GOTO U4c7a

U03a0: tmp0:= ZEROEXT_DSZ32(0x0001000e) 
U03a1: LFNCEMARK-> tmp1:= ZEROEXT_DSZ32(0x0000000e) SEQW GOTO U0b72
U03a2: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3388) 

U03a4: NOP 
U03a5: tmp1:= SUB_DSZ32(0x00000124, tmp8) 
U03a6: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U046c) SEQW GOTO U2711

U03a8: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U03a9: tmp1:= unk_00f(r64dst, tmp1) !m1,m2 
U03aa: STAD_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, tmp1) !m0,m1,m2 SEQW UEND0

U03ac: MSSTOP-> NOP 
U03ad: unk_25e( , 0x000000ff) 
U03ae: tmp4:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 SEQW GOTO U4644

U03b0: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U03b1: unk_308(0x00000001, tmp1) !m1,m2 
U03b2: tmp1:= unk_308(0x00000001, tmp1) !m1 SEQW GOTO U03aa

U03b4: tmm0:= FMOV( , tmm2) 
U03b5: tmm1:= FMOV( , tmm3) 
U03b6: UJMP( , tmp2) 

U03b8: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U03b9: unk_30a(0xffffffffffffffff, tmp1) !m1,m2 
U03ba: tmp1:= unk_30a(0xffffffffffffffff, tmp1) !m1 SEQW GOTO U03aa

U03bc: SAVEUIP( , 0x00, U3a34) 
U03bd: tmpv0:= READURAM( , 0x001e, 64) SEQW SAVEUIP1 U03beSEQW GOTO U334d
U03be: UJMP( , tmp15) 

U03c0: tmp0:= unk_14b(tmp2, r64src) !m1 
U03c1: tmp0:= SELECTCC_DSZ32_CONDBE(tmp0, 0x00000015) 
U03c2: SIGEVENT( , tmp0) SEQW UEND0

U03c4: r15:= ZEROEXT_DSZ32() 
U03c5: tmp0:= ZEROEXT_DSZ32(0x000006c0) 
U03c6: tmp0:= CONCAT_DSZ16(0x00000005, tmp0) SEQW GOTO U50ac

U03c8: tmp0:= OR_DSZ64(r64dst) 
U03c9: r64dst:= ZEROEXT_DSZ32N(r64src, r64dst) !m1 
U03ca: r64src:= ZEROEXT_DSZ32N(tmp0, r64src) !m1 SEQW UEND0

U03cc: tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 
U03cd: tmp1:= SUB_DSZ32(0x0000019c, tmp8) 
U03ce: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U1881) SEQW GOTO U189a

U03d0: tmp0:= OR_DSZ64(r64dst) 
U03d1: r64dst:= unk_07c(r64src, r64dst) 
U03d2: r64src:= unk_07c(tmp0, r64src) SEQW UEND0

U03d4: tmp2:= LDZX_DSZN_ASZ32_SC4( , 0x00000000, mode=0x12, tmp1) !m1 
U03d5: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U4bd5) 
U03d6: tmp2:= AND_DSZ8(tmp3, tmp2) SEQW URET1

U03d8: tmp0:= OR_DSZ64(r64dst) 
U03d9: r64dst:= unk_0bc(r64src, r64dst) 
U03da: r64src:= unk_0fc(tmp0, r64src) SEQW UEND0

U03dc: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x06c) !m2 
U03dd: tmp2:= MOVEFROMCREG_DSZ64( , 0x2bc, 32) !m1 
U03de: tmp2:= MOVETOCREG_BTS_DSZ64(tmp2, 0x00000001, 0x2bc) !m1,m2 SEQW UEND0

U03e0: tmp0:= OR_DSZ64(r64dst) 
U03e1: r64dst:= unk_0fc(r64src, r64dst) 
U03e2: r64src:= unk_0bc(tmp0, r64src) SEQW UEND0

U03e4: tmp10:= ZEROEXT_DSZ64(0x00000001) 
U03e5: PORTOUT_DSZ32_ASZ16_SC1(0x00d4,  , tmp10) !m2 
U03e6: NOP SEQW GOTO U3b8e

U03e8: tmp0:= OR_DSZN(rdx) !m1 
U03e9: rdx:= ZEROEXT_DSZ32N(rax, rdx) !m1 
U03ea: rax:= ZEROEXT_DSZ32N(tmp0, rax) !m1 SEQW UEND0

U03ec: NOP 
U03ed: NOP 
U03ee: tmp5:= SAVEUIP( , 0x00, U0c52) SEQW GOTO U5f64

U03f0: tmp0:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U03f1: STAD_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, r64dst) !m0,m1,m2 
U03f2: r64dst:= ZEROEXT_DSZ32N(tmp0, r64dst) !m1 SEQW UEND0

U03f4: tmm0:= unk_525(tmm0, xmmsrc) !m0 
U03f5: tmm1:= unk_565(xmmdst, tmm0) !m0 
U03f6: xmm1:= unk_72f(tmm1) !m1 SEQW GOTO U0a24

U03f8: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U03f9: unk_01f(tmp1, IMM_MACRO_ALIAS_IMMEDIATE) !m0,m1,m2 
U03fa: tmp1:= unk_01f(tmp1, IMM_MACRO_ALIAS_IMMEDIATE) !m0,m1 SEQW GOTO U03aa

U03fc: unk_c64(tmp10) 
U03fd: WRITEURAM(tmp10, 0x000b, 64) !m2 
U03fe: tmp0:= SAVEUIP(tmp10, 0x00, U4b88) SEQW GOTO U18d1

U0400: tmp0:= OR_DSZ64(r64dst) 
U0401: r64dst:= ZEROEXT_DSZ32N(r64src, r64dst) !m1 
U0402: r64src:= ADD_DSZ32(tmp0, r64src) !m1,m2 SEQW UEND0

U0404: LFNCEWAIT-> tmm0:= FMOV( , 0x00000011) !m0 
U0405: mm0:= FMOV( , tmm7) !m0 
U0406: tmm0:= FMOV( , 0x00000091) !m0 SEQW GOTO U1bd0

U0408: tmp0:= OR_DSZ64(r64dst) 
U0409: r64dst:= unk_0bc(r64src, r64dst) 
U040a: r64src:= unk_3e0(tmp0, r64src) !m2 SEQW UEND0

U040c: tmp13:= MOVEFROMCREG_DSZ64( , 0x000) 
U040d: tmp9:= BT_DSZ32(tmp13, 0x00000011) 
U040e: tmp9:= SELECTCC_DSZ32_CONDB(tmp9, 0x00010000) SEQW GOTO U3136

U0410: tmp0:= OR_DSZ64(r64dst) 
U0411: r64dst:= unk_0fc(r64src, r64dst) 
U0412: r64src:= unk_3a0(tmp0, r64src) !m2 SEQW UEND0

U0414: tmp13:= MOVEFROMCREG_DSZ64( , 0x000) !m2 
U0415: tmp13:= SIGEVENT(tmp13, 0x00000003) 
U0416: SYNCFULL-> UJMP( , tmp14) 

U0418: tmp0:= OR_DSZ64(r64dst) 
U0419: r64dst:= unk_07c(r64src, r64dst) 
U041a: r64src:= unk_360(tmp0, r64src) !m2 SEQW UEND0

U041c: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000015, U2121) !m1 
U041d: tmp15:= MOVEFROMCREG_DSZ64( , 0x701) 
U041e: MOVETOCREG_BTS_DSZ64(tmp15, 0x00000012, 0x701) !m0,m2 SEQW GOTO U2121

U0420: tmp0:= LDZX_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0421: tmp0:= unk_2a2(tmp0, r64dst) !m2 
U0422: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0

U0424: tmp10:= RDSEGFLD(ES, UNK_FLD_0c) 
U0425: tmp15:= OR_DSZN(rdi) !m1 
U0426: tmp10:= ADD_DSZN(tmp15, tmp10) !m1 SEQW GOTO U35ac

rdrand_xlat:
U0428: tmp4:= ZEROEXT_DSZ32(0x0000002b) 
U0429: tmp2:= ZEROEXT_DSZ32(0x40004e00) 
U042a: tmp0:= ZEROEXT_DSZ32(0x00000439) SEQW GOTO U19c9

U042c: tmp0:= READURAM( , 0x0024, 64) 
U042d: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U042e: tmp0:= AND_DSZ32(0x80fffffc, tmp0) SEQW GOTO U5b8a

rdseed_xlat:
U0430: tmp4:= ZEROEXT_DSZ32(0x00000030) 
U0431: tmp2:= ZEROEXT_DSZ32(0x40004e80) 
U0432: tmp0:= ZEROEXT_DSZ32(0x0000043d) SEQW GOTO U19c9

U0434: tmp12:= STC(0x00004c74) 
U0435: tmp1:= ZEROEXT_DSZ32(0x70000000) 
U0436: tmp2:= MOVE_DSZ32(0x00000006) SEQW GOTO U4c3a

U0438: tmp0:= LDZX_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0439: tmp0:= unk_2a5(tmp0, r64dst) !m2 
U043a: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0

FUN_ucode_000043c:
U043c: LFNCEWAIT-> unk_dff() 
U043d: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x63a) !m0 
U043e: MOVETOCREG_OR_DSZ64( , 0x00000007, 0x63e) !m0 SEQW GOTO U2906

U0440: tmp0:= LDZX_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0441: tmp0:= unk_2a5(IMM_MACRO_ALIAS_IMMEDIATE, tmp0) !m0,m2 
U0442: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0

FUN_ucode_0000444:
U0444: unk_dff() 
U0445: LFNCEWAIT-> MOVETOCREG_OR_DSZ64( , 0x00000001, 0x63a) 
U0446: MOVETOCREG_OR_DSZ64( , 0x0000000f, 0x63e) !m0 SEQW GOTO U2906

U0448: tmp0:= unk_0bc(r64src) 
U0449: tmp0:= unk_2ef(tmp0, rax) !m2 
U044a: rax:= ZEROEXT_DSZ16(tmp0, rax) SEQW UEND0

U044c: tmp3:= AND_DSZ64(tmp6, tmp5) 
U044d: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U076d
U044e: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000003, U59f4) !m0,m2 SEQW URET1

U0450: tmp0:= LDZX_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0451: tmp0:= unk_2ef(tmp0, rax) !m2 
U0452: rax:= ZEROEXT_DSZ16(tmp0, rax) SEQW UEND0

U0454: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U05b4
U0455: tmp7:= READURAM( , tmp1) 
U0456: r64src:= ZEROEXT_DSZ64N(tmp7) !m1 SEQW UEND0

U0458: tmp3:= LDTICKLE_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0459: tmp3:= ROR_DSZN(tmp3, 0x00000001) !m1 
U045a: SAVEUIP( , 0x01, U057c) !m0 SEQW GOTO U0952

U045c: rsi:= ZEROEXT_DSZ16N(rsi, rsi) !m1 
U045d: rdi:= ZEROEXT_DSZ16N(rdi, rdi) !m1 
U045e: rcx:= ZEROEXT_DSZ16N(rcx, rcx) !m1 SEQW UEND0

U0460: tmp3:= OR_DSZ64(r64src) 
U0461: SAVEUIP( , 0x01, U080a) !m0 
U0462: tmp0:= RCXBTCNTMSK_DSZ32(rcx) !m1 SEQW GOTO U0964

U0464: GENARITHFLAGS(0x0000003f, tmp10) !m2 
U0465: rcx:= ZEROEXT_DSZ16N(tmp4, rcx) !m1 
U0466: SYNCWAIT-> SFENCE() SEQW UEND0

U0468: tmp3:= OR_DSZ64(r64src) 
U0469: SAVEUIP( , 0x01, U080a) !m0 
U046a: tmp0:= RCXBTCNTMSK_DSZ32(rcx) !m1 SEQW GOTO U0974

U046c: tmp1:= MOVEFROMCREG_DSZ64( , 0x105) 
U046d: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000002, U2711) !m0,m1 
U046e: LFNCEMARK-> WRITEURAM(tmp5, 0x0037, 32) !m2 SEQW GOTO U6380

U0470: tmp3:= LDTICKLE_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0471: tmp0:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0472: SAVEUIP( , 0x01, U057c) !m0 SEQW GOTO U0982

FUN_ucode_0000474:
U0474: tmp2:= OR_DSZ32(0x00100000, tmp2) 
U0475: tmp2:= OR_DSZ32(tmp1, tmp2) 
U0476: tmp5:= CONCAT_DSZ32(tmp2, tmp5) SEQW GOTO U37c8

U0478: tmp3:= LDTICKLE_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0479: tmp0:= OR_DSZ64(rcx) 
U047a: SAVEUIP( , 0x01, U057c) !m0 SEQW GOTO U0982

U047c: TESTUSTATE( , VMX, !0x0024) !m0,m2 ? SEQW GOTO U57cd
U047d: tmp3:= MOVEFROMCREG_DSZ64( , 0x7bb) 
U047e: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000000a, U2711) !m0,m1 SEQW URET1

U0480: tmp0:= LDZX_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0481: tmp0:= unk_0ef(tmp0) 
U0482: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0

FUN_ucode_0000484:
U0484: tmp1:= SHL_DSZ32(tmp1, 0x00000006) 
U0485: tmp1:= NOTAND_DSZ32(tmp1, 0x00000c04) 
U0486: tmp5:= ADD_DSZ64(tmp1, tmp5) SEQW GOTO U189a

U0488: tmp5:= MOVEFROMCREG_DSZ64( , 0x7fe) !m2 
U0489: tmp5:= OR_DSZ32(0x00000400, tmp5) 
U048a: SYNCFULL-> MOVETOCREG_BTR_DSZ64(tmp5, 0x00000010, 0x7fe) !m2 SEQW GOTO U221e

U048c: tmp13:= unk_222(tmp1) 
U048d: tmp13:= SUB_DSZ32(tmp13, 0x00000020) 
U048e: tmp13:= SHL_DSZ64(0xffffffffffffffff, tmp13) SEQW GOTO U078d

U0490: tmp0:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0491: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0492: tmp0:= unk_f3f(rsp) !m0,m1 SEQW UEND0

U0494: tmp1:= AND_DSZ32(0x00000007, tmp5) 
U0495: tmp1:= CMOVCC_DSZ32_CONDNZ(tmp1, 0x00000006) 
U0496: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000006, U2711) !m0,m1 SEQW GOTO U3200

U0498: tmp0:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0499: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U049a: tmp0:= unk_f0f(rsp) !m1 SEQW UEND0

U049c: tmp1:= AND_DSZ32(0x00000005, tmp1) 
U049d: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000005, U2711) !m1 
U049e: tmp5:= AND_DSZ32(0x00000001, tmp5) SEQW GOTO U3398

U04a0: tmp0:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, mode=0x1a) 
U04a1: rsp:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U04a2: rdx:= ZEROEXT_DSZ16(tmp0, rdx) SEQW UEND0

FUN_ucode_00004a4:
U04a4: tmp2:= ADD_DSZ32(tmp2, tmp1) 
U04a5: tmp2:= SHR_DSZ32(tmp5, tmp2) 
U04a6: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2711) SEQW GOTO U321c

U04a8: tmp0:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, mode=0x1a) 
U04a9: rsp:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U04aa: r64src:= ZEROEXT_DSZ16(tmp0, r64src) SEQW UEND0

U04ac: tmp9:= ZEROEXT_DSZ32(0x00000002) 
U04ad: tmp2:= ZEROEXT_DSZ32(0x00000008) 
set_carry_uend:
U04ae: tmp0:= ZEROEXT_DSZ32(0x00000003) SEQW URET1

U04b0: tmm2:= unk_51b(mm2, mm0) 
U04b1: tmm3:= unk_51b(mm2, mm0) 
U04b2: mm2:= unk_44f(tmm3, tmm2) SEQW UEND0

U04b4: tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 
U04b5: AETTRACE( , tmp3, 0x0d) 
U04b6: MOVEINSERTFLGS_DSZ32(0x00000001) !m2 SEQW GOTO U1bd0

U04b8: tmp8:= unk_d76(r64base, r64idx) !m0 
U04b9: tmm2:= unk_51b(mm2, tmm0) 
U04ba: tmm3:= unk_51b(mm2, tmm0) SEQW GOTO U04b2

U04bc: tmp2:= ZEROEXT_DSZ32(0x00000002) 
U04bd: SAVEUIP_REGOVR(0x01, U04be, 0x0032) !m0 
U04be: SAVEUIP( , 0x01, U079d) !m0 SEQW GOTO U1cfa

U04c0: tmp12:= unk_dd6(r64base, r64idx) !m0 
U04c1: tmm0:= unk_5ab(tmm4) 
U04c2: tmm4:= unk_5ab(tmm4) SEQW GOTO U0a0a

U04c4: MOVETOCREG_BTS_DSZ64( , 0x00000002, 0x29e) !m0,m1,m2 
U04c5: tmp0:= ZEROEXT_DSZ32(0x00002034) 
U04c6: SAVEUIP( , 0x01, U079d) !m0 SEQW GOTO U0b99

U04c8: tmm1:= SHUFPD(xmmsrc, xmmdst) 
U04c9: tmm2:= SHUFPD(xmmsrc, xmmdst) 
U04ca: xmm2:= unk_4cf(tmm2, tmm1) SEQW UEND0

U04cc: tmp15:= AND_DSZ32(0x00002000, tmp0) 
U04cd: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000400) 
U04ce: MOVETOCREG_DSZ64(tmp15, 0x00c) !m2 SEQW GOTO U4841

U04d0: tmp8:= unk_dd6(r64base, r64idx) !m0 
U04d1: tmm1:= SHUFPD(tmm0, xmmdst) 
U04d2: tmm2:= SHUFPD(tmm0, xmmdst) SEQW GOTO U04ca

U04d4: TESTUSTATE( , UCODE, !UST_MSLOOPCTR_NONZERO) !m0 ? SEQW URET1
U04d5: STADSTGBUF_DSZ64_ASZ16_SC1(tmp15,  , tmp7) 
U04d6: tmp15:= ADD_DSZ32(0x00000020, tmp15) SEQW GOTO U04d4

U04d8: tmp9:= unk_dd6(r64base, r64idx) !m0 
U04d9: tmm7:= unk_511(xmmdst, xmm0) !m1 
U04da: xmm2:= unk_510(tmm1, tmm7) !m1 SEQW UEND0

FUN_ucode_00004dc:
U04dc: TESTUSTATE( , UCODE, !UST_MSLOOPCTR_NONZERO) !m0 ? SEQW URET1
U04dd: tmp7:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp15) 
U04de: tmp15:= ADD_DSZ32(0x00000020, tmp15) SEQW GOTO U04dc

U04e0: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U04e1: tmp1:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U04e2: tmm3:= unk_6f0(xmmsrc, xmmdst) !m0,m2 SEQW GOTO U0a1d

FUN_ucode_00004e4:
U04e4: TESTUSTATE( , UCODE, !UST_MSLOOPCTR_NONZERO) !m0 ? SEQW URET1
U04e5: STADSTGBUF_DSZ64_ASZ16_SC1(tmp15,  , 0x00000000) 
U04e6: tmp15:= ADD_DSZ32(0x00000020, tmp15) SEQW GOTO U04e4

U04e8: tmp9:= unk_d16(r64base, r64idx) !m0 
U04e9: tmm1:= SHUFPD(tmm1, tmm1) 
U04ea: xmm2:= unk_5f8(xmmdst, tmm1) !m0 SEQW UEND0

U04ec: tmp1:= unk_208(0x00000001) !m1 
U04ed: tmp4:= unk_207(0x00080000) !m1 
U04ee: tmp4:= ADD_DSZN(tmp4, tmp1) !m1 SEQW URET0

U04f0: tmm1:= unk_4b2( , xmmsrc) !m0 
U04f1: tmm2:= unk_4b3( , xmmdst) !m0 
U04f2: xmm2:= unk_690(tmm1, tmm2) SEQW UEND0

U04f4: tmp15:= unk_205() !m1 
U04f5: tmp4:= MOVEMERGEFLGS_DSZ64(tmp4, tmp15) 
U04f6: r64dst:= CMOVCC_DSZ64_CONDZ(tmp4, r64dst) SEQW UEND0

U04f8: tmp10:= unk_dc6(r64base, r64idx) !m0 
U04f9: tmm0:= unk_526(xmmdst, tmm2) !m0 
U04fa: xmm0:= unk_5a6(xmmdst, tmm0) !m0 SEQW GOTO U082a

FUN_ucode_00004fc:
U04fc: tmp0:= ZEROEXT_DSZ32(0x00000700) 
U04fd: tmp3:= ZEROEXT_DSZ32(0x00000018) 
U04fe: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xffffffffffffffe8, mode=0x01,  , tmp2) SEQW GOTO U31f1

U0500: tmm3:= SHUFPD(xmmsrc, xmmsrc) 
U0501: tmm3:= unk_6f7(tmm3) !m2 
U0502: tmm2:= unk_6f7(xmmsrc) !m2 SEQW GOTO U0a2d

U0504: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x0b4) !m2 
U0505: TESTUSTATE( , UCODE, 0x0400) ? SEQW URET0
U0506: SAVEUIP( , 0x01, U05ec) !m0 SEQW GOTO U273a

U0508: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0509: tmm4:= SHUFPD(xmmsrc, xmmdst) 
U050a: tmm1:= SHUFPD(xmmsrc, xmmdst) SEQW GOTO U083d

FUN_ucode_000050c:
U050c: CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000010, U29b1) !m1 
U050d: CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000011, U29b1) !m1 
U050e: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000012, U29b1) !m0,m1 SEQW GOTO U6380

U0510: tmp8:= unk_d27(r64base, r64idx) !m0,m1 
U0511: tmm0:= unk_604(tmm0) !m1 
U0512: mm0:= unk_60f(tmm0, IMM_MACRO_ALIAS_STi) !m0,m2 SEQW UEND1

FUN_ucode_0000514:
U0514: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x065) 
U0515: tmpv1:= MOVEFROMCREG_DSZ64( , 0x067) 
U0516: tmpv0:= SUB_DSZN(tmpv0, tmpv1) !m1 SEQW URET1

U0518: tmp8:= unk_d27(r64base, r64idx) !m0,m1 
U0519: tmm0:= unk_604(tmm0) !m1 
U051a: mm0:= unk_60f(IMM_MACRO_ALIAS_STi, tmm0) !m0,m2 SEQW UEND1

U051c: tmpv1:= MOVEFROMCREG_DSZ64( , 0x01a) 
U051d: tmpv0:= MOVEFROMCREG_DSZ64( , 0x065) 
U051e: tmpv0:= SUB_DSZN(tmpv0, tmpv1) !m1 SEQW URET1

U0520: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0521: LFNCEMARK-> tmp10:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0522: unk_ca4(tmp10) SEQW GOTO U03fc

U0524: tmpv2:= MOVEFROMCREG_DSZ64( , 0x009) 
U0525: tmpv2:= ADD_DSZ32(tmpv2, 0x00000020) 
U0526: SYNCFULL-> MOVETOCREG_DSZ64(tmpv0, tmpv2) !m2 SEQW URET0

U0528: unk_25e( , 0x000000ff) 
U0529: tmm0:= unk_623() 
U052a: tmp8:= unk_d9e(r64base, r64idx) !m0 SEQW UEND0

U052c: tmpv2:= MOVEFROMCREG_DSZ64( , 0x009) 
U052d: tmpv2:= ADD_DSZ32(0x00000001, tmpv2) 
U052e: tmpv2:= MOVETOCREG_AND_DSZ64(tmpv2, 0x0000001f, 0x009) !m0,m2 SEQW GOTO U0525

U0530: mm0:= unk_73a() 
U0531: tmp0:= AND_DSZ16(0x00007f00, tmp0) 
U0532: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x48c) !m2 SEQW GOTO U008e

U0534: tmpv2:= MOVEFROMCREG_DSZ64( , 0x009) 
U0535: tmpv2:= ADD_DSZ32(tmpv2, 0x00000040) 
U0536: SYNCFULL-> MOVETOCREG_DSZ64(tmpv1, tmpv2) !m2 SEQW URET1

U0538: unk_25e( , 0x000000ff) 
U0539: mm0:= unk_73a() 
U053a: STAD_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, tmp0) !m0 SEQW UEND0

U053c: tmpv2:= MOVEFROMCREG_DSZ64( , 0x009) 
U053d: tmpv2:= ADD_DSZ32(0x00000001, tmpv2) 
U053e: tmpv2:= MOVETOCREG_AND_DSZ64(tmpv2, 0x0000001f, 0x009) !m0,m2 SEQW GOTO U0535

U0540: tmp8:= unk_d27(r64base, r64idx) !m0,m1 
U0541: tmm0:= unk_604(tmm0) !m1 
U0542: tmp15:= FCOM2(IMM_MACRO_ALIAS_STi, tmp8) !m0,m2 SEQW UEND1

U0544: tmpv2:= SHL_DSZ64(tmpv2, 0x00000008) 
U0545: tmpv3:= SHR_DSZ64(tmpv0, 0x00000038) 
U0546: MOVETOCREG_OR_DSZ64(tmpv3, 0x08b, tmpv2) !m2 SEQW GOTO U66f9

U0548: tmp8:= unk_d27(r64base, r64idx) !m0,m1 
U0549: tmm0:= unk_604(tmm0) !m1 
U054a: tmm7:= unk_60a(tmm0, IMM_MACRO_95) !m0,m2 SEQW UEND1

U054c: tmp1:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 
U054d: MOVETOCREG_BTR_DSZ64(tmp1, 0x238, tmp0) !m1 
U054e: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW URET0

U0550: r64dst:= unk_c4e(r64src, rdi) 
U0551: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0552: r64dst:= unk_c6e(r64src, rdi) SEQW UEND0

U0554: UJMPCC_DIRECT_NOTTAKEN_CONDP(tmp6, U061c) 
U0555: tmm0:= unk_5b9(tmm7) 
U0556: LFNCEMARK-> tmm6:= unk_5ff(tmm0) !m2 SEQW GOTO U061e

U0558: unk_25e( , 0x000000ff) 
U0559: tmm0:= unk_692() 
U055a: tmp8:= unk_d1e(r64base, r64idx) !m0 SEQW UEND0

U055c: mm3:= unk_76b(tmm7) 
U055d: tmm6:= unk_743(mm3, tmm6) 
U055e: tmm0:= unk_485(tmm6, tmm7) SEQW GOTO U6fb4

U0560: tmp2:= SAVEUIP(r64src, 0x01, U0c24) !m0 
U0561: MOVE_DSZ32() 
U0562: LFNCEMARK-> LBSYNC(0x00000002) SEQW GOTO U456e

U0564: rdx:= ZEROEXT_DSZ32() 
U0565: tmp0:= SHR_DSZ64(tmp0, 0x00000038) 
U0566: rax:= OR_DSZ64(0x00000001, tmp0) SEQW UEND0

U0568: tmp14:= SAVEUIP(0x01, U07ee) !m0 
U0569: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U056a: SAVEUIP( , 0x00, U2bfd) SEQW GOTO U0862

U056c: tmm7:= SHUFPD(tmm7, tmm7) 
U056d: tmm7:= unk_7d0(mm1, tmm7) 
U056e: xmm2:= unk_5b9(tmm7) SEQW UEND0

U0570: tmp2:= AND_DSZ16(0x00000003, r64src) 
U0571: SAVEUIP( , 0x01, U0c79) !m0 
U0572: SAVEUIP( , 0x00, U05ac) SEQW GOTO U0864

U0574: STAD_DSZN_ASZ32_SC4(tmp2, IMM_MACRO_13, mode=0x0b, tmp4, rax) !m0,m1 
U0575: r64dst:= STADTICKLE_DSZN_ASZ32_SC4(tmp2, mode=0x0b, tmp4) !m1 
U0576: tmp2:= STADTICKLE_DSZN_ASZ32_SC4(tmp2, IMM_MACRO_ALIAS_DATASIZE, mode=0x0b, tmp4) !m0,m1 SEQW UEND0

U0578: unk_25e( , 0x000000ff) 
U0579: tmp0:= RDSEGFLD(DS_KERNM, SEL) 
U057a: STAD_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, tmp0) !m0 SEQW UEND0

U057c: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U057d: tmp8:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U057e: STAD_DSZN_ASZ32_SC1(tmp8, mode=0x18,  , tmp3) !m1 SEQW GOTO U080c

U0580: tmp0:= RDSEGFLD(DS_KERNM, SEL) 
U0581: STAD_DSZ16_ASZ32_SC1(rsp, SS,  , 0xfffffffffffffffc, mode=0x0a, tmp0) 
U0582: rsp:= SUB_DSZN(0x00000004, rsp) !m1 SEQW UEND0

U0584: tmp2:= MOVEFROMCREG_DSZ64( , 0x287, 32) !m1,m2 
U0585: tmp0:= ZEROEXT_DSZ32(0x00002004) 
U0586: tmp1:= SHR_DSZ32(tmp2, 0x0000000c) SEQW GOTO U1b36

U0588: tmp0:= RDSEGFLD(DS_KERNM, SEL) 
U0589: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U058a: tmp0:= unk_f0f(rsp) !m1 SEQW UEND0

U058c: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x29d) !m1,m2 
U058d: tmp0:= ZEROEXT_DSZ32(0x00000006) 
U058e: tmp5:= SAVEUIP( , 0x00, U00a9) SEQW GOTO U5f64

U0590: tmp3:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0591: LFNCEMARK-> tmp8:= UPDATEUSTATE( , 0x14) 
U0592: tmp14:= SAVEUIP(0x01, U1429) !m0 

U0594: UPDATEUSTATE( , !0x08) !m0 
U0595: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0596: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U5cd2

U0598: tmp1:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0599: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000048) 
U059a: tmp0:= ZEROEXT_DSZ32(0x0000676a) SEQW GOTO U35aa

U059c: WRITEURAM( , 0x00000000, 0x0053, 64) !m2 
U059d: SAVEUIP_REGOVR(0x01, U059e, 0x0280) !m0 
U059e: SAVEUIP( , 0x01, U6b8c) !m0 SEQW GOTO U1b2a

U05a0: tmp1:= ZEROEXT_DSZ16(rdx) 
U05a1: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000008) 
U05a2: tmp0:= ZEROEXT_DSZ32(0x0000676a) SEQW GOTO U35aa

FUN_ucode_00005a4:
U05a4: tmm5:= unk_496(tmm5, 0x00000000) 
U05a5: tmm6:= unk_494( , tmm6) 
U05a6: mm0:= unk_6a6(tmm5, tmm6) !m0,m2 SEQW GOTO U1bd0

U05a8: tmp1:= ZEROEXT_DSZ16(rdx) 
U05a9: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000018) 
U05aa: tmp0:= ZEROEXT_DSZ32(0x00007769) SEQW GOTO U0424

U05ac: tmp3:= AND_DSZ16(0x00000003, r64dst) 
U05ad: tmp5:= SUB_DSZ16(tmp3, tmp2) 
U05ae: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp5, U2220) SEQW URET1

U05b0: tmp1:= ZEROEXT_DSZ16(rdx) 
U05b1: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000038) 
U05b2: tmp0:= ZEROEXT_DSZ32(0x00001c19) SEQW GOTO U0424

U05b4: r64src:= READURAM( , 0x003d, 64) 
U05b5: r64src:= TESTUSTATE(r64src, UCODE, 0x0004) ? SEQW GOTO U221e
U05b6: r64src:= MOVEFROMCREG_DSZ64( , 0x7f8) SEQW UEND0

U05b8: tmp1:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U05b9: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000040) 
U05ba: tmp0:= ZEROEXT_DSZ32(0x00004481) SEQW GOTO U35a9

U05bc: tmp1:= READURAM( , 0x005c, 64) 
U05bd: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000011, U3398) !m1,m2 
U05be: SYNCFULL-> PORTOUT_DSZ32_ASZ16_SC1(0x1e68,  , tmp5) !m1,m2 SEQW GOTO U3398

U05c0: tmp1:= ZEROEXT_DSZ16(rdx) 
U05c1: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000000) 
U05c2: tmp0:= ZEROEXT_DSZ32(0x00004481) SEQW GOTO U35a9

FUN_ucode_00005c4:
U05c4: tmp2:= MOVEFROMCREG_DSZ64( , 0x51b) 
U05c5: tmp2:= AND_DSZ32(0xffff0000, tmp2) 
U05c6: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp2, 0x00000003, 0x513) !m0 SEQW GOTO U6380

U05c8: tmp1:= ZEROEXT_DSZ16(rdx) 
U05c9: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000010) 
U05ca: tmp0:= ZEROEXT_DSZ32(0x00007771) SEQW GOTO U01f2

U05cc: tmp2:= MOVEFROMCREG_DSZ64( , 0x572) 
U05cd: tmp3:= MOVEFROMCREG_DSZ64( , 0x573) 
U05ce: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000000b, U304e) !m0,m1,m2 SEQW URET1

U05d0: tmp1:= ZEROEXT_DSZ16(rdx) 
U05d1: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000030) 
U05d2: tmp0:= ZEROEXT_DSZ32(0x00002c35) SEQW GOTO U01f2

U05d4: SAVEUIP( , 0x00, U4f5e) 
U05d5: tmp11:= READURAM( , 0x0073, 64) !m2 
U05d6: SYNCFULL-> tmp3:= MOVETOCREG_DSZ64(tmp6, 0x752) !m2 SEQW GOTO U639e

U05d8: tmp2:= MOVEMERGEFLGS_DSZ32(0x00000004) !m2 
U05d9: tmp4:= ZEROEXT_DSZ32(IMM_MACRO_ALIAS_RIP) !m0 
U05da: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp2, U0a7a) SEQW GOTO U221e

U05dc: tmp2:= ZEROEXT_DSZ32(0x00000003) 
U05dd: tmp8:= ZEROEXT_DSZ32() 
U05de: tmp4:= ZEROEXT_DSZ64N(IMM_MACRO_ALIAS_RIP) !m0,m1 SEQW GOTO U0a7d

U05e0: tmp11:= READURAM( , 0x001e, 64) !m2 
U05e1: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U05e2: r64src:= ZEROEXT_DSZ64N(tmp11) !m1 SEQW UEND0

U05e4: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000014, U4b1c) 
U05e5: SAVEUIP( , 0x01, U4b1c) !m0 
U05e6: tmpv2:= READURAM( , 0x0057, 64) SEQW GOTO U601e

U05e8: tmp11:= MOVEFROMCREG_DSZ64( , 0x529) 
U05e9: TESTUSTATE( , SYS, UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW GOTO U2c28
U05ea: r64src:= ZEROEXT_DSZ64N(tmp11) !m1 SEQW UEND0

U05ec: tmp15:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U05ed: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000008, U016a) 
U05ee: tmp13:= SAVEUIP(0x00, U016a) SEQW GOTO U5ec6

U05f0: tmp8:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U05f1: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U05f2: SAVEUIP( , 0x00, U0876) SEQW GOTO U0311

U05f4: tmp0:= BTS_DSZ64(0x00000000, 0x0000003e) 
U05f5: MOVETOCREG_DSZ64(tmp0, 0x211, 32) !m1 
U05f6: SYNCFULL-> MOVETOCREG_DSZ64(tmp10, 0x7f8) !m2 SEQW GOTO U5a59

U05f8: tmp1:= UPDATEUSTATE(!0x40) !m0 
U05f9: LFNCEMARK-> tmp15:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U05fa: TESTUSTATE( , SYS, UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW GOTO U603e

U05fc: tmp12:= ZEROEXT_DSZ64N(IMM_MACRO_ALIAS_RIP) !m0,m1 
U05fd: tmp0:= SHR_DSZ32(tmp15, 0x0000001c) 
U05fe: tmp13:= OR_DSZ32(tmp1, tmp0) SEQW GOTO U29ed

U0600: tmp1:= LDZX_DSZN_ASZ32_SC1(rdi, mode=0x08) !m1 
U0601: SUB_DSZ32(tmp1, rax) !m1,m2 
U0602: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 SEQW UEND0

U0604: tmp0:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U0605: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000006, 0x2df) !m0,m1,m2 
U0606: SIGEVENT( , 0x00000032) SEQW GOTO U079d

U0608: tmp1:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 
U0609: rax:= ZEROEXT_DSZ32N(tmp1, rax) !m1 
U060a: rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 SEQW UEND0

U060c: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x630) !m2 
U060d: MOVETOCREG_DSZ64( , 0x00000000, 0x631) !m2 
U060e: SAVEUIP( , 0x00, U61aa) SEQW GOTO U4c2a

U0610: tmp4:= OR_DSZN(rcx) !m1 
U0611: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U0466) 
U0612: SIGEVENT( , 0x0000003f) SEQW GOTO U3566

U0614: tmp11:= AND_DSZ32(0x00000007, tmp11) 
U0615: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, U3d1c) 
U0616: tmp15:= READURAM( , 0x0007, 64) SEQW GOTO U5f92

U0618: SAVEUIP_REGOVR(0x01, U0619, 0x0000) !m0 SEQW GOTO U0da6
U0619: tmp7:= unk_07f(tmp7, tmp2) !m2 
U061a: r64src:= ZEROEXT_DSZ64N(tmp7) !m1 SEQW UEND0

U061c: LFNCEMARK-> tmm0:= unk_62e(0x00000000) !m1,m2 
U061d: tmm0:= unk_53c( , tmm0) !m1 
U061e: tmp9:= BTS_DSZ16(tmp9, 0x0000000f) SEQW GOTO U1432

U0620: tmp10:= SAVEUIP( , 0x00, U73b1) 
U0621: tmp1:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U2769
U0622: tmp0:= ZEROEXT_DSZ32(0x00010003) SEQW URET0

U0624: tmm4:= unk_7c2(mm4, tmm2) 
U0625: mm7:= unk_69d( , tmm4) !m0 
U0626: LFNCEMARK-> tmm6:= unk_743() !m2 SEQW GOTO U1a50

U0628: SAVEUIP_REGOVR(0x00, U0629, 0x0000) SEQW GOTO U2511
U0629: tmp0:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U062a: r64dst:= ZEROEXT_DSZ32N(tmp0, r64dst) !m1 SEQW UEND0

U062c: tmm4:= unk_7c2(tmm2) 
U062d: tmm0:= FMOV( , 0x00000000) 
U062e: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000002, U2aed) !m0,m1 SEQW GOTO U649c

U0630: tmp4:= SAVEUIP(r64dst, 0x00, U441d) 
U0631: tmp15:= MOVE_DSZ32(0x00000012) 
U0632: MOVETOCREG_BTS_DSZ64(tmp15, 0x00000010, 0x000) !m2 SEQW GOTO U026a

U0634: LFNCEMARK-> tmm7:= unk_62e(0x00000000) !m1,m2 
U0635: tmm7:= unk_53c( , tmm7) !m1 
U0636: UJMPCC_DIRECT_NOTTAKEN_CONDP(tmp6, U3418) SEQW GOTO U1432

U0638: NOP 
U0639: NOP 
U063a: NOP SEQW UEND0

FUN_ucode_000063c:
U063c: tmm4:= unk_790(mm2, xmmdst) 
U063d: tmm7:= unk_790(mm2, tmm7) 
U063e: tmp13:= ZEROEXT_DSZ64(0x000043d4) SEQW GOTO U0344

U0640: NOP 
U0641: NOP 
U0642: NOP SEQW UEND0

U0644: SAVEUIP_REGOVR(0x01, U0645, 0x0002) !m0 SEQW GOTO U2b0d
U0645: tmp2:= CONCAT_DSZ16(0x00005000) 
U0646: tmp2:= unk_cdb(tmp2) SEQW URET0

U0648: NOP 
U0649: NOP 
U064a: NOP SEQW GOTO U2769

U064c: tmp2:= NOTAND_DSZ32(0x00000fff, tmp2) 
U064d: tmp1:= ADD_DSZ32(0x00000004, tmp1) 
U064e: PORTOUT_DSZ32_ASZ16_SC1(0x4910,  , tmp1) !m2 SEQW GOTO U2bba

U0650: NOP 
U0651: NOP 
U0652: NOP SEQW GOTO U2769

U0654: tmp15:= ZEROEXT_DSZ32(0x000000f0) 
U0655: tmp15:= CONCAT_DSZ16(tmp15, 0x00001939) 
U0656: WRITEURAM(tmp15, 0x0007, 32) !m2 SEQW GOTO U20a8

U0658: NOP 
U0659: NOP 
U065a: NOP SEQW UEND0

U065c: tmp5:= ZEROEXT_DSZ32(0x0000c001) 
U065d: mm0:= unk_7c2(mm5, 0x00000000) 
U065e: MOVETOCREG_DSZ64(tmp8, 0x48c) SEQW GOTO U21fe

udbgwr_xlat:
U0660: tmp2:= CONCAT_DSZ32(rbx, rdx) 
U0661: tmp1:= MOVE_DSZ64(0x00000001) 
U0662: tmp3:= MOVEFROMCREG_DSZ64( , 0x38c, 32) !m1 SEQW GOTO U0b5a

U0664: NOP 
U0665: NOP 
U0666: NOP SEQW UEND0

U0668: tmm2:= unk_429(xmmsrc) !m0 
U0669: tmm3:= unk_469(xmmdst) !m0 
U066a: xmm2:= unk_693(tmm3, tmm2) SEQW UEND0

U066c: tmm7:= FMOV( , tmm0) 
U066d: tmp3:= ZEROEXT_DSZ32(0x00000010) 
U066e: LFNCEMARK-> tmm4:= unk_700(mm3) !m2 SEQW GOTO U01aa

U0670: tmm0:= unk_5b9(xmmsrc, xmm0) 
U0671: tmm0:= unk_5d2(tmm0, xmmdst) 
U0672: xmm2:= unk_5e6(xmm0, tmm0) SEQW UEND0

U0674: tmpv1:= ZEROEXT_DSZ8(tmpv2) 
U0675: tmpv0:= SHL_DSZ64(tmpv2, 0x00000004) 
U0676: tmpv0:= ZEROEXT_DSZ16(0x0000c802, tmpv0) SEQW GOTO U66f9

U0678: tmp0:= ZEROEXT_DSZ32(0x0001000d) 
U0679: LFNCEMARK-> tmp1:= ZEROEXT_DSZ32(0x0000000d) 
U067a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U6a96

U067c: tmp6:= ZEROEXT_DSZ32(0x00000004) 
U067d: LFNCEMARK-> MOVETOCREG_DSZ64(0x00000000, 0x000) !m2 
U067e: SAVEUIP( , 0x00, U0826) SEQW GOTO U2b36

U0680: tmp0:= unk_95f(r64base, r64idx) !m0,m1 
U0681: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0682: r64dst:= unk_f45(tmp0) !m1 

U0684: tmp2:= unk_f45(tmp0) !m0,m1 SEQW UEND0
U0685: NOP 
U0686: URET(0x00) 

U0688: r64dst:= STADTICKLE_DSZN_ASZ32_SC4(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0689: tmp0:= unk_95f(r64base, r64idx) !m0,m1 
U068a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U068c: tmp2:= STADTICKLE_DSZ64_ASZ32_SC1(tmp0) !m0,m1 SEQW UEND0
U068d: NOP 
U068e: URET(0x01) !m0 

U0690: tmp0:= unk_95f(r64base, r64idx) !m0,m1 
U0691: tmp0:= unk_14b(tmp2, tmp0) !m1 
U0692: tmp0:= SELECTCC_DSZ32_CONDBE(tmp0, 0x00000015) 

U0694: SIGEVENT( , tmp0) SEQW UEND0
U0695: NOP 
U0696: SYNCFULL-> WRMSLOOPCTRFBR(0x00000080) SEQW GOTO U3210

U0698: tmp0:= LDTICKLE_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m2 
U0699: tmp1:= unk_0bc(r64dst) 
U069a: STAD_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, tmp1) !m0,m2 

U069c: r64dst:= unk_0fc(tmp0, r64dst) SEQW UEND0
U069d: NOP 
U069e: UJMP( , U0414) 

U06a0: unk_3a5(r64src, rax) !m2 
U06a1: tmp0:= unk_0fc(r64dst, r64src) 
U06a2: r64src:= CMOVCC_DSZ64_CONDNZ(r64src, tmp0) !m2 

U06a4: tmp1:= unk_0bc(r64src, rax) SEQW GOTO U07ed
U06a5: tmp0:= SHR_DSZ32(tmp3, 0x00000010) 
U06a6: UJMP( , tmp3) 

U06a8: SUB_DSZ8(r64src, rax) !m2 
U06a9: tmp0:= unk_0bc(r64dst, r64src) 
U06aa: r64src:= CMOVCC_DSZ64_CONDNZ(r64src, tmp0) !m2 

U06ac: tmp1:= ZEROEXT_DSZ8(r64src, rax) SEQW GOTO U07ed
U06ad: MOVETOCREG_BTS_DSZ64( , 0x0000000b, 0x070) !m0,m2 
U06ae: UJMP( , tmp14) 

U06b0: unk_3a5(r64src, rax) !m2 
U06b1: tmp0:= unk_07c(r64dst, r64src) 
U06b2: r64src:= CMOVCC_DSZ64_CONDNZ(r64src, tmp0) !m2 

U06b4: tmp1:= unk_0bc(r64src, rax) SEQW GOTO U07ed
U06b5: tmp0:= READURAM( , 0x0022, 64) !m2 
U06b6: UJMP( , tmp0) 

U06b8: tmp0:= unk_0eb(rax) 
U06b9: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U06ba: tmp1:= LDZX_DSZ8_ASZ32_SC1(rbx, mode=0x18, tmp0) 

U06bc: rax:= ZEROEXT_DSZ8(tmp1, rax) SEQW UEND0
U06bd: NOP 
jump_tmp3:
U06be: UJMP( , tmp3) 

U06c0: tmp0:= unk_2af(r64src, rax) !m2 
U06c1: tmp1:= SHR_DSZ32(tmp0, 0x00000010) 
U06c2: rax:= ZEROEXT_DSZ16(tmp0, rax) 

U06c4: rdx:= ZEROEXT_DSZ16(tmp1, rdx) SEQW UEND0
U06c5: NOP 
uret1:
U06c6: SYNCFULL-> URET(0x01) !m0 

U06c8: tmp6:= MOVEMERGEFLGS_DSZ64(rax, r64src) 
U06c9: tmp5:= unk_11f(rdx, tmp6) !m1 
U06ca: rax:= unk_22f(r64src, tmp5) !m1 

U06cc: rdx:= unk_114(rdx, rax) !m1 SEQW UEND0
U06cd: NOP 
U06ce: SAVEUIP( , 0x00, U682e) SEQW GOTO U20c9

U06d0: tmp1:= unk_109(0x00000001) 
U06d1: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, U06d2) SEQW GOTO U221e
U06d2: tmp5:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U06d4: MOVETOCREG_BTR_DSZ64(tmp5, 0x0000000a, 0x7fe) !m0 SEQW GOTO U21fe
U06d5: tmp4:= LDZX_DSZN_ASZ32_SC1(tmp2, mode=0x18, tmp1) !m1 
U06d6: BT_DSZ32(tmp4, r64dst) !m1,m2 SEQW UEND0

U06d8: tmp0:= unk_0bc(rax) 
U06d9: rax:= unk_07c( , rax) 
U06da: tmp0:= unk_2e4(tmp0, IMM_MACRO_ALIAS_IMMEDIATE) !m0 

U06dc: rax:= ADD_DSZ8(tmp0, rax) !m2 SEQW UEND0
U06dd: NOP 
U06de: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x63e) SEQW GOTO U2aa4

U06e0: tmp1:= LDZX_DSZN_ASZ32_SC1(rbp, SS, mode=0x1a) !m1 
U06e1: tmp0:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rbp) !m0,m1 
U06e2: rsp:= ZEROEXT_DSZ8N(tmp0, rsp) !m1 

U06e4: rbp:= ZEROEXT_DSZ32N(tmp1, rbp) !m1 SEQW UEND0
U06e5: NOP 
U06e6: MOVETOCREG_DSZ64( , 0x00000000, 0x065) SEQW GOTO U2711

U06e8: tmp9:= unk_dd6(r64base, r64idx) !m0 
U06e9: tmm1:= unk_4b2( , tmm1) !m0 
U06ea: tmm2:= unk_4b3( , xmmdst) !m0 

U06ec: xmm2:= unk_690(tmm1, tmm2) SEQW UEND0
U06ed: NOP 
U06ee: tmp5:= SAVEUIP( , 0x00, U0c52) SEQW GOTO U5f64

U06f0: SAVEUIP( , 0x01, U03f4) !m0 
U06f1: tmm0:= unk_747(xmm0) 
U06f2: tmm0:= unk_787(xmm2, tmm0) 

U06f4: tmm0:= unk_524(tmm0, xmmdst) !m0,m1 SEQW URET1
U06f5: unk_13f(tmp5) !m2 
U06f6: MOVETOCREG_DSZ64(tmp5, 0x7fe) SEQW GOTO U2711

U06f8: tmm1:= MOVHLPS(xmmdst, xmmsrc) 
U06f9: tmm4:= MOVHLPS(xmmdst, xmmsrc) 
U06fa: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U06fc: xmm2:= unk_6b7(tmm1, tmm4) !m2 SEQW UEND0
U06fd: NOP 
caseD_6fe:
U06fe: PORTOUT_DSZ32_ASZ16_SC1(0x4900,  , tmp0) !m2 SEQW GOTO U1f9a

U0700: NOP 
U0701: LFNCEMARK->WRTAGW-> tmm0:= FMOV( , 0x00000005) !m0 
U0702: mm7:= FMOV( , 0x0000200d) !m0 

U0704: tmm7:= unk_6a8(0x00000000) SEQW GOTO U4281
U0705: NOP 
U0706: LFNCEWAIT-> FETCHFROMEIP0_ASZ64( , tmp14) !m1 SEQW UEND3

U0708: tmp8:= unk_d87(r64base, r64idx) !m0 
U0709: LFNCEMARK-> tmm6:= unk_663(tmm0) 
U070a: NOP 

U070c: LFNCEWAIT-> NOP SEQW UEND0
U070d: NOP 
caseD_70e:
U070e: SAVEUIP( , 0x01, U2ba6) !m0 SEQW GOTO U0079

U0710: tmp12:= READAFLAGS() !m2 
U0711: WRTAGW-> tmm0:= unk_742(tmm4, IMM_MACRO_ALIAS_STi) !m0 
U0712: NOP 

U0714: mm0:= unk_48f(tmm0, IMM_MACRO_ALIAS_STi) !m0 SEQW UEND0
U0715: NOP 
U0716: tmm0:= unk_525(tmm0, tmm2) !m0 SEQW GOTO U03f5

U0718: tmp1:= READURAM( , 0x0077, 64) 
U0719: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000036, U2769) !m0,m1 
U071a: unk_25e( , 0x000000ff) 

U071c: unk_ddd(r64base, r64idx) !m0 SEQW UEND0
U071d: unk_257( , tmp4) !m1 
U071e: rcx:= ZEROEXT_DSZ16N(tmp1, rcx) !m1 SEQW GOTO U0251

sldt_m16_xlat:
U0720: SAVEUIP_REGOVR(0x01, U0721, 0x0007) !m0 SEQW GOTO U0ba2
U0721: unk_25e( , 0x000000ff) 
U0722: tmp2:= RDSEGFLD(SEG_V0, SEL) 

U0724: STAD_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, tmp2) !m0 SEQW UEND0
FUN_ucode_0000725:
U0725: SYNCFULL-> tmp0:= MOVEFROMCREG_DSZ64( , 0x2eb, 32) !m1 
U0726: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U304e) !m1,m2 SEQW GOTO U0725

U0728: SAVEUIP_REGOVR(0x01, U0729, 0x000f) !m0 SEQW GOTO U5d62
U0729: LFNCEWAIT-> tmp2:= LDZX_DSZ16_ASZ32_SC1(tmp2, mode=0x18) 
U072a: NOP 

U072c: tmp13:= ZEROEXT_DSZ32(0x0000253a) SEQW GOTO U4799
FUN_ucode_000072d:
U072d: SYNCMARK-> BTUJB_DIRECT_NOTTAKEN(tmp12, 0x00000019, U68c0) !m1 
U072e: BTUJB_DIRECT_NOTTAKEN(tmp12, 0x00000018, U31ac) !m1,m2 SEQW URET1

U0730: tmp3:= UPDATEUSTATE(0x0c) SEQW GOTO U0bb1
U0731: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xffffffffffffffe8, mode=0x01,  , tmp12) 
U0732: tmp0:= MOVEFROMCREG_DSZ64( , 0x510) 

U0734: tmp0:= AND_DSZ32(0x0000001f, tmp0) 
U0735: tmp0:= CONCAT_DSZ32(tmp0, 0x00000b0e) 
U0736: tmp3:= ZEROEXT_DSZ32(0x00000018) SEQW GOTO U31ec

sysexit_xlat:
U0738: tmp3:= UPDATEUSTATE(0x0c) 
U0739: LFNCEMARK-> tmp0:= READURAM( , 0x0074, 64) 
U073a: tmp1:= NOTAND_DSZ16(0x00000003, tmp0) 

U073c: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2711) 
U073d: ROVR<- tmp1:= MOVE_DSZ64(rdx, rdx) SEQW SAVEUIP1 U073e
U073e: tmp2:= OR_DSZ64(rcx) SEQW GOTO U1e5c

U0740: unk_25c(rdx, rdx) 
U0741: LFNCEMARK-> unk_25c(rcx, rcx) 
U0742: tmp3:= UPDATEUSTATE(!0x0c) !m0 SEQW GOTO U0739

U0744: mm0:= FMOV( , tmm4) 
U0745: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U1a50) 
U0746: tmm6:= FMOV( , 0x00000091) !m0 SEQW GOTO U1a50

U0748: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0749: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U2769) !m1 
U074a: tmp2:= RDSEGFLD(DS_KERNM, BASE) 

U074c: r64src:= ZEROEXT_DSZ32N(tmp2) !m1 SEQW UEND0
U074d: tmp0:= ZEROEXT_DSZ32(0x00000009) 
U074e: tmp7:= ZEROEXT_DSZ32(0x00000006) SEQW GOTO U344d

U0750: tmp8:= UPDATEUSTATE( , 0x1c) 
U0751: LFNCEMARK-> tmp14:= SAVEUIP(0x01, U1429) !m0 
U0752: tmp2:= ZEROEXT_DSZ16(IMM_MACRO_ALIAS_IMMEDIATE) !m0 

U0754: tmp3:= unk_a2f() !m0,m1 
U0755: tmp3:= ZEROEXT_DSZ32N(tmp3) !m1 
U0756: UPDATEUSTATE( , 0x18) SEQW GOTO U490c

U0758: tmp0:= MOVE_DSZ64(0x00000432) 
U0759: tmp4:= ZEROEXT_DSZ32(0x00000007) 
U075a: tmp10:= ZEROEXT_DSZ32(0x00000006) SEQW SAVEUIP1 U075cSEQW GOTO U48b2

U075c: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000001, U1d04) !m2 
U075d: LFNCEMARK-> SAVEUIP( , 0x01, U1bd0) !m0 SEQW GOTO U0164
U075e: xmm2:= unk_4cf(tmm3, tmm2) SEQW UEND0

U0760: tmp0:= MOVE_DSZ64(0x00000435) 
U0761: tmp4:= ZEROEXT_DSZ32(0x00000008) 
U0762: tmp10:= ZEROEXT_DSZ32(0x0000000f) SEQW SAVEUIP1 U0764SEQW GOTO U48b2

U0764: tmp5:= SHR_DSZ64(tmp4, 0x00000010) 
U0765: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U082e) 
U0766: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, 0x00000002, U5701) !m0,m2 SEQW GOTO U075d

U0768: tmp10:= MOVE_DSZ64(r64src, r64src) !m1 
U0769: LFNCEMARK-> LBSYNC(0x00000002) 
U076a: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U076c: WRITEURAM(tmp10, 0x001e, 64) !m2 SEQW GOTO U1bd0
U076d: tmp4:= AND_DSZ64(tmp10, tmp5) 
U076e: CMPUJNZ_DIRECT_NOTTAKEN(tmp4, U44a2, tmp3) SEQW URET1

U0770: tmp11:= MOVE_DSZ64(r64src, r64src) !m1 
U0771: LFNCEMARK-> LBSYNC(0x00000002) 
U0772: TESTUSTATE( , SYS, !UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1bb2

U0774: tmp6:= READURAM( , 0x001f, 64) !m2 
U0775: tmp6:= SHR_DSZ64(tmp6, 0x0000001d) 
U0776: tmp6:= AND_DSZ32(0x00000038, tmp6) SEQW GOTO U4726

U0778: tmp7:= NOTAND_DSZ64(0x0000000f, r64src) 
U0779: LFNCEMARK-> tmp8:= MOVEFROMCREG_DSZ64( , 0x2a1, 32) !m1 
U077a: TESTUSTATE( , SYS, UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW SAVEUIP1 U077c? SEQW GOTO U5996

U077c: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U2711) 
U077d: tmp3:= SHR_DSZ64(tmp8, 0x0000000c) 
U077e: tmp3:= AND_DSZ32(0x0000000f, tmp3) SEQW GOTO U2d31

U0780: tmp7:= MOVE_DSZ64(r64src, r64src) !m1 
U0781: LFNCEMARK-> LBSYNC(0x00000002) 
U0782: tmp1:= UPDATEUSTATE( , 0xfc) SEQW GOTO U05f9

U0784: tmp2:= READURAM( , 0x001f, 64) 
U0785: tmp2:= NOTAND_DSZ32(0x00000007, tmp2) 
U0786: WRITEURAM(tmp2, 0x001f, 32) SEQW GOTO U3b99

rdtscp_xlat:
U0788: tmp3:= ZEROEXT_DSZ32(0x00000033) 
U0789: LFNCEMARK-> tmp5:= READURAM( , 0x0003, 64) 
U078a: TESTUSTATE( , VMX, !0x0200) !m0,m2 ? SEQW GOTO U2769

U078c: SAVEUIP( , 0x00, U030c) SEQW GOTO U0caa
U078d: tmp13:= SUB_DSZ32(tmp13, tmp1) 
U078e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp13, U2711) SEQW URET1

U0790: SAVEUIP_REGOVR(0x01, U0791, 0x0000) !m0 SEQW GOTO U0da5
U0791: tmp7:= unk_07f(tmp7, tmp2) 
U0792: STAD_DSZN_ASZ32_SC1(tmp5, mode=0x18,  , tmp7) !m1 

clear_aflags_uend0:
U0794: LFNCEWAIT-> MOVEINSERTFLGS_DSZ32() !m2 SEQW UEND0
caseD_795:
U0795: SAVEUIP_REGOVR(0x01, U0796, 0x0310) !m0 
U0796: SAVEUIP( , 0x01, U1f9a) !m0 SEQW GOTO U5e02

U0798: SAVEUIP_REGOVR(0x00, U0799, 0x0000) SEQW GOTO U2511
U0799: tmp0:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U079a: r64dst:= LDZX_DSZN_ASZ32_SC1(tmp0, mode=0x18) !m1 

U079c: ADD_DSZ32(r64dst) !m1,m2 SEQW UEND0
FUN_ucode_000079d:
U079d: tmp0:= ZEROEXT_DSZ32(0x00000000) 
U079e: LFNCEWAIT-> tmp15:= MOVEFROMCREG_DSZ64( , 0x068) SEQW GOTO U3452

U07a0: SAVEUIP_REGOVR(0x00, U07a1, 0x0000) SEQW GOTO U2511
U07a1: tmp0:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U07a2: STAD_DSZN_ASZ32_SC1(tmp0, mode=0x18,  , r64dst) !m1 

U07a4: ADD_DSZ32(r64dst) !m1,m2 SEQW UEND0
U07a5: LFNCEWTMRK-> WRITEURAM(tmp15, 0x0007, 32) 
U07a6: NOP SEQW GOTO U5f92

U07a8: SAVEUIP_REGOVR(0x00, U07a9, 0x0000) SEQW GOTO U2511
U07a9: tmp0:= unk_a5f(r64base, r64idx) !m0 
U07aa: r64dst:= LDPPHYSTICKLE_DSZN_ASZ64_SC1(tmp0) !m1 

U07ac: ADD_DSZ32(r64dst) !m1,m2 SEQW UEND0
caseD_7ad:
U07ad: tmp0:= ZEROEXT_DSZ32(0x0000000a) 
U07ae: CMPUJNZ_DIRECT_NOTTAKEN(tmp5, 0x00000001, U290c) !m1 SEQW GOTO U1f9a

U07b0: SAVEUIP_REGOVR(0x00, U07b1, 0x0000) SEQW GOTO U2511
U07b1: tmp0:= unk_a5f(r64base, r64idx) !m0 
U07b2: STADPPHYSTICKLE_DSZN_ASZ64_SC1(tmp0,  , r64dst) !m1 

U07b4: ADD_DSZ32(r64dst) !m1,m2 SEQW UEND0
send_op_pcu_mailbox:
U07b5: tmpv1:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U07b6: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmpv1, 0x0000001f, U5e06) !m0,m2 SEQW GOTO U07b5

U07b8: tmp0:= MOVE_DSZ32(0x00008000) 
U07b9: tmp0:= OR_DSZ16(rax, tmp0) 
U07ba: CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000001, U612e) !m1 

U07bc: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000002, U6128) !m0,m1 SEQW GOTO U67f6
U07bd: tmp1:= AND_DSZ32(0x00000007, tmp5) 
U07be: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000007, U2711) !m0,m1 SEQW URET1

U07c0: tmp12:= MOVE_DSZ32() 
U07c1: LFNCEMARK-> UPDATEUSTATE( , 0xfc) 
U07c2: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U1e81

rc4_decrypt_ucode_second:
U07c4: tmp5:= ADD_DSZ64(0x00000080, tmp14) 
U07c5: tmp6:= ZEROEXT_DSZ32(tmp13) 
U07c6: tmp8:= ZEROEXT_DSZ32(0x00002b4d) SEQW GOTO U5f2d

U07c8: tmp4:= MOVE_DSZ32(IMM_MACRO_ALIAS_RIP) !m0 
U07c9: LFNCEMARK-> AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U07ca: tmp10:= READAFLAGS() !m2 

U07cc: tmp1:= ZEROEXT_DSZ32(0x00000301) SEQW GOTO U605d
U07cd: rax:= ZEROEXT_DSZ32() 
U07ce: rdx:= ZEROEXT_DSZ32() SEQW UEND0

U07d0: tmp10:= unk_dd6(r64base, r64idx) !m0 
U07d1: tmm2:= unk_429(tmm2) !m0 
U07d2: tmm3:= unk_469(xmmdst) !m0 

U07d4: xmm2:= unk_693(tmm3, tmm2) SEQW UEND0
U07d5: NOP 
U07d6: tmm0:= unk_525(tmm0, tmm2) !m0 SEQW GOTO U0c76

U07d8: tmp8:= unk_dd6(r64base, r64idx) !m0 
U07d9: tmm0:= unk_5b9(tmm0, xmm0) 
U07da: tmm0:= unk_5d2(tmm0, xmmdst) 

U07dc: xmm2:= unk_5e6(xmm0, tmm0) SEQW UEND0
U07dd: NOP 
U07de: SAVEUIP( , 0x00, U73ad) SEQW GOTO U639a

U07e0: tmp14:= SAVEUIP(0x01, U2a49) !m0 
U07e1: tmp0:= unk_f54(r64base) !m0 
U07e2: tmp1:= SHR_DSZ64(tmp0, 0x00000013) 

U07e4: tmp1:= NOTAND_DSZ32(0xe0000001, tmp1) 
U07e5: tmp3:= ZEROEXT_DSZ32(0x000ffff8) SEQW GOTO U090d
U07e6: tmp3:= unk_105(tmp2, tmp3) !m1 SEQW URET1

U07e8: SUB_DSZ32(r64src, rax) !m1,m2 
U07e9: tmp0:= ZEROEXT_DSZ32N(r64dst, r64src) !m1 
U07ea: r64src:= CMOVCC_DSZ64_CONDNZ(r64src, tmp0) !m2 

U07ec: tmp1:= ZEROEXT_DSZ32N(r64src, rax) !m1 
U07ed: rax:= CMOVCC_DSZ64_CONDZ(rax, tmp1) !m2 SEQW UEND0
U07ee: tmp11:= unk_e6b(tmp0, tmp2) !m2 SEQW GOTO U038a

U07f0: tmp0:= LDZX_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U07f1: tmp0:= unk_2af(tmp0, rax) !m2 
U07f2: tmp1:= SHR_DSZ32(tmp0, 0x00000010) 

U07f4: rax:= ZEROEXT_DSZ16(tmp0, rax) 
U07f5: rdx:= ZEROEXT_DSZ16(tmp1, rdx) SEQW UEND0
U07f6: tmp11:= unk_e6b(tmp0, tmp2) !m2 SEQW GOTO U038a

U07f8: tmp7:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U07f9: tmp6:= MOVEMERGEFLGS_DSZ64(rax, tmp7) 
U07fa: tmp5:= unk_11f(rdx, tmp6) !m1 

U07fc: rax:= unk_22f(tmp7, tmp5) !m1 
U07fd: rdx:= unk_114(rdx, rax) !m1 SEQW UEND0
U07fe: SIGEVENT( , 0x000000b5) SEQW GOTO U079d

U0800: tmp0:= RCXBTCNTMSK_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0801: tmp1:= SUB_DSZ8(tmp0, 0x00000008) 
U0802: tmp3:= unk_169(r64src, tmp0) 

U0804: tmp2:= unk_36a(r64src, 0x00000001) 
U0805: tmp2:= unk_168(tmp2, tmp1) SEQW GOTO U286e
U0806: tmp3:= unk_38f(tmp3) SEQW URET1

U0808: tmp0:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0809: tmp3:= CONCAT_DSZ16(r64dst, r64src) SEQW SAVEUIP1 U080aSEQW GOTO U097d
U080a: r64src:= ZEROEXT_DSZ32N(tmp3, r64src) !m1 

U080c: tmp4:= MOVEMERGEFLGS_DSZ32(tmp4) !m2 
U080d: GENARITHFLAGS(tmp4, tmp3) !m2 SEQW UEND0
FUN_ucode_000080e:
U080e: tmp6:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U040c

U0810: tmp2:= ZEROEXT_DSZ8(rax) 
U0811: tmp0:= unk_2e6(IMM_MACRO_ALIAS_IMMEDIATE, tmp2) !m0 
U0812: rax:= unk_0fc(tmp0, rax) 

U0814: unk_360( , tmp0) !m2 
U0815: rax:= unk_0bc(tmp0, rax) SEQW UEND0
U0816: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U60ad) SEQW GOTO U59c4

hlt_xlat:
U0818: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U0819: LFNCEMARK-> tmp0:= MOVE_DSZ32(0x0000000c) 
U081a: tmp3:= ZEROEXT_DSZ32(0x00000007) 

U081c: SAVEUIP_REGOVR(0x01, U081d, 0x0043) !m0 
U081d: SAVEUIP( , 0x01, U6995) !m0 SEQW GOTO U1cfa
U081e: LFNCEMARK-> unk_25e( , tmp2) SEQW UEND0

U0820: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0821: tmp1:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0822: tmm3:= unk_6b0(xmmsrc, xmmdst) !m0,m2 

U0824: tmm4:= MOVHLPS(tmm3) 
U0825: xmm2:= unk_6ad(tmm4, tmm3) !m0,m2 SEQW UEND0
U0826: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U2011) SEQW GOTO U2019

U0828: tmm0:= unk_526(xmmdst, xmmsrc) !m0 
U0829: xmm0:= unk_5a6(xmmdst, tmm0) !m0 
U082a: tmm3:= unk_5a3( , xmm0) 

U082c: mm0:= unk_76b(tmm3) 
U082d: MOVEINSERTFLGS_DSZ32(tmp0) !m2 SEQW UEND0
U082e: tmp13:= ZEROEXT_DSZ32(0x0000001c) SEQW GOTO U2e91

U0830: tmp10:= unk_dd6(r64base, r64idx) !m0 
U0831: tmm1:= MOVHLPS(xmmdst, tmm2) 
U0832: tmm4:= MOVHLPS(xmmdst, tmm2) 

U0834: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0835: xmm2:= unk_6b7(tmm1, tmm4) !m2 SEQW UEND0
U0836: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp10, tmp9) SEQW GOTO U1bd0

U0838: tmp8:= unk_dd6(r64base, r64idx) !m0 
U0839: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U083a: tmm4:= SHUFPD(tmm0, xmmdst) 

U083c: tmm1:= SHUFPD(tmm0, xmmdst) 
U083d: xmm2:= unk_6f7(tmm1, tmm4) !m2 SEQW UEND0
U083e: unk_dff() SEQW GOTO U2711

U0840: SAVEUIP( , 0x01, U4259) !m0 
U0841: tmm7:= FMOV( , 0x00000011) !m0 
U0842: LFNCEMARK->WRTAGW-> tmm0:= FMOV( , 0x00002005) !m0,m2 

U0844: LFNCEMARK-> tmm1:= FMOV( , 0x00000035) !m0 
U0845: tmp15:= FCOM2(tmp9, tmp8) !m0 SEQW URET1
U0846: tmp0:= ZEROEXT_DSZ32(0x0002001c) SEQW GOTO U44a2

U0848: tmp0:= LDZX_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0849: tmp1:= AND_DSZ32(0xffffffffffff0000, tmp0) 
U084a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 

U084c: tmm0:= unk_707(mm0) 
U084d: LFNCEMARK-> tmm6:= unk_691(tmm0) SEQW GOTO U008e
U084e: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U2769) !m0,m1 SEQW URET1

U0850: unk_432( , tmm0) 
U0851: WRMSLOOPCTRFBR( , 0x00000007) 
U0852: tmm0:= FMOV( , 0x00000091) !m0 

U0854: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U0852
U0855: NOP SEQW UEND0
U0856: LFNCEWAIT-> URET(0x01) !m0 

U0858: tmp0:= READURAM( , 0x003a, 64) 
U0859: tmp0:= NOTAND_DSZ32(tmp0, 0x00080001) 
U085a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2769) 

U085c: tmp4:= ZEROEXT_DSZ32(0x00000035) 
U085d: tmp0:= ZEROEXT_DSZ32(0x00000041) SEQW GOTO U2214
U085e: LFNCEWAIT-> unk_256() !m1 SEQW UEND3

U0860: tmp14:= SAVEUIP(0x01, U3a92) !m0 
U0861: tmp2:= SAVEUIP(r64src, 0x00, U2bfe) 
U0862: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0864: TESTUSTATE( , SYS, UST_8086_MODE) !m1 ? SEQW GOTO U2769
U0865: tmp9:= ZEROEXT_DSZ64N(IMM_MACRO_ALIAS_RIP) !m0,m1 SEQW URET0
U0866: NOP 

U0868: tmp14:= SAVEUIP(0x01, U4012) !m0 
U0869: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U086a: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 

U086c: tmp3:= LDZX_DSZN_ASZ32_SC1(tmp2, mode=0x18) !m1 
U086d: tmp2:= LDZX_DSZ16_ASZ32_SC1(tmp2, IMM_MACRO_ALIAS_DATASIZE, mode=0x18) !m0 SEQW GOTO U2c01
U086e: r64src:= ZEROEXT_DSZ32N(tmp2, r64src) !m1 SEQW UEND0

U0870: tmp3:= READURAM( , 0x0002, 64) 
U0871: tmp2:= RDSEGFLD(GS, BASE) 
U0872: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U0874: WRSEGFLD(tmp3, GS, BASE) 
U0875: LFNCEMARK-> WRITEURAM(tmp2, 0x0002, 64) !m2 SEQW GOTO U008e
U0876: STAD_DSZ16_ASZ32_SC1(tmp8, mode=0x18,  , tmp11) SEQW UEND0

U0878: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0879: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U2769) !m1 
U087a: tmp2:= OR_DSZN(r64src) !m1 

U087c: unk_25c( , tmp2) 
U087d: LFNCEMARK-> WRSEGFLD(tmp2) !m0 SEQW GOTO U008e
U087e: mm0:= FMOV( , tmm0) !m0 SEQW URET0

U0880: tmp0:= MOVE_DSZ32(0x0000000d) 
U0881: tmp1:= SAVEUIP( , 0x01, U205a) !m0 
U0882: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U0884: tmp15:= MOVEFROMCREG_DSZ64( , 0x575) 
U0885: tmp14:= ZEROEXT_DSZ16(0x00000f16) SEQW GOTO U0b9a
U0886: LFNCEMARK-> rsp:= unk_25e(tmp3, 0x00000020) !m1 SEQW UEND0

U0888: tmp6:= ZEROEXT_DSZ32(0x00000026) 
U0889: ROVR<- tmp0:= MOVE_DSZ32(0x00000036) SEQW SAVEUIP1 U088a
U088a: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U088c: SAVEUIP( , 0x01, U4c32) !m0 
U088d: tmp14:= ZEROEXT_DSZ16(0x00000f16) SEQW GOTO U1cfa
U088e: xmm2:= MOVUPD(tmm7) SEQW UEND0

mov_cr0_r64_xlat:
U0890: tmp10:= MOVE_DSZ64(r64src, r64src) !m1 
U0891: tmp7:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0892: UPDATEUSTATE( , 0xfc) SEQW SAVEUIP0 U0894SEQW GOTO U2d19

U0894: tmp2:= XOR_DSZ32(tmp10, tmp11) 
U0895: tmp4:= AND_DSZ32(0x60000000, tmp2) 
U0896: tmp4:= SELECTCC_DSZ32_CONDZ(tmp4, 0x00000008) SEQW GOTO U46f4

U0898: tmp10:= MOVE_DSZ64(r64src, r64src) !m1 
U0899: LFNCEMARK-> LBSYNC(0x00000002) 
U089a: TESTUSTATE( , SYS, UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW SAVEUIP0 U089c? SEQW GOTO U77b6

U089c: tmp11:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U089d: tmp8:= XOR_DSZ32(tmp10, tmp11) 
U089e: tmp8:= AND_DSZ32(0x001000b0, tmp8) SEQW GOTO U460c

U08a0: tmp1:= CONCAT_DSZ16(r64src, 0x00000030) 
U08a1: tmp10:= MOVE_DSZ64(r64src, r64src) !m1 SEQW GOTO U0d42
U08a2: tmp2:= CONCAT_DSZ8(tmp2, tmp1) 

FUN_ucode_00008a4:
U08a4: tmp1:= ZEROEXT_DSZ16(tmp2, tmp1) 
U08a5: tmp1:= BTS_DSZ32(tmp1, 0x00000010) 
U08a6: PORTOUT_DSZ32_ASZ16_SC1(0x50d8,  , tmp1) !m2 SEQW GOTO U5718

U08a8: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U08a9: tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 
U08aa: STAD_DSZN_ASZ32_SC1(rdi, mode=0x08,  , tmp0) !m1 

U08ac: rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 
U08ad: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 SEQW UEND0
U08ae: tmp5:= BTS_DSZ64(tmp5, 0x0000003b) SEQW GOTO U189a

U08b0: tmp4:= OR_DSZN(rcx) !m1 
U08b1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U045e) 
U08b2: SIGEVENT( , 0x0000003b) 

U08b4: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U08b5: tmp10:= MOVEMERGEFLGS_DSZ32() !m2 SEQW GOTO U3de8
U08b6: xmm2:= SHUFPD(tmm7, tmm7) SEQW UEND0

U08b8: tmp4:= OR_DSZN(rcx) !m1 
U08b9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U045e) 
U08ba: SIGEVENT( , 0x0000003b) 

U08bc: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U08bd: tmp10:= MOVEMERGEFLGS_DSZ32() !m2 SEQW GOTO U2020
U08be: xmm2:= unk_5ba(tmm7, tmm7) SEQW UEND0

rsm_xlat:
U08c0: tmp9:= MOVEFROMCREG_DSZ64( , 0x105) 
U08c1: BTUJNB_DIRECT_NOTTAKEN(tmp9, 0x00000002, U2769) !m0,m1 
U08c2: LFNCEMARK-> tmp9:= READURAM( , 0x005c, 64) SEQW GOTO U30b8

rc4_decrypt_ucode_first:
U08c4: tmp2:= ZEROEXT_DSZ32(0x00005d61) 
U08c5: tmp2:= BTS_DSZ32(tmp2, 0x00000017) 
U08c6: WRITEURAM(tmp2, 0x0007, 32) SEQW GOTO U20a8

vmxoff_xlat:
U08c8: tmp0:= ZEROEXT_DSZ32(0x0000001a) 
U08c9: LFNCEMARK-> tmp4:= ZEROEXT_DSZ32(0x00000011) 
U08ca: tmp7:= READURAM( , 0x0057, 64) 

U08cc: tmp13:= ZEROEXT_DSZ32(0x00000017) 
U08cd: LFNCEWAIT-> tmp5:= READURAM( , 0x001f, 64) SEQW GOTO U18d6
U08ce: xmm2:= unk_430(tmm7, xmmdst) !m1 SEQW UEND0

encls_xlat:
U08d0: tmp0:= MOVE_DSZ32(0x0000003c) 
U08d1: LFNCEMARK-> SAVEUIP( , 0x00, U198a) 
U08d2: TESTUSTATE( , UCODE, !0x1000) !m0 ? SEQW GOTO U65c6

U08d4: tmp15:= NOTAND_DSZ32(0x00000001, rax) 
U08d5: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000004, U2769) !m1 SEQW GOTO U65c6
U08d6: xmm2:= SHUFPD(tmm7, tmm7) SEQW UEND0

U08d8: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U08d9: MOVE_DSZ32() SEQW SAVEUIP0 U08daSEQW GOTO U2511
U08da: LFNCEMARK-> unk_dff() 

U08dc: tmp0:= unk_a5f(r64base, r64idx) !m0 
U08dd: LFNCEWTMRK-> r64dst:= unk_d2b(tmp0) !m1 SEQW GOTO U44f9
U08de: r64src:= ZEROEXT_DSZ32N(tmp11, r64src) !m1 SEQW UEND0

U08e0: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U08e1: MOVE_DSZ32() SEQW SAVEUIP0 U08e2SEQW GOTO U2511
U08e2: LFNCEMARK-> unk_dff() 

U08e4: tmp0:= unk_a5f(r64base, r64idx) !m0 
U08e5: LFNCEWTMRK-> r64dst:= unk_d2f(tmp0) !m1 SEQW GOTO U44f9
U08e6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000008,  , tmp5) SEQW URET0

U08e8: tmp0:= RDSEGFLD(SS_KERNM, BASE) 
U08e9: tmp1:= RDSEGFLD(SS_KERNM, SEL+FLGS+LIM) 
U08ea: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 

U08ec: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp5, mode=0x01,  , tmp0) 
U08ed: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp5, 0x00000008, mode=0x01,  , tmp1) SEQW UEND0
U08ee: tmp5:= SUB_DSZ64(tmp1, tmp5) SEQW GOTO U3208

U08f0: tmp8:= unk_a6f(r64base) !m0 
U08f1: LFNCEMARK-> tmp2:= MOVE_DSZ32(0x00020003) 
U08f2: tmp2:= CONCAT_DSZ32(tmp2, 0x00038003) SEQW SAVEUIP0 U08f4SEQW GOTO U4550

U08f4: tmp1:= LEA_DSZ8_ASZ32_SC1(tmp8, DS, r64idx, mode=0x18) 
U08f5: LFNCEMARK-> unk_d04(tmp8, r64idx) !m1 
U08f6: tmp3:= MOVEFROMCREG_DSZ64( , 0x51e) SEQW GOTO U5b65

U08f8: tmp4:= OR_DSZ64(r64src) 
U08f9: tmp8:= ADD_DSZ32() 
U08fa: tmp3:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U08fc: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U08fd: CMPUJNZ_DIRECT_NOTTAKEN(rcx, 0x00000005, U5dc9) !m2 SEQW GOTO U04f4
U08fe: LFNCEWAIT-> rax:= ZEROEXT_DSZ32N(tmp0, rax) !m1 SEQW UEND0

U0900: tmp1:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U0901: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2769) !m0,m1 
U0902: tmp0:= READURAM( , 0x005c, 64) 

U0904: tmp0:= BT_DSZ64(tmp0, 0x0000002e) 
U0905: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp0, U2769) SEQW GOTO U56a2
U0906: SYNCWAIT-> rdx:= SHR_DSZ64(tmp5, 0x00000020) SEQW UEND0

U0908: tmp14:= SAVEUIP(0x01, U2a49) !m0 
U0909: tmp0:= unk_f14(r64base) !m0 
U090a: tmp1:= SHR_DSZ32(tmp0, 0x0000000c) 

U090c: tmp3:= ZEROEXT_DSZ32(0x00000ffc) 
U090d: tmp4:= AND_DSZ32(tmp3, tmp0) 
U090e: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U03d4

U0910: tmp14:= SAVEUIP(0x01, U06d5) !m0 
U0911: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0912: tmp0:= MOVSX_SSZ32_DSZ64(r64dst) !m1 

U0914: tmp1:= SAR_DSZ64(tmp0, 0x00000003) 
U0915: tmp1:= AND_DSZ64(IMM_MACRO_fb, tmp1) !m0 
U0916: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW URET1

U0918: tmp4:= OR_DSZN(r64src) !m1 
U0919: tmp0:= unk_21f(tmp4) !m1 
U091a: tmp0:= unk_1df(tmp0) 

U091c: tmp1:= SHL_DSZ8(tmp0, 0x00000003) 
U091d: tmp2:= SHR_DSZN(tmp4, tmp1) !m1 
U091e: tmp2:= unk_1df(tmp2) SEQW GOTO U0029

U0920: tmp0:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0921: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0922: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0924: tmp1:= unk_3a0(r64dst, tmp0) !m2 
U0925: STAD_DSZ32_ASZ32_SC1(tmp2, mode=0x18,  , tmp1) !m1,m2 
U0926: r64dst:= unk_0fc(tmp0, r64dst) SEQW UEND0

U0928: tmp0:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0929: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U092a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U092c: tmp1:= ADD_DSZ32(tmp0, r64dst) !m1,m2 
U092d: STAD_DSZ32_ASZ32_SC1(tmp2, mode=0x18,  , tmp1) !m1,m2 
U092e: r64dst:= ZEROEXT_DSZ32N(tmp0, r64dst) !m1 SEQW UEND0

U0930: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0931: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0932: SUB_DSZ32(tmp1, rax) !m1,m2 

U0934: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0935: tmp3:= ZEROEXT_DSZ32N(tmp1, rax) !m1 
U0936: tmp4:= CMOVCC_DSZ64_CONDZ(r64dst, tmp1) !m2 SEQW GOTO U2164

U0938: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0939: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U093a: SUB_DSZ8(tmp1, rax) !m2 

U093c: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U093d: tmp8:= unk_0bc(r64dst) 
U093e: tmp4:= CMOVCC_DSZ8_CONDZ(tmp8, tmp1) !m2 SEQW GOTO U2168

U0940: tmp4:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0941: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0942: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0944: tmp6:= ZEROEXT_DSZ32(tmp4) 
U0945: tmp0:= CONCAT_DSZ32(rdx, rax) 
U0946: tmp1:= CONCAT_DSZ32(rcx, rbx) SEQW GOTO U1a21

U0948: tmp8:= unk_d46(r64base, r64idx) !m0,m1,m2 
U0949: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U094a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U094c: tmp0:= PINTMOVDTMM2I_DSZ64(tmm0) 
U094d: tmp4:= SUB_DSZ64(tmp0, rax) 
U094e: tmm1:= MOVHLPS( , tmm0) SEQW GOTO U5e3d

U0950: tmp3:= ROR_DSZN(r64src, 0x00000001) !m1 
U0951: SAVEUIP( , 0x01, U080a) !m0 
U0952: tmp3:= RCL_DSZ32(tmp3, 0x00000001) !m1 

U0954: tmp2:= MOVEMERGEFLGS_DSZ64( , tmp3) 
U0955: tmp3:= ROR_DSZN(tmp3, 0x00000001) !m1 
U0956: tmp4:= ZEROEXT_DSZ32(0x00000021) SEQW GOTO U07e6

U0958: tmp3:= ROR_DSZ16(r64src, 0x00000009) 
U0959: tmp3:= RCL_DSZ16(tmp3, 0x00000001) 
U095a: tmp2:= MOVEMERGEFLGS_DSZ64( , tmp3) 

U095c: tmp3:= ROR_DSZ8(tmp3, 0x00000001) 
U095d: r64src:= unk_0fc(tmp3, r64src) 
U095e: SAVEUIP( , 0x01, U080c) !m0 SEQW GOTO U0956

U0960: tmp3:= OR_DSZ64(r64src) 
U0961: SAVEUIP( , 0x01, U080a) !m0 
U0962: tmp0:= RCXBTCNTMSK_DSZ32(IMM_MACRO_ALIAS_IMMEDIATE) !m0,m1 

U0964: tmp2:= ROR_DSZN(tmp3, 0x00000001) !m1 
U0965: tmp2:= RCL_DSZ32(tmp2, 0x00000001) !m1 
U0966: tmp2:= ROR_DSZN(tmp2, 0x00000001) !m1 SEQW GOTO U0975

U0968: tmp0:= RCXBTCNTMSK_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0969: tmp2:= unk_16b(r64src, 0x00000001) 
U096a: tmp2:= unk_36a(tmp2, 0x00000001) 

U096c: tmp2:= unk_16b(tmp2, 0x00000001) 
U096d: tmp1:= SUB_DSZ8(tmp0, 0x00000008) 
U096e: tmp2:= unk_169(tmp2, tmp1) SEQW GOTO U286d

U0970: tmp3:= OR_DSZ64(r64src) 
U0971: SAVEUIP( , 0x01, U080a) !m0 
U0972: tmp0:= RCXBTCNTMSK_DSZ32(IMM_MACRO_ALIAS_IMMEDIATE) !m0,m1 

U0974: tmp2:= RCL_DSZ32(tmp3, 0x00000001) !m1 
U0975: tmp4:= OR_DSZ64(0x00000000, tmp0) 
U0976: tmp3:= unk_02f(tmp3, tmp0) !m1 SEQW GOTO U0031

U0978: tmp3:= LDTICKLE_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0979: tmp0:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U097a: SAVEUIP( , 0x01, U057c) !m0 

U097c: tmp3:= CONCAT_DSZ16(r64dst, tmp3) 
FUN_ucode_000097d:
U097d: tmp3:= ROL_DSZ32(tmp3, tmp0) 
U097e: tmp3:= BT_DSZ32(tmp3, 0x00000010) SEQW GOTO U0985

U0980: tmp0:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0981: tmp3:= SAVEUIP(r64src, 0x01, U080a) !m0 
U0982: tmp3:= CONCAT_DSZ16(r64dst, tmp3) 

U0984: tmp3:= ROR_DSZ32(tmp3, tmp0) 
U0985: tmp4:= AND_DSZ32(0x0000001f, tmp0) 
U0986: tmp4:= SELECTCC_DSZ32_CONDZ(tmp4, 0x0000003f) SEQW GOTO U0806

U0988: tmp3:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0989: tmp0:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U098a: tmp2:= CONCAT_DSZ32(r64dst, tmp3) 

U098c: tmp3:= unk_12f(tmp2, tmp0) 
U098d: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U098e: tmp8:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 SEQW GOTO U216c

U0990: SAVEUIP( , 0x01, U080a) !m0 
U0991: tmp3:= OR_DSZ64(r64src) 
U0992: tmp0:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 

U0994: tmp4:= AND_DSZ32(0x0000003f, tmp0) 
U0995: tmp3:= unk_06f(tmp3, tmp0) 
U0996: tmp2:= SUB_DSZ8(tmp0, 0x00000040) SEQW GOTO U0142

U0998: tmp3:= unk_208(0x00000001) 
U0999: LFNCEMARK-> tmp4:= unk_207(0x00080000) 
U099a: tmp4:= ADD_DSZN(tmp4, tmp3) !m1 

U099c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U2711) 
U099d: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U099e: tmp0:= READAFLAGS( , tmp0) !m2 SEQW GOTO U587d

U09a0: tmp2:= unk_207(0x000000f5) 
U09a1: tmp3:= ZEROEXT_DSZ32(0xffffffffffffffff) 
U09a2: tmp2:= unk_208(0x000000f5, tmp2) 

U09a4: tmp3:= unk_20d(0xfffffffffffffdff, tmp3) 
U09a5: SIGEVENT( , tmp2) 
U09a6: tmp3:= unk_201(0xffffffffffffcdff, tmp3) SEQW GOTO U315c

U09a8: tmp2:= unk_208(0x000000f5) 
U09a9: LFNCEMARK-> tmp3:= SIGEVENT(0xffffffffffffffff, tmp2) 
U09aa: tmp3:= unk_20d(0xfffffffffffffdff, tmp3) 

U09ac: tmp3:= unk_201(0xffffffffffffcdff, tmp3) 
U09ad: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U09ae: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x1a) !m1 SEQW GOTO U6716

U09b0: tmp2:= unk_00f(0x00000008) 
U09b1: tmp1:= unk_20c( , 0x00000001) 
U09b2: tmp3:= unk_20d( , tmp1) 

U09b4: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000001, U2711) !m1 
U09b5: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2875) 
U09b6: tmp2:= OR_DSZ32(0x00000010, tmp2) SEQW GOTO U081e

U09b8: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U09b9: tmp2:= unk_00f(0x00040000, tmp2) 
U09ba: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2769

U09bc: tmp3:= READURAM( , 0x0035, 64) 
U09bd: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000029, U2769) !m1 
U09be: LFNCEMARK-> MOVETOCREG_BTR_DSZ64(tmp2, 0x00000010, 0x7fe) !m2 SEQW GOTO U008e

U09c0: tmp0:= ZEROEXT_DSZ32(0x00000001) 
U09c1: tmp2:= ZEROEXT_DSZ32N(IMM_MACRO_02) !m0,m1 
U09c2: tmp1:= SUB_DSZN(0x00000001, rcx) !m1 

U09c4: tmp0:= SELECTCC_DSZ32_CONDZ(tmp1, tmp0) 
U09c5: tmp0:= SUB_DSZ32(0x00000001, tmp0) 
U09c6: tmp4:= SELECTCC_DSZ64_CONDNZ(tmp0, tmp2) SEQW GOTO U071d

U09c8: tmp2:= AND_DSZ8(rax, 0x0000000f) 
U09c9: tmp1:= LAHF() !m2 
U09ca: tmp4:= SUB_DSZ8(0x0000000a, tmp2) 

U09cc: tmp5:= SETCC_CONDNB(tmp4) 
U09cd: tmp1:= AND_DSZ16(0x00001000, tmp1) 
U09ce: tmp3:= OR_DSZ16(tmp5, tmp1) SEQW GOTO U0039

U09d0: tmp1:= MOVEINSERTFLGS_DSZ32( , 0x00000006) 
U09d1: tmp0:= READAFLAGS() !m2 
U09d2: tmp2:= ADD_DSZ8(0x00000066, rax) 

U09d4: tmp3:= READAFLAGS(tmp2) 
U09d5: tmp3:= OR_DSZ16(tmp0, tmp3) 
U09d6: tmp4:= AND_DSZ16(0x00000010, tmp3) SEQW GOTO U6049

U09d8: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x1a) !m1 
U09d9: tmp10:= unk_25e(rsp, 0x00000007) !m1 
U09da: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U09dc: rsp:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U09dd: tmp1:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U09de: STAD_DSZN_ASZ32_SC1(tmp1, mode=0x18,  , tmp0) !m1 SEQW UEND0

U09e0: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, rax) !m0,m1 
U09e1: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U09e2: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, rcx) !m0,m1 

U09e4: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_eb, mode=0x0a, rdx) !m0,m1 
U09e5: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_e3, mode=0x0a, rbx) !m0,m1 
U09e6: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_db, mode=0x0a, rsp) !m0,m1 SEQW GOTO U0172

U09e8: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 
U09e9: rdi:= ZEROEXT_DSZ32N(tmp0, rdi) !m1 
U09ea: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U09ec: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0,m1 
U09ed: rsi:= ZEROEXT_DSZ32N(tmp0, rsi) !m1 
U09ee: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_13, mode=0x0a) !m0,m1 SEQW GOTO U5b05

U09f0: tmp1:= unk_8bf(SS, IMM_MACRO_ALIAS_DISPLACEMENT) !m0 
U09f1: tmp1:= OR_DSZ16(tmp1) 
U09f2: tmp1:= SUB_DSZN(tmp1) !m1 

U09f4: tmp0:= ZEROEXT_DSZ32(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U09f5: tmp0:= AND_DSZ32(0x0000001f, tmp0) 
U09f6: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U68dd

U09f8: MOVE_DSZ32() 
U09f9: SAVEUIP( , 0x01, U1c84) !m0 
U09fa: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2769

U09fc: tmp0:= READURAM( , 0x005c, 64) 
U09fd: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000018, U2769) !m1 
U09fe: tmp1:= READURAM( , 0x0041, 64) SEQW GOTO U084e

U0a00: tmp9:= unk_d76(r64base, r64idx) !m0 
U0a01: tmm1:= PSHUFD(tmm1) 
U0a02: tmm0:= PSHUFD(mm2) 

U0a04: tmm2:= unk_51b(tmm0, tmm1) 
U0a05: tmm3:= unk_51b(tmm0, tmm1) 
U0a06: mm2:= unk_44f(tmm3, tmm2) SEQW UEND0

U0a08: tmm0:= unk_5ab(xmmsrc) 
U0a09: tmm4:= unk_5ab(xmmsrc) 
U0a0a: tmm1:= unk_5ab(xmmdst) 

U0a0c: tmm2:= SHUFPD(tmm4, tmm1) 
U0a0d: tmm1:= unk_5ab(xmmdst) 
U0a0e: tmm3:= SHUFPD(tmm0, tmm1) SEQW GOTO U075e

U0a10: tmp9:= unk_dd6(r64base, r64idx) !m0 
U0a11: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a12: tmp1:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_IMMEDIATE) !m0 

U0a14: tmm3:= unk_6b0(tmm1, xmmdst) !m0,m2 
U0a15: tmm4:= MOVHLPS(tmm3) 
U0a16: xmm2:= unk_6ad(tmm4, tmm3) !m0,m2 SEQW UEND0

U0a18: tmp9:= unk_dd6(r64base, r64idx) !m0 
U0a19: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a1a: tmp1:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_IMMEDIATE) !m0 

U0a1c: tmm3:= unk_6f0(tmm1, xmmdst) !m0,m2 
U0a1d: tmp9:= unk_52b(tmp11) 
U0a1e: tmm1:= unk_57a(tmm1) SEQW GOTO U0192

U0a20: tmm0:= unk_526(xmmdst, xmmsrc) !m0 
U0a21: tmm1:= unk_566(xmmdst, tmm0) !m0 
U0a22: xmm1:= unk_72f(tmm1) !m1 

U0a24: tmm3:= unk_5a3( , tmm1) 
U0a25: mm0:= unk_76b(tmm3) 
U0a26: MOVEINSERTFLGS_DSZ32(tmp0) !m2 SEQW UEND0

U0a28: tmp9:= unk_dd6(r64base, r64idx) !m0 
U0a29: tmm3:= SHUFPD(tmm1, tmm1) 
U0a2a: tmm3:= unk_6f7(tmm3) !m2 

U0a2c: tmm2:= unk_6f7(tmm1) !m2 
U0a2d: tmm3:= SHUFPD(tmm3, tmm3) 
U0a2e: xmm2:= ORPD(tmm3, tmm2) SEQW UEND0

U0a30: tmp1:= SUB_DSZ64(0x00000001) 
U0a31: LFNCEMARK-> tmp13:= SAVEUIP(0x00, U019a) 
U0a32: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0a34: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0a35: unk_c12(r64base, r64idx) !m0,m1 
U0a36: tmp0:= unk_88f(tmp11) !m0,m1 SEQW GOTO U6d38

U0a38: tmp1:= SUB_DSZ64(0x00000001) 
U0a39: LFNCEMARK-> tmp13:= SAVEUIP(0x00, U2bbd) 
U0a3a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0a3c: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0a3d: tmp2:= unk_88f(tmp11) !m0,m1 
U0a3e: tmp0:= LDZX_DSZN_ASZ32_SC1(tmp11, mode=0x18) !m1 SEQW GOTO U6afc

U0a40: tmp14:= SAVEUIP(0x01, U221e) !m0 
FUN_ucode_0000a41:
U0a41: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a42: tmp0:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 

U0a44: unk_c24(tmp0) !m1 
U0a45: WRTAGW-> tmm1:= unk_60f( , IMM_MACRO_ALIAS_STi) !m0,m1,m2 
U0a46: tmp9:= unk_c3c(tmp0) !m1 SEQW GOTO U1db2

U0a48: SAVEUIP( , 0x01, U01a2) !m0 
U0a49: LFNCEMARK-> AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a4a: tmp1:= LEA_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 

U0a4c: tmp0:= AND_DSZ8(0x0000000f, tmp1) 
U0a4d: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0a4e: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) SEQW URET1

U0a50: NOP 
U0a51: WRTAGW-> tmm5:= unk_6a8(IMM_MACRO_ALIAS_STi) !m0 
U0a52: LFNCEMARK-> tmp15:= unk_6a0() !m2 

U0a54: mm0:= unk_7ea(0x00000000) 
U0a55: tmm3:= unk_624(0x00000000) 
U0a56: tmp2:= PINTMOVDTMM2I_DSZ32(tmm3) SEQW GOTO U1c44

U0a58: tmp15:= ADD_DSZ32() 
U0a59: LFNCEMARK-> tmm7:= unk_4b5() !m2 
U0a5a: WRTAGW-> tmm6:= FMOV( , 0x00000005) !m0 

U0a5c: mm7:= FMOV( , 0x0000200d) !m0 
U0a5d: tmm7:= unk_6a8(0x00000000) 
U0a5e: mm0:= unk_72a(0x00000000) SEQW GOTO U3f05

U0a60: mm0:= unk_72a(0x00000000) 
U0a61: tmp8:= SHL_DSZ32(tmp0, 0x00000003) 
U0a62: LFNCEMARK-> tmm2:= unk_4b5() !m2 

U0a64: WRTAGW-> tmm7:= FMOV( , 0x00000005) !m0 
U0a65: tmm2:= unk_6a8(0x00000000) 
U0a66: tmm0:= unk_496(0x00000000) SEQW GOTO U3d91

sldt_r16_xlat:
U0a68: tmp2:= RDSEGFLD(LDT, SEL) 
U0a69: SAVEUIP( , 0x01, U086e) !m0 
U0a6a: SAVEUIP( , 0x00, U6395) 

U0a6c: TESTUSTATE( , SYS, !UST_8086_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW URET1
U0a6d: TESTUSTATE( , SYS, UST_8086_MODE) !m1 ? SEQW GOTO U2769
U0a6e: tmp0:= URET(0x0000042f, 0x00) 

U0a70: tmp0:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0a71: tmp1:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0a72: tmp0:= SUB_DSZN(tmp0, r64dst) !m1 

U0a74: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp0, U5eda) 
U0a75: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a76: tmp0:= LDZX_DSZN_ASZ32_SC1(tmp1, IMM_MACRO_ALIAS_DATASIZE, mode=0x18) !m0,m1 SEQW GOTO U4491

U0a78: tmp2:= ZEROEXT_DSZ32(0x00000003) 
U0a79: tmp4:= ZEROEXT_DSZ64N(IMM_MACRO_ALIAS_RIP) !m0,m1 
U0a7a: tmp3:= ZEROEXT_DSZ32(0x00000006) 

U0a7c: tmp8:= MOVEFROMCREG_DSZ64( , 0x79e) 
U0a7d: LFNCEMARK-> tmp6:= MOVE_DSZ32(0x00000000) 
U0a7e: tmp10:= unk_203( , 0x00000001) SEQW GOTO U2415

U0a80: tmp0:= MOVE_DSZ32(0x0000000e) 
U0a81: LFNCEMARK-> LBSYNC(0x00000002) 
U0a82: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U0a84: tmp6:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0a85: tmp6:= ZEROEXT_DSZ16N(tmp6) !m1 
U0a86: tmp8:= RDSEGFLD(SS_KERNM, UNK_FLD_0c) SEQW GOTO U28f9

U0a88: tmp4:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0a89: tmp5:= RDSEGFLD(SS_KERNM, UNK_FLD_0c) 
U0a8a: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U0a8c: tmp4:= ZEROEXT_DSZ16N(tmp4, 0x00000002) !m1 
U0a8d: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a8e: tmp5:= ADD_DSZN(tmp4, tmp5) !m1 SEQW GOTO U0d3d

U0a90: tmp1:= MOVE_DSZ32(0x00000020) 
U0a91: LFNCEMARK-> tmp11:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U0a92: UPDATEUSTATE( , !0x04) !m0 SEQW SAVEUIP0 U0a94SEQW GOTO U4499

U0a94: MOVETOCREG_DSZ64(tmp10, 0x7f6) !m2 SEQW GOTO U1bce
FUN_ucode_0000a95:
U0a95: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U0a96: PORTOUT_DSZ32_ASZ16_SC1(0x5114,  , tmp15) !m2 SEQW URET1

U0a98: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a99: tmp1:= LDZX_DSZN_ASZ32_SC1(rdi, mode=0x08) !m1 
U0a9a: tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 

U0a9c: SUB_DSZ32(tmp1, tmp0) !m1,m2 
U0a9d: rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 
U0a9e: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 SEQW UEND0

U0aa0: tmp15:= SHR_DSZN(rcx, 0x00000001) !m1 
U0aa1: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00003803) 
U0aa2: tmp14:= AND_DSZN(0x00000001, rcx) !m1 

U0aa4: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0aa5: tmp0:= MOVEMERGEFLGS_DSZ32(0x00001b9c, tmp15) 
U0aa6: tmp9:= SHL_DSZN(rcx, 0x00000003) !m1 SEQW GOTO U4764

U0aa8: tmp15:= SHR_DSZN(rcx, 0x00000002) !m1 
U0aa9: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00003002) 
U0aaa: tmp14:= AND_DSZN(0x00000003, rcx) !m1 

U0aac: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0aad: tmp0:= MOVEMERGEFLGS_DSZ32(0x00001b9c, tmp15) 
U0aae: tmp9:= SHL_DSZN(rcx, 0x00000002) !m1 SEQW GOTO U4764

U0ab0: tmp15:= SHR_DSZN(rcx, 0x00000003) !m1 
U0ab1: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00002801) 
U0ab2: tmp14:= AND_DSZN(0x00000007, rcx) !m1 

U0ab4: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0ab5: tmp0:= MOVEMERGEFLGS_DSZ32(0x00001b9c, tmp15) 
U0ab6: tmp9:= SHL_DSZN(rcx, 0x00000001) !m1 SEQW GOTO U4764

U0ab8: tmp15:= SHR_DSZN(rcx, 0x00000004) !m1 
U0ab9: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00002000) 
U0aba: tmp14:= AND_DSZN(0x0000000f, rcx) !m1 

U0abc: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0abd: tmp0:= MOVEMERGEFLGS_DSZ32(0x00001b9c, tmp15) 
U0abe: tmp9:= SHL_DSZN(rcx, 0x00000000) !m1 SEQW GOTO U4764

U0ac0: tmp15:= SHR_DSZN(rcx, 0x00000001) !m1 
U0ac1: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00003803) 
U0ac2: tmp14:= AND_DSZN(0x00000001, rcx) !m1 

U0ac4: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0ac5: tmp0:= MOVEMERGEFLGS_DSZ32(0x00003b51, tmp15) 
U0ac6: tmp9:= SHL_DSZN(rcx, 0x00000003) !m1 SEQW GOTO U4878

U0ac8: tmp15:= SHR_DSZN(rcx, 0x00000002) !m1 
U0ac9: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00003002) 
U0aca: tmp14:= AND_DSZN(0x00000003, rcx) !m1 

U0acc: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0acd: tmp0:= MOVEMERGEFLGS_DSZ32(0x00003b51, tmp15) 
U0ace: tmp9:= SHL_DSZN(rcx, 0x00000002) !m1 SEQW GOTO U4878

U0ad0: tmp15:= SHR_DSZN(rcx, 0x00000003) !m1 
U0ad1: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00002801) 
U0ad2: tmp14:= AND_DSZN(0x00000007, rcx) !m1 

U0ad4: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0ad5: tmp0:= MOVEMERGEFLGS_DSZ32(0x00003b51, tmp15) 
U0ad6: tmp9:= SHL_DSZN(rcx, 0x00000001) !m1 SEQW GOTO U4878

U0ad8: tmp15:= SHR_DSZN(rcx, 0x00000004) !m1 
U0ad9: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00002000) 
U0ada: tmp14:= AND_DSZN(0x0000000f, rcx) !m1 

U0adc: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0add: tmp0:= MOVEMERGEFLGS_DSZ32(0x00003b51, tmp15) 
U0ade: tmp9:= SHL_DSZN(rcx, 0x00000000) !m1 SEQW GOTO U4878

rdmsr_xlat:
U0ae0: tmp8:= MOVEINSERTFLGS_DSZ64(0x00000031, rcx) !m1 
U0ae1: LFNCEMARK-> tmp1:= ZEROEXT_DSZ32() 
U0ae2: tmp5:= TESTUSTATE(tmp1, SYS, UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW SAVEUIP0 U0ae4? SEQW GOTO U6885

U0ae4: tmp10:= NOTAND_DSZ32(0x0001c000, tmp8) 
U0ae5: tmp10:= MSR2CR( , tmp10) 
U0ae6: SAVEUIP( , 0x00, U0686) SEQW GOTO U3e19

vmxon_xlat:
U0ae8: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0ae9: LFNCEMARK-> tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0aea: tmp1:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U0aec: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U2769) !m1 
U0aed: tmp3:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U0aee: tmp3:= NOTAND_DSZ32(tmp3, 0x80000021) SEQW GOTO U1d6a

vmptrld_xlat:
U0af0: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0af1: LFNCEMARK-> tmp6:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0af2: TESTUSTATE( , SYS, !UST_VMX_DIS | UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U2979

U0af4: SAVEUIP( , 0x00, U2979) 
U0af5: tmp4:= ZEROEXT_DSZ32(0x00000000) 
U0af6: tmp0:= ZEROEXT_DSZ32(0x00000415) SEQW GOTO U6786

vmclear_xlat:
U0af8: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0af9: LFNCEMARK-> tmp6:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0afa: TESTUSTATE( , SYS, !UST_VMX_DIS | UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U5e51

U0afc: SAVEUIP( , 0x00, U5e51) 
U0afd: tmp4:= ZEROEXT_DSZ32(0x00000002) 
U0afe: tmp0:= ZEROEXT_DSZ32(0x00000413) SEQW GOTO U6786

U0b00: tmp3:= READURAM( , 0x0043, 64) 
U0b01: LFNCEMARK-> tmp1:= READURAM( , 0x0054, 64) 
U0b02: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U2769

U0b04: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000002d, U2769) !m1 
U0b05: tmp14:= READURAM( , 0x0010, 64) 
U0b06: tmp2:= OR_DSZ32(rax) SEQW GOTO U48c8

vmcall_xlat:
U0b08: tmp2:= MOVE_DSZ32(0x00000012) 
U0b09: ROVR<-LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(tmp2) SEQW SAVEUIP1 U0b0aSEQW GOTO U1c79
U0b0a: SAVEUIP( , 0x00, U2a51) 

U0b0c: tmp13:= ZEROEXT_DSZ32(0x00000001) 
U0b0d: TESTUSTATE( , SYS, UST_VMX_DIS | UST_USER_MODE | UST_SMM | UST_VMX_OP_DIS) !m1 ? SEQW GOTO U0072
U0b0e: tmp9:= READURAM( , 0x0056, 64) SEQW URET0

enclu_xlat:
U0b10: TESTUSTATE( , SYS, !0x2000) !m0,m1 ? SEQW GOTO U769a
U0b11: tmp14:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U0b12: tmp14:= BT_DSZ64(tmp14, 0x0000002e) 

U0b14: tmp15:= NOTAND_DSZ32(0x00000001, rax) 
U0b15: tmp15:= SELECTCC_DSZ32_CONDNB(tmp14, tmp15) 
U0b16: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000002, U44f1) !m0 SEQW GOTO U769a

U0b18: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U0b19: tmp0:= ZEROEXT_DSZ32(0x0000000d) 
U0b1a: tmp7:= ZEROEXT_DSZ32(0x00000002) 

U0b1c: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U4501) 
U0b1d: tmp15:= READURAM( , 0x001f, 64) !m2 
U0b1e: tmp15:= BTR_DSZ64(tmp15, 0x0000000a) SEQW GOTO U0ef5

U0b20: tmp2:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0b21: LFNCEWTMRK-> tmp0:= NOTAND_DSZ32(0x00000003, tmp2) 
U0b22: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 

U0b24: tmp5:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U0b25: tmp6:= READURAM( , 0x0011, 64) 
U0b26: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000270, mode=0x01, tmp6) SEQW GOTO U0159

U0b28: tmp4:= OR_DSZ64(r64src) 
U0b29: tmp8:= ADD_DSZ32() 
U0b2a: tmp0:= NOTAND_DSZ64(0x0000001f, r64dst) 

U0b2c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 
U0b2d: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0b2e: SIGEVENT( , 0x00000047) SEQW GOTO U3a75

U0b30: tmp4:= OR_DSZ64(r64src) 
U0b31: tmp8:= ADD_DSZ32() 
U0b32: BTUJNB_DIRECT_NOTTAKEN(r64dst, 0x00000010, U63bd) !m1 

U0b34: LFNCEMARK-> tmp0:= SHL_DSZ64(r64dst, 0x0000001d) 
U0b35: tmp1:= MOVEFROMCREG_DSZ64( , 0x51c) 
U0b36: tmp3:= SHR_DSZ64(tmp1, 0x0000003f) SEQW GOTO U63b2

U0b38: tmp4:= OR_DSZ64(r64src) 
U0b39: tmp8:= ADD_DSZ32() 
U0b3a: MOVE_DSZ32() 

U0b3c: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U0b3d: tmp0:= BTR_DSZ64(r64dst, 0x0000003f) 
U0b3e: tmp1:= SUB_DSZ64(0x00000005, tmp0) SEQW GOTO U0e84

U0b40: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U0b41: tmp6:= ZEROEXT_DSZ64N(IMM_MACRO_ALIAS_RIP) !m0,m1 
U0b42: tmp14:= MOVE_DSZ32(IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0b44: tmp14:= SHL_DSZ32(tmp14, 0x00000001) 
U0b45: tmp14:= BTS_DSZ32(tmp14, 0x00000013) 
U0b46: tmp14:= ZEROEXT_DSZ16(0x000019be, tmp14) SEQW GOTO U2f01

U0b48: tmp12:= LDZX_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0b49: TESTUSTATE( , SYS, !UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U0b4e
U0b4a: tmp15:= SUB_DSZ64(0x00000001) 

U0b4c: WRITEURAM(tmp15, 0x0057, 64) !m2 
U0b4d: WRITEURAM(tmp15, 0x0056, 64) !m2 
U0b4e: LFNCEMARK-> WRITEURAM(tmp12, 0x0011, 64) !m2 SEQW GOTO U0794

U0b50: tmp15:= READURAM( , 0x0053, 64) 
U0b51: tmp0:= ZEROEXT_DSZ32(0x00000004) 
U0b52: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000006, U079e) !m0 

U0b54: tmp4:= MOVEFROMCREG_DSZ64( , 0x562) 
U0b55: tmp4:= NOTAND_DSZ64(0x00000fff, tmp4) 
U0b56: tmp0:= ADD_DSZ64(0x00000040, tmp4) SEQW GOTO U6c30

udbgrd_xlat:
U0b58: tmp1:= MOVE_DSZ64() 
U0b59: tmp3:= MOVEFROMCREG_DSZ64( , 0x38c, 32) !m1 
U0b5a: tmp3:= NOTAND_DSZ32(tmp3, 0xa0000000) 

U0b5c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U028d) 
U0b5d: tmp3:= READURAM( , 0x005c, 64) 
U0b5e: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000002, U028d) !m0 SEQW GOTO U028a

U0b60: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U0b64
U0b61: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0b62: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000012, U2769) !m0,m1 

U0b64: tmp0:= SHR_DSZ32(rcx, 0x00000001) 
U0b65: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 
U0b66: tmp0:= READURAM( , 0x005b, 64) !m2 SEQW GOTO U0564

U0b68: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U0b6c
U0b69: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0b6a: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000012, U2769) !m0,m1 

U0b6c: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00000016) 
U0b6d: TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW GOTO U6976
U0b6e: UJMP( , U2711) 

U0b70: tmp0:= ZEROEXT_DSZ32(0x0001000d) 
U0b71: LFNCEMARK-> tmp1:= ZEROEXT_DSZ32(0x0000000d) 
U0b72: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0b74: tmp6:= READURAM( , 0x005b, 64) !m2 
U0b75: tmp6:= SHR_DSZ64(tmp6, 0x00000038) 
U0b76: tmp4:= AND_DSZ32(rax, tmp6) SEQW GOTO U4d4c

U0b78: tmp1:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0b79: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U2769) !m0,m1 
U0b7a: LFNCEMARK-> TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U0b7e

U0b7c: tmp1:= READURAM( , 0x0043, 64) 
U0b7d: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000034, U2769) !m1 
U0b7e: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U2b86

U0b80: tmp0:= READURAM( , 0x005b, 64) !m2 
U0b81: tmp6:= SHR_DSZ64(tmp0, 0x00000038) 
U0b82: tmp2:= READURAM( , 0x0023, 64) 

U0b84: tmp2:= AND_DSZ64(0x00000100, tmp2) 
U0b85: tmp6:= OR_DSZ64(tmp2, tmp6) 
U0b86: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U3531

U0b88: tmp0:= READURAM( , 0x005b, 64) !m2 
U0b89: tmp6:= SHR_DSZ64(tmp0, 0x00000038) 
U0b8a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0b8c: tmp11:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U0b8d: tmp0:= ZEROEXT_DSZ32(0x0001000f) 
U0b8e: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) SEQW GOTO U4c7c

lidt_xlat:
U0b90: SAVEUIP_REGOVR(0x01, U0b91, 0x0006) !m0 
FUN_ucode_0000b91:
U0b91: SAVEUIP( , 0x00, U6390) 
U0b92: MOVE_DSZ32() 

U0b94: LFNCEMARK-> LBSYNC(0x00000002) 
U0b95: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0b96: tmp14:= READUIP_REGOVR(0x01) !m0 

U0b98: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW URET0
U0b99: tmp1:= ZEROEXT_DSZ32() 
U0b9a: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4f5e

U0b9c: TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW GOTO U73ad
U0b9d: NOP 
U0b9e: URET(0x01) !m0 

str_m16_xlat:
U0ba0: SAVEUIP_REGOVR(0x01, U0ba1, 0x000f) !m0 
U0ba1: SAVEUIP( , 0x01, U0721) !m0 
FUN_ucode_0000ba2:
U0ba2: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U0a6a

U0ba4: tmp0:= OR_DSZN(0x00010000) !m1 
U0ba5: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U0a6a) 
U0ba6: tmp0:= RDSEGFLD(SEG_V0, BASE) 

U0ba8: tmp1:= RDSEGFLD(SEG_V0, SEL+FLGS+LIM) SEQW GOTO U08ea
FUN_ucode_0000ba9:
U0ba9: tmp2:= NOTAND_DSZ64(0x00000fff, tmp2) 
U0baa: STADPPHYS_DSZ32_ASZ64_SC1(tmp2, mode=0x01,  , 0x00000000) 

U0bac: unk_a63(tmp14, 0x00008253) 
U0bad: WRITEURAM(tmp6, 0x002c, 64) !m2 
U0bae: tmp14:= ZEROEXT_DSZ32(0x00005f40) SEQW GOTO U3ece

U0bb0: tmp3:= UPDATEUSTATE(!0x0c) !m0 
U0bb1: LFNCEMARK-> SAVEUIP( , 0x01, U19f0) !m0 
FUN_ucode_0000bb2:
U0bb2: tmp2:= MOVEFROMCREG_DSZ64( , 0x7ff) 

U0bb4: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U2769) !m1 
U0bb5: tmp2:= unk_04d(rsp, rsp) 
U0bb6: tmp0:= READURAM( , 0x0081, 64) SEQW URET1

U0bb8: TESTUSTATE( , SYS, UST_SMM | 0x4000) !m1 ? SEQW GOTO U1bce
U0bb9: SAVEUIP( , 0x00, U043c) 
FUN_ucode_0000bba:
U0bba: SAVEUIP( , 0x01, U1bd0) !m0 

FUN_ucode_0000bbc:
U0bbc: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW URET0
U0bbd: tmp9:= READURAM( , 0x0079, 64) 
U0bbe: tmp4:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U1d14

U0bc0: tmp2:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0bc1: LFNCEMARK-> tmp4:= ZEROEXT_DSZ64N(IMM_MACRO_ALIAS_RIP) !m0,m1 
U0bc2: tmp6:= ZEROEXT_DSZ16(0x00000000) 

U0bc4: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U27c8
U0bc5: NOP 
U0bc6: NOP 

U0bc8: tmp0:= unk_206( , 0x00000001) SEQW GOTO U565d
write_port_4c:
U0bc9: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x47f0) !m2 
U0bca: tmp0:= SHR_DSZ64(tmp0, 0x0000000d) 

U0bcc: tmp0:= AND_DSZ32(0x00000008, tmp0) 
U0bcd: rcx:= OR_DSZ32(0x00000001, tmp0) 
U0bce: rbx:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U1bd0

wmptrst_xlat:
U0bd0: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0bd1: tmp6:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0bd2: TESTUSTATE( , SYS, !UST_VMX_DIS | UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U0bd6

U0bd4: tmp0:= ZEROEXT_DSZ32(0x00000416) 
U0bd5: tmp4:= ZEROEXT_DSZ32(0x00000001) SEQW SAVEUIP0 U0bd6SEQW GOTO U6786
U0bd6: tmp3:= READURAM( , 0x0056, 64) 

U0bd8: STAD_DSZ64_ASZ32_SC1(tmp5, mode=0x18,  , tmp3) SEQW GOTO U0794
FUN_ucode_0000bd9:
U0bd9: tmp0:= READURAM( , 0x0020, 64) 
U0bda: tmp0:= SHR_DSZ64(tmp0, 0x00000028) 

U0bdc: tmp0:= AND_DSZ32(0x0000001f, tmp0) 
U0bdd: tmp0:= MOVEMERGEFLGS_DSZ32(tmp0, tmp8) 
U0bde: rbx:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x00000001) SEQW GOTO U1bd0

cpuid_xlat:
U0be0: tmp0:= MOVE_DSZ32(0x0000000a) 
U0be1: LFNCEMARK-> TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW GOTO U4808
U0be2: tmp2:= READURAM( , 0x0023, 64) 

U0be4: tmp1:= MOVEFROMCREG_DSZ64( , 0x105) 
U0be5: tmp2:= SHR_DSZ32(tmp2, 0x0000000d) 
U0be6: tmp2:= NOTAND_DSZ32(tmp1, tmp2) 

U0be8: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000002, U2711) !m0,m1 SEQW GOTO U4808
U0be9: tmpv0:= PORTIN_DSZ32_ASZ16_SC1(0x483c) !m2 
U0bea: tmpv0:= ADD_DSZ32(0x00000000, tmpv0) 

U0bec: tmpv1:= MOVEFROMCREG_DSZ64( , 0x286, 32) !m1 
U0bed: tmpv1:= OR_DSZ32(tmpv1, 0x000506c0) 
U0bee: tmpv0:= CMOVCC_DSZ32_CONDNZ(tmpv0, tmpv1) SEQW URET1

U0bf0: tmp1:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U0696
U0bf1: SYNCMARK-> tmp8:= ZEROEXT_DSZ32(0x0000001e) 
U0bf2: SAVEUIP( , 0x00, U3210) 

U0bf4: tmp0:= SAVEUIP_REGOVR(0x01, U0bf5, 0x0028) !m0 SEQW GOTO U1cfc
U0bf5: tmp2:= TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW URET0
U0bf6: tmp4:= READURAM( , 0x0043, 64) 

U0bf8: SYNCMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp4, 0x0000002a, U3210) !m0,m1,m2 
U0bf9: tmp7:= READURAM( , 0x002f, 64) SEQW GOTO U1c99
U0bfa: tmpv1:= ZEROEXT_DSZ32() 

U0bfc: tmpv0:= READURAM( , 0x0014, 64) 
U0bfd: tmpv0:= NOTAND_DSZ64(tmpv1, tmpv0) 
U0bfe: tmpv1:= SHR_DSZ64(tmpv0, 0x00000015) SEQW GOTO U1c5e

U0c00: tmp0:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0c01: LFNCEMARK-> AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0c02: tmp9:= unk_ce7(tmp0) 

U0c04: tmp13:= unk_52b(tmp9) 
U0c05: tmm1:= unk_5ba( , tmm1) 
U0c06: mm6:= unk_7aa(tmm5) 

U0c08: WRTAGW-> tmm5:= FMOV() !m2 
U0c09: tmp0:= AND_DSZ32(0x000000ff, tmp6) SEQW GOTO U7109
U0c0a: tmpv0:= READURAM( , 0x008c, 64) 

U0c0c: BTUJB_DIRECT_NOTTAKEN(tmpv0, 0x0000001d, U77da) !m1,m2 
U0c0d: tmpv0:= MOVEFROMCREG_DSZ64( , 0x261, 32) !m1 
U0c0e: SAVEUIP( , 0x00, U77da) SEQW GOTO U334d

sgdt_xlat:
U0c10: tmp1:= RDSEGFLD(GDT, LIMIT) 
U0c11: tmp3:= RDSEGFLD(GDT, BASE) 
U0c12: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 

U0c14: tmp0:= ZEROEXT_DSZ32(0x0000042e) 
U0c15: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0c16: TESTUSTATE( , VMX, !0x0040) !m0,m2 ? SEQW GOTO U6396

U0c18: STAD_DSZ16_ASZ32_SC1(tmp2, mode=0x18,  , tmp1) 
U0c19: STAD_DSZN_ASZ32_SC1(tmp2, 0x00000002, mode=0x18,  , tmp3) !m1 SEQW UEND0
U0c1a: tmp2:= BT_DSZ16(tmp9, 0x0000000b) 

U0c1c: tmp3:= SELECTCC_DSZ32_CONDB(tmp2, tmp0) 
U0c1d: LFNCEMARK-> tmm6:= unk_743(mm3) !m2 
U0c1e: MOVEINSERTFLGS_DSZ32(0x0000000b) !m2 SEQW GOTO U3ab6

U0c20: SAVEUIP_REGOVR(0x01, U0c21, 0x0007) !m0 SEQW GOTO U5d62
U0c21: LFNCEWAIT-> tmp2:= LDZX_DSZ16_ASZ32_SC1(tmp2, mode=0x18) 
U0c22: NOP 

U0c24: LFNCEWAIT-> tmp0:= unk_d61(tmp2) 
U0c25: NOP 
U0c26: NOP 

U0c28: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) !m1 
U0c29: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) SEQW GOTO U01ba
U0c2a: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp6, U2b11) 

U0c2c: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U0c2d: tmp3:= AND_DSZ16(tmp2, 0x00000001) 
U0c2e: LFNCEWAIT-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1a50) SEQW GOTO U1431

U0c30: tmp3:= UPDATEUSTATE( , 0xfc) 
U0c31: LFNCEMARK-> tmp0:= READURAM( , 0x0074, 64) 
U0c32: tmp0:= NOTAND_DSZ16(0x00000003, tmp0) 

U0c34: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U2711) 
U0c35: tmp1:= READURAM( , 0x0076, 64) 
U0c36: tmp5:= TESTUSTATE(tmp0, SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U0c39

U0c38: UPDATEUSTATE( , !0x04) !m0 
U0c39: tmp2:= READURAM( , 0x0075, 64) 
U0c3a: TESTUSTATE( , SYS, UST_8086_MODE) !m1 ? SEQW GOTO U0cd5

U0c3c: tmp6:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U0c3d: tmp6:= NOTAND_DSZ32(0x00030200, tmp6) 
U0c3e: ROVR<- MOVE_DSZ32() SEQW SAVEUIP1 U0c40SEQW GOTO U19fc

U0c40: tmp3:= ZEROEXT_DSZ32(0x00000005) 
U0c41: LFNCEMARK-> tmp4:= MOVE_DSZ64(IMM_MACRO_ALIAS_RIP) !m0,m1 
U0c42: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U2f19

U0c44: tmp2:= ZEROEXT_DSZ32(0x00000001) 
U0c45: tmp6:= ZEROEXT_DSZ16(0x00000404) 
U0c46: LFNCEWAIT-> SAVEUIP( , 0x00, U0816) 

U0c48: tmp7:= MOVEFROMCREG_DSZ64( , 0x01c) 
U0c49: tmp7:= NOTAND_DSZ64(0x00004000, tmp7) 
U0c4a: MOVETOCREG_DSZ64( , 0x00000000, 0x086) SEQW GOTO U6678

U0c4c: tmp5:= ADD_DSZ64(0x00000284, tmp14) 
U0c4d: tmp6:= SUB_DSZ32(0x00000284, tmp13) 
U0c4e: tmp8:= ZEROEXT_DSZ32(0x00000059) SEQW GOTO U5f2d

U0c50: SAVEUIP( , 0x00, U05ea) 
U0c51: SAVEUIP( , 0x01, U1e21) !m0 SEQW GOTO U2d1c
U0c52: tmp0:= MOVEFROMCREG_DSZ64( , 0x2dc, 32) !m1 

U0c54: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U0c52) 
U0c55: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2db) !m0,m1 
U0c56: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x0018) !m2 

U0c58: tmp0:= unk_0bc(tmp0) 
U0c59: tmp1:= SHL_DSZ32(tmp0, 0x00000003) 
U0c5a: tmp2:= SUB_DSZ32(0x00000014, tmp0) 

U0c5c: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp2, U058c) 
U0c5d: tmp2:= ADD_DSZ32(tmp1, 0x00004504) 
U0c5e: UJMP( , tmp2) 

U0c60: SAVEUIP( , 0x00, U05ea) 
U0c61: SAVEUIP( , 0x01, U1e21) !m0 
FUN_ucode_0000c62:
U0c62: LFNCEMARK-> tmp11:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U0c64: TESTUSTATE( , SYS, !UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW URET0
U0c65: tmp5:= READURAM( , 0x001a, 64) 
U0c66: tmp6:= READURAM( , 0x0019, 64) 

U0c68: tmp2:= ZEROEXT_DSZ32(0x00000068) SEQW URET1
U0c69: tmp1:= ZEROEXT_DSZ32() 
U0c6a: TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW GOTO U73ad

U0c6c: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4f5e
U0c6d: NOP 
U0c6e: URET(0x01) !m0 

mov_r64_cr8_xlat:
U0c70: LFNCEWAIT-> tmp3:= MOVEFROMCREG_DSZ64( , 0x288, 32) !m1 
U0c71: TESTUSTATE( , SYS, UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW GOTO U59e4
U0c72: r64src:= SHR_DSZ32(tmp3, 0x00000004) SEQW UEND0

U0c74: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp12, tmp9, tmp7) SEQW UEND0
U0c75: tmm0:= unk_525(tmm0, xmmsrc) !m0 
U0c76: xmm0:= unk_5a5(xmmdst, tmm0) !m0 SEQW GOTO U082a

U0c78: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp12, tmp9, tmp7) SEQW UEND0
U0c79: r64src:= AND_DSZ16(0xfffffffffffffffc, r64src) 
U0c7a: r64src:= OR_DSZ16(tmp3, r64src) SEQW GOTO U038c

U0c7c: LFNCEWAIT-> STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp12, tmp9, tmp7) SEQW UEND0
U0c7d: SIGEVENT( , 0x00000017) 
U0c7e: tmp13:= SAVEUIP(0x00, U0382) SEQW GOTO U01c2

wrmsr_xlat:
U0c80: MOVE_DSZ32() 
U0c81: LFNCEMARK-> tmp8:= MOVEINSERTFLGS_DSZ64(0x00000030, rcx) !m1 
U0c82: tmp5:= CONCAT_DSZ32(rdx, rax) 

U0c84: NOP 
U0c85: NOP 
U0c86: tmp1:= TESTUSTATE( , SYS, UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW SAVEUIP0 U0c88? SEQW GOTO U6885

U0c88: tmp2:= AND_DSZ32(0xc0000f80, rcx) 
U0c89: tmp2:= SUB_DSZ32(0x00000800, tmp2) 
U0c8a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U0105) SEQW GOTO U0101

U0c8c: tmp1:= READURAM( , 0x005c, 64) 
U0c8d: tmp1:= BTS_DSZ64(tmp1, 0x00000017) 
U0c8e: LFNCEMARK-> WRITEURAM(tmp1, 0x005c, 64) SEQW GOTO U6380

U0c90: tmp2:= ZEROEXT_DSZ16(r64src) 
U0c91: tmp3:= OR_DSZN(rsp) !m1 
U0c92: tmp13:= SAVEUIP(0x00, U0886) SEQW SAVEUIP1 U0c94SEQW GOTO U2c00

U0c94: LFNCEMARK-> unk_e7b(tmp0, tmp2) !m1,m2 
U0c95: ZEROEXT_DSZ32(rsp) 
U0c96: NOP 

U0c98: LFNCEWAIT-> tmp0:= RDSEGFLD(SS_USERM, FLGS) 
U0c99: MOVETOCREG_DSZ64(tmp0, 0x73c) 
U0c9a: NOP 

U0c9c: SYNCMARK-> tmp0:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 
U0c9d: WRSEGFLD(tmp0, SS, SEL+FLGS+LIM) 
U0c9e: tmp0:= RDSEGFLD(SS_USERM, BASE) 

U0ca0: SYNCWAIT-> WRSEGFLD(tmp0, SS, BASE) SEQW URET0
U0ca1: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2e3d
U0ca2: tmp14:= SAVEUIP(0x01, U1000) !m0 

U0ca4: NOP 
U0ca5: NOP 
U0ca6: UJMP( , tmp11) 

rdtsc_xlat:
U0ca8: tmp3:= ZEROEXT_DSZ32(0x00000010) 
U0ca9: SAVEUIP( , 0x00, U030d) 
U0caa: ROVR<- TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW SAVEUIP1 U0cac? SEQW GOTO U0cae

U0cac: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0cad: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000002, U2711) !m0,m1 
FUN_ucode_0000cae:
U0cae: tmp0:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3041

U0cb0: tmp2:= ZEROEXT_DSZ32(0x0000000c) 
U0cb1: tmp0:= TESTUSTATE(tmp3, VMX, !0x0100) !m0,m2 ? SEQW GOTO U28ad
FUN_ucode_0000cb2:
U0cb2: tmp14:= READUIP_REGOVR(0x01) !m0 

U0cb4: tmp13:= READUIP_REGOVR(0x00) 
U0cb5: tmpv1:= TESTUSTATE( , VMX, 0x0080) !m2 ? SEQW GOTO U3041
U0cb6: tmpv0:= READURAM( , 0x0057, 64) 

U0cb8: SYNCMARK-> tmpv1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000060, tmpv0) SEQW GOTO U3041
U0cb9: tmp7:= ZEROEXT_DSZ32(0x4000004c) 
U0cba: tmp8:= ZEROEXT_DSZ32(0x00000002) 

U0cbc: PORTOUT_DSZ32_ASZ16_SC1(tmp7,  , tmp8) 
U0cbd: tmp8:= PORTIN_DSZ32_ASZ16_SC1(tmp7) 
U0cbe: BTUJNB_DIRECT_NOTTAKEN(tmp8, 0x00000000, U0cbd) SEQW GOTO U06c6

rdpmc_xlat:
U0cc0: tmp3:= ROL_DSZ32(rcx, 0x00000002) 
U0cc1: tmp1:= ADD_DSZ8(tmp3, 0x00002260) 
U0cc2: tmp7:= MOVEFROMCREG_DSZ64( , tmp1) !m1 

U0cc4: tmp1:= NOTAND_DSZ32(0x40000003, rcx) 
U0cc5: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0cc6: TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW GOTO U0cca

U0cc8: tmp2:= AND_DSZ32(0x00000100, tmp2) 
U0cc9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U2711) 
U0cca: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U0cd0

U0ccc: tmp0:= ZEROEXT_DSZ32(0x0000000f) 
U0ccd: tmp2:= ZEROEXT_DSZ32(0x0000000b) 
U0cce: TESTUSTATE( , VMX, !0x0010) !m0,m2 ? SEQW GOTO U28ad

U0cd0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 
U0cd1: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x0000000d, U2711) !m1 
U0cd2: rax:= TESTUSTATE(tmp7, UCODE, 0x0200) ? SEQW GOTO U07cd

U0cd4: rdx:= SHR_DSZ64(tmp7, 0x00000020) SEQW UEND0
U0cd5: tmp6:= unk_203( , 0x00000001) 
U0cd6: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U2711) SEQW GOTO U0c3c

vmwrite_r64_r64_xlat:
U0cd8: tmp14:= SAVEUIP(0x01, U024c) !m0 
U0cd9: tmp7:= OR_DSZN(r64src) !m1 
U0cda: tmp2:= RDVMCSPLA( , r64dst) 

U0cdc: tmp10:= AND_DSZ32(0x00000c00, tmp2) 
U0cdd: tmp10:= SHR_DSZ32(tmp10, 0x00000008) 
U0cde: tmp8:= ADD_DSZ32(0x00000c74, tmp10) 

U0ce0: SAVEUIP( , 0x00, U0686) 
U0ce1: tmp13:= ZEROEXT_DSZ32(tmp8) 
U0ce2: SYNCMARK-> UFLOWCTRL( , tmp13, URET0) 

U0ce4: tmp6:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0ce5: tmp12:= READURAM( , 0x0056, 64) 
U0ce6: tmp1:= ADD_DSZ64(0x00000001, tmp12) 

U0ce8: tmp11:= SHR_DSZN(r64dst, 0x0000000f) !m1 
U0ce9: tmp9:= AND_DSZ32(0x000003fe, tmp2) 
U0cea: TESTUSTATE( , SYS, !UST_VMX_DIS | UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U0cf5

U0cec: TESTUSTATE( , UCODE, 0x1000) ? SEQW GOTO U0cf5
U0ced: tmp0:= MOVEINSERTFLGS_DSZ32(0x00000419) 
U0cee: NOP 

U0cf0: SYNCWAIT-> tmp4:= ZEROEXT_DSZ32(0x00000006) SEQW SAVEUIP0 U0cf1SEQW GOTO U6786
U0cf1: SAVEUIP( , 0x00, U0686) 
U0cf2: tmp13:= ZEROEXT_DSZ32(tmp8) 

U0cf4: UFLOWCTRL( , tmp13, URET0) 
U0cf5: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, U04b6) SEQW URET1
U0cf6: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U0362

U0cf8: tmp3:= ZEROEXT_DSZ32(0x00000362) SEQW GOTO U06ce
U0cf9: tmpv0:= CONCAT_DSZ16(0x0000070f) 
U0cfa: tmpv0:= OR_DSZ32(tmpv0, 0x00000001) 

U0cfc: tmpv1:= READURAM( , 0x0020, 64) 
U0cfd: tmpv1:= CONCAT_DSZ8(tmpv1, 0x00000046) 
U0cfe: tmpv1:= SHL_DSZ64(tmpv1, 0x00000030) 

U0d00: tmpv1:= OR_DSZ64(0x000046b4, tmpv1) 
U0d01: tmpv3:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 
U0d02: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmpv3, 0x00000000, U0d01) 

FUN_ucode_0000d04:
U0d04: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x22e) !m0,m1 SEQW SAVEUIP1 U0d05SEQW GOTO U3be6
U0d05: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1 
U0d06: URET(0x00) 

U0d08: tmp10:= ZEROEXT_DSZ32(0x00003380) 
U0d09: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000028, tmp12) 
U0d0a: tmp3:= unk_04d(tmp13) SEQW GOTO U5a05

U0d0c: tmp13:= ZEROEXT_DSZ64(tmp3) SEQW GOTO U54ee
U0d0d: tmp7:= ZEROEXT_DSZ32(0x00000021) 
U0d0e: LFNCEMARK-> MOVETOCREG_DSZ64(tmp7, 0x00b) 

U0d10: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U0d11: tmp10:= READAFLAGS( , tmp10) !m2 
U0d12: tmp9:= ZEROEXT_DSZ32(tmp10) SEQW SAVEUIP0 U0d14SEQW GOTO U62f2

U0d14: tmp15:= unk_207(0x000000f5) 
U0d15: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp7, U5958, tmp5) !m2 
U0d16: tmp14:= ZEROEXT_DSZ32(0x00014809) 

U0d18: SAVEUIP_REGOVR( , 0x01, U0d19, 0x7503) !m0 SEQW GOTO U3722
U0d19: NOP 
U0d1a: NOP 

U0d1c: SAVEUIP( , 0x01, U63a1) !m0 SEQW GOTO U0dc8
U0d1d: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U0d1e: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000004) 

U0d20: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000008) 
U0d21: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp10, 0x00000000, U0d26) 
U0d22: tmp5:= PORTIN_DSZ32_ASZ16_SC1(tmp8) 

U0d24: tmp5:= AND_DSZ32(tmp10, tmp5) 
U0d25: tmp9:= OR_DSZ32(tmp9, tmp5) 
U0d26: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(tmp8,  , tmp9) 

U0d28: LFNCEWAIT-> tmp4:= ADD_DSZ64(0x0000000c, tmp4) 
U0d29: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U0d1d
U0d2a: NOP 

U0d2c: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 SEQW GOTO U1f9a
U0d2d: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U0d2e: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x00000004) 

U0d30: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x0000000c) 
U0d31: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp10, 0x00000000, U0d36) 
U0d32: tmp5:= PORTIN_DSZ64_ASZ16_SC1(tmp8) 

U0d34: tmp5:= AND_DSZ64(tmp10, tmp5) 
U0d35: tmp9:= OR_DSZ64(tmp9, tmp5) 
U0d36: LFNCEMARK-> PORTOUT_DSZ64_ASZ16_SC1(tmp8,  , tmp9) 

U0d38: LFNCEWAIT-> tmp4:= ADD_DSZ64(0x00000014, tmp4) 
U0d39: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U0d2d
U0d3a: NOP 

U0d3c: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 SEQW GOTO U1f9a
U0d3d: tmp10:= LDZX_DSZ16_ASZ32_SC1(tmp4, mode=0x18) 
U0d3e: tmp1:= CONCAT_DSZ16(tmp10, 0x00000070) 

U0d40: WRITEURAM(tmp5, 0x003e, 64) !m2 
U0d41: MOVE_DSZ32() 
U0d42: UPDATEUSTATE( , 0xfc) 

U0d44: UPDATEUSTATE( , !0x08) !m0 SEQW SAVEUIP0 U0d45SEQW GOTO U2d19
U0d45: tmp10:= AND_DSZ32(0x0000000f, tmp10) 
U0d46: tmp9:= NOTAND_DSZ32(0x0000000e, tmp11) 

U0d48: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmp10, 0x7f6, tmp9) 
U0d49: tmp9:= NOTAND_DSZ32(tmp11, tmp10) 
U0d4a: NOP 

U0d4c: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000000, U0bb9) SEQW GOTO U1bd0
U0d4d: tmp8:= READURAM( , 0x0078, 64) 
U0d4e: tmp9:= AND_DSZ32(0x00600000, tmp8) 

U0d50: tmp9:= SUB_DSZ32(0x00200000, tmp9) 
U0d51: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U0d52) SEQW GOTO U3d86
FUN_ucode_0000d52:
U0d52: SAVEUIP( , 0x00, U5b15) 

U0d54: tmp7:= MOVEFROMCREG_DSZ64( , 0x067) 
U0d55: AETTRACE( , tmp7, 0x0e) 
U0d56: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x0b5) !m0,m2 

U0d58: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW URET0
FUN_ucode_0000d59:
U0d59: MOVETOCREG_DSZ64(tmp4, 0x7f9, 32) !m1 
U0d5a: NOP 

U0d5c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp2, 0x20f, 32) !m1 SEQW URET0
U0d5d: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U62e2
U0d5e: tmp3:= ZEROEXT_DSZ32(0x0000036d) 

U0d60: tmp0:= READURAM( , 0x0012, 64) 
U0d61: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000000d, U62e2) !m1 
U0d62: SAVEUIP_REGOVR( , 0x01, U0d64, 0xe130) !m0 SEQW GOTO U6d0c

U0d64: SAVEUIP( , 0x01, U62e2) !m0 SEQW GOTO U3a34
U0d65: tmp0:= MOVEFROMCREG_DSZ64( , 0x2eb, 32) !m1 
U0d66: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U0d65) 

U0d68: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cf, 32) !m1 
U0d69: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000001, 0x2cf) !m1,m2 
U0d6a: SAVEUIP_REGOVR(0x01, U0d6c, 0x0000) !m0 SEQW GOTO U2b0d

U0d6c: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2ce) !m0,m1 
U0d6d: tmp0:= MOVEFROMCREG_DSZ64( , 0x2ce, 32) !m1,m2 
U0d6e: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U0d70) SEQW GOTO U0d6d

U0d70: tmp4:= SAVEUIP_REGOVR( , 0x00, U0d71, 0x2401) SEQW GOTO U0cf9
U0d71: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U0d72: tmp0:= NOTAND_DSZ32(0x00000060, tmp0) 

U0d74: MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1 
U0d75: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d3, 32) !m1,m2 
FUN_ucode_0000d76:
U0d76: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000c, U0d78) SEQW GOTO U0d75

U0d78: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x06d) !m0 SEQW GOTO U452e
U0d79: tmp0:= WRITEURAM(tmp0, 0x0053, 32) !m2 
U0d7a: tmp0:= MOVEFROMCREG_DSZ64( , 0x39e, 32) !m1 

U0d7c: tmp11:= ZEROEXT_DSZ32(0x00000001) 
U0d7d: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U28c5) !m1 
U0d7e: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 

U0d80: tmp11:= ZEROEXT_DSZ32(0x00000002) 
U0d81: tmp2:= TEST_DSZ64(tmp4, tmp4) 
FUN_ucode_0000d82:
U0d82: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U28c5) 

U0d84: tmp11:= ZEROEXT_DSZ32(0x00000003) 
U0d85: tmp0:= ADD_DSZN(0x0000001f, tmp4) !m1 
U0d86: tmp2:= TEST_DSZ64(tmp0, tmp0) 

U0d88: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U28c5) 
U0d89: tmp14:= SAVEUIP(0x01, U6a15) !m0 
U0d8a: LFNCEWAIT-> TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U5c25

U0d8c: tmp13:= LDZX_DSZ32_ASZ32_SC1(tmp4) SEQW GOTO U5c26
U0d8d: tmp13:= SAVEUIP(0x00, U2c06) 
U0d8e: WRMSLOOPCTRFBR( , 0x00000007) 

U0d90: mm0:= FMOV() !m0 
U0d91: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U0d90
U0d92: LFNCEWTMRK-> tmp2:= ZEROEXT_DSZ32(0x0000ffff) 

U0d94: tmp1:= ZEROEXT_DSZ32(0x0000037f) 
U0d95: LFNCEWAIT-> tmp3:= MOVEFROMCREG_DSZ64( , 0x069) 
U0d96: MOVETOCREG_DSZ64( , 0x00000000, 0x00f) 

U0d98: MOVETOCREG_DSZ64(tmp2, 0x06a) 
U0d99: MOVETOCREG_DSZ64( , 0x00000000, 0x00e) 
U0d9a: MOVETOCREG_DSZ64( , 0x00000000, 0x00a) 

U0d9c: MOVETOCREG_DSZ64( , 0x00000000, 0x00d) 
U0d9d: MOVETOCREG_OR_DSZ64(tmp3, 0x00000001, 0x069) 
U0d9e: MOVETOCREG_DSZ64(tmp1, 0x486) 

U0da0: MOVETOCREG_DSZ64( , 0x00000000, 0x48c) 
U0da1: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x073) SEQW URET0
U0da2: TESTUSTATE( , SYS, !0xc000) !m0,m1 ? SEQW GOTO U1f9a

U0da4: tmp4:= ADD_DSZ64(tmp1, tmp4) SEQW GOTO U1f9a
U0da5: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0da6: tmp14:= READUIP_REGOVR(0x01) !m0 

U0da8: tmp2:= RDVMCSPLA( , r64dst) 
U0da9: tmp12:= READURAM( , 0x0056, 64) 
U0daa: tmp6:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0dac: tmp11:= SHR_DSZN(r64dst, 0x0000000f) !m1 
U0dad: tmp1:= ADD_DSZ64(0x00000001, tmp12) 
U0dae: TESTUSTATE( , SYS, !UST_VMX_DIS | UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U0db5

U0db0: TESTUSTATE( , UCODE, 0x1000) ? SEQW GOTO U0db5
U0db1: tmp0:= MOVEINSERTFLGS_DSZ32(0x00000417) 
U0db2: NOP 

U0db4: tmp4:= ZEROEXT_DSZ32(0x00000005) SEQW SAVEUIP0 U0db5SEQW GOTO U6786
U0db5: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, U04b6) 
U0db6: tmp1:= AND_DSZ32(0x000003f8, tmp2) 

U0db8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, U0dfc) 
U0db9: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x0000000d, U0dfc) 
U0dba: tmp11:= SHL_DSZ32(tmp2, 0x00000003) 

U0dbc: LFNCEWAIT-> tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp12, tmp1) 
U0dbd: tmp7:= SHR_DSZ64(tmp7, tmp11) SEQW URET1
U0dbe: TESTUSTATE( , SYS, !0x4000) !m0,m1 ? SEQW GOTO U1f9a

U0dc0: tmp4:= ADD_DSZ64(tmp1, tmp4) SEQW GOTO U1f9a
U0dc1: tmp4:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U0dc2: tmp4:= SUB_DSZN(tmp4, tmp3) !m1 

U0dc4: tmp7:= ZEROEXT_DSZ32(0x00000025) 
caseD_dc5:
U0dc5: LFNCEMARK-> tmp8:= MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U0dc6: SAVEUIP( , 0x01, U3e71) !m0 

U0dc8: tmp15:= READUIP_REGOVR(0x01) !m0 
U0dc9: tmp3:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
U0dca: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000000, U0dcc) SEQW GOTO U1db2

U0dcc: tmp3:= MOVEFROMCREG_DSZ64( , 0x20e, 32) !m1 
U0dcd: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000003a, U0dce) !m0 SEQW GOTO U0dda
U0dce: tmp3:= MOVEFROMCREG_DSZ64( , 0x009) 

U0dd0: tmp11:= OR_DSZ32(0x00000020, tmp3) 
U0dd1: tmp11:= MOVEFROMCREG_DSZ64( , tmp11) 
U0dd2: WRITEURAM(tmp11, 0x005d, 64) 

U0dd4: tmp11:= OR_DSZ32(0x00000040, tmp3) 
U0dd5: tmp11:= MOVEFROMCREG_DSZ64( , tmp11) 
U0dd6: WRITEURAM(tmp11, 0x005e, 64) 

U0dd8: NOP 
U0dd9: NOP 
U0dda: UJMP( , tmp15) 

U0ddc: tmp10:= ZEROEXT_DSZ32(0x00003380) 
U0ddd: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000030, tmp12) 
U0dde: tmp3:= unk_04d(tmp13) SEQW GOTO U5a05

U0de0: tmp13:= ZEROEXT_DSZ64(tmp3) SEQW GOTO U54f1
U0de1: tmp4:= RDSEGFLD(UNK_SEG_09, SEL) 
U0de2: LFNCEMARK-> WRSEGFLD(tmp4, UNK_SEG_09, UNK_FLD_0c) 

U0de4: ROVR<-LFNCEWAIT-> NOP SEQW SAVEUIP1 U0de5SEQW GOTO U0dec
FUN_ucode_0000de5:
U0de5: NOP 
U0de6: NOP 

U0de8: SAVEUIP_REGOVR(0x01, U0de9, 0x0008) !m0 SEQW GOTO U0dec
U0de9: ROVR<- rsp:= ADD_DSZN(tmp12, rsp) !m1 SEQW SAVEUIP1 U0dea
U0dea: SAVEUIP( , 0x01, U19d5) !m0 

U0dec: tmp11:= RDSEGFLD(SEG_V0, SEL+FLGS+LIM) 
U0ded: tmp4:= SHR_DSZ64(tmp11, 0x00000010) 
U0dee: tmp11:= BTR_DSZ32(tmp11, 0x0000001b) 

U0df0: tmp1:= SHL_DSZ64(tmp4, 0x00000028) 
U0df1: tmp4:= AND_DSZ64(0x00000800, tmp4) 
U0df2: tmp11:= BTS_DSZ32(tmp11, 0x00000011) 

U0df4: tmp11:= BTR_DSZ32(tmp11, 0x00000010) 
U0df5: tmp4:= SHL_DSZ32(tmp4, 0x00000005) 
U0df6: tmp11:= OR_DSZ32(tmp4, tmp11) 

U0df8: tmp1:= unk_e6b(tmp1, tmp11) !m2 
U0df9: tmp11:= SELECTCC_DSZ32_CONDO(tmp1, tmp11) 
U0dfa: WRSEGFLD(tmp11) !m0 SEQW URET1

U0dfc: tmp0:= ZEROEXT_DSZ32(0x00010007) 
U0dfd: tmp4:= ZEROEXT_DSZ32(0x00000011) 
U0dfe: ROVR<- tmp1:= OR_DSZ64(r64dst) SEQW SAVEUIP1 U0e00SEQW GOTO U1c7d

U0e00: tmp13:= ZEROEXT_DSZ32(0x0000000c) SEQW GOTO U2d62
U0e01: PORTOUT_DSZ32_ASZ16_SC1(0x50c8,  , tmp1) !m2 
U0e02: tmp4:= PORTIN_DSZ32_ASZ16_SC1(0x50d0) !m2 

U0e04: LFNCEWAIT-> tmp6:= PORTIN_DSZ32_ASZ16_SC1(0x50cc) !m2 
U0e05: tmp5:= SUB_DSZ32(0xffffffff, tmp4) 
U0e06: tmp6:= MOVEMERGEFLGS_DSZ64(tmp6, tmp5) 

U0e08: tmp6:= CMOVCC_DSZ32_CONDZ(tmp6, tmp4) 
U0e09: PORTOUT_DSZ32_ASZ16_SC1(0x50d0,  , tmp6) !m2 
U0e0a: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 

U0e0c: tmp13:= SAVEUIP(0x00, U0e18) 
U0e0d: tmp8:= PORTIN_DSZ32_ASZ16_SC1(0x50d0) !m2 
U0e0e: tmp6:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp8, 0x0000001e) 

U0e10: LFNCEWAIT-> tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8) 
U0e11: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000008) 
U0e12: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000003, U2885) !m0,m1 

U0e14: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000c, U1a3a) !m2 
U0e15: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000008, U276a) !m1 
U0e16: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000005, U2289) !m1 

U0e18: tmp8:= ADD_DSZ32(0x00000020, tmp8) 
U0e19: LFNCEMARK-> tmp6:= AND_DSZ32(0x0000c000, tmp6) 
U0e1a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U0e1c) SEQW GOTO U0e0e

U0e1c: NOP SEQW GOTO U4ae0
U0e1d: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp8, U0e31) 
U0e1e: tmp15:= RDSEGFLD(CS, BASE) 

U0e20: WRSEGFLD(tmp15, UNK_SEG_09, BASE) 
U0e21: tmp15:= RDSEGFLD(CS, SEL+FLGS+LIM) 
U0e22: LFNCEMARK-> WRSEGFLD(tmp15, UNK_SEG_09, FLGS) 

U0e24: LFNCEWAIT-> tmp15:= RDSEGFLD(UNK_SEG_09, FLGS) 
U0e25: MOVETOCREG_DSZ64(tmp15, 0x7f5) 
U0e26: tmp15:= RDSEGFLD(UNK_SEG_09, LIMIT) 

U0e28: LFNCEMARK-> MOVETOCREG_DSZ64(tmp15, 0x410) 
U0e29: tmp15:= ADD_DSZ32(0x00000001, tmp15) 
U0e2a: MOVETOCREG_DSZ64(tmp15, 0x700) 

U0e2c: LFNCEWAIT-> tmp15:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U0e2d: NOP 
U0e2e: NOP 

U0e30: SYNCMARK-> MOVETOCREG_DSZ64(tmp15, 0x78e) 
U0e31: tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 
U0e32: tmp10:= MOVEFROMCREG_DSZ64( , 0x067) 

U0e34: tmp6:= SUB_DSZ64(tmp15, tmp10) 
U0e35: tmp6:= MOVEMERGEFLGS_DSZ64(tmp6, tmp4) 
U0e36: tmp10:= SUB_DSZ32(tmp15, tmp10) 

U0e38: tmp15:= CMOVCC_DSZ64_CONDB(tmp6, tmp10) 
U0e39: SYNCWAIT-> MOVETOCREG_DSZ64(tmp15, 0x71a) SEQW GOTO U2d2e
U0e3a: TESTUSTATE( , UCODE, 0x3000) ? SEQW URET1

U0e3c: tmpv0:= READURAM( , 0x0012, 64) 
U0e3d: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000007, U0f18) !m0 
U0e3e: tmpv1:= ZEROEXT_DSZ32(0x00000327) SEQW SAVEUIP1 U0e40SEQW GOTO U6d0c

U0e40: SAVEUIP( , 0x01, U0f18) !m0 SEQW GOTO U3a34
U0e41: tmp11:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(rax, 0x0000000c) 
U0e42: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000000, U0856) 

U0e44: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x50c0) !m2 
U0e45: tmp9:= SUB_DSZ32(0xffffffff, tmp11) 
U0e46: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U1db2) 

U0e48: LFNCEWAIT-> tmp11:= SHL_DSZ64(tmp11, 0x00000008) 
U0e49: tmp9:= ZEROEXT_DSZ32(0x0000a18c) 
U0e4a: tmp2:= AND_DSZ32(0x000001f0, tmp9) 

U0e4c: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp2) 
U0e4d: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000005, U3cdc) !m1,m2 
U0e4e: tmp2:= SUB_DSZ32(0x00000004, tmp9) 

U0e50: tmp10:= ZEROEXT_DSZ32(0x0000000f) 
U0e51: tmp7:= SHL_DSZ32(tmp7, tmp10) 
U0e52: tmp9:= SHL_DSZ32(0x00000010, tmp10) 

U0e54: tmp9:= OR_DSZ32(tmp7, tmp9) 
U0e55: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp2, tmp9) 
U0e56: tmp10:= OR_DSZ32(0x00000001, tmp10) 

U0e58: tmp9:= ZEROEXT_DSZ32(0x00000044) 
U0e59: tmp9:= CONCAT_DSZ16(0x00000013, tmp9) 
U0e5a: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp9) 

U0e5c: tmp2:= AND_DSZ32(tmp10, tmp2) 
U0e5d: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U0e5a, tmp7) SEQW GOTO U0856
U0e5e: tmp2:= MOVEFROMCREG_DSZ64( , 0x51b) 

U0e60: MOVETOCREG_BTR_DSZ64(tmp2, 0x51b) 
U0e61: tmp0:= READURAM( , 0x004a, 64) 
U0e62: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x7f6) SEQW SAVEUIP1 U0e64SEQW GOTO U0164

U0e64: tmp5:= SAVEUIP( , 0x00, U3bc2) SEQW GOTO U5f64
U0e65: SAVEUIP( , 0x00, U4396) 
U0e66: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U0e68: tmp10:= READAFLAGS( , tmp10) !m2 
U0e69: tmp14:= SAVEUIP(0x01, U4ff5) !m0 
U0e6a: tmp2:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U0e6d

U0e6c: tmp2:= READURAM( , 0x0043, 64) 
U0e6d: tmp9:= AND_DSZ32(0x00000200, tmp10) 
U0e6e: tmp0:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U0e71

U0e70: tmp0:= READURAM( , 0x004c, 64) 
U0e71: tmp2:= OR_DSZ32(tmp0, tmp2) 
U0e72: tmp2:= SHL_DSZ32(tmp2, 0x00000007) 

U0e74: tmp9:= AND_DSZ32(tmp2, tmp9) 
U0e75: tmp0:= ZEROEXT_DSZ32(0x00002007) 
U0e76: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U04bc) 

U0e78: TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U0e80
U0e79: tmp9:= MOVEFROMCREG_DSZ64( , 0x01d) 
U0e7a: tmp9:= AND_DSZ32(0x00000002, tmp9) 

U0e7c: tmp9:= SHL_DSZ32(tmp9, 0x00000008) 
U0e7d: tmp9:= AND_DSZ32(tmp10, tmp9) 
U0e7e: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U0e80) SEQW GOTO U636a

U0e80: SAVEUIP_REGOVR(0x01, U0e81, 0x0002) !m0 SEQW GOTO U2b0d
U0e81: tmp2:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U0e82: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U0784) SEQW URET0

U0e84: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp1, U2711) 
U0e85: tmp3:= SHL_DSZ32(tmp0, 0x00000003) 
U0e86: tmp3:= ADD_DSZ32(tmp3, 0x000031c0) SEQW SAVEUIP0 U0e88SEQW GOTO U06be

U0e88: unk_fcf(tmp4) SEQW GOTO U2b0a
U0e89: UPDATEUSTATE( , !0x04) !m0 
U0e8a: CMPUJZ_DIRECT_NOTTAKEN(tmp3, U24d2, tmp5) !m1 

U0e8c: tmp2:= AND_DSZ32(tmp5, tmp3) 
U0e8d: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U2711) !m1 
U0e8e: tmp1:= AND_DSZ64(0x0003c000, tmp5) 

U0e90: tmp1:= SHR_DSZ64(tmp1, 0x0000000e) 
U0e91: tmp1:= BT_DSZ64(0x00000249, tmp1) 
U0e92: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp1, U2711) 

U0e94: tmp1:= AND_DSZ64(0x0f000000, tmp5) 
U0e95: tmp1:= SHR_DSZ64(tmp1, 0x00000018) 
U0e96: tmp1:= BT_DSZ64(0x0000003f, tmp1) 

U0e98: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp1, U2711) 
U0e99: tmp1:= SHR_DSZ64(tmp5, 0x00000020) 
U0e9a: tmp1:= AND_DSZ32(0x0000000f, tmp1) 

U0e9c: tmp1:= BT_DSZ64(0x00000007, tmp1) 
U0e9d: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp1, U2711) 
U0e9e: tmp1:= SHR_DSZ64(tmp5, 0x00000024) 

U0ea0: tmp1:= AND_DSZ32(0x0000000f, tmp1) 
U0ea1: tmp1:= BT_DSZ64(0x00000007, tmp1) 
U0ea2: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp1, U2711) 

U0ea4: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x0000000c, U2711) !m1 
U0ea5: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000000, U3a1d) !m1,m2 
U0ea6: tmp14:= ZEROEXT_DSZ32(0x00002bf9) SEQW GOTO U5bf6

U0ea8: NOP 
U0ea9: WRITEURAM(tmp0, 0x0000, 64) !m2 
U0eaa: tmp0:= READAFLAGS(tmp0) 

U0eac: tmp0:= CONCAT_DSZ16(0x00000000, tmp0) SEQW GOTO U5255
U0ead: tmp4:= CONCAT_DSZ32(rdx, rax) 
U0eae: tmp4:= ZEROEXT_DSZ64N(tmp4) !m1 

U0eb0: tmp1:= READURAM( , 0x005c, 64) 
U0eb1: tmp1:= BT_DSZ32(tmp1, 0x00000010) 
U0eb2: tmp1:= MOVEMERGEFLGS_DSZ32(tmp4, tmp1) 

U0eb4: tmp14:= CMOVCC_DSZ64_CONDB(tmp1, tmp14) 
U0eb5: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x0000000c) 
U0eb6: tmp15:= READURAM( , 0x0053, 64) 

U0eb8: tmp14:= AND_DSZ32(0x00000001, tmp15) 
U0eb9: tmp5:= SUB_DSZ32(tmp14, tmp5) 
U0eba: tmp15:= NOTAND_DSZ64(0x00000001, tmp15) 

U0ebc: WRITEURAM(tmp15, 0x0053, 32) !m2 
U0ebd: tmp5:= SHL_DSZ64(tmp5, 0x00000020) 
U0ebe: WRITEURAM(tmp5, 0x0106, 64) 

U0ec0: tmp0:= READURAM( , 0x000d, 64) 
U0ec1: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U0ec2: tmp0:= unk_0bc(tmp0, tmp0) 

U0ec4: tmp0:= SHL_DSZ64(tmp0, 0x00000020) 
U0ec5: WRITEURAM(tmp0, 0x010d, 64) 
U0ec6: SAVEUIP_REGOVR(0x01, U0ec8, 0x0010) !m0 SEQW GOTO U5f6c

U0ec8: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U55a5
U0ec9: tmp9:= ZEROEXT_DSZ32(0x0000aee0) 
U0eca: tmp5:= BTS_DSZ32(0x00000000, 0x00000000) 

U0ecc: STADSTGBUF_DSZ64_ASZ16_SC1(tmp9,  , tmp5) SEQW GOTO U2e9e
U0ecd: LFNCEWAIT-> tmpv1:= MOVEFROMCREG_DSZ64( , 0x004) 
U0ece: tmpv1:= NOTAND_DSZ32(0x00000200, tmpv1) 

U0ed0: tmpv2:= AND_DSZ32(0x00000010, tmpv0) 
U0ed1: tmpv2:= SHL_DSZ32(tmpv2, 0x00000005) 
U0ed2: MOVETOCREG_OR_DSZ64(tmpv2, 0x004, tmpv1) 

U0ed4: tmpv1:= TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U0ede
U0ed5: tmpv1:= AND_DSZ32(0x00000700, tmp11) 
U0ed6: tmpv1:= SUB_DSZ32(0x00000700, tmpv1) 

U0ed8: tmpv1:= SETCC_CONDZ(tmpv1) 
U0ed9: tmpv2:= READURAM( , 0x0043, 64) 
U0eda: tmpv2:= BT_DSZ64(tmpv2, 0x0000001b) 

U0edc: tmpv2:= SETCC_CONDB(tmpv2) 
U0edd: tmpv1:= OR_DSZ32(tmpv1, tmpv2) 
U0ede: tmpv2:= TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U0ee2

U0ee0: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U0ee2
U0ee1: tmpv2:= AND_DSZ32(0x00005000, tmp7) 
U0ee2: tmpv1:= OR_DSZ32(tmpv2, tmpv1) 

U0ee4: tmpv2:= AND_DSZ32(0x00000010, tmpv0) 
U0ee5: tmpv2:= SHL_DSZ32(tmpv2, 0x00000005) 
U0ee6: tmpv2:= SELECTCC_DSZ64_CONDZ(tmpv1, tmpv2) 

U0ee8: LFNCEWAIT-> tmpv1:= READURAM( , 0x001f, 64) 
U0ee9: tmpv1:= NOTAND_DSZ64(0x00000200, tmpv1) 
U0eea: tmpv1:= OR_DSZ64(tmpv2, tmpv1) 

U0eec: WRITEURAM(tmpv1, 0x001f, 64) SEQW URET1
U0eed: tmp6:= PINTMOVDTMM2I_DSZ64(tmm0) 
U0eee: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U2c62

U0ef0: tmp13:= SAVEUIP(0x00, U2c62) 
U0ef1: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U3a16
U0ef2: tmp8:= AND_DSZ64(0x00000fff, tmp6) 

U0ef4: tmp8:= ADD_DSZN(tmp11, tmp8) !m1 SEQW GOTO U4639
U0ef5: tmp0:= ZEROEXT_DSZ32(0x0000000e) 
U0ef6: tmp7:= ZEROEXT_DSZ32(0x00000001) 

U0ef8: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp15, U4501) 
U0ef9: WRITEURAM(tmp15, 0x001f, 64) !m2 
U0efa: tmp0:= SUB_DSZ8(r64src, tmp1) 

U0efc: tmp2:= SHR_DSZ64(r64src, 0x00000008) 
U0efd: rax:= ZEROEXT_DSZ32() 
U0efe: rdx:= ZEROEXT_DSZ32() 

U0f00: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, U2d65) 
U0f01: tmp1:= SHR_DSZ32(tmp1, 0x00000008) 
U0f02: tmp15:= SUB_DSZ8(tmp2, tmp1) 

U0f04: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp15, U2d65) 
U0f05: tmp15:= NOTAND_DSZ64(0x000000ff, tmp2) 
U0f06: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2d65) 

U0f08: tmp15:= MOVEFROMCREG_DSZ64( , 0x205, 32) !m1 
U0f09: tmm1:= unk_747(tmm7) 
U0f0a: tmp15:= MOVEFROMCREG_DSZ64( , 0x206, 32) !m1 

U0f0c: tmm1:= unk_746(tmm7, tmm1) 
U0f0d: SAVEUIP( , 0x00, U0f0e) 
U0f0e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U0f10) SEQW GOTO U6848

U0f10: tmm0:= unk_747(mm2) SEQW SAVEUIP0 U0f11SEQW GOTO U7735
U0f11: xmm0:= unk_76f(tmm1) 
U0f12: tmm1:= unk_477(tmm1) 

U0f14: xmm2:= unk_76f(tmm1) 
U0f15: MOVEINSERTFLGS_DSZ32() !m2 SEQW UEND0
U0f16: SAVEUIP_REGOVR( , 0x01, U0f18, 0xc935) !m0 SEQW GOTO U0e3a

U0f18: SAVEUIP( , 0x01, U21fe) !m0 SEQW GOTO U208d
U0f19: SIGEVENT( , 0x00000087) 
U0f1a: STAD_DSZ64_ASZ32_SC1(tmp7, mode=0x18,  , tmp4) 

U0f1c: tmp0:= MOVEFROMCREG_DSZ64( , 0x101) 
U0f1d: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000008, mode=0x18, tmp0) 
U0f1e: tmp0:= MOVEFROMCREG_DSZ64( , 0x102) 

U0f20: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000010, mode=0x18, tmp0) 
U0f21: tmp0:= MOVEFROMCREG_DSZ64( , 0x0b1) 
U0f22: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000018, mode=0x18, tmp0) 

U0f24: tmp0:= READURAM( , 0x0052, 64) 
U0f25: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000020, mode=0x18, tmp0) 
U0f26: tmp0:= MOVEFROMCREG_DSZ64( , 0x080) 

U0f28: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000028, mode=0x18, tmp0) 
U0f29: tmp0:= MOVEFROMCREG_DSZ64( , 0x081) 
U0f2a: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000030, mode=0x18, tmp0) 

U0f2c: tmp0:= MOVEFROMCREG_DSZ64( , 0x082) 
U0f2d: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000038, mode=0x18, tmp0) 
U0f2e: tmp0:= MOVEFROMCREG_DSZ64( , 0x083) 

U0f30: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000040, mode=0x18, tmp0) 
U0f31: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000048, mode=0x18, 0x00000000) 
U0f32: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000050, mode=0x18, 0x00000000) 

U0f34: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000058, mode=0x18, 0x00000000) 
U0f35: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000060, mode=0x18, 0x00000000) 
U0f36: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000068, mode=0x18, 0x00000000) 

U0f38: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000070, mode=0x18, 0x00000000) 
U0f39: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000078, mode=0x18, 0x00000000) 
U0f3a: UJMP( , U1421) 

U0f3c: LFNCEWAIT-> PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , tmp1) !m2 
U0f3d: SAVEUIP_REGOVR(0x01, U0f3e, 0x0000) !m0 SEQW GOTO U2b0d
U0f3e: tmp0:= CONCAT_DSZ16(0x00008001) 

U0f40: tmp0:= PORTIN_DSZ32_ASZ16_SC1(tmp0) SEQW GOTO U3d1c
U0f41: WRITEURAM(tmp8, 0x0046, 64) !m2 
U0f42: tmp4:= ZEROEXT_DSZ64() 

U0f44: WRITEURAM(tmp9, 0x002c, 32) !m2 
U0f45: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp10, 0x000000fc) 
U0f46: tmp2:= ZEROEXT_DSZ64() 

U0f48: tmp1:= ZEROEXT_DSZ32(0x00000040) 
U0f49: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, tmp2) 
U0f4a: tmp3:= IMUL64L_DSZ64(tmp8, tmp9) 

U0f4c: tmp3:= ADD_DSZ64(tmp4, tmp3) 
U0f4d: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2, tmp3) 
U0f4e: tmp2:= ADD_DSZ64(0x00000004, tmp2) 

U0f50: tmp4:= SHR_DSZ64(tmp3, 0x00000020) 
U0f51: tmp1:= SUB_DSZ32(0x00000001, tmp1) 
U0f52: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U0f54) SEQW GOTO U0f49

U0f54: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2, tmp4) 
U0f55: tmp4:= ZEROEXT_DSZ64() 
U0f56: tmp2:= ZEROEXT_DSZ64(0x000000f8) 

U0f58: tmp13:= SHL_DSZ64(tmp4, 0x00000030) 
U0f59: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x000000fc) 
U0f5a: tmp1:= SHR_DSZ64(tmp1, 0x00000010) 

U0f5c: tmp13:= ADD_DSZ64(tmp1, tmp13) 
U0f5d: LFNCEWAIT-> tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp10, tmp2) 
U0f5e: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, 0x000000fc) 

U0f60: tmp4:= IMUL64L_DSZ64(tmp1, tmp0) 
U0f61: tmp4:= SHR_DSZ64(tmp4, 0x00000030) 
U0f62: tmp13:= ADD_DSZ64(tmp4, tmp13) 

U0f64: tmm1:= unk_744(tmm5) 
U0f65: tmm1:= unk_645(tmm1) 
U0f66: tmm1:= unk_6e1(tmm1, tmm5) 

U0f68: tmm1:= unk_6c2( , tmm1) 
U0f69: tmp13:= PINTMOVDTMM2I_DSZ64(tmm1) 
U0f6a: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5) 

U0f6c: tmp1:= IMUL64L_DSZ64(tmp1, tmp0) 
U0f6d: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7) 
U0f6e: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7,  , tmp1) 

U0f70: tmp4:= SHR_DSZ64(tmp1, 0x00000020) 
U0f71: tmp4:= ADD_DSZ64(tmp3, tmp4) 
U0f72: tmp3:= ZEROEXT_DSZ32(0x00000004) 

U0f74: tmp11:= SHR_DSZ64(tmp13, 0x00000020) 
U0f75: tmp11:= CMOVCC_DSZ32_CONDZ(tmp11, 0xffffffffffffffff) 
U0f76: tmp8:= ZEROEXT_DSZ64() 

U0f78: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, tmp3) 
U0f79: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp6, 0xfffffffffffffffc, tmp3) 
U0f7a: tmp3:= ADD_DSZ32(0x00000004, tmp3) 

U0f7c: tmp1:= IMUL64L_DSZ64(tmp1, tmp0) 
U0f7d: tmp14:= ZEROEXT_DSZ32(tmp13) 
U0f7e: tmp12:= IMUL64L_DSZ64(tmp9, tmp14) 

U0f80: tmp4:= ADD_DSZ64(tmp8, tmp4) 
U0f81: tmp8:= ZEROEXT_DSZ32(tmp1) 
U0f82: tmp14:= ZEROEXT_DSZ32(tmp12) 

U0f84: tmp8:= ADD_DSZ64(tmp4, tmp8) 
U0f85: tmp4:= SHR_DSZ64(tmp12, 0x00000020) 
U0f86: tmp8:= ADD_DSZ64(tmp14, tmp8) 

U0f88: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 
U0f89: tmp4:= ADD_DSZ64(tmp1, tmp4) 
U0f8a: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0xfffffffffffffffc, tmp3) 

U0f8c: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0xfffffffffffffffc, tmp3, tmp8) 
U0f8d: tmp9:= AND_DSZ32(tmp11, tmp9) 
U0f8e: tmp4:= ADD_DSZ64(tmp9, tmp4) 

U0f90: tmp8:= SHR_DSZ64(tmp8, 0x00000020) 
U0f91: tmp4:= ADD_DSZ64(tmp1, tmp4) 
U0f92: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000008, U0f94) SEQW GOTO U0f78

U0f94: tmp4:= ADD_DSZ64(tmp8, tmp4) 
U0f95: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp6, 0x000000fc) 
U0f96: tmp14:= ZEROEXT_DSZ32(tmp13) 

U0f98: tmp12:= IMUL64L_DSZ64(tmp9, tmp14) 
U0f99: tmp8:= ZEROEXT_DSZ32(tmp12) 
U0f9a: tmp8:= ADD_DSZ64(tmp8, tmp4) 

U0f9c: tmp12:= SHR_DSZ64(tmp12, 0x00000020) 
U0f9d: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp3) 
U0f9e: tmp4:= ADD_DSZ64(tmp12, tmp4) 

U0fa0: tmp9:= AND_DSZ32(tmp11, tmp9) 
U0fa1: tmp4:= ADD_DSZ64(tmp9, tmp4) 
U0fa2: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp3, tmp8) 

U0fa4: tmp8:= SHR_DSZ64(tmp8, 0x00000020) 
U0fa5: tmp4:= ADD_DSZ64(tmp8, tmp4) 
U0fa6: tmp4:= XOR_DSZ64(tmp13, tmp4) 

U0fa8: tmp4:= AND_DSZ64(0x00000001, tmp4) 
U0fa9: tmp2:= SUB_DSZ32(0x00000004, tmp2) 
U0faa: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp2, U0fac) SEQW GOTO U0f58

U0fac: tmp13:= SHL_DSZ64(tmp4, 0x00000030) 
U0fad: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x000000fc) 
U0fae: tmp1:= SHR_DSZ64(tmp1, 0x00000010) 

U0fb0: tmp13:= ADD_DSZ64(tmp1, tmp13) 
U0fb1: tmm1:= unk_744(tmm5) 
U0fb2: tmm1:= unk_645(tmm1) 

U0fb4: tmm1:= unk_6e1(tmm1, tmm5) 
U0fb5: tmm1:= unk_6c2( , tmm1) 
U0fb6: tmp13:= PINTMOVDTMM2I_DSZ64(tmm1) 

U0fb8: tmp11:= SHR_DSZ64(tmp13, 0x00000020) 
U0fb9: tmp4:= ZEROEXT_DSZ64() 
U0fba: tmp2:= ZEROEXT_DSZ32() 

U0fbc: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp6, tmp2) 
U0fbd: tmp1:= ZEROEXT_DSZ32(tmp13) 
U0fbe: tmp8:= IMUL64L_DSZ64(tmp1, tmp9) 

U0fc0: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2) 
U0fc1: tmp12:= ZEROEXT_DSZ32(tmp8) 
U0fc2: tmp12:= ADD_DSZ64(tmp1, tmp12) 

U0fc4: tmp12:= ADD_DSZ64(tmp4, tmp12) 
U0fc5: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2, tmp12) 
U0fc6: tmp12:= SHR_DSZ64(tmp12, 0x00000020) 

U0fc8: tmp4:= SHR_DSZ64(tmp8, 0x00000020) 
U0fc9: tmp4:= ADD_DSZ64(tmp12, tmp4) 
U0fca: tmp9:= CMOVCC_DSZ64_CONDZ(tmp11, tmp9) 

U0fcc: tmp4:= ADD_DSZ64(tmp9, tmp4) 
U0fcd: tmp2:= ADD_DSZ32(0x00000004, tmp2) 
U0fce: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000008, U0fd0) SEQW GOTO U0fbc

U0fd0: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2) 
U0fd1: tmp4:= ADD_DSZ64(tmp4, tmp1) 
U0fd2: tmp4:= XOR_DSZ64(tmp13, tmp4) 

U0fd4: tmp4:= AND_DSZ64(0x00000001, tmp4) 
U0fd5: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2, tmp4) 
U0fd6: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U0fe1) 

U0fd8: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp6, 0xfffffffffffffffc, tmp2) 
U0fd9: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0xfffffffffffffffc, tmp2) 
U0fda: tmp9:= MOVSX_SSZ32_DSZ64(tmp9) 

U0fdc: tmp1:= MOVSX_SSZ32_DSZ64(tmp1) 
U0fdd: tmp1:= ADD_DSZ64(tmp1, tmp9) 
U0fde: tmp1:= SUB_DSZ64(tmp1, 0xffffffffffffffff) 

U0fe0: UJMPCC_DIRECT_NOTTAKEN_CONDLE(tmp1, U0fe1) SEQW GOTO U0ffc
U0fe1: tmp12:= WRMSLOOPCTRFBR(0x0000001f) 
U0fe2: tmp2:= ZEROEXT_DSZ32() 

U0fe4: unk_13f() !m2 
U0fe5: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp2) 
U0fe6: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2) 

U0fe8: tmp0:= unk_37e(tmp9, tmp1) !m2 
U0fe9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2, tmp0) 
U0fea: tmp2:= ADD_DSZ64(0x00000008, tmp2) 

U0fec: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U0fe5
U0fed: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U0ffc) 
U0fee: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, U0ffc) 

U0ff0: tmp12:= WRMSLOOPCTRFBR(0x0000001f) 
U0ff1: tmp2:= ZEROEXT_DSZ32() 
U0ff2: unk_13f() !m2 

U0ff4: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp2) 
U0ff5: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2) 
U0ff6: tmp0:= unk_37f(tmp9, tmp1) !m2 

U0ff8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2, tmp0) 
U0ff9: tmp2:= ADD_DSZ64(0x00000008, tmp2) 
U0ffa: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U0ff4

U0ffc: tmp8:= READURAM( , 0x0046, 64) 
U0ffd: tmp9:= READURAM( , 0x002c, 64) 
U0ffe: tmp9:= ZEROEXT_DSZ32(tmp9) SEQW URET0

U1000: unk_256() !m1 
U1001: tmp3:= NOTAND_DSZ32(tmp10, 0x00001f80) 
U1002: tmp3:= SHR_DSZ32(tmp3, 0x00000007) 

U1004: tmp3:= AND_DSZ32(tmp3, tmp10) 
U1005: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U5ec9) 
U1006: tmp0:= OR_DSZ32(tmp10, tmp15) 

U1008: tmm5:= unk_707(mm0) 
U1009: LFNCEMARK-> tmm6:= unk_691(tmm5) 
U100a: NOP 

U100c: LFNCEWAIT-> NOP SEQW URET0
U100d: tmp1:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1010
U100e: tmp1:= READURAM( , 0x0043, 64) 

U1010: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1014
U1011: tmp2:= READURAM( , 0x004c, 64) 
U1012: tmp1:= OR_DSZ64(tmp2, tmp1) 

U1014: SYNCMARK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000028, U3739) !m1,m2 SEQW GOTO U3731
U1015: tmp3:= ZEROEXT_DSZ32(0x0000040e) 
U1016: tmp4:= READURAM( , 0x0012, 64) 

U1018: BTUJNB_DIRECT_NOTTAKEN(tmp4, 0x0000000e, U1c91) !m0,m2 
U1019: SAVEUIP_REGOVR( , 0x01, U101a, 0x6534) !m0 SEQW GOTO U6d0c
U101a: tmpv0:= OR_DSZ64(rax) 

U101c: SAVEUIP( , 0x01, U1c91) !m0 
U101d: SAVEUIP( , 0x00, U3a34) SEQW GOTO U334d
U101e: LFNCEMARK-> tmp9:= READURAM( , 0x008b, 64) 

U1020: tmp9:= AND_DSZ32(0xfffffffffffff000, tmp9) 
U1021: tmp4:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U1022: tmp4:= NOTAND_DSZ32(0x000000f0, tmp4) 

U1024: tmp4:= BTS_DSZ32(tmp4, 0x00000005) 
U1025: tmp5:= BT_DSZ32(tmp0, 0x00000013) 
U1026: tmp15:= SELECTCC_DSZ32_CONDB(tmp5, 0x00000030) 

U1028: tmp4:= XOR_DSZ32(tmp15, tmp4) 
U1029: tmp13:= SELECTCC_DSZ32_CONDNB(tmp5, 0x00000200) 
U102a: tmp13:= OR_DSZ32(tmp13) 

U102c: tmp15:= SELECTCC_DSZ32_CONDNB(tmp5, 0x00000500) 
U102d: tmp7:= AND_DSZ32(0x00000801, tmp7) 
U102e: LFNCEWAIT-> MOVETOCREG_OR_DSZ64(tmp7, 0x7ff, tmp15) 

U1030: tmp3:= MOVEFROMCREG_DSZ64( , 0x6c5) 
U1031: tmp3:= NOTAND_DSZ32(0x00000028, tmp3) 
U1032: tmp15:= SELECTCC_DSZ32_CONDB(tmp5, 0x00000008) 

U1034: MOVETOCREG_OR_DSZ64(tmp3, 0x6c5, tmp15) 
U1035: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9, 0x0000001c) 
U1036: tmp7:= ADD_DSZ32(tmp9, tmp7) 

U1038: tmp7:= NOTAND_DSZ32(0x00000fe7, tmp7) 
U1039: unk_dff(tmp8) 
U103a: SYNCFULL-> tmp1:= ZEROEXT_DSZ32(0x80000033) SEQW SAVEUIP1 U103cSEQW GOTO U7005

U103c: LFNCEWAIT-> tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp9, 0x00000010) 
U103d: tmp1:= NOTAND_DSZ16(0x00000007, tmp1) 
U103e: tmp1:= CMOVCC_DSZ32_CONDNZ(tmp1, 0x00000008) 

U1040: WRMSLOOPCTRFBR( , 0x00000005) 
U1041: tmp4:= ADD_DSZ16(0x00000008, tmp1) 
U1042: tmp4:= CMOVCC_DSZ32_CONDNZ(tmp4, 0x00000008) 

U1044: tmp4:= CONCAT_DSZ16(0x0000c093, tmp4) 
U1045: tmp4:= CONCAT_DSZ32(0xffffffffffffffff, tmp4) 
U1046: MOVETOCREG_BTS_DSZ64( , 0x0000000e, 0x73c) !m0 

U1048: WRSEGFLD(tmp4) !m0 
U1049: WRSEGFLD(0x00000000) !m0 
U104a: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1048

U104c: WRSEGFLD(tmp4, SS, SEL+FLGS+LIM) 
U104d: WRSEGFLD(0x00000000, SS, BASE) 
U104e: LFNCEMARK-> WRSEGFLD(0x00000000, IDT, LIMIT) 

U1050: WRSEGFLD(0x00000000, LDT, SEL) 
U1051: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9, 0x0000000c) 
U1052: tmp4:= ADD_DSZ32(tmp9, tmp4) 

U1054: WRSEGFLD(tmp4, GDT, BASE) 
U1055: tmp4:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp9, 0x00000008) 
U1056: LFNCEWAIT-> WRSEGFLD(tmp4, GDT, LIMIT) 

U1058: tmp15:= SHL_DSZ32(tmp13, 0x00000004) 
U1059: tmp15:= SUB_DSZ16(tmp15, 0x0000c09b) 
U105a: SYNCWTMRK-> MOVETOCREG_DSZ64(tmp15, 0x7f5) 

U105c: tmp15:= CONCAT_DSZ16(tmp15, tmp1) 
U105d: tmp15:= CONCAT_DSZ32(0xffffffffffffffff, tmp15) 
U105e: WRSEGFLD(0x00000000, UNK_SEG_09, BASE) 

U1060: WRSEGFLD(tmp15, UNK_SEG_09, FLGS) 
U1061: WRSEGFLD(0x00000000, CS, BASE) 
U1062: WRSEGFLD(tmp15, CS, FLGS) 

U1064: tmp15:= SUB_DSZ32(0x00000001) 
U1065: MOVETOCREG_DSZ64( , 0x00000000, 0x78e) 
U1066: MOVETOCREG_DSZ64( , 0x00000000, 0x700) 

U1068: MOVETOCREG_DSZ64(tmp15, 0x410) 
U1069: rsp:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9, 0x00000018) 
U106a: rsp:= ADD_DSZ32(tmp9, rsp) 

U106c: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9, 0x00000014) 
U106d: tmp5:= ADD_DSZ32(tmp9, tmp5) 
U106e: tmp9:= READURAM( , 0x0056, 64) 

U1070: SYNCFULL-> tmp6:= READURAM( , 0x004a, 64) SEQW GOTO U3806
U1071: tmp4:= ZEROEXT_DSZ32(0x0000042e) 
U1072: tmp1:= READURAM( , 0x0012, 64) 

U1074: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000e, U58e0) !m0,m2 
U1075: SAVEUIP_REGOVR( , 0x01, U1076, 0x9741) !m0 SEQW GOTO U6d0c
U1076: tmpv0:= CONCAT_DSZ32(rcx, rax) 

U1078: SAVEUIP( , 0x01, U58e0) !m0 
U1079: SAVEUIP( , 0x00, U3a34) SEQW GOTO U334d
U107a: tmp9:= AND_DSZ64(0x00000003, tmp11) 

U107c: tmp8:= MOVEFROMCREG_DSZ64( , 0x7c6) 
U107d: tmp8:= NOTAND_DSZ64(0x00000003, tmp8) 
U107e: tmp8:= OR_DSZ64(tmp9, tmp8) 

U1080: MOVETOCREG_DSZ64(tmp8, 0x7c6) 
U1081: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, 0x00000002, U1085) !m0,m2 
U1082: LFNCEMARK-> tmp9:= READURAM( , 0x0011, 64) 

U1084: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp9) 
U1085: SYNCWTMRK-> SAVEUIP_REGOVR(0x01, U1086, 0x0a89) !m0 SEQW GOTO U5a25
U1086: tmp8:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U1088: tmp9:= AND_DSZ32(0x00000008, tmp11) 
U1089: tmp9:= SHL_DSZ32(tmp9, 0x00000005) 
U108a: MOVETOCREG_OR_DSZ64(tmp8, 0x6c3, tmp9) 

U108c: tmp10:= READURAM( , 0x0043, 64) 
U108d: tmp10:= BT_DSZ64(tmp10, 0x00000021) 
U108e: tmp5:= MOVEMERGEFLGS_DSZ64(tmp5, tmp10) 

U1090: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000001, U1099) !m2 
U1091: BTUJNB_DIRECT_NOTTAKEN(tmp11, 0x00000003, U1099) !m0,m2 
U1092: tmp9:= READURAM( , 0x0043, 64) 

U1094: tmp6:= OR_DSZ32(0x00000020, tmp6) 
U1095: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000027, U1099) !m0,m2 
U1096: tmp6:= OR_DSZ32(0x00000001, tmp6) 

U1098: tmp6:= BTS_DSZ32(tmp6, 0x0000001f) 
U1099: tmp8:= READURAM( , 0x0077, 64) 
U109a: tmp8:= BT_DSZ64(tmp8, 0x0000002b) 

U109c: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp8, U109d) SEQW GOTO U10a9
U109d: tmp8:= ZEROEXT_DSZ32(tmp0) 
U109e: tmp8:= AND_DSZ32(0x00000105, tmp8) 

U10a0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U10a1) SEQW GOTO U10a9
U10a1: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002e0) 
U10a2: tmp8:= AND_DSZ16(0x00000002, tmp8) 

U10a4: tmp8:= SHL_DSZ32(tmp8, 0x00000008) 
U10a5: tmp9:= READURAM( , 0x001f, 64) 
U10a6: tmp9:= OR_DSZ64(tmp9, tmp8) 

U10a8: WRITEURAM(tmp9, 0x001f, 64) !m2 
U10a9: tmp9:= READURAM( , 0x005c, 64) 
U10aa: tmp10:= AND_DSZ32(0x00000020, tmp9) 

U10ac: tmp9:= NOTAND_DSZ32(tmp12, tmp9) 
U10ad: WRITEURAM(tmp9, 0x005c, 32) !m2 
U10ae: tmp9:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp2, 0x00000234) 

U10b0: tmp13:= ZEROEXT_DSZ32(0x00002e04) 
U10b1: CMPUJZ_DIRECT_NOTTAKEN(tmp9, 0x00000001, U137e) !m2 
U10b2: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U10bc

U10b4: tmp13:= ZEROEXT_DSZ32(0x00001be4) 
U10b5: tmp15:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b780) !m2 
U10b6: WRITEURAM(tmp15, 0x0078, 64) !m2 

U10b8: tmp9:= SHR_DSZ32(tmp15, 0x00000010) 
U10b9: tmp9:= SUB_DSZ32(0x0000008b, tmp9) 
U10ba: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U137e) 

U10bc: tmp13:= ZEROEXT_DSZ32(0x00005de9) 
U10bd: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x00000302) 
U10be: CMPUJZ_DIRECT_NOTTAKEN(tmp9, 0x00000001, U137e) !m2 

U10c0: tmp13:= ZEROEXT_DSZ32(0x00001412) 
U10c1: LFNCEMARK-> tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x00000300) 
U10c2: tmp9:= SUB_DSZ32(0x000000ff, tmp9) 

U10c4: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U10c5) SEQW GOTO U137e
U10c5: tmp14:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001e8) 
U10c6: tmp7:= BTS_DSZ32(tmp7, 0x00000010) 

U10c8: rsi:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001f8) 
U10c9: rcx:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001f0) 
U10ca: rdi:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001e0) 

U10cc: tmp0:= NOTAND_DSZ32(0x00000025, tmp0) SEQW GOTO U1381
U10cd: tmp0:= ZEROEXT_DSZ32(0xffffffffffffffff) 
lots_of_crbus_writes:
U10ce: PORTOUT_DSZ32_ASZ16_SC1(0x50d0,  , tmp0) !m2 

U10d0: tmp0:= BTS_DSZ32(0x00000000, 0x0000001e) 
U10d1: PORTOUT_DSZ32_ASZ16_SC1(0x50c8,  , tmp0) !m2 
U10d2: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be40,  , 0x00000000) !m2 

U10d4: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be80,  , 0x00000000) !m2 
U10d5: LFNCEMARK-> STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be00,  , 0x00000000) !m2 SEQW GOTO U21fe
U10d6: WRMSLOOPCTRFBR( , 0x0000005f) 

U10d8: unk_a44() !m0 
U10d9: unk_a54() !m0 
U10da: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U10d8

U10dc: SYNCFULL-> MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x003) !m2 
U10dd: WRMSLOOPCTRFBR( , 0x0000000f) 
U10de: NOP 

U10e0: rdi:= ZEROEXT_DSZ64() !m2 
U10e1: tmp7:= ZEROEXT_DSZ64() 
U10e2: mm7:= unk_5b9() 

U10e4: xmm7:= unk_5b9() 
U10e5: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U10e0
U10e6: WRMSLOOPCTRFBR( , 0x00000003) 

U10e8: rdi:= unk_17c() 
U10e9: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U10e8
U10ea: WRMSLOOPCTRFBR( , 0x0000003f) 

U10ec: SYNCFULL-> MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x003) !m0,m2 
U10ed: tmp0:= ZEROEXT_DSZ32() 
U10ee: xmm0:= unk_5b9() 

U10f0: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U10ed
U10f1: NOP 
U10f2: rax:= ZEROEXT_DSZ32(0x0fffffff) 

U10f4: tmp11:= CONCAT_DSZ32(0x0000000a) 
U10f5: WRITEURAM(tmp11, 0x0073, 64) 
U10f6: MOVETOCREG_BTS_DSZ64( , 0x0000000f, 0x06c) !m0 

U10f8: tmp0:= MOVEFROMCREG_DSZ64( , 0x21d, 32) !m1 
U10f9: tmp8:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
U10fa: tmp8:= AND_DSZ32(tmp8, 0x00000080) 

U10fc: tmp4:= AND_DSZ32(0x0000000c, tmp0) 
U10fd: tmp4:= SUB_DSZ32(0x00000004, tmp4) 
U10fe: tmp0:= OR_DSZ32(tmp8, tmp0) 

U1100: tmp1:= SELECTCC_DSZ32_CONDZ(tmp4, 0x00000f00) 
U1101: tmp1:= OR_DSZ32(tmp1, 0x00830c00) 
U1102: tmp2:= SELECTCC_DSZ32_CONDZ(tmp4, 0x0000017f) 

U1104: tmp2:= OR_DSZ32(tmp2, 0x0003003f) SEQW SAVEUIP0 U1105SEQW GOTO U2895
U1105: tmp1:= AND_DSZ32(0x00000080, tmp0) 
U1106: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x00000010) 

U1108: tmp0:= NOTAND_DSZ32(0x00000010, tmp0) 
U1109: tmp0:= XOR_DSZ32(0x00000008, tmp0) 
U110a: MOVETOCREG_OR_DSZ64(tmp1, 0x6c5, tmp0) 

U110c: SYNCFULL-> tmm1:= FMOV() 
U110d: NOP 
U110e: NOP 

U1110: SYNCFULL-> tmm2:= FMOV() 
U1111: unk_53c(tmm1, tmm2) 
U1112: unk_57a(tmm1, tmm2) 

U1114: tmm1:= FMOV() 
U1115: tmm2:= FMOV() 
U1116: unk_53c(tmm1, tmm2) 

U1118: unk_57a(tmm1, tmm2) 
U1119: unk_53c(tmm1, tmm2) 
U111a: unk_57a(tmm1, tmm2) 

U111c: unk_53c(tmm1, tmm2) 
U111d: unk_57a(tmm1, tmm2) 
U111e: tmp0:= MOVEFROMCREG_DSZ64( , 0x3a5, 32) !m1 

U1120: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U1121) !m2 SEQW GOTO U55ca
U1121: tmp1:= SUB_DSZ64(0x00000001) 
U1122: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 

U1124: MOVETOCREG_OR_DSZ64(tmp0, 0x00000003, 0x285) !m0,m1 
U1125: MOVETOCREG_DSZ64(tmp1, 0x20c, 32) !m1 
U1126: MOVETOCREG_DSZ64(tmp1, 0x2e9, 32) !m1 

U1128: MOVETOCREG_DSZ64(tmp1, 0x38b, 32) !m1 
U1129: MOVETOCREG_DSZ64(tmp1, 0x392, 32) !m1 
U112a: MOVETOCREG_DSZ64(tmp1, 0x411) 

U112c: MOVETOCREG_DSZ64(tmp1, 0x064) 
U112d: MOVETOCREG_DSZ64(tmp1, 0x106) 
U112e: MOVETOCREG_DSZ64(tmp1, 0x488) 

U1130: MOVETOCREG_DSZ64(tmp1, 0x680) 
U1131: MOVETOCREG_DSZ64(tmp1, 0x74d) 
U1132: MOVETOCREG_DSZ64(tmp1, 0x63c) 

U1134: tmp0:= MOVEFROMCREG_DSZ64( , 0x2bc, 32) !m1 
U1135: MOVETOCREG_OR_DSZ64(tmp0, 0x00000001, 0x2bc) !m1 SEQW GOTO U55e2
U1136: tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U1138: tmp0:= READAFLAGS( , tmp0) !m2 
U1139: STADSTGBUF_DSZ64_ASZ16_SC1(0x000001a0,  , tmp0) 
U113a: tmp12:= ZEROEXT_DSZ32(0x0000113d) 

U113c: TESTUSTATE( , SYS, !0xc000) !m0,m1 ? SEQW GOTO U76d6
U113d: tmp8:= READURAM( , 0x005c, 64) 
U113e: BTUJB_DIRECT_NOTTAKEN(tmp8, 0x00000010, U4901) 

U1140: SAVEUIP_REGOVR(0x01, U1141, 0x0000) !m0 SEQW GOTO U32cd
U1141: tmp0:= MOVEFROMCREG_DSZ64( , 0x383, 32) !m1 
U1142: tmp1:= MOVEFROMCREG_DSZ64( , 0x384, 32) !m1 

U1144: tmp0:= CONCAT_DSZ8(tmp1, tmp0) 
U1145: tmp1:= MOVEFROMCREG_DSZ64( , 0x10c) 
U1146: tmp6:= MOVEFROMCREG_DSZ64( , 0x692) 

U1148: tmp1:= ZEROEXT_DSZ8(tmp1, tmp6) 
U1149: tmp1:= CONCAT_DSZ16(tmp1, tmp0) 
U114a: tmp5:= MOVEFROMCREG_DSZ64( , 0x7f6) 

U114c: tmp8:= CONCAT_DSZ32(tmp5, tmp1) 
U114d: STADSTGBUF_DSZ64_ASZ16_SC1(0x000001c0,  , tmp8) 
U114e: tmp5:= NOTAND_DSZ32(0x60000000, tmp5) 

U1150: MOVETOCREG_DSZ64(tmp5, 0x7f6) 
U1151: SAVEUIP_REGOVR(0x01, U1152, 0x0008) !m0 SEQW GOTO U2b0d
U1152: tmp8:= MOVEFROMCREG_DSZ64( , 0x3f3, 32) !m1 

U1154: tmp1:= MOVEFROMCREG_DSZ64( , 0x3f2, 32) !m1 
U1155: tmp1:= CONCAT_DSZ8(tmp8, tmp1) 
U1156: tmp8:= MOVEFROMCREG_DSZ64( , 0x3f1, 32) !m1 

U1158: tmp1:= SHL_DSZ32(tmp1, 0x00000008) 
U1159: tmp1:= ZEROEXT_DSZ8(tmp8, tmp1) 
U115a: LFNCEMARK-> tmp8:= MOVEFROMCREG_DSZ64( , 0x3f0, 32) !m1 

U115c: tmp1:= SHL_DSZ32(tmp1, 0x00000008) 
U115d: tmp1:= ZEROEXT_DSZ8(tmp8, tmp1) 
U115e: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000200,  , tmp1) 

U1160: tmp15:= ZEROEXT_DSZ32(0x000000ff) 
U1161: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp15, 0x3f3, 32) !m1 
U1162: MOVETOCREG_DSZ64(tmp15, 0x3f2, 32) !m1 

U1164: MOVETOCREG_DSZ64(tmp15, 0x3f1, 32) !m1 
U1165: MOVETOCREG_DSZ64(tmp15, 0x3f0, 32) !m1 
U1166: tmp0:= ZEROEXT_DSZ32(0x0000008e) 

U1168: tmp1:= SUB_DSZ32(0x00000200) 
U1169: SAVEUIP( , 0x00, U027a) SEQW SAVEUIP1 U116aSEQW GOTO U18b6
U116a: tmp0:= MOVEFROMCREG_DSZ64( , 0x104) 

U116c: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000015, 0x104) 
U116d: STADSTGBUF_DSZ64_ASZ16_SC1(0x000001e0,  , tmp0) 
U116e: tmp0:= MOVEFROMCREG_DSZ64( , 0x39e, 32) !m1 

U1170: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp0, 0x00000008, 0x39e) !m1 
U1171: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000200) 
U1172: tmp0:= CONCAT_DSZ32(tmp0, tmp1) 

U1174: LFNCEWAIT-> STADSTGBUF_DSZ64_ASZ16_SC1(0x00000200,  , tmp0) 
U1175: tmp0:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U1176: MOVETOCREG_BTS_DSZ64(tmp0, 0x29d) !m1 

U1178: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x10c) !m0 
U1179: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x383) !m0,m1 
U117a: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x384) !m0,m1 

U117c: tmp6:= MOVEFROMCREG_DSZ64( , 0x692) 
U117d: MOVETOCREG_BTS_DSZ64(tmp6, 0x00000008, 0x692) 
U117e: MOVETOCREG_BTS_DSZ64( , 0x00000013, 0x2dd) !m0,m1 

U1180: tmp1:= MOVEFROMCREG_DSZ64( , 0x574) 
U1181: tmp0:= NOTAND_DSZ64(0x00000007, tmp1) 
U1182: MOVETOCREG_DSZ64(tmp0, 0x574) 

U1184: tmp2:= MOVEFROMCREG_DSZ64( , 0x562) 
U1185: tmp0:= NOTAND_DSZ64(0x00000007, tmp2) 
U1186: MOVETOCREG_DSZ64(tmp0, 0x562) 

U1188: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000080,  , tmp1) 
U1189: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 
U118a: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000a0,  , tmp1) 

U118c: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000c0,  , tmp2) 
U118d: tmp2:= MOVEFROMCREG_DSZ64( , 0x563) 
U118e: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000e0,  , tmp2) 

U1190: tmp8:= MOVEFROMCREG_DSZ64( , 0x51b) 
U1191: MOVETOCREG_OR_DSZ64(tmp8, 0x00000001, 0x51b) 
U1192: LFNCEMARK-> MOVETOCREG_DSZ64(0x00000015, 0x000) SEQW SAVEUIP1 U1194SEQW GOTO U043c

U1194: LFNCEWAIT-> tmp0:= BTS_DSZ32(0x00000000, 0x00000012) 
U1195: NOP 
U1196: NOP 

U1198: tmp0:= SUB_DSZ32(0x00000040, tmp0) 
U1199: LFNCEWTMRK-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, tmp0, 0x00000000) 
U119a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U119c) SEQW GOTO U1198

U119c: LBSYNC(0x00000001) 
U119d: LFNCEMARK-> LBSYNC(0x00000001) 
U119e: NOP 

U11a0: LFNCEWAIT-> tmp7:= MOVETOCREG_OR_DSZ64(tmp7, 0x00000011, 0x38f) !m1 
U11a1: MOVETOCREG_BTS_DSZ64( , 0x00000012, 0x2dd) !m0,m1 
U11a2: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 

U11a4: tmp13:= READURAM( , 0x008e, 64) 
U11a5: tmp8:= ADD_DSZN(0x00001000, tmp8) !m1 
U11a6: tmp5:= ZEROEXT_DSZ32(tmp13) 

U11a8: tmp6:= PORTIN_DSZ64_ASZ16_SC1(0x4648) !m2 
U11a9: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000010, U3a85) !m1,m2 
U11aa: tmp14:= SAVEUIP(0x01, U2455) !m0 

U11ac: tmp6:= TESTUSTATE( , SYS, !UST_SMM | 0xc000) !m0,m1 ? SEQW GOTO U2455
U11ad: tmp14:= SAVEUIP(0x01, U11b0) !m0 
U11ae: NOP 

U11b0: LFNCEWAIT-> tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, mode=0x01, tmp6) SEQW GOTO U2456
U11b1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp10, U11b6) 
U11b2: CMPUJNZ_DIRECT_NOTTAKEN(tmp10, 0x00000001, U11b5) !m2 

U11b4: tmp5:= MOVEFROMCREG_DSZ64( , 0x2c1, 32) !m1 
U11b5: MOVETOCREG_DSZ64(tmp5, 0x2c0, 32) !m1,m2 
U11b6: tmp10:= READURAM( , 0x005c, 64) 

U11b8: tmp10:= BTS_DSZ64(tmp10, 0x00000017) 
U11b9: SYNCMARK-> WRITEURAM(tmp10, 0x005c, 64) !m2 SEQW GOTO U5efa
U11ba: tmp12:= MOVEFROMCREG_DSZ64( , 0x000) 

U11bc: tmp12:= MOVETOCREG_BTS_DSZ64(tmp12, 0x00000013, 0x000) !m0,m2 
U11bd: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp12, U11c5) 
U11be: tmp12:= MOVEFROMCREG_DSZ64( , 0x067) 

U11c0: tmp13:= MOVEFROMCREG_DSZ64( , 0x065) 
U11c1: tmp13:= AND_DSZ32(0x0000000f, tmp13) 
U11c2: tmp12:= SUB_DSZN(tmp13, tmp12) !m1 

U11c4: WRITEURAM(tmp12, 0x006e, 64) !m2 
U11c5: tmp12:= RDSEGFLD(UNK_SEG_04, FLGS) 
U11c6: tmp7:= NOTAND_DSZ32(tmp12, 0x00000008) 

U11c8: tmp13:= SELECTCC_DSZ32_CONDNZ(tmp7, 0x00004000) 
U11c9: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp13, 0x73c) 
U11ca: tmp7:= SHL_DSZ64(tmp7, 0x00000021) 

U11cc: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x752) 
U11cd: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U11ce: tmp12:= BT_DSZ32(tmp12, 0x00000003) 

U11d0: tmp7:= MOVEMERGEFLGS_DSZ32(0x00000020, tmp12) 
U11d1: tmp7:= CMOVCC_DSZ32_CONDB(tmp7, 0x0000000e) 
U11d2: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp12, U11d5) 

U11d4: tmp8:= LDPPHYS_DSZ32_ASZ32_SC1(0x0000001c, mode=0x04) 
U11d5: tmp3:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, mode=0x04) !m1 
U11d6: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_ALIAS_DATASIZE, mode=0x04) !m0,m1 

U11d8: tmp5:= OR_DSZN(tmp4, tmp5) !m1 
U11d9: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_13, mode=0x04) !m0,m1 
U11da: rax:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 

U11dc: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_1b, mode=0x04) !m0,m1 
U11dd: rcx:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 
U11de: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_23, mode=0x04) !m0,m1 

U11e0: rdx:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 
U11e1: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_2b, mode=0x04) !m0,m1 
U11e2: rbx:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 

U11e4: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_33, mode=0x04) !m0,m1 
U11e5: rsp:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 
U11e6: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_3b, mode=0x04) !m0,m1 

U11e8: rbp:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 
U11e9: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_43, mode=0x04) !m0,m1 
U11ea: rsi:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 

U11ec: LFNCEMARK-> tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_4b, mode=0x04) !m0,m1 
U11ed: rdi:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 
U11ee: rax:= MOVE_DSZ32(rax) 

U11f0: rbx:= ZEROEXT_DSZ32(rbx) 
U11f1: rcx:= ZEROEXT_DSZ32(rcx) 
U11f2: rdx:= ZEROEXT_DSZ32(rdx) 

U11f4: rsp:= ZEROEXT_DSZ32(rsp) 
U11f5: rbp:= ZEROEXT_DSZ32(rbp) 
U11f6: rsi:= ZEROEXT_DSZ32(rsi) 

U11f8: rdi:= ZEROEXT_DSZ32(rdi) 
U11f9: unk_13f(tmp5) !m2 
U11fa: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp5, 0x00000011, 0x7fe) 

U11fc: tmp4:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U11fd: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp4, 0x00000003, 0x7f6) !m0,m2 
U11fe: NOP 

U1200: LFNCEWAIT-> tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_53, mode=0x04) !m0,m1 
U1201: NOP 
U1202: NOP 

U1204: LFNCEMARK-> unk_e7b() 
U1205: NOP 
U1206: NOP 

U1208: LFNCEWAIT-> WRSEGFLD(tmp2, ES, UNK_FLD_0c) 
U1209: tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_5b, mode=0x04) !m0,m1 
U120a: NOP 

U120c: LFNCEMARK-> MOVETOCREG_AND_DSZ64(tmp2, 0x00000003, 0x79e) !m0,m2 
U120d: NOP 
U120e: NOP 

U1210: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x78e) 
U1211: NOP 
U1212: NOP 

U1214: LFNCEMARK-> unk_e6b() 
U1215: NOP 
U1216: NOP 

U1218: LFNCEWAIT-> WRSEGFLD(tmp2, UNK_SEG_09, UNK_FLD_0c) 
U1219: tmp4:= MOVEFROMCREG_DSZ64( , 0x78e) 
U121a: tmp4:= ADD_DSZN(tmp3, tmp4) !m1 

U121c: MOVETOCREG_DSZ64(tmp4, 0x067) 
U121d: tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_63, mode=0x04) !m0,m1 
U121e: LFNCEMARK-> unk_e7b() 

U1220: LFNCEWAIT-> WRSEGFLD(tmp2, SS_USERM, UNK_FLD_0c) 
U1221: NOP 
U1222: NOP 

U1224: LFNCEMARK-> tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_6b, mode=0x04) !m0,m1 
U1225: NOP 
U1226: NOP 

U1228: LFNCEMARK-> unk_e7b() 
U1229: NOP 
U122a: NOP 

U122c: LFNCEWAIT-> WRSEGFLD(tmp2, DS, UNK_FLD_0c) 
U122d: BTUJNB_DIRECT_NOTTAKEN(tmp12, 0x00000003, U12d6) !m0,m2 
U122e: tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_73, mode=0x04) !m0,m1 

U1230: LFNCEMARK-> unk_e7b() 
U1231: NOP 
U1232: NOP 

U1234: LFNCEWAIT-> WRSEGFLD(tmp2, FS, UNK_FLD_0c) 
U1235: tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_7b, mode=0x04) !m0,m1 
U1236: tmp7:= ADD_DSZ32(IMM_MACRO_13, tmp7) !m0 

U1238: LFNCEMARK-> unk_e7b() 
U1239: NOP 
U123a: NOP 

U123c: LFNCEWAIT-> WRSEGFLD(tmp2, GS, UNK_FLD_0c) SEQW GOTO U12e1
U123d: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U123e: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U1240: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U1241) !m2 SEQW GOTO U123e
U1241: MOVETOCREG_DSZ64(tmpv0, 0x22b, 32) !m1 
U1242: MOVETOCREG_DSZ64(tmpv1, 0x22c, 32) !m1 

U1244: tmp15:= ZEROEXT_DSZ32(0x0000070f) 
U1245: tmp15:= CONCAT_DSZ16(tmp15, 0x00000007) SEQW GOTO U5a7e
U1246: tmp5:= READURAM( , 0x005c, 64) 

U1248: tmp5:= BTS_DSZ64(tmp5, 0x0000001e) 
U1249: WRITEURAM(tmp5, 0x005c, 64) !m2 
U124a: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp5, U124c) SEQW GOTO U1255

U124c: SAVEUIP_REGOVR(0x01, U124d, 0x0005) !m0 SEQW GOTO U02ba
U124d: tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x8404) !m2 
U124e: NOP 

U1250: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x0000001e, U1251) !m0,m2 SEQW GOTO U1254
U1251: tmp5:= BTS_DSZ32(tmp5, 0x0000001e) 
U1252: PORTOUT_DSZ32_ASZ16_SC1(0x8404,  , tmp5) !m2 

U1254: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
U1255: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U125a
U1256: tmp5:= READURAM( , 0x0011, 64) 

U1258: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp5) 
U1259: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000014, U47ea) 
U125a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U47ea) 

U125c: tmp7:= READURAM( , 0x000a, 64) 
U125d: tmp5:= READURAM( , 0x0009, 64) 
U125e: tmp3:= READURAM( , 0x000b, 64) 

U1260: tmp9:= MOVEFROMCREG_DSZ64( , 0x20f, 32) !m1 
U1261: WRITEURAM(tmp9, 0x0073, 64) !m2 
U1262: tmp13:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U1264: tmp9:= MOVEFROMCREG_DSZ64( , 0x51c) 
U1265: tmp9:= BTR_DSZ64(tmp9, 0x0000003f) 
U1266: tmp13:= MOVEMERGEFLGS_DSZ64(tmp13, tmp9) 

U1268: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U126c
U1269: tmp10:= READURAM( , 0x005c, 64) 
U126a: BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000004, U127d) !m2 

U126c: tmp9:= MOVEFROMCREG_DSZ64( , 0x008) 
U126d: tmp10:= SHL_DSZ64(tmp9, 0x0000000c) 
U126e: tmp9:= MOVEFROMCREG_DSZ64( , 0x070) 

U1270: tmp9:= NOTAND_DSZ32(0xfffffffffffff000, tmp9) 
U1271: tmp10:= OR_DSZ64(tmp9, tmp10) 
U1272: tmp10:= SHL_DSZ64(tmp10, 0x00000017) 

U1274: tmp9:= MOVEFROMCREG_DSZ64( , 0x281, 32) !m1 
U1275: MOVETOCREG_OR_DSZ64(tmp9, 0x00000001, 0x281) !m1,m2 
U1276: tmp9:= AND_DSZ32(0x00000001, tmp9) 

U1278: tmp9:= NOTAND_DSZ32(0x1ff00000, tmp9) 
U1279: tmp9:= ROL_DSZ32(tmp9, 0x00000003) 
U127a: tmp10:= OR_DSZ64(tmp9, tmp10) 

U127c: WRITEURAM(tmp10, 0x0018, 64) !m2 
U127d: tmp10:= MOVEFROMCREG_DSZ64( , 0x79e) 
U127e: tmp10:= SHL_DSZ32(tmp10, 0x0000000e) 

U1280: tmp9:= MOVEFROMCREG_DSZ64( , 0x51e) 
U1281: MOVETOCREG_BTR_DSZ64(tmp9, 0x51e) !m2 
U1282: tmp9:= AND_DSZ32(0x00000001, tmp9) 

U1284: tmp9:= SHL_DSZ32(tmp9, 0x00000006) 
U1285: tmp10:= OR_DSZ32(tmp9, tmp10) 
U1286: tmp9:= MOVEFROMCREG_DSZ64( , 0x01d) 

U1288: MOVETOCREG_DSZ64( , 0x00000000, 0x01d) !m2 
U1289: tmp9:= AND_DSZ32(0x0000000f, tmp9) 
U128a: tmp9:= SHL_DSZ16(tmp9, 0x00000008) 

U128c: tmp10:= OR_DSZ16(tmp10, tmp9) 
U128d: tmp9:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U128e: tmp9:= SHR_DSZ32(tmp9, 0x00000005) 

U1290: tmp9:= AND_DSZ32(0x00001000, tmp9) 
U1291: tmp10:= OR_DSZ32(tmp9, tmp10) 
U1292: tmp9:= READURAM( , 0x001f, 64) 

U1294: WRITEURAM( , 0x00000000, 0x001f, 64) !m2 
U1295: tmp11:= AND_DSZ32(0x00000200, tmp9) 
U1296: tmp11:= SHR_DSZ32(tmp11, 0x00000002) 

U1298: tmp0:= MOVEFROMCREG_DSZ64( , 0x004) 
U1299: tmp0:= AND_DSZ32(0x00000200, tmp0) 
U129a: tmp0:= SHR_DSZ32(tmp0, 0x00000002) 

U129c: tmp0:= OR_DSZ32(tmp11, tmp0) 
U129d: tmp10:= OR_DSZ64(tmp0, tmp10) 
U129e: tmp11:= AND_DSZ32(0x00000100, tmp9) 

U12a0: tmp11:= SHR_DSZ32(tmp11, 0x00000003) 
U12a1: tmp9:= ZEROEXT_DSZ16(tmp11, tmp9) 
U12a2: tmp10:= OR_DSZ64(tmp9, tmp10) 

U12a4: tmp9:= AND_DSZ32(0x00002000, tmp13) 
U12a5: tmp10:= OR_DSZ64(tmp9, tmp10) 
U12a6: tmp9:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U12a9

U12a8: tmp9:= ZEROEXT_DSZ32(0x00000004) 
U12a9: tmp10:= OR_DSZ64(tmp9, tmp10) 
U12aa: tmp9:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U12ac: tmp9:= MOVETOCREG_BTR_DSZ64(tmp9, 0x00000008, 0x6c3) !m2 
U12ad: tmp9:= SELECTCC_DSZ64_CONDNB(tmp9, 0x00000008) 
U12ae: tmp10:= OR_DSZ64(tmp9, tmp10) 

U12b0: tmp11:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U12b1: tmp10:= OR_DSZ64(tmp9, tmp10) 
U12b2: tmp9:= AND_DSZ32(tmp11, 0x00010000) 

U12b4: tmp9:= SHL_DSZ64(tmp9, 0x00000020) 
U12b5: tmp10:= OR_DSZ64(tmp9, tmp10) 
U12b6: tmp11:= ZEROEXT_DSZ16(tmp11) 

U12b8: tmp11:= SHL_DSZ32(tmp11, 0x00000010) 
U12b9: ROVR<- tmp10:= OR_DSZ64(tmp11, tmp10) SEQW SAVEUIP1 U12ba
U12ba: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U1756

U12bc: tmp6:= CONCAT_DSZ32(0x7ffffc00) 
U12bd: LFNCEMARK-> tmp9:= READURAM( , 0x0014, 64) 
U12be: tmp11:= ZEROEXT_DSZ64(tmp9) 

U12c0: tmp11:= NOTAND_DSZ64(tmp6, tmp11) 
U12c1: tmp9:= AND_DSZ64(tmp6, tmp9) 
U12c2: WRITEURAM(tmp9, 0x0089, 64) !m2 

U12c4: tmp6:= SHR_DSZ64(tmp11, 0x00000015) 
FUN_ucode_00012c5:
U12c5: tmp11:= NOTAND_DSZ64(0x001fffff, tmp11) 
U12c6: tmp6:= AND_DSZ32(0x001fffff, tmp6) 

U12c8: tmp11:= OR_DSZ64(tmp6, tmp11) 
U12c9: WRITEURAM(tmp11, 0x0014, 64) !m2 
U12ca: ROVR<- NOP SEQW SAVEUIP1 U12ccSEQW GOTO U5c34

U12cc: WRITEURAM(tmp10, 0x0059, 64) !m2 SEQW GOTO U175c
U12cd: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U12ce: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U12d0: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U12d1) !m2 SEQW GOTO U12ce
U12d1: MOVETOCREG_DSZ64(tmpv0, 0x22b, 32) !m1 
U12d2: MOVETOCREG_DSZ64(tmpv1, 0x22c, 32) !m1 

U12d4: tmp15:= ZEROEXT_DSZ32(0x000007ff) 
U12d5: tmp15:= CONCAT_DSZ16(tmp15, 0x0000000d) SEQW GOTO U5a7e
U12d6: LFNCEMARK-> unk_e7b() 

U12d8: LFNCEWAIT-> WRSEGFLD(0x00000000, FS, SEL) 
U12d9: NOP 
U12da: NOP 

U12dc: LFNCEMARK-> unk_e7b() 
U12dd: NOP 
U12de: NOP 

U12e0: LFNCEWAIT-> WRSEGFLD(0x00000000, GS, SEL) 
U12e1: tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_73, mode=0x04) !m0,m1 
U12e2: NOP 

U12e4: LFNCEMARK-> unk_e7b() 
U12e5: NOP 
U12e6: NOP 

U12e8: LFNCEWAIT-> WRSEGFLD(tmp2, LDT, UNK_FLD_0c) 
U12e9: tmp9:= ZEROEXT_DSZ32() 
U12ea: BTUJNB_DIRECT_NOTTAKEN(tmp12, 0x00000003, U12f0) !m0,m2 

U12ec: tmp9:= LDPPHYS_DSZ16_ASZ32_SC1(0x00000064, mode=0x0f) 
U12ed: tmp9:= AND_DSZ32(0x00000001, tmp9) 
U12ee: tmp9:= SHL_DSZ32(tmp9, 0x0000000f) 

U12f0: tmp6:= MOVEFROMCREG_DSZ64( , 0x000) 
U12f1: tmp6:= BTR_DSZ32(tmp6, 0x0000000a) 
U12f2: tmp6:= NOTAND_DSZ32(0x0000003f, tmp6) 

U12f4: tmp6:= OR_DSZ32(0x00000007, tmp6) 
U12f5: LFNCEMARK-> tmp6:= MOVETOCREG_BTS_DSZ64(tmp6, 0x00000009, 0x000) !m2 
U12f6: SAVEUIP( , 0x00, U02f2) 

U12f8: LFNCEWAIT-> SAVEUIP_REGOVR(0x01, U12f9, 0x0004) !m0 SEQW GOTO U02ea
U12f9: BTUJNB_DIRECT_NOTTAKEN(tmp12, 0x00000003, U1311) !m0,m2 
U12fa: tmp4:= MOVEFROMCREG_DSZ64( , 0x7f6) 

U12fc: BTUJB_DIRECT_NOTTAKEN(tmp4, 0x0000001f, U12fd) !m0,m2 SEQW GOTO U1311
U12fd: tmp4:= MOVEFROMCREG_DSZ64( , 0x529) 
U12fe: NOP 

U1300: CMPUJNZ_DIRECT_NOTTAKEN(tmp8, U1301, tmp4) !m2 SEQW GOTO U1311
U1301: LFNCEMARK-> MOVETOCREG_DSZ64(tmp8, 0x529) 
U1302: NOP 

U1304: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x540) 
U1305: MOVETOCREG_DSZ64( , 0x00000000, 0x541) 
U1306: MOVETOCREG_DSZ64( , 0x00000000, 0x542) 

U1308: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x543) SEQW SAVEUIP1 U1309SEQW GOTO U043c
U1309: NOP 
U130a: NOP 

U130c: tmp10:= unk_04b(tmp3, 0x00000080) SEQW SAVEUIP1 U130dSEQW GOTO U1bbc
U130d: SYNCFULL-> tmp12:= RDSEGFLD(UNK_SEG_04, FLGS) 
U130e: unk_dff() 

U1310: LFNCEMARK-> tmp12:= BT_DSZ32(tmp12, 0x00000003) 
U1311: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x072) !m0,m2 
U1312: tmp2:= RDSEGFLD(LDT, SEL) 

U1314: LFNCEWAIT-> tmp0:= unk_d61(tmp2) 
U1315: tmp11:= unk_e7b(tmp0, tmp2) !m1 
U1316: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 

U1318: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x06d) !m0,m2 
U1319: ROVR<- unk_13f(tmp5) !m2 SEQW SAVEUIP1 U131a
U131a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, 0x7fe) !m2 

U131c: LFNCEWAIT-> tmp2:= RDSEGFLD(UNK_SEG_09, SEL) 
U131d: tmp4:= AND_DSZ32(0x00000003, tmp2) 
U131e: tmp8:= BT_DSZ32(tmp5, 0x00000011) 

U1320: tmp8:= SELECTCC_DSZ32_CONDNB(tmp8, 0x00000003) 
U1321: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp8, 0x79e, tmp4) SEQW SAVEUIP1 U1322SEQW GOTO U00c9
U1322: NOP 

U1324: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) 
U1325: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
U1326: NOP 

U1328: LFNCEWAIT-> SAVEUIP_REGOVR(0x01, U1329, 0x0004) !m0 SEQW GOTO U02f2
U1329: MOVETOCREG_BTS_DSZ64( , 0x00000009, 0x06d) !m2 
U132a: NOP 

U132c: SAVEUIP_REGOVR(0x01, U132d, 0x000b) !m0 SEQW GOTO U00c9
U132d: tmp11:= unk_e7b(tmp0, tmp2) 
U132e: NOP 

U1330: ROVR<- UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) SEQW SAVEUIP1 U1331SEQW GOTO U00c9
U1331: tmp11:= unk_e7b(tmp0, tmp2) 
U1332: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 

U1334: BTUJNB_DIRECT_NOTTAKEN(tmp12, 0x00000003, U133c) !m0,m2 
U1335: SAVEUIP_REGOVR(0x01, U1336, 0x000c) !m0 SEQW GOTO U00c9
U1336: tmp11:= unk_e7b(tmp0, tmp2) 

U1338: ROVR<- UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) SEQW SAVEUIP1 U1339SEQW GOTO U00c9
U1339: tmp11:= unk_e7b(tmp0, tmp2) 
U133a: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 

U133c: SAVEUIP_REGOVR(0x01, U133d, 0x0009) !m0 SEQW GOTO U00c9
U133d: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) 
U133e: NOP 

U1340: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
U1341: NOP 
U1342: NOP 

U1344: LFNCEWAIT-> SAVEUIP_REGOVR(0x00, U1345, 0x0004) SEQW GOTO U02ea
U1345: NOP 
U1346: NOP 

U1348: MOVE_DSZ32() SEQW SAVEUIP1 U1349SEQW GOTO U2e30
U1349: tmp4:= ADD_DSZN(tmp3, tmp0) !m1 
U134a: MOVETOCREG_DSZ64(tmp4, 0x067) 

U134c: MOVETOCREG_BTS_DSZ64( , 0x0000000b, 0x072) !m0 
U134d: unk_fe3(tmp3) 
U134e: MOVETOCREG_BTS_DSZ64( , 0x0000000b, 0x06d) !m0,m2 

U1350: tmp0:= RDSEGFLD(SS_USERM, FLGS) 
U1351: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x73c) !m2 
U1352: tmp0:= READURAM( , 0x006f, 64) 

U1354: tmp4:= AND_DSZ32(0x00000003, tmp0) 
U1355: CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U1356) !m2 SEQW GOTO U135a
U1356: tmp0:= SHR_DSZ32(tmp0, 0x00000010) 

U1358: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp0) !m0,m1 
U1359: rsp:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U135a: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f8) 

U135c: tmp0:= NOTAND_DSZ32(0x00000155, tmp0) 
U135d: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x7f8) !m2 
U135e: NOP 

U1360: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x01c) 
U1361: tmp0:= OR_DSZ32(tmp9, tmp0) 
U1362: MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000e, 0x01c) !m0 

U1364: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
U1365: tmp0:= ZEROEXT_DSZ32(0x00000021) 
U1366: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x00b) 

U1368: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U1372
U1369: NOP 
U136a: NOP 

U136c: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U1370
U136d: tmp1:= READURAM( , 0x003f, 64) 
U136e: AETTRACE( , tmp1, 0x0c) 

U1370: SAVEUIP( , 0x00, U6080) 
U1371: SAVEUIP_REGOVR(0x01, U1372, 0x0410) !m0 SEQW GOTO U5d52
U1372: tmp0:= MOVEFROMCREG_DSZ64( , 0x000) 

U1374: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000014, U2782) !m1 SEQW GOTO U2784
U1375: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U1376: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U1378: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U1379) !m2 SEQW GOTO U1376
U1379: MOVETOCREG_DSZ64(tmpv0, 0x22b, 32) !m1 
U137a: MOVETOCREG_DSZ64(tmpv1, 0x22c, 32) !m1 

U137c: tmp15:= ZEROEXT_DSZ32(0x000007ff) 
U137d: tmp15:= CONCAT_DSZ16(tmp15, 0x0000000f) SEQW GOTO U5a7e
U137e: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000238) 

U1380: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp9, 0x01c) 
U1381: tmp9:= READURAM( , 0x0035, 64) 
U1382: tmp9:= BT_DSZ64(tmp9, 0x0000003c) 

U1384: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp9, U1385) SEQW GOTO U1392
U1385: tmp11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000002d0) 
U1386: tmp11:= SHL_DSZ64(tmp11, 0x00000010) 

U1388: tmp11:= SAR_DSZ64(tmp11, 0x00000010) 
U1389: tmp11:= NOTAND_DSZ64(0x00000ffc, tmp11) 
U138a: LFNCEMARK-> tmp12:= AND_DSZ64(0xfffffffffffff000, tmp11) 

U138c: tmp11:= SHL_DSZ32(tmp11, 0x0000001e) 
U138d: tmp15:= MOVEFROMCREG_DSZ64( , 0x701) 
U138e: tmp15:= NOTAND_DSZ64(0xc0000000, tmp15) 

U1390: LFNCEWAIT-> WRSEGFLD(tmp12) 
U1391: MOVETOCREG_OR_DSZ64(tmp15, 0x701, tmp11) 
U1392: tmp11:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp2, 0x0000023c) 

U1394: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002e8) 
U1395: tmm7:= unk_747(mm1) 
U1396: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000308) 

U1398: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U023a) 
U1399: tmp8:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003ac) 
U139a: LFNCEMARK-> tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003c8) 

U139c: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000310) 
U139d: SYNCWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U139e) SEQW SAVEUIP0 U139eSEQW GOTO U6332
U139e: NOP 

U13a0: SYNCMARK-> UFLOWCTRL( , tmp13, URET0) 
U13a1: NOP 
U13a2: NOP 

U13a4: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp1, 0x7f1) 
U13a5: MOVETOCREG_DSZ64(tmp4, 0x79e) 
U13a6: tmp1:= MOVEFROMCREG_DSZ64( , 0x51c) 

U13a8: tmp4:= SELECTCC_DSZ32_CONDNB(tmp5, 0x80000000) 
U13a9: tmp4:= SHL_DSZ64(tmp4, 0x00000020) 
U13aa: MOVETOCREG_OR_DSZ64(tmp1, 0x51c, tmp4) 

U13ac: mm4:= unk_76f(tmm7) 
U13ad: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U13b4
U13ae: BTUJB_DIRECT_NOTTAKEN(tmp4, 0x0000000e, U13b4) !m0,m2 

U13b0: tmp1:= MOVEFROMCREG_DSZ64( , 0x6c5) 
U13b1: MOVETOCREG_OR_DSZ64(tmp1, 0x00000008, 0x6c5) !m2 
U13b2: MOVETOCREG_DSZ64(tmp4, 0x7f9, 32) !m1,m2 

U13b4: MOVETOCREG_DSZ64(tmp7, 0x7fe) 
U13b5: MOVETOCREG_DSZ64(tmp9, 0x7f8) 
U13b6: unk_13f(tmp7) !m2 

U13b8: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp3, 0x7c5) 
U13b9: tmp9:= READURAM( , 0x0041, 64) 
U13ba: tmp9:= SHR_DSZ64(tmp9, 0x00000017) 

U13bc: tmp9:= AND_DSZ32(0x00000800, tmp9) 
U13bd: tmp5:= NOTAND_DSZ32(tmp9, tmp5) 
U13be: MOVETOCREG_DSZ64(tmp5, 0x7ff) 

U13c0: tmp9:= SUB_DSZ32(0x00000001) 
U13c1: MOVETOCREG_DSZ64(tmp9, 0x00b) 
U13c2: MOVETOCREG_DSZ64(tmp6, 0x7f6) 

U13c4: SYNCWAIT-> SAVEUIP_REGOVR(0x01, U13c5, 0x0009) !m0 SEQW GOTO U2075
U13c5: NOP 
U13c6: NOP 

U13c8: SYNCFULL-> WRSEGFLD(tmp8, UNK_SEG_09, UNK_FLD_0c) 
U13c9: tmp9:= RDSEGFLD(UNK_SEG_09, BASE) 
U13ca: NOP 

U13cc: LFNCEMARK-> WRSEGFLD(tmp9, CS, BASE) 
U13cd: NOP 
U13ce: NOP 

U13d0: LFNCEWAIT-> tmp9:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U13d1: WRSEGFLD(tmp9, CS, SEL+FLGS+LIM) 
U13d2: tmp9:= RDSEGFLD(SS_USERM, BASE) 

U13d4: WRSEGFLD(tmp9, SS, BASE) 
U13d5: tmp9:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 
U13d6: WRSEGFLD(tmp9, SS, SEL+FLGS+LIM) 

U13d8: tmp9:= RDSEGFLD(UNK_SEG_09, LIMIT) 
U13d9: MOVETOCREG_DSZ64(tmp9, 0x410) 
U13da: tmp9:= ADD_DSZ32(0x00000001, tmp9) 

U13dc: MOVETOCREG_DSZ64(tmp9, 0x700) 
U13dd: tmp9:= RDSEGFLD(UNK_SEG_09, FLGS) 
U13de: MOVETOCREG_DSZ64(tmp9, 0x7f5) 

U13e0: tmp9:= RDSEGFLD(SS_USERM, FLGS) 
U13e1: MOVETOCREG_DSZ64(tmp9, 0x73c) 
U13e2: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x070) 

U13e4: tmp9:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U13e5: MOVETOCREG_DSZ64(tmp9, 0x78e) 
U13e6: tmp14:= ZEROEXT_DSZ64N(tmp14) !m1 

U13e8: tmp9:= ADD_DSZN(tmp9, tmp14) !m1 
U13e9: MOVETOCREG_DSZ64(tmp9, 0x067) 
U13ea: SYNCFULL-> MOVETOCREG_DSZ64(tmp9, 0x71a) 

U13ec: tmp9:= unk_205(0x00000004) 
U13ed: tmp0:= MOVEFROMCREG_DSZ64( , 0x069) 
U13ee: tmp0:= NOTAND_DSZ32(0x00000004, tmp0) 

U13f0: MOVETOCREG_OR_DSZ64(tmp0, 0x069, tmp9) 
U13f1: rsp:= ZEROEXT_DSZ64N(rsp) !m1 
U13f2: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1400

U13f4: tmp9:= READURAM( , 0x0057, 64) 
U13f5: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000058, tmp9) 
U13f6: WRITEURAM(tmp10, 0x0017, 64) !m2 

U13f8: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000078, tmp9) 
U13f9: WRITEURAM(tmp10, 0x0019, 64) !m2 
U13fa: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000048, tmp9) 

U13fc: WRITEURAM(tmp10, 0x0018, 64) !m2 
U13fd: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000068, tmp9) 
U13fe: WRITEURAM(tmp10, 0x001a, 64) !m2 

U1400: tmp3:= ZEROEXT_DSZ64N(tmp14) !m1 
U1401: tmp9:= READURAM( , 0x0077, 64) 
U1402: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000002e, U140e) !m0,m2 

U1404: BTUJNB_DIRECT_NOTTAKEN(tmp11, 0x00000000, U140e) !m2 
U1405: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U140a
U1406: tmp11:= MOVEFROMCREG_DSZ64( , 0x088) 

U1408: tmp11:= AND_DSZ32(0x00000100, tmp11) 
U1409: MOVETOCREG_SHR_DSZ64(tmp11, 0x00000002, 0x0b4) !m0,m2 
U140a: tmp11:= MOVEFROMCREG_DSZ64( , 0x7f0) 

U140c: SYNCFULL-> tmp11:= BTS_DSZ64(tmp11, 0x00000000) 
U140d: SAVEUIP_REGOVR(0x00, U140e, 0x000b) SEQW GOTO U4084
U140e: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 

U1410: tmp9:= SUB_DSZ32(0x00001412, tmp13) 
U1411: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U0d54) 
U1412: tmp9:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U1414: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000b, U50b2) !m0,m2 
U1415: SAVEUIP_REGOVR(0x01, U1416, 0x000e) !m0 SEQW GOTO U2b0d
U1416: NOP 

U1418: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U3d86
U1419: SAVEUIP( , 0x01, U0d4d) !m0 
U141a: tmp14:= MOVE_DSZ32(0x00000004) 

U141c: tmp15:= READURAM( , 0x005c, 64) 
U141d: tmp15:= BTR_DSZ64(tmp15, 0x0000002b) 
U141e: WRITEURAM(tmp15, 0x005c, 64) !m2 

U1420: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(0x50e4,  , tmp14) !m2 SEQW URET1
U1421: SAVEUIP( , 0x01, U1428) !m0 
U1422: TESTUSTATE( , SYS, 0x0800) !m1 ? SEQW GOTO U27d5

U1424: tmp7:= OR_DSZ64(tmp6, tmp5) 
U1425: TESTUSTATE( , UCODE, 0x0010) ? SEQW URET1
U1426: STAD_DSZ64_ASZ32_SC1(tmp11, 0x00000208, mode=0x18, tmp7) 

U1428: STAD_DSZ64_ASZ32_SC1(tmp11, 0x00000200, mode=0x18, tmp5) SEQW UEND0
U1429: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U2be2
U142a: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) !m1,m2 

U142c: tmp14:= SAVEUIP(0x01, U2be8) !m0 
U142d: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
U142e: tmp8:= MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x7f5) !m2 

U1430: tmp11:= XOR_DSZ32(tmp8, tmp6) SEQW GOTO U3bce
U1431: tmp8:= unk_6a0() 
FUN_ucode_0001432:
U1432: tmm5:= unk_704(tmm1) 

U1434: tmm6:= unk_620(tmm5) 
U1435: tmp2:= PINTMOVDTMM2I_DSZ32(tmm6) 
U1436: tmp4:= XOR_DSZ16(0x0000411e, tmp2) 

U1438: SAVEUIP( , 0x00, U1a50) 
U1439: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, tmp2) SEQW GOTO U087e
U143a: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x7bb) 

U143c: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U143d: LFNCEWAIT-> WRMSLOOPCTRFBR( , 0x00003008) SEQW SAVEUIP0 U143eSEQW GOTO U3399
U143e: NOP 

U1440: WRMSLOOPCTRFBR( , 0x00003806) SEQW SAVEUIP0 U1441SEQW GOTO U2031
U1441: tmp12:= ADD_DSZ32(0x00002f80, tmp15) 
U1442: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U1444: tmp5:= ZEROEXT_DSZ64(tmp2, tmp5) 
U1445: tmp5:= MOVETOCREG_DSZ64(tmp5, 0x7bb) 
U1446: tmp12:= ADD_DSZ32(0x00003280, tmp15) 

U1448: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U1449: tmp2:= ZEROEXT_DSZ64(tmp2, tmp5) 
U144a: MOVETOCREG_DSZ64(tmp2, 0x2d4, 32) !m1 

U144c: MOVETOCREG_SHR_DSZ64(tmp2, 0x00000020, 0x2de) !m1 
U144d: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x20f, 32) !m1 
U144e: tmp12:= ADD_DSZ32(0x00002c80, tmp15) 

U1450: WRMSLOOPCTRFBR( , 0x00002002) SEQW SAVEUIP0 U1451SEQW GOTO U2031
U1451: NOP 
U1452: NOP 

U1454: WRMSLOOPCTRFBR( , 0x00000807) SEQW SAVEUIP0 U1455SEQW GOTO U3399
U1455: tmp0:= ZEROEXT_DSZ64(0xffffffffffffffff, tmp5) 
U1456: tmp5:= MOVETOCREG_DSZ64(tmp0, 0x210, 32) !m1 

U1458: tmp12:= ADD_DSZ32(0x00002e60, tmp15) 
U1459: WRMSLOOPCTRFBR( , 0x00004803) SEQW SAVEUIP0 U145aSEQW GOTO U2031
U145a: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U145c: tmp0:= ZEROEXT_DSZ64(tmp0, tmp5) 
U145d: MOVETOCREG_DSZ64(tmp0, 0x211, 32) !m1 
U145e: WRMSLOOPCTRFBR( , 0x0000003f) 

U1460: tmp2:= ZEROEXT_DSZ32(0x0000005f) 
U1461: MOVETOCREG_DSZ64( , 0x00000000, tmp2) 
U1462: tmp2:= SUBR_DSZ64(tmp2, 0x00000001) SEQW GOTO U1461

U1464: MOVETOCREG_DSZ64( , 0x00000000, 0x009) 
U1465: tmp12:= ADD_DSZ32(0x00001ca0, tmp15) 
U1466: LFNCEMARK-> tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U1468: WRITEURAM(tmp0, 0x0020, 64) 
U1469: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U1472
U146a: NOP 

U146c: SAVEUIP_REGOVR(0x01, U146d, 0x0000) !m0 SEQW GOTO U32cd
U146d: tmp0:= MOVEFROMCREG_DSZ64( , 0x2e9, 32) !m1 
U146e: MOVETOCREG_BTS_DSZ64(tmp0, 0x0000000a, 0x2e9) !m0,m1,m2 

U1470: MOVETOCREG_DSZ64(tmp0, 0x2e9, 32) !m1,m2 
U1471: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
U1472: LFNCEWAIT-> MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2ce) !m0,m1 

U1474: SYNCFULL-> NOP 
U1475: tmp0:= MOVEFROMCREG_DSZ64( , 0x2ce, 32) !m1 
U1476: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U1478) !m2 SEQW GOTO U1474

U1478: tmp4:= SAVEUIP_REGOVR( , 0x00, U1479, 0x2401) SEQW GOTO U0cf9
U1479: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cf, 32) !m1 
U147a: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000001, 0x2cf) !m1 

U147c: tmp1:= ZEROEXT_DSZ32(0x00000fff) 
U147d: MOVETOCREG_DSZ64(tmp1, 0x00b) 
U147e: tmp12:= ADD_DSZ32(0x00000100, tmp15) 

U1480: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U1481: tmp2:= NOTAND_DSZ32(0x00000003, tmp0) 
U1482: tmp2:= MOVETOCREG_DSZ64(tmp2, 0x403) 

U1484: tmp0:= ZEROEXT_DSZ64(tmp0, tmp2) 
U1485: MOVETOCREG_DSZ64(tmp0, 0x403) 
U1486: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 

U1488: tmp2:= NOTAND_DSZ32(0x00000003, tmp0) 
U1489: tmp2:= MOVETOCREG_DSZ64(tmp2, 0x703) 
U148a: tmp0:= ZEROEXT_DSZ64(tmp0, tmp2) 

U148c: MOVETOCREG_DSZ64(tmp0, 0x703) 
U148d: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 
U148e: MOVETOCREG_DSZ64(tmp0, 0x223, 32) !m1 

U1490: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x088) 
U1491: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040) 
U1492: MOVETOCREG_DSZ64(tmp0, 0x06b) 

U1494: tmp12:= ADD_DSZ32(0x00000180, tmp15) 
U1495: tmp5:= WRMSLOOPCTRFBR( , 0x00001827) 
U1496: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U1498: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 
U1499: tmp12:= ADD_DSZ32(0x00000040, tmp12) 
U149a: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 

U149c: tmp8:= ZEROEXT_DSZ32(tmp8, tmp5) 
U149d: tmp9:= SHR_DSZ32(tmp8, 0x00000010) 
U149e: LFNCEWAIT-> tmp5:= MOVETOCREG_DSZ64(tmp6, tmp8) 

U14a0: tmp9:= ZEROEXT_DSZ32(tmp9, tmp5) 
U14a1: tmp5:= MOVETOCREG_DSZ64(tmp2, tmp9) 
U14a2: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1496

U14a4: WRMSLOOPCTRFBR( , 0x00000015) 
U14a5: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U14a6: tmp12:= ADD_DSZ32(0x00000020, tmp12) 

U14a8: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U14a9: tmp8:= ZEROEXT_DSZ32(tmp8, tmp5) 
U14aa: tmp9:= SHR_DSZ32(tmp8, 0x00000010) 

U14ac: tmp2:= SHR_DSZ64(tmp6, 0x00000020) 
U14ad: LFNCEWAIT-> tmp5:= MOVETOCREG_DSZ64(tmp6, tmp8) 
U14ae: tmp9:= ZEROEXT_DSZ32(tmp9, tmp5) 

U14b0: tmp5:= MOVETOCREG_DSZ64(tmp2, tmp9) 
U14b1: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U14a5
U14b2: NOP 

U14b4: NOP SEQW SAVEUIP0 U14b5SEQW GOTO U3038
U14b5: tmp4:= ZEROEXT_DSZ64(tmp4, tmp5) 
U14b6: MOVETOCREG_DSZ64(tmp4, 0x7f0) 

U14b8: tmp11:= ZEROEXT_DSZ64(tmp6) 
U14b9: MOVETOCREG_DSZ64(tmp8, 0x7fe) 
U14ba: unk_13f(tmp8) !m2 

U14bc: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U14bd: MOVETOCREG_DSZ64(tmp2, 0x070) 
U14be: tmp12:= ADD_DSZ32(0x00000ec0, tmp15) 

U14c0: LFNCEMARK-> WRMSLOOPCTRFBR( , 0x0000008f) 
U14c1: NOP 
U14c2: NOP 

U14c4: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U14c5: WRITEURAM(tmp1, 0x0008, 64) !m0 
U14c6: tmp12:= ADD_DSZ32(0x00000020, tmp12) 

U14c8: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U14c4
U14c9: tmp12:= ADD_DSZ32(0x000020c0, tmp15) 
U14ca: SAVEUIP( , 0x01, U0021) !m0 

U14cc: WRMSLOOPCTRFBR( , 0x00000007) 
U14cd: tmp12:= unk_ea6(tmp12) 
U14ce: tmp11:= unk_ea6(tmp12) 

U14d0: tmp12:= ADD_DSZ32(0x00000040, tmp12) 
U14d1: tmm0:= MOVHLPS(tmm3, tmm4) 
U14d2: mm0:= unk_5b9(tmm0) 

U14d4: tmm5:= FMOV( , tmm4) !m0 
U14d5: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U14cd
U14d6: WRMSLOOPCTRFBR( , 0x0000000f) 

U14d8: tmp14:= unk_ea6(tmp12) 
U14d9: tmp15:= unk_ea6(tmp12) 
U14da: xmm7:= MOVHLPS(tmm7, tmm6) 

U14dc: rdi:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040) 
U14dd: tmp12:= ADD_DSZ32(0x00000060, tmp12) 
U14de: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U14d8

U14e0: SAVEUIP_REGOVR(0x00, U14e1, 0x0000) SEQW URET1
U14e1: LFNCEWAIT-> WRSEGFLD(tmp2, SS_USERM, BASE) 
U14e2: WRSEGFLD(tmp4, SS_USERM, SEL+FLGS+LIM) 

U14e4: WRSEGFLD(tmp6, UNK_SEG_09, BASE) 
U14e5: LFNCEMARK-> WRSEGFLD(tmp8, UNK_SEG_09, FLGS) SEQW SAVEUIP0 U14e6SEQW GOTO U0021
U14e6: WRSEGFLD(tmp2, LDT, BASE) 

U14e8: WRSEGFLD(tmp4, LDT, SEL+FLGS+LIM) 
U14e9: WRSEGFLD(tmp6, GDT, BASE) 
U14ea: WRSEGFLD(tmp8, GDT, SEL+FLGS+LIM) SEQW SAVEUIP0 U14ecSEQW GOTO U0021

U14ec: WRSEGFLD(tmp2, TSS, BASE) 
U14ed: WRSEGFLD(tmp4, TSS, SEL+FLGS+LIM) 
U14ee: WRSEGFLD(tmp6, IDT, BASE) 

U14f0: WRSEGFLD(tmp8, IDT, SEL+FLGS+LIM) SEQW SAVEUIP0 U14f1SEQW GOTO U0021
U14f1: WRSEGFLD(tmp2, GS, BASE) 
U14f2: WRSEGFLD(tmp4, GS, SEL+FLGS+LIM) 

U14f4: WRSEGFLD(tmp6, FS, BASE) 
U14f5: WRSEGFLD(tmp8, FS, SEL+FLGS+LIM) SEQW SAVEUIP0 U14f6SEQW GOTO U0021
U14f6: WRSEGFLD(tmp2, DS, BASE) 

U14f8: WRSEGFLD(tmp4, DS, SEL+FLGS+LIM) 
U14f9: WRSEGFLD(tmp6, ES, BASE) 
U14fa: WRSEGFLD(tmp8, ES, SEL+FLGS+LIM) 

U14fc: WRMSLOOPCTRFBR( , 0x00000003) 
U14fd: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U14fe: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U1500: rdi:= unk_14d(tmp2) 
U1501: tmp7:= unk_14d(tmp4) 
U1502: tmp12:= ADD_DSZ32(0x00000040, tmp12) 

U1504: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U14fd
U1505: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U1506: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U1508: tmp0:= RDSEGFLD(DS_32bit, SEL+FLGS+LIM) 
U1509: WRSEGFLD(tmp0) 
U150a: WRSEGFLD(tmp0) 

U150c: WRSEGFLD(tmp2) 
U150d: WRSEGFLD(tmp4) 
U150e: tmp0:= READURAM( , 0x005c, 64) 

U1510: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000019, U3a09) !m1,m2 
U1511: NOP SEQW SAVEUIP1 U1512SEQW GOTO U2e30
U1512: tmp2:= RDSEGFLD(SS_USERM, FLGS) 

U1514: MOVETOCREG_DSZ64(tmp2, 0x73c) 
U1515: WRSEGFLD(0x00000000, UNK_SEG_04, BASE) 
U1516: WRSEGFLD(0x00000000, DS_16bit, BASE) 

U1518: tmp9:= RDSEGFLD(DS_32bit, SEL+FLGS+LIM) 
U1519: WRSEGFLD(tmp9, UNK_SEG_04, SEL+FLGS+LIM) 
U151a: WRSEGFLD(tmp9, DS_16bit, SEL+FLGS+LIM) 

U151c: MOVETOCREG_DSZ64(tmp11, 0x067) 
U151d: SAVEUIP( , 0x00, U02f2) 
U151e: SAVEUIP_REGOVR(0x01, U1520, 0x0009) !m0 SEQW GOTO U02ea

U1520: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x2a1) !m1 
U1521: MOVETOCREG_DSZ64( , 0x00000000, 0x28c, 32) !m1 
U1522: tmp1:= READURAM( , 0x0009, 64) 

U1524: MOVETOCREG_DSZ64(tmp1, 0x20f, 32) !m1 
U1525: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d3, 32) !m1,m2 
U1526: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000c, U1528) !m2 SEQW GOTO U1525

U1528: tmp2:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
U1529: tmp2:= NOTAND_DSZ32(0x00000040, tmp2) 
U152a: MOVETOCREG_OR_DSZ64(tmp2, 0x00000010, 0x223) !m1,m2 

U152c: SAVEUIP( , 0x01, U1b80) !m0 SEQW GOTO U6f21
U152d: tmp13:= READUIP_REGOVR(0x00) 
U152e: tmp14:= READUIP_REGOVR(0x01) !m0 

U1530: tmp10:= MOVEFROMCREG_DSZ64( , 0x480) 
U1531: tmp10:= AND_DSZ32(0x0000ffff, tmp10) 
U1532: tmp7:= ZEROEXT_DSZ32(0x0000ffff) 

U1534: STAD_DSZ32_ASZ32_SC1(tmp11, 0x00000018, mode=0x18,  , tmp10) 
U1535: STAD_DSZ32_ASZ32_SC1(tmp11, 0x0000001c, mode=0x18,  , tmp7) SEQW URET0
U1536: TESTUSTATE( , SYS, 0x2000) !m1 ? SEQW GOTO U1539

U1538: tmp1:= AND_DSZ64(0xfffffffffffff000, tmp1) SEQW SAVEUIP1 U1539SEQW GOTO U2eaa
U1539: tmp3:= BT_DSZ32(tmp10, 0x00000010) 
U153a: tmp3:= SELECTCC_DSZ32_CONDB(tmp3, 0x0000000f) 

U153c: tmp3:= OR_DSZ32(0x00000002, tmp3) 
U153d: tmp1:= NOTAND_DSZ32(0xfffffffffffff000, tmp1) 
U153e: tmp3:= SHL_DSZ32(tmp3, 0x0000000c) 

U1540: tmp1:= OR_DSZ32(tmp3, tmp1) 
U1541: tmp13:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1542: MOVETOCREG_BTS_DSZ64(tmp13, 0x00000010, 0x7fe) 

U1544: LFNCEWAIT-> tmp0:= ZEROEXT_DSZ32(0x0000002c) SEQW GOTO U4f5e
U1545: tmm5:= unk_7c2(tmm0) 
U1546: tmm1:= unk_6aa(tmm3, tmm5) 

U1548: tmm3:= unk_62f(tmm3) !m1 
U1549: tmm1:= unk_62f(tmm1) !m1 
U154a: tmm5:= unk_637(tmm1, tmm3) !m1 

U154c: tmp4:= PINTMOVDTMM2I_DSZ32(tmm5) 
U154d: tmp10:= OR_DSZ32(tmp4, tmp10) SEQW GOTO U2281
U154e: LFNCEMARK-> MOVE_DSZ32() 

U1550: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U1551: tmp6:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004d0, mode=0x01, tmp12) 
U1552: tmp2:= AND_DSZ32(0x00000060, tmp6) 

U1554: tmp2:= SHL_DSZ32(tmp2, 0x00000001) 
U1555: tmp1:= AND_DSZ32(0x0000000e, tmp6) 
U1556: tmp1:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000001) 

U1558: tmp1:= OR_DSZ32(tmp2, tmp1) 
U1559: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U155a: tmp2:= AND_DSZ32(0x00004000, tmp2) 

U155c: tmp2:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000001) 
U155d: tmp1:= OR_DSZ32(tmp2, tmp1) 
U155e: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004b4, mode=0x01, tmp12) 

U1560: tmp3:= AND_DSZ32(0x00000002, tmp6) 
U1561: tmp4:= AND_DSZ32(0x00000001, tmp4) 
U1562: tmp4:= SHL_DSZ32(tmp4, 0x00000003) 

U1564: tmp4:= SELECTCC_DSZ32_CONDNZ(tmp3, tmp4) 
U1565: tmp1:= OR_DSZ32(tmp4, tmp1) 
U1566: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000fc, mode=0x01, tmp12) 

U1568: tmp3:= AND_DSZ32(0x80000000, tmp3) 
U1569: tmp3:= SELECTCC_DSZ32_CONDZ(tmp3, 0x00000002) 
U156a: tmp1:= OR_DSZ32(tmp3, tmp1) 

U156c: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d4, mode=0x01, tmp12) 
U156d: tmp5:= OR_DSZ32(0x00000000, tmp5) 
U156e: tmp4:= SELECTCC_DSZ32_CONDZ(tmp5, 0x00000004) 

U1570: tmp1:= OR_DSZ32(tmp4, tmp1) 
U1571: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000500, mode=0x01, tmp12) 
U1572: tmp3:= AND_DSZ32(0x00000001, tmp3) 

U1574: tmp3:= SHL_DSZ32(tmp3, 0x00000004) 
U1575: tmp1:= OR_DSZ32(0x00000020, tmp1) 
U1576: tmp1:= OR_DSZ32(tmp3, tmp1) 

U1578: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, 0x6c5) 
U1579: WRITEURAM(tmp1, 0x003f, 64) 
U157a: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x072) !m0,m2 

U157c: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004f0, mode=0x01, tmp12) 
U157d: tmp1:= AND_DSZ32(0x00000001, tmp1) 
U157e: tmp1:= SHL_DSZ64(tmp1, 0x00000005) 

U1580: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp12) 
U1581: tmp3:= AND_DSZ32(0x00800000, tmp3) 
U1582: tmp3:= SELECTCC_DSZ32_CONDZ(tmp3, 0x00001000) 

U1584: tmp4:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U1585: tmp4:= NOTAND_DSZ32(0x00001000, tmp4) 
U1586: tmp4:= OR_DSZ32(tmp3, tmp4) 

U1588: MOVETOCREG_OR_DSZ64(tmp4, 0x6c3, tmp1) 
U1589: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001b4, mode=0x01, tmp12) 
U158a: tmp4:= AND_DSZ32(0x00380000, tmp1) 

U158c: SYNCMARK-> MOVETOCREG_OR_DSZ64(tmp4, 0x00000002, 0x7c6) !m0 
U158d: tmp0:= ADD_DSZ64(0x00000400, tmp12) SEQW SAVEUIP1 U158eSEQW GOTO U319a
U158e: tmp12:= READURAM( , 0x0011, 64) 

U1590: tmp4:= MOVEFROMCREG_DSZ64( , 0x105) 
U1591: tmp4:= BT_DSZ32(tmp4, 0x00000002) 
U1592: tmp12:= MOVEMERGEFLGS_DSZ64(tmp12, tmp4) 

U1594: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000498, mode=0x01, tmp12) 
U1595: tmp8:= ZEROEXT_DSZ32(0x00003605) 
U1596: tmp9:= ZEROEXT_DSZ32(0x00060000) 

U1598: tmp8:= CONCAT_DSZ32(tmp9, tmp8) 
U1599: tmp7:= AND_DSZ64(tmp8, tmp7) 
U159a: tmp7:= OR_DSZ64(0x00000010, tmp7) 

U159c: tmp8:= MOVEFROMCREG_DSZ64( , 0x7ee) 
U159d: tmp8:= AND_DSZ32(0x00000001, tmp8) 
U159e: tmp8:= SELECTCC_DSZ32_CONDZ(tmp8, 0x000000c0) 

U15a0: tmp4:= SELECTCC_DSZ32_CONDNB(tmp4, 0x00000080) 
U15a1: tmp8:= OR_DSZ32(tmp4, tmp8) 
U15a2: tmp8:= SHL_DSZ64(tmp8, 0x00000020) 

U15a4: tmp7:= OR_DSZ64(tmp8, tmp7) 
U15a5: tmp8:= READURAM( , 0x005c, 64) 
U15a6: tmp8:= AND_DSZ64(0x00000040, tmp8) 

U15a8: tmp8:= SELECTCC_DSZ32_CONDNZ(tmp8, 0x00000800) 
U15a9: tmp7:= OR_DSZ64(tmp8, tmp7) 
U15aa: tmp8:= SUB_DSZ32(0x00000002, tmp5) 

U15ac: tmp9:= SELECTCC_DSZ32_CONDNZ(tmp8, tmp6) 
U15ad: tmp8:= AND_DSZ32(0x00000080, tmp9) 
U15ae: tmp9:= SELECTCC_DSZ32_CONDZ(tmp8, 0x00020800) 

U15b0: tmp8:= SELECTCC_DSZ32_CONDZ(tmp8, 0x0000f615) 
U15b1: tmp8:= CONCAT_DSZ32(tmp9, tmp8) 
U15b2: tmp7:= OR_DSZ64(tmp7, tmp8) 

U15b4: MOVETOCREG_DSZ64( , 0x00000000, 0x2da, 32) !m1 
U15b5: MOVETOCREG_DSZ64(tmp7, 0x2c4, 32) !m1 
U15b6: MOVETOCREG_SHR_DSZ64(tmp7, 0x00000020, 0x008) 

U15b8: WRITEURAM(tmp7, 0x0070, 64) 
U15b9: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004a0, mode=0x01, tmp12) 
U15ba: tmp8:= MOVEFROMCREG_DSZ64( , 0x281, 32) !m1 

U15bc: tmp8:= NOTAND_DSZ32(0x00000fe0, tmp8) 
U15bd: tmp7:= AND_DSZ32(0x00000fe0, tmp7) 
U15be: tmp7:= OR_DSZ32(0xa00f001e, tmp7) 

U15c0: tmp7:= OR_DSZ16(tmp8, tmp7) 
U15c1: tmp8:= SELECTCC_DSZ32_CONDNB(tmp12, 0x0000001f) 
U15c2: MOVETOCREG_OR_DSZ64(tmp7, 0x281, tmp8) !m1 

U15c4: tmp1:= BTR_DSZ32(tmp1, 0x0000001f) 
U15c5: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000002cc, mode=0x01, tmp12) 
U15c6: tmp7:= SELECTCC_DSZ32_CONDNB(tmp1, tmp7) 

U15c8: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001ac, mode=0x01, tmp12) 
U15c9: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000025c, mode=0x01, tmp12) 
U15ca: tmp8:= AND_DSZ32(0x001fffff, tmp8) 

U15cc: tmp10:= SHL_DSZ64(tmp8, 0x00000015) 
U15cd: tmp8:= OR_DSZ64(tmp8, tmp10) 
U15ce: tmp10:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001bc, mode=0x01, tmp12) 

U15d0: tmp11:= AND_DSZ32(0x00008000, tmp10) 
U15d1: tmp11:= SHL_DSZ32(tmp11, 0x00000010) 
U15d2: tmp10:= SHL_DSZ32(tmp9, 0x00000017) 

U15d4: tmp11:= OR_DSZ32(tmp10, tmp11) 
U15d5: tmp11:= OR_DSZ32(tmp7, tmp11) 
U15d6: tmp11:= CONCAT_DSZ32(tmp11, tmp1) 

U15d8: tmp1:= NOTAND_DSZ32(0x00380000, tmp1) 
U15d9: tmp10:= READURAM( , 0x004c, 64) 
U15da: WRITEURAM(tmp11, 0x004c, 64) !m2 

U15dc: tmp15:= SHL_DSZ64(tmp10, 0x00000010) 
U15dd: tmp15:= SHR_DSZ64(tmp15, 0x00000010) 
U15de: tmp11:= NOTAND_DSZ32(tmp15, 0x00000001) SEQW SAVEUIP1 U15e0SEQW GOTO U69f5

U15e0: TESTUSTATE( , SYS, 0x2000) !m1 ? SEQW GOTO U15e4
U15e1: tmp10:= BTR_DSZ64(tmp10, 0x00000030) 
U15e2: tmp10:= BTR_DSZ64(tmp10, 0x00000031) 

U15e4: tmp4:= SHR_DSZ64(tmp10, 0x00000030) 
U15e5: tmp4:= SHL_DSZ64(tmp4, 0x00000010) 
U15e6: tmp4:= CONCAT_DSZ32(tmp4, tmp3) 

U15e8: tmp4:= MOVEMERGEFLGS_DSZ64(tmp4, tmp3) 
U15e9: tmp10:= CMOVCC_DSZ64_CONDNZ(tmp4, tmp10) 
U15ea: MOVETOCREG_DSZ64(tmp10, 0x513) 

U15ec: tmp13:= READURAM( , 0x0049, 64) 
U15ed: SYNCWAIT-> tmp3:= TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U160e
U15ee: tmp13:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004b8, mode=0x01, tmp12) 

U15f0: LFNCEMARK-> tmp4:= READURAM( , 0x0043, 64) 
U15f1: tmp15:= CONCAT_DSZ32(0x00000200) 
U15f2: tmp15:= AND_DSZ64(tmp15, tmp4) 

U15f4: SYNCMARK-> MOVETOCREG_DSZ64(tmp15, 0x6c0) 
U15f5: tmp1:= OR_DSZ32(tmp4, tmp1) 
U15f6: tmp15:= SHR_DSZ64(tmp4, 0x00000020) 

U15f8: tmp15:= AND_DSZ32(0x007fffff, tmp15) 
U15f9: tmp7:= OR_DSZ32(tmp15, tmp7) 
U15fa: tmp15:= SHR_DSZ64(tmp4, 0x00000037) 

U15fc: tmp15:= AND_DSZ32(0x000000ff, tmp15) 
U15fd: tmp9:= OR_DSZ32(tmp15, tmp9) 
U15fe: SYNCWAIT-> TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U1606

U1600: tmp15:= READURAM( , 0x0010, 64) 
U1601: LFNCEWAIT-> tmp11:= MOVEFROMCREG_DSZ64( , 0x513) 
U1602: ROVR<- tmp11:= NOTAND_DSZ64(tmp15, tmp11) SEQW SAVEUIP1 U1604

U1604: tmp4:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp11, 0x00000080) SEQW SAVEUIP1 U1605SEQW GOTO U5b75
U1605: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, 0x000000a0, tmp2) 
U1606: tmp4:= READURAM( , 0x0014, 64) 

U1608: tmp4:= SHR_DSZ64(tmp4, 0x0000002a) 
U1609: tmp4:= AND_DSZ32(0x001fffff, tmp4) 
U160a: tmp8:= OR_DSZ64(tmp8, tmp4) 

U160c: tmp4:= SHL_DSZ64(tmp4, 0x0000002a) 
U160d: tmp8:= OR_DSZ64(tmp4, tmp8) 
U160e: MOVETOCREG_BTS_DSZ64( , 0x00000008, 0x005) 

U1610: tmp2:= ZEROEXT_DSZ32(0x00000123) 
U1611: LFNCEMARK-> MOVETOCREG_DSZ64(tmp2, 0x00b) 
U1612: tmp11:= SHL_DSZ32(tmp9, 0x00000017) 

U1614: tmp11:= OR_DSZ32(tmp7, tmp11) 
U1615: tmp11:= CONCAT_DSZ32(tmp11, tmp1) 
U1616: MOVETOCREG_DSZ64(tmp11, 0x6c0) 

U1618: WRITEURAM(tmp8, 0x0014, 64) 
U1619: tmp4:= AND_DSZ32(0x00000004, tmp1) 
U161a: tmp4:= SHR_DSZ32(tmp4, 0x00000001) 

U161c: tmp4:= OR_DSZ32(tmp3, tmp4) 
U161d: tmp10:= SHR_DSZ32(tmp1, 0x00000018) 
U161e: tmp10:= AND_DSZ32(0x00000008, tmp10) 

U1620: tmp4:= OR_DSZ32(tmp10, tmp4) 
U1621: tmp10:= SHR_DSZ32(tmp1, 0x00000014) 
U1622: tmp10:= AND_DSZ32(0x00000004, tmp10) 

U1624: tmp4:= OR_DSZ32(tmp10, tmp4) 
U1625: tmp10:= AND_DSZ32(0x00000001, tmp9) 
U1626: MOVETOCREG_OR_DSZ64(tmp4, 0x01d, tmp10) 

U1628: TESTUSTATE( , SYS, UST_VMX_OP_DIS) !m1 ? SEQW GOTO U162d
U1629: WRITEURAM(tmp13, 0x0057, 64) 
U162a: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000218, mode=0x01, tmp12) 

U162c: WRITEURAM(tmp1, 0x0056, 64) 
U162d: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U1638
U162e: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000080, mode=0x01, tmp12) 

U1630: MOVETOCREG_DSZ64(tmp1, 0x7f8) 
U1631: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002e8, mode=0x01, tmp12) 
U1632: MOVETOCREG_DSZ64(tmp1, 0x7f9, 32) !m1 

U1634: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000270, mode=0x01, tmp12) 
U1635: unk_13f(tmp1) !m2 
U1636: MOVETOCREG_DSZ64(tmp1, 0x7fe) 

U1638: tmp1:= READURAM( , 0x001f, 64) 
U1639: tmp1:= NOTAND_DSZ64(0x00000400, tmp1) 
U163a: WRITEURAM(tmp1, 0x001f, 64) 

U163c: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000268, mode=0x01, tmp12) 
U163d: tmp1:= ZEROEXT_DSZ32(0x00000001) 
U163e: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, mode=0x01, tmp12, tmp1) 

U1640: tmp11:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000fc, mode=0x01, tmp12) 
U1641: tmp1:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U1642: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x78e) 

U1644: tmp1:= ADD_DSZN(tmp3, tmp1) !m1 
U1645: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000508, mode=0x01, tmp12) 
U1646: WRITEURAM(tmp4, 0x004a, 64) 

U1648: TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U468c
U1649: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000008, U164c) !m2 
U164a: AETTRACE( , tmp4, 0x0c) 

U164c: MOVETOCREG_DSZ64(tmp4, 0x067) !m2 
U164d: SYNCFULL-> MOVETOCREG_DSZ64(tmp4, 0x71a) !m2 SEQW GOTO U468d
U164e: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 

U1650: TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U1656
U1651: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000278, tmp12) 
U1652: tmp1:= AND_DSZ32(0x00000100, tmp1) 

U1654: tmp0:= NOTAND_DSZ64(0x00000100, tmp0) 
U1655: tmp0:= OR_DSZ64(tmp1, tmp0) 
U1656: tmp2:= BT_DSZ32(tmp2, 0x00000001) 

U1658: tmp0:= MOVEMERGEFLGS_DSZ64(tmp0, tmp2) 
U1659: tmp15:= ZEROEXT_DSZ32(0xffc0802a) 
U165a: tmp15:= CONCAT_DSZ32(0xffffffffffffffff, tmp15) 

U165c: tmp15:= AND_DSZ64(tmp0, tmp15) 
U165d: tmp15:= XOR_DSZ64(0x00000002, tmp15) 
U165e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 

U1660: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp13, tmp10) 
U1661: tmp15:= NOTAND_DSZ32(tmp15, 0x00000001) 
U1662: tmp15:= SHL_DSZ32(tmp15, 0x00000011) 

U1664: tmp15:= AND_DSZ32(tmp0, tmp15) 
U1665: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 
U1666: rsp:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000260, tmp12) 

U1668: tmp10:= MOVEMERGEFLGS_DSZ32(tmp10, tmp6) 
U1669: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000198, tmp12) 
U166a: LFNCEWAIT-> WRSEGFLD(tmp7, GDT, LIMIT) 

U166c: tmp6:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001a0, tmp12) 
U166d: WRSEGFLD(tmp6, IDT, LIMIT) 
U166e: tmp15:= OR_DSZ32(tmp6, tmp7) 

U1670: tmp15:= AND_DSZ32(0xffff0000, tmp15) 
U1671: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 
U1672: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000148, tmp12) 

U1674: unk_25c( , tmp7) 
U1675: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000150, tmp12) 
U1676: unk_25c( , tmp6) 

U1678: tmp4:= ADD_DSZ64(0x00000140, tmp12) 
U1679: WRSEGFLD(tmp7, GDT, BASE) 
U167a: WRSEGFLD(tmp6, IDT, BASE) SEQW SAVEUIP1 U167cSEQW GOTO U5725

U167c: WRSEGFLD(tmp9) !m1 
U167d: tmp9:= SHR_DSZ32(tmp9, 0x00000010) 
U167e: tmp9:= XOR_DSZ32(0x00000008, tmp9) 

U1680: tmp9:= SELECTCC_DSZ32_CONDZ(tmp13, tmp9) 
U1681: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000003, U5f95) !m0,m2 
U1682: WRSEGFLD(tmp7, TSS, BASE) 

U1684: tmp4:= ADD_DSZ64(0x00000138, tmp12) SEQW SAVEUIP1 U1685SEQW GOTO U5725
U1685: WRSEGFLD(tmp9) !m1 
U1686: WRSEGFLD(tmp7, LDT, BASE) 

U1688: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U2c3e) !m1 
U1689: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000168, tmp12) 
U168a: tmp8:= BTR_DSZ64(tmp8, 0x0000001a) 

U168c: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp8, 0x00000015, 0x79e) 
U168d: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000160, tmp12) 
U168e: tmp9:= BTR_DSZ64(tmp9, 0x0000001a) 

U1690: tmp4:= ADD_DSZ64(0x00000110, tmp12) 
U1691: tmp6:= CLC(tmp9) SEQW SAVEUIP1 U1692SEQW GOTO U572a
U1692: tmp3:= BT_DSZ64(tmp3, 0x00000027) 

U1694: tmp11:= SETCC_CONDB(tmp3) 
U1695: tmp11:= SHL_DSZ64(tmp11, 0x0000001a) 
U1696: tmp9:= OR_DSZ64(tmp11, tmp9) 

U1698: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 
U1699: tmp5:= SHR_DSZ32(tmp9, 0x00000010) 
U169a: tmp1:= AND_DSZ32(0x00000060, tmp5) 

U169c: tmp2:= AND_DSZ32(0x0000000f, tmp5) 
U169d: tmp1:= SELECTCC_DSZ32_CONDNB(tmp3, tmp1) 
U169e: tmp2:= SUB_DSZ32(0x00000003, tmp2) 

U16a0: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp2, tmp1) 
U16a1: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U5f95) !m2 
U16a2: LFNCEWAIT-> WRSEGFLD(tmp9) !m2 

U16a4: WRSEGFLD(tmp7, UNK_SEG_09, BASE) 
U16a5: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp9, 0x00000010, 0x7f5) 
U16a6: tmp2:= AND_DSZ64(0x00000003, tmp9) 

U16a8: tmp9:= ZEROEXT_DSZ64(tmp8) 
U16a9: tmp6:= BT_DSZ32(tmp9, 0x0000001b) 
U16aa: tmp4:= ADD_DSZ64(0x00000118, tmp12) SEQW SAVEUIP1 U16acSEQW GOTO U572a

U16ac: tmp9:= OR_DSZ64(tmp11, tmp9) 
U16ad: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 
U16ae: WRSEGFLD(tmp9) !m2 

U16b0: tmp5:= SHR_DSZ32(tmp9, 0x00000010) 
U16b1: tmp15:= SELECTCC_DSZ32_CONDNB(tmp3, tmp5) 
U16b2: tmp13:= AND_DSZ32(0x00000001, tmp10) 

U16b4: tmp13:= SELECTCC_DSZ32_CONDNZ(tmp13, 0x00000060) 
U16b5: tmp13:= AND_DSZ32(tmp13, tmp15) 
U16b6: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp13, U5f95) 

U16b8: tmp1:= AND_DSZ32(0x00000003, tmp9) 
U16b9: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp3) 
U16ba: tmp2:= CMOVCC_DSZ32_CONDNB(tmp2, tmp1) 

U16bc: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U5f95, tmp1) !m2 
U16bd: LFNCEMARK-> WRSEGFLD(tmp7, SS_USERM, BASE) 
U16be: tmp4:= ADD_DSZ64(0x00000120, tmp12) SEQW SAVEUIP1 U16c0SEQW GOTO U5725

U16c0: tmp9:= OR_DSZ64(tmp11, tmp9) 
U16c1: WRSEGFLD(tmp9) !m2 
U16c2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 

U16c4: WRSEGFLD(tmp7, DS, BASE) 
U16c5: tmp4:= ADD_DSZ64(0x00000108, tmp12) SEQW SAVEUIP1 U16c6SEQW GOTO U5725
U16c6: tmp9:= OR_DSZ64(tmp11, tmp9) 

U16c8: WRSEGFLD(tmp9) !m2 
U16c9: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 
U16ca: WRSEGFLD(tmp7, ES, BASE) 

U16cc: tmp4:= ADD_DSZ64(0x00000128, tmp12) SEQW SAVEUIP1 U16cdSEQW GOTO U5725
U16cd: tmp9:= OR_DSZ64(tmp11, tmp9) 
U16ce: WRSEGFLD(tmp9) !m2 

U16d0: unk_25c( , tmp7) 
U16d1: WRSEGFLD(tmp7, FS, BASE) 
U16d2: tmp4:= ADD_DSZ64(0x00000130, tmp12) SEQW SAVEUIP1 U16d4SEQW GOTO U5725

U16d4: tmp9:= OR_DSZ64(tmp11, tmp9) 
U16d5: WRSEGFLD(tmp9) !m2 
U16d6: unk_25c( , tmp7) 

U16d8: WRSEGFLD(tmp7, GS, BASE) 
U16d9: unk_13f(tmp0) !m2 
U16da: MOVETOCREG_DSZ64(tmp0, 0x7fe) 

U16dc: tmp1:= NOTAND_DSZ32(0x60000000, tmp10) 
U16dd: tmp7:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U16de: tmp7:= AND_DSZ32(0x60000000, tmp7) 

U16e0: MOVETOCREG_OR_DSZ64(tmp1, 0x7f6, tmp7) !m2 
U16e1: tmp1:= READURAM( , 0x0046, 64) 
U16e2: tmp15:= ADD_DSZ64(0x00000001, tmp1) 

U16e4: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U16e5) SEQW GOTO U16f8
U16e5: tmp2:= READURAM( , 0x0057, 64) 
U16e6: CMPUJZ_DIRECT_NOTTAKEN(tmp2, U33b8, tmp1) !m1,m2 

U16e8: tmp15:= READURAM( , 0x0010, 64) 
U16e9: tmp15:= AND_DSZ64(tmp15, tmp1) 
U16ea: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U33b8) 

U16ec: LFNCEWAIT-> tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp1) 
U16ed: tmp15:= BTR_DSZ32(tmp15, 0x0000001f) 
U16ee: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000011, U33b8) !m1,m2 

U16f0: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U16f8
U16f1: tmp8:= READURAM( , 0x0043, 64) 
U16f2: tmp8:= SHR_DSZ64(tmp8, 0x00000020) 

U16f4: tmp8:= AND_DSZ64(0x00004000, tmp8) 
U16f5: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00004000) 
U16f6: CMPUJNZ_DIRECT_NOTTAKEN(tmp8, U33b8, tmp15) !m1,m2 

U16f8: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001cc, tmp12) 
U16f9: tmp15:= SHR_DSZ32(tmp8, 0x00000005) 
U16fa: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 

U16fc: tmp3:= AND_DSZ32(0x00000003, tmp8) 
U16fd: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000003, U5f95) !m0,m2 
U16fe: tmp15:= AND_DSZ32(0x00000012, tmp8) 

U1700: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000012, U5f95) !m0,m2 
U1701: tmp15:= SELECTCC_DSZ32_CONDNP(tmp10, tmp8) 
U1702: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000004, U5f95) !m2 

U1704: tmp10:= READURAM( , 0x004f, 64) 
U1705: mm5:= unk_72f(tmm2) 
U1706: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U5d21

U1708: tmp15:= SELECTCC_DSZ32_CONDNB(tmp12, 0x00000004) 
U1709: tmp15:= XOR_DSZ32(tmp15, tmp8) 
U170a: tmp15:= SELECTCC_DSZ32_CONDZ(tmp12, tmp15) 

U170c: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000002, U5f95) !m0,m2 
U170d: WRITEURAM(tmp1, 0x0056, 64) 
U170e: tmm3:= unk_72f(tmm1) 

U1710: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U40cc
U1711: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002d0, tmp12) 
U1712: NOP 

U1714: TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U1716
U1715: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b0, tmp12) 
U1716: tmp15:= NOTAND_DSZ64(0x0000500f, tmp7) 

U1718: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 
U1719: tmp13:= SELECTCC_DSZ32_CONDB(tmp0, tmp0) 
U171a: tmp15:= SHR_DSZ32(tmp7, 0x00000006) 

U171c: tmp13:= XOR_DSZ32(tmp13, tmp15) 
U171d: tmp15:= CMOVCC_DSZ32_CONDZ(tmp3, 0x00000100) 
U171e: tmp15:= AND_DSZ32(tmp15, tmp13) 

U1720: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 
U1721: tmp15:= SHR_DSZ32(tmp0, 0x00000009) 
U1722: tmp15:= NOTAND_DSZ32(tmp15, tmp8) 

U1724: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U5f95) !m2 
U1725: tmp15:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002d8, tmp12) 
U1726: unk_25c( , tmp15) 

U1728: WRITEURAM(tmp15, 0x0075, 64) 
U1729: tmp15:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002e0, tmp12) 
U172a: unk_25c( , tmp15) 

U172c: WRITEURAM(tmp15, 0x0076, 64) 
U172d: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000019c, tmp12) 
U172e: WRITEURAM(tmp15, 0x0074, 32) 

U1730: tmp15:= SELECTCC_DSZ32_CONDNS(tmp12, 0x00000004) 
U1731: tmp8:= NOTAND_DSZ32(tmp15, tmp8) 
U1732: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000268, tmp12) 

U1734: LFNCEWAIT-> tmp15:= unk_205( , 0xffffffffffffffff) 
U1735: tmp13:= SHR_DSZ64(tmp3, 0x00000020) 
U1736: tmp15:= AND_DSZ32(tmp13, tmp15) 

U1738: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 
U1739: tmp15:= SAR_DSZ64(tmp3, 0x00000001) 
U173a: unk_25c( , tmp15) 

U173c: LFNCEWAIT-> tmp15:= RDSEGFLD(UNK_SEG_09, LIMIT) 
U173d: MOVETOCREG_DSZ64(tmp15, 0x410) 
U173e: tmp15:= ADD_DSZ32(0x00000001, tmp15) 

U1740: MOVETOCREG_DSZ64(tmp15, 0x700) 
U1741: LFNCEWAIT-> tmp15:= RDSEGFLD(SS_USERM, FLGS) 
U1742: MOVETOCREG_DSZ64(tmp15, 0x73c) 

U1744: TESTUSTATE( , VMX, 0x0040) !m2 ? SEQW GOTO U4ec4
U1745: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000360, tmp12) 
U1746: tmp0:= READURAM( , 0x0087, 64) 

U1748: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U1749: tmp15:= IMUL64L_DSZ64(tmp15, tmp0) 
U174a: tmp15:= SHR_DSZ64(tmp15, 0x00000010) 

U174c: tmp15:= OR_DSZ32(0x00000000, tmp15) 
U174d: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00000001) 
U174e: tmp1:= ADD_DSZ32(0x0000229e, tmp1) 

U1750: tmp1:= MOVETOCREG_DSZ64(0x00000004, tmp1) !m1 
U1751: MOVETOCREG_DSZ64(tmp15, 0x2f7, 32) !m1,m2 
U1752: tmp10:= NOTAND_DSZ64(0x00000004, tmp10) 

U1754: tmp2:= ZEROEXT_DSZ32(0x00000001) 
U1755: MOVETOCREG_DSZ64(tmp2, 0x2f8, 32) !m1,m2 SEQW GOTO U4ec6
U1756: LFNCEMARK-> tmp9:= MOVEFROMCREG_DSZ64( , 0x7c6) 

U1758: tmp9:= AND_DSZ32(0x00000003, tmp9) 
U1759: ROVR<- tmp10:= OR_DSZ64(tmp9, tmp10) SEQW SAVEUIP1 U175aSEQW GOTO U3a26
U175a: WRITEURAM(tmp10, 0x0080, 64) !m2 

U175c: tmp9:= MOVEFROMCREG_DSZ64( , 0x51c) 
U175d: MOVETOCREG_BTR_DSZ64(tmp9, 0x0000003f, 0x51c) !m0,m2 
U175e: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f6) 

U1760: tmp11:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U1761: tmp14:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U1762: tmp12:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 

U1764: tmp1:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1765: tmp1:= READAFLAGS( , tmp1) !m2 
U1766: LFNCEMARK-> tmp9:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

U1768: tmp6:= MOVEFROMCREG_DSZ64( , 0x067) 
U1769: tmp6:= SUB_DSZN(tmp9, tmp6) !m1 
U176a: SIGEVENT( , 0x0000000b) 

U176c: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x7c5) 
U176d: MOVETOCREG_DSZ64( , 0x00000000, 0x7ff) 
U176e: tmp9:= NOTAND_DSZ32(0x8000000d, tmp0) 

U1770: MOVETOCREG_DSZ64(tmp9, 0x7f6) 
U1771: MOVETOCREG_DSZ64( , 0x00000000, 0x7fe) 
U1772: unk_13f() !m2 SEQW SAVEUIP0 U1774SEQW GOTO U5e62

U1774: MOVETOCREG_DSZ64( , 0x00000000, 0x7f8) 
U1775: tmp2:= AND_DSZ32(0x00005800, tmp12) 
U1776: LFNCEMARK-> MOVETOCREG_DSZ64(tmp2, 0x7f9, 32) !m1 

U1778: tmp2:= ZEROEXT_DSZ32(0x0000fc00) 
U1779: tmp9:= READURAM( , 0x0071, 64) 
U177a: tmp10:= READURAM( , 0x0034, 64) 

U177c: tmp4:= ZEROEXT_DSZ32(tmp9) 
U177d: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1780
U177e: tmp4:= ZEROEXT_DSZ32(tmp10) 

U1780: tmp2:= ADD_DSZ64(tmp2, tmp4) 
U1781: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002ec, tmp10) 
U1782: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002f8, tmp9) 

U1784: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002e4, tmp4) 
U1785: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003c8, tmp14) 
U1786: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002e8, tmp12) 

U1788: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003e0, tmp11) 
U1789: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003f8, tmp0) 
U178a: tmp9:= MOVEFROMCREG_DSZ64( , 0x529) 

U178c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003f0, tmp9) 
U178d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000248, tmp9) 
U178e: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003e8, tmp1) 

U1790: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000250, tmp1) 
U1791: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003d8, tmp6) 
U1792: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000394, rdi) 

U1794: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000038c, rsi) 
U1795: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000384, rbp) 
U1796: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000037c, rsp) 

U1798: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000374, rbx) 
U1799: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000036c, rdx) 
U179a: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000364, rcx) 

U179c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000035c, rax) 
U179d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000354, r8) 
U179e: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000034c, r9) 

U17a0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000344, r10) 
U17a1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000033c, r11) 
U17a2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000334, r12) 

U17a4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000032c, r13) 
U17a5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000324, r14) 
U17a6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000031c, r15) 

U17a8: tmp9:= READURAM( , 0x003d, 64) 
U17a9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003d0, tmp9) 
U17aa: tmp9:= READURAM( , 0x0073, 64) 

U17ac: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000310, tmp9) 
U17ad: tmp9:= RDSEGFLD(GDT, BASE) 
U17ae: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000180, tmp9) 

U17b0: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x0000028c, tmp9) 
U17b1: tmp9:= SHR_DSZ64(tmp9, 0x00000020) 
U17b2: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001d0, tmp9) 

U17b4: tmp9:= RDSEGFLD(GDT, SEL+FLGS+LIM) 
U17b5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000188, tmp9) 
U17b6: tmp9:= RDSEGFLD(LDT, BASE) 

U17b8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000190, tmp9) 
U17b9: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x0000029c, tmp9) 
U17ba: tmp9:= SHR_DSZ64(tmp9, 0x00000020) 

U17bc: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001d4, tmp9) 
U17bd: tmp9:= RDSEGFLD(LDT, SEL+FLGS+LIM) 
U17be: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000198, tmp9) 

U17c0: tmp9:= RDSEGFLD(LDT, SEL) 
U17c1: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003c0, tmp9) 
U17c2: tmp9:= RDSEGFLD(IDT, BASE) 

U17c4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000160, tmp9) 
U17c5: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000294, tmp9) 
U17c6: tmp9:= SHR_DSZ64(tmp9, 0x00000020) 

U17c8: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001d8, tmp9) 
U17c9: tmp9:= RDSEGFLD(IDT, SEL+FLGS+LIM) 
U17ca: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000168, tmp9) 

U17cc: tmp9:= RDSEGFLD(ES, BASE) 
U17cd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001a0, tmp9) 
U17ce: tmp10:= RDSEGFLD(ES, SEL+FLGS+LIM) 

U17d0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001a8, tmp10) 
U17d1: tmp9:= RDSEGFLD(ES, SEL) 
U17d2: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003a8, tmp9) 

U17d4: tmp9:= RDSEGFLD(UNK_SEG_09, BASE) 
U17d5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001b0, tmp9) 
U17d6: tmp10:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 

FUN_ucode_00017d8:
U17d8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001b8, tmp10) 
U17d9: tmp9:= RDSEGFLD(UNK_SEG_09, SEL) 
U17da: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003ac, tmp9) 

U17dc: tmp9:= RDSEGFLD(SS_USERM, BASE) 
U17dd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001c0, tmp9) 
U17de: tmp10:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U17e0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001c8, tmp10) 
U17e1: tmp9:= RDSEGFLD(SS_USERM, SEL) 
U17e2: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003b0, tmp9) 

U17e4: tmp9:= RDSEGFLD(DS, BASE) 
U17e5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000130, tmp9) 
U17e6: tmp10:= RDSEGFLD(DS, SEL+FLGS+LIM) 

U17e8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000138, tmp10) 
U17e9: tmp9:= RDSEGFLD(DS, SEL) 
U17ea: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003b4, tmp9) 

uend:
U17ec: tmp9:= RDSEGFLD(FS, BASE) 
U17ed: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000140, tmp9) 
U17ee: tmp10:= RDSEGFLD(FS, SEL+FLGS+LIM) 

U17f0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000148, tmp10) 
U17f1: tmp9:= RDSEGFLD(FS, SEL) 
U17f2: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003b8, tmp9) 

U17f4: tmp9:= RDSEGFLD(GS, BASE) 
U17f5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000150, tmp9) 
FUN_ucode_00017f6:
U17f6: tmp10:= RDSEGFLD(GS, SEL+FLGS+LIM) 

U17f8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000158, tmp10) 
U17f9: tmp9:= RDSEGFLD(GS, SEL) 
U17fa: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003bc, tmp9) 

U17fc: tmp9:= RDSEGFLD(TSS, BASE) 
U17fd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000170, tmp9) 
U17fe: tmp10:= RDSEGFLD(TSS, SEL+FLGS+LIM) 

U1800: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000178, tmp10) 
U1801: tmp9:= RDSEGFLD(TSS, SEL) 
U1802: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003c4, tmp9) 

U1804: tmp9:= MOVEFROMCREG_DSZ64( , 0x51c) 
U1805: tmp9:= BTR_DSZ64(tmp9, 0x0000003f) 
U1806: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000002d8, tmp9) 

U1808: tmp10:= READURAM( , 0x0059, 64) 
U1809: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U180c
U180a: tmp10:= READURAM( , 0x0080, 64) 

U180c: tmp10:= AND_DSZ32(0x00000080, tmp10) 
U180d: tmp10:= SHR_DSZ32(tmp10, 0x00000006) 
U180e: tmp9:= SETCC_CONDB(tmp13) 

U1810: tmp9:= OR_DSZ8(tmp10, tmp9) 
U1811: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002e0, tmp9) 
U1812: tmp13:= NOTAND_DSZ32(0x00002000, tmp13) 

U1814: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000240, tmp13) 
U1815: tmp9:= READURAM( , 0x003e, 64) 
U1816: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000039c, tmp9) 

U1818: tmp10:= MOVEFROMCREG_DSZ64( , 0x004) 
U1819: tmp10:= AND_DSZ32(0x00000020, tmp10) 
U181a: tmp10:= SHR_DSZ32(tmp10, 0x00000005) 

U181c: tmp9:= READURAM( , 0x0039, 64) 
U181d: tmp9:= NOTAND_DSZ32(0x00000001, tmp9) 
U181e: tmp9:= OR_DSZ32(tmp10, tmp9) 

U1820: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003a4, tmp9) 
U1821: tmp9:= MOVEFROMCREG_DSZ64( , 0x7f1) 
U1822: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000308, tmp9) 

U1824: MOVETOCREG_DSZ64( , 0x00000000, 0x7f1) !m2 
U1825: tmp11:= ADD_DSZ64(tmp2, 0x00000208) 
U1826: tmp9:= ZEROEXT_DSZ32(0x00000004) 

U1828: tmp9:= SUB_DSZ32(0x00000001, tmp9) 
U1829: tmp10:= ADD_DSZ64(tmp9, 0x00000540) 
U182a: tmp10:= MOVEFROMCREG_DSZ64( , tmp10) 

U182c: unk_f6d(tmp11, tmp9, tmp10) 
U182d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U182e) SEQW GOTO U1828
U182e: tmp9:= MOVEFROMCREG_DSZ64( , 0x01c) 

U1830: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000238, tmp9) 
U1831: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 
U1832: tmp9:= TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U183e

U1834: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1839
U1835: tmp9:= MOVEFROMCREG_DSZ64( , 0x088) 
U1836: tmp9:= AND_DSZ32(0x00000100, tmp9) 

U1838: MOVETOCREG_SHR_DSZ64(tmp9, 0x00000002, 0x0b4) !m0,m2 
U1839: tmp9:= MOVEFROMCREG_DSZ64( , 0x067) 
U183a: AETTRACE( , tmp9, 0x0c) SEQW SAVEUIP0 U183cSEQW GOTO U29a0

U183c: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x0b5) !m0,m2 
U183d: tmp9:= BTS_DSZ64(0x00000000, 0x00000000) 
U183e: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp2, 0x0000023c, tmp9) 

U1840: tmp9:= READURAM( , 0x0035, 64) 
U1841: tmp9:= BT_DSZ64(tmp9, 0x0000003c) 
U1842: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp9, U1844) SEQW GOTO U1850

U1844: LFNCEMARK-> tmp9:= RDSEGFLD(UNK_SEG_10, BASE) 
U1845: tmp10:= MOVEFROMCREG_DSZ64( , 0x701) 
U1846: tmp10:= SHR_DSZ32(tmp10, 0x0000001e) 

U1848: tmp9:= OR_DSZ64(tmp10, tmp9) 
U1849: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000002d0, tmp9) 
U184a: LFNCEWAIT-> WRSEGFLD(0x00000000) 

U184c: tmp10:= MOVEFROMCREG_DSZ64( , 0x701) 
U184d: tmp10:= NOTAND_DSZ64(0xc0000000, tmp10) 
U184e: MOVETOCREG_DSZ64(tmp10, 0x701) !m2 

U1850: tmp9:= READURAM( , 0x006e, 64) 
U1851: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001e8, tmp9) 
U1852: tmp9:= READURAM( , 0x0024, 64) 

U1854: tmp9:= SHR_DSZ64(tmp9, 0x00000020) 
U1855: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001dc, tmp9) 
FUN_ucode_0001856:
U1856: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001f8, tmp5) 

U1858: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001f0, tmp7) 
U1859: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001e0, tmp3) 
U185a: LFNCEWAIT-> tmp10:= SHR_DSZ64(tmp8, 0x00000010) 

U185c: tmp9:= SUB_DSZ16(0x00000088, tmp10) 
U185d: tmp9:= SELECTCC_DSZ32_CONDNZ(tmp9, 0x00000001) 
U185e: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x00000302, tmp9) 

U1860: tmp10:= SUB_DSZ16(0x0000008a, tmp10) 
rdrand_impl:
U1861: tmp10:= SELECTCC_DSZ32_CONDNZ(tmp10, 0x00000001) 
U1862: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000234, tmp10) 

U1864: LFNCEMARK-> tmp9:= MOVEFROMCREG_DSZ64( , 0x79e) 
U1865: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000230, tmp9) 
U1866: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x00000300, 0x00000000) 

U1868: tmp9:= ZEROEXT_DSZ32(0x00030101) 
U1869: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002fc, tmp9) 
U186a: tmp11:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 

U186c: tmp10:= READURAM( , 0x005c, 64) 
U186d: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U70c6
U186e: tmp9:= PORTIN_DSZ32_ASZ16_SC1(0x50d4) !m2 

U1870: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000002, U1871) !m0,m2 SEQW GOTO U1879
U1871: tmp6:= MOVEFROMCREG_DSZ64( , 0x573) 
U1872: tmp6:= AND_DSZ32(tmp6, 0x00000800) 

U1874: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U1875) SEQW GOTO U1879
U1875: SYNCMARK-> tmp9:= MOVEFROMCREG_DSZ64( , 0x105) 
U1876: tmp9:= OR_DSZ32(0x00004000, tmp9) 

U1878: SYNCWAIT-> MOVETOCREG_DSZ64(tmp9, 0x105) 
U1879: tmp10:= OR_DSZ32(0x00000010, tmp10) 
U187a: WRITEURAM(tmp10, 0x005c, 32) !m2 

U187c: tmp9:= READURAM( , 0x0036, 64) 
U187d: tmp9:= ADD_DSZ32(0x00000001, tmp9) 
U187e: WRITEURAM(tmp9, 0x0036, 32) !m2 

U1880: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp12, 0x0000000e, U70d5) !m0,m1,m2 SEQW GOTO U70d4
U1881: tmp1:= AND_DSZ32(0x007f0000, tmp5) 
U1882: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x482c) !m2 

U1884: tmp2:= AND_DSZ32(0x007f0000, tmp2) 
U1885: tmp2:= SUB_DSZ32(tmp1, tmp2) 
U1886: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00000100) 

U1888: tmp5:= OR_DSZ32(tmp2, tmp5) 
U1889: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x00000001) SEQW GOTO U3056
U188a: tmp10:= ZEROEXT_DSZ32(0x00003380) 

U188c: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000038, tmp12) 
U188d: tmp3:= unk_04d(tmp13) SEQW GOTO U5a05
U188e: WRITEURAM(tmp5, 0x0009, 64) !m2 

U1890: tmp13:= ZEROEXT_DSZ64(tmp3) SEQW GOTO U54f8
U1891: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1892: tmp10:= READAFLAGS( , tmp10) !m2 

FUN_ucode_0001894:
U1894: tmp13:= TESTUSTATE(tmp3, SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW URET0
U1895: tmp3:= READURAM( , 0x0014, 64) 
U1896: tmp3:= BTR_DSZ32(tmp3, 0x0000000e) 

U1898: tmp3:= BT_DSZ32(tmp3, tmp2) 
U1899: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp3, U6a39) SEQW URET0
U189a: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U5efc

U189c: LFNCEWAIT-> rax:= TESTUSTATE(tmp5, UCODE, 0x3000) ? SEQW GOTO U0906
U189d: tmp2:= ZEROEXT_DSZ32(0x00000523) 
U189e: rdx:= SHR_DSZ64(tmp5, 0x00000020) 

U18a0: tmp1:= READURAM( , 0x0012, 64) 
U18a1: SYNCMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U3210) !m0,m1,m2 
U18a2: NOP 

U18a4: SYNCWAIT-> SAVEUIP_REGOVR( , 0x01, U18a5, 0x4329) !m0 SEQW GOTO U6d0c
U18a5: NOP 
U18a6: NOP 

U18a8: tmpv0:= ZEROEXT_DSZ32(rcx, rcx) SEQW SAVEUIP0 U18a9SEQW GOTO U334d
U18a9: SAVEUIP( , 0x00, U3a34) 
U18aa: SAVEUIP( , 0x01, U3210) !m0 

U18ac: SYNCMARK-> tmpv0:= CONCAT_DSZ32(rdx, rax) SEQW GOTO U334d
U18ad: tmp14:= READUIP_REGOVR(0x01) !m0 
U18ae: tmpv0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp9) 

U18b0: tmpv1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U18b1: tmpv1:= BT_DSZ64(tmpv1, 0x0000000d) 
U18b2: tmpv1:= SELECTCC_DSZ64_CONDB(tmpv1, tmpv0) 

U18b4: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000018, U4b1c) 
U18b5: tmpv0:= ZEROEXT_DSZ32() SEQW GOTO U66ea
U18b6: tmp7:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 

U18b8: tmp7:= NOTAND_DSZ32(0x00000200, tmp7) 
U18b9: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp7, 0x00000008, 0x38f) !m1 
U18ba: tmp7:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 

U18bc: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp7, 0x00000009, U304e) !m1,m2 SEQW GOTO U18ba
U18bd: tmp6:= AND_DSZ32() 
U18be: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000f, U517a) !m0,m2 

U18c0: tmp7:= PINTMOVDTMM2I_DSZ64(tmm0) 
U18c1: tmp11:= BT_DSZ16(tmp9, 0x0000000d) 
U18c2: tmp3:= MOVEMERGEFLGS_DSZ64(tmp3, tmp11) 

U18c4: tmp7:= CMOVCC_DSZ64_CONDNB(tmp3, tmp7) 
U18c5: tmm0:= unk_744(mm7) SEQW GOTO U517a
U18c6: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 

U18c8: tmp3:= AND_DSZ16(0x00000010, tmp2) 
U18c9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U18ca) SEQW GOTO U6495
U18ca: LFNCEMARK-> tmm6:= unk_743() !m2 

U18cc: tmp12:= OR_DSZ16(0x00000010, tmp12) SEQW GOTO U1a50
U18cd: tmp3:= MOVEFROMCREG_DSZ64( , 0x01b) 
U18ce: SYNCFULL-> MOVETOCREG_DSZ64(tmp3, 0x752) 

FUN_ucode_00018d0:
U18d0: SAVEUIP( , 0x00, U192c) 
U18d1: tmp2:= RDSEGFLD(SS_KERNM, UNK_FLD_0c) 
U18d2: tmp0:= ZEROEXT_DSZ16N(tmp0) !m1 

U18d4: tmp3:= ADD_DSZN(tmp0, tmp2) !m1 
U18d5: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp3, 0x00e) !m2 SEQW URET0
U18d6: TESTUSTATE( , SYS, UST_VMX_DIS | UST_VMX_OP_DIS) !m1 ? SEQW GOTO U2769

U18d8: SAVEUIP_REGOVR(0x01, U18d9, 0x0064) !m0 SEQW GOTO U1c7a
U18d9: tmp4:= ZEROEXT_DSZ32(0x00000000) 
U18da: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U18dc: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U18dd: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000008, U2e91) !m1 
U18de: LFNCEMARK-> tmp5:= READURAM( , 0x0070, 64) 

U18e0: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp7, tmp4) 
U18e1: tmp5:= NOTAND_DSZ32(0x00001200, tmp5) 
U18e2: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp0, 0x00000008, 0x6c3) 

U18e4: WRITEURAM(tmp5, 0x0070, 32) 
U18e5: MOVETOCREG_DSZ64(tmp5, 0x2c4, 32) !m1 
U18e6: WRITEURAM( , 0x00000000, 0x0014, 64) 

U18e8: MOVETOCREG_DSZ64( , 0x00000000, 0x6c0) 
U18e9: WRITEURAM( , 0x00000000, 0x001f, 32) 
U18ea: SYNCFULL-> unk_eff() SEQW GOTO U0794

U18ec: tmpv0:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U18ed: tmpv2:= BT_DSZ64(tmpv0, 0x0000000d) 
U18ee: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmpv2, U18f2) 

U18f0: tmpv0:= MOVEFROMCREG_DSZ64( , 0x067) 
U18f1: AETTRACE( , tmpv0, 0x0c) 
U18f2: tmpv0:= ZEROEXT_DSZ32(0x00002302) 

U18f4: tmpv1:= ZEROEXT_DSZ32(0x00000021) 
U18f5: tmpv1:= MOVEMERGEFLGS_DSZ64(tmpv1, tmpv2) 
U18f6: tmpv1:= CMOVCC_DSZ32_CONDNB(tmpv1, 0x00000025) SEQW SAVEUIP1 U18f8SEQW GOTO U66f9

U18f8: MSLOOP-> unk_256() !m1 SEQW GOTO U2792
U18f9: tmm6:= unk_624(tmm2, tmm2) 
U18fa: tmp4:= PINTMOVDTMM2I_DSZ32(tmm6) 

U18fc: tmp5:= AND_DSZ8(0x00000010, tmp4) 
U18fd: tmp9:= unk_6a0() 
U18fe: tmp5:= CMOVCC_DSZ16_CONDZ(tmp5, 0x00000001) 

U1900: tmm1:= unk_743(mm5, tmm1) 
U1901: tmm0:= unk_483(tmm1) SEQW GOTO U4378
U1902: tmp13:= AND_DSZ32(0x00000080, tmp6) 

U1904: tmp13:= SHL_DSZ64(tmp13, 0x00000028) 
U1905: LFNCEWAIT-> tmp2:= READURAM( , 0x001f, 64) !m2 
U1906: tmp2:= OR_DSZ64(tmp13, tmp2) 

U1908: LFNCEMARK-> WRITEURAM(tmp2, 0x011f, 64) !m2 SEQW GOTO U2e04
U1909: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U03b4) 
U190a: tmm6:= unk_624(tmm2, tmm2) 

U190c: tmp4:= PINTMOVDTMM2I_DSZ32(tmm6) 
U190d: tmp5:= AND_DSZ8(0x00000004, tmp4) 
U190e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U39bc) 

U1910: tmp3:= AND_DSZ8(0x00000010, tmp4) 
U1911: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U03b4) SEQW GOTO U2fb8
U1912: tmp2:= READURAM( , 0x0004, 64) 

U1914: tmp0:= READURAM( , 0x0005, 64) 
U1915: BTUJB_DIRECT_NOTTAKEN(tmp2, U1916, tmp0) !m2 SEQW GOTO U1bd0
U1916: tmp0:= CONCAT_DSZ16(0x0000005c) 

U1918: tmp1:= MOVE_DSZ64(tmp5) SEQW GOTO U2715
U1919: tmp0:= MOVEFROMCREG_DSZ64( , 0x3df, 32) !m1 
rsa_call_decypt:
U191a: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000005, 0x3df) !m1 

U191c: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U5c55
U191d: LFNCEWAIT-> tmp0:= MOVETOCREG_DSZ64( , 0x00000000, 0x382, 32) !m1 
U191e: MOVETOCREG_DSZ64(tmp0, 0x381, 32) !m1 

U1920: tmp0:= MOVETOCREG_DSZ64( , 0x00000000, 0x386, 32) !m1 
U1921: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000035, 0x385) !m1 SEQW GOTO U5c58
U1922: tmp0:= ZEROEXT_DSZ32(0x00000120) 

U1924: WRITEURAM(tmp0, 0x0035, 64) 
U1925: tmp1:= ZEROEXT_DSZ32(0x00004800) 
U1926: tmp1:= CONCAT_DSZ16(0x0000c060, tmp1) 

U1928: tmp0:= CONCAT_DSZ16(0x00007200) 
U1929: tmp1:= CONCAT_DSZ32(tmp1, tmp0) 
U192a: WRITEURAM(tmp1, 0x0077, 64) SEQW GOTO U4e5c

U192c: tmp2:= SHR_DSZ32(tmp5, 0x00000009) 
U192d: tmp2:= AND_DSZ32(0x00001800, tmp2) 
U192e: tmp7:= SELECTCC_DSZ32_CONDNZ(tmp2, tmp7) 

U1930: tmp7:= OR_DSZ32(tmp2, tmp7) 
U1931: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U4a70) 
U1932: BTUJB_DIRECT_NOTTAKEN(tmp7, 0x00000010, U1934) !m2 SEQW GOTO U4a70

U1934: LFNCEWAIT-> mm3:= unk_72f(tmm0, tmm0) 
U1935: NOP 
U1936: NOP 

U1938: LFNCEMARK-> MOVETOCREG_DSZ64(tmp3, 0x486) SEQW GOTO U1a55
U1939: tmp3:= READURAM( , 0x0053, 64) 
U193a: WRITEURAM( , 0x00000000, 0x0007, 32) 

U193c: tmp3:= AND_DSZ32(0x00008000, tmp3) 
U193d: tmp3:= SHR_DSZ32(tmp3, 0x0000000f) 
U193e: tmp14:= READURAM( , 0x0047, 64) 

U1940: tmp14:= MOVEMERGEFLGS_DSZ32(tmp14, tmp3) 
U1941: tmp14:= CMOVCC_DSZ32_CONDZ(tmp14, 0x0000194e) SEQW GOTO U4ec1
U1942: tmp11:= READURAM( , 0x0020, 64) 

U1944: tmp6:= ZEROEXT_DSZ32(0x000000e0) 
U1945: tmp7:= ZEROEXT_DSZ32(0x000000a0) SEQW SAVEUIP1 U1946SEQW GOTO U593d
U1946: tmp12:= SHL_DSZ32(tmp11, 0x00000001) 

U1948: tmp12:= ADD_DSZ32(tmp12, 0x00000934) 
U1949: tmp13:= ZEROEXT_DSZ32(0x00000001) 
U194a: tmp10:= STC(0x00004759) SEQW GOTO U609a

U194c: tmp3:= READURAM( , 0x005c, 64) 
U194d: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000007, U4eaa) !m0 
U194e: MOVETOCREG_OR_DSZ64( , 0x00000018, 0x29d) !m1 

U1950: tmp0:= READURAM( , 0x0053, 64) 
U1951: tmp0:= OR_DSZ64(0x00000008, tmp0) 
U1952: WRITEURAM(tmp0, 0x0053, 32) 

U1954: tmp0:= BT_DSZ64(tmp0, 0x00000002) 
U1955: tmp0:= MOVEMERGEFLGS_DSZ32(0x0000000e, tmp0) 
FUN_ucode_0001956:
U1956: tmp0:= CMOVCC_DSZ32_CONDB(tmp0, 0x00000000) SEQW SAVEUIP0 U1958SEQW GOTO U5971

U1958: tmp15:= ZEROEXT_DSZ32(0x000000ed) SEQW GOTO U6279
U1959: LFNCEWAIT-> unk_e6b(tmp0, tmp2) 
U195a: tmp1:= SHR_DSZ64(tmp0, 0x00000028) 

U195c: LEA_DSZ8_ASZ32_SC1(tmp3) 
U195d: MOVETOCREG_DSZ64(tmp1, 0x73c) !m2 
U195e: tmp11:= RDSEGFLD(SS, FLGS) 

U1960: tmp11:= XOR_DSZ32(tmp11, tmp1) 
U1961: tmp11:= AND_DSZ32(0x00004000, tmp11) SEQW GOTO U3bd0
U1962: tmp14:= READUIP_REGOVR(0x01) !m0 

U1964: LFNCEWTMRK-> tmp12:= LDZX_DSZ64_ASZ32_SC1(tmp5, mode=0x18) 
U1965: tmpv0:= READURAM( , 0x0057, 64) 
U1966: tmpv1:= READURAM( , 0x0010, 64) 

U1968: tmpv1:= AND_DSZ64(tmp12, tmpv1) 
U1969: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv1, U2e91) 
U196a: tmp13:= ADD_DSZ32(0x00000001, tmp13) 

U196c: LFNCEWTMRK-> CMPUJZ_DIRECT_NOTTAKEN(tmpv0, U2e91, tmp12) !m1 SEQW URET1
U196d: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U2a89
U196e: tmp3:= ZEROEXT_DSZ32(0x0000048d) 

U1970: tmp1:= READURAM( , 0x0012, 64) 
U1971: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U2a89) !m1 
U1972: SAVEUIP_REGOVR( , 0x01, U1974, 0x4031) !m0 SEQW GOTO U6d0c

U1974: SAVEUIP( , 0x01, U2a89) !m0 
U1975: tmpv0:= SAVEUIP(tmp2, 0x00, U3a34) SEQW GOTO U334d
U1976: tmp0:= ZEROEXT_DSZ32(0x00002825) 

U1978: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U4f5d
patch_match_and_patch:
U1979: tmp1:= READURAM( , 0x001f, 64) 
U197a: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000024, U4f5d) 

U197c: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000023, U73ac) !m0,m1,m2 
U197d: tmp1:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U73ad
U197e: tmp2:= READURAM( , 0x0043, 64) 

U1980: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000001b, U4f5e) !m0 SEQW GOTO U73ad
U1981: tmp14:= AND_DSZ32(0x00000002, tmp14) 
U1982: tmp15:= BTS_DSZ64(0x00000000, 0x0000003f) 

U1984: tmp14:= SELECTCC_DSZ64_CONDZ(tmp14, tmp15) 
U1985: tmp15:= PORTIN_DSZ64_ASZ16_SC1(0x5220) !m2 
U1986: tmp15:= BTR_DSZ64(tmp15, 0x0000003f) 

U1988: tmp15:= OR_DSZ64(tmp14, tmp15) 
U1989: LFNCEMARK-> PORTOUT_DSZ64_ASZ16_SC1(0x5220,  , tmp15) !m2 SEQW URET1
U198a: TESTUSTATE( , SYS, UST_USER_MODE | UST_8086_MODE) !m1 ? SEQW GOTO U2769

U198c: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1996
U198d: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x0000002f, U1996) !m0,m2 
U198e: tmp1:= READURAM( , 0x0057, 64) 

U1990: SYNCMARK-> tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000003d0, tmp1) 
U1991: tmp15:= NOTAND_DSZ32(0x0000003f, rax) 
U1992: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x0000003f) 

U1994: tmp15:= OR_DSZ32(tmp15, rax) 
U1995: SYNCWAIT-> BTUJB_DIRECT_NOTTAKEN(tmp1, U4f5d, tmp15) 
U1996: tmp1:= READURAM( , 0x001f, 64) !m2 

U1998: tmp15:= SUB_DSZ32(0x00000002, rax) 
U1999: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00000400) 
U199a: tmp1:= OR_DSZ64(tmp15, tmp1) 

U199c: WRITEURAM(tmp1, 0x001f, 64) !m2 
U199d: TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW GOTO U73ac
U199e: tmp0:= ZEROEXT_DSZ32(0x00000023) 

U19a0: tmp7:= ZEROEXT_DSZ32(0x00000003) SEQW GOTO U4501
U19a1: tmp0:= READURAM( , 0x0053, 64) 
U19a2: tmp0:= OR_DSZ32(0x00000001, tmp0) 

U19a4: WRITEURAM(tmp0, 0x0053, 32) !m2 
U19a5: tmp0:= ZEROEXT_DSZ32(0x00000009) SEQW SAVEUIP0 U19a6SEQW GOTO U60e5
U19a6: LFNCEWAIT-> tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 

patch_handle_0x3_m_and_p:
U19a8: tmp4:= ADD_DSZN(0x00000004, tmp4) !m1 
U19a9: tmp4:= ADD_DSZN(tmp0, tmp4) !m1 SEQW GOTO U1f9a
U19aa: tmp10:= ZEROEXT_DSZ64(tmp7) 

U19ac: tmp5:= ZEROEXT_DSZ64(tmp7) 
U19ad: tmp7:= ADD_DSZ64(tmp8, tmp7) 
U19ae: tmp8:= SUB_DSZ64(tmp8) 

U19b0: tmp9:= SUB_DSZ32(0x00000001, tmp9) 
U19b1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U19b2) SEQW GOTO U6ad8
U19b2: tmp10:= ADD_DSZ64(0x00000104, tmp6) 

U19b4: SAVEUIP( , 0x00, U2d3a) SEQW GOTO U0f41
U19b5: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U19b6: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U19b8: tmp4:= NOTAND_DSZ16(0x00000600, tmp4) 
U19b9: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000001, 0x48c) 
U19ba: tmp6:= AND_DSZ32(0x00000001, tmp5) 

U19bc: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U57a6) 
U19bd: tmp0:= unk_6a0() SEQW GOTO U1bd0
U19be: SAVEUIP( , 0x00, U02f2) 

U19c0: SAVEUIP_REGOVR(0x01, U19c1, 0x0000) !m0 SEQW SAVEUIP1 U19c1SEQW GOTO U02ea
U19c1: tmp0:= RDSEGFLD(SS_USERM, FLGS) 
U19c2: MOVETOCREG_DSZ64(tmp0, 0x73c) 

FUN_ucode_00019c4:
U19c4: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000005, 0x79e) 
U19c5: ZEROEXT_DSZ32( , rsp) SEQW SAVEUIP1 U19c6SEQW GOTO U2e30
U19c6: SYNCFULL-> MOVETOCREG_DSZ64(tmp6, 0x067) 

U19c8: FETCHFROMEIP1_ASZ64( , tmp6) !m1 SEQW UEND0
U19c9: tmp1:= READURAM( , 0x0035, 64) 
U19ca: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U19ce

U19cc: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000037, U2769) !m0,m1 
U19cd: SAVEUIP_REGOVR(0x01, U19ce, 0x00c4) !m0 SEQW GOTO U1cf9
U19ce: tmp1:= PORTIN_DSZ64_ASZ16_SC1(tmp2) 

U19d0: tmp1:= OR_DSZ64(0x00000000, tmp1) 
U19d1: tmp2:= SELECTCC_DSZ64_CONDZ(tmp1, 0x00000001) 
U19d2: r64src:= ZEROEXT_DSZ32N(tmp1, r64src) !m1 

U19d4: MOVEINSERTFLGS_DSZ32(tmp2) !m2 SEQW UEND0
U19d5: SAVEUIP_REGOVR(0x01, U19d6, 0x000d) !m0 SEQW GOTO U0dec
patch_handle_0x6_crbus_write:
U19d6: SAVEUIP( , 0x01, U2784) !m0 

U19d8: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U33e5
U19d9: LFNCEWAIT-> tmp11:= RDSEGFLD(UNK_SEG_09, LIMIT) 
U19da: MOVETOCREG_DSZ64(tmp11, 0x410) 

U19dc: tmp11:= ADD_DSZ32(0x00000001, tmp11) 
U19dd: MOVETOCREG_DSZ64(tmp11, 0x700) 
U19de: tmp11:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

U19e0: LFNCEMARK-> MOVETOCREG_DSZ64(tmp11, 0x78e) SEQW URET1
U19e1: tmp5:= ZEROEXT_DSZ32(0x000019e4) 
U19e2: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4840

U19e4: LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(0x00002803) 
U19e5: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U19e9
U19e6: tmp15:= READURAM( , 0x004c, 64) 

U19e8: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000039, U73ac) !m1,m2 
U19e9: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4f5d
U19ea: tmp1:= READURAM( , 0x001f, 64) 

U19ec: tmp1:= NOTAND_DSZ32(0x00000007, tmp1) 
U19ed: WRITEURAM(tmp1, 0x001f, 32) !m2 
U19ee: SAVEUIP( , 0x01, U0d5d) !m0 SEQW GOTO U2d0d

U19f0: tmp1:= MOVE_DSZ64(rcx, rcx) 
U19f1: tmp0:= SHR_DSZ64(tmp0, 0x00000030) 
U19f2: tmp5:= TESTUSTATE(tmp0, UCODE, 0x0004) ? SEQW GOTO U19f6

U19f4: LFNCEMARK-> unk_25c(tmp1, tmp1) 
U19f5: tmp0:= ADD_DSZ16(0x00000010, tmp5) 
U19f6: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U19f8: tmp6:= NOTAND_DSZ32(0x00030000, r11) 
U19f9: unk_13f(tmp6) !m2 
U19fa: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00b) 

U19fc: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp6, 0x7fe) 
U19fd: tmp6:= SHL_DSZ32(tmp3, 0x00000005) SEQW GOTO U1e64
U19fe: tmpv1:= ZEROEXT_DSZ32(0x00000502) 

U1a00: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U1db2
U1a01: tmpv0:= READURAM( , 0x0012, 64) 
U1a02: tmpv0:= BT_DSZ32(tmpv0, 0x00000002) 

U1a04: tmp15:= READUIP_REGOVR(0x01) !m0 
U1a05: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmpv0, tmp15) SEQW SAVEUIP1 U1a06SEQW GOTO U6d0c
U1a06: tmpv0:= ZEROEXT_DSZ8(tmp2) 

U1a08: SAVEUIP( , 0x00, U03bc) SEQW GOTO U334d
U1a09: tmp1:= SHR_DSZ64(tmp0, 0x00000010) 
U1a0a: tmp0:= SHR_DSZ64(tmp0, 0x00000008) 

U1a0c: tmp1:= AND_DSZ32(0x0000ffff, tmp1) 
U1a0d: LFNCEWAIT-> MOVETOCREG_AND_DSZ64(tmp0, 0x0000001f, 0x6a0) !m0,m2 
U1a0e: tmp0:= READURAM( , 0x0021, 64) 

U1a10: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U252d) !m1 
U1a11: tmp0:= SHR_DSZ64(tmp0, 0x00000030) SEQW GOTO U2530
U1a12: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U1a14: MOVETOCREG_BTS_DSZ64(tmp0, 0x0000000b, 0x6c3) !m0,m2 
U1a15: SAVEUIP( , 0x00, U04dc) SEQW SAVEUIP1 U1a16SEQW GOTO U0151
U1a16: tmp15:= SUB_DSZ64(0x000001e0, tmp15) 

U1a18: WRMSLOOPCTRFBR( , 0x00000017) SEQW SAVEUIP1 U1a19SEQW GOTO U04e4
U1a19: tmp9:= UFLOWCTRL( , tmp13, URET0) 
U1a1a: UFLOWCTRL(tmp9, tmp14, URET1) 

U1a1c: SYNCFULL-> UJMP( , tmp5) 
U1a1d: tmp1:= AND_DSZ32(0x00000007, tmp11) 
U1a1e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U1a20) SEQW SAVEUIP1 U1a20SEQW GOTO U3130

U1a20: SAVEUIP( , 0x01, U0614) !m0 SEQW GOTO U6f21
U1a21: tmp3:= SUB_DSZ64(tmp4, tmp0) 
U1a22: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 

FUN_ucode_0001a24:
U1a24: GENARITHFLAGS(tmp0, tmp3) !m2 
U1a25: tmp7:= SHR_DSZ64(tmp4, 0x00000020) 
U1a26: tmp5:= CMOVCC_DSZ64_CONDZ(tmp1, tmp4) !m2 

U1a28: STAD_DSZ32_ASZ32_SC1(tmp2, mode=0x18,  , tmp5) !m1,m2 
U1a29: rax:= CMOVCC_DSZ64_CONDZ(rax, tmp6) !m2 
U1a2a: rdx:= CMOVCC_DSZ64_CONDZ(rdx, tmp7) !m2 SEQW UEND0

U1a2c: tmp3:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U1a2d: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U1a2e: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U3200

U1a30: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000b, U2711) !m0,m1 
U1a31: tmp1:= XOR_DSZ32(tmp5, tmp3) 
U1a32: tmp2:= SHR_DSZ32(tmp2, 0x00000017) 

U1a34: tmp1:= AND_DSZ32(tmp2, tmp1) 
U1a35: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U2711) !m1 
U1a36: tmp1:= AND_DSZ32(0x00000400, tmp3) 

U1a38: tmp5:= NOTAND_DSZ32(0x00000400, tmp5) 
U1a39: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp5, 0x7ff, tmp1) !m2 SEQW GOTO U6380
U1a3a: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x50c0) !m2 

U1a3c: tmp11:= SUB_DSZ32(0xffffffff, tmp11) 
U1a3d: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp11, U0e18) 
U1a3e: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x50c0) !m2 

U1a40: LFNCEWAIT-> tmp11:= SHL_DSZ64(tmp11, 0x00000008) 
U1a41: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp4, tmp5) 
U1a42: tmp5:= SHR_DSZ64(tmp5, 0x00000020) 

U1a44: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, 0x00000004, tmp4, tmp5) SEQW GOTO U0e18
U1a45: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x000) !m2 
U1a46: tmp0:= BTS_DSZ32(tmp0, 0x0000000c) 

U1a48: tmp0:= NOTAND_DSZ32(0x00000c00, tmp0) 
U1a49: WRITEURAM(tmp0, 0x0023, 32) !m2 
U1a4a: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 

U1a4c: tmp6:= OR_DSZ32(0x00000048) 
U1a4d: tmp2:= unk_203( , 0x00000001) 
U1a4e: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U2011) SEQW GOTO U2019

U1a50: tmm0:= unk_73a() 
U1a51: tmp1:= AND_DSZ16(0x00000020, tmp8) 
U1a52: tmp4:= OR_DSZ8(tmp1, tmp12) 

U1a54: tmp8:= OR_DSZ8(tmp4, tmp8) 
U1a55: LFNCEWAIT-> tmp7:= MOVEFROMCREG_DSZ64( , 0x486) 
U1a56: tmp5:= NOTAND_DSZ32(tmp7, tmp8) 

U1a58: tmp5:= AND_DSZ32(0x0000003f, tmp5) 
U1a59: tmp8:= NOTAND_DSZ16(0x00008080, tmp8) 
U1a5a: tmp10:= CMOVCC_DSZ16_CONDZ(tmp5, 0x00008080) 

U1a5c: tmp8:= OR_DSZ16(tmp8, tmp10) 
U1a5d: MOVETOCREG_DSZ64(tmp8, 0x48c) !m2 SEQW GOTO U21fe
U1a5e: LFNCEWTMRK-> tmp14:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U1a60: BTUJNB_DIRECT_NOTTAKEN(tmp14, 0x0000001f, U1a61) !m0,m2 SEQW GOTO U1a5e
U1a61: tmp4:= BTS_DSZ32(tmp4, 0x0000001f) 
U1a62: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp10) !m2 

U1a64: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp4) !m2 
U1a65: LFNCEWTMRK-> tmp14:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U1a66: BTUJNB_DIRECT_NOTTAKEN(tmp14, 0x0000001f, U1a68) !m0,m2 SEQW GOTO U1a65

U1a68: SYNCFULL-> UJMP( , tmp13) 
U1a69: SAVEUIP( , 0x00, U04dc) SEQW SAVEUIP1 U1a6aSEQW GOTO U0151
caseD_1a6a:
U1a6a: tmp15:= SHR_DSZ64(tmp13, 0x00000020) 

U1a6c: tmp15:= UFLOWCTRL( , tmp15, URET0) 
U1a6d: tmp14:= SHR_DSZ64(tmp14, 0x00000020) 
U1a6e: UFLOWCTRL(tmp15, tmp14, URET1) 

U1a70: tmp15:= ZEROEXT_DSZ64(tmp13) 
U1a71: tmp13:= SHR_DSZ64(tmp13, 0x00000020) 
U1a72: UJMP( , tmp15) 

U1a74: SAVEUIP_REGOVR(0x00, U1a75, 0x0000) SEQW GOTO U5c66
U1a75: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000a0) 
U1a76: LFNCEMARK-> tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000080) 

U1a78: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, 0x575) 
U1a79: tmp8:= NOTAND_DSZ64(0x00000007, tmp8) 
U1a7a: MOVETOCREG_DSZ64(tmp8, 0x574) SEQW SAVEUIP1 U1a7cSEQW GOTO U043c

U1a7c: LFNCEMARK-> NOP 
U1a7d: NOP 
U1a7e: NOP 

U1a80: LFNCEWAIT-> tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U1a81: tmp4:= ADD_DSZN(0x00000004, tmp4) !m1 
U1a82: tmp4:= ADD_DSZN(tmp0, tmp4) !m1 SEQW GOTO U1f9a

U1a84: tmp10:= ZEROEXT_DSZ16(tmp12) 
U1a85: SYNCWAIT-> SIGEVENT( , 0x0000000f) 
U1a86: tmp12:= WRMSLOOPCTRFBR(0x00000003) 

U1a88: tmp0:= unk_cf7(tmp11) 
U1a89: tmm3:= FMOV(0x00000011) !m0 
U1a8a: LFNCEMARK-> tmp0:= unk_cf7(tmp11) 

U1a8c: tmm3:= FMOV(0x00000011) !m0 
U1a8d: tmp11:= ADD_DSZN(tmp11, 0x00000020) !m1 
U1a8e: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U1a88

U1a90: SIGEVENT( , 0x00000003) 
U1a91: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp10, 0x48c) 
U1a92: tmp11:= SUB_DSZN(0x00000080, tmp11) !m1 SEQW URET1

U1a94: tmm4:= unk_624(tmm0, tmm0) 
U1a95: tmm5:= unk_624(tmm1, tmm1) 
U1a96: tmp0:= PINTMOVDTMM2I_DSZ32(tmm4) 

U1a98: tmp1:= PINTMOVDTMM2I_DSZ32(tmm5) 
U1a99: tmp0:= SHR_DSZ32(tmp0, 0x00000002) 
U1a9a: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 

U1a9c: tmp2:= OR_DSZ32(tmp1, tmp0) 
U1a9d: tmp2:= AND_DSZ32(0x0000000f, tmp2) 
U1a9e: tmm6:= unk_704(mm2) 

U1aa0: tmm6:= unk_620(tmm6) 
U1aa1: tmp2:= PINTMOVDTMM2I_DSZ32(tmm6) 
U1aa2: UJMP( , tmp2) 

U1aa4: tmp9:= ZEROEXT_DSZ32(0x00030300) 
U1aa5: MOVETOCREG_DSZ64(tmp9, 0x6a1) !m2 
U1aa6: LFNCEMARK-> tmp8:= MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) !m2 

U1aa8: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U574d
U1aa9: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 
U1aaa: tmp4:= ADD_DSZN(0x00000008, tmp4) !m1 

U1aac: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U1ab0
U1aad: STADSTGBUF_DSZ64_ASZ16_SC1(tmp3,  , tmp5) 
U1aae: tmp3:= ADD_DSZ32(0x00000020, tmp3) 

U1ab0: MOVETOCREG_DSZ64(tmp5, 0x6a4) !m2 
U1ab1: MOVETOCREG_SHR_DSZ64(tmp5, 0x0000001f, 0x6a4) !m0,m2 
U1ab2: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U1aa9

U1ab4: MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 SEQW GOTO U1f9a
U1ab5: tmp1:= SHR_DSZ32(tmp1, 0x0000000f) 
FUN_ucode_0001ab6:
U1ab6: tmp1:= AND_DSZ32(0x00000010, tmp1) 

U1ab8: tmp0:= OR_DSZ32(tmp1, tmp0) 
U1ab9: tmp1:= MOVEFROMCREG_DSZ64( , 0x79e) 
U1aba: tmp1:= NOTAND_DSZ32(tmp1, 0x00000003) 

U1abc: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x00000004) 
U1abd: tmp0:= OR_DSZ32(tmp1, tmp0) 
U1abe: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp0, 0x00000001, 0x510) !m2 SEQW GOTO U2730

U1ac0: tmp1:= ZEROEXT_DSZ32(IMM_MACRO_12) !m0 
U1ac1: tmp15:= SHL_DSZ32(tmp1, 0x00000011) 
U1ac2: tmp3:= SELECTCC_DSZ32_CONDNB(tmp15, 0x0000000f) 

U1ac4: tmp2:= SELECTCC_DSZ32_CONDNS(tmp15, 0x0000000f) 
U1ac5: tmp3:= OR_DSZ32(tmp2, tmp3) 
U1ac6: tmp2:= SELECTCC_DSZ32_CONDNS(tmp15, 0x00000002) 

U1ac8: tmp2:= ADD_DSZ32(0x00000038, tmp2) 
U1ac9: tmp2:= SELECTCC_DSZ32_CONDNB(tmp15, tmp2) 
U1aca: tmp15:= AND_DSZ32(tmp1, 0x000007ff) 

U1acc: tmp3:= CONCAT_DSZ8(tmp3, tmp2) 
U1acd: tmp3:= CONCAT_DSZ16(tmp15, tmp3) 
U1ace: tmp1:= CONCAT_DSZ32(tmp3, tmp1) 

U1ad0: tmp1:= ZEROEXT_DSZ16( , tmp1) SEQW URET1
U1ad1: tmp15:= SUB_DSZ32(0x00000492, tmp15) 
U1ad2: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U1ad4) SEQW GOTO U2041

U1ad4: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 
U1ad5: MOVETOCREG_DSZ64(tmp15, 0x752) 
U1ad6: unk_256() !m1 

U1ad8: tmp14:= MOVEFROMCREG_DSZ64( , 0x067) 
U1ad9: tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 
U1ada: tmp14:= SUB_DSZN(tmp15, tmp14) !m1 

U1adc: MOVETOCREG_DSZ64(tmp14, 0x71a) 
U1add: SYNCFULL-> MOVETOCREG_DSZ64(tmp15, 0x71c) !m2 
U1ade: tmp0:= unk_f3f(rsp) !m0,m1 SEQW UEND0

U1ae0: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U1ae1: tmp13:= NOTAND_DSZ64(0x01c00000, tmp6) 
U1ae2: LFNCEMARK-> MOVETOCREG_DSZ64(tmp13, 0x00c) !m2 

U1ae4: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U1af0
U1ae5: tmp14:= READUIP_REGOVR(0x01) !m0 
U1ae6: NOP 

U1ae8: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000016, U1ae9) !m0,m2 SEQW GOTO U1af0
U1ae9: NOP 
U1aea: NOP 

U1aec: tmp7:= unk_04d( , IMM_MACRO_30) !m0 SEQW GOTO U5eaa
U1aed: tmp14:= SHR_DSZ64(tmp14, 0x00000020) 
U1aee: SYNCFULL-> UFLOWCTRL( , tmp14, URET1) 

U1af0: NOP SEQW GOTO U3134
U1af1: tmp8:= ZEROEXT_DSZ32(0x00000401) 
U1af2: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000000, U39ca) !m1,m2 

U1af4: tmp8:= ZEROEXT_DSZ32(0x00000403) 
U1af5: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000001, U39ca) !m1,m2 
U1af6: tmp8:= ZEROEXT_DSZ32(0x00000703) 

U1af8: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000002, U39ca) !m0,m1,m2 
U1af9: tmp8:= ZEROEXT_DSZ32(0x00002389) 
U1afa: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000003, U39cc) !m0,m1,m2 SEQW GOTO U03e4

U1afc: SAVEUIP( , 0x00, U3cec) 
U1afd: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000012, U3385) !m0,m1,m2 
U1afe: LFNCEMARK-> tmp11:= AND_DSZ32(0x0000001f, tmp11) 

U1b00: LFNCEWAIT-> TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U0731
U1b01: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW URET0
U1b02: tmp3:= READURAM( , 0x0011, 64) 

U1b04: tmp13:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000e8, mode=0x01, tmp3) 
U1b05: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000f0, mode=0x01, tmp3) 
U1b06: SAVEUIP( , 0x00, U3ce5) 

U1b08: tmp13:= AND_DSZ32(tmp13, tmp11) 
U1b09: tmp3:= XOR_DSZ32(tmp3, tmp13) 
U1b0a: tmp13:= READURAM( , 0x0014, 64) 

U1b0c: tmp3:= SELECTCC_DSZ32_CONDZ(tmp3, 0x00000001) SEQW URET0
U1b0d: SAVEUIP_REGOVR(0x01, U1b0e, 0x0000) !m0 SEQW GOTO U00a1
U1b0e: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U1b14) !m2 

U1b10: tmp7:= MOVEFROMCREG_DSZ64( , tmp3) 
U1b11: tmp7:= AND_DSZ64(tmp5, tmp7) 
U1b12: tmp6:= OR_DSZ64(tmp6, tmp7) 

U1b14: MOVETOCREG_DSZ64(tmp6, tmp3) !m2 
U1b15: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U1b0d
U1b16: tmp1:= ZEROEXT_DSZ32(0x0000aec0) 

U1b18: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U1f9a
U1b19: tmp6:= MOVEFROMCREG_DSZ64( , 0x707) 
U1b1a: tmp7:= MOVEFROMCREG_DSZ64( , 0x706) 

U1b1c: tmp6:= CONCAT_DSZ32(tmp6, tmp7) 
U1b1d: STADSTGBUF_DSZ64_ASZ16_SC1(tmp1,  , tmp6) SEQW GOTO U1f9a
U1b1e: tmp1:= ZEROEXT_DSZ32(0x0000000f) 

U1b20: tmp3:= unk_222(tmp1) 
U1b21: tmp2:= ZEROEXT_DSZ32(0x0000000f) 
U1b22: tmp2:= unk_222(tmp2) 

U1b24: tmp0:= CONCAT_DSZ8(tmp2, tmp3) 
U1b25: tmp0:= CONCAT_DSZ16(tmp1, tmp0) 
U1b26: tmp2:= MOVEFROMCREG_DSZ64( , 0x7e0, 32) !m1 

U1b28: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U1b29: tmp2:= SHL_DSZ64(tmp2, 0x00000001) SEQW GOTO U7858
U1b2a: tmp14:= READUIP_REGOVR(0x01) !m0 

U1b2c: tmpv1:= MOVEFROMCREG_DSZ64( , 0x562) 
U1b2d: tmpv1:= NOTAND_DSZ64(0x00000fff, tmpv1) 
U1b2e: tmpv0:= LDPPHYS_DSZ32_ASZ64_SC1(tmpv1, mode=0x01) !m2 

U1b30: tmpv2:= ZEROEXT_DSZ32(0x00000001) 
U1b31: STADPPHYS_DSZ32_ASZ64_SC1(tmpv1, mode=0x01,  , tmpv2) !m2 
U1b32: SYNCFULL-> CMPUJNZ_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U1b2e) !m2 

U1b34: tmpv2:= READURAM( , 0x0053, 64) 
U1b35: unk_963(tmpv2, 0x00008253) SEQW URET1
U1b36: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1b3a

U1b38: tmp15:= READURAM( , 0x004c, 64) 
U1b39: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000003b, U73ad) !m0,m1,m2 
U1b3a: LFNCEMARK-> TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4f5e

U1b3c: SAVEUIP_REGOVR(0x01, U1b3d, 0x0003) !m0 SEQW GOTO U29e5
U1b3d: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U1b3e: tmp0:= AND_DSZ32(0x60000000, tmp0) 

U1b40: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x7f6) 
U1b41: tmp0:= ZEROEXT_DSZ32(0x00000093) 
U1b42: tmp0:= SHL_DSZ32(tmp0, 0x00000010) 

U1b44: tmp0:= CONCAT_DSZ32(0x0000ffff, tmp0) 
U1b45: LFNCEWTMRK-> WRSEGFLD(tmp0, UNK_SEG_09, SEL+FLGS+LIM) 
U1b46: tmp1:= SHR_DSZ32(tmp2, 0x00000004) 

U1b48: LFNCEWTMRK-> unk_e6b( , tmp1) 
U1b49: tmp0:= SUB_DSZ16(0x00000001) 
U1b4a: tmp1:= ADD_DSZ32(0x00000001, tmp0) 

U1b4c: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x7f5) 
U1b4d: MOVETOCREG_DSZ64(tmp0, 0x410) 
U1b4e: MOVETOCREG_DSZ64(tmp1, 0x700) 

U1b50: LFNCEMARK-> MOVETOCREG_DSZ64(tmp2, 0x78e) 
U1b51: NOP 
U1b52: NOP 

U1b54: LFNCEWAIT-> tmp2:= RDSEGFLD(UNK_SEG_09, BASE) 
U1b55: WRSEGFLD(tmp2, CS, BASE) 
U1b56: tmp1:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 

U1b58: WRSEGFLD(tmp1, CS, SEL+FLGS+LIM) SEQW GOTO U196d
U1b59: tmp0:= NOTAND_DSZ64(0x00000fff, tmp0) 
U1b5a: tmp7:= AND_DSZ64(tmp0, tmp6) 

U1b5c: tmp13:= MOVEFROMCREG_DSZ64( , 0x574) 
U1b5d: tmp13:= AND_DSZ64(tmp0, tmp13) 
U1b5e: CMPUJNZ_DIRECT_NOTTAKEN(tmp7, U1b62, tmp13) !m2 

U1b60: tmp6:= MOVEFROMCREG_DSZ64( , 0x51b) 
U1b61: MOVETOCREG_OR_DSZ64(tmp6, 0x00000003, 0x513) !m0,m2 
U1b62: tmp5:= SAVEUIP( , 0x00, U0c52) SEQW GOTO U5f64

U1b64: tmp12:= ZEROEXT_DSZ32() 
U1b65: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U1b66: tmp5:= ZEROEXT_DSZ32(0x00001b69) 

U1b68: tmp3:= TESTUSTATE(tmp8, SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4840
U1b69: tmp8:= ZEROEXT_DSZ64(tmp3) 
U1b6a: SYNCFULL-> MOVETOCREG_DSZ64(tmp12, 0x6c5) 

U1b6c: tmp9:= READURAM( , 0x001f, 64) 
U1b6d: tmp9:= AND_DSZ32(0x00000100, tmp9) 
U1b6e: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U125c

U1b70: SAVEUIP_REGOVR(0x01, U1b71, 0x0000) !m0 SEQW GOTO U29e5
U1b71: NOP 
U1b72: NOP 

U1b74: NOP SEQW GOTO U3b7c
U1b75: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000003, 0x29d) !m0,m1 
U1b76: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 

U1b78: SAVEUIP_REGOVR(0x01, U1b79, 0x0210) !m0 SEQW GOTO U28f1
U1b79: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000001) 
U1b7a: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000006, 0x6c5) !m0,m2 

U1b7c: tmp13:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x0000001c, mode=0x01) 
U1b7d: tmp14:= ZEROEXT_DSZ32(0x00001136) 
U1b7e: SAVEUIP( , 0x01, U4c35) !m0 SEQW GOTO U5c26

U1b80: SAVEUIP( , 0x01, U5e81) !m0 SEQW SAVEUIP0 U1b81SEQW GOTO U6d95
U1b81: tmp2:= MOVEFROMCREG_DSZ64( , 0x630) 
U1b82: tmp2:= AND_DSZ32(0x00000fff, tmp2) 

U1b84: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U1b81) 
U1b85: MOVETOCREG_DSZ64( , 0x00000000, 0x631) !m2 
U1b86: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x63a) !m2 

U1b88: TESTUSTATE( , UCODE, 0x0028) ? SEQW GOTO U5f02
U1b89: tmp11:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
U1b8a: tmp11:= AND_DSZ32(0x00000070, tmp11) 

U1b8c: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp11, U1b89) 
U1b8d: MOVETOCREG_DSZ64( , 0x00000000, 0x221, 32) !m1,m2 
U1b8e: tmp12:= OR_DSZ32(0x00000030) SEQW SAVEUIP1 U1b90SEQW GOTO U3130

U1b90: tmp11:= READURAM( , 0x000f, 64) SEQW GOTO U3e18
U1b91: LFNCEMARK-> tmp4:= LDZX_DSZ32_ASZ32_SC1(tmp11, 0x00000018, mode=0x18) 
U1b92: tmp9:= SHR_DSZ32(tmp0, 0x00000010) 

U1b94: LDHINT_BUFFER_ASZ32_SC1(tmp11) 
U1b95: tmp2:= NOTAND_DSZ32(tmp2, 0x00000200) 
U1b96: tmp3:= AND_DSZ32(0xffff0000, tmp4) 

U1b98: tmm5:= unk_707(mm4) 
U1b99: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U2711) 
U1b9a: tmp13:= SAVEUIP(0x00, U405e) SEQW GOTO U6e56

U1b9c: SYNCWAIT-> tmp8:= unk_cc6(rsi, tmp1) !m0 
U1b9d: tmp8:= unk_cce(rdi, tmp1) !m0 
U1b9e: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, IMM_MACRO_01) !m0 

U1ba0: tmp8:= unk_cc6(rsi, tmp1) !m0 
U1ba1: tmp8:= unk_cce(rdi, tmp1) !m0 
U1ba2: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U1b9c

U1ba4: tmp15:= SUB_DSZN(tmp4) !m1 
U1ba5: tmp15:= SHL_DSZ32(tmp15, 0x00000004) 
U1ba6: rsi:= ADDSUB_DSZ16_CONDD(tmp15, rsi) !m1 

U1ba8: rdi:= ADDSUB_DSZ16_CONDD(tmp15, rdi) !m1 
U1ba9: tmp15:= SHR_DSZ32(tmp15, tmp2) 
U1baa: rcx:= SUB_DSZN(tmp15, rcx) !m1 

U1bac: tmp1:= ZEROEXT_DSZ32() 
U1bad: tmp4:= ZEROEXT_DSZ32() SEQW URET1
U1bae: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1bb2

U1bb0: tmp1:= READURAM( , 0x004c, 64) 
U1bb1: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000f, U0846) !m0 
U1bb2: LFNCEMARK-> UPDATEUSTATE( , !0x00) !m0 

U1bb4: tmp1:= READURAM( , 0x0010, 64) 
U1bb5: tmp1:= ZEROEXT_DSZ16( , tmp1) 
U1bb6: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U1bc4

U1bb8: tmp1:= AND_DSZ64(tmp1, tmp11) 
U1bb9: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 
U1bba: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U1bc4

U1bbc: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U1bbd: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U1bbe: tmp0:= SHL_DSZ32(tmp0, 0x0000001a) 

U1bc0: tmp0:= AND_DSZ32(tmp0, tmp1) 
U1bc1: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp0, U5b35) 
U1bc2: tmp3:= TESTUSTATE(tmp10, SYS, 0x8000) !m1 ? SEQW URET1

U1bc4: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp11, 0x529) 
U1bc5: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U1bcc
U1bc6: tmp1:= SAVEUIP(tmp11, 0x00, U6080) 

U1bc8: SAVEUIP_REGOVR(0x01, U1bc9, 0x0120) !m0 SEQW GOTO U5d54
U1bc9: tmp1:= MOVEFROMCREG_DSZ64( , 0x067) 
U1bca: AETTRACE( , tmp1, 0x0e) 

U1bcc: SAVEUIP( , 0x00, U0444) 
U1bcd: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U0bba
U1bce: LFNCEMARK-> NOP 

U1bd0: LFNCEWAIT-> unk_256() !m1 SEQW UEND0
U1bd1: tmp5:= ZEROEXT_DSZ32(0x00001bd4) 
U1bd2: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4840

U1bd4: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1bd5: tmp14:= SAVEUIP(0x01, U1bda) !m0 
U1bd6: tmp10:= READAFLAGS( , tmp10) !m2 SEQW SAVEUIP0 U1bd8SEQW GOTO U0e6a

U1bd8: SAVEUIP( , 0x01, U0644) !m0 
U1bd9: SAVEUIP_REGOVR(0x00, U1bda, 0x0000) SEQW GOTO U5d31
U1bda: tmp2:= ZEROEXT_DSZ8(tmp2) 

U1bdc: tmp1:= CONCAT_DSZ8(0x00000000, tmp2) 
U1bdd: SAVEUIP_REGOVR( , 0x01, U1bde, 0xc935) !m0 SEQW GOTO U39e5
U1bde: tmp9:= ZEROEXT_DSZ32(tmp10) 

U1be0: tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 
U1be1: LFNCEWAIT-> tmp14:= MOVETOCREG_DSZ64(0x00000009, 0x000) 
U1be2: tmp12:= MOVETOCREG_DSZ64( , 0x00000000, 0x065) SEQW GOTO U0dc1

U1be4: tmp1:= MOVE_DSZ32(0x0000008b) 
U1be5: tmp1:= CONCAT_DSZ16(tmp1, 0x00001be4) 
U1be6: WRITEURAM(tmp1, 0x0007, 32) !m2 SEQW SAVEUIP0 U1be8SEQW GOTO U0504

U1be8: tmp1:= READURAM( , 0x001f, 64) 
U1be9: tmp1:= OR_DSZ32(0x00000003, tmp1) 
U1bea: WRITEURAM(tmp1, 0x001f, 32) !m2 SEQW SAVEUIP1 U1becSEQW GOTO U2170

U1bec: tmp2:= ZEROEXT_DSZ32(0x00000600) 
U1bed: MOVETOCREG_DSZ64(tmp2, 0x2f1, 32) !m1,m2 
U1bee: SIGEVENT( , 0x0000000b) 

U1bf0: tmp7:= ZEROEXT_DSZ32() 
U1bf1: tmp9:= ZEROEXT_DSZ32(0x007dafdf) 
U1bf2: tmp9:= CONCAT_DSZ32(tmp9, 0x00001615) 

U1bf4: SYNCFULL-> MOVETOCREG_BTS_DSZ64( , 0x0000000c, 0x29e) !m1,m2 
U1bf5: tmp8:= ZEROEXT_DSZ32(0x00000008) 
U1bf6: tmp11:= ZEROEXT_DSZ32(0x00061101) 

U1bf8: SAVEUIP( , 0x00, U40ac) SEQW GOTO U67c0
U1bf9: tmp2:= RDSEGFLD(UNK_SEG_04, SEL) 
U1bfa: tmp7:= NOTAND_DSZ32(0x00000007, tmp2) 

U1bfc: unk_d62(tmp7) 
U1bfd: tmp2:= RDSEGFLD(TSS, SEL) 
U1bfe: tmp7:= NOTAND_DSZ32(0x00000007, tmp2) 

U1c00: unk_d62(tmp7) 
U1c01: tmp2:= RDSEGFLD(UNK_SEG_04, SEL) 
U1c02: tmp13:= ZEROEXT_DSZ16(0x00003ef6) SEQW GOTO U4799

U1c04: tmp2:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1c05: tmp3:= BTR_DSZ32(tmp2, 0x00000012) 
U1c06: tmp1:= MOVEFROMCREG_DSZ64( , 0x79e) 

U1c08: tmp1:= SUB_DSZ64(0x00000003, tmp1) 
U1c09: tmp3:= MOVEMERGEFLGS_DSZ64(tmp3, tmp1) 
U1c0a: tmp3:= CMOVCC_DSZ64_CONDZ(tmp3, tmp2) 

U1c0c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp3, 0x7fe) !m2 
U1c0d: tmp10:= ZEROEXT_DSZ16(tmp10) 
U1c0e: SIGEVENT( , 0x00000013) 

U1c10: tmp0:= unk_88f(tmp11) !m0,m1 
U1c11: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U1c12: LFNCEWAIT-> tmp0:= unk_ccc(tmp0) 

U1c14: tmm7:= FMOV(0x00000011) !m0 
U1c15: tmp0:= ADD_DSZN(tmp0, 0x0000000a) !m1 
U1c16: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U1c12

U1c18: MOVETOCREG_DSZ64(tmp2, 0x7fe) !m2 SEQW GOTO U0078
U1c19: tmp4:= OR_DSZN(rcx) !m1 
U1c1a: SIGEVENT( , 0x0000002f) 

U1c1c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U0466) 
U1c1d: unk_c02(rdi) !m1 SEQW SAVEUIP1 U1c1eSEQW GOTO U76e9
U1c1e: LFNCEWAIT-> STAD_DSZN_ASZ32_SC1(rdi, mode=0x08,  , tmp0) !m1 

U1c20: tmp4:= SUB_DSZN(0x00000001, tmp4) !m1 
U1c21: rcx:= ZEROEXT_DSZ16N(tmp4, rcx) !m1 
U1c22: MSLOOP-> rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 SEQW GOTO U1c1c

U1c24: tmp2:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1c25: tmp3:= BTR_DSZ32(tmp2, 0x00000012) 
U1c26: tmp1:= MOVEFROMCREG_DSZ64( , 0x79e) 

U1c28: tmp1:= SUB_DSZ64(0x00000003, tmp1) 
U1c29: tmp3:= MOVEMERGEFLGS_DSZ64(tmp3, tmp1) 
U1c2a: tmp3:= CMOVCC_DSZ64_CONDZ(tmp3, tmp2) 

U1c2c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp3, 0x7fe) !m2 
U1c2d: tmm2:= unk_73a() 
U1c2e: SIGEVENT( , 0x00000013) 

U1c30: tmp5:= unk_88f(tmp11) !m0,m1 
U1c31: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U1c32: LFNCEWAIT-> tmp0:= unk_cf7(tmp5) 

U1c34: tmm7:= FMOV(0x00000011) !m0 
U1c35: tmp5:= ADD_DSZN(tmp5, 0x0000000a) !m1 
U1c36: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U1c32

U1c38: MOVETOCREG_DSZ64(tmp2, 0x7fe) !m2 SEQW GOTO U2bbd
U1c39: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U4b11) 
U1c3a: tmp1:= SHR_DSZ64(tmp5, 0x0000003d) 

U1c3c: tmp1:= AND_DSZ32(0x00000005, tmp1) 
U1c3d: TESTUSTATE( , UCODE, 0x0800) 
U1c3e: SYNCMARK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000004, U189a) !m2 

U1c40: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x0009) !m2 
U1c41: tmp1:= AND_DSZ32(0x00000001, tmp1) 
U1c42: SYNCWAIT-> tmp5:= SELECTCC_DSZ64_CONDNZ(tmp1, tmp5) SEQW GOTO U189a

U1c44: tmp1:= AND_DSZ32(0x00000004, tmp2) 
U1c45: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U1bd0) 
U1c46: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U1c48: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U1c49: LFNCEMARK-> tmp4:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000020, 0x48c) !m2 
U1c4a: tmp1:= AND_DSZ32(0x00000020, tmp5) 

U1c4c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U1c4d) SEQW GOTO U1c50
U1c4d: tmp1:= OR_DSZ16(0x00008080, tmp4) 
U1c4e: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x48c) 

U1c50: tmp1:= SUB_DSZ32(0x0000fffd, tmp0) 
U1c51: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U1c52) SEQW GOTO U6c05
U1c52: tmp1:= SUB_DSZ32(0x0000ffbb, tmp0) 

U1c54: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U1c55) SEQW GOTO U6e84
U1c55: NOP 
U1c56: NOP 

U1c58: mm0:= unk_6a1(tmm7, 0x00000000) !m2 SEQW GOTO U1bd0
U1c59: tmpv0:= READURAM( , 0x0014, 64) 
U1c5a: tmpv1:= SHR_DSZ64(tmpv0, 0x00000015) 

U1c5c: tmpv2:= SHR_DSZ64(tmpv0, 0x0000002a) 
U1c5d: tmpv1:= OR_DSZ64(tmpv2, tmpv1) 
U1c5e: tmpv0:= NOTAND_DSZ64(0x001fffff, tmpv0) 

U1c60: tmpv1:= AND_DSZ32(0x001fffff, tmpv1) 
U1c61: tmpv0:= OR_DSZ64(tmpv1, tmpv0) 
U1c62: WRITEURAM(tmpv0, 0x0014, 64) SEQW URET1

U1c64: SAVEUIP_REGOVR(0x01, U1c65, 0x0000) !m0 SEQW GOTO U02ba
U1c65: tmp2:= READURAM( , 0x0020, 64) 
U1c66: tmp2:= SHR_DSZ32(tmp2, 0x00000001) 

U1c68: tmp2:= ADD_DSZ32(0x00000010, tmp2) 
U1c69: tmp0:= ZEROEXT_DSZ32(0x00000074) 
U1c6a: tmp0:= CONCAT_DSZ16(0x0000800c, tmp0) 

U1c6c: tmp1:= PORTIN_DSZ32_ASZ16_SC1(tmp0) 
U1c6d: tmp1:= ADD_DSZ32(0x00000001, tmp1) 
U1c6e: tmp1:= BTS_DSZ32(tmp1, tmp2) 

U1c70: PORTOUT_DSZ32_ASZ16_SC1(tmp0,  , tmp1) 
U1c71: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
U1c72: tmp11:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 

U1c74: tmp11:= AND_DSZ32(0x00000070, tmp11) 
U1c75: tmp11:= SUB_DSZ32(0x00000030, tmp11) 
U1c76: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp11, U1c78) SEQW GOTO U1c72

U1c78: NOP SEQW GOTO U20a8
U1c79: tmp3:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U1c7a: tmp1:= ZEROEXT_DSZ32() 

U1c7c: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4f5e
U1c7d: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW URET1
U1c7e: tmp14:= READUIP_REGOVR(0x01) !m0 

U1c80: tmpv1:= READURAM( , 0x0011, 64) 
U1c81: tmpv1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmpv1) 
U1c82: BTUJB_DIRECT_NOTTAKEN(tmpv1, U73ad, tmpv0) !m1,m2 SEQW URET1

U1c84: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U1c85: unk_eff() 
U1c86: SAVEUIP_REGOVR(0x01, U1c88, 0x0008) !m0 SEQW GOTO U2b0d

U1c88: tmp0:= BTR_DSZ64(tmp0, 0x0000002b) 
U1c89: WRITEURAM(tmp0, 0x005c, 64) 
U1c8a: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1c90

U1c8c: tmp0:= ZEROEXT_DSZ32(0x00000027) 
U1c8d: tmp3:= ZEROEXT_DSZ32(0x0000001d) 
U1c8e: SAVEUIP_REGOVR(0x01, U1c90, 0x00f3) !m0 SEQW GOTO U1cfa

U1c90: TESTUSTATE( , UCODE, !0x3000) !m0 ? SEQW GOTO U1015
U1c91: tmp0:= OR_DSZN(rcx) !m1 
U1c92: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 

U1c94: unk_cfd(rax) 
U1c95: MOVE_DSZ32() 
U1c96: LFNCEMARK-> LBSYNC(0x00000002) 

U1c98: LFNCEWAIT-> unk_256() !m1 SEQW UEND0
U1c99: tmp9:= SHR_DSZ64(tmp7, 0x00000020) 
FUN_ucode_0001c9a:
U1c9a: tmp7:= TESTUSTATE(tmp7, SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3210

U1c9c: tmp5:= READURAM( , 0x0085, 64) 
U1c9d: tmp6:= READURAM( , 0x0086, 64) SEQW SAVEUIP0 U1c9eSEQW GOTO U3044
U1c9e: tmp4:= SUB_DSZ64(tmp6, tmp2) 

U1ca0: tmp4:= SUB_DSZ64(tmp7, tmp4) 
U1ca1: tmp8:= SUB_DSZ64(tmp5, tmp2) 
U1ca2: tmp8:= SUB_DSZ64(tmp9, tmp8) 

U1ca4: tmp10:= MOVEMERGEFLGS_DSZ64(tmp5, tmp4) 
U1ca5: tmp10:= CMOVCC_DSZ64_CONDBE(tmp10, tmp2) 
U1ca6: tmp4:= SUB_DSZ64(tmp5, tmp10) 

U1ca8: tmp4:= MOVEMERGEFLGS_DSZ64(tmp4, tmp8) 
U1ca9: tmp4:= CMOVCC_DSZ64_CONDNBE(tmp4, 0x00000001) 
U1caa: tmp4:= OR_DSZ64(tmp4, tmp4) 

U1cac: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U4f5e) 
U1cad: WRITEURAM(tmp10, 0x0085, 64) !m2 
U1cae: SYNCMARK-> WRITEURAM(tmp2, 0x0086, 64) !m2 SEQW GOTO U3210

U1cb0: LFNCEWAIT-> unk_256() !m1 
FUN_ucode_0001cb1:
U1cb1: tmp6:= SHR_DSZ64(tmp6, 0x0000001c) 
U1cb2: tmp6:= AND_DSZ64(0x00000fff, tmp6) 

U1cb4: tmp8:= ADD_DSZN(tmp11, tmp6) !m1 
U1cb5: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000008, U1cb6) !m2 SEQW GOTO U008e
U1cb6: unk_256() !m1 

U1cb8: tmp0:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U1cb9: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000d, U1bd0) !m2 
U1cba: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f0) 

U1cbc: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U2711) !m1 
U1cbd: tmp0:= READURAM( , 0x003a, 64) 
uret1:
U1cbe: tmp0:= SHR_DSZ64(tmp0, 0x00000018) 

U1cc0: tmp0:= AND_DSZ64(0x00000100, tmp0) 
U1cc1: tmp0:= NOTAND_DSZ64(tmp4, tmp0) 
U1cc2: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U1cc4) SEQW GOTO U008e

U1cc4: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp4, 0x00000008, U45b1) 
U1cc5: SAVEUIP( , 0x01, U008e) !m0 SEQW GOTO U5fb1
U1cc6: tmp0:= BTR_DSZ32(tmp11, 0x0000001f) 

U1cc8: tmp0:= SUB_DSZ32(0x00000008, tmp0) 
U1cc9: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp0) 
U1cca: tmp11:= CMOVCC_DSZ32_CONDNBE(tmp2, tmp11) 

U1ccc: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp0, U4836) 
U1ccd: LFNCEMARK-> tmp0:= SHL_DSZ32(tmp11, 0x00000003) 
U1cce: tmp1:= ADD_DSZ32(tmp0, 0x000021a4) 

U1cd0: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, tmp1) 
U1cd1: rax:= ZEROEXT_DSZ16(0x00000008, tmp11) SEQW GOTO U1bd0
U1cd2: tmpv0:= SUB_DSZ32(0x00000001) 

U1cd4: tmpv0:= NOTAND_DSZ32(0x00000020, tmpv0) 
U1cd5: MOVETOCREG_DSZ64(tmpv0, 0x2c4, 32) !m1,m2 
U1cd6: tmpv0:= READURAM( , 0x0020, 64) 

U1cd8: tmpv0:= BT_DSZ64(tmpv0, 0x00000001) 
U1cd9: tmpv0:= SELECTCC_DSZ64_CONDNB(tmpv0, 0x00003b00) 
U1cda: STADSTGBUF_DSZ64_ASZ16_SC1(tmpv0, 0x00000020,  , tmp14) 

U1cdc: tmpv0:= ZEROEXT_DSZ32(0x00005db9) 
U1cdd: tmpv0:= CONCAT_DSZ16(0x000000ee, tmpv0) 
U1cde: WRITEURAM(tmpv0, 0x0007, 32) !m2 SEQW GOTO U5dc2

U1ce0: tmp4:= WRMSLOOPCTRFBR() !m0 
U1ce1: tmp2:= CONCAT_DSZ32(0x00010000, tmp2) 
U1ce2: tmp0:= ADDSUB_DSZ16_CONDD(0x00000001) 

U1ce4: tmp0:= SELECTCC_DSZ32_CONDNS(tmp0, 0x00000001) 
U1ce5: tmp0:= SUB_DSZN(tmp0, rcx) !m1 
U1ce6: tmp0:= SUB_DSZN(0x00008000, tmp0) !m1 

U1ce8: tmp14:= SUB_DSZN(0x00008001, tmp0) !m1 
U1ce9: tmp14:= MOVEMERGEFLGS_DSZ32(0x00001ce0, tmp14) 
U1cea: tmp14:= CMOVCC_DSZ32_CONDNB(tmp14, 0x00006960) 

U1cec: tmp15:= MOVEMERGEFLGS_DSZ32(0x0000045e, tmp0) 
U1ced: tmp14:= CMOVCC_DSZ32_CONDZ(tmp15, tmp14) 
U1cee: tmp1:= SAVEUIP( , 0x01, U068e) !m0 

U1cf0: UFLOWCTRL( , tmp14, URET1) 
U1cf1: SYNCWAIT-> STAD_DSZN_ASZ32_SC1(rdi, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x08, tmp1, rax) !m0,m1 
U1cf2: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, IMM_MACRO_01) !m0 

U1cf4: STAD_DSZN_ASZ32_SC1(rdi, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x08, tmp1, rax) !m0,m1 
U1cf5: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U1cf1
U1cf6: tmp15:= SUB_DSZN(tmp4) !m1 

U1cf8: tmp15:= SHL_DSZ32(tmp15, tmp2) SEQW GOTO U1ba8
U1cf9: tmp3:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U1cfa: tmp1:= ZEROEXT_DSZ32() 

U1cfc: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1d00
U1cfd: tmpv1:= READURAM( , 0x0043, 64) 
U1cfe: BTUJB_DIRECT_NOTTAKEN(tmpv1, U4f5e, tmpv0) 

U1d00: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1db2
FUN_ucode_0001d01:
U1d01: tmpv1:= READURAM( , 0x004c, 64) 
FUN_ucode_0001d02:
U1d02: BTUJB_DIRECT_NOTTAKEN(tmpv1, U73ad, tmpv0) !m1,m2 SEQW URET1

U1d04: tmp9:= AND_DSZ64(0x00000fbf, tmp4) 
FUN_ucode_0001d05:
U1d05: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, 0x0000001e, U1d06) !m0,m2 SEQW GOTO U1d08
U1d06: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, 0x00000018, U082e) 

U1d08: tmp9:= READURAM( , 0x0010, 64) 
U1d09: tmp10:= ZEROEXT_DSZ16( , tmp9) 
U1d0a: tmp10:= AND_DSZ64(tmp4, tmp10) 

U1d0c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U082e) 
U1d0d: tmp9:= SHR_DSZ64(tmp4, 0x0000000b) 
U1d0e: tmp9:= OR_DSZ32(0x00000001, tmp9) 

U1d10: tmp4:= ZEROEXT_DSZ32(0x00000003) 
U1d11: SAVEUIP( , 0x00, U043c) 
U1d12: SAVEUIP( , 0x01, U1bd0) !m0 

U1d14: tmp9:= unk_163(tmp4, tmp9) 
U1d15: tmp14:= READUIP_REGOVR(0x01) !m0 
U1d16: LFNCEMARK-> tmp4:= MOVEFROMCREG_DSZ64( , 0x79d) SEQW SAVEUIP1 U1d18

U1d18: tmp9:= AND_DSZ32(0x0000000f, tmp9) 
U1d19: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U5795) 
U1d1a: tmp7:= unk_1d7(tmp9) 

U1d1c: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp7, 0x79d) 
U1d1d: tmp9:= BTR_DSZ32(tmp9, tmp7) SEQW URET0
U1d1e: TESTUSTATE( , VMX, 0x1000) !m2 ? SEQW GOTO U770d

U1d20: WRITEURAM(tmp14, 0x0061, 64) 
U1d21: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000010, U770d) !m1,m2 
U1d22: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U770d

U1d24: TESTUSTATE( , SYS, !0x2000) !m0,m1 ? SEQW GOTO U770d
U1d25: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000015, U041d) 
U1d26: tmp14:= MOVEFROMCREG_DSZ64( , 0x511) 

U1d28: tmp14:= NOTAND_DSZ32(0xfffffffffffff000, tmp14) 
U1d29: tmp15:= BT_DSZ32(tmp15, 0x00000001) 
U1d2a: tmp14:= MOVEMERGEFLGS_DSZ32(tmp14, tmp15) 

U1d2c: tmp15:= SHR_DSZ32(tmp15, 0x0000000b) 
U1d2d: tmp15:= AND_DSZ32(0x0000001f, tmp15) 
U1d2e: tmp15:= SUB_DSZ32(0x00000004, tmp15) 

U1d30: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp15, U770d) 
U1d31: tmp15:= unk_b2f(tmp14, tmp15) 
U1d32: tmp15:= OR_DSZ32(tmp15, tmp14) 

U1d34: tmp15:= AND_DSZ32(0x0000000c, tmp15) 
U1d35: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U770d) 
U1d36: tmp15:= SUB_DSZ32(0x00000080, tmp14) 

U1d38: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U6812) 
U1d39: tmp14:= SHL_DSZ32(tmp14, 0x00000002) 
U1d3a: tmp15:= ZEROEXT_DSZ32(0x00000003) 

U1d3c: LFNCEMARK-> tmp14:= OR_DSZ32(tmp15, tmp14) 
U1d3d: tmp14:= SHL_DSZ64(tmp14, 0x00000030) 
U1d3e: tmp15:= MOVEFROMCREG_DSZ64( , 0x513) 

U1d40: tmp15:= SHL_DSZ64(tmp15, 0x00000010) 
U1d41: tmp15:= SHR_DSZ64(tmp15, 0x00000010) 
U1d42: LFNCEWAIT-> MOVETOCREG_OR_DSZ64(tmp15, 0x513, tmp14) 

U1d44: tmp14:= READURAM( , 0x0061, 64) SEQW GOTO U2041
U1d45: tmp12:= READURAM( , 0x0011, 64) 
U1d46: tmp14:= MOVEFROMCREG_DSZ64( , 0x6c0) 

U1d48: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004b4, mode=0x01, tmp12) 
U1d49: tmp15:= SHL_DSZ32(tmp15, 0x0000001f) 
U1d4a: MOVETOCREG_OR_DSZ64(tmp14, 0x6c0, tmp15) 

U1d4c: tmp15:= READURAM( , 0x005c, 64) 
U1d4d: tmp15:= BTR_DSZ64(tmp15, 0x0000000a) 
U1d4e: SYNCFULL-> WRITEURAM(tmp15, 0x005c, 64) SEQW GOTO U73ad

U1d50: tmp12:= READURAM( , 0x0057, 64) 
U1d51: tmp4:= MOVEFROMCREG_DSZ64( , 0x513) 
U1d52: LFNCEMARK-> MOVETOCREG_BTR_DSZ64(tmp4, 0x00000031, 0x513) !m2 

U1d54: LFNCEWTMRK-> MOVETOCREG_BTS_DSZ64( , 0x00000007, 0x00b) !m0,m2 
U1d55: unk_256() !m1 SEQW SAVEUIP0 U1d56SEQW GOTO U0139
U1d56: NOP 

U1d58: LFNCEWAIT-> tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000080) 
U1d59: tmp2:= ZEROEXT_DSZ8(tmp2) 
U1d5a: tmp15:= SUB_DSZ32(0x00000080, tmp1) 

U1d5c: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U629e) 
U1d5d: NOP 
U1d5e: NOP 

U1d60: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000080, tmp2) 
U1d61: tmp14:= SAVEUIP(0x01, U008e) !m0 
U1d62: TESTUSTATE( , VMX, !0x0020) !m0,m2 ? SEQW GOTO U67a2

U1d64: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000258, tmp12) 
U1d65: tmp5:= AND_DSZ32(0x0000000f, tmp5) 
U1d66: tmp2:= SHR_DSZ32(tmp2, 0x00000004) 

U1d68: tmp5:= SUB_DSZ32(tmp5, tmp2) 
U1d69: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp5, U59c2) SEQW URET1
U1d6a: TESTUSTATE( , SYS, UST_VMX_DIS) !m1 ? SEQW GOTO U2769

U1d6c: tmp0:= ZEROEXT_DSZ32(0x0000041b) 
U1d6d: tmp4:= ZEROEXT_DSZ32(0x00000010) 
U1d6e: TESTUSTATE( , SYS, !UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U2e8a

U1d70: tmp5:= READURAM( , 0x003a, 64) 
U1d71: tmp5:= NOTAND_DSZ32(tmp5, 0x00000005) 
U1d72: TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW SAVEUIP0 U1d74? SEQW GOTO U5ffd

U1d74: tmp4:= OR_DSZ32(tmp3, tmp5) 
U1d75: tmp1:= READURAM( , 0x0010, 64) 
U1d76: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U1d78: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U2711) 
U1d79: NOP 
U1d7a: NOP 

U1d7c: LFNCEMARK-> tmp2:= LDZX_DSZ64_ASZ32_SC1(tmp2, mode=0x18) 
U1d7d: tmp3:= NOTAND_DSZ64(tmp1, tmp2) 
U1d7e: NOP 

U1d80: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U04b6, tmp3) 
U1d81: NOP 
U1d82: NOP 

U1d84: LFNCEWAIT-> tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp3) 
U1d85: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U1d86: tmp4:= READURAM( , 0x0070, 64) 

U1d88: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000011, U04b6) 
U1d89: tmp4:= OR_DSZ32(0x00001000, tmp4) 
U1d8a: tmp1:= SUB_DSZ64(0x00000001) 

U1d8c: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64(tmp0, 0x00000008, 0x6c3) 
check_rdrand_vmexits:
U1d8d: WRITEURAM(tmp4, 0x0070, 32) 
FUN_ucode_0001d8e:
U1d8e: MOVETOCREG_DSZ64(tmp4, 0x2c4, 32) !m1 

FUN_ucode_0001d90:
U1d90: WRITEURAM(tmp3, 0x0049, 64) 
U1d91: WRITEURAM(tmp3, 0x0057, 64) 
U1d92: WRITEURAM(tmp1, 0x0056, 64) 

U1d94: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b8, tmp3, tmp1) 
U1d95: tmp1:= ZEROEXT_DSZ32(0x00000001) 
U1d96: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp3, tmp1) SEQW GOTO U18e6

U1d98: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000010, U0c8c) 
U1d99: CMPUJNZ_DIRECT_NOTTAKEN(tmp5, 0x00000004, U2711) !m1 SEQW SAVEUIP1 U1d9aSEQW GOTO U02ba
U1d9a: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 

U1d9c: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U5718) !m2 
U1d9d: tmp2:= ZEROEXT_DSZ32(0x000000ff) 
U1d9e: tmp3:= READURAM( , 0x0020, 64) 

U1da0: tmp3:= SHR_DSZ64(tmp3, 0x00000030) 
U1da1: tmp5:= PORTIN_DSZ64_ASZ16_SC1(0x50b0) !m2 SEQW SAVEUIP1 U1da2SEQW GOTO U1da5
U1da2: tmp5:= PORTIN_DSZ64_ASZ16_SC1(0x50b8) !m2 

U1da4: SAVEUIP( , 0x01, U08a2) !m0 
U1da5: WRMSLOOPCTRFBR( , 0x00000007) 
U1da6: tmp10:= AND_DSZ32(0x00000001, tmp3) 

U1da8: tmp10:= SELECTCC_DSZ32_CONDNZ(tmp10, 0x000000ff) 
U1da9: tmp5:= OR_DSZ64(tmp10, tmp5) 
U1daa: tmp10:= SUB_DSZ8(tmp5, tmp2) 

U1dac: tmp5:= MOVEMERGEFLGS_DSZ64(tmp5, tmp10) 
U1dad: tmp2:= CMOVCC_DSZ32_CONDNB(tmp5, tmp2) 
U1dae: tmp3:= SHR_DSZ32(tmp3, 0x00000001) 

U1db0: tmp5:= SHR_DSZ64(tmp5, 0x00000008) 
U1db1: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1da6
U1db2: URET(0x01) !m0 

U1db4: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp0, tmp9) 
U1db5: tmp8:= BT_DSZ64(tmp8, 0x00000000) 
U1db6: tmp15:= SELECTCC_DSZ64_CONDNB(tmp8, tmp8) 

U1db8: tmp15:= AND_DSZ64(tmp7, tmp15) 
U1db9: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U3734) 
U1dba: tmp15:= ADD_DSZ64(tmp9, tmp2) 

U1dbc: tmp9:= ADD_DSZ32(0x00000001, tmp9) 
U1dbd: MOVETOCREG_DSZ64(tmp8, tmp15) 
U1dbe: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U1db4

U1dc0: tmp12:= ZEROEXT_DSZ64(tmp1) 
U1dc1: NOP SEQW SAVEUIP1 U1dc2SEQW GOTO U2906
U1dc2: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000270, tmp12) 

U1dc4: TESTUSTATE( , VMX, 0x0080) !m2 ? SEQW GOTO U164e
U1dc5: NOP 
U1dc6: NOP 

U1dc8: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U164e
U1dc9: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000080, tmp12) 
U1dca: MOVETOCREG_DSZ64(tmp2, 0x7f8) 

U1dcc: tmp15:= SHR_DSZ64(tmp2, 0x00000020) 
U1dcd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 
U1dce: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002e8, tmp12) 

U1dd0: MOVETOCREG_DSZ64(tmp2, 0x7f9, 32) !m1 
U1dd1: tmp15:= NOTAND_DSZ64(0x00005fc3, tmp2) 
U1dd2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) SEQW GOTO U1650

U1dd4: BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U07fe) 
U1dd5: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U2e61
U1dd6: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp9) !m0,m1 

U1dd8: tmp1:= RDSEGFLD(CS, SEL) 
U1dd9: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, tmp1) !m0,m1 
U1dda: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_eb, mode=0x0a, tmp4) !m0,m1 

U1ddc: rsp:= SUB_DSZN(IMM_MACRO_1b, rsp) !m0,m1 
U1ddd: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1de2
U1dde: tmp1:= SHR_DSZ32(tmp6, 0x00000010) 

U1de0: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp1) !m0,m1 
U1de1: rsp:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U1de2: LFNCEMARK-> unk_de3(tmp3) 

U1de4: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U01ca) 
U1de5: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1de9
U1de6: tmp1:= READURAM( , 0x0011, 64) 

U1de8: LFNCEMARK-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004a8, mode=0x01, tmp1, 0x00000000) 
U1de9: tmp1:= READURAM( , 0x0070, 64) 
U1dea: tmp1:= BTR_DSZ64(tmp1, 0x0000002e) 

U1dec: LFNCEWAIT-> MOVETOCREG_SHR_DSZ64(tmp1, 0x00000020, 0x008) 
U1ded: WRITEURAM(tmp1, 0x0170, 64) 
U1dee: NOP 

U1df0: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
U1df1: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U2784
U1df2: tmp0:= READURAM( , 0x003f, 64) 

U1df4: AETTRACE( , tmp0, 0x0c) SEQW GOTO U2784
U1df5: TESTUSTATE( , UCODE, 0x3000) ? SEQW URET1
U1df6: tmp9:= READURAM( , 0x0012, 64) 

U1df8: BTUJNB_DIRECT_NOTTAKEN(tmp9, 0x00000009, U06ae) 
U1df9: tmp5:= ZEROEXT_DSZ32(0x00000409) 
U1dfa: SAVEUIP_REGOVR( , 0x01, U1dfc, 0xca59) !m0 SEQW GOTO U6d0c

U1dfc: tmpv0:= MOVEFROMCREG_DSZ64( , 0x01c) 
U1dfd: SAVEUIP( , 0x01, U3771) !m0 
U1dfe: SAVEUIP( , 0x00, U3a34) SEQW GOTO U334d

U1e00: tmp10:= ZEROEXT_DSZ32(0x00000001) 
U1e01: SYNCWAIT-> MOVETOCREG_DSZ64(tmp11, 0x2c4, 32) !m1 
U1e02: tmp9:= MOVEFROMCREG_DSZ64( , 0x2da, 32) !m1 

U1e04: tmp9:= MOVETOCREG_OR_DSZ64(tmp9, 0x2da, tmp10) !m1 
U1e05: tmp9:= SHL_DSZ32(tmp9, 0x00000018) 
U1e06: tmp11:= OR_DSZ32(tmp11, tmp9) 

U1e08: tmp9:= MOVEFROMCREG_DSZ64( , 0x008) 
U1e09: tmp9:= OR_DSZ32(0x00000080, tmp9) 
U1e0a: MOVETOCREG_DSZ64(tmp9, 0x008) 

U1e0c: tmp9:= CONCAT_DSZ32(tmp9, tmp11) 
U1e0d: WRITEURAM(tmp9, 0x0070, 64) !m2 
U1e0e: tmp9:= SUB_DSZ32(0x00000001) 

U1e10: MOVETOCREG_DSZ64(tmp9, 0x00b) 
U1e11: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 
U1e12: WRSEGFLD(0x00000000, IDT, LIMIT) 

U1e14: tmp10:= ZEROEXT_DSZ32(0x00008000) 
U1e15: rsp:= ZEROEXT_DSZ32(rsp) 
U1e16: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1e19

U1e18: tmp10:= ZEROEXT_DSZ32(0x0000fe58) 
U1e19: tmp10:= ADD_DSZ32(tmp4, tmp10) 
U1e1a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x067) 

U1e1c: tmp9:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U1e1d: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000a, U5da1) !m0,m2 
U1e1e: NOP 

U1e20: LFNCEWAIT-> FETCHFROMEIP0_ASZ32( , tmp10) SEQW UEND0
U1e21: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U1e22: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U1e24: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U1e28
U1e25: tmp5:= ZEROEXT_DSZ32() 
U1e26: tmp6:= ZEROEXT_DSZ32() 

U1e28: tmp6:= AND_DSZ64(tmp6, tmp5) 
U1e29: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1e35
U1e2a: tmp13:= READUIP_REGOVR(0x00) 

U1e2c: tmp3:= READURAM( , 0x0011, 64) 
U1e2d: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp3, mode=0x01, tmp2) 
U1e2e: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp3, 0x00000010, mode=0x01, tmp2) 

U1e30: tmp3:= AND_DSZ64(tmp4, tmp3) 
U1e31: tmp3:= NOTAND_DSZ64(tmp5, tmp3) 
U1e32: tmp6:= OR_DSZ64(tmp3, tmp6) 

U1e34: tmp5:= OR_DSZ64(tmp4, tmp5) 
U1e35: tmp11:= NOTAND_DSZ64(tmp5, tmp11) 
U1e36: tmp11:= OR_DSZ64(tmp6, tmp11) SEQW URET0

U1e38: tmp7:= MOVEFROMCREG_DSZ64( , 0x004) 
U1e39: tmp14:= ZEROEXT_DSZ32(tmp13) 
U1e3a: tmp0:= ZEROEXT_DSZ32(tmp11) 

U1e3c: tmp13:= MOVEFROMCREG_DSZ64( , 0x701) 
U1e3d: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp13, 0x0000000e, 0x701) !m0 
U1e3e: MOVETOCREG_BTR_DSZ64(tmp7, 0x00000005, 0x004) 

U1e40: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1e41: tmp10:= READAFLAGS( , tmp10) !m2 SEQW SAVEUIP0 U1e42SEQW GOTO U6a56
U1e42: LFNCEMARK-> tmp8:= NOTAND_DSZ32(tmp7, 0x00000003) 

U1e44: SAVEUIP_REGOVR( , 0x01, U1e45, 0x540c) !m0 SEQW GOTO U19fe
U1e45: tmp13:= CMOVCC_DSZ32_CONDZ(tmp8, tmp13) 
U1e46: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp8) 

U1e48: tmp2:= CMOVCC_DSZ32_CONDNZ(tmp2, 0x00000008) 
U1e49: tmp1:= ZEROEXT_DSZ8(tmp2, tmp1) 
U1e4a: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U31e9

U1e4c: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1e4e
U1e4d: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp3, U37dc, tmp2) !m1,m2 
U1e4e: tmp4:= ZEROEXT_DSZ32(0x002c6000) 

U1e50: tmp4:= BTS_DSZ32(tmp4, 0x00000018) 
U1e51: tmp14:= AND_DSZ32(tmp4, tmp14) 
U1e52: tmp14:= OR_DSZ32(0x00016809, tmp14) 

U1e54: tmp6:= CONCAT_DSZ16(tmp13, tmp6) 
U1e55: tmp9:= OR_DSZ32(tmp9, tmp10) 
U1e56: tmp4:= MOVEFROMCREG_DSZ64( , 0x067) 

U1e58: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 
U1e59: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp14, 0x000) 
U1e5a: tmp3:= SUB_DSZN(tmp12, tmp4) !m1 SEQW GOTO U0dc1

U1e5c: tmp6:= ZEROEXT_DSZ32(0x00000060) 
U1e5d: tmp0:= ADD_DSZ16(0x00000010, tmp0) 
U1e5e: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1e62

U1e60: LFNCEMARK-> unk_25c(tmp1, tmp1) 
U1e61: tmp0:= ADD_DSZ16(0x00000010, tmp0) 
U1e62: tmp5:= TESTUSTATE(tmp0, SYS, UST_USER_MODE | UST_8086_MODE) !m1 ? SEQW GOTO U2711

U1e64: tmp4:= SUB_DSZ32(0x00000001) 
U1e65: tmp9:= OR_DSZ32(0x0000a09b, tmp6) 
U1e66: rsp:= TESTUSTATE(tmp2, UCODE, !0x0004) !m0 ? SEQW GOTO U1e6a

U1e68: tmp9:= OR_DSZ32(0x0000c09b, tmp6) 
U1e69: rsp:= ZEROEXT_DSZ32(tmp2) 
U1e6a: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp4, 0x410) 

U1e6c: tmp4:= ZEROEXT_DSZ32(0x00004000) 
U1e6d: MOVETOCREG_DSZ64(tmp4, 0x73c) 
U1e6e: MOVETOCREG_DSZ64(tmp3, 0x79e) 

U1e70: MOVETOCREG_DSZ64(tmp9, 0x7f5) 
U1e71: MOVETOCREG_DSZ64( , 0x00000000, 0x700) 
U1e72: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x78e) SEQW SAVEUIP1 U1e74SEQW GOTO U00b9

U1e74: tmp6:= OR_DSZ32(0x0000c093, tmp6) 
U1e75: tmp4:= ADD_DSZ16(0x00000008, tmp5) 
U1e76: SAVEUIP_REGOVR(0x01, U1e78, 0x064a) !m0 SEQW GOTO U00b9

U1e78: WRSEGFLD(0x00000000, SS, BASE) 
U1e79: WRSEGFLD(tmp6, SS, SEL+FLGS+LIM) 
U1e7a: WRSEGFLD(tmp9, CS, SEL+FLGS+LIM) 

U1e7c: WRSEGFLD(0x00000000, CS, BASE) 
U1e7d: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U4002
U1e7e: LFNCEWTMRK->MSSTOP-> FETCHFROMEIP1_ASZ64( , tmp1) 

U1e80: MSSTOP-> MJMPTARGET_INDIRECT_ASZ64( , tmp1) SEQW GOTO U2792
U1e81: tmp9:= ADD_DSZN(IMM_MACRO_13, tmp12) !m0,m1 
U1e82: tmp8:= UPDATEUSTATE(!0x10) !m0 

U1e84: tmp4:= TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT | 0x0200) !m0,m1 ? SEQW GOTO U4910
U1e85: MOVETOCREG_DSZ64(0x00000009, 0x000) !m2 
U1e86: tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0 

U1e88: tmp3:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 
U1e89: tmp13:= SAVEUIP(0x00, U2be9) 
U1e8a: tmp14:= SAVEUIP(0x01, U3bd1) !m0 SEQW GOTO U2c01

U1e8c: tmp14:= ZEROEXT_DSZ32(tmp13) 
U1e8d: tmp7:= MOVEFROMCREG_DSZ64( , 0x004) 
U1e8e: LFNCEWAIT-> tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x00000005, 0x004) 

U1e90: LFNCEMARK-> tmp11:= MOVEFROMCREG_DSZ64( , 0x701) 
U1e91: MOVETOCREG_BTR_DSZ64(tmp11, 0x0000000e, 0x701) !m0 
U1e92: tmp1:= ZEROEXT_DSZ32(0x00000003) 

U1e94: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1e95: tmp10:= READAFLAGS( , tmp10) !m2 SEQW SAVEUIP0 U1e96SEQW GOTO U6a68
U1e96: tmp8:= NOTAND_DSZ32(tmp7, 0x00000003) 

U1e98: tmp2:= MOVEMERGEFLGS_DSZ64(tmp2, tmp8) 
U1e99: tmp2:= CMOVCC_DSZ32_CONDNZ(tmp2, 0x00000008) 
U1e9a: tmp1:= ZEROEXT_DSZ8(tmp2, tmp1) 

U1e9c: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U31e9
U1e9d: NOP 
U1e9e: NOP 

U1ea0: SAVEUIP_REGOVR( , 0x01, U1ea1, 0x840c) !m0 SEQW GOTO U19fe
U1ea1: NOP 
U1ea2: NOP 

U1ea4: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1ea6
U1ea5: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp3, U37dc, tmp2) !m1,m2 
patch_runs_load_loop:
U1ea6: tmp9:= OR_DSZ32(tmp9, tmp10) 

U1ea8: tmp4:= MOVEFROMCREG_DSZ64( , 0x067) 
U1ea9: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 
U1eaa: tmp3:= SUB_DSZN(tmp12, tmp4) !m1 

U1eac: tmp4:= ZEROEXT_DSZ32(0x002c6000) 
U1ead: tmp4:= BTS_DSZ32(tmp4, 0x00000018) 
U1eae: tmp14:= AND_DSZ32(tmp4, tmp14) 

U1eb0: tmp14:= OR_DSZ32(0x00016809, tmp14) 
U1eb1: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp14, 0x000) SEQW GOTO U0182
switchD:
U1eb2: tmp7:= unk_d6b(tmp6) 

patch_handle_0x1_zero_out:
U1eb4: tmp8:= AND_DSZ32(0x00000001, tmp7) 
U1eb5: tmp8:= SELECTCC_DSZ64_CONDZ(tmp8, tmp4) 
U1eb6: tmp8:= AND_DSZ64(tmp8, tmp7) 

U1eb8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U083e) 
U1eb9: LFNCEMARK-> tmp6:= ADD_DSZ32(0x00000008, tmp6) 
U1eba: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U1eb2

U1ebc: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp3, 0x540) 
U1ebd: MOVETOCREG_DSZ64(tmp2, 0x541) 
U1ebe: MOVETOCREG_DSZ64(tmp1, 0x542) 

U1ec0: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x543) SEQW GOTO U1bc2
U1ec1: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U1ec2: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U1ec4: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U1ec5) !m2 SEQW GOTO U1ec2
U1ec5: MOVETOCREG_DSZ64(tmpv2, 0x22c, 32) !m1 
U1ec6: MOVETOCREG_DSZ64(tmpv1, 0x22b, 32) !m1 

U1ec8: MOVETOCREG_DSZ64(tmpv0, 0x229, 32) !m1,m2 
U1ec9: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1,m2 
U1eca: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U068e) SEQW GOTO U1ec9

U1ecc: LFNCEWTMRK-> MOVETOCREG_DSZ64( , 0x00000000, 0x065) !m2 
U1ecd: tmp14:= SAVEUIP(0x01, U5a24) !m0 
U1ece: tmp13:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U1ed0: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp13, 0x00000010, U06ae) 
U1ed1: tmp7:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U1ed2: tmp12:= AND_DSZ32(0x000000ff, tmp7) 

U1ed4: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp12, U06ae) 
U1ed5: tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 
U1ed6: tmp11:= SHL_DSZ64(tmp3, 0x0000000f) 

U1ed8: tmp11:= SHR_DSZ64(tmp11, 0x0000000f) 
U1ed9: tmp9:= ZEROEXT_DSZ32() 
U1eda: tmp8:= ZEROEXT_DSZ32(0x00000003) 

U1edc: tmp7:= SHR_DSZ32(tmp7, 0x00000010) 
U1edd: tmp12:= ADD_DSZ32(tmp8, 0x000007a8) 
U1ede: tmp12:= ADD_DSZ32(tmp8, tmp12) 

U1ee0: tmp12:= MOVEFROMCREG_DSZ64( , tmp12) 
U1ee1: tmp12:= BTR_DSZ64(tmp12, 0x0000003f) 
U1ee2: tmp5:= SUB_DSZ64(tmp11, tmp12) 

U1ee4: tmp10:= SHL_DSZ32(0x00000001, tmp8) 
U1ee5: tmp10:= SELECTCC_DSZ32_CONDNZ(tmp5, tmp10) 
U1ee6: tmp10:= SELECTCC_DSZ32_CONDNB(tmp12, tmp10) 

U1ee8: tmp12:= SHL_DSZ32(tmp8, 0x00000002) 
U1ee9: tmp12:= SHL_DSZ32(0x00000003, tmp12) 
U1eea: tmp5:= AND_DSZ32(tmp12, tmp7) 

U1eec: tmp10:= SELECTCC_DSZ32_CONDNZ(tmp5, tmp10) 
U1eed: tmp9:= OR_DSZ32(tmp10, tmp9) 
U1eee: tmp8:= SUB_DSZ32(0x00000001, tmp8) 

U1ef0: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp8, U1ef1) SEQW GOTO U1edd
U1ef1: tmp10:= MOVEFROMCREG_DSZ64( , 0x01c) 
U1ef2: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp9, 0x01c, tmp10) SEQW URET1

U1ef4: tmp5:= MOVEFROMCREG_DSZ64( , 0x2c1, 32) !m1 
U1ef5: tmp10:= CONCAT_DSZ32(tmp5, tmp10) 
U1ef6: tmp5:= READURAM( , 0x0064, 64) 

U1ef8: tmp5:= SHL_DSZ32(tmp5, 0x0000001b) 
U1ef9: tmp10:= OR_DSZ64(tmp5, tmp10) SEQW SAVEUIP1 U1efaSEQW GOTO U3065
U1efa: SYNCWAIT-> WRSEGFLD(tmp10) !m0 

U1efc: tmp10:= MOVEFROMCREG_DSZ64( , 0x2c0, 32) !m1 
U1efd: LFNCEMARK-> WRSEGFLD(tmp10) !m0 
U1efe: SAVEUIP( , 0x00, U6380) 

U1f00: LFNCEWAIT-> tmp5:= RDSEGFLD(UNK_SEG_09, FLGS) 
U1f01: MOVETOCREG_DSZ64(tmp5, 0x7f5) 
U1f02: tmp5:= RDSEGFLD( , SS_USERM, FLGS, rsp) 

U1f04: MOVETOCREG_DSZ64(tmp5, 0x73c) 
U1f05: SYNCFULL-> MOVETOCREG_SHR_DSZ64(tmp5, 0x00000005, 0x79e) 
U1f06: tmp10:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

U1f08: MOVETOCREG_DSZ64(tmp10, 0x78e) 
U1f09: tmp5:= RDSEGFLD(UNK_SEG_09, LIMIT) 
U1f0a: MOVETOCREG_DSZ64(tmp5, 0x410) 

U1f0c: tmp5:= ADD_DSZ32(0x00000001, tmp5) 
U1f0d: MOVETOCREG_DSZ64(tmp5, 0x700) 
U1f0e: tmp5:= RDSEGFLD(UNK_SEG_09, SEL) 

U1f10: LFNCEMARK-> WRSEGFLD(tmp5, UNK_SEG_09, SEL) 
U1f11: tmp10:= RDSEGFLD(UNK_SEG_09, BASE) 
U1f12: NOP 

U1f14: LFNCEWAIT-> WRSEGFLD(tmp10, CS, BASE) 
U1f15: tmp10:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U1f16: WRSEGFLD(tmp10, CS, SEL+FLGS+LIM) 

U1f18: tmp10:= RDSEGFLD(SS_USERM, BASE) 
U1f19: WRSEGFLD(tmp10, SS, BASE) 
U1f1a: tmp10:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U1f1c: LFNCEMARK-> WRSEGFLD(tmp10, SS, SEL+FLGS+LIM) SEQW URET0
U1f1d: tmp11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000518, mode=0x01, tmp0) 
U1f1e: TESTUSTATE( , SYS, 0x2000) !m1 ? SEQW GOTO U1f21

U1f20: tmp11:= NOTAND_DSZ64(0x00000fff, tmp11) 
U1f21: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U1f36
U1f22: tmp8:= READURAM( , 0x001f, 64) !m2 

U1f24: tmp8:= SHR_DSZ64(tmp8, 0x00000025) 
U1f25: tmp8:= AND_DSZ32(0x000003ff, tmp8) 
U1f26: tmp9:= SHR_DSZ32(tmp6, 0x00000010) 

U1f28: tmp5:= AND_DSZ32(0x0000001f, tmp8) 
U1f29: tmp9:= AND_DSZ32(tmp5, tmp9) 
U1f2a: tmp8:= SHR_DSZ32(tmp8, 0x00000005) 

U1f2c: tmp8:= XOR_DSZ32(tmp9, tmp8) 
U1f2d: tmp9:= BTS_DSZ64(0x00000000, 0x00000038) 
U1f2e: tmp8:= SELECTCC_DSZ64_CONDZ(tmp8, tmp9) 

U1f30: tmp5:= ADD_DSZ64(0x0000002a, tmp2) 
U1f31: tmp9:= READURAM( , 0x0014, 64) 
U1f32: tmp9:= XOR_DSZ64(tmp8, tmp9) 

U1f34: tmp9:= SELECTCC_DSZ64_CONDB(tmp2, tmp9) 
U1f35: BTUJB_DIRECT_NOTTAKEN(tmp9, U66ac, tmp5) !m1 
U1f36: CMPUJZ_DIRECT_NOTTAKEN(tmp2, 0x0000000e, U59e2) !m0,m2 SEQW GOTO U4e04

U1f38: tmp10:= NOTAND_DSZ64(tmp6, tmp4) 
U1f39: tmp7:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000208, mode=0x18) 
U1f3a: tmp7:= OR_DSZ64(tmp10, tmp7) 

U1f3c: tmp10:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000210, mode=0x18) 
U1f3d: tmp7:= OR_DSZ64(tmp10, tmp7) 
U1f3e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U2711) 

U1f40: tmp5:= BT_DSZ64(tmp5, 0x00000003) 
U1f41: tmp15:= MOVEMERGEFLGS_DSZ64(0x000003ff, tmp5) 
U1f42: tmp8:= CMOVCC_DSZ64_CONDB(tmp15, 0x0000023f) 

U1f44: tmp5:= BT_DSZ64(tmp5, 0x00000004) 
U1f45: tmp15:= MOVEMERGEFLGS_DSZ64(0x0000043f, tmp5) 
U1f46: tmp8:= CMOVCC_DSZ64_CONDB(tmp15, tmp8) 

U1f48: tmp8:= ADD_DSZN(tmp8, tmp11) !m1 
U1f49: tmp3:= ZEROEXT_DSZ64(tmp5) 
U1f4a: tmp6:= OR_DSZ64(0x00000400) 

U1f4c: tmp6:= SHL_DSZ64(tmp6, 0x00000010) 
U1f4d: tmp6:= OR_DSZ64(0x000003c0, tmp6) 
U1f4e: tmm0:= unk_744(mm6) 

U1f50: tmp4:= MOVEINSERTFLGS_DSZ64( , tmp4) 
U1f51: tmp7:= AND_DSZ32(tmp3, 0x00000006) 
U1f52: tmp7:= MOVEMERGEFLGS_DSZ64(0x00000018, tmp7) 

U1f54: tmp7:= CMOVCC_DSZ32_CONDNZ(tmp7, 0x00000200) 
U1f55: tmp12:= AND_DSZ32(0x00000001, tmp3) 
U1f56: tmp12:= SELECTCC_DSZ64_CONDNZ(tmp12, tmp7) 

U1f58: tmp7:= ADD_DSZN(tmp12, tmp11) !m1 
U1f59: unk_cc1(tmp7) 
U1f5a: LFNCEMARK-> unk_cc1(tmp8) 

U1f5c: NOP 
U1f5d: NOP 
U1f5e: SYNCWAIT-> TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U2c06

U1f60: tmp13:= SAVEUIP(0x00, U6e52) 
U1f61: tmp14:= SAVEUIP(0x01, U2c06) !m0 SEQW GOTO U6454
U1f62: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x50c0) !m2 

U1f64: tmp11:= SUB_DSZ32(0xffffffff, tmp11) 
U1f65: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp11, U64e2) 
U1f66: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x50c0) !m2 

U1f68: LFNCEWAIT-> tmp11:= SHL_DSZ64(tmp11, 0x00000008) 
U1f69: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp4) 
U1f6a: tmp11:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, 0x00000004, tmp4) 

U1f6c: tmp5:= CONCAT_DSZ32(tmp11, tmp5) 
U1f6d: tmp11:= ZEROEXT_DSZ32(0xffffffff) 
U1f6e: tmp11:= CONCAT_DSZ32(0x00000fff, tmp11) 

U1f70: tmp5:= AND_DSZ64(tmp11, tmp5) SEQW GOTO U64da
U1f71: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp2) 
U1f72: tmp12:= ADD_DSZ32(0x00000020, tmp12) 

U1f74: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp3) 
U1f75: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U1f76: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp4) 

U1f78: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U1f79: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp5) 
U1f7a: tmp12:= ADD_DSZ32(0x00000020, tmp12) SEQW URET0

U1f7c: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000048) 
U1f7d: tmp1:= READURAM( , 0x000d, 64) 
U1f7e: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 

U1f80: tmp1:= CONCAT_DSZ8(tmp0, tmp1) 
U1f81: tmp1:= CONCAT_DSZ32(tmp1, 0x00002d22) 
U1f82: WRITEURAM(tmp1, 0x000d, 64) !m2 

U1f84: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U1f9a
U1f85: tmp11:= ZEROEXT_DSZ32(0x0000000d) 
U1f86: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp10, U294c) 

FUN_ucode_0001f88:
U1f88: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U1f9a
U1f89: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 
FUN_ucode_0001f8a:
U1f8a: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000005, 0x6c3) !m2 

U1f8c: tmp0:= READURAM( , 0x0053, 64) !m2 
U1f8d: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000005, U1f9a) !m2 
U1f8e: SAVEUIP_REGOVR(0x01, U1f90, 0x0001) !m0 SEQW GOTO U6074

do_smm_vmexit:
U1f90: SAVEUIP_REGOVR(0x01, U1f91, 0x0000) !m0 SEQW GOTO U02ba
do_smm_vmexit_ovr_enter_rip:
U1f91: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U1f92: tmp0:= BTS_DSZ32(tmp0, 0x00000012) 

U1f94: PORTOUT_DSZ32_ASZ16_SC1(0x50d8,  , tmp0) !m2 
U1f95: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U1f96: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000012, U1f95) !m0,m2 

U1f98: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
U1f99: tmp0:= ZEROEXT_DSZ32(0x0000000a) SEQW SAVEUIP0 U1f9aSEQW GOTO U60e5
U1f9a: SYNCFULL-> tmp0:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp4) 

U1f9c: tmp1:= SHL_DSZ32(tmp0, 0x00000002) 
U1f9d: tmp1:= ADD_DSZ32(tmp1, 0x0000226c) 
U1f9e: tmp4:= ADD_DSZ64(0x00000001, tmp4) 

U1fa0: tmp2:= SUB_DSZ8(0x0000001e, tmp0) 
U1fa1: tmp0:= ZEROEXT_DSZ32(0x00000009) 
U1fa2: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp2, U290c) 

U1fa4: NOP 
U1fa5: NOP 
U1fa6: UJMP( , tmp1) 

U1fa8: WRITEURAM( , 0x00000000, 0x0106, 64) !m2 
U1fa9: MOVETOCREG_DSZ64( , 0x00000000, 0x707) 
U1faa: MOVETOCREG_DSZ64( , 0x00000000, 0x706) 

U1fac: tmp0:= MOVEFROMCREG_DSZ64( , 0x702) 
U1fad: tmp0:= NOTAND_DSZ32(0x00000023, tmp0) 
U1fae: MOVETOCREG_DSZ64(tmp0, 0x702) 

U1fb0: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U5576
U1fb1: tmp9:= ZEROEXT_DSZ32(0x00030400) 
U1fb2: LFNCEMARK-> MOVETOCREG_DSZ64(tmp9, 0x6a1) 

U1fb4: LFNCEWTMRK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) 
U1fb5: WRMSLOOPCTRFBR( , 0x0000017f) 
U1fb6: NOP 

U1fb8: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a4) !m2 
U1fb9: MOVETOCREG_DSZ64( , 0x00000000, 0x6a5) !m2 
U1fba: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1fb8

U1fbc: tmp9:= ZEROEXT_DSZ32(0x00030200) 
U1fbd: LFNCEMARK-> MOVETOCREG_DSZ64(tmp9, 0x6a1) !m2 
U1fbe: NOP 

U1fc0: LFNCEWTMRK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) 
U1fc1: WRMSLOOPCTRFBR( , 0x0000003f) 
U1fc2: NOP 

U1fc4: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a4) 
U1fc5: MOVETOCREG_DSZ64( , 0x00000000, 0x6a4) 
U1fc6: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1fc4

U1fc8: tmp9:= ZEROEXT_DSZ32(0x00030300) 
U1fc9: MOVETOCREG_DSZ64(tmp9, 0x6a1) !m2 
U1fca: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) !m2 

U1fcc: WRMSLOOPCTRFBR( , 0x0000001f) 
U1fcd: NOP 
U1fce: NOP 

U1fd0: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a4) 
U1fd1: MOVETOCREG_DSZ64( , 0x00000000, 0x6a4) 
U1fd2: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1fd0

U1fd4: MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 SEQW GOTO U558c
U1fd5: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x0060) !m2 
U1fd6: tmp2:= AND_DSZ32(0x0000ffff, tmp2) 

U1fd8: WRITEURAM(tmp2, 0x0020, 64) 
U1fd9: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1fe9
U1fda: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x38e) !m1 

U1fdc: tmp2:= SHR_DSZ32(tmp2, 0x00000002) 
U1fdd: tmp2:= SHL_DSZ32(tmp2, 0x00000001) 
U1fde: tmp1:= AND_DSZ32(0x00000001, rax) 

U1fe0: ROVR<- tmp1:= SHL_DSZ32(tmp1, tmp2) SEQW SAVEUIP1 U1fe1SEQW GOTO U02ba
U1fe1: tmp0:= ZEROEXT_DSZ32(0x00000070) 
U1fe2: tmp0:= CONCAT_DSZ16(0x0000800c, tmp0) 

U1fe4: tmp2:= PORTIN_DSZ32_ASZ16_SC1(tmp0) 
U1fe5: tmp2:= OR_DSZ32(tmp1, tmp2) 
U1fe6: PORTOUT_DSZ32_ASZ16_SC1(tmp0,  , tmp2) 

U1fe8: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
U1fe9: MOVETOCREG_DSZ64( , 0x00000000, 0x06c) 
U1fea: tmp3:= CONCAT_DSZ16(0x00000080) 

U1fec: rax:= OR_DSZ32(0x00000006, rax) 
U1fed: tmp2:= SUB_DSZ64(0x00000001) 
U1fee: WRITEURAM(tmp2, 0x0030, 64) !m2 

U1ff0: WRITEURAM(tmp2, 0x0031, 64) !m2 
U1ff1: WRITEURAM(tmp2, 0x0032, 64) !m2 
U1ff2: WRITEURAM(tmp2, 0x0040, 64) !m2 

U1ff4: tmp14:= ZEROEXT_DSZ16(0x00005ad5) 
U1ff5: tmp15:= ZEROEXT_DSZ16(0x00004015) 
U1ff6: tmp0:= ZEROEXT_DSZ16(0x00000001) 

U1ff8: tmp0:= CONCAT_DSZ16(tmp0, 0x00000800) 
U1ff9: tmp2:= ZEROEXT_DSZ16(0x0000017f) 
U1ffa: tmp2:= CONCAT_DSZ16(tmp2, 0x0000001f) 

U1ffc: tmp4:= SUB_DSZ32(0x00000001) 
U1ffd: tmp4:= CONCAT_DSZ32(0x000000ff, tmp4) 
U1ffe: tmp5:= ZEROEXT_DSZ32() SEQW GOTO U5d19

U2000: tmp15:= MOVEFROMCREG_DSZ64( , 0x068) 
U2001: tmp15:= AND_DSZ32(0x0000ffff, tmp15) 
U2002: tmp15:= SHL_DSZ64(tmp15, 0x00000030) 

U2004: WRITEURAM(tmp15, 0x010e, 64) 
U2005: tmp15:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
U2006: tmp15:= BTR_DSZ32(tmp15, 0x00000005) SEQW GOTO U35ed

U2008: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U2009: SAVEUIP( , 0x01, U2dfa) !m0 SEQW GOTO U040c
U200a: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1 

U200c: tmp1:= OR_DSZ32(0x28000000, tmp0) 
U200d: tmp0:= OR_DSZ32(0xa8000040, tmp0) 
U200e: SAVEUIP( , 0x00, U191c) SEQW GOTO U2a29

U2010: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U2011: tmp14:= SAVEUIP(0x01, U1e8c) !m0 SEQW GOTO U201a
FUN_ucode_0002012:
U2012: tmp1:= ZEROEXT_DSZ32(tmp2) 

U2014: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x4648) !m2 
U2015: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U1fd5) !m2 
U2016: SYNCFULL-> UJMP( , tmp14) 

U2018: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U2019: tmp14:= SAVEUIP(0x01, U1e38) !m0 
U201a: tmp13:= AND_DSZ32(0x000000fc, tmp6) 

U201c: tmp13:= SUB_DSZ32(0x00000014, tmp13) 
U201d: tmp15:= MOVEFROMCREG_DSZ64( , 0x701) 
U201e: tmp15:= NOTAND_DSZ32(tmp15, 0x00010000) SEQW GOTO U608c

U2020: tmp1:= LDZX_DSZN_ASZ32_SC1(rdi, mode=0x08) !m1 
U2021: tmp10:= SUB_DSZN(tmp1, rax) !m1 
U2022: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 

U2024: MSLOOP-> tmp4:= SUB_DSZN(0x00000001, tmp4) !m1 
U2025: UJMPCC_DIRECT_TAKEN_CONDZ(tmp10, U0464) 
U2026: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U0464) SEQW GOTO U2020

U2028: SAVEUIP( , 0x01, U5ec4) !m0 SEQW GOTO U3130
U2029: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp3) 
U202a: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020,  , tmp4) 

U202c: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040,  , tmp5) 
U202d: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000060,  , tmp6) 
U202e: tmp12:= ADD_DSZ32(0x00000080, tmp12) SEQW URET0

U2030: SAVEUIP( , 0x01, U779e) !m0 SEQW GOTO U3130
FUN_ucode_0002031:
U2031: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U2032: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U2034: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 
U2035: tmp12:= ADD_DSZ32(0x00000040, tmp12) 
U2036: tmp8:= ZEROEXT_DSZ32(tmp8, tmp5) 

U2038: tmp9:= SHR_DSZ32(tmp8, 0x00000010) 
U2039: LFNCEWAIT-> tmp5:= MOVETOCREG_DSZ64(tmp6, tmp8) !m1 
U203a: tmp9:= ZEROEXT_DSZ32(tmp9, tmp5) 

U203c: tmp5:= MOVETOCREG_DSZ64(tmp2, tmp9) !m1 
U203d: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2031
U203e: URET(0x00) 

U2040: WRITEURAM(tmp15, 0x000c, 64) 
U2041: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U2042: tmp15:= AND_DSZ32(0x0000003e, tmp15) 

U2044: tmp15:= SUB_DSZ32(0x0000000c, tmp15) 
U2045: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U3211) 
U2046: tmp15:= MOVEFROMCREG_DSZ64( , 0x00c) SEQW GOTO U2dae

U2048: tmp15:= MOVEFROMCREG_DSZ64( , 0x701) 
U2049: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp15, 0x0000000e, 0x701) !m0 
U204a: tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 

U204c: tmp14:= MOVEFROMCREG_DSZ64( , 0x067) 
U204d: tmp14:= SUB_DSZN(tmp15, tmp14) !m1 
U204e: MOVETOCREG_DSZ64(tmp14, 0x067) SEQW GOTO U0705

U2050: SAVEUIP( , 0x01, U04c4) !m0 SEQW GOTO U3130
U2051: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U2052: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000008, U1432) !m2 

U2054: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000009, U37aa) !m1,m2 
U2055: tmp9:= unk_6a0() 
U2056: tmm0:= unk_495(tmm0, tmm1) SEQW GOTO U1432

U2058: NOP 
U2059: SYNCFULL-> UJMP( , tmp15) 
U205a: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000b, U2711) !m0,m1 SEQW SAVEUIP1 U205cSEQW GOTO U0a95

U205c: tmp1:= ZEROEXT_DSZ32(0x60000000) 
U205d: tmp2:= ZEROEXT_DSZ32(0x00000005) 
U205e: tmp3:= ZEROEXT_DSZ32(0x00000040) SEQW GOTO U4c39

U2060: tmp15:= MOVEFROMCREG_DSZ64( , 0x7e1) 
U2061: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U5a45) !m2 
U2062: tmp0:= READURAM( , 0x005c, 64) 

U2064: tmp0:= NOTAND_DSZ64(0x00e00000, tmp0) 
U2065: WRITEURAM(tmp0, 0x005c, 64) !m2 
U2066: tmp15:= READURAM( , 0x0007, 64) 

U2068: WRITEURAM(tmp15, 0x0050, 32) !m2 
U2069: tmp15:= SHR_DSZ32(tmp15, 0x00000014) 
U206a: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000002, U580d) !m0,m2 

U206c: SAVEUIP( , 0x01, U580d) !m0 SEQW GOTO U29a9
U206d: SYNCFULL-> UFLOWCTRL( , tmp4, USTATE) 
U206e: tmp9:= ZEROEXT_DSZ32(0x000007f6) 

U2070: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp10, tmp9) 
U2071: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U0bb8
U2072: SAVEUIP( , 0x01, U1bd0) !m0 

FUN_ucode_0002074:
U2074: MOVE_DSZ32() 
FUN_ucode_0002075:
U2075: LBSYNC(0x00000001) 
U2076: SYNCFULL-> LBSYNC(0x00000007) SEQW GOTO U0164

U2078: NOP 
U2079: NOP 
U207a: NOP 

U207c: NOP 
U207d: LFNCEMARK-> unk_e7b(tmp0, tmp2) 
U207e: tmp5:= WRITEURAM( , 0x00000000, 0x006f, 64) !m2 SEQW GOTO U3965

U2080: SAVEUIP( , 0x01, U5a56) !m0 SEQW GOTO U3130
U2081: mm2:= unk_7ea(tmm0) 
U2082: tmp2:= SUB_DSZ32(0x00006000, tmp2) 

U2084: tmm0:= unk_7c2(mm2, tmm0) 
U2085: UJMPCC_DIRECT_NOTTAKEN_CONDP(tmp6, U0634) 
U2086: LFNCEMARK-> tmm6:= unk_5ff(tmm7) !m2 SEQW GOTO U0636

U2088: tmp9:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U2089: tmp6:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U208a: tmp9:= NOTAND_DSZ64(tmp6, tmp9) 

U208c: tmp9:= AND_DSZ64(0x00000800, tmp9) SEQW GOTO U4b66
U208d: tmp15:= ZEROEXT_DSZ32(0x00000001) 
U208e: PORTOUT_DSZ32_ASZ16_SC1(0x5114,  , tmp15) !m2 SEQW URET1

U2090: SAVEUIP( , 0x01, U3148) !m0 SEQW GOTO U3130
U2091: tmp3:= SELECTCC_DSZ32_CONDNB(tmp11, 0x00000001) 
U2092: tmp3:= AND_DSZ32(tmp6, tmp3) 

U2094: tmm3:= unk_702(mm3) 
U2095: tmm1:= unk_496(tmm1, tmm3) 
U2096: tmm3:= FMOV( , tmm1) SEQW GOTO U2281

U2098: tmp0:= READURAM( , 0x0007, 64) 
U2099: WRITEURAM(tmp0, 0x0078, 32) 
U209a: tmp9:= MOVEFROMCREG_DSZ64( , 0x2dc, 32) !m1 

U209c: tmp0:= AND_DSZ32(0x00600000, tmp0) 
U209d: tmp0:= SUB_DSZ32(0x00200000, tmp0) 
U209e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U28d8) SEQW GOTO U28d5

U20a0: SAVEUIP( , 0x01, U0584) !m0 SEQW GOTO U3130
U20a1: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U20a2: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U20a4: tmp0:= NOTAND_DSZ32(0x00030000, tmp0) 
U20a5: tmp0:= READAFLAGS( , tmp0) !m2 
U20a6: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U5888

U20a8: tmp0:= MOVEFROMCREG_DSZ64( , 0x068) 
U20a9: tmp0:= SUB_DSZ16(0x00003bac, tmp0) 
U20aa: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U3bae) 

U20ac: tmp11:= READURAM( , 0x000f, 64) 
U20ad: tmp1:= AND_DSZ32(0x00000070, tmp11) 
U20ae: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2128) SEQW GOTO U3e0a

U20b0: tmp15:= READURAM( , 0x0007, 64) 
U20b1: WRITEURAM(tmp15, 0x0078, 32) SEQW SAVEUIP1 U20b2SEQW GOTO U3130
U20b2: tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 

U20b4: tmp3:= MOVEFROMCREG_DSZ64( , 0x281, 32) !m1 
U20b5: tmp2:= NOTAND_DSZ32(tmp3, tmp2) SEQW GOTO U64ac
U20b6: tmp13:= SAVEUIP(0x00, U08b6) SEQW URET1

U20b8: MOVETOCREG_BTS_DSZ64( , 0x0000000c, 0x29e) !m1 
U20b9: SAVEUIP_REGOVR(0x01, U20ba, 0x000e) !m0 SEQW GOTO U2b0d
U20ba: NOP 

U20bc: SAVEUIP( , 0x01, U19e1) !m0 SEQW GOTO U3130
FUN_ucode_00020bd:
U20bd: SYNCFULL-> tmp1:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U20be: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x8404) !m2 

U20c0: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U20c6) !m0,m1 
U20c1: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U20c2) !m1 SEQW GOTO U5e0d
U20c2: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000009, U20c6) !m1 

U20c4: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x9700) !m2 
U20c5: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U20c6) !m1 SEQW GOTO U5e0d
U20c6: URET(0x01) !m0 

U20c8: SAVEUIP( , 0x01, U289d) !m0 SEQW GOTO U3130
U20c9: tmp0:= ZEROEXT_DSZ32(0x00006ec3) 
U20ca: tmp0:= CONCAT_DSZ16(tmp0, 0x000043a7) 

U20cc: tmp15:= ZEROEXT_DSZ32(0x00003b6d) 
U20cd: tmp15:= CONCAT_DSZ16(tmp15, 0x00003210) 
U20ce: tmp0:= CONCAT_DSZ32(tmp0, tmp15) SEQW GOTO U2485

U20d0: tmp11:= READURAM( , 0x000f, 64) 
U20d1: WRITEURAM(tmp11, 0x0048, 64) 
U20d2: SAVEUIP( , 0x01, U0e65) !m0 SEQW GOTO U3130

U20d4: tmp0:= ZEROEXT_DSZ32(0x60000000) 
U20d5: MOVETOCREG_DSZ64(tmp0, 0x7f6) !m2 
U20d6: tmp14:= ZEROEXT_DSZ16(0x0000371a) SEQW GOTO U5000

U20d8: tmp11:= READURAM( , 0x000f, 64) 
U20d9: WRITEURAM(tmp11, 0x0048, 64) 
U20da: SAVEUIP( , 0x01, U1bd1) !m0 SEQW GOTO U3130

U20dc: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
U20dd: SYNCFULL-> MOVETOCREG_BTR_DSZ64(tmp0, 0x00000012, 0x2cd) !m0,m1 
U20de: FETCHFROMEIP0_ASZ64() !m1 SEQW UEND3

U20e0: SAVEUIP( , 0x01, U3b99) !m0 SEQW GOTO U3130
U20e1: tmp0:= SHR_DSZ32(tmp0, 0x00000007) 
U20e2: MOVETOCREG_DSZ64(tmp0, 0x6c5) !m2 

U20e4: WRITEURAM( , 0x00000000, 0x0053, 64) !m2 
U20e5: tmp1:= READURAM( , 0x0020, 64) 
U20e6: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000001f, U6732) !m0,m1 SEQW GOTO U0c52

U20e8: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x00b) 
U20e9: MOVETOCREG_BTS_DSZ64( , 0x00000004, 0x63a) 
U20ea: tmp0:= MOVEFROMCREG_DSZ64( , 0x63e) 

U20ec: tmp1:= SHR_DSZ32(tmp0, 0x00000008) 
U20ed: tmp0:= NOTAND_DSZ32(tmp1, tmp0) 
U20ee: tmp0:= AND_DSZ32(0x00000ff0, tmp0) SEQW GOTO U06de

U20f0: tmp3:= PINTMOVDTMM2I_DSZ32(tmm4) 
U20f1: tmp3:= AND_DSZ32(0x0000003f, tmp3) 
U20f2: tmm6:= unk_624(tmm3, tmm3) 

U20f4: tmp4:= PINTMOVDTMM2I_DSZ32(tmm6) 
U20f5: tmp4:= AND_DSZ32(0x0000003f, tmp4) 
U20f6: tmp5:= SHL_DSZ32(tmp4, 0x00000006) 

U20f8: tmp5:= OR_DSZ32(tmp3, tmp5) 
U20f9: tmm6:= unk_704(mm5) 
U20fa: tmm6:= unk_620(tmm6) 

U20fc: tmp2:= PINTMOVDTMM2I_DSZ32(tmm6) 
U20fd: tmp5:= AND_DSZ32(0x00000002, tmp7) 
U20fe: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U2100) SEQW GOTO U2105

U2100: tmp12:= OR_DSZ16(0x00000001, tmp12) 
U2101: tmp3:= MOVEFROMCREG_DSZ64( , 0x486) 
U2102: tmp4:= AND_DSZ8(0x00000001, tmp3) 

U2104: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U1a50) 
U2105: SAVEUIP( , 0x01, U1432) !m0 
U2106: UJMP( , tmp2) 

U2108: unk_dff() 
U2109: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x63a) !m2 
U210a: MOVETOCREG_OR_DSZ64( , 0x00000007, 0x63e) !m0 

U210c: unk_eff() 
U210d: WRITEURAM(tmp15, 0x000c, 64) 
U210e: tmp15:= MOVEFROMCREG_DSZ64( , 0x510) SEQW GOTO U041c

U2110: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U7779
U2111: tmp15:= MOVEFROMCREG_DSZ64( , 0x527) 
U2112: MOVETOCREG_OR_DSZ64(tmp15, 0x00000003, 0x527) !m0 

U2114: tmp15:= MOVEFROMCREG_DSZ64( , 0x001) 
U2115: WRITEURAM(tmp15, 0x000c, 32) 
U2116: LBSYNC(0x00000001) SEQW GOTO U2772

U2118: WRITEURAM(tmp15, 0x000c, 64) 
U2119: tmp15:= MOVEFROMCREG_DSZ64( , 0x510) 
U211a: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000013, U074d) !m0 

U211c: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000009, U22e6) !m1 
U211d: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000a, U22e6) !m0,m1 
U211e: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000005, U1d1e) !m2 SEQW GOTO U32a9

U2120: WRITEURAM(tmp15, 0x000c, 64) 
U2121: tmp15:= MOVEFROMCREG_DSZ64( , 0x527) 
U2122: MOVETOCREG_BTS_DSZ64(tmp15, 0x527) !m2 

U2124: tmp15:= MOVEFROMCREG_DSZ64( , 0x00c) 
U2125: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000013, U5c94) !m0,m2 
U2126: tmp15:= MOVEFROMCREG_DSZ64( , 0x001) SEQW GOTO U1ad1

U2128: tmp12:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
U2129: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp12, 0x00000007, U6f20) !m0,m1 
U212a: tmp0:= READURAM( , 0x001c, 64) 

U212c: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x2f1, 32) !m1 
U212d: PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , 0x00000000) !m2 
U212e: tmp0:= MOVEFROMCREG_DSZ64( , 0x2eb, 32) !m1 

U2130: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U212e) !m1 
U2131: tmp0:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U2132: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000005, 0x29d) !m1 

U2134: tmp11:= READURAM( , 0x000f, 64) 
U2135: tmp11:= NOTAND_DSZ32(0x00000070, tmp11) 
U2136: WRITEURAM(tmp11, 0x000f, 32) 

U2138: tmp13:= SHR_DSZ32(tmp11, 0x00000010) 
U2139: tmp13:= AND_DSZ32(0x0000000f, tmp13) 
U213a: CMPUJZ_DIRECT_NOTTAKEN(tmp13, 0x00000006, U5fcd) !m0,m2 

U213c: tmp13:= AND_DSZ32(0x00000007, tmp11) 
U213d: CMPUJZ_DIRECT_NOTTAKEN(tmp13, 0x00000003, U5fcd) !m0,m2 
U213e: LFNCEMARK-> SAVEUIP( , 0x01, U5fcd) !m0 SEQW GOTO U208d

U2140: SAVEUIP(rsp, 0x01, U2aa1) !m0 SEQW GOTO U3130
U2141: tmp0:= PORTIN_DSZ8_ASZ16_SC1(tmp1) 
U2142: LFNCEMARK-> tmp10:= PORTIN_DSZ8_ASZ16_SC1(tmp1) 

U2144: tmp0:= CONCAT_DSZ8(tmp10, tmp0) SEQW GOTO U5b88
U2145: tmp15:= MOVEFROMCREG_DSZ64( , 0x001) 
U2146: SYNCFULL-> UFLOWCTRL( , tmp15, URET0) 

U2148: tmp15:= READURAM( , 0x000c, 64) SEQW URET0
U2149: tmp0:= unk_d9b(tmp1) 
U214a: LFNCEMARK-> tmp10:= PORTIN_DSZ8_ASZ16_SC1(tmp1) 

U214c: tmp0:= NOTAND_DSZ32(0xff000000, tmp0) 
U214d: tmp10:= SHL_DSZ32(tmp10, 0x00000018) 
U214e: tmp0:= OR_DSZ32(tmp0, tmp10) SEQW GOTO U5b88

U2150: MSSTOP-> tmp4:= ZEROEXT_DSZ32N(r64dst) !m1 SEQW GOTO U4644
U2151: tmp0:= PORTIN_DSZ16_ASZ16_SC1(tmp1) 
U2152: LFNCEMARK-> tmp10:= PORTIN_DSZ16_ASZ16_SC1(tmp1) 

U2154: tmp0:= CONCAT_DSZ16(tmp10, tmp0) SEQW GOTO U5b88
U2155: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U5e50) !m2 
U2156: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U5e6c) !m2 

U2158: WRITEURAM(tmp7, 0x0022, 64) !m2 SEQW GOTO U21b8
U2159: tmp0:= PORTIN_DSZ8_ASZ16_SC1(tmp1) 
U215a: LFNCEMARK-> tmp10:= unk_d9b(tmp1) 

U215c: tmp10:= SHL_DSZ32(tmp10, 0x00000008) SEQW GOTO U214e
U215d: tmp13:= MOVEFROMCREG_DSZ64( , 0x070) 
U215e: tmp13:= AND_DSZ32(0x00000002, tmp13) 

U2160: tmp13:= SHL_DSZ32(tmp13, 0x00000003) 
U2161: SYNCFULL-> MOVETOCREG_DSZ64(tmp13, 0x63a) !m2 SEQW URET1
U2162: PORTOUT_DSZ32_ASZ16_SC1(0x00d4,  , 0x00000000) !m2 SEQW GOTO U03e6

U2164: STAD_DSZ32_ASZ32_SC1(tmp2, mode=0x18,  , tmp4) !m1,m2 
U2165: rax:= CMOVCC_DSZ64_CONDZ(rax, tmp3) !m2 SEQW UEND0
U2166: NOP SEQW GOTO U3ae5

U2168: STAD_DSZ32_ASZ32_SC1(tmp2, mode=0x18,  , tmp4) !m1,m2 
U2169: rax:= CMOVCC_DSZ8_CONDNZ(tmp1, rax) !m2 SEQW UEND0
U216a: NOP SEQW GOTO U1af1

U216c: STAD_DSZ32_ASZ32_SC1(tmp8, mode=0x18,  , tmp3) 
U216d: unk_12f(tmp2, tmp0) !m2 SEQW UEND0
U216e: NOP SEQW GOTO U2b7d

FUN_ucode_0002170:
U2170: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U2171: PORTOUT_DSZ32_ASZ16_SC1(0x5110,  , tmp15) !m2 SEQW URET1
U2172: NOP SEQW GOTO U03e4

U2174: tmp15:= ZEROEXT_DSZ32(0x00000001) 
U2175: PORTOUT_DSZ32_ASZ16_SC1(0x5110,  , tmp15) !m2 SEQW URET1
U2176: NOP SEQW GOTO U03e4

FUN_ucode_0002178:
U2178: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U2179: tmpv0:= READAFLAGS( , tmpv0) !m2 SEQW URET1
U217a: PORTOUT_DSZ32_ASZ16_SC1(0x00d4,  , 0x00000000) !m2 SEQW GOTO U674e

U217c: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U402a) 
U217d: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U4042) 
U217e: tmp7:= READURAM( , 0x0022, 64) !m2 SEQW GOTO U21b8

U2180: tmp7:= MOVEFROMCREG_DSZ64( , 0x48f) 
U2181: LFNCEMARK-> tmm7:= unk_698( , xmm0) 
U2182: tmp5:= MOVEFROMCREG_DSZ64( , 0x00c) 

U2184: tmp2:= AND_DSZ32(0x00000400, tmp5) 
U2185: tmp8:= MOVEFROMCREG_DSZ64( , 0x48c) 
U2186: tmp2:= SHR_DSZ32(tmp2, 0x00000003) SEQW GOTO U5a85

U2188: tmp4:= MOVEFROMCREG_DSZ64( , 0x48f) 
U2189: tmp5:= MOVEFROMCREG_DSZ64( , 0x013) SEQW GOTO U368d
U218a: tmp0:= MOVEFROMCREG_DSZ64( , 0x513) 

U218c: tmp15:= CONCAT_DSZ32(0x00030000) 
U218d: tmp0:= NOTAND_DSZ64(tmp15, tmp0) 
U218e: MOVETOCREG_DSZ64(tmp0, 0x513) !m2 

U2190: tmp2:= CONCAT_DSZ32(tmp2, 0x00038003) SEQW SAVEUIP0 U2191SEQW GOTO U2515
U2191: tmp1:= LEA_DSZ8_ASZ32_SC1(tmp8, DS, r64idx, mode=0x18) 
U2192: LFNCEMARK-> unk_d04(tmp8, r64idx) !m1 

U2194: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x525) 
U2195: tmp0:= NOTAND_DSZ64(0x00000fff, tmp2) 
U2196: tmp15:= MOVEFROMCREG_DSZ64( , 0x51e) 

U2198: tmp15:= XOR_DSZ64(tmp0, tmp15) 
U2199: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000001, U770d) !m1,m2 
U219a: tmp15:= AND_DSZ32(0x00000fff, tmp1) 

U219c: rax:= OR_DSZ64(tmp15, tmp0) 
U219d: rbx:= ZEROEXT_DSZ64(tmp1) 
U219e: rcx:= AND_DSZ32(0x00000078, tmp2) SEQW GOTO U1bd0

U21a0: tmp7:= ZEROEXT_DSZ32(0x00000001) SEQW GOTO U2181
FUN_ucode_00021a1:
U21a1: PORTOUT_DSZ32_ASZ16_SC1(0x00c8,  , tmp0) !m2 
U21a2: NOP SEQW URET1

U21a4: NOP 
U21a5: tmp1:= XOR_DSZ32(0x40000000, tmp1) 
U21a6: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000001e, U21a8) !m0,m1 SEQW GOTO U21a9

U21a8: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U21a9: tmp0:= ZEROEXT_DSZ32(tmp0) 
U21aa: UJMP( , tmp1) 

U21ac: rdx:= CONCAT_DSZ16(0x00002800, rdx) 
U21ad: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U21b0
U21ae: rdx:= OR_DSZ32(0x00000800, rdx) 

U21b0: tmp0:= SHR_DSZ64(tmp10, 0x0000000e) 
U21b1: tmp0:= NOTAND_DSZ32(tmp0, 0x00100000) 
U21b2: rdx:= OR_DSZ32(tmp0, rdx) SEQW GOTO U0282

U21b4: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x4840) !m2 
U21b5: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x4848) !m2 
U21b6: rax:= ZEROEXT_DSZ32(tmp0) SEQW GOTO U21c8

U21b8: tmp0:= READURAM( , 0x0008, 64) !m2 
U21b9: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U21ba: SYNCFULL-> UFLOWCTRL( , tmp0, MSLOOPCTR) SEQW GOTO U5ab2

U21bc: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x4850) !m2 
U21bd: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x4858) !m2 
U21be: rax:= ZEROEXT_DSZ32(tmp0) SEQW GOTO U21c8

U21c0: tmp0:= ZEROEXT_DSZ32(0x00000007) 
U21c1: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000004, 0x2db) !m1,m2 SEQW GOTO U079e
U21c2: NOP 

U21c4: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x4860) !m2 
U21c5: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x4868) !m2 
U21c6: rax:= ZEROEXT_DSZ32(tmp0) 

U21c8: rbx:= SHR_DSZ64(tmp0, 0x00000020) 
U21c9: rcx:= ZEROEXT_DSZ32(tmp1) 
U21ca: rdx:= SHR_DSZ64(tmp1, 0x00000020) SEQW GOTO U1bd0

U21cc: NOP SEQW GOTO U1bd0
U21cd: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U21ce: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U21cd) !m1 

U21d0: tmp1:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 
U21d1: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U3d12) !m0,m1,m2 
U21d2: tmp14:= ZEROEXT_DSZ32(0x00005796) SEQW GOTO U3ece

U21d4: SAVEUIP_REGOVR(0x01, U21d5, 0x0023) !m0 SEQW GOTO U3df2
U21d5: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp3, U1bd0) 
U21d6: tmp1:= unk_222(tmp3) 

U21d8: tmp0:= SHL_DSZ32(tmp1, 0x00000008) 
U21d9: tmp3:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000001) 
U21da: tmp0:= SHR_DSZ32(tmp0, tmp3) SEQW GOTO U29a1

U21dc: rdx:= OR_DSZ32(0x00000100, rdx) SEQW GOTO U1bd0
U21dd: tmp2:= SUB_DSZ32(0x00000001, tmp1) 
U21de: tmm4:= unk_7c2(mm2, tmm1) 

U21e0: tmm4:= unk_496(tmm4, tmm4) 
U21e1: tmm2:= unk_6a7(tmm1, tmm0) 
U21e2: mm6:= unk_76a(tmm2) SEQW GOTO U410d

U21e4: tmp0:= READURAM( , 0x0010, 64) 
U21e5: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U21e6: tmp0:= unk_222(tmp0) 

U21e8: tmp0:= SUB_DSZ32(tmp0, 0x00000020) 
U21e9: rax:= ADD_DSZ8(tmp0, 0x00003020) SEQW GOTO U1bd0
U21ea: tmm0:= unk_7c2(mm5, 0x00000000) 

U21ec: tmm0:= unk_69d( , tmm0) 
U21ed: tmp9:= unk_6a0() 
U21ee: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp8, 0x00000020, 0x48c) !m2 

U21f0: LFNCEWAIT-> mm0:= unk_6a1(tmm1, tmm0) !m2 
U21f1: NOP 
U21f2: NOP 

U21f4: LFNCEMARK-> tmp7:= AND_DSZ16(0x00000020, tmp1) 
U21f5: NOP 
U21f6: NOP 

U21f8: LFNCEWAIT-> tmp8:= MOVEFROMCREG_DSZ64( , 0x48c) 
U21f9: tmp9:= OR_DSZ32(0x00008080, tmp8) 
U21fa: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp7) 

U21fc: tmp9:= CMOVCC_DSZ16_CONDZ(tmp9, tmp8) 
U21fd: MOVETOCREG_DSZ64(tmp9, 0x48c) !m2 
U21fe: SYNCFULL-> NOP SEQW GOTO U1bd0

U2200: tmp0:= unk_d61(tmp2) 
U2201: unk_e6b(tmp0) !m1,m2 
U2202: tmp6:= CONCAT_DSZ32(tmp0) 

U2204: tmp6:= TEST_DSZ64(tmp6, tmp6) 
U2205: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U07fe) 
U2206: tmp7:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) SEQW GOTO U01b2

U2208: tmp12:= SHR_DSZ64(tmp0, 0x00000020) 
U2209: tmp14:= SAVEUIP(0x01, U23e2) !m0 
U220a: tmp7:= TESTUSTATE(tmp0, SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U576d

U220c: tmp14:= SAVEUIP(0x01, U249d) !m0 
U220d: tmp13:= SAVEUIP(0x00, U576d) SEQW GOTO U01c2
U220e: tmp13:= SAVEUIP(0x00, U08ce) SEQW URET1

U2210: tmp7:= MOVEFROMCREG_DSZ64( , 0x000) 
U2211: tmp7:= AND_DSZ32(tmp7, 0x002c6800) 
U2212: tmp7:= OR_DSZ32(tmp7, 0x00008008) SEQW GOTO U5b25

U2214: SAVEUIP_REGOVR(0x01, U2215, 0x0024) !m0 SEQW GOTO U1cfa
U2215: tmp2:= WRMSLOOPCTRFBR( , 0x00000003) 
U2216: tmp2:= SHL_DSZ32(tmp2, 0x00000006) 

U2218: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bc00, tmp2) !m2 
U2219: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U1bd0) !m2 
U221a: unk_edf(tmp0) 

U221c: tmp2:= ADD_DSZ32(0x00000040, tmp2) 
U221d: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2218
U221e: NOP SEQW UEND0

U2220: FETCHFROMEIP1_ASZ64( , tmp9) !m1 
U2221: tmp13:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 
U2222: GENARITHFLAGS(tmp13) !m2 SEQW UEND0

U2224: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000000, U3a1d) !m1,m2 
U2225: tmp14:= ZEROEXT_DSZ32(0x00002bf9) SEQW GOTO U5bf6
U2226: NOP 

U2228: FETCHFROMEIP1_ASZ64( , tmp9) !m1 
U2229: tmp14:= MOVEFROMCREG_DSZ64( , 0x01b) 
U222a: SYNCFULL-> MOVETOCREG_DSZ64(tmp14, 0x752) !m2 SEQW GOTO U0c7d

U222c: tmp2:= NOTAND_DSZ32(0x0000003f, tmp2) 
U222d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2769) SEQW GOTO U4f5d
U222e: NOP 

U2230: tmp11:= AND_DSZ32(0x00000003, tmp2) 
U2231: tmp13:= SAVEUIP(0x00, U0de1) 
U2232: MOVETOCREG_DSZ64(0x00000008, 0x000) SEQW GOTO U3e54

U2234: tmp10:= ZEROEXT_DSZ32(tmp6) 
U2235: LFNCEMARK-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U2236: tmp1:= AND_DSZ32(0x00030000, tmp9) 

U2238: MOVETOCREG_OR_DSZ64(tmp0, 0x7fe, tmp1) !m2 
U2239: tmp0:= ZEROEXT_DSZ32(0x00000009) 
U223a: tmp1:= RDSEGFLD(UNK_SEG_04, SEL) 

U223c: tmp13:= SHL_DSZ32(tmp13, 0x0000000e) 
U223d: tmp1:= CONCAT_DSZ16(tmp13, tmp1) 
U223e: SAVEUIP( , 0x00, U73ae) 

U2240: LFNCEWAIT-> tmp15:= RDSEGFLD(CS, SEL+FLGS+LIM) 
U2241: WRSEGFLD(tmp15, UNK_SEG_09, FLGS) 
U2242: tmp15:= RDSEGFLD(CS, BASE) 

U2244: LFNCEMARK-> WRSEGFLD(tmp15, UNK_SEG_09, BASE) 
U2245: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4f60
U2246: URET(0x00) 

U2248: MOVETOCREG_DSZ64(tmp14, 0x000) 
U2249: tmp12:= ZEROEXT_DSZ16(0x000000c1) 
U224a: tmp5:= TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U224d

U224c: tmp5:= ZEROEXT_DSZ32(0x00000010) 
U224d: WRITEURAM(tmp6, 0x006f, 64) 
U224e: tmp13:= ZEROEXT_DSZ32(0x00000003) SEQW GOTO U01da

U2250: tmp12:= ZEROEXT_DSZ16(0x00001bf9) 
U2251: tmp9:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U2252: tmp9:= READAFLAGS( , tmp9) !m2 

U2254: tmp10:= ZEROEXT_DSZ32(tmp9) 
U2255: tmp13:= ZEROEXT_DSZ32(0x00000002) 
U2256: tmp5:= WRITEURAM( , 0x00000000, 0x006f, 64) SEQW GOTO U01da

U2258: tmp12:= ZEROEXT_DSZ16(0x000000c1) 
U2259: tmp9:= ZEROEXT_DSZ32(tmp10) 
U225a: tmp13:= ZEROEXT_DSZ32(0x00000000) SEQW GOTO U2256

U225c: tmp6:= ZEROEXT_DSZ32(0x00000c0c) 
U225d: tmp6:= CONCAT_DSZ16(0x00002e83, tmp6) SEQW GOTO U5604
U225e: NOP 

U2260: tmp12:= ZEROEXT_DSZ16(0x00001bf9) 
U2261: tmp9:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U2262: tmp9:= READAFLAGS( , tmp9) !m2 

U2264: tmp10:= ZEROEXT_DSZ32(tmp9) 
U2265: tmp13:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U207d
U2266: tmp13:= SAVEUIP(0x00, U400d) SEQW URET1

U2268: tmp12:= ZEROEXT_DSZ16(0x000000c1) 
U2269: tmp9:= ZEROEXT_DSZ32(tmp10) 
U226a: tmp13:= ZEROEXT_DSZ32(0x00000000) SEQW GOTO U207d

FUN_ucode_000226c:
U226c: MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) 
U226d: tmp14:= MOVEFROMCREG_DSZ64( , 0x51b) 
U226e: tmp14:= ZEROEXT_DSZ16(0x00001000, tmp14) SEQW GOTO U0ead

caseD_2270:
U2270: tmp0:= MOVEFROMCREG_DSZ64( , 0x692) 
U2271: tmp0:= NOTAND_DSZ32(0x00000006, tmp0) 
U2272: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp0, 0x00000001, 0x692) SEQW GOTO U1fa8

caseD_2274:
U2274: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 
U2275: tmp0:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4, 0x00000002) 
U2276: tmp4:= ADD_DSZ64(0x00000004, tmp4) SEQW GOTO U2a12

caseD_2278:
U2278: tmp3:= ZEROEXT_DSZ32(0x0000aac0) 
U2279: SAVEUIP( , 0x01, U1aa4) !m0 SEQW GOTO U0079
U227a: tmp13:= SAVEUIP(0x00, U034a) SEQW URET1

caseD_227c:
U227c: tmp2:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 
U227d: tmp4:= ADD_DSZ64(0x00000002, tmp4) 
U227e: SAVEUIP( , 0x01, U45a9) !m0 SEQW GOTO U0079

caseD_2280:
U2280: SAVEUIP( , 0x01, U3c3a) !m0 SEQW GOTO U0079
U2281: tmm1:= unk_535(tmm3, tmm1) !m1 
U2282: SYNCWAIT-> tmm7:= unk_430(tmm1, tmm7) !m1 SEQW URET1

caseD_2284:
U2284: SAVEUIP( , 0x01, U1b0d) !m0 SEQW GOTO U0079
U2285: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7) 
U2286: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000008) SEQW URET1

caseD_2288:
U2288: SAVEUIP( , 0x01, U2de6) !m0 SEQW GOTO U0079
U2289: BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x00000007, U64d9) !m0,m1 
U228a: PORTOUT_DSZ32_ASZ16_SC1(tmp4,  , tmp5) SEQW URET0

caseD_228c:
U228c: SAVEUIP( , 0x01, U2f0a) !m0 SEQW GOTO U0079
U228d: NOP 
U228e: NOP 

U2290: tmp10:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000001a0) 
U2291: tmp10:= SHR_DSZ64(tmp10, 0x00000020) 
U2292: tmp0:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp4) SEQW GOTO U0061

caseD_2294:
U2294: tmp0:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 
U2295: tmp4:= ADD_DSZ64(0x00000002, tmp4) 
U2296: UJMP( , tmp0) 

caseD_2298:
U2298: SAVEUIP_REGOVR(0x01, U2299, 0x0018) !m0 
U2299: SAVEUIP( , 0x00, U0d1d) 
U229a: SAVEUIP( , 0x01, U02b2) !m0 SEQW GOTO U0079

caseD_229c:
U229c: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U229d: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000004) 
U229e: tmp4:= ADD_DSZ64(0x00000008, tmp4) SEQW GOTO U5df2

caseD_22a0:
U22a0: tmp2:= ZEROEXT_DSZ32(0x0000000f) 
U22a1: SAVEUIP_REGOVR(0x01, U22a2, 0x0032) !m0 
U22a2: SAVEUIP( , 0x01, U28e9) !m0 SEQW GOTO U07b5

U22a4: PORTOUT_DSZ32_ASZ16_SC1(0x490c,  , 0x00000000) !m2 
U22a5: PORTOUT_DSZ32_ASZ16_SC1(0x4910,  , 0x00000000) !m2 
U22a6: tmp0:= READURAM( , 0x0009, 64) SEQW GOTO U06fe

U22a8: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 
U22a9: tmp2:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4, 0x00000002) 
U22aa: tmp4:= ADD_DSZ64(0x00000004, tmp4) SEQW GOTO U070e

caseD_22ac:
U22ac: SAVEUIP( , 0x01, U3e5e) !m0 SEQW GOTO U0079
U22ad: NOP 
U22ae: NOP 

U22b0: tmp0:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp4) 
U22b1: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000001) 
U22b2: tmp4:= ADD_DSZ64(0x00000005, tmp4) SEQW GOTO U0795

caseD_22b4:
U22b4: tmp0:= READURAM( , 0x0077, 64) 
U22b5: tmp0:= SHR_DSZ64(tmp0, 0x00000022) 
U22b6: tmp0:= AND_DSZ32(0x00000003, tmp0) SEQW GOTO U6068

U22b8: tmp4:= ADD_DSZ64(0x00000004, tmp4) 
U22b9: tmp3:= CONCAT_DSZ32(rdx, rax) 
U22ba: tmp5:= READURAM( , 0x008e, 64) SEQW GOTO U4946

caseD_22bc:
U22bc: tmp4:= ADD_DSZ64(0x0000002a, tmp4) 
U22bd: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0xffffffffffffffda) 
U22be: NOP SEQW GOTO U62d2

U22c0: tmp5:= READURAM( , 0x0077, 64) 
U22c1: tmp5:= SHR_DSZ64(tmp5, 0x00000022) 
U22c2: tmp5:= AND_DSZ32(0x00000003, tmp5) SEQW GOTO U07ad

caseD_22c4:
U22c4: tmp0:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 
U22c5: tmp4:= unk_97f(tmp4, tmp0) !m1 
U22c6: tmp15:= ZEROEXT_DSZ32(0x00007761) SEQW GOTO U2580

caseD_22c8:
U22c8: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U22c9: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U1a80) !m2 
U22ca: tmp14:= ZEROEXT_DSZ32(0x00003a82) SEQW GOTO U6034

caseD_22cc:
U22cc: tmp0:= ZEROEXT_DSZ32(0x0000000b) SEQW GOTO U290c
U22cd: NOP 
U22ce: NOP 

caseD_22d0:
U22d0: tmp0:= ZEROEXT_DSZ32(0x0000000c) SEQW GOTO U290c
U22d1: NOP 
U22d2: NOP 

caseD_22d4:
U22d4: tmp0:= ZEROEXT_DSZ32(0x0000000d) SEQW GOTO U290c
U22d5: NOP 
U22d6: NOP 

caseD_22d8:
U22d8: SAVEUIP_REGOVR(0x01, U22d9, 0x0018) !m0 
U22d9: SAVEUIP( , 0x00, U0d2d) 
U22da: SAVEUIP( , 0x01, U02b2) !m0 SEQW GOTO U0079

caseD_22dc:
U22dc: tmp4:= ADD_DSZ64(0x00000004, tmp4) 
U22dd: tmp0:= READURAM( , 0x0053, 64) !m2 
U22de: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U1f9a) !m0,m2 SEQW GOTO U0069

caseD_22e0:
U22e0: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U22e1: tmp4:= ADD_DSZ64(0x00000004, tmp4) SEQW GOTO U0da2
U22e2: tmp13:= SAVEUIP(0x00, U08be) SEQW URET1

caseD_22e4:
U22e4: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U22e5: tmp4:= ADD_DSZ64(0x00000004, tmp4) SEQW GOTO U0dbe
U22e6: WRITEURAM(tmp14, 0x0061, 64) 

U22e8: tmp15:= MOVEFROMCREG_DSZ64( , 0x524) 
U22e9: tmp15:= SHL_DSZ64(tmp15, 0x00000018) 
U22ea: WRITEURAM(tmp15, 0x0128, 64) 

U22ec: tmp15:= MOVEFROMCREG_DSZ64( , 0x511) 
U22ed: LFNCEMARK-> WRITEURAM(tmp15, 0x0027, 64) 
U22ee: unk_dff() 

U22f0: tmp15:= MOVEFROMCREG_DSZ64( , 0x070) 
U22f1: tmp15:= AND_DSZ32(0x00000200, tmp15) 
U22f2: tmp14:= READURAM( , 0x005c, 64) 

U22f4: tmp14:= OR_DSZ32(tmp15, tmp14) 
U22f5: LFNCEWAIT-> WRITEURAM(tmp14, 0x005c, 32) 
U22f6: tmp15:= MOVEFROMCREG_DSZ64( , 0x510) 

U22f8: WRITEURAM(tmp15, 0x0028, 32) 
U22f9: MOVETOCREG_BTS_DSZ64( , 0x00000009, 0x070) !m2 
U22fa: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x527) !m0 

U22fc: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp14, 0x0000000e, U2306) !m0,m1 
U22fd: tmp15:= AND_DSZ32(0x00000200, tmp15) 
U22fe: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00000020) 

caseD_:
U2300: tmp14:= READURAM( , 0x0029, 64) 
U2301: tmp14:= SHR_DSZ64(tmp14, tmp15) 
U2302: tmp14:= SHL_DSZ64(tmp14, 0x0000000c) 

U2304: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp14, 0x526) 
U2305: MOVETOCREG_OR_DSZ64( , 0x00000007, 0x527) !m0 
U2306: tmp14:= READURAM( , 0x0061, 64) SEQW GOTO U2124

caseD_1:
U2308: rsp:= ZEROEXT_DSZ64N(tmp10) !m1 SEQW GOTO U0414
U2309: tmm2:= unk_704(mm0) 
U230a: mm0:= unk_644(tmm2) 

U230c: tmp1:= ZEROEXT_DSZ32(0x0000ffff) 
U230d: tmm0:= unk_7c2(mm1, tmm0) 
U230e: mm7:= FMOV( , tmm0) !m0,m2 SEQW GOTO U1bd0

caseD_2:
U2310: SAVEUIP( , 0x00, U2174) 
U2311: SAVEUIP( , 0x01, U23f9) !m0 SEQW GOTO U23c1
U2312: tmp0:= ADD_DSZ64(0x000000c8, tmp5) 

U2314: unk_d68(tmp4, tmp9, tmp0) 
U2315: tmp0:= unk_d60(tmp4, tmp9) 
U2316: MOVETOCREG_DSZ64(tmp0, 0x7e0, 32) !m1,m2 SEQW GOTO U4db2

caseD_3:
U2318: tmp2:= SHR_DSZ16(tmp10, 0x0000000b) 
U2319: tmp2:= AND_DSZ8(0x00000007, tmp2) 
U231a: MOVETOCREG_DSZ64(tmp10, 0x48c) 

U231c: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, 0x073) SEQW GOTO U0414
U231d: NOP 
U231e: NOP 

caseD_4:
U2320: MOVETOCREG_DSZ64(tmp2, 0x7fe) SEQW GOTO U2318
U2321: mm2:= unk_72a(tmm0) 
U2322: tmm6:= unk_743(mm2, tmm6) 

U2324: tmm5:= unk_483(tmm6, tmm4) 
U2325: tmm5:= unk_53f(tmm1, tmm5) 
U2326: LFNCEMARK-> tmm7:= unk_6ee(tmm5) !m2 SEQW GOTO U01aa

caseD_5:
U2328: tmp1:= AND_DSZ32(0x000000fc, tmp6) 
U2329: tmp13:= SUB_DSZ32(0x00000034, tmp1) 
U232a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp13, U0414) 

U232c: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0,m2 
U232d: tmp13:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 
U232e: GENARITHFLAGS(tmp13) !m2 SEQW GOTO U1bd0

caseD_6:
U2330: tmp7:= RDSEGFLD(SS, SEL+FLGS+LIM) 
U2331: WRSEGFLD(tmp7, SS_USERM, SEL+FLGS+LIM) 
U2332: tmp7:= RDSEGFLD(SS, BASE) 

U2334: WRSEGFLD(tmp7, SS_USERM, BASE) 
U2335: tmp7:= RDSEGFLD(SS, FLGS) 
U2336: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x73c) !m2 SEQW GOTO U5dfa

caseD_7:
U2338: tmp7:= RDSEGFLD(SS, SEL+FLGS+LIM) 
U2339: WRSEGFLD(tmp7, SS_USERM, SEL+FLGS+LIM) 
U233a: tmp7:= RDSEGFLD(SS, BASE) 

U233c: WRSEGFLD(tmp7, SS_USERM, BASE) 
U233d: tmp7:= RDSEGFLD(SS, FLGS) 
U233e: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x73c) !m2 SEQW GOTO U68fc

caseD_8:
U2340: SAVEUIP( , 0x01, U6565) !m0 
U2341: UJMPCC_DIRECT_NOTTAKEN_CONDNO(tmp13, U01ea) 
U2342: unk_13f(tmp10) !m2 

U2344: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x7fe) !m2 SEQW GOTO U01ea
U2345: NOP 
U2346: NOP 

caseD_9:
U2348: SAVEUIP( , 0x01, U0414) !m0 SEQW GOTO U2341
U2349: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U065c) 
U234a: tmp8:= OR_DSZ16(0x00000010, tmp8) 

U234c: tmp2:= AND_DSZ16(0x00000010, tmp1) 
U234d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U50b5) 
U234e: MOVETOCREG_DSZ64(tmp8, 0x48c) !m2 SEQW GOTO U21fe

caseD_a:
U2350: tmp2:= READURAM( , 0x002c, 64) 
U2351: tmp12:= READURAM( , 0x0056, 64) 
U2352: UJMP( , tmp2) 

U2354: WRITEURAM(tmp1, 0x001f, 32) !m2 
U2355: NOP SEQW GOTO U1bec
U2356: NOP 

caseD_b:
U2358: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U2359: BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x0000000a, U235c) !m0,m1 
U235a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U4489) 

U235c: MOVETOCREG_BTS_DSZ64(tmp10, 0x00000010, 0x7fe) !m2 
U235d: SAVEUIP_REGOVR(0x01, U235e, 0x00fa) !m0 
U235e: SAVEUIP( , 0x01, U0414) !m0 SEQW GOTO U02ca

caseD_c:
U2360: SAVEUIP( , 0x00, U5ab5) 
U2361: SAVEUIP( , 0x01, U6868) !m0 SEQW GOTO U59b5
U2362: tmp14:= SAVEUIP(0x01, U0ca2) !m0 

U2364: tmp12:= ZEROEXT_DSZ8() 
U2365: tmp11:= ZEROEXT_DSZ32(0x0000220e) 
U2366: tmp8:= ZEROEXT_DSZ16(0x0000fc01) SEQW GOTO U2bde

caseD_d:
U2368: SAVEUIP( , 0x00, U5ab6) 
U2369: SAVEUIP( , 0x01, U6958) !m0 SEQW GOTO U59b5
U236a: tmm7:= unk_5b9(tmm3) 

U236c: tmm4:= unk_5b9(tmm1) 
U236d: tmp11:= ZEROEXT_DSZ32(0x00002726) 
U236e: tmp13:= ZEROEXT_DSZ64(0x000043cc) SEQW GOTO U42ea

caseD_e:
U2370: tmp7:= MOVEFROMCREG_DSZ64( , 0x01b) 
U2371: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x752) !m2 
U2372: rcx:= ZEROEXT_DSZ16N(tmp4, rcx) !m1 

U2374: BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x0000000a, U2e79) !m0,m1 
U2375: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U4596) 
U2376: UJMPCC_DIRECT_TAKEN_CONDZ(tmp10, U4596) SEQW GOTO U2e7a

caseD_f:
U2378: tmp7:= MOVEFROMCREG_DSZ64( , 0x01b) 
U2379: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x752) !m2 
U237a: tmp1:= ZEROEXT_DSZ16N(tmp4, rcx) !m1 

U237c: tmp15:= SUB_DSZN(tmp4, rcx) !m1 
U237d: tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp15) 
U237e: rcx:= CMOVCC_DSZ64_CONDNZ(tmp1, rcx) SEQW GOTO U2e79

caseD_1:
U2380: SYNCFULL-> MOVETOCREG_DSZ64(tmp5, 0x6c5) !m2 
U2381: SAVEUIP( , 0x00, U0414) SEQW GOTO U0d54
U2382: NOP 

U2384: NOP 
U2385: tmp14:= SUB_DSZ64(0x00000060, tmp0) 
U2386: WRITEURAM(tmp14, 0x008d, 64) !m2 SEQW GOTO U46dc

caseD_11:
U2388: tmp14:= MOVEFROMCREG_DSZ64( , 0x00c) 
U2389: SAVEUIP( , 0x00, U777a) 
FUN_ucode_000238a:
U238a: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0,m2 

U238c: tmp0:= MOVEFROMCREG_DSZ64( , 0x01b) 
U238d: SYNCMARK-> MOVETOCREG_DSZ64(tmp0, 0x752) !m2 SEQW URET0
U238e: BTUJB_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U1db2) !m2 SEQW GOTO U32ce

caseD_12:
U2390: tmp4:= ADD_DSZ32(0x00000001, tmp4) SEQW SAVEUIP0 U2391SEQW GOTO U238a
U2391: SYNCWAIT-> tmp14:= ZEROEXT_DSZ16(r64dst) 
U2392: tmp4:= SUB_DSZ32(tmp4, tmp14) 

U2394: SAVEUIP( , 0x01, U43f8) !m0 SEQW GOTO U0164
U2395: NOP 
U2396: NOP 

caseD_13:
U2398: tmp1:= ZEROEXT_DSZ32(0x00000001) SEQW GOTO U616c
U2399: tmp2:= AND_DSZ32(tmp3, tmp2) 
U239a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U57a6) 

U239c: tmm4:= unk_494( , tmm1) 
U239d: tmm4:= unk_57f(tmm2, tmm4) 
U239e: LFNCEWAIT-> tmm7:= unk_482(tmm4, tmm1) !m2 SEQW GOTO U0404

caseD_14:
U23a0: tmp1:= ZEROEXT_DSZ32(0x00000004) SEQW GOTO U616c
U23a1: tmp1:= ZEROEXT_DSZ32(0x000000ff) 
U23a2: tmp1:= OR_DSZ32(0x00400000, tmp1) 

U23a4: LFNCEWAIT-> tmp1:= MOVETOCREG_DSZ64(tmp1, tmp10) !m1 
U23a5: tmp5:= ZEROEXT_DSZ64(tmp5, tmp1) 
U23a6: MOVETOCREG_DSZ64(tmp5, tmp10) !m1 SEQW GOTO U332d

caseD_15:
U23a8: WRITEURAM(tmp14, 0x004e, 64) 
U23a9: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2dd) !m1 
U23aa: tmp14:= READURAM( , 0x0053, 64) 

U23ac: BTUJB_DIRECT_NOTTAKEN(tmp14, 0x00000004, U5b84) !m2 
U23ad: tmp2:= MOVEFROMCREG_DSZ64( , 0x562) 
U23ae: BTUJB_DIRECT_NOTTAKEN(tmp14, 0x00000010, U0ba9) SEQW GOTO U0bad

caseD_16:
U23b0: unk_13f(tmp10) !m2 
U23b1: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x7fe) 
U23b2: SAVEUIP( , 0x01, U0414) !m0 SEQW GOTO U01ea

U23b4: NOP 
U23b5: NOP SEQW GOTO U371c
U23b6: NOP 

caseD_17:
U23b8: unk_13f(tmp10) !m2 
U23b9: MOVETOCREG_DSZ64(tmp10, 0x7fe) 
U23ba: SAVEUIP( , 0x01, U6565) !m0 SEQW GOTO U01ea

U23bc: NOP 
U23bd: NOP SEQW GOTO U7880
U23be: NOP 

caseD_18:
U23c0: SAVEUIP( , 0x00, U37a2) 
FUN_ucode_00023c1:
U23c1: tmp2:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 
U23c2: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bd00) !m2 

U23c4: tmp1:= ADD_DSZ64(tmp2, tmp1) 
U23c5: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000bd00,  , tmp1) !m2 SEQW URET0
U23c6: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000c, U333e) !m1,m2 SEQW GOTO U6380

caseD_19:
U23c8: tmp2:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 
U23c9: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bd40) !m2 
U23ca: tmp1:= ADD_DSZ64(tmp2, tmp1) 

U23cc: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000bd40,  , tmp1) !m2 
U23cd: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp13, U0d65) SEQW GOTO U452e
U23ce: tmp13:= SAVEUIP(0x00, U08d6) SEQW URET1

caseD_1a:
U23d0: SAVEUIP( , 0x00, U0d70) 
U23d1: SAVEUIP_REGOVR(0x01, U23d2, 0x0004) !m0 SEQW GOTO U32cd
U23d2: tmp0:= READURAM( , 0x0020, 64) 

U23d4: tmp0:= SHR_DSZ32(tmp0, 0x00000001) 
U23d5: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U23d6: tmp0:= ADD_DSZ32(tmp0, 0x00000006) SEQW GOTO U054c

caseD_1b:
U23d8: NOP SEQW SAVEUIP1 U23d9SEQW GOTO U0312
U23d9: tmp0:= READURAM( , 0x0009, 64) 
U23da: MOVETOCREG_DSZ64(tmp0, 0x20f, 32) !m1 

U23dc: SAVEUIP( , 0x00, U23cd) SEQW GOTO U23d1
U23dd: NOP 
U23de: NOP 

caseD_1c:
U23e0: NOP 
U23e1: NOP SEQW GOTO U0414
U23e2: LFNCEMARK-> unk_e6b(tmp0, tmp2) 

U23e4: tmp1:= AND_DSZ32(0x00000800, tmp12) 
U23e5: tmp12:= SELECTCC_DSZ32_CONDZ(tmp1, tmp12) 
U23e6: tmp3:= ZEROEXT_DSZ16(tmp7, tmp12) SEQW GOTO U2be8

caseD_1d:
U23e8: NOP 
U23e9: SAVEUIP( , 0x01, U0414) !m0 SEQW GOTO U2341
U23ea: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 

U23ec: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000008, U05f6) 
U23ed: tmp5:= ZEROEXT_DSZ64(tmp3) 
U23ee: tmp12:= ADD_DSZ64(0x00000018, tmp5) SEQW GOTO U2eb2

caseD_1e:
U23f0: MOVETOCREG_DSZ64( , 0x00000000, 0x065) !m2 
U23f1: MOVETOCREG_DSZ64(tmp10, 0x7f8) !m2 
U23f2: TESTUSTATE( , SYS, !0x0800) !m0,m1 ? SEQW GOTO U0414

U23f4: MOVETOCREG_SHR_DSZ64(tmp10, 0x00000020, 0x004) !m2 SEQW GOTO U5a55
U23f5: NOP 
U23f6: NOP 

caseD_1f:
U23f8: NOP SEQW SAVEUIP0 U23f9SEQW GOTO U23c1
U23f9: WRITEURAM( , 0x00000000, 0x0007, 32) 
U23fa: NOP 

U23fc: NOP SEQW GOTO U2509
U23fd: NOP 
U23fe: NOP 

caseD_2:
U2400: tmp8:= RDSEGFLD(UNK_SEG_04, BASE) 
U2401: WRSEGFLD(tmp8, FS, BASE) 
U2402: tmp8:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) 

U2404: WRSEGFLD(tmp8, FS, SEL+FLGS+LIM) SEQW GOTO U0414
U2405: NOP 
U2406: NOP 

caseD_21:
U2408: MOVETOCREG_DSZ64(tmp4, 0x7f0) 
U2409: tmp7:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U240a: MOVETOCREG_BTS_DSZ64(tmp7, 0x00000002, 0x6c3) !m0,m2 

U240c: tmp4:= MOVEFROMCREG_DSZ64( , 0x067) 
U240d: tmp7:= MOVEFROMCREG_DSZ64( , 0x065) 
U240e: tmp7:= SUB_DSZN(tmp7, tmp4) !m1 SEQW GOTO U43b4

caseD_22:
U2410: SAVEUIP( , 0x01, U0414) !m0 SEQW GOTO U5fb2
U2411: NOP 
U2412: NOP 

U2414: NOP 
U2415: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U241a
U2416: LFNCEWAIT-> tmp0:= READURAM( , 0x0014, 64) 

caseD_23:
U2418: tmp1:= CONCAT_DSZ8(tmp3, tmp2) 
U2419: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, U6a35, tmp2) !m1 
U241a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp10, U5660) SEQW GOTO U27ca

U241c: SAVEUIP_REGOVR(0x01, U241d, 0x0034) !m0 SEQW GOTO U0be9
U241d: rax:= ZEROEXT_DSZ32(tmp4) 
U241e: tmp0:= MOVEFROMCREG_DSZ64( , 0x2b9, 32) !m1 

caseD_24:
U2420: tmp0:= CONCAT_DSZ8(tmp0, 0x00000020) 
U2421: rbx:= CONCAT_DSZ16(tmp0, 0x00000800) 
U2422: tmp0:= READURAM( , 0x0010, 64) SEQW GOTO U6c84

U2424: tmp0:= ZEROEXT_DSZ32(0x00006164) 
U2425: rax:= CONCAT_DSZ16(tmp0, 0x0000a001) 
U2426: rbx:= ZEROEXT_DSZ32(0x0000ffc4) SEQW GOTO U1bd0

caseD_25:
U2428: LFNCEWTMRK-> WRITEURAM(tmp11, 0x000f, 32) 
U2429: NOP SEQW GOTO U304c
U242a: NOP 

U242c: tmp8:= ZEROEXT_DSZ32() 
U242d: rcx:= ZEROEXT_DSZ8(tmp8) SEQW GOTO U1bd0
U242e: WRITEURAM( , 0x00000000, 0x0007, 32) 

caseD_26:
U2430: tmp1:= MOVEFROMCREG_DSZ64( , 0x78e) 
U2431: tmp2:= MOVEFROMCREG_DSZ64( , 0x067) 
U2432: tmp2:= SUB_DSZ32(tmp1, tmp2) SEQW GOTO U43ae

U2434: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp9, U1bd0) 
U2435: SAVEUIP_REGOVR(0x01, U2436, 0x0023) !m0 SEQW GOTO U3df2
U2436: tmp3:= SELECTCC_DSZ32_CONDNB(tmp3, tmp3) 

caseD_27:
U2438: CMPUJZ_DIRECT_NOTTAKEN(tmp3, U1bd0, tmp9) !m2 
U2439: tmp0:= ADD_DSZ32(0x00000123, tmp9) 
U243a: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp9, 0xffffffffffffc020) SEQW GOTO U63d9

U243c: tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x4800) !m2 
U243d: tmp5:= AND_DSZ32(0x00000007, tmp5) 
U243e: tmp1:= ZEROEXT_DSZ32(0x11242020) 

caseD_28:
U2440: tmp0:= ADD_DSZ32(0x00000001, tmp5) 
U2441: tmp0:= SHL_DSZ32(tmp0, 0x00000002) 
U2442: tmp0:= SHL_DSZ64(0xffffffffffffffff, tmp0) SEQW GOTO U5b95

U2444: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x00c0) !m2 
U2445: tmp0:= BT_DSZ64(tmp0, 0x00000017) 
U2446: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000002) 

caseD_29:
U2448: tmp1:= SHR_DSZ32(tmp6, 0x00000013) 
U2449: tmp0:= NOTAND_DSZ32(tmp1, tmp0) 
U244a: rax:= OR_DSZ32(0x00000055, tmp0) SEQW GOTO U0bc9

U244c: tmp0:= BT_DSZ64(tmp6, 0x00000029) 
U244d: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00100000) 
U244e: tmp1:= OR_DSZ32(tmp0, 0x00002283) 

caseD_2a:
U2450: tmp0:= BT_DSZ64(tmp6, 0x00000037) 
U2451: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00040000) 
U2452: tmp1:= OR_DSZ32(tmp0, tmp1) SEQW GOTO U6ad9

U2454: NOP SEQW GOTO U1bd0
U2455: LFNCEWAIT-> tmp1:= LDZX_DSZ32_ASZ32_SC1(tmp4, tmp6) 
U2456: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, tmp6, tmp1) 

caseD_2b:
U2458: tmp6:= ADD_DSZ32(0x00000004, tmp6) 
U2459: tmp5:= SUB_DSZ32(0x00000004, tmp5) 
U245a: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDLE(tmp5, U39f1) SEQW URET1

U245c: NOP SEQW GOTO U1bd0
U245d: tmp1:= BTS_DSZ64(0x00000000, 0x0000003f) 
U245e: tmp11:= BT_DSZ16(tmp9, 0x0000000d) 

caseD_2c:
U2460: SYNCFULL-> tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp11) 
U2461: tmp7:= CMOVCC_DSZ64_CONDNB(tmp1, tmp7) 
U2462: tmm0:= unk_744(mm7) SEQW GOTO U517a

U2464: TESTUSTATE( , UCODE, 0x0200) ? SEQW GOTO U1bd0
U2465: tmp0:= ZEROEXT_DSZ32(0x00000404) 
U2466: rax:= CONCAT_DSZ16(0x00000730, tmp0) 

caseD_2d:
U2468: rdx:= ZEROEXT_DSZ32(0x00000603) SEQW GOTO U1bd0
U2469: NOP 
U246a: NOP 

U246c: rdx:= MOVEFROMCREG_DSZ64( , 0x2b9, 32) !m1 
U246d: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp9, U242d) 
U246e: tmp0:= ADD_DSZ32(0x00000001, tmp8) 

caseD_2e:
U2470: rcx:= CONCAT_DSZ8(tmp0, tmp8) 
U2471: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000001, tmp8) 
U2472: rax:= CMOVCC_DSZ32_CONDZ(tmp0, 0x00000005) SEQW GOTO U0bd9

U2474: NOP SEQW GOTO U1bd0
U2475: tmm7:= unk_5ba(tmm7, tmm7) 
U2476: tmm3:= unk_5b9(tmm7) 

caseD_2f:
U2478: tmp2:= OR_DSZ32(0x000006ad, tmp2) 
U2479: tmm2:= unk_704(mm2) 
U247a: tmm4:= MOVHLPS(tmm7) SEQW GOTO U4235

U247c: tmp0:= BT_DSZ64(tmp7, 0x0000002e) 
U247d: tmp1:= BT_DSZ64(tmp6, 0x0000003c) 
U247e: tmp2:= READURAM( , 0x005b, 64) 

caseD_3:
U2480: CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000000, U57f5) !m2 
U2481: CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000001, U5841) !m2 
U2482: CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000003, U5a52) !m0,m2 SEQW GOTO U3762

U2484: NOP SEQW GOTO U1bd0
U2485: tmp1:= ZEROEXT_DSZ32(0x0000124d) 
U2486: tmp1:= CONCAT_DSZ16(tmp1, 0x00001e93) 

caseD_31:
U2488: tmp15:= ZEROEXT_DSZ32(0x0000b530) 
U2489: tmp15:= CONCAT_DSZ16(tmp15, 0x0000a4d8) 
U248a: tmp1:= CONCAT_DSZ32(tmp1, tmp15) SEQW URET0

U248c: NOP SEQW GOTO U1bd0
U248d: WRITEURAM( , 0x00000000, 0x0007, 64) 
U248e: tmpv2:= READURAM( , 0x0053, 64) 

caseD_32:
U2490: unk_963(tmpv2, 0x00008253) 
U2491: tmpv0:= READURAM( , 0x0070, 64) 
U2492: SYNCFULL-> MOVETOCREG_DSZ64(tmpv0, 0x2c4, 32) !m1 SEQW URET1

U2494: tmp0:= BT_DSZ32(tmp7, 0x00000011) 
U2495: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp0, U1bd0) 
U2496: rax:= SELECTCC_DSZ32_CONDNZ(tmp9, 0x00000007) 

caseD_33:
U2498: rbx:= SELECTCC_DSZ32_CONDNZ(tmp8, 0x00000004) 
U2499: rdx:= SELECTCC_DSZ32_CONDNZ(tmp9, 0x00000003) SEQW GOTO U1bd0
U249a: tmp13:= SAVEUIP(0x00, U5a95) SEQW URET1

U249c: NOP SEQW GOTO U1bd0
U249d: LFNCEMARK-> unk_e6b(tmp0, tmp2) !m1,m2 
U249e: tmp12:= ZEROEXT_DSZ16(tmp7, tmp12) 

caseD_34:
U24a0: tmp3:= CONCAT_DSZ32(tmp3, tmp12) 
U24a1: tmp14:= SAVEUIP(0x01, U2be8) !m0 
U24a2: tmp1:= MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x7f5) !m2 SEQW GOTO U3bcc

U24a4: NOP SEQW GOTO U1bd0
U24a5: tmm4:= unk_607(tmm3, tmm2) !m2 
U24a6: LFNCEMARK-> tmp2:= AND_DSZ16(0x00000440, tmp9) 

caseD_35:
U24a8: tmp2:= SUB_DSZ16(0x00000440, tmp2) 
U24a9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U0744) 
U24aa: mm0:= FMOV( , tmm4) SEQW GOTO U0745

U24ac: NOP SEQW GOTO U1bd0
U24ad: tmp2:= READURAM( , 0x005c, 64) 
U24ae: tmp2:= NOTAND_DSZ32(0x00000200, tmp2) 

caseD_36:
U24b0: WRITEURAM(tmp2, 0x005c, 32) 
U24b1: MOVETOCREG_BTS_DSZ64( , 0x00000009, 0x00b) 
U24b2: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x527) SEQW GOTO U615e

U24b4: tmp0:= SUB_DSZ64(0x00000001, tmp8) 
U24b5: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp0, U1bd0) 
U24b6: tmp1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

caseD_37:
U24b8: tmp0:= SHR_DSZ64(tmp7, 0x00000021) 
U24b9: tmp0:= OR_DSZ32(tmp1, tmp0) 
U24ba: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000d, U1bd0) !m2 SEQW GOTO U5ba5

U24bc: tmp0:= READURAM( , 0x0087, 64) 
U24bd: tmp1:= ADD_DSZ32(tmp0, tmp0) 
U24be: rbx:= ADD_DSZ32(tmp0, tmp1) 

caseD_38:
U24c0: rax:= ZEROEXT_DSZ32(0x00000003) SEQW GOTO U1bd0
U24c1: tmp7:= MOVEFROMCREG_DSZ64( , 0x01c) 
U24c2: tmp7:= NOTAND_DSZ64(0x00004000, tmp7) 

U24c4: MOVETOCREG_DSZ64(tmp7, 0x01c) !m2 
U24c5: tmp1:= READURAM( , 0x0014, 64) 
U24c6: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U24c8) !m1 SEQW GOTO U5aa5

caseD_39:
U24c8: MOVETOCREG_BTS_DSZ64(tmp7, 0x0000000d, 0x01c) !m2 SEQW GOTO U5aac
U24c9: tmp1:= READURAM( , 0x0012, 64) 
U24ca: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U28a1) !m1 

U24cc: tmp0:= ZEROEXT_DSZ32(0x0000032d) 
U24cd: tmp0:= BTS_DSZ32(tmp0, 0x00000010) 
U24ce: SAVEUIP_REGOVR( , 0x01, U24d0, 0xa201) !m0 SEQW GOTO U6d0c

caseD_3a:
U24d0: SAVEUIP( , 0x01, U28a1) !m0 SEQW GOTO U3a34
U24d1: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, 0x7f0) !m2 
U24d2: tmp1:= READURAM( , 0x003a, 64) 

U24d4: tmp1:= BTR_DSZ64(tmp1, 0x00000020) 
U24d5: LFNCEMARK-> WRITEURAM(tmp1, 0x003a, 64) !m2 
U24d6: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U008e

caseD_3b:
U24d8: NOP SEQW GOTO U6380
U24d9: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U5865) !m2 
U24da: LFNCEMARK-> tmp0:= READURAM( , 0x0021, 64) !m2 

U24dc: LFNCEWAIT-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000001f, U24dd) !m0,m1 SEQW GOTO U24da
U24dd: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000008, U3362) !m1,m2 
U24de: tmp1:= SHR_DSZ32(tmp0, 0x0000000c) 

caseD_3c:
U24e0: tmp1:= AND_DSZ32(0x00001fff, tmp1) SEQW GOTO U5e2d
U24e1: tmp1:= SHR_DSZ64(tmp3, 0x00000022) 
U24e2: tmp1:= AND_DSZ32(tmp5, tmp1) 

U24e4: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000013, U2711) !m0,m1 
U24e5: tmp1:= READURAM( , 0x003a, 64) 
U24e6: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U24ec

caseD_3d:
U24e8: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U2711) !m1 
U24e9: tmp1:= AND_DSZ32(0xfff300f8, tmp5) 
U24ea: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 

U24ec: LFNCEMARK-> WRITEURAM(tmp5, 0x003a, 32) !m2 SEQW GOTO U6380
U24ed: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U24ee: tmp11:= ADD_DSZN(0x00000080, tmp11) !m1 

caseD_3e:
U24f0: tmp11:= SUB_DSZN(0x00000010, tmp11) !m1 
U24f1: rdi:= unk_cde(tmp11, 0x000018a0) 
U24f2: tmp12:= SUBR_DSZ64(tmp12, IMM_MACRO_01) !m0 

U24f4: tmp11:= SUB_DSZN(0x00000010, tmp11) !m1 
U24f5: rdi:= unk_cde(tmp11, 0x000018a0) 
U24f6: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U24f0

caseD_3f:
U24f8: NOP SEQW URET1
U24f9: SAVEUIP( , 0x01, U23a1) !m0 
U24fa: TESTUSTATE( , UCODE, !0x0200) !m0 ? SEQW GOTO U3780

U24fc: SYNCWTMRK-> SAVEUIP( , 0x01, U6380) !m0 SEQW GOTO U3780
U24fd: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U24fe: tmp11:= ADD_DSZN(0x00000080, tmp11) !m1 

U2500: tmp11:= SUB_DSZN(0x00000010, tmp11) !m1 
U2501: rdi:= unk_cd6(tmp11, 0x000018a0) 
U2502: tmp12:= SUBR_DSZ64(tmp12, IMM_MACRO_01) !m0 

U2504: tmp11:= SUB_DSZN(0x00000010, tmp11) !m1 
U2505: rdi:= unk_cd6(tmp11, 0x000018a0) 
U2506: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2500

U2508: NOP SEQW URET1
U2509: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U499c
U250a: tmp1:= ZEROEXT_DSZ32(0x00000324) 

U250c: tmp0:= READURAM( , 0x0012, 64) 
U250d: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U499c) 
U250e: SYNCFULL-> SAVEUIP_REGOVR( , 0x01, U2510, 0x7210) !m0 SEQW GOTO U6d0c

U2510: SAVEUIP( , 0x01, U499c) !m0 SEQW GOTO U3a34
U2511: LFNCEMARK-> NOP 
U2512: tmp2:= ZEROEXT_DSZ32(0x0002001b) 

U2514: tmp2:= CONCAT_DSZ32(tmp2, 0x00038003) 
U2515: tmp0:= NOTAND_DSZ64(tmp2, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U2516: tmp1:= READURAM( , 0x003c, 64) 

U2518: tmp1:= AND_DSZ64(tmp2, tmp1) 
U2519: tmp0:= OR_DSZ64(tmp1, tmp0) 
U251a: LFNCEWAIT-> tmp0:= MOVETOCREG_BTS_DSZ64(tmp0, 0x00000025, 0x752) 

U251c: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x01b) SEQW URET0
FUN_ucode_000251d:
U251d: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U1a12
U251e: tmp0:= READURAM( , 0x0012, 64) 

U2520: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000006, U1a12) !m0,m2 
FUN_ucode_0002521:
U2521: SAVEUIP_REGOVR( , 0x01, U2522, 0x3240) !m0 SEQW GOTO U6d0a
U2522: tmpv0:= SAVEUIP(tmp6, 0x01, U334d) !m0 

U2524: SAVEUIP( , 0x00, U3775) SEQW URET1
U2525: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U5260
U2526: tmp1:= ZEROEXT_DSZ32(0x0000034d) 

U2528: tmp3:= READURAM( , 0x0012, 64) 
U2529: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000000d, U5260) !m2 
U252a: SAVEUIP_REGOVR( , 0x01, U252c, 0x5413) !m0 SEQW GOTO U6d0c

U252c: SAVEUIP( , 0x01, U5260) !m0 SEQW GOTO U3a34
U252d: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U252e: tmp0:= AND_DSZ32(0x0000ffff, tmp0) 

U2530: tmp1:= OR_DSZ32(0x00000001, tmp1) 
U2531: tmp0:= SHL_DSZ32(tmp0, 0x0000000f) 
U2532: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp0, 0x6a4, tmp1) !m2 

U2534: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 
U2535: tmp0:= READURAM( , 0x0021, 64) 
U2536: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U3362) !m1,m2 

U2538: tmp0:= READURAM( , 0x0037, 64) !m2 
U2539: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U24da) !m1 SEQW GOTO U3362
U253a: LFNCEMARK-> unk_e7b(tmp0, tmp2) 

U253c: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U1bd0
U253d: LFNCEWAIT-> tmp7:= RDSEGFLD(TSS, BASE) 
U253e: tmp3:= CONCAT_DSZ32(tmp3, tmp7) 

U2540: LFNCEMARK-> WRSEGFLD(tmp3, TSS, BASE) SEQW GOTO U1bd0
U2541: tmp1:= PORTIN_DSZ32_ASZ16_SC1(tmp4) 
U2542: tmp7:= PORTIN_DSZ32_ASZ16_SC1(tmp4) 

U2544: tmp7:= CONCAT_DSZ32(tmp1, tmp7) 
U2545: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, 0x0000000c) 
U2546: tmp7:= SHR_DSZ64(tmp7, 0x00000008) 

U2548: tmp7:= AND_DSZ32(tmp1, tmp7) 
U2549: PORTOUT_DSZ32_ASZ16_SC1(0x50c0,  , tmp7) !m2 
U254a: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000000, U254c) !m1 SEQW GOTO U254d

U254c: tmp7:= SAVEUIP_REGOVR(0x01, U254d, 0x0001) !m0 SEQW GOTO U0e41
U254d: LFNCEWAIT-> NOP SEQW URET0
U254e: tmp4:= WRMSLOOPCTRFBR() !m0 

U2550: tmp2:= CONCAT_DSZ32(0x00010000, tmp2) 
U2551: tmp0:= ADDSUB_DSZ16_CONDD(0x00000001) 
U2552: tmp0:= SELECTCC_DSZ32_CONDNS(tmp0, 0x00000001) 

U2554: tmp0:= SUB_DSZN(tmp0, rcx) !m1 
U2555: tmp0:= SUB_DSZN(0x00008000, tmp0) !m1 
U2556: tmp14:= SUB_DSZN(0x00008001, tmp0) !m1 

U2558: tmp14:= MOVEMERGEFLGS_DSZ32(0x0000254e, tmp14) 
U2559: tmp14:= CMOVCC_DSZ32_CONDNB(tmp14, 0x00006870) 
U255a: tmp15:= MOVEMERGEFLGS_DSZ32(0x0000045e, tmp0) 

U255c: tmp14:= CMOVCC_DSZ32_CONDZ(tmp15, tmp14) 
U255d: tmp1:= SAVEUIP( , 0x01, U068e) !m0 
U255e: UFLOWCTRL( , tmp14, URET1) 

U2560: SYNCWAIT-> tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x18, tmp1) !m0,m1 
U2561: STAD_DSZN_ASZ32_SC1(rdi, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x08, tmp1, tmp0) !m0,m1 
U2562: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, IMM_MACRO_01) !m0 

U2564: tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x18, tmp1) !m0,m1 
U2565: STAD_DSZN_ASZ32_SC1(rdi, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x08, tmp1, tmp0) !m0,m1 
U2566: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U2560

U2568: tmp15:= SUB_DSZN(tmp4) !m1 
U2569: tmp15:= SHL_DSZ32(tmp15, tmp2) SEQW GOTO U1ba6
U256a: TESTUSTATE( , UCODE, 0x3000) ? SEQW URET1

U256c: tmpv0:= READURAM( , 0x0012, 64) 
U256d: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000007, U4c35) !m0 
U256e: tmpv1:= ZEROEXT_DSZ32(0x00000307) SEQW SAVEUIP1 U2570SEQW GOTO U6d0c

U2570: SAVEUIP( , 0x01, U4c35) !m0 SEQW GOTO U3a34
U2571: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U2572: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U2574: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040) 
U2575: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000060) 
U2576: LFNCEWAIT-> tmp10:= UFLOWCTRL(tmp10, tmp2, LDAT_IN) 

U2578: tmp10:= UFLOWCTRL(tmp10, tmp4, LDAT_IN) 
U2579: tmp10:= UFLOWCTRL(tmp10, tmp6, LDAT_IN) 
U257a: tmp10:= UFLOWCTRL(tmp10, tmp8, LDAT_IN) 

U257c: tmp12:= ADD_DSZ32(0x00000080, tmp12) 
lots_of_ldat_ins:
U257d: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2571
U257e: URET(0x01) !m0 

U2580: tmp5:= MOVEFROMCREG_DSZ64( , 0x105) 
U2581: MOVETOCREG_BTR_DSZ64(tmp5, 0x0000000f, 0x105) !m0,m2 
U2582: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U1f9a

U2584: WRITEURAM(tmp15, 0x000d, 32) !m2 SEQW GOTO U1f9a
U2585: tmp1:= AND_DSZ32(0x000000ff, tmp1) 
U2586: tmp0:= AND_DSZ32(0x000000ff, tmp2) 

U2588: tmp0:= SUB_DSZ32(tmp0, tmp1) 
U2589: tmp5:= SELECTCC_DSZ32_CONDB(tmp0, tmp5) 
U258a: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U28e8

U258c: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U2590
U258d: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U258e: MOVETOCREG_BTS_DSZ64(tmp0, 0x0000000b, 0x285) !m0,m1,m2 

U2590: tmp0:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U2591: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U2592: tmp5:= SELECTCC_DSZ32_CONDNZ(tmp0, tmp5) SEQW GOTO U28e8

U2594: tmp15:= ZEROEXT_DSZ32(0x00000300) 
U2595: SIMDLSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15,  , xmm0) 
U2596: SIMDHSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15, 0x00000020,  , xmm0) 

U2598: SIMDLSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15, 0x00000040,  , xmm1) 
U2599: SIMDHSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15, 0x00000060,  , xmm1) 
U259a: tmp15:= ZEROEXT_DSZ32(0x00000380) 

U259c: SIMDLSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15,  , xmm2) 
U259d: SIMDHSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15, 0x00000020,  , xmm2) 
U259e: SIMDLSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15, 0x00000040,  , xmm2) 

U25a0: SIMDHSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15, 0x00000060,  , xmm2) 
U25a1: tmp12:= ZEROEXT_DSZ32() 
U25a2: tmp15:= ZEROEXT_DSZ32(0x6a09e667) 

U25a4: tmp15:= CONCAT_DSZ32(0xbb67ae85, tmp15) 
FUN_ucode_00025a5:
U25a5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7,  , tmp15) 
U25a6: tmp15:= ZEROEXT_DSZ32(0x3c6ef372) 

U25a8: tmp15:= CONCAT_DSZ32(0xa54ff53a, tmp15) 
U25a9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000008,  , tmp15) 
U25aa: tmp15:= ZEROEXT_DSZ32(0x510e527f) 

U25ac: tmp15:= CONCAT_DSZ32(0x9b05688c, tmp15) 
U25ad: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000010,  , tmp15) 
U25ae: tmp15:= ZEROEXT_DSZ32(0x1f83d9ab) 

U25b0: tmp15:= CONCAT_DSZ32(0x5be0cd19, tmp15) 
U25b1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000018,  , tmp15) 
U25b2: tmp4:= ZEROEXT_DSZ32(0x04050607) 

U25b4: tmp4:= CONCAT_DSZ32(tmp4, 0x00010203) 
U25b5: xmm2:= unk_747(mm4) 
U25b6: tmp4:= ZEROEXT_DSZ32(0x0c0d0e0f) 

U25b8: tmp4:= CONCAT_DSZ32(tmp4, 0x08090a0b) 
U25b9: tmm0:= unk_747(mm4) 
U25ba: xmm2:= unk_5ba(tmm0, xmm2) 

U25bc: tmp14:= unk_ec6(tmp7) 
U25bd: tmp15:= unk_ec6(tmp7) 
U25be: tmp14:= unk_52b(tmp14) 

U25c0: tmp15:= unk_52b(tmp15) 
U25c1: tmm5:= unk_5b9(tmm6) 
U25c2: tmm6:= unk_4d7(tmm7, tmm6) 

U25c4: tmm7:= unk_4ee(tmm5, tmm7) 
U25c5: tmp12:= ADD_DSZ32(tmp6, tmp12) 
U25c6: LFNCEWAIT-> tmp4:= READURAM( , 0x004e, 64) 

U25c8: xmm0:= unk_5b9(tmm6) 
U25c9: xmm1:= unk_5b9(tmm7) 
U25ca: tmp2:= OR_DSZ32(0x00000000) 

U25cc: tmp8:= unk_ec6(tmp5, tmp2) 
U25cd: tmm1:= unk_6d8(xmm2, tmm0) 
U25ce: tmp8:= unk_ed6(tmp4, tmp2) 

U25d0: tmm0:= unk_4ce(tmm1, tmm0) 
U25d1: xmm3:= unk_5b9(tmm6, tmm0) 
U25d2: xmm3:= unk_5d2(xmm3, tmm7) 

U25d4: tmm7:= unk_5e6(tmm0, xmm3) 
U25d5: tmp8:= unk_52b(tmp8) 
U25d6: xmm3:= unk_5b9(tmm7, tmm0) 

U25d8: xmm3:= unk_5d2(xmm3, tmm6) 
U25d9: tmm6:= unk_5e6(tmm0, xmm3) 
U25da: tmp2:= OR_DSZ32(0x00000010) 

U25dc: tmp8:= unk_ec6(tmp5, tmp2) 
U25dd: tmm2:= unk_6d8(xmm2, tmm0) 
U25de: tmp8:= unk_ed6(tmp4, tmp2) 

U25e0: tmm0:= unk_4ce(tmm2, tmm0) 
U25e1: xmm3:= unk_5b9(tmm6, tmm0) 
U25e2: xmm3:= unk_5d2(xmm3, tmm7) 

U25e4: tmm7:= unk_5e6(tmm0, xmm3) 
U25e5: tmp8:= unk_52b(tmp8) 
U25e6: xmm3:= unk_5b9(tmm7, tmm0) 

U25e8: xmm3:= unk_5d2(xmm3, tmm6) 
U25e9: tmm6:= unk_5e6(tmm0, xmm3) 
U25ea: tmm1:= unk_6e8(tmm2, tmm1) 

U25ec: tmp2:= OR_DSZ32(0x00000020) 
U25ed: tmp8:= unk_ec6(tmp5, tmp2) 
U25ee: tmm3:= unk_6d8(xmm2, tmm0) 

U25f0: tmp8:= unk_ed6(tmp4, tmp2) 
U25f1: tmm0:= unk_4ce(tmm3, tmm0) 
U25f2: xmm3:= unk_5b9(tmm6, tmm0) 

U25f4: xmm3:= unk_5d2(xmm3, tmm7) 
U25f5: tmm7:= unk_5e6(tmm0, xmm3) 
U25f6: tmp8:= unk_52b(tmp8) 

U25f8: xmm3:= unk_5b9(tmm7, tmm0) 
U25f9: xmm3:= unk_5d2(xmm3, tmm6) 
U25fa: tmm6:= unk_5e6(tmm0, xmm3) 

U25fc: tmm2:= unk_6e8(tmm3, tmm2) 
U25fd: tmp2:= OR_DSZ32(0x00000030) 
U25fe: tmp8:= unk_ec6(tmp5, tmp2) 

FUN_ucode_0002600:
U2600: tmm4:= unk_6d8(xmm2, tmm0) 
U2601: tmp8:= unk_ed6(tmp4, tmp2) 
U2602: tmm0:= unk_4ce(tmm4, tmm0) 

U2604: xmm3:= unk_5b9(tmm6, tmm0) 
U2605: xmm3:= unk_5d2(xmm3, tmm7) 
U2606: tmm7:= unk_5e6(tmm0, xmm3) 

U2608: tmm5:= unk_4d7(tmm3, tmm4) 
U2609: tmm1:= unk_4ce(tmm5, tmm1) 
U260a: tmm1:= unk_6e9(tmm4, tmm1) 

U260c: tmp8:= unk_52b(tmp8) 
U260d: xmm3:= unk_5b9(tmm7, tmm0) 
U260e: xmm3:= unk_5d2(xmm3, tmm6) 

U2610: tmm6:= unk_5e6(tmm0, xmm3) 
U2611: tmm3:= unk_6e8(tmm4, tmm3) 
U2612: tmp2:= OR_DSZ32(0x00000040) 

U2614: tmp8:= unk_ed6(tmp4, tmp2) 
U2615: tmm0:= unk_4ce(tmm1, tmm0) 
U2616: xmm3:= unk_5b9(tmm6, tmm0) 

U2618: xmm3:= unk_5d2(xmm3, tmm7) 
U2619: tmm7:= unk_5e6(tmm0, xmm3) 
U261a: tmm5:= unk_4d7(tmm4, tmm1) 

U261c: tmm2:= unk_4ce(tmm5, tmm2) 
U261d: tmm2:= unk_6e9(tmm1, tmm2) 
U261e: tmp8:= unk_52b(tmp8) 

U2620: xmm3:= unk_5b9(tmm7, tmm0) 
U2621: xmm3:= unk_5d2(xmm3, tmm6) 
U2622: tmm6:= unk_5e6(tmm0, xmm3) 

U2624: tmm4:= unk_6e8(tmm1, tmm4) 
do_apply_ucode_patch:
U2625: tmp2:= OR_DSZ32(0x00000050) 
U2626: tmp8:= unk_ed6(tmp4, tmp2) 

U2628: tmm0:= unk_4ce(tmm2, tmm0) 
U2629: xmm3:= unk_5b9(tmm6, tmm0) 
U262a: xmm3:= unk_5d2(xmm3, tmm7) 

U262c: tmm7:= unk_5e6(tmm0, xmm3) 
U262d: tmm5:= unk_4d7(tmm1, tmm2) 
U262e: tmm3:= unk_4ce(tmm5, tmm3) 

U2630: tmm3:= unk_6e9(tmm2, tmm3) 
U2631: tmp8:= unk_52b(tmp8) 
U2632: xmm3:= unk_5b9(tmm7, tmm0) 

U2634: xmm3:= unk_5d2(xmm3, tmm6) 
U2635: tmm6:= unk_5e6(tmm0, xmm3) 
U2636: tmm1:= unk_6e8(tmm2, tmm1) 

U2638: tmp2:= OR_DSZ32(0x00000060) 
U2639: tmp8:= unk_ed6(tmp4, tmp2) 
U263a: tmm0:= unk_4ce(tmm3, tmm0) 

U263c: xmm3:= unk_5b9(tmm6, tmm0) 
U263d: xmm3:= unk_5d2(xmm3, tmm7) 
U263e: tmm7:= unk_5e6(tmm0, xmm3) 

U2640: tmm5:= unk_4d7(tmm2, tmm3) 
U2641: tmm4:= unk_4ce(tmm5, tmm4) 
U2642: tmm4:= unk_6e9(tmm3, tmm4) 

U2644: tmp8:= unk_52b(tmp8) 
U2645: xmm3:= unk_5b9(tmm7, tmm0) 
U2646: xmm3:= unk_5d2(xmm3, tmm6) 

U2648: tmm6:= unk_5e6(tmm0, xmm3) 
U2649: tmm2:= unk_6e8(tmm3, tmm2) 
U264a: tmp2:= OR_DSZ32(0x00000070) 

U264c: tmp8:= unk_ed6(tmp4, tmp2) 
U264d: tmm0:= unk_4ce(tmm4, tmm0) 
U264e: xmm3:= unk_5b9(tmm6, tmm0) 

U2650: xmm3:= unk_5d2(xmm3, tmm7) 
U2651: tmm7:= unk_5e6(tmm0, xmm3) 
U2652: tmm5:= unk_4d7(tmm3, tmm4) 

U2654: tmm1:= unk_4ce(tmm5, tmm1) 
U2655: tmm1:= unk_6e9(tmm4, tmm1) 
U2656: tmp8:= unk_52b(tmp8) 

U2658: xmm3:= unk_5b9(tmm7, tmm0) 
U2659: xmm3:= unk_5d2(xmm3, tmm6) 
U265a: tmm6:= unk_5e6(tmm0, xmm3) 

U265c: tmm3:= unk_6e8(tmm4, tmm3) 
U265d: tmp2:= OR_DSZ32(0x00000080) 
U265e: tmp8:= unk_ed6(tmp4, tmp2) 

U2660: tmm0:= unk_4ce(tmm1, tmm0) 
U2661: xmm3:= unk_5b9(tmm6, tmm0) 
U2662: xmm3:= unk_5d2(xmm3, tmm7) 

U2664: tmm7:= unk_5e6(tmm0, xmm3) 
U2665: tmm5:= unk_4d7(tmm4, tmm1) 
U2666: tmm2:= unk_4ce(tmm5, tmm2) 

U2668: tmm2:= unk_6e9(tmm1, tmm2) 
FUN_ucode_0002669:
U2669: tmp8:= unk_52b(tmp8) 
FUN_ucode_000266a:
U266a: xmm3:= unk_5b9(tmm7, tmm0) 

U266c: xmm3:= unk_5d2(xmm3, tmm6) 
U266d: tmm6:= unk_5e6(tmm0, xmm3) 
U266e: tmm4:= unk_6e8(tmm1, tmm4) 

U2670: tmp2:= OR_DSZ32(0x00000090) 
U2671: tmp8:= unk_ed6(tmp4, tmp2) 
U2672: tmm0:= unk_4ce(tmm2, tmm0) 

U2674: xmm3:= unk_5b9(tmm6, tmm0) 
U2675: xmm3:= unk_5d2(xmm3, tmm7) 
U2676: tmm7:= unk_5e6(tmm0, xmm3) 

U2678: tmm5:= unk_4d7(tmm1, tmm2) 
U2679: tmm3:= unk_4ce(tmm5, tmm3) 
U267a: tmm3:= unk_6e9(tmm2, tmm3) 

U267c: tmp8:= unk_52b(tmp8) 
U267d: xmm3:= unk_5b9(tmm7, tmm0) 
U267e: xmm3:= unk_5d2(xmm3, tmm6) 

U2680: tmm6:= unk_5e6(tmm0, xmm3) 
U2681: tmm1:= unk_6e8(tmm2, tmm1) 
U2682: tmp2:= OR_DSZ32(0x000000a0) 

U2684: tmp8:= unk_ed6(tmp4, tmp2) 
U2685: tmm0:= unk_4ce(tmm3, tmm0) 
U2686: xmm3:= unk_5b9(tmm6, tmm0) 

U2688: xmm3:= unk_5d2(xmm3, tmm7) 
U2689: tmm7:= unk_5e6(tmm0, xmm3) 
U268a: tmm5:= unk_4d7(tmm2, tmm3) 

U268c: tmm4:= unk_4ce(tmm5, tmm4) 
U268d: tmm4:= unk_6e9(tmm3, tmm4) 
U268e: tmp8:= unk_52b(tmp8) 

U2690: xmm3:= unk_5b9(tmm7, tmm0) 
U2691: xmm3:= unk_5d2(xmm3, tmm6) 
U2692: tmm6:= unk_5e6(tmm0, xmm3) 

U2694: tmm2:= unk_6e8(tmm3, tmm2) 
U2695: tmp2:= OR_DSZ32(0x000000b0) 
U2696: tmp8:= unk_ed6(tmp4, tmp2) 

U2698: tmm0:= unk_4ce(tmm4, tmm0) 
U2699: xmm3:= unk_5b9(tmm6, tmm0) 
U269a: xmm3:= unk_5d2(xmm3, tmm7) 

U269c: tmm7:= unk_5e6(tmm0, xmm3) 
U269d: tmm5:= unk_4d7(tmm3, tmm4) 
U269e: tmm1:= unk_4ce(tmm5, tmm1) 

U26a0: tmm1:= unk_6e9(tmm4, tmm1) 
U26a1: tmp8:= unk_52b(tmp8) 
U26a2: xmm3:= unk_5b9(tmm7, tmm0) 

U26a4: xmm3:= unk_5d2(xmm3, tmm6) 
U26a5: tmm6:= unk_5e6(tmm0, xmm3) 
U26a6: tmm3:= unk_6e8(tmm4, tmm3) 

U26a8: tmp2:= OR_DSZ32(0x000000c0) 
U26a9: tmp8:= unk_ed6(tmp4, tmp2) 
U26aa: tmm0:= unk_4ce(tmm1, tmm0) 

U26ac: xmm3:= unk_5b9(tmm6, tmm0) 
U26ad: xmm3:= unk_5d2(xmm3, tmm7) 
U26ae: tmm7:= unk_5e6(tmm0, xmm3) 

U26b0: tmm5:= unk_4d7(tmm4, tmm1) 
U26b1: tmm2:= unk_4ce(tmm5, tmm2) 
U26b2: tmm2:= unk_6e9(tmm1, tmm2) 

U26b4: tmp8:= unk_52b(tmp8) 
U26b5: xmm3:= unk_5b9(tmm7, tmm0) 
U26b6: xmm3:= unk_5d2(xmm3, tmm6) 

U26b8: tmm6:= unk_5e6(tmm0, xmm3) 
U26b9: tmm4:= unk_6e8(tmm1, tmm4) 
U26ba: tmp2:= OR_DSZ32(0x000000d0) 

U26bc: tmp8:= unk_ed6(tmp4, tmp2) 
U26bd: tmm0:= unk_4ce(tmm2, tmm0) 
U26be: xmm3:= unk_5b9(tmm6, tmm0) 

U26c0: xmm3:= unk_5d2(xmm3, tmm7) 
U26c1: tmm7:= unk_5e6(tmm0, xmm3) 
U26c2: tmm5:= unk_4d7(tmm1, tmm2) 

U26c4: tmm3:= unk_4ce(tmm5, tmm3) 
U26c5: tmm3:= unk_6e9(tmm2, tmm3) 
U26c6: tmp8:= unk_52b(tmp8) 

U26c8: xmm3:= unk_5b9(tmm7, tmm0) 
U26c9: xmm3:= unk_5d2(xmm3, tmm6) 
U26ca: tmm6:= unk_5e6(tmm0, xmm3) 

U26cc: tmp2:= OR_DSZ32(0x000000e0) 
U26cd: tmp8:= unk_ed6(tmp4, tmp2) 
U26ce: tmm0:= unk_4ce(tmm3, tmm0) 

U26d0: xmm3:= unk_5b9(tmm6, tmm0) 
U26d1: xmm3:= unk_5d2(xmm3, tmm7) 
U26d2: tmm7:= unk_5e6(tmm0, xmm3) 

U26d4: tmm5:= unk_4d7(tmm2, tmm3) 
U26d5: tmm4:= unk_4ce(tmm5, tmm4) 
U26d6: tmm4:= unk_6e9(tmm3, tmm4) 

U26d8: tmp8:= unk_52b(tmp8) 
U26d9: xmm3:= unk_5b9(tmm7, tmm0) 
U26da: xmm3:= unk_5d2(xmm3, tmm6) 

U26dc: tmm6:= unk_5e6(tmm0, xmm3) 
U26dd: tmp2:= OR_DSZ32(0x000000f0) 
U26de: tmp8:= unk_ed6(tmp4, tmp2) 

U26e0: tmm0:= unk_4ce(tmm4, tmm0) 
U26e1: xmm3:= unk_5b9(tmm6, tmm0) 
U26e2: xmm3:= unk_5d2(xmm3, tmm7) 

U26e4: tmm7:= unk_5e6(tmm0, xmm3) 
U26e5: tmp8:= unk_52b(tmp8) 
U26e6: xmm3:= unk_5b9(tmm7, tmm0) 

U26e8: xmm3:= unk_5d2(xmm3, tmm6) 
U26e9: tmm6:= unk_5e6(tmm0, xmm3) 
U26ea: tmm6:= unk_4ce(xmm0, tmm6) 

U26ec: tmm7:= unk_4ce(xmm1, tmm7) 
U26ed: tmp5:= ADD_DSZ64(0x00000040, tmp5) 
U26ee: tmp6:= SUB_DSZ32(0x00000001, tmp6) 

U26f0: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp6, U26f1) SEQW GOTO U25c8
U26f1: tmp11:= READURAM( , 0x0047, 64) 
U26f2: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp6, U67da) 

U26f4: tmp15:= SHR_DSZ32(tmp11, 0x00000010) 
U26f5: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U6241) 
U26f6: tmp5:= ADD_DSZ32(0x00000020, tmp7) 

U26f8: tmp15:= BTS_DSZ64(0x00000000, 0x00000007) 
U26f9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000020,  , tmp15) 
U26fa: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000028,  , 0x00000000) 

U26fc: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000030,  , 0x00000000) 
U26fd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000038,  , 0x00000000) 
U26fe: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000040,  , 0x00000000) 

U2700: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000048,  , 0x00000000) 
U2701: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000050,  , 0x00000000) 
U2702: tmp15:= SHL_DSZ64(tmp12, 0x00000009) 

U2704: tmp15:= BSWAP_DSZ32(tmp15) 
U2705: tmp15:= CONCAT_DSZ32(tmp15) 
U2706: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000058,  , tmp15) SEQW GOTO U25c8

U2708: tmp0:= MOVEFROMCREG_DSZ64( , 0x004) !m2 
U2709: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U270d) !m0,m1 
U270a: tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) !m2 

U270c: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U1ecc) !m2 
U270d: tmp5:= MOVEFROMCREG_DSZ64( , 0x701) 
U270e: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp5, 0x0000000e, 0x701) !m0,m2 SEQW GOTO U085e

U2710: MOVETOCREG_DSZ64( , 0x00000000, 0x065) !m2 
generate_#GP:
U2711: LFNCEMARK-> SIGEVENT( , 0x000000f5) SEQW GOTO U079d
FUN_ucode_0002712:
U2712: tmp1:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

U2714: tmp1:= ADD_DSZN(tmp3, tmp1) !m1 
U2715: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 
U2716: LFNCEMARK-> WRITEURAM(tmp1, 0x0067, 64) !m2 SEQW GOTO U3b5c

U2718: MOVETOCREG_DSZ64( , 0x00000000, 0x065) !m2 SEQW GOTO U2711
U2719: tmp1:= ZEROEXT_DSZ32(0x000039e0) 
U271a: tmp1:= CONCAT_DSZ16(tmp1, 0x00003960) 

U271c: tmp0:= CONCAT_DSZ32(tmp1, tmp0) 
U271d: LFNCEMARK-> unk_963(tmp0, IMM_MACRO_21) !m0,m2 
U271e: tmp1:= ZEROEXT_DSZ32(0x000024d9) SEQW GOTO U3741

U2720: NOP 
U2721: LFNCEMARK-> SAVEUIP_REGOVR(0x00, U2722, 0x0000) SEQW GOTO U2735
U2722: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000040) 

U2724: tmp0:= ADD_DSZ32(0x00000040, tmp0) 
U2725: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp0, 0x63a) SEQW GOTO U085e
U2726: tmp13:= SAVEUIP(0x00, U056c) SEQW URET1

U2728: tmp0:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U2729: tmp0:= AND_DSZ32(0x00000800, tmp0) 
U272a: tmp0:= SHR_DSZ32(tmp0, 0x00000007) 

U272c: tmp1:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U272d: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 
U272e: tmp0:= AND_DSZ32(tmp1, tmp0) SEQW GOTO U1ab5

U2730: tmp0:= ZEROEXT_DSZ32(0x00000008) 
U2731: tmp7:= ZEROEXT_DSZ32(0x00000005) 
U2732: LFNCEMARK-> TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U344d

U2734: SAVEUIP( , 0x00, U47fd) 
FUN_ucode_0002735:
U2735: tmp4:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U2736: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x067) SEQW GOTO U5599

U2738: MOVETOCREG_BTS_DSZ64( , 0x00000004, 0x63a) !m2 
U2739: LFNCEMARK-> NOP SEQW GOTO U085e
U273a: tmp15:= READUIP_REGOVR(0x00) 

U273c: tmp13:= CONCAT_DSZ32(tmp13, tmp15) 
U273d: tmp14:= CONCAT_DSZ32(tmp14, 0x00001a69) 
U273e: SAVEUIP( , 0x00, U04d4) SEQW GOTO U0151

U2740: NOP 
U2741: LFNCEMARK-> SAVEUIP( , 0x00, U2722) SEQW GOTO U2735
U2742: tmp2:= NOTAND_DSZ64(0x00000007, tmp2) 

U2744: MOVETOCREG_DSZ64(tmp2, 0x574) 
U2745: MOVETOCREG_DSZ64(tmp1, 0x575) 
U2746: SAVEUIP( , 0x01, U19a1) !m0 SEQW GOTO U0164

U2748: NOP 
U2749: NOP SEQW GOTO U7c00
U274a: tmp0:= MOVEFROMCREG_DSZ64( , 0x513) 

U274c: tmp15:= CONCAT_DSZ32(0x00030000) 
U274d: tmp0:= NOTAND_DSZ64(tmp15, tmp0) 
U274e: MOVETOCREG_DSZ64(tmp0, 0x513) !m2 

U2750: MOVE_DSZ32() 
U2751: LBSYNC(0x00000002) 
U2752: tmp2:= CONCAT_DSZ32(tmp2, 0x00038003) SEQW SAVEUIP0 U2754SEQW GOTO U2515

U2754: MOVE_DSZ32() 
U2755: LFNCEMARK-> tmp1:= LEA_DSZ8_ASZ32_SC1(tmp8, DS, r64idx, mode=0x18) SEQW SAVEUIP1 U2756SEQW GOTO U043c
U2756: NOP 

U2758: LFNCEWTMRK-> unk_d04(tmp8, r64idx) !m1 SEQW SAVEUIP1 U2759SEQW GOTO U043c
U2759: NOP 
U275a: NOP 

U275c: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x525) 
U275d: tmp0:= NOTAND_DSZ64(0x00000fff, tmp2) 
U275e: tmp15:= MOVEFROMCREG_DSZ64( , 0x51e) 

U2760: tmp15:= XOR_DSZ64(tmp0, tmp15) 
U2761: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000001, U770d) !m1,m2 
U2762: tmp15:= AND_DSZ32(0x00000fff, tmp1) 

U2764: rax:= OR_DSZ64(tmp15, tmp0) 
U2765: rbx:= ZEROEXT_DSZ64(tmp1) 
U2766: rcx:= AND_DSZ32(0x00000078, tmp2) SEQW GOTO U1bd0

U2768: MSSTOP-> NOP 
generate_#UD:
U2769: SIGEVENT( , 0x00000019) SEQW GOTO U079d
U276a: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x50c0) !m2 

U276c: tmp11:= SHL_DSZ64(tmp11, 0x00000008) 
U276d: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x0000000a, U5e0c) !m0,m2 
U276e: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp4, tmp5) SEQW URET0

U2770: MSSTOP-> NOP 
generate_#NM:
U2771: SIGEVENT( , 0x0000001d) SEQW GOTO U079d
U2772: LFNCEMARK-> LBSYNC(0x00000001) 

U2774: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000002, U2775) !m0,m1 SEQW GOTO U4586
U2775: tmp15:= unk_d61(tmp2) !m2 
U2776: SAVEUIP_REGOVR(0x01, U2778, 0x0006) !m0 

U2778: tmp0:= SUB_DSZ64(tmp0, tmp15) 
U2779: tmp0:= SETCC_CONDZ(tmp0) 
U277a: tmp0:= SHL_DSZ64(tmp0, 0x00000028) 

U277c: tmp0:= OR_DSZ64(tmp0, tmp15) 
U277d: tmp15:= READURAM( , 0x000c, 64) 
U277e: MOVETOCREG_DSZ64(tmp15, 0x001) !m2 

U2780: tmp15:= AND_DSZ16(0xfffffffffffffff8, tmp2) 
U2781: unk_d68(tmp15,  , tmp0) !m2 SEQW GOTO U2db0
U2782: LFNCEMARK-> LBSYNC(0x00000002) 

U2784: LFNCEWAIT-> FETCHFROMEIP1_ASZ64( , tmp3) !m1 
U2785: tmp4:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U2786: WRSEGFLD(tmp4, CS, SEL+FLGS+LIM) 

U2788: tmp4:= RDSEGFLD(UNK_SEG_09, BASE) 
U2789: WRSEGFLD(tmp4, CS, BASE) 
U278a: tmp4:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U278c: WRSEGFLD(tmp4, SS, SEL+FLGS+LIM) 
U278d: tmp4:= RDSEGFLD(SS_USERM, BASE) 
U278e: WRSEGFLD(tmp4, SS, BASE) 

U2790: rsp:= ZEROEXT_DSZ64N(rsp) !m1 
U2791: MSSTOP-> MJMPTARGET_INDIRECT_ASZ64( , tmp3) !m1 
U2792: tmp0:= PSELECT_CPL0( , 0x00000001) 

U2794: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U06e6) 
U2795: LFNCEWAIT-> NOP SEQW UEND3
U2796: SAVEUIP_REGOVR(0x00, U2798, 0x0000) SEQW GOTO U0725

U2798: tmp1:= READURAM( , 0x0020, 64) !m2 
FUN_ucode_0002799:
U2799: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U035a) SEQW GOTO U1be4
U279a: LFNCEWAIT-> tmp5:= ZEROEXT_DSZ64(tmp5) 

U279c: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x06d) !m0,m2 
U279d: NOP 
U279e: NOP 

U27a0: LFNCEWAIT-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000003, U5c24) !m0,m2 
U27a1: MOVETOCREG_DSZ64(tmp2, 0x070) !m2 
U27a2: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000002, U1902) !m0,m2 

U27a4: tmp9:= BT_DSZ32(tmp7, 0x0000000e) 
U27a5: tmp9:= SELECTCC_DSZ32_CONDNB(tmp9, 0x00000001) 
U27a6: LFNCEMARK-> tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x0000000c, 0x01c) !m2 

U27a8: tmp7:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00000004) 
U27a9: MOVETOCREG_OR_DSZ64(tmp7, 0x070, tmp9) !m2 
U27aa: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000001, U6995) !m1 

FUN_ucode_00027ac:
U27ac: tmp9:= ZEROEXT_DSZ32() 
U27ad: tmp7:= ZEROEXT_DSZ32() 
FUN_ucode_00027ae:
U27ae: UJMP( , tmp13) 

U27b0: tmp15:= OR_DSZ32(0x00000010) 
U27b1: tmp6:= OR_DSZ32() 
U27b2: tmp1:= SHL_DSZ32(tmp6, 0x00000005) 

patch_load_error:
U27b4: tmp1:= OR_DSZ32(tmp15, tmp1) 
U27b5: tmp1:= SHL_DSZ32(tmp1, 0x0000000f) 
U27b6: SAVEUIP_REGOVR(0x01, U27b8, 0x0002) !m0 SEQW GOTO U32cd

U27b8: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp1, 0x00000007, 0x3a5) !m0,m1,m2 
U27b9: tmp2:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 
U27ba: UJMP( , tmp13) 

U27bc: tmp2:= PINTMOVDTMM2I_DSZ32(tmm4) 
U27bd: tmp2:= AND_DSZ32(0x0000003f, tmp2) 
U27be: tmm1:= unk_624(tmm3, tmm3) 

U27c0: tmp3:= PINTMOVDTMM2I_DSZ32(tmm1) 
uarch_bufs_ldat_init:
U27c1: tmp3:= AND_DSZ32(0x0000003f, tmp3) 
U27c2: tmp5:= SHL_DSZ32(tmp3, 0x00000006) 

U27c4: tmp5:= OR_DSZ32(tmp2, tmp5) 
U27c5: SAVEUIP( , 0x01, U1a50) !m0 
U27c6: UJMP( , tmp4) 

U27c8: tmp1:= CONCAT_DSZ8(0x00000004, tmp2) 
U27c9: tmp8:= MOVEFROMCREG_DSZ64( , 0x79e) 
U27ca: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U27cc: tmp10:= READAFLAGS( , tmp10) !m2 
U27cd: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U27ce: tmp9:= MOVE_DSZ32(tmp10) 

U27d0: tmp7:= ZEROEXT_DSZ32(0x00000021) 
U27d1: tmp14:= MOVETOCREG_DSZ64(0x00000009, 0x000) 
U27d2: SAVEUIP_REGOVR( , 0x01, U27d4, 0xcb30) !m0 SEQW GOTO U3722

U27d4: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) SEQW GOTO U0dc6
U27d5: STADPPHYS_DSZ64_ASZ64_SC1(0x00000200, mode=0x18, tmp11, tmp5) 
U27d6: tmp7:= ZEROEXT_DSZ32(0x00001f80) 

U27d8: SAVEUIP( , 0x01, U0d8e) !m0 SEQW SAVEUIP0 U27d9SEQW GOTO U5c19
U27d9: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
switch:
U27da: tmp6:= READURAM( , 0x005b, 64) 

ucode_update_invalid:
U27dc: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000012, U27ee) !m0,m1 
U27dd: tmp15:= SHR_DSZ64(tmp6, 0x00000038) 
U27de: tmp15:= NOTAND_DSZ32(tmp15, 0x00000018) 

U27e0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U27e2) 
U27e1: LFNCEMARK-> SAVEUIP( , 0x00, U406c) SEQW SAVEUIP1 U27e2SEQW GOTO U3a16
U27e2: tmp2:= READURAM( , 0x005b, 64) 

U27e4: tmp15:= CONCAT_DSZ32(0xff000000) 
U27e5: tmp2:= NOTAND_DSZ64(tmp15, tmp2) SEQW SAVEUIP1 U27e6SEQW GOTO U025a
U27e6: LFNCEMARK-> tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000068, mode=0x01, tmp1) 

U27e8: tmp0:= SHL_DSZ64(tmp0, 0x00000038) 
U27e9: tmp2:= OR_DSZ64(tmp0, tmp2) 
U27ea: WRITEURAM(tmp2, 0x005b, 64) !m2 

U27ec: tmp2:= XOR_DSZ64(tmp6, tmp0) 
U27ed: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000003b, U39cd) !m0,m1,m2 
U27ee: rax:= ZEROEXT_DSZ32(0x00000003) SEQW SAVEUIP1 U27f0SEQW GOTO U025a

U27f0: rbx:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000038, mode=0x01, tmp1) 
patch_apply_error:
U27f1: rcx:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000028, mode=0x01, tmp0) 
U27f2: unk_13f() !m2 

U27f4: rbp:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000098, mode=0x01, tmp5) 
U27f5: rsp:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000090, mode=0x01, tmp5) 
U27f6: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000028, mode=0x01, tmp1) 

U27f8: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000030, mode=0x01, tmp1) 
U27f9: LFNCEWAIT-> WRSEGFLD(tmp2, FS, BASE) 
U27fa: WRSEGFLD(tmp3, FS, SEL+FLGS+LIM) 

U27fc: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000018, mode=0x01, tmp1) 
U27fd: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000020, mode=0x01, tmp1) 
U27fe: WRSEGFLD(tmp2, GS, BASE) 

U2800: WRSEGFLD(tmp3, GS, SEL+FLGS+LIM) 
U2801: tmp7:= MOVEFROMCREG_DSZ64( , 0x070) 
U2802: tmp7:= AND_DSZ32(0x00000020, tmp7) 

U2804: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x00b) !m2 
U2805: tmp8:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(0x000000a0, mode=0x01, tmp5) 
U2806: LFNCEWTMRK-> CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000010, U2808) !m1 SEQW GOTO U280d

U2808: tmp9:= ZEROEXT_DSZ32(0x0000037e) 
U2809: MOVETOCREG_DSZ64(tmp9, 0x486) 
U280a: tmp9:= ZEROEXT_DSZ32(0x00008081) 

U280c: MOVETOCREG_DSZ64(tmp9, 0x48c) 
U280d: LFNCEWTMRK-> CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000013, U280e) !m0,m1 SEQW GOTO U2812
U280e: tmp9:= ZEROEXT_DSZ32(0x00001f01) 

U2810: tmm5:= unk_707(tmm1) 
U2811: tmm6:= unk_691(tmm5) 
U2812: tmp12:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000018, mode=0x01, tmp0) 

U2814: tmp12:= ADD_DSZ32(0x00000001, tmp12) 
U2815: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000018, mode=0x01, tmp0, tmp12) 
U2816: MOVETOCREG_DSZ64( , 0x00000000, 0x79a) SEQW SAVEUIP1 U2818SEQW GOTO U043c

U2818: LFNCEWAIT-> tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000050, mode=0x01, tmp1) 
U2819: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000078, mode=0x01, tmp1) 
U281a: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000088, mode=0x01, tmp5) 

U281c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp2, 0x7f8) !m2 
FUN_ucode_000281d:
U281d: tmp12:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U281e: tmp12:= BTR_DSZ32(tmp12, 0x00000010) 

U2820: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x072) !m2 
U2821: tmp4:= ZEROEXT_DSZ32(0x00000406) 
U2822: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(mode=0x01, tmp1) 

U2824: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U2825) !m1 SEQW GOTO U2842
U2825: MOVETOCREG_DSZ64(tmp3, 0x7f9, 32) !m1 
U2826: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000040, mode=0x01, tmp1) 

U2828: tmp15:= NOTAND_DSZ32(tmp2, 0x00000002) 
U2829: tmp15:= CONCAT_DSZ16(tmp15, 0x000000c0) 
U282a: tmp3:= READURAM( , 0x0070, 64) 

U282c: tmp15:= CONCAT_DSZ32(tmp15) 
U282d: tmp3:= NOTAND_DSZ64(tmp15, tmp3) 
U282e: WRITEURAM(tmp3, 0x0170, 64) !m2 

U2830: MOVETOCREG_SHR_DSZ64(tmp3, 0x00000020, 0x008) !m2 
U2831: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000058, mode=0x01, tmp1) 
U2832: tmp3:= AND_DSZ32(0x00000100, tmp3) 

U2834: tmp12:= NOTAND_DSZ32(0x00000100, tmp12) 
U2835: tmp12:= OR_DSZ32(tmp3, tmp12) 
U2836: tmp3:= READURAM( , 0x0012, 64) 

U2838: tmp3:= AND_DSZ32(0x80000000, tmp3) 
U2839: tmp3:= SHR_DSZ32(tmp3, 0x0000001d) 
U283a: tmp15:= AND_DSZ32(tmp3, tmp2) 

U283c: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000020) 
U283d: tmp3:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U283e: tmp3:= NOTAND_DSZ32(0x00000020, tmp3) 

U2840: MOVETOCREG_OR_DSZ64(tmp3, 0x6c3, tmp15) 
U2841: tmp4:= ZEROEXT_DSZ32(0x00000426) 
U2842: MOVETOCREG_DSZ64(tmp12, 0x7fe) !m2 

U2844: SYNCMARK-> MOVETOCREG_DSZ64(tmp5, 0x71a) !m2 
U2845: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x7ef) !m0,m2 
U2846: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000054, mode=0x01, tmp1) 

U2848: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000028, mode=0x01, tmp0) 
U2849: tmp12:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000070, mode=0x01, tmp1) 
U284a: tmp12:= AND_DSZ32(0x00000001, tmp12) 

U284c: tmp12:= SELECTCC_DSZ32_CONDZ(tmp12, 0x00000002) 
U284d: tmp12:= ADD_DSZ32(0x00000c08, tmp12) 
U284e: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000060, mode=0x01, tmp1) 

U2850: tmp10:= ADD_DSZ64(tmp12, tmp10) 
U2851: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(mode=0x01, tmp0, 0x00000000) 
U2852: LFNCEWAIT-> tmp12:= LDPPHYS_DSZ16_ASZ64_SC1(tmp10, mode=0x01) !m2 

U2854: tmp12:= SUB_DSZ16(0x00000001, tmp12) 
U2855: LFNCEMARK-> STADPPHYS_DSZ16_ASZ64_SC1(tmp10, mode=0x01,  , tmp12) !m2 
U2856: tmp2:= MOVEFROMCREG_DSZ64( , 0x01c) !m2 

U2858: tmp2:= NOTAND_DSZ32(tmp3, tmp2) 
U2859: MOVETOCREG_DSZ64(tmp2, 0x01c) !m2 
U285a: AETTRACE( , tmp5, 0x0c) 

U285c: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x511) 
U285d: tmp1:= MOVEFROMCREG_DSZ64( , 0x510) 
U285e: tmp2:= MOVEFROMCREG_DSZ64( , 0x518) 

U2860: tmp3:= MOVEFROMCREG_DSZ64( , 0x004) 
U2861: tmp8:= MOVEFROMCREG_DSZ64( , 0x000) 
U2862: tmp14:= ZEROEXT_DSZ32(0x000022c0) 

U2864: WRMSLOOPCTRFBR( , 0x00000009) 
U2865: SAVEUIP( , 0x00, U04d4) SEQW SAVEUIP1 U2866SEQW GOTO U0262
U2866: SYNCWAIT-> WRITEURAM( , 0x00000000, 0x0009, 64) 

U2868: WRITEURAM( , 0x00000000, 0x000a, 64) 
U2869: WRITEURAM( , 0x00000000, 0x000b, 64) 
U286a: WRITEURAM( , 0x00000000, 0x006e, 64) 

U286c: SYNCFULL->MSSTOP-> MJMPTARGET_INDIRECT_ASZ64( , tmp6) !m1 SEQW GOTO U5a55
U286d: tmp3:= unk_168(r64src, tmp0) 
U286e: tmp4:= OR_DSZ64(0x00000000, tmp0) 

U2870: tmp2:= SELECTCC_DSZ64_CONDZ(tmp4, tmp2) 
U2871: tmp4:= SELECTCC_DSZ32_CONDZ(tmp4, 0x00000021) 
U2872: tmp3:= unk_18f(tmp3, tmp2) 

U2874: r64src:= unk_07c(tmp3, r64src) SEQW GOTO U080c
U2875: tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U2876: tmp1:= SELECTCC_DSZ32_CONDZ(tmp2, tmp0) 

U2878: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000014, U2711) !m1 
U2879: tmp0:= NOTAND_DSZ32(0x00090000, tmp0) 
U287a: tmp2:= SHL_DSZ32(tmp2, 0x00000010) 

U287c: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp0, 0x7fe, tmp2) !m2 SEQW GOTO U1bd0
U287d: tmp0:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000005) 
U287e: tmp0:= ADD_DSZ32(0x00002200, tmp0) 

U2880: MOVETOCREG_DSZ64( , 0x00000000, tmp0) !m1,m2 
U2881: tmp0:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000006) 
U2882: tmp0:= ADD_DSZ32(0x00002200, tmp0) 

U2884: MOVETOCREG_DSZ64( , 0x00000000, tmp0) !m1,m2 SEQW URET1
U2885: tmp5:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp8, 0x0000001d) 
U2886: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000001, U2888) !m1 SEQW GOTO U2889

U2888: tmp7:= SAVEUIP_REGOVR(0x01, U2889, 0x0000) !m0 SEQW GOTO U0e41
U2889: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, 0x00000010) 
U288a: tmp1:= NOTAND_DSZ32(0x00000000, tmp1) 

U288c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U288d) SEQW GOTO U2541
U288d: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, 0x00000014) 
U288e: tmp1:= PORTIN_DSZ32_ASZ16_SC1(tmp1) 

U2890: tmp1:= AND_DSZ32(tmp7, tmp1) 
U2891: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2892) SEQW GOTO U2541
U2892: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, 0x00000018) 

U2894: PORTOUT_DSZ32_ASZ16_SC1(0x50c0,  , tmp7) !m2 SEQW GOTO U254d
U2895: SYNCFULL-> MOVETOCREG_DSZ64(tmp1, 0x121) !m2 
U2896: MOVETOCREG_DSZ64( , 0x00000000, 0x124) 

U2898: MOVETOCREG_DSZ64( , 0x00000000, 0x125) 
FUN_ucode_0002899:
U2899: MOVETOCREG_DSZ64( , 0x00000000, 0x126) 
FUN_ucode_000289a:
U289a: MOVETOCREG_DSZ64( , 0x00000000, 0x127) 

U289c: MOVETOCREG_DSZ64(tmp2, 0x120) !m2 SEQW URET0
U289d: tmp5:= ZEROEXT_DSZ32(0x000028a0) 
U289e: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4840

U28a0: TESTUSTATE( , UCODE, !0x3000) !m0 ? SEQW GOTO U24c9
U28a1: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U28a2: tmp10:= READAFLAGS( , tmp10) !m2 

U28a4: tmp1:= READURAM( , 0x0070, 64) 
U28a5: tmp1:= BT_DSZ64(tmp1, 0x00000032) 
U28a6: tmp0:= MOVEFROMCREG_DSZ64( , 0x01d) 

U28a8: tmp1:= SELECTCC_DSZ32_CONDB(tmp1, tmp0) 
U28a9: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000002, U28aa) !m0,m1 SEQW GOTO U57a9
U28aa: tmp0:= ZEROEXT_DSZ32(0x00002008) 

U28ac: tmp2:= ZEROEXT_DSZ32(0x00000016) 
U28ad: SAVEUIP_REGOVR(0x01, U28ae, 0x00e2) !m0 
U28ae: SAVEUIP( , 0x01, U079d) !m0 SEQW GOTO U1cfa

U28b0: tmp0:= CONCAT_DSZ16(0x0000000e) 
U28b1: MOVETOCREG_DSZ64(tmp0, 0x2dd, 32) !m1 
U28b2: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f6) 

U28b4: WRITEURAM(tmp0, 0x004a, 32) 
U28b5: tmp0:= NOTAND_DSZ32(0x60000000, tmp0) 
U28b6: MOVETOCREG_DSZ64(tmp0, 0x7f6) 

U28b8: tmp14:= MOVEFROMCREG_DSZ64( , 0x51b) 
U28b9: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp14, 0x00000001, 0x51b) 
U28ba: tmp14:= ZEROEXT_DSZ16(0x00001000, tmp14) SEQW SAVEUIP1 U28bcSEQW GOTO U043c

U28bc: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, 0x6c5) SEQW GOTO U7082
U28bd: tmp5:= OR_DSZ32() 
U28be: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U28c0: tmp10:= READAFLAGS( , tmp10) !m2 
U28c1: tmp12:= READURAM( , 0x005c, 64) 
U28c2: tmp12:= SHR_DSZ64(tmp12, 0x0000002c) 

U28c4: tmp12:= AND_DSZ32(0x00000008, tmp12) SEQW GOTO U58d2
U28c5: tmp11:= CONCAT_DSZ16(0x00000100, tmp11) 
U28c6: WRITEURAM(tmp11, 0x000e, 32) 

U28c8: WRITEURAM( , 0x00000000, 0x000d, 32) 
U28c9: tmp1:= READURAM( , 0x0053, 64) 
U28ca: WRITEURAM( , 0x00000000, 0x0053, 64) !m2 

U28cc: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000002, U6732) !m0,m1 SEQW GOTO U21fe
U28cd: tmp0:= READURAM( , 0x0053, 64) 
U28ce: tmp3:= ZEROEXT_DSZ32(0x000021fe) 

U28d0: WRITEURAM( , 0x00000000, 0x000d, 32) 
U28d1: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U20e1) !m0,m1 
U28d2: WRITEURAM( , 0x00000000, 0x0053, 64) !m2 

U28d4: SYNCFULL-> UJMP( , tmp3) 
U28d5: BTUJNB_DIRECT_NOTTAKEN(tmp9, 0x00000000, U28d8) !m1 
U28d6: NOP SEQW SAVEUIP1 U28d8SEQW GOTO U29a9

U28d8: SAVEUIP( , 0x01, U3b85) !m0 SEQW GOTO U3130
U28d9: PORTOUT_DSZ32_ASZ16_SC1(0x0050,  , 0x00000000) !m2 
U28da: tmp0:= ZEROEXT_DSZ32(0x0000018a) 

U28dc: tmp0:= CONCAT_DSZ16(0x000000ee, tmp0) 
U28dd: WRITEURAM(tmp0, 0x0078, 32) 
U28de: SAVEUIP_REGOVR(0x01, U28e0, 0x00f2) !m0 

U28e0: SAVEUIP( , 0x01, U209a) !m0 SEQW GOTO U02ca
U28e1: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U28e8) !m0,m1 
U28e2: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000b, U453e) !m0 

U28e4: CMPUJNZ_DIRECT_NOTTAKEN(tmp3, U28e8, tmp1) !m1 
U28e5: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U28e8, tmp0) !m1 
U28e6: tmp5:= BTS_DSZ32(0x00000000, 0x00000010) 

U28e8: SAVEUIP( , 0x00, U0c52) SEQW GOTO U5f64
U28e9: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x4900) !m2 
U28ea: WRITEURAM(tmp0, 0x0009, 64) 

thunk_FUN_ucode_0002712:
U28ec: tmp0:= BTS_DSZ32(tmp0, 0x00000013) 
U28ed: PORTOUT_DSZ32_ASZ16_SC1(0x4900,  , tmp0) !m2 
U28ee: SYNCFULL-> tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x4900) !m2 

U28f0: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000014, U1f9a) !m2 SEQW GOTO U28ee
U28f1: tmpv0:= READURAM( , 0x0020, 64) 
U28f2: tmpv1:= XOR_DSZ16(tmpv0, 0x00000002) 

U28f4: tmpv2:= PORTIN_DSZ32_ASZ16_SC1(0x0004) !m2 
FUN_ucode_00028f5:
U28f5: tmpv2:= BT_DSZ32(tmpv2, tmpv1) 
U28f6: tmpv0:= SELECTCC_DSZ64_CONDB(tmpv2, tmpv0) 

U28f8: tmpv0:= BT_DSZ64(tmpv0, 0x0000002f) SEQW URET1
U28f9: tmp9:= ADD_DSZN(tmp6, tmp8) !m1 
U28fa: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U28fe

U28fc: tmp2:= ZEROEXT_DSZ32(0x00000009) 
U28fd: ROVR<- tmp1:= ZEROEXT_DSZ64(tmp9) SEQW SAVEUIP1 U28feSEQW GOTO U1cfc
U28fe: tmp2:= TEST_DSZ64(tmp9, tmp9) 

U2900: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U1bd0) 
U2901: tmp5:= NOTAND_DSZN(0x00000fff, tmp9) !m1 SEQW SAVEUIP0 U2902SEQW GOTO U0bba
U2902: NOP 

U2904: LFNCEWAIT-> unk_dff(tmp5) 
U2905: UFLOWCTRL( , tmp5, UNK) 
U2906: NOP 

U2908: tmp15:= READURAM( , 0x005c, 64) 
U2909: tmp15:= BTS_DSZ64(tmp15, 0x0000002b) 
U290a: LFNCEMARK-> WRITEURAM(tmp15, 0x005c, 64) SEQW URET1

U290c: tmp0:= CONCAT_DSZ16(0x00000100, tmp0) 
U290d: WRITEURAM(tmp0, 0x000e, 32) !m2 
U290e: TESTUSTATE( , SYS, !0xc000) !m0,m1 ? SEQW GOTO U5be4

U2910: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U5731
U2911: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U2912: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x29d) !m1,m2 

U2914: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U2915: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000009, U2918) !m1 
U2916: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U2914) !m1 

U2918: tmp14:= ZEROEXT_DSZ32(0x000006ee) SEQW GOTO U3ece
U2919: tmp1:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U291a: tmp4:= LDZX_DSZ16_ASZ32_SC1(tmp1, mode=0x18) 

U291c: ROVR<- tmp2:= AND_DSZ16(0x00000003, tmp4) SEQW SAVEUIP1 U291dSEQW GOTO U05ac
U291d: tmp4:= AND_DSZ16(0xfffffffffffffffc, tmp4) 
U291e: tmp4:= OR_DSZ16(tmp3, tmp4) 

U2920: STAD_DSZ16_ASZ32_SC1(tmp1, mode=0x18,  , tmp4) SEQW GOTO U038c
U2921: tmp15:= READURAM( , 0x0047, 64) 
U2922: SYNCFULL-> MOVETOCREG_SHR_DSZ64(tmp15, 0x00000020, 0x6c5) 

U2924: tmp15:= READURAM( , 0x0048, 64) 
U2925: tmp1:= SUB_DSZ32(tmp4, tmp15) 
U2926: tmp0:= ZEROEXT_DSZ32(0x00000022) 

U2928: SAVEUIP( , 0x01, U5f98) !m0 SEQW GOTO U0164
U2929: tmp15:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 
U292a: tmp15:= SHR_DSZ32(tmp15, 0x00000006) 

U292c: tmp15:= AND_DSZ32(0x00000010, tmp15) 
U292d: LFNCEMARK-> tmp0:= PORTIN_DSZ32_ASZ16_SC1(tmp1) !m1 
U292e: tmp0:= NOTAND_DSZ32(0x00000010, tmp0) 

U2930: tmp0:= OR_DSZN(tmp15, tmp0) !m1 SEQW GOTO U5b88
FUN_ucode_0002931:
U2931: tmp13:= SHL_DSZ64(tmpv0, 0x00000008) 
U2932: tmp13:= SHR_DSZ64(tmp13, 0x00000008) 

U2934: tmpv0:= READURAM( , 0x0087, 64) 
U2935: tmpv0:= ZEROEXT_DSZ32(tmpv0) 
U2936: tmp13:= IMUL64L_DSZ64(tmpv0, tmp13) 

U2938: tmpv1:= ADD_DSZ64(tmp13, tmpv1) SEQW URET0
U2939: BTUJB_DIRECT_NOTTAKEN(rcx, 0x00000005, U6cdd) !m1 
U293a: BTUJB_DIRECT_NOTTAKEN(rcx, 0x00000002, U293c) !m0,m1 SEQW GOTO U293d

U293c: SAVEUIP_REGOVR(0x01, U293d, 0x0005) !m0 SEQW GOTO U32cd
U293d: tmp2:= CONCAT_DSZ32(rbx, rdx) 
U293e: tmp4:= NOTAND_DSZ32(0x00000001, rax) 

U2940: tmp5:= AND_DSZ32(0x000000c0, rcx) 
U2941: tmp5:= SHR_DSZ32(tmp5, 0x00000001) 
U2942: tmp6:= AND_DSZ32(0x00000018, rcx) 

U2944: tmp8:= OR_DSZ32(tmp6, tmp5) 
U2945: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U2946) !m1 SEQW GOTO U2949
U2946: NOP 

U2948: tmp9:= ADD_DSZ32(tmp8, 0x00004052) SEQW GOTO U294a
U2949: tmp9:= ADD_DSZ32(tmp8, 0x00004392) 
U294a: LFNCEWAIT-> UJMP( , tmp9) 

U294c: tmp11:= CONCAT_DSZ16(0x00000100, tmp11) 
U294d: WRITEURAM(tmp11, 0x000e, 32) 
U294e: tmp8:= TESTUSTATE( , SYS, !0xc000) !m0,m1 ? SEQW GOTO U3ef1

U2950: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U2958
U2951: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U2952: SYNCFULL-> tmp1:= MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x29d) !m1 

U2954: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U2955: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000009, U2958) !m1 
U2956: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U2954) !m1 

U2958: tmp14:= ZEROEXT_DSZ32(0x000006ee) SEQW GOTO U3ece
U2959: tmp2:= BT_DSZ64(tmp3, 0x0000002b) 
U295a: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00008000) 

U295c: tmp1:= READURAM( , 0x005c, 64) 
U295d: tmp1:= BT_DSZ64(tmp1, 0x0000001a) 
U295e: tmp1:= SELECTCC_DSZ32_CONDB(tmp1, 0x00008000) 

U2960: tmp2:= OR_DSZ32(tmp1, tmp2) SEQW GOTO U30ed
U2961: tmp1:= SHR_DSZ32(tmp1, 0x0000001c) 
U2962: tmp1:= AND_DSZ32(0x00000001, tmp1) 

U2964: tmp5:= OR_DSZ64(tmp1, tmp5) 
U2965: tmp1:= MOVEFROMCREG_DSZ64( , 0x383, 32) !m1 
U2966: tmp1:= NOTAND_DSZ32(tmp1, 0x00000001) 

U2968: tmp1:= SHL_DSZ32(tmp1, 0x0000000b) SEQW GOTO U3056
U2969: tmp13:= ZEROEXT_DSZ32(0x00000007) 
U296a: WRITEURAM( , 0x00000000, 0x011f, 64) !m2 

U296c: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U296e
U296d: tmp13:= ZEROEXT_DSZ32(0x00000019) 
U296e: SAVEUIP_REGOVR(0x01, U2970, 0x0103) !m0 

U2970: SAVEUIP( , 0x01, U2d5d) !m0 SEQW GOTO U5f1e
FUN_ucode_0002971:
U2971: tmp6:= MOVEFROMCREG_DSZ64( , 0x000) 
U2972: tmp5:= READURAM( , 0x000a, 64) 

U2974: tmp5:= AND_DSZ32(0x00000400, tmp5) 
U2975: tmp5:= SHL_DSZ32(tmp5, 0x00000002) 
U2976: tmp6:= BT_DSZ64(tmp6, 0x00000014) 

U2978: tmp5:= SELECTCC_DSZ32_CONDNB(tmp6, tmp5) SEQW URET0
U2979: tmp13:= ZEROEXT_DSZ32(0x00000009) 
U297a: SAVEUIP_REGOVR(0x01, U297c, 0x0056) !m0 SEQW GOTO U1962

U297c: tmp13:= ZEROEXT_DSZ32(0x0000000b) 
U297d: LFNCEWAIT-> tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp12) 
U297e: tmp8:= BTR_DSZ32(tmp8, 0x0000001f) 

U2980: LFNCEMARK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp8, 0x00000011, U2e91) !m1 
U2981: tmp1:= READURAM( , 0x0035, 64) 
U2982: tmp1:= SHR_DSZ64(tmp1, 0x00000025) 

U2984: tmp1:= AND_DSZ64(0x00000001, tmp1) 
U2985: tmp1:= SELECTCC_DSZ64_CONDNB(tmp8, tmp1) 
U2986: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U2e91) !m1 

U2988: tmp8:= MOVEFROMCREG_DSZ64( , 0x402) 
U2989: LFNCEWTMRK-> WRITEURAM(tmp12, 0x0056, 64) 
U298a: MOVETOCREG_BTS_DSZ64(tmp8, 0x00000003, 0x402) !m0 

U298c: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U0794
U298d: tmp2:= ZEROEXT_DSZ8(0x00000073, tmp12) 
U298e: SAVEUIP_REGOVR(0x01, U2990, 0x0210) !m0 

U2990: SAVEUIP( , 0x01, U0794) !m0 SEQW GOTO U601e
U2991: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x7e1) !m2 
U2992: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U2994: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000004, 0x6c3) !m2 
U2995: tmp0:= READURAM( , 0x005c, 64) 
U2996: tmp0:= OR_DSZ32(0x00000400, tmp0) 

U2998: WRITEURAM(tmp0, 0x005c, 32) !m2 SEQW GOTO U0606
U2999: TESTUSTATE( , UCODE, 0x0400) ? SEQW URET0
U299a: tmp15:= MOVEFROMCREG_DSZ64( , 0x067) 

U299c: tmp13:= MOVEFROMCREG_DSZ64( , 0x065) 
U299d: tmp15:= SUB_DSZN(tmp13, tmp15) !m1 
U299e: AETTRACE( , tmp15, 0x0c) 

U29a0: SAVEUIP( , 0x01, U2ad1) !m0 SEQW GOTO U273a
U29a1: tmp3:= unk_1d6(tmp1) 
U29a2: tmp3:= SHL_DSZ32(tmp3, 0x00000001) 

U29a4: tmp3:= ADD_DSZ32(0x00000002, tmp3) 
U29a5: tmp3:= SHL_DSZ32(tmp3, 0x0000000c) 
U29a6: tmp3:= OR_DSZ32(0x00000040, tmp3) 

U29a8: rcx:= CONCAT_DSZ16(tmp0, tmp3) SEQW GOTO U1bd0
U29a9: tmp14:= MOVE_DSZ32(0x00000002) 
U29aa: tmp15:= READURAM( , 0x005c, 64) !m2 

U29ac: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000002b, U141c) !m0,m2 
U29ad: unk_eff() 
U29ae: LBSYNC(0x00000001) 

U29b0: SYNCFULL-> LBSYNC(0x00000007) SEQW GOTO U141c
U29b1: tmp10:= READURAM( , 0x005c, 64) 
U29b2: tmp5:= AND_DSZ32(0x00000003, rax) 

U29b4: tmp5:= SHL_DSZ64(tmp5, 0x00000015) 
U29b5: tmp10:= NOTAND_DSZ64(0x00600000, tmp10) 
U29b6: tmp10:= OR_DSZ64(tmp5, tmp10) 

U29b8: LFNCEMARK-> WRITEURAM(tmp10, 0x005c, 64) !m2 SEQW URET0
U29b9: MOVETOCREG_DSZ64(tmp8, 0x223, 32) !m1,m2 
U29ba: SAVEUIP_REGOVR(0x01, U29bc, 0x0004) !m0 SEQW GOTO U32cd

U29bc: tmp10:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 
U29bd: tmp8:= READURAM( , 0x0020, 64) 
U29be: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp8, 0x0000002f, U29c6) !m0,m1 

U29c0: tmp6:= SETCC_CONDNZ(tmp15) 
U29c1: tmp6:= ADD_DSZ32(0x00000006, tmp6) 
U29c2: tmp7:= AND_DSZ32(0x000000c0, tmp10) 

U29c4: LFNCEWAIT-> tmp10:= MOVETOCREG_BTS_DSZ64(tmp10, 0x238, tmp6) !m1 
U29c5: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U29e4) 
U29c6: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U29e4

U29c8: tmp12:= ZEROEXT_DSZ32(0x00007700) 
U29c9: WRMSLOOPCTRFBR( , 0x00002803) SEQW SAVEUIP0 U29caSEQW GOTO U5799
U29ca: NOP 

U29cc: WRMSLOOPCTRFBR( , 0x00001014) SEQW SAVEUIP0 U29cdSEQW GOTO U5789
U29cd: tmp12:= ZEROEXT_DSZ32(0x00007600) 
U29ce: tmp6:= MOVEFROMCREG_DSZ64( , 0x383, 32) !m1 

U29d0: tmp7:= MOVEFROMCREG_DSZ64( , 0x388, 32) !m1 
U29d1: tmp8:= MOVEFROMCREG_DSZ64( , 0x387, 32) !m1 
U29d2: tmp9:= SHR_DSZ64(tmp8, 0x00000020) SEQW SAVEUIP0 U29d4SEQW GOTO U6185

U29d4: tmp4:= MOVEFROMCREG_DSZ64( , 0x386, 32) !m1 
U29d5: tmp5:= MOVEFROMCREG_DSZ64( , 0x385, 32) !m1 
U29d6: tmp2:= CONCAT_DSZ32(0x001fffc0) 

U29d8: tmp5:= NOTAND_DSZ64(tmp2, tmp5) SEQW SAVEUIP0 U29d9SEQW GOTO U1f76
U29d9: tmp7:= NOTAND_DSZ32(0x00000300, tmp10) 
U29da: tmp4:= MOVEFROMCREG_DSZ64( , 0x2e9, 32) !m1 

U29dc: tmp5:= MOVEFROMCREG_DSZ64( , 0x392, 32) !m1 
U29dd: tmp6:= MOVEFROMCREG_DSZ64( , 0x20c, 32) !m1 
U29de: tmp8:= MOVEFROMCREG_DSZ64( , 0x389, 32) !m1 

U29e0: tmp9:= ZEROEXT_DSZ32() SEQW SAVEUIP0 U29e1SEQW GOTO U6181
U29e1: NOP 
U29e2: NOP 

U29e4: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 SEQW GOTO U78dc
U29e5: tmpv0:= READURAM( , 0x005c, 64) 
U29e6: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000027, U1db2) !m0,m2 

U29e8: tmp14:= PORTIN_DSZ32_ASZ16_SC1(0x9704) !m2 
U29e9: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp14, 0x00000000, U5f7c) !m2 
U29ea: tmpv0:= BTR_DSZ64(tmpv0, 0x00000027) 

U29ec: WRITEURAM(tmpv0, 0x015c, 64) !m2 SEQW URET1
U29ed: SYNCFULL-> UFLOWCTRL( , tmp13, USTATE) 
U29ee: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U29f4

U29f0: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U29f4
U29f1: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U29f2: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000003, U2769) !m0,m1 

U29f4: TESTUSTATE( , UCODE, 0x1000) ? SEQW GOTO U29f9
U29f5: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U29f6: tmp2:= BTR_DSZ32(tmp2, 0x0000000d) 

U29f8: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp2, U24c1) 
U29f9: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U29fa: tmp1:= ADD_DSZ32(tmp0, 0x0000007b) 

U29fc: TESTUSTATE( , UCODE, !0x0040) !m0 ? SEQW GOTO U0454
U29fd: tmp4:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U29fe: BTUJB_DIRECT_NOTTAKEN(tmp4, 0x0000000e, U1bd0) !m0,m2 

U2a00: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U3a58
U2a01: WRITEURAM(tmp7, tmp1) !m2 
U2a02: tmp1:= ADD_DSZ32(tmp0, 0x000007a8) 

U2a04: tmp1:= ADD_DSZ32(tmp0, tmp1) 
U2a05: tmp4:= SHR_DSZ64(tmp7, 0x00000020) 
U2a06: tmp2:= AND_DSZ32(0xffff0000, tmp4) 

U2a08: tmp2:= SELECTCC_DSZ32_CONDNZ(tmp2, 0x80000000) 
U2a09: tmp3:= NOTAND_DSZ32(tmp4, 0xffff0000) 
U2a0a: tmp3:= SELECTCC_DSZ32_CONDNZ(tmp3, 0x80000000) 

U2a0c: tmp2:= OR_DSZ32(tmp3, tmp2) 
U2a0d: tmp4:= NOTAND_DSZ32(0x80000000, tmp4) 
U2a0e: tmp4:= OR_DSZ32(tmp2, tmp4) 

U2a10: tmp7:= CONCAT_DSZ32(tmp4, tmp7) 
U2a11: LFNCEMARK-> MOVETOCREG_DSZ64(tmp7, tmp1) !m2 SEQW GOTO U1bd0
U2a12: tmp7:= MOVEFROMCREG_DSZ64( , 0x692) 

U2a14: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64(tmp7, 0x692) 
U2a15: tmp5:= SUB_DSZ16(0x00007c00, tmp1) 
U2a16: tmp5:= SHR_DSZ32(tmp5, 0x00000002) 

U2a18: tmp5:= SUB_DSZ32(tmp5, tmp1) 
U2a19: tmp5:= SUB_DSZ16(0x00007c00, tmp5) 
U2a1a: tmp5:= SHL_DSZ32(tmp5, 0x00000005) 

U2a1c: tmp3:= ADD_DSZ32(0x00007ac0, tmp5) 
U2a1d: MOVETOCREG_DSZ64(0x00000000, 0x000) 
U2a1e: tmp6:= ZEROEXT_DSZ32(0x00030600) 

U2a20: MOVETOCREG_DSZ64(tmp6, 0x6a1) !m2 
U2a21: tmp9:= SUB_DSZ16(0x00007c00, tmp1) 
U2a22: LFNCEMARK-> tmp8:= MOVETOCREG_DSZ64(tmp9, 0x6a0) !m2 

U2a24: tmp12:= SUB_DSZ32(0x00000001, tmp0) 
U2a25: SYNCMARK-> UFLOWCTRL( , tmp12, MSLOOPCTR) 
U2a26: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U34cd

U2a28: SAVEUIP( , 0x01, U1f9a) !m0 SEQW GOTO U5669
U2a29: MOVETOCREG_DSZ64(tmp1, 0x3ff, 32) !m1,m2 
U2a2a: tmp1:= MOVEFROMCREG_DSZ64( , 0x30c, 32) !m1,m2 

U2a2c: MOVETOCREG_BTS_DSZ64(tmp1, 0x0000001c, 0x30c) !m1,m2 
U2a2d: MOVETOCREG_DSZ64(tmp0, 0x3ff, 32) !m1,m2 
U2a2e: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1,m2 

U2a30: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000005, U304e) !m1,m2 SEQW GOTO U2a2e
U2a31: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U2a32: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U2a34: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U2a35) !m1 SEQW GOTO U2a32
U2a35: MOVETOCREG_DSZ64(tmpv0, 0x22b, 32) !m1 
U2a36: tmp15:= ZEROEXT_DSZ32(0x000006ff) 

U2a38: tmp15:= CONCAT_DSZ16(tmp15, 0x0000000f) SEQW GOTO U5a6d
U2a39: tmp3:= MOVEFROMCREG_DSZ64( , 0x486) 
U2a3a: tmp9:= ZEROEXT_DSZ32(0x000001fd) 

U2a3c: tmm5:= unk_744(tmm1) 
U2a3d: tmm6:= unk_660(tmm5) 
U2a3e: tmp6:= PINTMOVDTMM2I_DSZ64(tmm6) 

U2a40: tmm4:= unk_73a() SEQW GOTO U6920
U2a41: mm2:= unk_7ea(tmm7) 
U2a42: tmp2:= ADD_DSZ32(0x00006000, tmp2) 

U2a44: tmm0:= unk_7c2(mm2, tmm7) 
U2a45: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp6, U2a48) 
U2a46: LFNCEMARK-> tmm6:= unk_5ff(tmm7) !m2 

U2a48: tmp12:= OR_DSZ16(0x00000010, tmp12) SEQW GOTO U0636
U2a49: tmp3:= LDZX_DSZN_ASZ32_SC4(tmp2, IMM_MACRO_13, mode=0x0b, tmp4) !m0,m1 
U2a4a: tmp3:= SUB_DSZN(tmp3, r64idx) !m1 

U2a4c: tmp5:= LDZX_DSZN_ASZ32_SC4(tmp2, mode=0x0b, tmp4) !m1 
U2a4d: tmp6:= LDZX_DSZN_ASZ32_SC4(tmp2, IMM_MACRO_ALIAS_DATASIZE, mode=0x0b, tmp4) !m0,m1 
U2a4e: r64dst:= unk_17d(tmp3, tmp5) !m1 

U2a50: tmp2:= unk_17d(tmp3, tmp6) !m1 SEQW UEND0
U2a51: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U2a52: tmp12:= TESTUSTATE(tmp9, UCODE, 0x0800) ? SEQW GOTO U2e91

U2a54: tmp3:= READURAM( , 0x008b, 64) 
U2a55: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000000, U2e91) !m1 
U2a56: LFNCEWAIT-> tmp15:= READURAM( , 0x001f, 64) 

U2a58: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000008, U2a59) !m1 SEQW GOTO U6324
U2a59: tmp15:= ADD_DSZ64(0x00000001, tmp9) 
U2a5a: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp15, U04b6) 

U2a5c: LFNCEWAIT-> tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9) 
U2a5d: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U04b6) !m0 
U2a5e: tmp13:= ZEROEXT_DSZ32(0x00000013) 

U2a60: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp9) 
U2a61: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000000, U2d62) !m1 
U2a62: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp9) 

U2a64: tmp15:= AND_DSZ32(0xfe036dfb, tmp7) 
U2a65: tmp15:= SUB_DSZ32(0x00036dfb, tmp15) 
U2a66: tmp13:= ZEROEXT_DSZ32(0x00000014) 

U2a68: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2d62) 
U2a69: tmp15:= READURAM( , 0x0077, 64) 
U2a6a: tmp15:= BT_DSZ64(tmp15, 0x0000002e) 

U2a6c: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, tmp7) 
U2a6d: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000018, U2d62) !m1 
U2a6e: tmp15:= READURAM( , 0x0035, 64) 

U2a70: tmp15:= BT_DSZ64(tmp15, 0x0000003c) 
U2a71: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, tmp7) 
U2a72: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000017, U2d62) !m0,m1 

U2a74: tmp3:= AND_DSZ32(0xfffffffffffff000, tmp3) SEQW SAVEUIP0 U2a75SEQW GOTO U5e62
U2a75: SYNCWAIT-> tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp3) 
U2a76: tmp15:= SUB_DSZ32(0x00000000, tmp7) 

U2a78: tmp10:= ZEROEXT_DSZ32(0x00000016) 
U2a79: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5819) 
U2a7a: tmp15:= SHR_DSZ64(tmp7, 0x00000021) 

U2a7c: tmp10:= ZEROEXT_DSZ32(0x00000018) 
U2a7d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5819) 
U2a7e: tmp7:= BT_DSZ64(tmp7, 0x00000020) 

U2a80: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U2a82
U2a81: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp7, U5819) 
U2a82: tmp15:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00080000) 

U2a84: tmp0:= OR_DSZ32(tmp15, tmp0) 
U2a85: WRITEURAM(tmp9, 0x0055, 64) !m2 
U2a86: tmp0:= BTS_DSZ32(tmp0, 0x00000012) 

U2a88: SAVEUIP( , 0x00, U6325) SEQW GOTO U2999
U2a89: tmp1:= READURAM( , 0x001f, 64) 
U2a8a: tmp1:= NOTAND_DSZ32(0x00000007, tmp1) 

U2a8c: WRITEURAM(tmp1, 0x001f, 32) 
U2a8d: tmp0:= MOVEFROMCREG_DSZ64( , 0x78e) 
U2a8e: MOVETOCREG_DSZ64(tmp0, 0x067) 

U2a90: tmp2:= ZEROEXT_DSZ32() SEQW GOTO U43ae
U2a91: tmp6:= SUB_DSZ32(0x00000284, tmp13) 
U2a92: tmp6:= SHR_DSZ32(tmp6, 0x00000006) 

U2a94: tmp5:= ADD_DSZ64(0x00000284, tmp14) 
U2a95: tmp11:= ZEROEXT_DSZ32(0x00006ab8) 
U2a96: tmp11:= CONCAT_DSZ16(0x00000001, tmp11) 

U2a98: WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U51b2
compute_ucode_sha_update:
U2a99: tmp1:= CONCAT_DSZ16(0xffffffffffffffff) 
U2a9a: tmp2:= CONCAT_DSZ16(tmp7) 

U2a9c: LFNCEWAIT-> STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_1b, mode=0x18,  , tmp3) !m0,m1 
U2a9d: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_23, mode=0x18,  , tmp2) !m0,m1 
U2a9e: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_2b, mode=0x18,  , tmp4) !m0,m1 

U2aa0: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_33, mode=0x18,  , tmp1) !m0,m1 SEQW URET0
U2aa1: tmp3:= SAVEUIP_REGOVR( , 0x01, U2aa2, 0x3210) !m0 SEQW GOTO U5eaa
U2aa2: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 

U2aa4: LFNCEWAIT-> unk_256() !m1 SEQW GOTO U2792
U2aa5: MOVETOCREG_DSZ64(tmp13, 0x7f8) !m2 
U2aa6: WRITEURAM(tmp12, 0x003d, 64) !m2 

U2aa8: tmp11:= ZEROEXT_DSZ32(0x00000025) 
U2aa9: MOVETOCREG_DSZ64(tmp11, 0x00b) !m2 
U2aaa: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 

U2aac: tmp0:= CONCAT_DSZ16(0x00000001) SEQW GOTO U3b59
U2aad: tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 
U2aae: WRITEURAM(tmp3, 0x004a, 64) 

U2ab0: tmp15:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U2ab1: tmp3:= SUB_DSZN(tmp15, tmp3) !m1 
U2ab2: tmp15:= READURAM( , 0x0047, 64) !m2 

U2ab4: SYNCMARK-> MOVETOCREG_DSZ64(tmp15, 0x6c5) !m2 SEQW GOTO U4dd9
U2ab5: tmpv0:= NOTAND_DSZ64(0x0000000f, tmp3) 
U2ab6: MOVETOCREG_DSZ64(tmpv0, 0x01c) 

U2ab8: tmpv0:= AND_DSZ32(0x0000c000, tmp3) 
U2ab9: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv0, U06ae) 
U2aba: tmp5:= ZEROEXT_DSZ32(0x00000025) 

U2abc: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, 0x00b) !m2 SEQW GOTO U3b99
U2abd: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000016, U2ac1) !m0,m1 
U2abe: tmp15:= OR_DSZ64(rax) 

U2ac0: MOVETOCREG_DSZ64(tmp15, 0x2c0, 32) !m1,m2 
U2ac1: tmp0:= BTR_DSZ64(tmp0, 0x00000017) 
U2ac2: WRITEURAM(tmp0, 0x005c, 64) !m2 

U2ac4: LFNCEWAIT-> SAVEUIP( , 0x01, U799e) !m0 SEQW GOTO U3130
U2ac5: SAVEUIP( , 0x01, U5e92) !m0 
U2ac6: tmp10:= ZEROEXT_DSZ32(0x0000bd00) 

U2ac8: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp10) !m2 
U2ac9: tmp2:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 
U2aca: tmp1:= SUB_DSZ64(tmp2, tmp1) 

U2acc: STADSTGBUF_DSZ64_ASZ16_SC1(tmp10,  , tmp1) !m2 SEQW URET1
U2acd: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U3b3d
U2ace: LFNCEWAIT-> rsp:= LDPPHYS_DSZ16_ASZ32_SC4( , 0x00000002, mode=0x0f, tmp8) 

FUN_ucode_0002ad0:
U2ad0: tmp2:= LDPPHYS_DSZ16_ASZ32_SC4( , 0x00000004, mode=0x0f, tmp8) SEQW GOTO U3b40
U2ad1: tmp15:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U2ad2: LFNCEMARK-> MOVETOCREG_BTR_DSZ64(tmp15, 0x7f0) !m2 

U2ad4: AETTRACE(0x0e) 
U2ad5: tmp2:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U2ad6: SYNCFULL-> MOVETOCREG_BTR_DSZ64(tmp2, 0x00000002, 0x6c3) !m0,m2 

U2ad8: tmp14:= CONCAT_DSZ32(tmp14, 0x00005b74) SEQW GOTO U05ed
U2ad9: tmp7:= PINTMOVDTMM2I_DSZ64(tmm0) 
U2ada: tmp3:= BT_DSZ16(tmp9, 0x0000000d) 

U2adc: tmp7:= MOVEMERGEFLGS_DSZ64(tmp7, tmp3) 
U2add: tmp3:= BTS_DSZ32(0x00000000, 0x0000000f) 
U2ade: tmp7:= CMOVCC_DSZ32_CONDB(tmp7, tmp3) 

U2ae0: tmm0:= unk_744(mm7) SEQW GOTO U517a
U2ae1: mm4:= unk_72a(tmm2) 
U2ae2: tmp5:= XOR_DSZ8(0x00000001, tmp4) 

U2ae4: mm4:= unk_72a(tmm3) 
U2ae5: tmp5:= MOVEMERGEFLGS_DSZ64(tmp5, tmp3) 
U2ae6: tmp4:= CMOVCC_DSZ32_CONDNZ(tmp5, tmp4) 

U2ae8: tmm0:= unk_702(mm4, tmm0) SEQW GOTO U1432
U2ae9: tmp5:= ZEROEXT_DSZ16(0x0000ff81) 
U2aea: tmp11:= SUB_DSZ32(tmp1, 0x0000ff81) 

U2aec: tmm4:= unk_7c2(tmm3) 
U2aed: tmm0:= unk_7c2( , tmm0) 
U2aee: tmm0:= unk_6aa(tmm0, tmm4) 

U2af0: LFNCEMARK-> tmm0:= unk_62e(tmm0) !m2 SEQW GOTO U64a0
U2af1: tmm7:= unk_5b9() 
U2af2: tmp11:= ZEROEXT_DSZ32(0x000023ce) 

U2af4: tmp13:= ZEROEXT_DSZ64(0x00004681) 
U2af5: tmp12:= WRMSLOOPCTRFBR(0x00000001) 
U2af6: tmp14:= SAVEUIP(0x01, U0ca1) !m0 

U2af8: tmp8:= ZEROEXT_DSZ16(0x0000ff81) SEQW GOTO U2bde
U2af9: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 
U2afa: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 

U2afc: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000030, 0x48c) 
U2afd: tmp6:= AND_DSZ32(0x00000010, tmp5) 
U2afe: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U37d1) 

U2b00: LFNCEWAIT-> tmp14:= MOVEFROMCREG_DSZ64( , 0x01a) SEQW GOTO U4601
U2b01: tmp7:= SHR_DSZ32(tmp8, 0x00000004) 
U2b02: tmm7:= unk_702(mm7) 

U2b04: tmm2:= unk_496(tmm5, tmm7) 
U2b05: tmm1:= unk_496(tmm3, tmm7) 
U2b06: tmm5:= FMOV( , tmm4) 

U2b08: tmm6:= FMOV( , tmm6) SEQW GOTO U65ea
U2b09: STAD_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, tmp2) !m0 
U2b0a: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp0, U21fe) 

U2b0c: SAVEUIP( , 0x01, U21fe) !m0 
U2b0d: MOVE_DSZ32() 
U2b0e: LBSYNC(0x00000001) 

U2b10: LBSYNC(0x00000007) SEQW GOTO U06c6
U2b11: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000b, U5a62) !m0,m2 
U2b12: tmp10:= ZEROEXT_DSZ32(0x0000000d) 

U2b14: LFNCEMARK-> tmm6:= unk_701(tmm2) !m2 
lbsync_full:
U2b15: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U2b16: tmp3:= AND_DSZ16(tmp2, 0x00000001) 

U2b18: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1a50) SEQW GOTO U3ab6
U2b19: tmp9:= unk_6a0() 
U2b1a: tmp10:= FCOM2(tmp9, 0x00000000) 

U2b1c: mm1:= unk_76a(tmm2) 
U2b1d: tmp1:= MOVEINSERTFLGS_DSZ32(tmp1) 
U2b1e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U1bd0) 

U2b20: tmp0:= unk_6a0() SEQW GOTO U1bd0
U2b21: tmp1:= READURAM( , 0x000d, 64) 
U2b22: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 

U2b24: tmp2:= READURAM( , 0x0020, 64) 
U2b25: tmp2:= AND_DSZ32(0x00007ffe, tmp2) 
U2b26: tmp2:= SHR_DSZ32(tmp2, 0x00000001) 

U2b28: LFNCEMARK-> PORTOUT_DSZ8_ASZ16_SC1(0x50b0, tmp2, tmp1) !m2 SEQW GOTO U6380
U2b29: tmp1:= READUIP_REGOVR(0x01) !m0 
U2b2a: tmp1:= SUB_DSZ16(0x00002cc9, tmp1) 

U2b2c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3002) 
U2b2d: tmp12:= BTS_DSZ64(tmp12, 0x0000003f) 
U2b2e: tmp12:= BTS_DSZ64(tmp12, 0x0000003e) 

U2b30: SYNCFULL-> MOVETOCREG_DSZ64(tmp12, tmp9) !m2 SEQW URET0
U2b31: tmp1:= TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U04fc
U2b32: tmp12:= READURAM( , 0x0057, 64) 

U2b34: tmp0:= ZEROEXT_DSZ32(0x00000031) SEQW GOTO U2ce6
U2b35: SAVEUIP( , 0x00, U0816) 
U2b36: tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 

U2b38: tmp4:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U2b39: MOVETOCREG_DSZ64( , 0x00000000, 0x065) !m2 
U2b3a: tmp4:= SUB_DSZN(tmp4, tmp3) !m1 

U2b3c: LFNCEWAIT-> tmp3:= MOVE_DSZ32(0x00000003) SEQW GOTO U6676
U2b3d: tmp5:= SUB_DSZ64(0x00000200, tmp7) 
U2b3e: tmp6:= ADD_DSZ32(0x00000200) 

U2b40: tmp0:= ZEROEXT_DSZ32() 
U2b41: tmp1:= ZEROEXT_DSZ32() 
U2b42: tmp8:= MOVEMERGEFLGS_DSZ32(0x000007c4, tmp13) 

U2b44: tmp8:= CMOVCC_DSZ32_CONDB(tmp8, 0x00000c4c) SEQW GOTO U5f2d
U2b45: tmp5:= AND_DSZ32(0x000000c0, tmp7) 
U2b46: tmp2:= SUB_DSZ32(0x00000080, tmp5) 

U2b48: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U4205) 
U2b49: LFNCEMARK-> tmm6:= unk_7c0() !m2 
U2b4a: tmp4:= XOR_DSZ16(0x0000411e, tmp3) 

U2b4c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, tmp3) SEQW GOTO U031a
U2b4d: tmp13:= ADD_DSZ32(0x00000020, tmp13) 
U2b4e: tmp6:= SHR_DSZ32(tmp13, 0x00000006) 

U2b50: tmp5:= ADD_DSZ64(0x00000060, tmp14) 
U2b51: tmp11:= ZEROEXT_DSZ16(0x00006939) 
U2b52: tmp11:= CONCAT_DSZ16(0x00000001, tmp11) 

U2b54: WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U519c
U2b55: tmp11:= CONCAT_DSZ16(0x00000200) 
U2b56: tmp11:= OR_DSZ32(0x00000009, tmp11) 

U2b58: WRITEURAM(tmp11, 0x000e, 32) SEQW SAVEUIP0 U2b59SEQW GOTO U60f2
U2b59: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x00c0) !m2 
U2b5a: tmp1:= BTR_DSZ32(tmp1, 0x00000003) 

U2b5c: PORTOUT_DSZ8_ASZ16_SC1(0x00c0,  , tmp1) !m2 SEQW GOTO U6732
U2b5d: rax:= ZEROEXT_DSZ32(0x80000001) 
U2b5e: tmp0:= CONCAT_DSZ32(0x0000357a) 

U2b60: MOVETOCREG_DSZ64(tmp0, 0x2c0, 32) !m1 
U2b61: tmp2:= SAVEUIP( , 0x01, U3c21) !m0 
U2b62: SYNCFULL-> tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1,m2 

U2b64: tmp2:= OR_DSZ32(tmp0, tmp2) 
U2b65: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000005, U1db2) !m2 SEQW GOTO U2b62
U2b66: tmp0:= ZEROEXT_DSZ32(0x00000083) 

U2b68: tmp0:= CONCAT_DSZ16(tmp0, 0x00000200) 
U2b69: MOVETOCREG_DSZ64(tmp0, 0x631) !m2 
U2b6a: MOVETOCREG_DSZ64( , 0x00000000, 0x634) !m2 

U2b6c: MOVETOCREG_DSZ64( , 0x00000000, 0x635) !m2 
U2b6d: MOVETOCREG_DSZ64( , 0x00000000, 0x636) !m2 
U2b6e: MOVETOCREG_DSZ64( , 0x00000000, 0x637) !m2 

U2b70: LFNCEWTMRK-> MOVETOCREG_DSZ64( , 0x00000000, 0x638) !m2 
U2b71: tmp2:= ZEROEXT_DSZ32(0x00000081) 
U2b72: tmp2:= CONCAT_DSZ16(tmp2) 

U2b74: WRMSLOOPCTRFBR( , 0x0000003f) 
U2b75: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp2, 0x630) 
U2b76: tmp2:= ADD_DSZ32(0x00000001, tmp2) 

U2b78: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2b75
U2b79: tmp0:= ADD_DSZ32(0x00000001, tmp0) 
U2b7a: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000003, U060c) !m0 

U2b7c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x631) !m2 SEQW GOTO U2b71
U2b7d: tmp8:= ZEROEXT_DSZ32(0x00000401) 
U2b7e: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000000, U5675) !m2 

U2b80: tmp8:= ZEROEXT_DSZ32(0x00000403) 
U2b81: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000001, U4d41) 
U2b82: tmp8:= ZEROEXT_DSZ32(0x00000703) 

U2b84: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000002, U4d41) !m0 
U2b85: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000003, U618d) !m0,m1 SEQW GOTO U03e4
U2b86: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f6) 

U2b88: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U2771) !m0,m1 
U2b89: tmp2:= READURAM( , 0x0023, 64) 
U2b8a: tmp2:= AND_DSZ64(0x00000100, tmp2) 

U2b8c: tmp3:= AND_DSZ64(rax, tmp2) 
U2b8d: tmp11:= SHR_DSZ64(tmp3, 0x00000001) 
U2b8e: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U2b90: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U2b98
U2b91: tmp0:= READURAM( , 0x0057, 64) 
U2b92: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000003c8, tmp0) 

U2b94: tmp4:= AND_DSZ64(tmp3, tmp0) 
U2b95: tmp0:= ZEROEXT_DSZ32(0x0000003f) 
U2b96: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U6399) 

U2b98: tmp0:= READURAM( , 0x005b, 64) !m2 
U2b99: tmp6:= SHR_DSZ64(tmp0, 0x00000038) 
U2b9a: tmp6:= OR_DSZ64(tmp6, tmp2) 

U2b9c: tmp13:= SAVEUIP(0x00, U4d65) SEQW GOTO U6aa1
U2b9d: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1 
U2b9e: SYNCFULL-> tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 

U2ba0: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U2ba1) !m1 SEQW GOTO U2b9e
U2ba1: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1,m2 
U2ba2: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U28b0) !m1 

U2ba4: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000009, U3bc1) !m1,m2 
U2ba5: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U0c52) SEQW GOTO U2ba1
U2ba6: tmp1:= BTS_DSZ32(tmp1, 0x00000010) 

U2ba8: tmp2:= BTS_DSZ32(tmp2, 0x00000017) 
U2ba9: PORTOUT_DSZ32_ASZ16_SC1(0x4910,  , tmp1) !m2 
U2baa: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 

U2bac: tmp4:= ADD_DSZ64(0x00000008, tmp4) 
U2bad: PORTOUT_DSZ32_ASZ16_SC1(0x4918,  , tmp3) !m2 
U2bae: tmp3:= SHR_DSZ64(tmp3, 0x00000020) 

FUN_ucode_0002bb0:
U2bb0: PORTOUT_DSZ32_ASZ16_SC1(0x491c,  , tmp3) !m2 
U2bb1: tmp1:= BTS_DSZ32(tmp1, 0x0000001d) 
U2bb2: PORTOUT_DSZ32_ASZ16_SC1(0x4910,  , tmp1) !m2 

U2bb4: PORTOUT_DSZ32_ASZ16_SC1(0x490c,  , tmp2) !m2 
U2bb5: tmp3:= AND_DSZ32(0x00000fff, tmp2) 
U2bb6: tmp3:= SUB_DSZ32(0x00000fff, tmp3) 

U2bb8: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U064c) 
U2bb9: SYNCFULL-> tmp2:= ADD_DSZ32(0x00000001, tmp2) 
U2bba: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2baa

U2bbc: NOP SEQW GOTO U1f9a
U2bbd: MOVETOCREG_DSZ64(tmp0, 0x486) !m2 
U2bbe: tmp3:= NOTAND_DSZ32(tmp0, tmp9) 

U2bc0: tmp3:= AND_DSZ32(0x0000003f, tmp3) 
U2bc1: tmp9:= NOTAND_DSZ16(0x00008080, tmp9) 
U2bc2: tmp2:= CMOVCC_DSZ16_CONDZ(tmp3, 0x00008080) 

U2bc4: tmp2:= OR_DSZ16(tmp9, tmp2) 
U2bc5: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, 0x48c) !m2 SEQW GOTO U221e
U2bc6: SAVEUIP( , 0x00, U5bf4) 

U2bc8: tmp15:= MOVEFROMCREG_DSZ64( , 0x6c5) 
U2bc9: tmp15:= SHL_DSZ32(tmp15, 0x00000004) 
U2bca: tmp8:= MOVEFROMCREG_DSZ64( , 0x01c) 

U2bcc: tmp8:= OR_DSZ32(tmp15, tmp8) 
U2bcd: tmp15:= MOVEFROMCREG_DSZ64( , 0x070) 
U2bce: tmp8:= CONCAT_DSZ16(tmp15, tmp8) 

U2bd0: tmp8:= CONCAT_DSZ32(tmp8, tmp4) 
FUN_ucode_0002bd1:
U2bd1: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000120,  , tmp8) 
U2bd2: tmp8:= MOVEFROMCREG_DSZ64( , 0x51b) 

U2bd4: tmp8:= ZEROEXT_DSZ16( , tmp8) 
U2bd5: MOVETOCREG_DSZ64(tmp8, 0x562) 
U2bd6: tmp0:= ZEROEXT_DSZ32(0x00000c00) 

FUN_ucode_0002bd8:
U2bd8: tmp0:= CONCAT_DSZ16(0x0000fff0, tmp0) 
U2bd9: tmp0:= CONCAT_DSZ32(0x000000ff, tmp0) 
U2bda: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x563) SEQW SAVEUIP1 U2bdcSEQW GOTO U0164

U2bdc: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 
U2bdd: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000100,  , tmp0) SEQW URET0
patch_handle_0x07_write_uram:
U2bde: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U6005

U2be0: tmm0:= unk_534(tmm4) 
U2be1: tmm1:= unk_534(tmm7) SEQW GOTO U6008
U2be2: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) 

U2be4: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
U2be5: NOP 
U2be6: NOP 

U2be8: LFNCEWAIT-> LEA_DSZ8_ASZ32_SC1(tmp3) 
U2be9: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U2bed
U2bea: tmp1:= RDSEGFLD(UNK_SEG_09, FLGS) 

U2bec: MOVETOCREG_DSZ64(tmp1, 0x7f5) 
U2bed: tmp1:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U2bee: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, 0x78e) SEQW SAVEUIP1 U2bf0SEQW GOTO U3c0c

U2bf0: rsp:= ZEROEXT_DSZ64N(rsp) !m1 
U2bf1: LFNCEWAIT-> FETCHFROMEIP1_ASZ64( , tmp3) !m1 
U2bf2: tmp0:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 

U2bf4: WRSEGFLD(tmp0, CS, SEL+FLGS+LIM) 
U2bf5: tmp0:= RDSEGFLD(UNK_SEG_09, BASE) 
U2bf6: WRSEGFLD(tmp0, CS, BASE) 

U2bf8: SYNCWAIT-> MJMPTARGET_INDIRECT_ASZ64( , tmp3) !m1 SEQW UEND0
U2bf9: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U24d2
U2bfa: tmp2:= MOVEFROMCREG_DSZ64( , 0x067) 

U2bfc: AETTRACE( , tmp2, 0x0e) SEQW GOTO U24d2
U2bfd: tmp2:= LDZX_DSZ16_ASZ32_SC1(tmp2, mode=0x18) 
U2bfe: SIGEVENT( , 0x00000017) 

U2c00: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U2c01: tmp14:= READUIP_REGOVR(0x01) !m0 
U2c02: LFNCEWAIT-> tmp0:= unk_d61(tmp2) 

U2c04: tmp1:= unk_d61(tmp2) 
U2c05: tmp0:= CMOVCC_DSZ64_CONDNB(tmp1, tmp0) SEQW URET1
U2c06: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U0eed

U2c08: tmp14:= SAVEUIP(0x01, U0eed) !m0 
U2c09: SAVEUIP( , 0x00, U5d79) 
U2c0a: NOP 

U2c0c: TESTUSTATE( , UCODE, 0x0080) ? SEQW GOTO U4536
FUN_ucode_0002c0d:
U2c0d: NOP SEQW URET0
U2c0e: tmp15:= ZEROEXT_DSZ32(0x0000070f) 

U2c10: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U2c26
U2c11: tmp14:= READURAM( , 0x0012, 64) 
U2c12: NOP 

U2c14: SAVEUIP_REGOVR(0x01, U2c15, 0x00fe) !m0 SEQW GOTO U6d0c
U2c15: NOP 
U2c16: NOP 

U2c18: LFNCEWAIT-> tmpv0:= READURAM( , 0x0027, 64) SEQW SAVEUIP0 U2c19SEQW GOTO U334d
U2c19: NOP 
U2c1a: NOP 

U2c1c: LFNCEWAIT-> tmpv0:= READURAM( , 0x0028, 64) 
U2c1d: tmpv0:= SHR_DSZ64(tmpv0, 0x00000018) 
U2c1e: tmpv0:= NOTAND_DSZ64(0x000000ff, tmpv0) SEQW SAVEUIP0 U2c20SEQW GOTO U334d

U2c20: tmpv1:= MOVEFROMCREG_DSZ64( , 0x510) 
FUN_ucode_0002c21:
U2c21: tmpv0:= AND_DSZ32(0x00000002, tmpv1) 
U2c22: tmpv0:= SHR_DSZ32(tmpv0, 0x00000001) SEQW SAVEUIP0 U2c24SEQW GOTO U334d

U2c24: SAVEUIP( , 0x00, U3a34) 
U2c25: tmpv0:= ZEROEXT_DSZ32(tmpv1) SEQW SAVEUIP1 U2c26SEQW GOTO U334d
U2c26: NOP 

U2c28: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U2c29: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U2c2a: tmp0:= ZEROEXT_DSZ32(0x0000001c) 

U2c2c: tmp1:= READURAM( , 0x0043, 64) 
U2c2d: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U2c30
U2c2e: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U59e9) !m2 

U2c30: tmp0:= ZEROEXT_DSZ32(0x0002001c) 
U2c31: tmp1:= READURAM( , 0x004c, 64) 
U2c32: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U05ea

U2c34: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U59e9) !m2 SEQW GOTO U05ea
U2c35: tmp4:= OR_DSZN(rcx) !m1 
U2c36: MOVETOCREG_DSZ64(0x0000000b, 0x000) !m2 

U2c38: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U7774) 
U2c39: LFNCEWAIT-> tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 SEQW SAVEUIP1 U2c3aSEQW GOTO U6231
U2c3a: tmp4:= SUB_DSZN(0x00000001, tmp4) !m1 

U2c3c: rcx:= ZEROEXT_DSZ16N(tmp4, rcx) !m1 
U2c3d: MSLOOP-> rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 SEQW GOTO U2c38
U2c3e: unk_13f(tmp0) !m2 

U2c40: MOVETOCREG_DSZ64(tmp0, 0x7fe) 
U2c41: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x79e) !m0 
U2c42: tmp14:= ADD_DSZ64(0x00000110, tmp12) SEQW SAVEUIP0 U2c44SEQW GOTO U5d09

U2c44: LFNCEWTMRK-> unk_e6b( , tmp4) 
U2c45: tmp14:= ADD_DSZ64(0x00000120, tmp12) SEQW SAVEUIP0 U2c46SEQW GOTO U5d09
U2c46: unk_e6b( , tmp4) 

U2c48: tmp14:= ADD_DSZ64(0x00000108, tmp12) SEQW SAVEUIP0 U2c49SEQW GOTO U5d09
U2c49: unk_e6b( , tmp4) 
U2c4a: LFNCEWAIT-> tmp13:= RDSEGFLD(UNK_SEG_09, FLGS) 

U2c4c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp13, 0x7f5) !m2 
U2c4d: tmp14:= ADD_DSZ64(0x00000118, tmp12) SEQW SAVEUIP0 U2c4eSEQW GOTO U5d09
U2c4e: NOP 

U2c50: LFNCEWTMRK-> unk_e6b( , tmp4) 
U2c51: tmp14:= ADD_DSZ64(0x00000128, tmp12) SEQW SAVEUIP0 U2c52SEQW GOTO U5d09
U2c52: unk_e6b( , tmp4) 

U2c54: tmp14:= ADD_DSZ64(0x00000130, tmp12) SEQW SAVEUIP0 U2c55SEQW GOTO U5d09
U2c55: unk_e6b( , tmp4) 
U2c56: NOP 

U2c58: NOP SEQW GOTO U16dc
U2c59: tmp14:= READUIP_REGOVR(0x01) !m0 
U2c5a: tmp9:= AND_DSZ32(0x00000003, tmp1) 

U2c5c: tmp10:= SHR_DSZ32(0x0000000f, tmp2) 
U2c5d: tmp10:= SHL_DSZ32(tmp10, tmp9) 
U2c5e: tmp10:= NOTAND_DSZ32(0x0000000f, tmp10) 

U2c60: tmp15:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000003) 
U2c61: tmp9:= XOR_DSZ32(tmp15, tmp9) SEQW URET0
U2c62: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U1cb1

U2c64: tmp14:= SAVEUIP(0x01, U1cb0) !m0 
U2c65: TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U406c
U2c66: tmp9:= SHR_DSZ64(tmp6, 0x00000010) 

U2c68: tmp9:= AND_DSZ64(0x00000fff, tmp9) 
U2c69: tmp8:= ADD_DSZN(tmp11, tmp9) !m1 SEQW GOTO U5d91
U2c6a: tmp10:= READURAM( , 0x0063, 64) 

U2c6c: tmp10:= AND_DSZ32(0x00000010, tmp10) 
U2c6d: tmp2:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U2c6e: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x0000000a, U2c70) !m0,m1 SEQW GOTO U2c71

U2c70: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U5e62) SEQW SAVEUIP0 U2c71SEQW GOTO U6332
U2c71: tmp10:= READURAM( , 0x0064, 64) 
U2c72: tmp2:= READURAM( , 0x0065, 64) 

U2c74: tmp2:= CONCAT_DSZ32(tmp2, tmp10) 
U2c75: tmm1:= unk_744(mm2) 
U2c76: tmp2:= READURAM( , 0x0066, 64) 

U2c78: tmp2:= ZEROEXT_DSZ32(tmp2) 
U2c79: tmm1:= unk_782(mm2, tmm1) 
U2c7a: tmp2:= SHR_DSZ32(tmp2, 0x00000004) 

U2c7c: tmm1:= unk_7c2(mm2, tmm1) 
U2c7d: tmp2:= SHR_DSZ32(tmp2, 0x00000011) 
U2c7e: LFNCEMARK-> mm0:= unk_702(mm2, tmm1) 

U2c80: tmp2:= READURAM( , 0x0067, 64) 
U2c81: MOVETOCREG_DSZ64(tmp2, 0x48c) 
U2c82: tmp5:= SHR_DSZ16(tmp2, 0x0000000b) 

U2c84: tmp5:= AND_DSZ8(0x00000007, tmp5) 
U2c85: LFNCEWAIT-> MOVETOCREG_SHR_DSZ64(tmp2, 0x00000010, 0x06b) 
U2c86: NOP 

U2c88: SYNCFULL-> MOVETOCREG_DSZ64(tmp5, 0x073) SEQW GOTO U6380
U2c89: tmp2:= NOTAND_DSZ32(0x0000000c, tmp2) 
U2c8a: tmp1:= NOTAND_DSZ32(tmp2, tmp5) 

U2c8c: tmp5:= OR_DSZ32(tmp5, tmp2) 
U2c8d: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000006, U3204) !m0,m1,m2 
U2c8e: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x4c18) !m2 

U2c90: tmp1:= NOTAND_DSZ32(0x00000004, tmp1) 
U2c91: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(0x4c18,  , tmp1) !m2 SEQW GOTO U3204
U2c92: SIGEVENT( , 0x0000006f) 

U2c94: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U2cb0
U2c95: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x20f, 32) !m1,m2 
U2c96: tmp12:= ADD_DSZ32(0x00002e60, tmp15) 

U2c98: LFNCEWAIT-> WRMSLOOPCTRFBR( , 0x00004803) SEQW SAVEUIP0 U2c99SEQW GOTO U5799
U2c99: tmp0:= MOVEFROMCREG_DSZ64( , 0x20e, 32) !m1 
U2c9a: tmp12:= ADD_DSZ32(0x00002f60, tmp15) 

U2c9c: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp0) 
U2c9d: tmp2:= MOVEFROMCREG_DSZ64( , 0x7bb) 
U2c9e: tmp12:= ADD_DSZ32(0x00002f80, tmp15) 

U2ca0: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp2) 
U2ca1: tmp12:= ADD_DSZ32(0x00002fa0, tmp15) 
U2ca2: LFNCEWAIT-> WRMSLOOPCTRFBR( , 0x00003008) SEQW SAVEUIP0 U2ca4SEQW GOTO U5789

U2ca4: WRMSLOOPCTRFBR( , 0x00003806) SEQW SAVEUIP0 U2ca5SEQW GOTO U5799
U2ca5: tmp3:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1 
U2ca6: tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 

U2ca8: tmp3:= CONCAT_DSZ32(tmp2, tmp3) 
U2ca9: tmp12:= ADD_DSZ32(0x00003280, tmp15) 
U2caa: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp3) 

U2cac: tmp2:= MOVEFROMCREG_DSZ64( , 0x070) 
U2cad: tmp12:= ADD_DSZ32(0x00000ea0, tmp15) 
U2cae: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp2) 

U2cb0: LFNCEWAIT-> tmp10:= ZEROEXT_DSZ32(0x0000bd80) SEQW GOTO U7902
U2cb1: tmp1:= SHL_DSZ32(tmp1, 0x0000000a) 
U2cb2: tmp5:= OR_DSZ32(tmp1, tmp5) 

U2cb4: tmp1:= SHR_DSZ32(tmp2, 0x00000002) 
U2cb5: tmp1:= AND_DSZ32(0x00000001, tmp1) 
U2cb6: tmp5:= OR_DSZ32(tmp1, tmp5) 

U2cb8: tmp1:= SHR_DSZ32(tmp2, 0x00000009) 
U2cb9: tmp1:= AND_DSZ32(0x00000002, tmp1) SEQW GOTO U3056
U2cba: tmp8:= MOVEFROMCREG_DSZ64( , 0x102) 

U2cbc: tmp8:= ZEROEXT_DSZ32(tmp8) 
U2cbd: tmp1:= ADD_DSZ32(0x00000001, tmp8) 
U2cbe: tmp1:= AND_DSZ32(tmp1, tmp8) 

U2cc0: tmp10:= SELECTCC_DSZ64_CONDZ(tmp1, 0x00000010) 
U2cc1: tmp1:= READURAM( , 0x0010, 64) 
U2cc2: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 

U2cc4: tmp8:= CONCAT_DSZ32(tmp1, tmp8) 
U2cc5: tmp8:= NOTAND_DSZ64(tmp8, 0xffffffffffffffff) 
U2cc6: tmp3:= MOVEFROMCREG_DSZ64( , 0x101) 

U2cc8: SAVEUIP_REGOVR( , 0x01, U2cc9, 0x8321) !m0 SEQW GOTO U6d70
U2cc9: tmp1:= MOVEFROMCREG_DSZ64( , 0x0b1) 
U2cca: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp1, 0x0b1, tmp10) !m2 

U2ccc: LFNCEWAIT-> tmp8:= MOVEFROMCREG_DSZ64( , 0x0b1) 
U2ccd: MOVETOCREG_DSZ64(tmp5, 0x7f0) !m2 
U2cce: SAVEUIP_REGOVR( , 0x00, U2cd0, 0x8321) SEQW GOTO U5d52

U2cd0: tmp2:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U2cd1: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp2, 0x00000002, 0x6c3) !m0,m2 
U2cd2: tmp1:= SHR_DSZ64(tmp8, 0x00000020) 

U2cd4: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U06ad) 
U2cd5: tmp8:= TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U2cd8
U2cd6: tmp8:= MOVEINSERTFLGS_DSZ32(0x00000001, tmp8) 

U2cd8: tmp1:= READUIP_REGOVR(0x01) !m0 
FUN_ucode_0002cd9:
U2cd9: tmp14:= ZEROEXT_DSZ16(tmp14, tmp1) 
U2cda: SYNCFULL-> UFLOWCTRL( , tmp14, URET1) SEQW GOTO U5eaa

U2cdc: tmp6:= TESTUSTATE(tmp13, SYS, UST_SMM) !m1 ? SEQW GOTO U5735
U2cdd: tmp0:= ZEROEXT_DSZ32(0x00000030) 
U2cde: tmp12:= READURAM( , 0x0057, 64) 

U2ce0: tmp1:= AND_DSZ32(0x000001bf, tmp3) SEQW SAVEUIP0 U2ce1SEQW GOTO U2972
U2ce1: tmp1:= OR_DSZ32(tmp5, tmp1) 
U2ce2: tmp6:= READURAM( , 0x0043, 64) 

U2ce4: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000032, U69d5) !m0,m1 
U2ce5: WRITEURAM(tmp9, 0x003e, 64) !m2 
U2ce6: tmp10:= TESTUSTATE(tmp13, SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3752

U2ce8: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000308, tmp12, tmp2) SEQW GOTO U4f60
U2ce9: SAVEUIP( , 0x01, U1b64) !m0 
U2cea: tmp13:= READURAM( , 0x0035, 64) 

U2cec: BTUJB_DIRECT_NOTTAKEN(tmp13, 0x0000000a, U2ced) !m0,m1 SEQW GOTO U3130
U2ced: SAVEUIP( , 0x01, U3b99) !m0 
U2cee: tmp9:= MOVEFROMCREG_DSZ64( , 0x2f1, 32) !m1 

U2cf0: tmp9:= AND_DSZ32(0x00000600, tmp9) 
U2cf1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U3d1c) SEQW GOTO U3130
U2cf2: tmp4:= MOVEFROMCREG_DSZ64( , 0x7f5) 

U2cf4: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U2cfe
U2cf5: tmp1:= NOTAND_DSZ32(tmp11, tmp10) 
U2cf6: tmp1:= AND_DSZ32(tmp1, tmp6) 

U2cf8: tmp7:= NOTAND_DSZ32(tmp7, 0x80000000) 
U2cf9: tmp2:= SHL_DSZ32(tmp4, 0x00000012) 
U2cfa: tmp2:= OR_DSZ32(tmp7, tmp2) 

U2cfc: tmp2:= AND_DSZ32(tmp1, tmp2) 
U2cfd: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp2, U2711) 
U2cfe: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U2d06

U2d00: tmp1:= SUB_DSZ32(0x00006000, tmp4) 
U2d01: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2711) 
U2d02: tmp2:= RDSEGFLD(TSS, FLGS) 

U2d04: tmp2:= AND_DSZ32(0x0000001f, tmp2) 
U2d05: LFNCEWTMRK-> CMPUJZ_DIRECT_NOTTAKEN(tmp2, 0x00000003, U2711) !m0,m1 
U2d06: TESTUSTATE( , UCODE, !0x0080) !m0 ? SEQW SAVEUIP1 U2d08? SEQW GOTO U5b35

U2d08: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U2070
U2d09: tmp5:= XOR_DSZ32(0x00000400, tmp5) 
U2d0a: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp5, 0x7ff) 

U2d0c: SAVEUIP( , 0x01, U2070) !m0 
U2d0d: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
U2d0e: tmp1:= AND_DSZ32(0x00000080, tmp0) 

U2d10: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x7f1) 
U2d11: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 
U2d12: tmp0:= NOTAND_DSZ32(tmp1, tmp0) 

U2d14: MOVETOCREG_DSZ64(tmp0, 0x7f9, 32) !m1 SEQW URET1
U2d15: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U4919
U2d16: tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0 

U2d18: tmp3:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 SEQW GOTO U4919
U2d19: LFNCEMARK-> LBSYNC(0x00000002) 
U2d1a: SAVEUIP( , 0x01, U77b8) !m0 

U2d1c: tmp11:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U2d1d: TESTUSTATE( , SYS, !UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW URET0
U2d1e: tmp5:= READURAM( , 0x0018, 64) 

U2d20: tmp6:= READURAM( , 0x0017, 64) 
U2d21: tmp2:= ZEROEXT_DSZ32(0x00000048) SEQW URET1
U2d22: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U5db8

U2d24: PORTOUT_DSZ32_ASZ16_SC1(0x0010,  , 0x00000000) !m2 
U2d25: tmp0:= ZEROEXT_DSZ32(0x00000002) SEQW SAVEUIP0 U2d26SEQW GOTO U60e5
U2d26: SAVEUIP( , 0x00, U28cd) 

U2d28: NOP SEQW SAVEUIP1 U2d29SEQW GOTO U0cb9
U2d29: PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , 0x00000000) !m2 
U2d2a: PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 

U2d2c: PORTOUT_DSZ32_ASZ16_SC1(0x0050,  , 0x00000000) !m2 SEQW URET0
U2d2d: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000f, U2d2e) !m0,m1 SEQW GOTO U2dd6
U2d2e: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 

FUN_ucode_0002d30:
U2d30: MOVETOCREG_DSZ64(tmp15, 0x752) !m2 SEQW GOTO U2dd8
U2d31: LFNCEWTMRK-> MOVETOCREG_SHL_DSZ64(r64src, 0x00000004, 0x288) !m1 
U2d32: tmp8:= SHR_DSZ64(tmp8, 0x00000014) 

U2d34: tmp8:= AND_DSZ32(0x0000000f, tmp8) 
U2d35: tmp8:= SUB_DSZ32(tmp3, tmp8) 
U2d36: tmp3:= SUB_DSZ32(tmp3, r64src) 

U2d38: tmp3:= AND_DSZ32(tmp8, tmp3) 
U2d39: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp3, U00e9) SEQW GOTO U008e
U2d3a: tmp13:= READURAM( , 0x008e, 64) 

U2d3c: tmp14:= SHR_DSZ64(tmp13, 0x00000020) 
U2d3d: tmp13:= MOVEINSERTFLGS_DSZ32(tmp14, tmp13) 
U2d3e: tmp14:= READURAM( , 0x008d, 64) 

U2d40: tmp0:= ZEROEXT_DSZ64(0xffffffffffffff00) 
U2d41: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000020) 
U2d42: CMPUJNZ_DIRECT_NOTTAKEN(tmp5, U57b5, tmp0) !m2 

U2d44: tmp12:= WRMSLOOPCTRFBR(0x00000019) 
U2d45: tmp2:= ZEROEXT_DSZ32() 
U2d46: tmp6:= ADD_DSZ64(0x00000028, tmp7) 

U2d48: tmp0:= ZEROEXT_DSZ64(0xffffffffffffffff) 
U2d49: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp2) 
U2d4a: CMPUJNZ_DIRECT_NOTTAKEN(tmp5, U57b5, tmp0) !m2 

U2d4c: tmp2:= ADD_DSZ64(0x00000008, tmp2) 
U2d4d: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2d49
U2d4e: tmp0:= CONCAT_DSZ32(0x0001ffff, tmp0) 

U2d50: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x000000f8) 
U2d51: CMPUJNZ_DIRECT_NOTTAKEN(tmp5, U57b5, tmp0) !m2 
U2d52: tmp12:= WRMSLOOPCTRFBR(0x00000003) 

U2d54: tmp2:= ZEROEXT_DSZ32() 
U2d55: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0xffffffffffffffe0, tmp2) 
U2d56: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2) 

U2d58: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, U57b5, tmp1) !m2 
U2d59: tmp2:= ADD_DSZ64(0x00000008, tmp2) 
U2d5a: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2d55

U2d5c: tmp15:= CLC() SEQW GOTO U57b6
U2d5d: LFNCEWAIT-> tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 
U2d5e: AETTRACE( , tmp3, 0x0d) 

U2d60: MOVETOCREG_DSZ64( , 0x00000000, 0x51e) !m2 
U2d61: MOVETOCREG_DSZ64( , 0x00000000, 0x513) !m2 
U2d62: LFNCEWTMRK-> MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 

U2d64: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000238, tmp12, tmp13) 
U2d65: MOVEINSERTFLGS_DSZ32(0x00000008) !m2 SEQW GOTO U1bd0
U2d66: WRMSLOOPCTRFBR( , 0x00000003) 

U2d68: rdi:= unk_17c() 
U2d69: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2d68
U2d6a: tmp0:= MOVEFROMCREG_DSZ64( , 0x701) 

U2d6c: tmp0:= NOTAND_DSZ64(0xf0000000, tmp0) 
U2d6d: tmp0:= MOVETOCREG_DSZ64(tmp0, 0x701) 
U2d6e: WRITEURAM( , 0x00000000, 0x004b, 64) !m2 

U2d70: tmp0:= ZEROEXT_DSZ32(0x00000023) 
U2d71: MOVETOCREG_DSZ64(tmp0, 0x005) 
check_rsa_padding_signature_and_patch:
U2d72: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 

U2d74: tmp0:= OR_DSZ32(0x00000025) 
U2d75: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x00b) !m2 SEQW SAVEUIP1 U2d76SEQW GOTO U0164
U2d76: tmp0:= MOVEFROMCREG_DSZ64( , 0x7bb) 

U2d78: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000008, U5dea) !m2 
U2d79: tmp2:= ZEROEXT_DSZ32(0x0000fff0) 
U2d7a: tmp1:= MOVEFROMCREG_DSZ64( , 0x78e) 

U2d7c: tmp1:= ADD_DSZ32(tmp2, tmp1) 
U2d7d: MOVETOCREG_DSZ64(tmp1, 0x067) 
U2d7e: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 

U2d80: SAVEUIP_REGOVR(0x01, U2d81, 0x0000) !m0 SEQW GOTO U2b0d
U2d81: tmp0:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U2d82: NOP 

U2d84: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000008, U2d85) !m1 SEQW GOTO U43ae
U2d85: WRITEURAM(tmp1, 0x0067, 64) 
U2d86: tmp0:= ZEROEXT_DSZ16(0x0000242e) 

U2d88: tmp0:= CONCAT_DSZ16(0x00000083, tmp0) 
U2d89: WRITEURAM(tmp0, 0x0007, 32) SEQW GOTO U3b5c
U2d8a: rax:= BTS_DSZ32(rax, 0x00000002) 

U2d8c: rbx:= BTS_DSZ32(rbx, 0x00000002) 
U2d8d: tmp1:= ZEROEXT_DSZ32(0x00830f00) 
U2d8e: tmp2:= ZEROEXT_DSZ32(0x0003017f) 

U2d90: SAVEUIP( , 0x00, U4406) SEQW SAVEUIP1 U2d91SEQW GOTO U2895
U2d91: tmp0:= ZEROEXT_DSZ32(0x00011000) 
U2d92: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x631) !m2 

U2d94: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x634) 
U2d95: MOVETOCREG_DSZ64( , 0x00000000, 0x635) 
U2d96: MOVETOCREG_DSZ64( , 0x00000000, 0x636) 

U2d98: MOVETOCREG_DSZ64( , 0x00000000, 0x637) 
U2d99: MOVETOCREG_DSZ64( , 0x00000000, 0x638) 
U2d9a: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x630) !m2 

U2d9c: SYNCFULL-> tmp2:= MOVEFROMCREG_DSZ64( , 0x630) !m2 
U2d9d: tmp2:= AND_DSZ32(0x00000fff, tmp2) 
U2d9e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U2da0) SEQW GOTO U2d9c

U2da0: tmp2:= READURAM( , 0x0020, 64) 
U2da1: tmp1:= SHR_DSZ32(rax, 0x00000001) 
U2da2: tmp1:= AND_DSZ32(0x00000003, tmp1) 

U2da4: tmp1:= SHL_DSZ32(tmp1, tmp2) 
U2da5: SAVEUIP_REGOVR(0x01, U2da6, 0x0000) !m0 SEQW GOTO U02ba
U2da6: tmp0:= ZEROEXT_DSZ32(0x0000004c) 

U2da8: tmp0:= CONCAT_DSZ16(0x0000800c, tmp0) 
U2da9: tmp2:= PORTIN_DSZ32_ASZ16_SC1(tmp0) 
U2daa: tmp2:= OR_DSZ32(tmp1, tmp2) 

U2dac: PORTOUT_DSZ32_ASZ16_SC1(tmp0,  , tmp2) 
U2dad: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 SEQW GOTO U7518
U2dae: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000013, U5c94) !m0,m2 

U2db0: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U2db1: tmp15:= NOTAND_DSZ32(tmp15, 0x0000003f) 
U2db2: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U5c94) 

U2db4: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U2db5: tmp15:= UFLOWCTRL(tmp15, tmp13, URET0) 
U2db6: UFLOWCTRL(tmp15, tmp14, URET1) 

U2db8: UFLOWCTRL( , tmp12, MSLOOPCTR) 
U2db9: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000017, U2dba) !m0,m1 SEQW GOTO U2dbe
U2dba: tmp15:= READURAM( , 0x003f, 64) 

U2dbc: MOVETOCREG_DSZ64(tmp15, 0x6c5) 
U2dbd: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U2dbe: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000010, U2d2d) !m1 

U2dc0: tmp15:= AND_DSZ32(tmp15, 0x0000003f) 
U2dc1: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x0000001d, U0e1d) 
U2dc2: LFNCEMARK-> WRITEURAM(tmp14, 0x0061, 64) !m2 

U2dc4: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U2dc5: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000013, U2dcd) !m0,m1 
U2dc6: tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 

U2dc8: tmp14:= MOVEFROMCREG_DSZ64( , 0x067) 
U2dc9: tmp14:= SUB_DSZN(tmp15, tmp14) !m1 
U2dca: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp14, 0x71a) 

U2dcc: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp15, 0x71c) 
U2dcd: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 
U2dce: MOVETOCREG_DSZ64(tmp15, 0x752) !m2 

U2dd0: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U2dd1: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000f, U2dd5) !m0,m1 
U2dd2: NOP 

U2dd4: LFNCEWAIT-> unk_256() !m1 
U2dd5: tmp14:= READURAM( , 0x0061, 64) 
U2dd6: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000c, U2145) !m1 

U2dd8: tmp15:= MOVEFROMCREG_DSZ64( , 0x001) 
U2dd9: SYNCFULL-> UJMP( , tmp15) 
U2dda: tmp0:= ZEROEXT_DSZ32(0x00000006) SEQW SAVEUIP0 U2ddcSEQW GOTO U5971

U2ddc: tmp0:= READURAM( , 0x000e, 64) SEQW GOTO U3d12
U2ddd: tmpv0:= AND_DSZ32(0x00000010, tmpv0) 
U2dde: tmpv1:= READURAM( , 0x0043, 64) 

U2de0: tmpv1:= SHR_DSZ64(tmpv1, 0x00000021) 
U2de1: tmpv0:= AND_DSZ32(tmpv0, tmpv1) 
U2de2: tmpv1:= SELECTCC_DSZ32_CONDNZ(tmpv0, 0x00000002) 

U2de4: tmpv2:= SELECTCC_DSZ32_CONDZ(tmpv0, 0x00000006) 
U2de5: tmpv2:= ADD_DSZ32(0x00000001, tmpv2) SEQW URET0
U2de6: SAVEUIP_REGOVR(0x01, U2de8, 0x0000) !m0 SEQW GOTO U00a1

U2de8: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U2ded) !m1 
U2de9: tmp7:= READURAM( , tmp3) 
U2dea: tmp7:= AND_DSZ64(tmp5, tmp7) 

U2dec: tmp6:= OR_DSZ64(tmp6, tmp7) 
U2ded: WRITEURAM(tmp6, tmp3) !m2 
U2dee: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2de6

U2df0: NOP SEQW GOTO U1f9a
FUN_ucode_0002df1:
U2df1: tmp11:= SHR_DSZ32(tmp14, 0x0000001a) 
U2df2: tmp11:= NOTAND_DSZ32(0x00000001, tmp11) 

U2df4: tmp11:= OR_DSZ32(0x00000008, tmp11) 
U2df5: tmp11:= MOVEINSERTFLGS_DSZ32(tmp11, tmp14) 
U2df6: tmp15:= MOVEFROMCREG_DSZ64( , 0x7e1) 

U2df8: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U2711) !m1 
U2df9: tmp7:= SUB_DSZ64(0x00000010, tmp5) SEQW GOTO U6381
patch_handle_0x08_crbus_write_and_sync:
U2dfa: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U2dfc: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp10, 0x7fe, tmp9) !m2 
U2dfd: tmp5:= ZEROEXT_DSZ32(0x00002e00) 
U2dfe: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4840

U2e00: TESTUSTATE( , SYS, UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW GOTO U5ea4
U2e01: NOP 
U2e02: NOP 

U2e04: TESTUSTATE( , SYS, !0x2000) !m0,m1 ? SEQW GOTO U079d
U2e05: LFNCEWTMRK-> tmp0:= MOVE_DSZ32(0x00002e0d) 
U2e06: tmp0:= CONCAT_DSZ16(0x0000008a, tmp0) 

U2e08: WRITEURAM(tmp0, 0x0007, 32) !m2 
FUN_ucode_0002e09:
U2e09: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 
U2e0a: tmp10:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U2e0c: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000038, U3b59) !m1,m2 
U2e0d: SIGEVENT( , 0x0000007f) 
U2e0e: NOP 

U2e10: LFNCEWAIT-> tmp0:= READURAM( , 0x001f, 64) 
U2e11: tmp0:= OR_DSZ32(0x00000002, tmp0) 
U2e12: WRITEURAM(tmp0, 0x001f, 32) !m2 

U2e14: SAVEUIP_REGOVR(0x01, U2e15, 0x0090) !m0 SEQW GOTO U02ca
U2e15: LFNCEMARK-> unk_fcf(0x00000000) 
U2e16: NOP 

U2e18: ROVR<-LFNCEWAIT-> MOVE_DSZ32() SEQW SAVEUIP1 U2e19SEQW GOTO U2b0d
U2e19: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
U2e1a: tmp1:= ZEROEXT_DSZ32(0x0000007f) 

U2e1c: MOVETOCREG_DSZ64(tmp1, 0x00b) 
U2e1d: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U2e1e: unk_dff() 

U2e20: MOVETOCREG_BTS_DSZ64( , 0x00000003, 0x63a) !m0 
FUN_ucode_0002e21:
U2e21: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x63e) !m0 SEQW SAVEUIP0 U2e22SEQW GOTO U0504
FUN_ucode_0002e22:
U2e22: tmp8:= READURAM( , 0x0070, 64) 

U2e24: tmp8:= BTR_DSZ64(tmp8, 0x0000002e) 
U2e25: LFNCEMARK-> WRITEURAM(tmp8, 0x0170, 64) !m2 
U2e26: tmp2:= ZEROEXT_DSZ32(0x00000200) 

U2e28: MOVETOCREG_DSZ64(tmp2, 0x2f1, 32) !m1,m2 
U2e29: tmp9:= ZEROEXT_DSZ32(0x00790484) 
U2e2a: tmp9:= CONCAT_DSZ32(tmp9, 0x00000001) 

U2e2c: tmp7:= ZEROEXT_DSZ32(0x00000000) 
U2e2d: tmp8:= ZEROEXT_DSZ32(0x00000008) 
U2e2e: LFNCEWAIT-> tmp11:= ZEROEXT_DSZ32(0x00030101) SEQW GOTO U67be

U2e30: LFNCEWAIT-> tmp0:= RDSEGFLD(UNK_SEG_09, FLGS) 
U2e31: MOVETOCREG_DSZ64(tmp0, 0x7f5) 
U2e32: tmp0:= RDSEGFLD(UNK_SEG_09, LIMIT) 

U2e34: MOVETOCREG_DSZ64(tmp0, 0x410) 
U2e35: tmp0:= ADD_DSZ32(0x00000001, tmp0) 
U2e36: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x700) 

U2e38: LFNCEWAIT-> tmp0:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U2e39: NOP 
U2e3a: NOP 

U2e3c: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x78e) SEQW URET1
U2e3d: tmp14:= SAVEUIP(0x01, U0ca1) !m0 
U2e3e: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U37ca

U2e40: tmm7:= SHUFPD(tmm7, tmm7) 
U2e41: tmm4:= SHUFPD(tmm4, tmm4) SEQW GOTO U2bde
U2e42: tmp12:= ZEROEXT_DSZ8N(0xffffffffffffffff) !m1 

U2e44: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x072) !m0 
U2e45: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp15, 0x00000005, 0x79e) 
U2e46: tmp2:= RDSEGFLD(TSS, SEL) 

U2e48: tmp8:= SHR_DSZ64(tmp0, 0x0000002d) 
U2e49: tmp8:= AND_DSZ32(0x00000003, tmp8) 
U2e4a: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U2acd

U2e4c: tmp0:= unk_b3f( , tmp8) 
U2e4d: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U2e50
U2e4e: tmp0:= unk_b3f( , tmp11) 

U2e50: LFNCEWAIT-> rsp:= LDPPHYS_DSZ64_ASZ32_SC1(tmp0, mode=0x0f) 
U2e51: tmp1:= ZEROEXT_DSZ32(0x00004000) 
U2e52: NOP 

U2e54: tmp2:= ZEROEXT_DSZ32(tmp8) 
U2e55: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U2e58
U2e56: rsp:= AND_DSZ64(0xfffffffffffffff0, rsp) 

U2e58: LFNCEMARK-> unk_e6b( , tmp2) 
U2e59: MOVETOCREG_DSZ64(tmp1, 0x73c) SEQW SAVEUIP1 U2e5aSEQW GOTO U3b4a
U2e5a: NOP 

U2e5c: LFNCEWAIT-> STADPPHYS_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff8, mode=0x0a,  , tmp8) 
U2e5d: STADPPHYS_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff0, mode=0x0a,  , tmp5) 
U2e5e: rsp:= SUB_DSZ64(0x00000010, rsp) 

U2e60: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U1dd6
U2e61: SYNCMARK-> tmp1:= RDSEGFLD(CS, SEL) 
U2e62: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp1) !m0,m1 

U2e64: LFNCEWAIT-> STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, tmp4) !m0,m1 
U2e65: NOP 
U2e66: NOP 

U2e68: LFNCEMARK-> LEA_DSZ8_ASZ32_SC1(tmp3) 
U2e69: FETCHFROMEIP1_ASZ64( , tmp3) !m1 
U2e6a: tmp1:= ZEROEXT_DSZ32N(IMM_MACRO_13) !m0,m1 

U2e6c: rsp:= SUB_DSZN(tmp1, rsp) !m1 
U2e6d: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U2e6e: WRSEGFLD(tmp1, CS, SEL+FLGS+LIM) 

U2e70: tmp1:= RDSEGFLD(UNK_SEG_09, BASE) 
U2e71: WRSEGFLD(tmp1, CS, BASE) 
U2e72: tmp1:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U2e74: WRSEGFLD(tmp1, SS, SEL+FLGS+LIM) 
U2e75: tmp1:= RDSEGFLD(SS_USERM, BASE) 
U2e76: WRSEGFLD(tmp1, SS, BASE) 

U2e78: SYNCWAIT-> MJMPTARGET_INDIRECT_ASZ64( , tmp3) !m1 SEQW UEND0
U2e79: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000a, U2e7a) !m0,m1 SEQW GOTO U2e7e
U2e7a: tmp15:= OR_DSZN(rcx) !m1 

U2e7c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U069e) 
U2e7d: SAVEUIP_REGOVR(0x01, U2e7e, 0x00f7) !m0 SEQW GOTO U02ca
U2e7e: tmp15:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U2e80: MOVETOCREG_BTS_DSZ64(tmp15, 0x00000010, 0x7fe) !m2 SEQW GOTO U0414
U2e81: tmp13:= READUIP_REGOVR(0x00) 
U2e82: tmp7:= SHR_DSZ32(tmp0, 0x00000001) 

U2e84: tmp7:= AND_DSZ64(0x00000070, tmp7) 
U2e85: tmp7:= ADD_DSZ64(tmp8, tmp7) 
U2e86: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, tmp7) 

U2e88: tmp9:= BTS_DSZ32(tmp9, tmp0) 
U2e89: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, tmp7, tmp9) SEQW URET0
U2e8a: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U6399

U2e8c: TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW SAVEUIP0 U2e8d? SEQW GOTO U5ffd
U2e8d: tmp13:= ZEROEXT_DSZ32(0x0000000f) 
U2e8e: NOP 

U2e90: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U2e91: tmp12:= READURAM( , 0x0056, 64) 
U2e92: tmp1:= ADD_DSZ64(0x00000001, tmp12) 

U2e94: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, U04b6) SEQW GOTO U2d62
U2e95: TESTUSTATE( , SYS, 0x2000) !m1 ? SEQW URET1
U2e96: tmp14:= READUIP_REGOVR(0x01) !m0 

U2e98: tmpv1:= READURAM( , 0x0058, 64) 
U2e99: tmpv1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000c00, mode=0x01, tmpv1) 
U2e9a: tmpv1:= NOTAND_DSZ32(tmpv1, 0x00000001) 

U2e9c: tmpv1:= SHL_DSZ32(tmpv1, 0x00000008) 
U2e9d: tmpv0:= NOTAND_DSZ32(tmpv1, tmpv0) SEQW URET1
U2e9e: tmp8:= TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U5c64

U2ea0: tmp8:= TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U3ef1
U2ea1: NOP 
U2ea2: NOP 

U2ea4: tmp0:= ZEROEXT_DSZ32(0x00000001) SEQW SAVEUIP0 U2ea5SEQW GOTO U60e5
U2ea5: tmp7:= AND_DSZ32(0x00ff0000, tmp7) 
U2ea6: NOP 

U2ea8: tmp8:= SELECTCC_DSZ32_CONDZ(tmp7, 0x000f0000) SEQW GOTO U3ef1
U2ea9: TESTUSTATE( , SYS, 0x2000) !m1 ? SEQW URET1
U2eaa: tmp15:= MOVEFROMCREG_DSZ64( , 0x511) !m2 

U2eac: tmp15:= AND_DSZ64(0xfffffffffffff000, tmp15) 
U2ead: MOVETOCREG_DSZ64(tmp15, 0x511) !m2 
U2eae: tmp15:= MOVEFROMCREG_DSZ64( , 0x518) !m2 

U2eb0: tmp15:= AND_DSZ64(0xfffffffffffff000, tmp15) 
U2eb1: SYNCFULL-> MOVETOCREG_DSZ64(tmp15, 0x518) !m2 SEQW URET1
U2eb2: tmp2:= TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U2eb6

U2eb4: tmp1:= SAVEUIP_REGOVR(0x00, U2eb5, 0x0012) SEQW GOTO U3044
U2eb5: tmp2:= SHL_DSZ32(tmp1, 0x00000005) 
U2eb6: unk_d68(tmp5,  , tmp0) 

U2eb8: unk_d68(tmp5,  , tmp8) 
U2eb9: unk_d68(tmp5,  , tmp2) 
U2eba: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U594e

U2ebc: tmp0:= ADD_DSZ32(0x00000018, tmp5) 
U2ebd: unk_d28(tmp4, tmp9, tmp0) SEQW GOTO U4db2
U2ebe: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000318, tmp12) 

U2ec0: tmp1:= AND_DSZ32(0x00000400, tmp0) 
U2ec1: tmp15:= SHL_DSZ32(tmp13, 0x00000001) 
U2ec2: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, U5f95, tmp15) !m2 

U2ec4: tmp14:= SHR_DSZ32(tmp1, 0x00000002) 
U2ec5: tmp15:= AND_DSZ32(0x00000100, tmp0) 
U2ec6: tmp15:= MOVEMERGEFLGS_DSZ32(tmp15, tmp10) 

U2ec8: tmp15:= CMOVCC_DSZ32_CONDB(tmp15, tmp14) 
U2ec9: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, U5f95, tmp14) !m2 
U2eca: tmp15:= READURAM( , 0x0041, 64) 

U2ecc: tmp15:= SHR_DSZ64(tmp15, 0x00000017) 
U2ecd: tmp15:= AND_DSZ32(tmp15, 0x00000800) 
U2ece: tmp15:= OR_DSZ64(0xfffffffffffff2fe, tmp15) 

U2ed0: tmp15:= AND_DSZ64(tmp0, tmp15) 
U2ed1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 
U2ed2: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x7ff) 

U2ed4: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U2ee2
U2ed5: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000088, tmp12) 
U2ed6: unk_25c( , tmp0) 

U2ed8: tmp1:= AND_DSZ32(0x00000ffc, tmp0) 
U2ed9: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U5f95) 
U2eda: LFNCEMARK-> tmp1:= AND_DSZ64(0xfffffffffffff000, tmp0) 

U2edc: tmp0:= SHL_DSZ32(tmp0, 0x0000001e) 
U2edd: tmp2:= MOVEFROMCREG_DSZ64( , 0x701) 
U2ede: tmp2:= NOTAND_DSZ64(0xc0000000, tmp2) 

U2ee0: LFNCEWAIT-> WRSEGFLD(tmp1) 
U2ee1: MOVETOCREG_OR_DSZ64(tmp2, 0x701, tmp0) 
U2ee2: TESTUSTATE( , VMX, 0x0800) !m2 ? SEQW GOTO U2ee8

U2ee4: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000310, tmp12) 
U2ee5: MOVETOCREG_DSZ64(tmp0, 0x577) 
U2ee6: SAVEUIP_REGOVR(0x01, U2ee8, 0x00b0) !m0 SEQW GOTO U5a15

U2ee8: TESTUSTATE( , VMX, 0x0400) !m2 ? SEQW GOTO U2ef2
U2ee9: tmp1:= ZEROEXT_DSZ32(0x00000007) 
U2eea: tmp1:= CONCAT_DSZ32(tmp1, 0x0000000f) 

U2eec: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000320, tmp12) 
U2eed: tmp1:= NOTAND_DSZ64(tmp1, tmp0) 
U2eee: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U5f95) 

U2ef0: TESTUSTATE( , UCODE, 0x0200) ? SEQW GOTO U2ef2
U2ef1: MOVETOCREG_DSZ64(tmp0, 0x20f, 32) !m1,m2 
U2ef2: tmp7:= READURAM( , 0x0010, 64) 

U2ef4: tmp7:= ZEROEXT_DSZ16(0x000001e6, tmp7) 
U2ef5: TESTUSTATE( , VMX, !0x0008) !m0,m2 ? SEQW GOTO U1dc1
U2ef6: tmp0:= NOTAND_DSZ64(0x0000001f, tmp5) 

U2ef8: tmp9:= TESTUSTATE( , VMX, 0x0100) !m2 ? SEQW GOTO U2efa
U2ef9: tmp0:= ADD_DSZ64(0x00000328, tmp12) 
U2efa: tmp1:= ZEROEXT_DSZ64(tmp12) 

U2efc: tmp2:= ZEROEXT_DSZ64(0x00000540) 
U2efd: tmp12:= WRMSLOOPCTRFBR(0x00000003) 
U2efe: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp0, tmp9) 

U2f00: tmp0:= ZEROEXT_DSZ64(tmp0, tmp8) SEQW GOTO U1db5
U2f01: SYNCFULL-> UFLOWCTRL( , tmp14, URET1) 
U2f02: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 

U2f04: tmp14:= READUIP_REGOVR(0x01) !m0 
U2f05: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp5, mode=0x01) 
U2f06: WRSEGFLD(tmp0) !m0 

U2f08: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp5, 0x00000008, mode=0x01) 
U2f09: SYNCFULL-> WRSEGFLD(tmp1) !m0 SEQW URET1
U2f0a: SAVEUIP_REGOVR(0x01, U2f0c, 0x0000) !m0 SEQW GOTO U00a1

U2f0c: SAVEUIP_REGOVR(0x01, U2f0d, 0x0000) !m0 SEQW GOTO U32cd
U2f0d: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U2f12) !m1 
U2f0e: tmp7:= MOVEFROMCREG_DSZ64( , tmp3) !m1 

U2f10: tmp7:= AND_DSZ64(tmp5, tmp7) 
U2f11: tmp6:= OR_DSZ64(tmp6, tmp7) 
U2f12: MOVETOCREG_DSZ64(tmp6, tmp3) !m1,m2 

U2f14: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
U2f15: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2f0a
U2f16: NOP 

U2f18: NOP SEQW GOTO U1f9a
U2f19: tmp0:= MOVE_DSZ32(0x00000501) 
U2f1a: tmp12:= READURAM( , 0x005c, 64) 

U2f1c: tmp12:= SHR_DSZ32(tmp12, 0x00000008) 
U2f1d: tmp11:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U2f1e: tmp11:= AND_DSZ32(0x00000001, tmp11) 

U2f20: tmp11:= AND_DSZ32(tmp12, tmp11) 
U2f21: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, U2aa8) SEQW GOTO U407c
U2f22: tmp0:= ZEROEXT_DSZ32(0x00010006) 

U2f24: tmp4:= ZEROEXT_DSZ32(0x00000013) 
U2f25: SAVEUIP_REGOVR(0x01, U2f26, 0x0094) !m0 SEQW GOTO U1c7a
U2f26: LFNCEMARK-> tmp10:= ZEROEXT_DSZ32(0x00000010) 

U2f28: LFNCEWAIT-> tmp13:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000040, tmp12) 
U2f29: tmp14:= READURAM( , 0x0010, 64) 
U2f2a: tmp15:= AND_DSZ64(tmp14, tmp13) 

U2f2c: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U3178) 
U2f2d: NOP 
U2f2e: NOP 

U2f30: LFNCEWAIT-> tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp13) 
U2f31: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000011, U3178) !m1,m2 
U2f32: tmp4:= READURAM( , 0x0049, 64) 

U2f34: tmp4:= SUB_DSZ64(tmp4, tmp13) 
U2f35: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001b4, tmp13) 
U2f36: tmp3:= BTS_DSZ32(tmp3, 0x0000001f) 

U2f38: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000002cc, tmp13) 
U2f39: tmp0:= SELECTCC_DSZ32_CONDNB(tmp3, tmp0) 
U2f3a: tmp0:= CONCAT_DSZ32(tmp0, tmp3) 

U2f3c: tmp0:= SELECTCC_DSZ64_CONDZ(tmp4, tmp0) 
U2f3d: tmp2:= NOTAND_DSZ32(0x00001800, tmp2) 
U2f3e: tmp2:= ZEROEXT_DSZ32(tmp2) 

U2f40: tmp0:= BT_DSZ64(tmp0, 0x00000015) 
U2f41: tmp3:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000800) 
U2f42: tmp2:= OR_DSZ32(tmp3, tmp2) 

U2f44: tmp0:= BT_DSZ64(tmp0, 0x00000021) 
U2f45: tmp3:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00001000) 
U2f46: tmp2:= OR_DSZ32(tmp3, tmp2) 

U2f48: tmp0:= BT_DSZ64(tmp0, 0x00000029) 
U2f49: tmp3:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000200) 
U2f4a: tmp0:= BT_DSZ64(tmp0, 0x00000024) 

U2f4c: tmp15:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000010) 
U2f4d: tmp3:= OR_DSZ32(tmp15, tmp3) 
U2f4e: tmp11:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001ac, tmp13) 

U2f50: tmp11:= SELECTCC_DSZ64_CONDZ(tmp4, tmp11) 
U2f51: tmp15:= AND_DSZ32(0x00000040, tmp11) 
U2f52: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000004) 

U2f54: tmp3:= OR_DSZ32(tmp15, tmp3) 
U2f55: tmp2:= CONCAT_DSZ32(tmp3, tmp2) 
U2f56: tmp15:= SETCC_CONDZ(tmp4) 

U2f58: tmp15:= SHL_DSZ32(tmp15, 0x0000001f) 
U2f59: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp2, 0x6c0, tmp15) 
U2f5a: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp12) 

U2f5c: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp13) 
U2f5d: tmp7:= CONCAT_DSZ32(tmp15, tmp7) 
U2f5e: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp13) 

U2f60: tmp10:= ZEROEXT_DSZ32(0x00000011) 
U2f61: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000001, U3178) !m1,m2 
U2f62: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U5444

U2f64: tmp10:= ZEROEXT_DSZ32(0x00000012) 
U2f65: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000b, U3178) !m0,m1,m2 SEQW GOTO U5444
U2f66: tmp1:= ZEROEXT_DSZ32(0x00000630) 

U2f68: tmp11:= ADD_DSZ32() 
U2f69: tmp6:= AND_DSZ32(0x0000000f, tmp2) 
U2f6a: tmp8:= ADD_DSZ32(0x00000001, tmp1) 

U2f6c: tmp7:= SHL_DSZ32(tmp11, 0x00000004) 
U2f6d: tmp7:= OR_DSZ32(tmp6, tmp7) 
U2f6e: tmp7:= OR_DSZ32(tmp0, tmp7) 

U2f70: MOVETOCREG_DSZ64(tmp7, tmp8) !m2 
U2f71: tmp8:= SHR_DSZ32(tmp2, 0x00000010) 
U2f72: tmp8:= AND_DSZ32(0x00000fff, tmp8) 

U2f74: tmp9:= ZEROEXT_DSZ32() 
U2f75: tmp7:= ZEROEXT_DSZ32(tmp8) SEQW SAVEUIP0 U2f76SEQW GOTO U53a5
U2f76: tmp9:= OR_DSZ32(tmp7, tmp3) 

U2f78: MOVETOCREG_DSZ64(tmp9, tmp1) !m2 
U2f79: tmp7:= SUB_DSZ32(0x00000001, tmp7) 
U2f7a: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp7, U2f7c) SEQW GOTO U2f76

U2f7c: tmp9:= SUB_DSZ32(0x00000001) 
U2f7d: tmp7:= ZEROEXT_DSZ32() SEQW SAVEUIP0 U2f7eSEQW GOTO U53a5
U2f7e: tmp9:= READURAM( , 0x0032, 64) 

U2f80: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp11) 
U2f81: tmp10:= READURAM( , 0x0040, 64) 
U2f82: tmp9:= CMOVCC_DSZ64_CONDZ(tmp9, tmp10) 

U2f84: WRITEURAM(tmp9, 0x005a, 64) 
U2f85: tmp10:= SHR_DSZ64(tmp2, 0x00000020) 
U2f86: tmp10:= ADD_DSZ64(0x00000000, tmp10) SEQW SAVEUIP0 U2f88SEQW GOTO U5c85

U2f88: tmp7:= ADD_DSZ32(0x00000001, tmp7) 
U2f89: tmp9:= SUB_DSZ32(tmp7, tmp8) 
U2f8a: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp9, U2f8c) SEQW GOTO U2f85

U2f8c: tmp9:= ZEROEXT_DSZ32() 
U2f8d: tmp7:= ZEROEXT_DSZ32(tmp8) SEQW SAVEUIP0 U2f8eSEQW GOTO U53a5
U2f8e: tmp9:= READURAM( , 0x0030, 64) 

U2f90: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp11) 
U2f91: tmp10:= READURAM( , 0x0031, 64) 
U2f92: tmp9:= CMOVCC_DSZ64_CONDZ(tmp9, tmp10) 

U2f94: WRITEURAM(tmp9, 0x005a, 64) 
U2f95: tmp10:= SUB_DSZ32(0x00000000, tmp11) 
U2f96: tmp10:= MOVEMERGEFLGS_DSZ64(tmp4, tmp10) 

U2f98: tmp10:= CMOVCC_DSZ64_CONDZ(tmp10, tmp5) 
U2f99: tmp10:= ADD_DSZ64(0x00000000, tmp10) SEQW SAVEUIP0 U2f9aSEQW GOTO U5c85
U2f9a: tmp7:= SUB_DSZ32(0x00000001, tmp7) 

U2f9c: tmp9:= SUB_DSZ32(0x00000000, tmp7) 
U2f9d: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp9, U2f9e) SEQW GOTO U2f95
U2f9e: tmp7:= ZEROEXT_DSZ32() 

U2fa0: tmp9:= READURAM( , 0x0032, 64) 
U2fa1: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp11) 
U2fa2: tmp10:= READURAM( , 0x0040, 64) 

U2fa4: tmp9:= CMOVCC_DSZ64_CONDZ(tmp9, tmp10) 
U2fa5: WRITEURAM(tmp9, 0x005a, 64) 
U2fa6: tmp10:= SHR_DSZ64(tmp2, 0x00000020) 

U2fa8: tmp10:= ADD_DSZ64(0x00000000, tmp10) SEQW SAVEUIP0 U2fa9SEQW GOTO U5c85
U2fa9: tmp7:= ADD_DSZ32(0x00000001, tmp7) 
U2faa: tmp9:= SUB_DSZ32(tmp7, tmp8) 

U2fac: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp9, U2fad) SEQW GOTO U2fa6
U2fad: tmp6:= SUB_DSZ32(0x00000001, tmp6) 
U2fae: NOP 

U2fb0: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp6, U2fb1) SEQW GOTO U2f6a
U2fb1: tmp11:= ADD_DSZ32(0x00000001, tmp11) 
U2fb2: tmp7:= SHR_DSZ8(tmp2, 0x00000004) 

U2fb4: tmp7:= AND_DSZ32(0x0000000f, tmp7) 
U2fb5: CMPUJZ_DIRECT_NOTTAKEN(tmp11, U2fb6, tmp7) !m1 SEQW GOTO U2f69
U2fb6: SYNCFULL-> UJMP( , tmp15) 

U2fb8: tmp12:= OR_DSZ16(0x00000002, tmp12) 
U2fb9: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp6, U2fbe) 
U2fba: tmp4:= MOVEFROMCREG_DSZ64( , 0x486) 

U2fbc: tmp5:= AND_DSZ16(tmp4, 0x00000002) 
U2fbd: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp5, U1a50) 
U2fbe: tmm6:= unk_620(tmm5) 

U2fc0: tmp8:= PINTMOVDTMM2I_DSZ32(tmm6) 
U2fc1: tmp4:= XOR_DSZ16(0x0000411e, tmp8) 
U2fc2: tmp8:= MOVEMERGEFLGS_DSZ32(tmp8, tmp4) 

U2fc4: tmp1:= BT_DSZ16(tmp6, 0x0000000a) 
U2fc5: tmp2:= MOVEMERGEFLGS_DSZ32(0x0000ff81, tmp1) 
U2fc6: tmp4:= CMOVCC_DSZ32_CONDB(tmp2, 0x0000fc01) 

U2fc8: tmp5:= BT_DSZ16(tmp6, 0x0000000c) 
U2fc9: tmp1:= MOVEMERGEFLGS_DSZ32(0x0000c001, tmp5) 
U2fca: tmp2:= CMOVCC_DSZ32_CONDB(tmp1, tmp4) 

U2fcc: tmp3:= MOVEMERGEFLGS_DSZ64(tmp4, tmp5) 
U2fcd: tmp4:= CMOVCC_DSZ32_CONDB(tmp3, 0x0000c001) 
U2fce: tmp5:= BT_DSZ32(tmp9, 0x00000006) 

U2fd0: tmp2:= MOVEMERGEFLGS_DSZ64(tmp2, tmp5) 
U2fd1: tmp1:= CMOVCC_DSZ32_CONDNB(tmp2, 0x0000c001) 
U2fd2: tmp4:= MOVEMERGEFLGS_DSZ64(tmp4, tmp5) 

U2fd4: tmp2:= CMOVCC_DSZ32_CONDNB(tmp4, 0x0000c001) 
U2fd5: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x48c) 
U2fd6: tmp11:= AND_DSZ8(0x00000020, tmp10) 

U2fd8: tmp4:= OR_DSZ8(tmp11, tmp12) 
U2fd9: tmp4:= AND_DSZ16(0x000000ff, tmp4) 
U2fda: tmp10:= OR_DSZ16(tmp4, tmp10) 

U2fdc: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x48c) !m2 
U2fdd: tmm0:= unk_624(tmm2, tmm2) 
U2fde: tmp3:= PINTMOVDTMM2I_DSZ32(tmm0) 

U2fe0: tmp3:= AND_DSZ32(0x00000020, tmp3) 
U2fe1: tmp3:= CMOVCC_DSZ16_CONDZ(tmp3, 0x00000001) 
U2fe2: tmm4:= unk_7c2(mm1, tmm2) 

U2fe4: tmm4:= unk_69d( , tmm4) 
U2fe5: tmm2:= unk_743(mm3, tmm2) 
U2fe6: tmm2:= unk_483(tmm2, tmm4) 

U2fe8: tmm1:= unk_624(tmm3, tmm3) 
U2fe9: tmp1:= PINTMOVDTMM2I_DSZ32(tmm1) 
U2fea: tmp1:= AND_DSZ32(0x00000020, tmp1) 

U2fec: tmp1:= CMOVCC_DSZ16_CONDZ(tmp1, 0x00000001) 
U2fed: tmm4:= unk_7c2(mm2, tmm3) 
U2fee: tmm4:= unk_69d( , tmm4) 

U2ff0: tmm3:= unk_743(mm1, tmm3) 
U2ff1: tmm3:= unk_483(tmm3, tmm4) 
U2ff2: tmm0:= FMOV( , tmm2) 

U2ff4: tmm1:= FMOV( , tmm3) 
U2ff5: tmp2:= AND_DSZ32(0x00000010, tmp7) 
U2ff6: LFNCEWAIT-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U0332) 

U2ff8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, tmp8) 
U2ff9: tmp3:= AND_DSZ32(0x00000038, tmp9) 
U2ffa: tmp3:= XOR_DSZ32(0x00000008, tmp3) 

U2ffc: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U5a32) 
U2ffd: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000004, U24a5) !m1 
U2ffe: tmm4:= unk_60f(tmm3, tmm2) !m2 SEQW GOTO U24a6

U3000: tmp5:= MOVEFROMCREG_DSZ64( , tmp10) 
U3001: tmp5:= ZEROEXT_DSZ32N(tmp5) !m1 SEQW GOTO U189a
U3002: tmp10:= OR_DSZ64(0x00000010, tmp10) SEQW URET1

U3004: tmp5:= READURAM( , tmp10) 
U3005: tmp5:= ZEROEXT_DSZ32N(tmp5) !m1 SEQW GOTO U189a
U3006: rsp:= ZEROEXT_DSZ8N(rsp, tmp5) !m1 SEQW URET0

U3008: tmp5:= ZEROEXT_DSZ32N(tmp12) !m1 SEQW GOTO U189a
U3009: NOP 
U300a: NOP 

U300c: tmp5:= MOVEFROMCREG_DSZ64( , tmp10) !m1,m2 
U300d: tmp1:= AND_DSZ32(0x00000001, tmp8) 
U300e: tmp2:= SHR_DSZ64(tmp5, 0x00000020) SEQW GOTO U44a9

U3010: tmp0:= ZEROEXT_DSZ32(0x00000007) 
U3011: WRITEURAM(tmp0, 0x0042, 32) SEQW GOTO U4e4c
U3012: NOP 

U3014: tmp5:= unk_f75( , tmp2) !m2 SEQW GOTO U189a
U3015: NOP 
U3016: NOP 

U3018: TESTUSTATE( , UCODE, !0x0200) !m0 ? SEQW GOTO U189a
U3019: tmp1:= BTS_DSZ64(0x00000000, 0x0000003f) 
U301a: tmp5:= AND_DSZ64(tmp1, tmp5) SEQW URET0

U301c: tmp5:= MOVEFROMCREG_DSZ64( , tmp10) !m1 SEQW GOTO U189a
U301d: NOP 
U301e: NOP 

U3020: tmp5:= RDSEGFLD(FS, BASE) SEQW GOTO U189a
U3021: NOP 
U3022: NOP 

U3024: tmp5:= RDSEGFLD(GS, BASE) SEQW GOTO U189a
U3025: tmp1:= SHR_DSZ32(tmp8, 0x00000002) 
U3026: tmp1:= AND_DSZ32(0x00000001, tmp1) 

U3028: tmp12:= unk_6a0() 
U3029: tmm4:= unk_743(mm1, tmm4) 
U302a: mm0:= unk_482(tmm4, 0x00000000) SEQW GOTO U1bd0

U302c: tmp1:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1 
U302d: tmp1:= NOTAND_DSZ32(tmp1, 0x0000000a) 
U302e: tmp5:= SELECTCC_DSZ64_CONDNZ(tmp1, tmp5) SEQW GOTO U189a

U3030: tmp12:= ZEROEXT_DSZ32N(tmp12) !m1 
U3031: tmp1:= OR_DSZ32(0x00010000, tmp8) 
U3032: tmp1:= MSR2CR( , tmp1) SEQW GOTO U44b5

U3034: tmp5:= AND_DSZN(tmp12, tmp5) !m1 SEQW GOTO U189a
FUN_ucode_0003035:
U3035: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U3036: tmp12:= ADD_DSZ32(0x00000020, tmp12) 

FUN_ucode_0003038:
U3038: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U3039: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U303a: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U303c: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U303d: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U303e: tmp12:= ADD_DSZ32(0x00000020, tmp12) SEQW URET0

U3040: tmp5:= TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U0cb2
U3041: tmpv0:= READURAM( , 0x003b, 64) 
U3042: tmpv1:= ADD_DSZ64(tmpv0, tmpv1) 

FUN_ucode_0003044:
U3044: LFNCEWTMRK-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x2d7, 32) !m1 
FUN_ucode_0003045:
U3045: tmp13:= SHR_DSZ64(tmpv0, 0x00000037) 
U3046: tmpv1:= ADD_DSZ64(tmp13, tmpv1) SEQW GOTO U2931

FUN_ucode_0003048:
U3048: LFNCEWTMRK-> WRITEURAM(tmp11, 0x000f, 32) 
U3049: tmp0:= NOTAND_DSZ32(0x000f0000, tmp11) SEQW SAVEUIP1 U304aSEQW GOTO U21a1
U304a: NOP 

U304c: TESTUSTATE( , UCODE, !0x3000) !m0 ? SEQW GOTO U308c
U304d: NOP 
uret:
U304e: URET(0x00) 

U3050: tmp5:= SHR_DSZ64(tmp5, 0x00000020) 
U3051: tmp5:= AND_DSZ32(0x0000000f, tmp5) 
U3052: tmp5:= CONCAT_DSZ16(tmp5, tmp5) SEQW GOTO U189a

U3054: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x0009) !m2 
U3055: tmp5:= AND_DSZ32(0x00000200, tmp5) 
U3056: tmp5:= OR_DSZ64(tmp1, tmp5) SEQW GOTO U189a

U3058: tmp10:= AND_DSZ32(0x0000000f, rax) 
U3059: tmp5:= ADD_DSZ32(0x00000060, tmp10) 
U305a: tmp5:= READURAM( , tmp5) SEQW GOTO U11b1

U305c: tmp5:= CONCAT_DSZ32(tmp1, tmp5) SEQW GOTO U189a
U305d: NOP 
U305e: NOP 

U3060: MOVETOCREG_DSZ64(rax, 0x2c0, 32) !m1,m2 
U3061: MOVETOCREG_DSZ64(rdx, 0x2c1, 32) !m1,m2 
U3062: tmp5:= PINTMOVDTMM2I_DSZ64(0x00000000) SEQW GOTO U3c49

U3064: SAVEUIP( , 0x01, U3abd) !m0 
FUN_ucode_0003065:
U3065: tmp5:= SUB_DSZ32(0x0000000f, rax) 
U3066: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp5, U2711) SEQW GOTO U029a

U3068: LFNCEMARK-> tmp10:= unk_14a(rax) 
U3069: MOVETOCREG_DSZ64(tmp10, 0x2c0, 32) !m1,m2 
U306a: tmp10:= unk_14a(tmp0) SEQW GOTO U5771

U306c: LFNCEMARK-> tmm2:= unk_76f(xmm0) 
U306d: MOVETOCREG_DSZ64(tmp10, 0x2c0, 32) !m1,m2 
U306e: tmm0:= MOVHLPS( , xmm0) SEQW GOTO U02a2

U3070: tmp3:= SHR_DSZ64(tmp5, 0x00000030) 
U3071: tmp3:= AND_DSZ32(0x0000000f, tmp3) 
U3072: tmp1:= SHL_DSZ64(tmp5, 0x00000010) SEQW GOTO U5cc1

U3074: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f1) 
U3075: tmp1:= MOVEFROMCREG_DSZ64( , 0x20e, 32) !m1 
U3076: tmp1:= AND_DSZ32(tmp1, tmp0) 

U3078: tmp0:= MOVEFROMCREG_DSZ64( , 0x20f, 32) !m1 
U3079: tmp1:= AND_DSZ32(tmp1, tmp0) 
U307a: tmp0:= MOVEFROMCREG_DSZ64( , 0x796, 32) !m1 

U307c: tmp0:= SHR_DSZ64(tmp0, 0x00000016) 
U307d: tmp1:= AND_DSZ32(tmp1, tmp0) 
U307e: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x210, 32) !m1 

U3080: LFNCEWAIT-> MOVETOCREG_OR_DSZ64( , 0x00000010, 0x00b) !m2 
U3081: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U5a59) 
U3082: tmp9:= ADD_DSZ32(0x00000020) 

U3084: tmp1:= ZEROEXT_DSZ32(0x000000c8) 
U3085: tmp2:= ZEROEXT_DSZ32(0x000005f4) 
U3086: tmp14:= SAVEUIP(0x01, U341d) !m0 SEQW GOTO U66c6

U3088: tmp5:= SHR_DSZ64(tmp5, 0x00000017) 
U3089: tmp5:= AND_DSZ32(0x00001000, tmp5) 
U308a: tmp5:= OR_DSZ32(0x00000d0a, tmp5) SEQW GOTO U189a

U308c: tmp1:= ZEROEXT_DSZ32(0x00000404) 
U308d: tmp0:= READURAM( , 0x0012, 64) 
U308e: SAVEUIP_REGOVR( , 0x01, U3090, 0x4210) !m0 

U3090: tmp14:= READUIP_REGOVR(0x00) 
U3091: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U304e) !m1,m2 SEQW SAVEUIP1 U3092SEQW GOTO U6d0c
U3092: NOP 

U3094: SYNCFULL-> UFLOWCTRL( , tmp14, URET1) 
U3095: tmpv0:= READURAM( , 0x000f, 64) 
U3096: SAVEUIP( , 0x00, U3a34) SEQW GOTO U334d

U3098: tmp5:= BT_DSZ64(tmp3, 0x00000028) 
U3099: tmp5:= SELECTCC_DSZ64_CONDB(tmp5, 0x00000001) 
U309a: tmp5:= SHL_DSZ64(tmp5, 0x0000003a) SEQW GOTO U08ae

U309c: tmp12:= ZEROEXT_DSZ32(0x00000003) SEQW GOTO U3234
U309d: NOP 
U309e: NOP 

U30a0: tmp5:= AND_DSZ32(0x00000003, tmp5) 
U30a1: tmp5:= SHL_DSZ32(tmp5, 0x00000006) 
U30a2: tmp5:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bc00, tmp5) !m2 SEQW GOTO U189a

U30a4: tmp5:= AND_DSZ32(0x00007c00, tmp5) 
U30a5: tmp5:= SHR_DSZ32(tmp5, 0x0000000a) 
U30a6: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x0008) !m2 SEQW GOTO U0484

U30a8: tmp1:= AND_DSZ32(0x000000ff, tmp5) 
U30a9: tmp1:= SHL_DSZ32(tmp1, 0x0000000c) 
U30aa: tmp1:= unk_116( , tmp1) SEQW GOTO U0121

U30ac: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x00c0) !m2 
U30ad: tmp2:= AND_DSZ32(0x00000001, tmp1) 
U30ae: tmp1:= SHR_DSZ32(tmp1, 0x00000010) SEQW GOTO U020a

U30b0: tmp5:= NOTAND_DSZ64(0x00811088, tmp5) 
U30b1: tmp5:= BTR_DSZ64(tmp5, 0x00000026) 
U30b2: tmp2:= MOVEFROMCREG_DSZ64( , 0x2e6, 32) !m1 SEQW GOTO U5cd9

U30b4: tmp5:= AND_DSZ32(0x00000001, tmp5) 
U30b5: tmp5:= SHL_DSZ32(tmp5, 0x00000002) 
U30b6: tmp1:= MOVEFROMCREG_DSZ64( , 0x3df, 32) !m1 SEQW GOTO U2961

U30b8: MOVETOCREG_AND_DSZ64(tmp9, 0x00000004, 0x6c5) !m2 SEQW GOTO U2525
U30b9: NOP 
U30ba: NOP 

U30bc: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x47f0) !m2 
U30bd: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U2711) !m1 SEQW GOTO U3030
U30be: NOP 

U30c0: NOP 
U30c1: NOP SEQW GOTO U2711
U30c2: NOP 

FUN_ucode_00030c4:
U30c4: tmp10:= OR_DSZ32(0x00000020, tmp5) 
U30c5: tmp5:= MOVEFROMCREG_DSZ64( , tmp10) SEQW GOTO U3070
U30c6: NOP 

U30c8: tmp10:= OR_DSZ32(0x00000040, tmp5) SEQW GOTO U3000
U30c9: NOP 
U30ca: NOP 

U30cc: tmp1:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U30cd: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 SEQW GOTO U189a
U30ce: NOP 

U30d0: tmp1:= NOTAND_DSZ32(tmp3, 0x00000400) 
U30d1: tmp1:= SHR_DSZ32(tmp1, 0x00000006) 
U30d2: tmp5:= OR_DSZ32(0x00000064, tmp1) SEQW GOTO U189a

U30d4: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U30d5: ROVR<- tmp1:= OR_DSZ64(0x00000001, tmp1) SEQW SAVEUIP0 U30d6SEQW GOTO U4084
U30d6: tmp1:= MOVEFROMCREG_DSZ64( , 0x067) 

U30d8: AETTRACE( , tmp1, 0x0e) 
U30d9: MOVETOCREG_BTS_DSZ64( , 0x00000004, 0x0b5) !m2 
U30da: UJMP( , tmp12) 

U30dc: tmp5:= SHL_DSZ32(tmp5, 0x00000002) 
U30dd: tmp2:= PORTIN_DSZ16_ASZ16_SC1(0x00c0) !m2 
U30de: tmp1:= AND_DSZ32(0x00007800, tmp2) SEQW GOTO U2cb1

U30e0: tmp2:= SELECTCC_DSZ32_CONDNP(tmp14, 0x00000080) 
U30e1: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U30e2: tmp5:= CONCAT_DSZ32(tmp10, tmp12) SEQW GOTO U189a

U30e4: tmp2:= SELECTCC_DSZ32_CONDNS(tmp14, 0x00800000) 
U30e5: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U30e6: tmp2:= SELECTCC_DSZ32_CONDNB(tmp1, 0x01000000) SEQW GOTO U30e1

U30e8: tmp2:= SELECTCC_DSZ32_CONDNS(tmp14, 0x00010000) 
U30e9: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U30ea: tmp2:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00020000) SEQW GOTO U30e1

U30ec: tmp2:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00004000) 
U30ed: tmp12:= NOTAND_DSZ32(tmp2, tmp12) SEQW GOTO U30e2
U30ee: NOP 

U30f0: tmp2:= BT_DSZ64(tmp3, 0x00000029) 
U30f1: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00200000) 
U30f2: tmp12:= OR_DSZ32(tmp2, tmp12) SEQW GOTO U2959

U30f4: tmp2:= BT_DSZ64(tmp3, 0x00000037) 
U30f5: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00010800) 
U30f6: tmp10:= NOTAND_DSZ32(tmp2, tmp10) SEQW GOTO U62ad

U30f8: tmp2:= BT_DSZ64(tmp3, 0x00000010) 
U30f9: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00200000) 
U30fa: tmp12:= NOTAND_DSZ32(tmp2, tmp12) SEQW GOTO U44c9

U30fc: tmp12:= SELECTCC_DSZ32_CONDB(tmp14, 0x00000001) SEQW GOTO U30e2
U30fd: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b980) !m2 
U30fe: tmp7:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b9c0) !m2 

U3100: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000ba00) !m2 
U3101: tmp9:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000ba40) !m2 
U3102: tmp10:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000ba80) !m2 

U3104: tmp11:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bac0) !m2 
U3105: tmp12:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bb00) !m2 
U3106: tmp13:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bb40) !m2 

U3108: tmp14:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bb80) !m2 
U3109: tmp15:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bbc0) !m2 
U310a: LFNCEMARK-> SAVEUIP(0x00, U21fe) 

U310c: SAVEUIP(0x01, U21fe) !m0 
U310d: NOP 
U310e: LFNCEWAIT-> UJMP( , rax) 

U3110: tmp5:= AND_DSZ32(0x00000001, tmp5) 
U3111: tmp1:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U3112: tmp1:= AND_DSZ32(0x00000001, tmp1) SEQW GOTO U334e

U3114: PORTOUT_DSZ8_ASZ16_SC1(tmp1,  , tmp0) 
U3115: tmp10:= SHR_DSZ32(tmp0, 0x00000008) 
U3116: PORTOUT_DSZ8_ASZ16_SC1(tmp1,  , tmp10) SEQW GOTO U5b85

U3118: tmp0:= unk_d9f(tmp1) 
U3119: tmp10:= SHR_DSZ32(tmp0, 0x00000018) 
U311a: PORTOUT_DSZ8_ASZ16_SC1(tmp1,  , tmp10) SEQW GOTO U5b85

U311c: PORTOUT_DSZ16_ASZ16_SC1(tmp1,  , tmp0) 
U311d: tmp10:= SHR_DSZ32(tmp0, 0x00000010) 
U311e: PORTOUT_DSZ16_ASZ16_SC1(tmp1,  , tmp10) SEQW GOTO U5b85

U3120: PORTOUT_DSZ8_ASZ16_SC1(tmp1,  , tmp0) 
U3121: tmp10:= SHR_DSZ32(tmp0, 0x00000008) 
U3122: tmp10:= unk_d9f(tmp1) SEQW GOTO U5b85

U3124: tmp1:= MOVEFROMCREG_DSZ64( , 0x2d3, 32) !m1 
U3125: SYNCMARK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000007, U3124) !m0,m1,m2 SEQW GOTO U300c
U3126: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U5e7e) !m2 

U3128: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U5ae2) !m2 
U3129: tmp0:= READAFLAGS(tmp7) 
U312a: WRITEURAM(tmp0, 0x0022, 64) !m2 SEQW GOTO U21b8

U312c: MOVETOCREG_OR_DSZ64( , 0x00000020, 0x2d5) !m1,m2 
U312d: tmp1:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1,m2 
U312e: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000004, U312d) !m1,m2 SEQW GOTO U301c

U3130: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U3131: tmp6:= NOTAND_DSZ64(0x01c00000, tmp6) 
U3132: LFNCEMARK-> MOVETOCREG_DSZ64(tmp6, 0x00c) !m2 

U3134: tmp6:= ZEROEXT_DSZ32(0x00000400) 
U3135: tmp13:= MOVEFROMCREG_DSZ64( , 0x000) 
U3136: tmp15:= READUIP_REGOVR(0x01) !m0 

U3138: tmp14:= CONCAT_DSZ32(tmp14, tmp15) 
U3139: tmp15:= AND_DSZ32(0x0000003f, tmp13) 
U313a: tmp15:= SUB_DSZ32(0x00000001, tmp15) 

U313c: tmp15:= SUB_DSZ32(0x0000003d, tmp15) 
U313d: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp15, U37f4) 
U313e: LFNCEWTMRK-> tmp13:= SIGEVENT(tmp13, 0x00000003) SEQW URET1

U3140: tmp1:= SHR_DSZ64(tmp5, 0x00000019) 
U3141: tmp1:= AND_DSZ32(0x00000180, tmp1) 
U3142: tmp2:= AND_DSZ32(0x00000100, tmp1) SEQW GOTO U5cf9

U3144: tmp5:= AND_DSZ32(0x00004004, tmp5) 
U3145: tmp1:= SHR_DSZ32(tmp5, 0x0000000a) 
U3146: tmp5:= SHR_DSZ32(tmp5, 0x00000002) SEQW GOTO U022a

U3148: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 
U3149: tmp3:= MOVEFROMCREG_DSZ64( , 0x070) 
U314a: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000009, U24ad) !m1 

U314c: tmp2:= READURAM( , 0x001f, 64) 
U314d: tmp2:= BTR_DSZ64(tmp2, 0x00000009) 
U314e: tmp8:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000200) 

U3150: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp8, 0x007) 
U3151: WRITEURAM(tmp2, 0x001f, 32) 
U3152: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000007, U3154) !m0,m1,m2 SEQW GOTO U1d50

U3154: tmp2:= ZEROEXT_DSZ32(0x00000001) 
U3155: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000008, U1976) !m2 
U3156: tmp14:= SAVEUIP(0x01, U3688) !m0 SEQW GOTO U5d69

U3158: tmp5:= AND_DSZ32(0x0000b615, tmp5) 
U3159: tmp1:= MOVEFROMCREG_DSZ64( , 0x01d) 
U315a: tmp1:= AND_DSZ32(0x00000004, tmp1) SEQW GOTO U305c

U315c: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U315d: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x1a) !m1 
U315e: tmp4:= XOR_DSZ32(0xffdbb22a, tmp3) 

U3160: LFNCEWAIT-> tmp1:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U3161: tmp0:= AND_DSZ32(tmp4, tmp0) 
U3162: tmp1:= AND_DSZ32(0x001a3202, tmp1) 

U3164: tmp2:= AND_DSZ32(0x00000100, tmp0) 
U3165: tmp1:= AND_DSZ32(tmp3, tmp1) 
U3166: tmp2:= unk_207(tmp2) 

U3168: tmp2:= OR_DSZ32(0x00000000, tmp2) 
U3169: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2711) 
U316a: ROVR<- tmp0:= OR_DSZ32(tmp1, tmp0) SEQW SAVEUIP1 U316cSEQW GOTO U2e95

U316c: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x7fe) !m2 
U316d: unk_13f(tmp0) !m2 
U316e: rsp:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 SEQW UEND0

U3170: tmp1:= MOVEFROMCREG_DSZ64( , 0x79a) 
U3171: tmp5:= CONCAT_DSZ16(tmp1, tmp5) SEQW GOTO U189a
U3172: NOP 

U3174: tmp1:= READURAM( , 0x005c, 64) 
U3175: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000011, U189a) !m2 
U3176: SYNCFULL-> tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x1e74) !m2 SEQW GOTO U189a

U3178: tmp13:= ZEROEXT_DSZ32(tmp10) SEQW GOTO U296e
U3179: NOP 
U317a: NOP 

U317c: tmp1:= RDSEGFLD(UNK_SEG_10, BASE) 
U317d: tmp5:= SHR_DSZ32(tmp5, 0x0000001e) SEQW GOTO U3056
U317e: NOP 

U3180: NOP 
U3181: NOP SEQW GOTO U2711
U3182: NOP 

U3184: tmp5:= ZEROEXT_DSZ32() SEQW GOTO U189a
U3185: NOP 
U3186: NOP 

U3188: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x4718) !m2 
U3189: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000017, U2711) !m0,m1 
U318a: tmp5:= PORTIN_DSZ8_ASZ16_SC1(0x0020) !m2 SEQW GOTO U189a

U318c: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x0020) !m2 
U318d: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U2711) !m1 SEQW GOTO U3198
FUN_ucode_000318e:
U318e: tmp12:= WRMSLOOPCTRFBR(0x0000000f) 

U3190: tmp13:= READUIP_REGOVR(0x00) 
U3191: unk_f6d(tmp1, tmp12, rdi) 
U3192: tmp12:= SUBR_DSZ64(tmp12, IMM_MACRO_01) !m0 

U3194: unk_f6d(tmp1, tmp12, rdi) 
U3195: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U3191
U3196: URET(0x00) 

U3198: tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 SEQW GOTO U189a
U3199: NOP 
FUN_ucode_000319a:
U319a: tmp12:= WRMSLOOPCTRFBR(0x0000000f) 

U319c: tmp14:= READUIP_REGOVR(0x01) !m0 
U319d: rdi:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp0, tmp12) 
U319e: tmp12:= SUBR_DSZ64(tmp12, IMM_MACRO_01) !m0 

U31a0: rdi:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp0, tmp12) 
U31a1: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U319d
U31a2: URET(0x01) !m0 

U31a4: tmp1:= READURAM( , 0x005c, 64) 
U31a5: tmp1:= BT_DSZ64(tmp1, 0x0000002c) 
U31a6: tmp2:= SHR_DSZ32(tmp5, 0x00000010) 

U31a8: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp1) 
U31a9: tmp2:= CMOVCC_DSZ32_CONDB(tmp2, 0xffffffffffffffff) 
U31aa: tmp1:= SUB_DSZ32(0x00000419, tmp8) SEQW GOTO U1c39

U31ac: tmp0:= ZEROEXT_DSZ32(0x0000001e) 
U31ad: tmp1:= ZEROEXT_DSZ32(tmp11) 
U31ae: tmp11:= BT_DSZ32(tmp11, 0x00000004) 

U31b0: tmp15:= SELECTCC_DSZ32_CONDNB(tmp11, 0x00000400) 
U31b1: tmp0:= OR_DSZ32(tmp15, tmp0) 
U31b2: UJMP( , tmp4) 

U31b4: tmp1:= READURAM( , 0x0087, 64) 
U31b5: tmp1:= ZEROEXT_DSZ32(tmp1) 
U31b6: tmp5:= IMUL64L_DSZ64(tmp1, tmp5) SEQW GOTO U189a

U31b8: tmp13:= ZEROEXT_DSZ32(0x0000001a) SEQW GOTO U2d5d
U31b9: NOP 
U31ba: NOP 

U31bc: NOP 
U31bd: NOP 
U31be: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 SEQW GOTO U2711

U31c0: LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(0x00000003) SEQW GOTO U67f6
U31c1: tmp0:= ZEROEXT_DSZ32(0x00000045) 
U31c2: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000014, U21aa) !m1 

U31c4: tmp0:= READURAM( , tmp0) !m2 
U31c5: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U21a6) !m1 
U31c6: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000011, U21a5) !m1 SEQW GOTO U21aa

U31c8: tmp15:= SUB_DSZ64(0x00000006, tmp4) 
U31c9: tmp1:= SELECTCC_DSZ32_CONDNBE(tmp15, tmp4) 
U31ca: tmp1:= ADD_DSZ32(0x00000005, tmp1) 

U31cc: tmp1:= SHL_DSZ32(tmp1, 0x00000004) 
U31cd: tmp1:= ADD_DSZ32(tmp1, 0xfed20e00) 
U31ce: PORTOUT_DSZ8_ASZ16_SC1(tmp1,  , 0x00000000) SEQW GOTO U2b0c

U31d0: tmp4:= ZEROEXT_DSZ16(0x00000040) SEQW URET0
U31d1: tmp11:= PORTIN_DSZ8_ASZ16_SC1(0x0019) !m2 
U31d2: CMPUJNZ_DIRECT_NOTTAKEN(tmp11, 0x00000000, U31d4) !m1,m2 SEQW GOTO U57c1

U31d4: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2db) !m0,m1 
U31d5: tmp5:= ZEROEXT_DSZ32() 
U31d6: SAVEUIP( , 0x00, U3b90) SEQW GOTO U5f64

U31d8: tmp4:= ZEROEXT_DSZ16(0x00000080) SEQW URET0
U31d9: TESTUSTATE( , SYS, !UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U28e8
U31da: tmp0:= READURAM( , 0x0023, 64) 

U31dc: tmp0:= AND_DSZ32(0x00000030, tmp0) 
U31dd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U28e8) 
U31de: tmp5:= BTS_DSZ32(0x00000000, 0x00000010) SEQW GOTO U28e8

U31e0: tmp4:= ZEROEXT_DSZ32() SEQW URET0
U31e1: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1be4
U31e2: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 

U31e4: MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000b, 0x285) !m0,m1,m2 
U31e5: tmp0:= PORTIN_DSZ16_ASZ16_SC1(0x4680) !m2 
U31e6: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000b740,  , tmp0) SEQW GOTO U1be4

U31e8: SAVEUIP( , 0x00, U4022) SEQW GOTO U0644
U31e9: LFNCEMARK-> tmp0:= CONCAT_DSZ32(tmp13, tmp1) 
U31ea: tmp3:= ZEROEXT_DSZ32(0x00000010) 

U31ec: LFNCEWAIT-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
U31ed: tmp4:= MOVE_DSZ32(0x00000037) 
U31ee: MOVETOCREG_DSZ64(tmp4, 0x00b) 

U31f0: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U31f1: LFNCEWTMRK-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U31f2: ROVR<- tmp10:= READAFLAGS( , tmp10) !m2 SEQW SAVEUIP1 U31f4SEQW GOTO U0514

U31f4: tmp4:= READURAM( , 0x001b, 64) 
U31f5: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp4, 0x067) !m2 
U31f6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff8, mode=0x01,  , tmp10) 

U31f8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff0, mode=0x01,  , tmp11) 
U31f9: rsp:= SUB_DSZN(tmp3, rsp) !m1 
U31fa: tmp0:= BTS_DSZ64(tmp0, 0x0000001f) 

U31fc: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff8, mode=0x01,  , tmp0) 
U31fd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff0, mode=0x01,  , tmp3) 
U31fe: rsp:= SUB_DSZN(0x00000010, rsp) !m1 SEQW GOTO U1bd0

U3200: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp5, tmp10) SEQW GOTO U6380
U3201: NOP 
U3202: NOP 

U3204: tmp10:= AND_DSZ32(0x000000ff, tmp10) 
U3205: tmp10:= OR_DSZ32(0x00000200, tmp10) SEQW GOTO U3209
U3206: NOP 

U3208: tmp10:= AND_DSZ32(0x000000ff, tmp10) 
U3209: LFNCEWTMRK-> WRITEURAM(tmp5, tmp10) 
U320a: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U6381

U320c: unk_256() 
U320d: tmp2:= ZEROEXT_DSZ32(0x00000503) 
U320e: LFNCEWAIT-> TESTUSTATE( , UCODE, !0x3000) !m0 ? SEQW GOTO U18a0

uend:
U3210: SYNCWAIT-> NOP SEQW UEND0
U3211: tmp13:= MOVEFROMCREG_DSZ64( , 0x000) 
U3212: tmp6:= ZEROEXT_DSZ32(0x80000000) SEQW GOTO U37f4

U3214: tmp5:= unk_f7d( , tmp2) !m2 SEQW GOTO U6380
U3215: NOP 
U3216: NOP 

U3218: TESTUSTATE( , UCODE, !0x0200) !m0 ? SEQW GOTO U321c
U3219: tmp5:= SHR_DSZ64(tmp5, 0x0000003f) 
U321a: tmp5:= SHL_DSZ64(tmp5, 0x0000003f) 

U321c: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp5, tmp10) !m1 SEQW GOTO U332d
U321d: NOP 
U321e: NOP 

U3220: LFNCEWTMRK-> WRSEGFLD(tmp5, FS, BASE) SEQW GOTO U320a
U3221: NOP 
U3222: NOP 

U3224: LFNCEWTMRK-> WRSEGFLD(tmp5, GS, BASE) SEQW GOTO U320a
U3225: NOP 
U3226: NOP 

U3228: tmp1:= READURAM( , 0x0041, 64) 
U3229: tmp1:= SHR_DSZ64(tmp1, 0x00000017) 
U322a: tmp1:= AND_DSZ32(tmp5, tmp1) SEQW GOTO U1a2c

U322c: LFNCEMARK-> WRITEURAM(tmp5, 0x001d, 64) !m2 
U322d: tmp10:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1 
U322e: BTUJNB_DIRECT_NOTTAKEN(tmp10, 0x00000003, U6380) !m0,m1 SEQW GOTO U5658

U3230: SAVEUIP( , 0x01, U3204) !m0 SEQW GOTO U6110
U3231: NOP 
U3232: NOP 

U3234: SAVEUIP( , 0x01, U3200) !m0 
U3235: tmp2:= MOVEFROMCREG_DSZ64( , tmp10) SEQW GOTO U6111
U3236: NOP 

U3238: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp8, U37f2) SEQW GOTO U3282
U3239: NOP 
U323a: NOP 

U323c: tmp2:= SHR_DSZ64(tmp3, 0x00000026) 
U323d: tmp2:= AND_DSZ64(tmp5, tmp2) 
U323e: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2711) SEQW GOTO U3230

U3240: tmp1:= SAVEUIP_REGOVR(0x01, U3241, 0x0012) !m0 
U3241: SAVEUIP( , 0x00, U08ee) SEQW GOTO U3044
U3242: NOP 

U3244: tmp2:= SHR_DSZ64(tmp3, 0x0000000f) 
U3245: tmp2:= NOTAND_DSZ32(tmp2, tmp5) 
U3246: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000a, U2711) !m0,m1 SEQW GOTO U6bdc

U3248: tmp5:= SHR_DSZ32(tmp5, 0x00000006) SEQW SAVEUIP1 U3249SEQW GOTO U32cd
U3249: tmp1:= MOVEFROMCREG_DSZ64( , 0x2e6, 32) !m1 
U324a: tmp5:= NOTAND_DSZ32(tmp5, 0x00000010) 

U324c: tmp5:= NOTAND_DSZ64(tmp5, tmp1) 
U324d: MOVETOCREG_DSZ64(tmp5, tmp10) !m1 
U324e: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 SEQW GOTO U332d

U3250: tmp1:= SHR_DSZ64(tmp3, 0x00000019) 
U3251: tmp1:= AND_DSZ32(tmp5, tmp1) 
U3252: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U2711) !m0,m1 SEQW GOTO U24e1

U3254: PORTOUT_DSZ8_ASZ16_SC1(0x0009,  , tmp5) !m2 
U3255: tmp5:= AND_DSZ32(0x00000200, tmp5) 
U3256: tmp12:= ZEROEXT_DSZ32(0x00000200) SEQW GOTO U3230

U3258: SAVEUIP( , 0x00, U6380) 
U3259: CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000000, U0164) SEQW SAVEUIP1 U325a
U325a: CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000002, U377a) !m0,m1,m2 SEQW GOTO U050c

U325c: tmp5:= AND_DSZ32(0x80000000, tmp5) 
U325d: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x003c) !m2 
U325e: tmp1:= SELECTCC_DSZ32_CONDZ(tmp5, tmp1) SEQW GOTO U44d5

U3260: tmp10:= READURAM( , 0x0062, 64) 
U3261: unk_13f(tmp10) !m2 
U3262: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp10, 0x7fe) SEQW GOTO U2c6a

U3264: tmp10:= READURAM( , 0x0062, 64) 
U3265: tmp5:= READURAM( , 0x0063, 64) 
U3266: tmp10:= CONCAT_DSZ16(tmp5, tmp10) SEQW GOTO U1ef4

U3268: tmp10:= MOVEFROMCREG_DSZ64( , 0x2c0, 32) !m1 
U3269: rax:= unk_14d(tmp10) 
U326a: tmp10:= MOVEFROMCREG_DSZ64( , 0x2c1, 32) !m1 SEQW GOTO U5bb5

U326c: tmp10:= MOVEFROMCREG_DSZ64( , 0x2c0, 32) !m1 
U326d: tmm0:= unk_747(tmm2) 
U326e: tmp10:= MOVEFROMCREG_DSZ64( , 0x2c1, 32) !m1 SEQW GOTO U02aa

U3270: tmp10:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U3271: tmp10:= BTR_DSZ32(tmp10, 0x0000001f) 
U3272: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmp10, 0x7f6, rax) SEQW GOTO U6380

U3274: UJMPCC_DIRECT_NOTTAKEN_CONDNS(tmp8, U37f2) 
U3275: LFNCEMARK-> WRITEURAM(tmp5, 0x0171, 64) !m2 SEQW GOTO U320a
wrmsr_update_ucode_patch:
U3276: NOP 

U3278: LFNCEMARK-> TESTUSTATE( , SYS, UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW GOTO U3282
U3279: tmp4:= CONCAT_DSZ32(rdx, rax) 
U327a: tmp4:= ZEROEXT_DSZ64N(tmp4) !m1 

apply_ucode_patch:
U327c: tmp0:= READURAM( , 0x0053, 64) !m2 
U327d: tmp0:= NOTAND_DSZ32(0x00000079, tmp0) 
U327e: tmp0:= OR_DSZ32(0x00000002, tmp0) SEQW GOTO U0d79

U3280: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNS(tmp8, U37f2) 
U3281: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U3230
U3282: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW URET0

U3284: tmp0:= ZEROEXT_DSZ32(0x00000020) SEQW GOTO U73ac
U3285: NOP 
U3286: NOP 

U3288: tmp5:= SHL_DSZ64(tmp5, 0x00000020) 
U3289: tmp5:= SAR_DSZ64(tmp5, 0x00000020) SEQW GOTO U321c
U328a: NOP 

U328c: tmp1:= SHR_DSZ64(tmp3, 0x00000020) 
U328d: tmp1:= AND_DSZ64(tmp5, tmp1) 
U328e: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000001f, U2711) !m0,m1 SEQW GOTO U0119

U3290: tmp5:= BTR_DSZ32(tmp5, 0x00000008) 
U3291: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp5, U44b1) 
U3292: tmp2:= READURAM( , 0x0023, 64) SEQW GOTO U2c89

U3294: tmp1:= MOVEFROMCREG_DSZ64( , 0x701) 
U3295: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U2711) !m1 SEQW GOTO U3234
U3296: NOP 

U3298: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp8, U37f2) 
U3299: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U6380) !m1 SEQW SAVEUIP1 U329aSEQW GOTO U02ba
U329a: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x9704) !m2 

U329c: tmp1:= OR_DSZ32(0x00000001, tmp1) 
U329d: PORTOUT_DSZ32_ASZ16_SC1(0x9704,  , tmp1) !m2 SEQW GOTO U5718
U329e: NOP 

U32a0: tmp2:= READURAM( , 0x0023, 64) 
U32a1: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000003f, U2711) !m0,m1 
U32a2: tmp2:= AND_DSZ32(0x00000003, tmp2) SEQW GOTO U44a5

U32a4: SAVEUIP( , 0x01, U3208) !m0 
U32a5: tmp2:= READURAM( , 0x0023, 64) 
U32a6: tmp1:= NOTAND_DSZ64(tmp5, tmp2) SEQW GOTO U610d

U32a8: LFNCEMARK-> PORTOUT_DSZ8_ASZ16_SC1(0x0008,  , tmp5) !m2 SEQW URET0
U32a9: tmp14:= ZEROEXT_DSZ32(tmp9) 
U32aa: tmp11:= SAVEUIP(tmp15, 0x01, U6a78) !m0 SEQW GOTO U080e

U32ac: tmp1:= SHL_DSZ64(tmp3, 0x0000000c) 
U32ad: tmp3:= PORTIN_DSZ32_ASZ16_SC1(0x00c0) !m2 
U32ae: tmp2:= SHL_DSZ64(tmp3, 0x00000009) SEQW GOTO U5b45

U32b0: tmp12:= ADD_DSZ32(0x00c41089) 
U32b1: tmp2:= BT_DSZ64(tmp3, 0x00000014) 
U32b2: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00000040) SEQW GOTO U562e

U32b4: SYNCMARK-> tmp1:= SHR_DSZ32(tmp5, 0x00000002) 
U32b5: tmp2:= MOVEFROMCREG_DSZ64( , 0x105) 
U32b6: tmp2:= NOTAND_DSZ32(0x00000001, tmp2) SEQW GOTO U59f5

U32b8: SAVEUIP( , 0x01, U0212) !m0 SEQW GOTO U02ba
U32b9: NOP 
U32ba: NOP 

U32bc: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x47f0) !m2 
U32bd: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U2711) !m1 
U32be: tmp5:= SHL_DSZ32(tmp5, 0x0000000e) SEQW GOTO U021a

U32c0: NOP 
U32c1: NOP SEQW GOTO U2711
U32c2: NOP 

U32c4: tmp1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U32c5: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000e, U6380) !m0,m1 SEQW GOTO U321c
U32c6: NOP 

U32c8: tmp1:= READURAM( , 0x0023, 64) 
U32c9: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U2711) !m1 
U32ca: MOVETOCREG_SHL_DSZ64(tmp5, 0x00000002, 0x38a) !m0,m1,m2 SEQW GOTO U332d

U32cc: SAVEUIP( , 0x01, U324d) !m0 
crbus_sync_with_289:
U32cd: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x289) !m1,m2 
U32ce: tmpv0:= MOVEFROMCREG_DSZ64( , 0x289, 32) !m1,m2 SEQW GOTO U238e

U32d0: tmp3:= MOVEFROMCREG_DSZ64( , 0x573) 
U32d1: tmp2:= SAVEUIP(tmp5, 0x01, U647e) !m0 SEQW GOTO U32f9
U32d2: NOP 

U32d4: tmp3:= SAVEUIP(tmp5, 0x01, U647e) !m0 
U32d5: tmp2:= MOVEFROMCREG_DSZ64( , 0x572) 
U32d6: tmp1:= SAR_DSZ32(tmp5, 0x0000000c) SEQW GOTO U048c

U32d8: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 
U32d9: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 
U32da: BTUJNB_DIRECT_NOTTAKEN(tmp8, 0x00000000, U0494) SEQW GOTO U59d5

U32dc: tmp1:= SHR_DSZ32(tmp5, 0x00000002) 
U32dd: tmp1:= AND_DSZ32(0x1003fff7, tmp1) 
U32de: PORTOUT_DSZ32_ASZ16_SC1(0x47f0,  , tmp1) !m2 SEQW GOTO U5ce9

U32e0: tmp1:= MOVEFROMCREG_DSZ64( , tmp10) 
U32e1: tmp1:= AND_DSZ32(0x00000800, tmp1) 
U32e2: tmp5:= OR_DSZ64(tmp1, tmp5) SEQW SAVEUIP1 U32e4SEQW GOTO U32f9

U32e4: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp5, tmp10) !m2 SEQW GOTO U6380
U32e5: NOP 
U32e6: NOP 

U32e8: tmp3:= NOTAND_DSZ32(0x00000001, tmp10) 
U32e9: tmp1:= MOVEFROMCREG_DSZ64( , tmp3) 
U32ea: tmp1:= NOTAND_DSZ64(0x00000800, tmp1) SEQW GOTO U0222

U32ec: tmp1:= CONCAT_DSZ32(0x03030303) 
U32ed: tmp1:= AND_DSZ64(tmp5, tmp1) 
U32ee: tmp1:= SHR_DSZ64(tmp1, 0x00000001) SEQW GOTO U44b9

U32f0: tmp1:= CONCAT_DSZ32(0x04040404) 
U32f1: tmp1:= NOTAND_DSZ64(tmp5, tmp1) 
U32f2: tmp1:= SHR_DSZ64(tmp1, 0x00000001) SEQW GOTO U44c1

U32f4: UJMPCC_DIRECT_NOTTAKEN_CONDNS(tmp8, U37f2) 
U32f5: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 
U32f6: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000b, U2711) !m0,m1 SEQW GOTO U63c8

U32f8: SAVEUIP( , 0x01, U5b55) !m0 
FUN_ucode_00032f9:
U32f9: tmp1:= AND_DSZ32(0x00000006, tmp5) 
U32fa: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000002, U2711) !m0,m1 SEQW GOTO U07bd

U32fc: tmp2:= SHR_DSZ32(tmp5, 0x0000001a) 
U32fd: tmp1:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U32fe: tmp1:= NOTAND_DSZ32(0x00000020, tmp1) SEQW GOTO U44d1

U3300: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U3301: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U459e) !m0 
U3302: LFNCEMARK-> tmp1:= AND_DSZ32(0x00000001, tmp8) SEQW GOTO U0202

U3304: tmp1:= MOVEFROMCREG_DSZ64( , tmp10) !m1 
U3305: MOVETOCREG_DSZ64(tmp5, tmp10) !m1,m2 SEQW GOTO U5594
U3306: NOP 

U3308: tmp1:= MOVEFROMCREG_DSZ64( , tmp10) 
U3309: MOVETOCREG_DSZ64(tmp5, tmp10) !m2 SEQW GOTO U5594
U330a: NOP 

U330c: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000003d, U2711) !m1 
U330d: tmp1:= ZEROEXT_DSZ32(0x00000000) SEQW GOTO U3361
U330e: NOP 

U3310: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000000, U6380) !m1 
U3311: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x8404) !m2 
U3312: tmp1:= ROL_DSZ32(tmp1, 0x00000002) SEQW GOTO U049c

U3314: SAVEUIP( , 0x01, U3208) !m0 SEQW GOTO U3319
U3315: NOP 
U3316: NOP 

U3318: SAVEUIP( , 0x01, U3200) !m0 
U3319: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U331a: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000d, U6380) !m1 SEQW GOTO U0129

U331c: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U331d: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000d, U6380) !m1 
U331e: tmp3:= MOVEFROMCREG_DSZ64( , 0x7f0) SEQW GOTO U0e89

U3320: tmp13:= SAVEUIP(0x00, U1d62) 
U3321: tmp2:= TESTUSTATE(tmp5, VMX, !0x0004) !m0,m2 ? SEQW GOTO U57cd
U3322: tmp1:= MOVEFROMCREG_DSZ64( , 0x7bb) 

U3324: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 SEQW GOTO U321c
U3325: NOP 
U3326: NOP 

U3328: tmp13:= SAVEUIP(0x00, U6614) SEQW SAVEUIP1 U3329SEQW GOTO U047c
U3329: tmp1:= MOVEFROMCREG_DSZ64( , 0x2d3, 32) !m1 
U332a: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000007, U3329) !m0,m1,m2 

U332c: MOVETOCREG_DSZ64( , 0x00000000, 0x28b, 32) !m1,m2 
U332d: SYNCMARK-> NOP SEQW GOTO U320a
U332e: NOP 

U3330: tmp1:= MOVEFROMCREG_DSZ64( , 0x2e7, 32) !m1 
U3331: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000c, U3330) !m1,m2 SEQW GOTO U321c
U3332: NOP 

U3334: MOVETOCREG_DSZ64(tmp5, tmp10) !m1,m2 
U3335: tmp1:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1,m2 
U3336: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000004, U3335) !m1,m2 SEQW GOTO U6380

U3338: tmp1:= ZEROEXT_DSZ32(0x000003f0) 
U3339: tmp13:= SAVEUIP(0x00, U613c) SEQW SAVEUIP1 U333aSEQW GOTO U047c
U333a: tmp1:= MOVEFROMCREG_DSZ64( , 0x28f, 32) !m1 

U333c: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U2711) !m1 
U333d: MOVETOCREG_BTS_DSZ64(tmp5, 0x0000000c, 0x2bf) !m1,m2 
U333e: tmp1:= MOVEFROMCREG_DSZ64( , 0x2bf, 32) !m1,m2 SEQW GOTO U23c6

U3340: tmp1:= AND_DSZ32(0x00001800, tmp5) 
U3341: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x00001800) 
U3342: tmp5:= OR_DSZ32(tmp1, tmp5) SEQW GOTO U651d

U3344: tmp5:= CONCAT_DSZ8(tmp5, tmp5) 
U3345: tmp5:= AND_DSZ32(0x00001001, tmp5) 
U3346: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x4c18) !m2 SEQW GOTO U0232

U3348: tmp2:= SAVEUIP_REGOVR(tmp5, 0x00, U3349, 0x8321) 
U3349: SAVEUIP( , 0x01, U6380) !m0 SEQW GOTO U6d0a
U334a: NOP 

U334c: tmp2:= ZEROEXT_DSZ64(tmp5) 
FUN_ucode_000334d:
U334d: PORTOUT_DSZ64_ASZ16_SC1(0x8818,  , tmpv0) !m2 SEQW URET0
U334e: tmp1:= SHL_DSZ32(tmp1, 0x00000001) SEQW GOTO U3056

U3350: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000002, U62ec) !m0,m1 
U3351: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000008, U32cd) !m1,m2 SEQW SAVEUIP1 U3352SEQW GOTO U6380
U3352: tmp1:= MOVEFROMCREG_DSZ64( , 0x2e1, 32) !m1 

U3354: MOVETOCREG_BTS_DSZ64(tmp1, 0x0000000a, 0x2e1) !m0,m1,m2 SEQW GOTO U324e
U3355: NOP 
U3356: NOP 

U3358: MOVETOCREG_SHR_DSZ64(tmp5, 0x00000020, 0x070) !m2 SEQW GOTO U321c
U3359: NOP 
U335a: NOP 

U335c: tmp5:= BTR_DSZ64(tmp5, 0x00000004) 
U335d: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp5, U321c) 
U335e: unk_eff() SEQW GOTO U321c

U3360: tmp1:= ZEROEXT_DSZ32(0x0000001f) 
U3361: tmp10:= ZEROEXT_DSZ32(0x00005718) SEQW GOTO U5711
U3362: tmp0:= ZEROEXT_DSZ32(0x00030300) 

U3364: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x6a1) !m2 
U3365: tmp1:= ZEROEXT_DSZ32(0x000034a1) 
U3366: tmp1:= BTS_DSZ32(tmp1, 0x00000010) SEQW GOTO U3741

U3368: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000001, U5f08) !m2 
U3369: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000002, U2b21) !m0,m1 
U336a: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000008, U5cd1) !m2 SEQW GOTO U1d98

U336c: tmp1:= OR_DSZ32(0x00000001, tmp10) 
U336d: tmp1:= MOVEFROMCREG_DSZ64( , tmp1) 
U336e: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 SEQW GOTO U3200

U3370: LFNCEWAIT-> MOVETOCREG_SHR_DSZ64(tmp5, 0x00000010, 0x79a) SEQW GOTO U3200
U3371: NOP 
U3372: NOP 

U3374: tmp2:= READURAM( , 0x005c, 64) 
U3375: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000011, U634e) !m1 
U3376: tmp12:= WRMSLOOPCTRFBR(0x0000000c) SEQW GOTO U6346

U3378: LFNCEWTMRK-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U2711) !m1 
U3379: tmp1:= unk_222(tmp5) 
U337a: tmp2:= unk_1d7(tmp5) SEQW GOTO U04a4

U337c: tmp2:= AND_DSZ64(0xfffffffffffff000, tmp5) 
U337d: LFNCEWAIT-> WRSEGFLD(tmp2) 
U337e: tmp5:= AND_DSZ32(0x00000003, tmp5) SEQW GOTO U309c

U3380: tmp13:= ZEROEXT_DSZ32(0x00000007) SEQW GOTO U296e
U3381: NOP 
U3382: NOP 

U3384: NOP SEQW URET0
U3385: tmp13:= AND_DSZ32(0x0000003f, tmp13) 
U3386: CMPUJZ_DIRECT_NOTTAKEN(tmp13, 0x00000005, U232c) !m1 SEQW GOTO U2711

U3388: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x4718) !m2 
U3389: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000017, U2711) !m0,m1 
U338a: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000003, U2711) !m0,m1 SEQW GOTO U570d

U338c: tmp15:= OR_DSZ32() 
U338d: tmp6:= OR_DSZ32() 
U338e: tmp1:= SHL_DSZ32(tmp6, 0x00000005) 

U3390: tmp1:= OR_DSZ32(tmp15, tmp1) 
U3391: tmp1:= SHL_DSZ32(tmp1, 0x0000000f) 
U3392: SAVEUIP_REGOVR(0x01, U3394, 0x0002) !m0 SEQW GOTO U32cd

U3394: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp1, 0x00000007, 0x3a5) !m0,m1,m2 
U3395: tmp2:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 
U3396: UJMP( , tmp13) 

U3398: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(0x0000, tmp2, tmp5) !m1,m2 SEQW GOTO U6380
FUN_ucode_0003399:
U3399: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U339a: tmp12:= ADD_DSZ32(0x00000020, tmp12) 

U339c: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U339d: tmp8:= ZEROEXT_DSZ32(tmp8, tmp5) 
U339e: tmp9:= SHR_DSZ32(tmp8, 0x00000010) 

U33a0: tmp2:= SHR_DSZ64(tmp6, 0x00000020) 
U33a1: LFNCEWAIT-> tmp5:= MOVETOCREG_DSZ64(tmp6, tmp8) !m1 
U33a2: tmp9:= ZEROEXT_DSZ32(tmp9, tmp5) 

U33a4: tmp5:= MOVETOCREG_DSZ64(tmp2, tmp9) !m1 
U33a5: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3399
U33a6: URET(0x00) 

U33a8: tmp1:= SUB_DSZ32(0x00004f88, tmp2) 
U33a9: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x00000201) 
U33aa: tmp3:= READURAM( , 0x005c, 64) SEQW GOTO U0111

U33ac: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 
U33ad: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000003f, U2711) !m0,m1 
U33ae: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000002b, U3398) !m0,m1,m2 SEQW GOTO U05bc

U33b0: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x4718) !m2 
U33b1: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000001e, U2711) !m0,m1 SEQW GOTO U3398
U33b2: NOP 

U33b4: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp8, U37f2) 
U33b5: tmp5:= BTR_DSZ32(tmp5, 0x0000001f) 
U33b6: tmp1:= ZEROEXT_DSZ32(0x0000001e) SEQW GOTO U5710

U33b8: tmp1:= ZEROEXT_DSZ32(0x00000004) SEQW GOTO U5f96
U33b9: NOP 
U33ba: NOP 

U33bc: NOP 
U33bd: NOP 
U33be: tmp7:= CONCAT_DSZ16(tmp15, 0x00000005) SEQW SAVEUIP0 U33c0SEQW GOTO U6cb0

U33c0: LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U079e
U33c1: tmp5:= OR_DSZ32(rsp) 
U33c2: MOVETOCREG_DSZ64(0x00000017, 0x000) 

U33c4: rsp:= unk_8ff(rsp, SS, tmp9) !m1 
U33c5: rsp:= ZEROEXT_DSZ8N(rsp) !m1 
U33c6: tmp4:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 

U33c8: tmp8:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0 
U33c9: tmp1:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_13, mode=0x0a) !m0,m1 
U33ca: tmp1:= ZEROEXT_DSZ16(tmp1) 

U33cc: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_1b, mode=0x0a) !m0,m1 
U33cd: tmp0:= ZEROEXT_DSZ16(tmp0) 
U33ce: tmp9:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_23, mode=0x0a) !m0,m1 

U33d0: tmp9:= ZEROEXT_DSZ16(tmp9) 
U33d1: tmp6:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_2b, mode=0x0a) !m0,m1 
U33d2: tmp6:= ZEROEXT_DSZ16(tmp6) 

U33d4: unk_e7b( , tmp2) 
U33d5: unk_e7b( , tmp1) 
U33d6: unk_e7b( , tmp0) 

U33d8: unk_e7b( , tmp9) 
U33d9: unk_e7b( , tmp6) 
U33da: tmp3:= ZEROEXT_DSZ16(tmp3) 

U33dc: rsp:= ZEROEXT_DSZ32N(tmp4) !m1 
U33dd: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x79e) !m0,m2 
U33de: LFNCEMARK-> unk_e7b( , tmp8) 

U33e0: LFNCEWAIT-> tmp1:= RDSEGFLD(SS_USERM, FLGS) 
U33e1: MOVETOCREG_DSZ64(tmp1, 0x73c) 
U33e2: tmp1:= RDSEGFLD(UNK_SEG_09, FLGS) 

U33e4: SYNCFULL-> MOVETOCREG_DSZ64(tmp1, 0x7f5) !m2 
U33e5: SAVEUIP( , 0x01, U2782) !m0 SEQW GOTO U19d9
U33e6: MOVETOCREG_DSZ64(tmp6, 0x000) !m2 

U33e8: tmp14:= SAVEUIP(0x01, U3006) !m0 
U33e9: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U1959
U33ea: LFNCEWTMRK-> unk_e7b(tmp0, tmp2) !m1,m2 

U33ec: LFNCEWAIT-> tmp1:= RDSEGFLD(SS_USERM, FLGS) SEQW GOTO U195c
U33ed: tmp2:= READURAM( , 0x005c, 64) 
U33ee: tmp2:= AND_DSZ32(0x00000100, tmp2) 

U33f0: tmp13:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U33f1: tmp9:= SELECTCC_DSZ64_CONDZ(tmp2, tmp13) 
U33f2: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000e, U33fc) !m0,m1,m2 

U33f4: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000080, mode=0x01, tmp12) 
U33f5: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp9, 0x7f8) 
U33f6: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002e8, mode=0x01, tmp12) 

U33f8: LFNCEMARK-> MOVETOCREG_DSZ64(tmp9, 0x7f9, 32) !m1 
U33f9: NOP 
U33fa: NOP 

U33fc: LFNCEWAIT-> tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000270, mode=0x01, tmp12) 
U33fd: NOP 
U33fe: NOP 

U3400: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp13, 0x0000000e, U3408) !m0,m1,m2 
U3401: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000278, mode=0x01, tmp12) 
U3402: tmp10:= AND_DSZ32(0x00000100, tmp10) 

U3404: tmp9:= NOTAND_DSZ32(0x00000100, tmp9) 
U3405: tmp9:= OR_DSZ32(tmp10, tmp9) 
U3406: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b0, mode=0x01, tmp12) 

U3408: unk_13f(tmp9) !m2 
U3409: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp9, 0x7fe) 
U340a: tmp9:= SELECTCC_DSZ64_CONDZ(tmp2, tmp13) 

U340c: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000003e, U340d) !m0,m1,m2 SEQW GOTO U4698
U340d: WRITEURAM(tmp11, 0x006b, 64) !m2 
U340e: tmp9:= CONCAT_DSZ8(tmp4, tmp5) 

U3410: tmp9:= CONCAT_DSZ16(tmp7, tmp9) 
U3411: tmp9:= CONCAT_DSZ32(tmp6, tmp9) 
U3412: WRITEURAM(tmp9, 0x002c, 64) !m2 

U3414: tmp0:= MOVE_DSZ32(0x00005a35) 
U3415: WRITEURAM(tmp3, 0x006c, 64) !m2 
U3416: tmp0:= CONCAT_DSZ16(0x000000db, tmp0) SEQW GOTO U2712

U3418: tmp5:= MOVEFROMCREG_DSZ64( , 0x48c) 
U3419: tmp5:= NOTAND_DSZ16(0x00000220, tmp5) 
U341a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, 0x48c) 

U341c: LFNCEWAIT-> NOP SEQW GOTO U1a50
U341d: tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 
U341e: tmp14:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

U3420: ROVR<- tmp0:= SUB_DSZN(tmp14, tmp0) !m1 SEQW SAVEUIP1 U3421SEQW GOTO U2178
U3421: unk_d68(0x00000000, tmp5, tmp1) 
U3422: unk_d68(0x00000008, tmp5, tmp0) 

U3424: unk_d68(0x00000010, tmp5, rax) 
U3425: unk_d68(0x00000018, tmp5, rbx) 
U3426: unk_d68(0x00000020, tmp5, rcx) 

U3428: unk_d68(0x00000028, tmp5, rdx) 
U3429: unk_d68(0x00000030, tmp5, rsi) 
U342a: unk_d68(0x00000038, tmp5, rdi) 

U342c: unk_d68(0x00000040, tmp5, rbp) 
U342d: unk_d68(0x00000048, tmp5, rsp) 
U342e: unk_d68(0x00000050, tmp5, r8) 

U3430: unk_d68(0x00000058, tmp5, r9) 
U3431: unk_d68(0x00000060, tmp5, r10) 
U3432: unk_d68(0x00000068, tmp5, r11) 

U3434: unk_d68(0x00000070, tmp5, r12) 
U3435: unk_d68(0x00000078, tmp5, r13) 
U3436: unk_d68(0x00000080, tmp5, r14) 

U3438: unk_d68(0x00000088, tmp5, r15) 
U3439: tmp0:= ZEROEXT_DSZ32(0x00000001) 
U343a: unk_d68(0x00000090, tmp5, tmp0) 

U343c: SAVEUIP_REGOVR(0x01, U343d, 0x00f1) !m0 SEQW GOTO U051c
U343d: tmp0:= SUB_DSZN(tmp14, tmp1) !m1 
U343e: unk_d68(0x000000b0, tmp5, tmp0) 

U3440: tmp0:= MOVEFROMCREG_DSZ64( , 0x063) 
U3441: unk_d68(0x00000098, tmp5, tmp0) 
U3442: unk_d68(0x000000a0, tmp5, 0x00000000) 

U3444: unk_d68(0x000000a8, tmp5, 0x00000000) 
U3445: unk_d68(0x000000b8, tmp5, 0x00000000) 
U3446: SAVEUIP_REGOVR(0x00, U3448, 0x0001) SEQW GOTO U0cb2

U3448: unk_d68(0x000000c0, tmp5, tmp0) 
U3449: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U2312
U344a: tmp0:= ADD_DSZ32(0x000000c8, tmp5) 

U344c: unk_d28(tmp4, tmp9, tmp0) SEQW GOTO U2315
U344d: LFNCEWAIT-> tmp15:= MOVEFROMCREG_DSZ64( , 0x068) 
U344e: tmp7:= CONCAT_DSZ16(tmp7, 0x00000403) 

U3450: tmp5:= ZEROEXT_DSZ64(tmp15) SEQW SAVEUIP0 U3451SEQW GOTO U6cb0
U3451: tmp15:= ZEROEXT_DSZ64(tmp5) 
U3452: tmp0:= BTS_DSZ32(tmp0, 0x0000001f) 

U3454: tmp1:= READURAM( , 0x000e, 64) 
U3455: SYNCFULL-> tmp1:= SHR_DSZ64(tmp1, 0x00000030) 
U3456: tmp1:= CONCAT_DSZ16(tmp1, tmp15) 

U3458: tmp1:= CONCAT_DSZ32(tmp1, tmp0) 
U3459: WRITEURAM(tmp1, 0x000e, 64) !m2 
U345a: tmp0:= ZEROEXT_DSZ32(0x0000345a) 

U345c: tmp0:= CONCAT_DSZ16(0x0000008a, tmp0) 
U345d: WRITEURAM(tmp0, 0x0007, 64) !m2 
U345e: MOVETOCREG_OR_DSZ64( , 0x0000001f, 0x000) !m0,m2 

U3460: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x0b4) !m2 
U3461: tmp0:= READURAM( , 0x005c, 64) 
U3462: tmp0:= BT_DSZ32(tmp0, 0x00000008) 

U3464: tmp15:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000002) 
U3465: tmp0:= SUB_DSZ64(0x00000001) 
U3466: tmp0:= NOTAND_DSZ64(tmp15, tmp0) 

U3468: WRITEURAM(tmp0, 0x0070, 64) !m2 
U3469: MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1,m2 
U346a: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x008) !m2 

U346c: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c2, 32) !m1 
U346d: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000005, 0x2c2) !m1,m2 
U346e: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cf, 32) !m1,m2 

U3470: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp0, 0x00000002, 0x2cf) !m0,m1,m2 SEQW GOTO U5e94
U3471: WRMSLOOPCTRFBR( , 0x0000000f) 
U3472: tmp1:= ZEROEXT_DSZ32(0x40000000) 

U3474: PORTOUT_DSZ32_ASZ16_SC1(tmp1,  , 0x00000000) 
U3475: tmp1:= ADD_DSZ32(0x00000004, tmp1) 
U3476: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3474

U3478: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U3480
U3479: WRMSLOOPCTRFBR( , 0x0000000f) 
U347a: tmp1:= ZEROEXT_DSZ32(0x400050a0) 

U347c: PORTOUT_DSZ32_ASZ16_SC1(tmp1,  , 0x00000000) 
U347d: tmp1:= ADD_DSZ32(0x00000004, tmp1) 
U347e: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U347c

U3480: tmp11:= ZEROEXT_DSZ32(0x00000008) 
U3481: WRITEURAM(tmp11, 0x0073, 64) !m2 
U3482: tmp1:= READURAM( , 0x0020, 64) 

U3484: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 
U3485: tmp1:= ZEROEXT_DSZ8(tmp1) 
U3486: tmp1:= SUB_DSZ32(0x00000001, tmp1) 

U3488: PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , tmp1) !m2 
U3489: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x00c0) !m2 
U348a: tmp1:= BTS_DSZ32(tmp1, 0x00000003) 

U348c: PORTOUT_DSZ8_ASZ16_SC1(0x00c0,  , tmp1) !m2 
U348d: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x0008) !m2 
U348e: tmp1:= READURAM( , 0x0035, 64) 

U3490: tmp1:= BT_DSZ64(tmp1, 0x00000030) 
U3491: tmp1:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00000010) 
U3492: tmp2:= OR_DSZ32(tmp1, tmp2) 

U3494: PORTOUT_DSZ32_ASZ16_SC1(0x0008,  , tmp2) !m2 
U3495: tmp1:= READURAM( , 0x0077, 64) 
U3496: tmp1:= SHR_DSZ64(tmp1, 0x0000002b) 

U3498: tmp1:= SHL_DSZ32(tmp1, 0x0000001f) 
U3499: PORTOUT_DSZ32_ASZ16_SC1(0x003c,  , tmp1) !m2 
U349a: tmp0:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U349cSEQW GOTO U21a1

U349c: tmp1:= READURAM( , 0x0035, 64) 
U349d: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000028, U2b55) !m1 
U349e: tmp11:= ZEROEXT_DSZ32(0x00000009) 

U34a0: WRITEURAM(tmp11, 0x0073, 32) !m2 SEQW GOTO U6f58
U34a1: tmp1:= SHR_DSZ32(tmp0, 0x00000008) 
U34a2: LFNCEWAIT-> MOVETOCREG_AND_DSZ64(tmp1, 0x0000001f, 0x6a0) !m0,m2 

U34a4: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a4) !m2 
U34a5: NOP 
U34a6: NOP 

U34a8: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 
U34a9: tmp1:= SHR_DSZ32(tmp0, 0x00000010) 
U34aa: tmp0:= SHR_DSZ32(tmp0, 0x00000004) 

U34ac: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U34ad: tmp0:= CONCAT_DSZ32(tmp1, tmp0) 
U34ae: WRITEURAM(tmp0, 0x0022, 64) !m2 

U34b0: tmp0:= READURAM( , 0x0008, 64) 
U34b1: tmp0:= SHR_DSZ32(tmp0, 0x00000010) 
U34b2: tmp0:= unk_13f(tmp0) 

U34b4: tmp1:= READURAM( , 0x0001, 64) 
U34b5: tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp0) 
U34b6: tmp0:= READURAM( , 0x0022, 64) !m2 

U34b8: tmp0:= ZEROEXT_DSZ32(tmp0) 
U34b9: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U06b5) 
U34ba: SYNCFULL-> UFLOWCTRL( , tmp0, MSLOOPCTR) 

U34bc: tmp0:= READURAM( , 0x0008, 64) 
U34bd: tmp7:= READURAM( , 0x0000, 64) 
U34be: tmp0:= unk_13f(tmp0) 

U34c0: tmp0:= MOVEMERGEFLGS_DSZ64(tmp7, tmp0) 
U34c1: tmp7:= READURAM( , 0x0022, 64) !m2 
U34c2: tmp7:= SHR_DSZ64(tmp7, 0x00000020) 

U34c4: NOP 
U34c5: NOP 
U34c6: UJMP( , tmp7) 

U34c8: tmp9:= READURAM( , 0x000f, 64) 
U34c9: LFNCEWAIT-> tmp9:= CONCAT_DSZ32(tmp9, tmp8) 
U34ca: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000b780,  , tmp9) !m2 SEQW SAVEUIP1 U34ccSEQW GOTO U3130

U34cc: tmp12:= ZEROEXT_DSZ32(0x00000001) SEQW GOTO U1b65
U34cd: tmp5:= ZEROEXT_DSZ32(0x00030400) 
U34ce: SYNCFULL-> MOVETOCREG_DSZ64(tmp5, 0x6a1) !m2 

U34d0: tmp6:= ZEROEXT_DSZ32(tmp4) 
U34d1: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 
U34d2: tmp4:= ADD_DSZ64(0x00000008, tmp4) 

U34d4: MOVETOCREG_DSZ64(tmp5, 0x6a4) !m2 
U34d5: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U34d9
U34d6: STADSTGBUF_DSZ64_ASZ16_SC1(tmp3,  , tmp5) 

U34d8: tmp3:= ADD_DSZ32(0x00000020, tmp3) 
U34d9: MOVETOCREG_SHR_DSZ64(tmp5, 0x00000020, 0x6a5) !m2 
U34da: SYNCWAIT-> tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U34d1

U34dc: tmp12:= SUB_DSZ32(0x00000001, tmp0) 
U34dd: SYNCFULL-> UFLOWCTRL( , tmp12, MSLOOPCTR) 
U34de: tmp10:= ZEROEXT_DSZ32(0x00030200) 

U34e0: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x6a1) 
U34e1: tmp9:= SUB_DSZ16(0x00007c00, tmp1) 
U34e2: tmp9:= SHR_DSZ32(tmp9, 0x00000002) 

U34e4: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp9, 0x6a0) 
U34e5: tmp4:= ZEROEXT_DSZ32(tmp6) 
U34e6: tmp7:= ZEROEXT_DSZ32() 

U34e8: tmp1:= ZEROEXT_DSZ32() 
U34e9: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 
U34ea: tmp4:= ADD_DSZ64(0x00000008, tmp4) 

U34ec: tmp5:= SHR_DSZ64(tmp5, 0x00000030) 
U34ed: tmp5:= AND_DSZ32(0x000003ff, tmp5) 
U34ee: tmp5:= SHL_DSZ32(tmp5, tmp7) 

U34f0: tmp1:= OR_DSZ32(tmp5, tmp1) 
U34f1: tmp7:= ADD_DSZ32(0x0000000a, tmp7) 
U34f2: tmp5:= SUB_DSZ32(0x0000001e, tmp7) 

U34f4: tmp0:= MOVEMERGEFLGS_DSZ32(0x000006a4, tmp5) 
U34f5: tmp0:= CMOVCC_DSZ32_CONDZ(tmp0, 0x00000400) 
U34f6: MOVETOCREG_DSZ64(tmp1, tmp0) !m2 

U34f8: tmp7:= SELECTCC_DSZ32_CONDZ(tmp5, tmp7) 
U34f9: tmp1:= SELECTCC_DSZ32_CONDZ(tmp5, tmp1) 
U34fa: SYNCWAIT-> tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U34e9

U34fc: MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 SEQW GOTO U1f9a
U34fd: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x06d) !m0,m2 
U34fe: tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x0000000c, 0x01c) !m2 

U3500: tmp7:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00000004) 
U3501: MOVETOCREG_DSZ64(tmp7, 0x070) !m2 
U3502: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000248, mode=0x01, tmp12) 

U3504: WRITEURAM(tmp2, 0x0046, 64) 
U3505: tmp2:= BT_DSZ32(tmp2, 0x0000001f) 
U3506: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x000) 

U3508: tmp2:= SELECTCC_DSZ64_CONDNB(tmp2, 0x00200000) 
U3509: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp10, 0x000, tmp2) !m2 
U350a: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000500, mode=0x01, tmp12) 

U350c: SYNCWTMRK-> UFLOWCTRL( , tmp2, USTATE) 
U350d: tmp2:= MOVEINSERTFLGS_DSZ32(tmp2, tmp2) 
U350e: tmp10:= READURAM( , 0x0057, 64) 

U3510: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d4, mode=0x01, tmp12) 
U3511: tmp0:= AND_DSZ32(0x00000007, tmp0) 
U3512: tmp15:= READURAM( , 0x001f, 64) !m2 

U3514: tmp15:= NOTAND_DSZ64(0x00000007, tmp15) 
U3515: tmp15:= OR_DSZ64(tmp0, tmp15) 
U3516: WRITEURAM(tmp15, 0x001f, 64) !m2 

U3518: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001cc, mode=0x01, tmp12) SEQW SAVEUIP1 U3519SEQW GOTO U0272
U3519: NOP 
U351a: NOP 

U351c: SYNCWAIT-> TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U3520
U351d: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002a8, mode=0x01, tmp12) 
U351e: WRITEURAM(tmp0, 0x003e, 64) 

U3520: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U3524
U3521: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000308, mode=0x01, tmp12) 
U3522: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000308, tmp10, tmp0) 

U3524: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000250, mode=0x01, tmp12) 
U3525: tmp0:= SELECTCC_DSZ32_CONDNO(tmp2, tmp0) 
U3526: WRITEURAM(tmp0, 0x0009, 64) 

U3528: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000280, mode=0x01, tmp12) 
U3529: tmp1:= SELECTCC_DSZ64_CONDNP(tmp2, tmp1) 
U352a: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000023c, mode=0x01, tmp12) 

U352c: tmp0:= OR_DSZ32(0x00200000, tmp0) 
U352d: tmp15:= SELECTCC_DSZ32_CONDNS(tmp2, 0x00000800) 
U352e: tmp0:= OR_DSZ32(tmp15, tmp0) 

U3530: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x000) SEQW GOTO U4f60
U3531: tmp1:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U3532: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U2769) !m0,m1 

U3534: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3538
U3535: tmp1:= READURAM( , 0x0043, 64) 
U3536: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000034, U2769) !m1 

U3538: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U3539: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U2771) !m0,m1 
U353a: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U353c: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3546
U353d: tmp1:= READURAM( , 0x0057, 64) 
U353e: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000003c8, tmp1) 

U3540: tmp4:= CONCAT_DSZ32(rdx, rax) 
U3541: tmp4:= AND_DSZ64(tmp2, tmp4) 
U3542: tmp4:= AND_DSZ64(tmp4, tmp1) 

U3544: tmp0:= ZEROEXT_DSZ32(0x00000040) 
U3545: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U6399) 
U3546: tmp3:= LEA_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 

U3548: tmp3:= AND_DSZ8(0x0000003f, tmp3) 
U3549: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U2711) 
U354a: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 

U354c: tmp11:= ZEROEXT_DSZ16N(tmp11) !m1 
U354d: tmp2:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000208, mode=0x18) 
U354e: tmp2:= BTR_DSZ64(tmp2, 0x0000003f) 

U3550: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp2, U2711) 
U3551: tmp5:= CONCAT_DSZ32(rdx, rax) 
U3552: tmp5:= AND_DSZ64(tmp5, tmp6) 

U3554: LFNCEMARK-> tmp4:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000200, mode=0x18) 
U3555: tmp7:= SHR_DSZ64(tmp5, 0x00000001) 
U3556: tmp7:= AND_DSZ64(0x0000000c, tmp7) 

U3558: tmp8:= AND_DSZ64(0x00000003, tmp5) 
FUN_ucode_0003559:
U3559: tmp8:= OR_DSZ64(tmp7, tmp8) 
U355a: tmp7:= SHR_DSZ64(tmp4, 0x00000001) 

U355c: tmp7:= AND_DSZ64(0x0000000c, tmp7) 
U355d: tmp13:= AND_DSZ64(0x00000003, tmp4) 
U355e: tmp13:= OR_DSZ64(tmp7, tmp13) 

U3560: tmp13:= SHL_DSZ64(tmp13, 0x00000004) 
U3561: tmp8:= OR_DSZ64(tmp8, tmp13) 
U3562: SYNCMARK-> UFLOWCTRL( , tmp8, USTATE) 

U3564: LFNCEWAIT-> WRITEURAM(tmp8, 0x003f, 64) 
U3565: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x072) !m0 SEQW GOTO U4ca5
U3566: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U3568: tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 
U3569: rax:= ZEROEXT_DSZ32N(tmp0, rax) !m1 
U356a: tmp4:= SUB_DSZN(0x00000001, tmp4) !m1 

U356c: rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 
U356d: MSLOOP-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U0465) SEQW GOTO U3568
U356e: LFNCEMARK-> tmp1:= unk_e6b(tmp0, tmp2) !m1,m2 

U3570: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp1, tmp1) 
U3571: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U0095
U3572: tmp11:= MOVEFROMCREG_DSZ64( , 0x79e) 

U3574: tmp6:= MOVETOCREG_DSZ64(0x00000017, 0x000) !m2 SEQW GOTO U3e56
U3575: rsp:= ZEROEXT_DSZ8N(rsp, tmp5) !m1 
U3576: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U619a) !m1 

U3578: LFNCEWAIT-> STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp8) !m0,m1 
U3579: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, tmp5) !m0,m1 
U357a: rsp:= ADD_DSZN(IMM_MACRO_f3, rsp) !m0,m1 

U357c: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U2e60
U357d: LFNCEMARK-> tmp8:= ZEROEXT_DSZ32N(IMM_MACRO_ALIAS_DATASIZE) !m0,m1 
U357e: tmp8:= SHR_DSZ32(tmp8, 0x00000001) 

U3580: tmp11:= SHL_DSZ32(tmp11, tmp8) 
U3581: rsp:= SUB_DSZN(tmp11, rsp) !m1 
U3582: tmp8:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U3584: WRSEGFLD(tmp8, UNK_SEG_04, SEL+FLGS+LIM) 
U3585: tmp8:= RDSEGFLD(SS_USERM, BASE) 
U3586: WRSEGFLD(tmp8, UNK_SEG_04, BASE) 

U3588: tmp8:= RDSEGFLD(SS, FLGS) 
U3589: LFNCEWAIT-> tmp7:= RDSEGFLD(SS, SEL+FLGS+LIM) 
U358a: WRSEGFLD(tmp7, SS_USERM, SEL+FLGS+LIM) 

U358c: tmp7:= RDSEGFLD(SS, BASE) 
U358d: WRSEGFLD(tmp7, SS_USERM, BASE) 
U358e: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp8, 0x00000005, 0x79e) 

U3590: tmp7:= MOVEFROMCREG_DSZ64( , 0x000) 
U3591: tmp7:= NOTAND_DSZ32(0x00000400, tmp7) 
U3592: tmp7:= MOVETOCREG_BTS_DSZ64(tmp7, 0x00000009, 0x000) 

U3594: tmp8:= ZEROEXT_DSZ32N(IMM_MACRO_ALIAS_DATASIZE) !m0,m1 
U3595: tmp11:= SUB_DSZ32(tmp8, tmp11) 
U3596: tmp1:= unk_b2f(tmp5, tmp11) 

U3598: tmp1:= AND_DSZ32(tmp12, tmp1) 
U3599: LFNCEWAIT-> tmp1:= LDPPHYS_DSZN_ASZ32_SC1(tmp1, mode=0x0a) !m1 
U359a: STAD_DSZN_ASZ32_SC1(rsp, SS, tmp11, mode=0x04, tmp1) !m1 

U359c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp11, U359d) SEQW GOTO U3595
U359d: tmp8:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) 
U359e: WRSEGFLD(tmp8, SS_USERM, SEL+FLGS+LIM) 

U35a0: tmp8:= RDSEGFLD(UNK_SEG_04, BASE) 
U35a1: WRSEGFLD(tmp8, SS_USERM, BASE) 
U35a2: tmp8:= RDSEGFLD(UNK_SEG_04, FLGS) 

U35a4: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp8, 0x00000005, 0x79e) 
exit_probe_mode:
U35a5: tmp7:= OR_DSZ32(0x00000400, tmp7) 
U35a6: NOP 

U35a8: LFNCEWAIT-> tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x00000009, 0x000) SEQW GOTO U2e61
U35a9: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U35aa: tmp10:= ZEROEXT_DSZ32() 

U35ac: tmp2:= ZEROEXT_DSZ32(IMM_MACRO_ALIAS_DATASIZE) !m0 
U35ad: WRITEURAM(tmp10, 0x003e, 64) !m2 
U35ae: tmp15:= OR_DSZ32(tmp2, tmp11) 

U35b0: tmp11:= SUB_DSZ32(0x00000001, tmp15) 
U35b1: tmp15:= SHL_DSZ32(tmp15, 0x00000001) 
U35b2: tmp3:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U35b4: tmp15:= CONCAT_DSZ16(tmp1, tmp15) 
U35b5: WRITEURAM(tmp15, 0x0039, 32) !m2 
U35b6: tmp11:= CONCAT_DSZ16(tmp1, tmp11) 

U35b8: tmp15:= SHL_DSZ64(tmp11, 0x00000020) 
U35b9: WRITEURAM(tmp15, 0x017a, 64) !m2 
U35ba: tmp2:= SUB_DSZ32(tmp2, 0x00000004) 

U35bc: tmp15:= unk_200() 
U35bd: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U35be) SEQW GOTO U35cc
U35be: tmp15:= RDSEGFLD(TSS, FLGS) 

U35c0: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000003, U2711) !m0,m1 
U35c1: tmp12:= unk_da0() 
U35c2: tmp9:= SHR_DSZ32(tmp1, 0x00000003) 

U35c4: tmp15:= AND_DSZ32(0x00000007, tmp1) 
U35c5: tmp10:= SHR_DSZ32(0x0000000f, tmp2) 
U35c6: tmp10:= SHL_DSZ32(tmp10, tmp15) 

U35c8: tmp15:= unk_da0(tmp12, tmp9) 
U35c9: tmp15:= AND_DSZ32(tmp10, tmp15) 
U35ca: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2711) 

U35cc: LFNCEWAIT-> tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 
U35cd: tmp15:= SUB_DSZN(tmp15, IMM_MACRO_ALIAS_RIP) !m0,m1 
U35ce: WRITEURAM(tmp15, 0x006e, 64) !m2 

U35d0: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U35d8
U35d1: tmp4:= ZEROEXT_DSZ32(0x00004f5e) 
U35d2: tmp8:= READURAM( , 0x0015, 64) 

U35d4: tmp9:= READURAM( , 0x0016, 64) 
U35d5: tmp12:= READURAM( , 0x0043, 64) 
U35d6: SAVEUIP_REGOVR(0x01, U35d8, 0x0000) !m0 SEQW GOTO U072d

U35d8: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U35e1
U35d9: tmp12:= READURAM( , 0x0011, 64) 
U35da: tmp4:= ZEROEXT_DSZ32(0x000073ad) 

U35dc: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000018, mode=0x01, tmp12) 
U35dd: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000020, mode=0x01, tmp12) 
U35de: tmp12:= READURAM( , 0x004c, 64) 

U35e0: SYNCWTMRK-> SAVEUIP_REGOVR(0x01, U35e1, 0x0001) !m0 SEQW GOTO U072d
U35e1: WRITEURAM(rdi, 0x000b, 64) !m2 
U35e2: WRITEURAM(rsi, 0x0009, 64) !m2 

U35e4: WRITEURAM(rcx, 0x000a, 64) !m2 
U35e5: NOP 
U35e6: UJMP( , tmp0) 

U35e8: tmp2:= READURAM( , 0x0048, 64) 
U35e9: tmp2:= SUB_DSZ64(0x00020101, tmp2) 
U35ea: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U6995) 

U35ec: LFNCEWAIT->MSSTOP-> unk_256() !m1 SEQW GOTO U2792
U35ed: tmp15:= NOTAND_DSZ64(0x00000040, tmp15) 
U35ee: MOVETOCREG_DSZ64(tmp15, 0x223, 32) !m1 

U35f0: MOVETOCREG_DSZ64( , 0x00000000, 0x28c, 32) !m1 
U35f1: tmp15:= ZEROEXT_DSZ32(0xffffc000) 
U35f2: MOVETOCREG_DSZ64(tmp15, 0x29e, 32) !m1 

U35f4: tmp0:= ZEROEXT_DSZ32(0x00000007) 
U35f5: tmp1:= READURAM( , 0x0053, 64) 
U35f6: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U00a9) 

U35f8: LFNCEMARK-> tmp15:= READURAM( , 0x001f, 64) 
U35f9: tmp15:= BTR_DSZ64(tmp15, 0x00000009) 
U35fa: WRITEURAM(tmp15, 0x001f, 64) !m2 

U35fc: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00000200) 
U35fd: MOVETOCREG_DSZ64(tmp15, 0x007) !m2 
U35fe: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 

U3600: tmp15:= AND_DSZ32(0x0000003f, tmp15) 
U3601: LFNCEWAIT-> tmp15:= SUB_DSZ32(0x00000002, tmp15) 
U3602: tmp11:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00000001) 

U3604: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U3605) SEQW SAVEUIP1 U3605SEQW GOTO U3135
U3605: tmp15:= MOVEFROMCREG_DSZ64( , 0x693) 
U3606: tmp15:= AND_DSZ32(0x0000000f, tmp15) 

U3608: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U33be) 
U3609: tmp15:= MOVEFROMCREG_DSZ64( , 0x387, 32) !m1 
U360a: tmp15:= AND_DSZ32(0x00000010, tmp15) 

U360c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U33be) 
U360d: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U360e: BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x0000000a, U33c0) !m0,m1,m2 

U3610: tmp15:= MOVEFROMCREG_DSZ64( , 0x004) 
U3611: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000007, U33c0) !m0,m1,m2 
U3612: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x00b) !m0,m2 

U3614: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U3615: tmp9:= AND_DSZ32(0x00000200, tmp6) 
U3616: tmp9:= SHL_DSZ32(tmp9, 0x00000007) SEQW SAVEUIP1 U3618SEQW GOTO U3130

U3618: SAVEUIP_REGOVR(0x01, U3619, 0x0001) !m0 SEQW GOTO U02ba
U3619: tmp1:= BTS_DSZ32(0x00000000, 0x0000001f) 
U361a: PORTOUT_DSZ32_ASZ16_SC1(0x003c,  , tmp1) !m2 

U361c: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
U361d: tmp5:= ZEROEXT_DSZ32(0x00003620) 
U361e: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4840

U3620: MOVETOCREG_DSZ64(tmp11, 0x6c5) 
U3621: tmp0:= READURAM( , 0x001f, 64) 
U3622: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000002f, U2e05) !m0,m1 

U3624: MOVETOCREG_DSZ64( , 0x00000000, 0x065) !m2 
U3625: tmp1:= READURAM( , 0x0023, 64) 
U3626: tmp1:= BT_DSZ64(tmp1, 0x00000009) 

U3628: tmp1:= SELECTCC_DSZ64_CONDNB(tmp1, 0x00000200) 
U3629: MOVETOCREG_DSZ64(tmp1, 0x29f, 32) !m1,m2 
U362a: tmp15:= MOVEFROMCREG_DSZ64( , 0x7e1) 

U362c: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U5a45) !m2 
U362d: tmp15:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U362e: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000009, U3630) !m1,m2 SEQW GOTO U626a

U3630: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp15, 0x00000005, 0x2df) !m1,m2 
U3631: tmp0:= ZEROEXT_DSZ16(0x00006269) 
U3632: NOP 

U3634: LFNCEWAIT-> tmp0:= CONCAT_DSZ16(0x00000086, tmp0) SEQW GOTO U3b59
U3635: tmp3:= READURAM( , 0x001f, 64) 
U3636: tmp3:= NOTAND_DSZ32(0x00000007, tmp3) 

U3638: WRITEURAM(tmp3, 0x001f, 32) !m2 
U3639: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp5, 0x00b) 
U363a: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3641

U363c: WRITEURAM(tmp1, 0x0046, 64) 
U363d: MOVETOCREG_BTS_DSZ64( , 0x00000015, 0x072) 
U363e: tmp6:= CONCAT_DSZ32(tmp9, tmp12) 

U3640: WRITEURAM(tmp6, 0x0009, 64) 
U3641: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U3642: MOVETOCREG_OR_DSZ64( , 0x0000000c, 0x005) 

U3644: tmp2:= SHL_DSZ32(tmp2, 0x00000002) 
U3645: tmp6:= ZEROEXT_DSZ32(0x00050300) 
U3646: LFNCEWAIT-> tmp0:= LDPPHYS_DSZ32_ASZ32_SC1(tmp2, mode=0x0e) 

U3648: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U364e
U3649: tmp2:= MOVEFROMCREG_DSZ64( , 0x01d) 
U364a: tmp2:= AND_DSZ32(0x00000008, tmp2) 

U364c: tmp2:= SHL_DSZ32(tmp2, 0x00000005) 
U364d: MOVETOCREG_DSZ64(tmp2, 0x070) 
U364e: tmp11:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

U3650: tmp11:= ADD_DSZN(tmp11, tmp4) !m1 
U3651: tmp3:= MOVEFROMCREG_DSZ64( , 0x000) !m2 
U3652: tmp3:= BT_DSZ32(tmp3, 0x00000018) 

U3654: tmp2:= READURAM( , 0x004a, 64) 
U3655: tmp2:= MOVEMERGEFLGS_DSZ64(tmp2, tmp3) 
U3656: tmp11:= CMOVCC_DSZ64_CONDB(tmp2, tmp11) 

U3658: MOVETOCREG_DSZ64(tmp11, 0x71a) 
U3659: tmp2:= SHR_DSZ32(tmp0, 0x00000010) 
U365a: tmp3:= ZEROEXT_DSZ16(tmp0) 

U365c: tmp0:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U365d: tmp7:= SHR_DSZ64(tmp0, 0x0000002f) 
U365e: tmp0:= SHL_DSZ32(tmp0, 0x00000008) 

U3660: tmp0:= AND_DSZ32(tmp7, tmp0) 
U3661: tmp0:= AND_DSZ32(0x00000008, tmp0) 
U3662: tmp6:= NOTAND_DSZ32(tmp0, tmp6) 

U3664: tmp0:= NOTAND_DSZ32(tmp6, tmp10) 
U3665: unk_13f(tmp0) !m2 
U3666: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x7fe) 

U3668: LFNCEMARK-> unk_e7b( , tmp2) 
U3669: NOP SEQW SAVEUIP1 U366aSEQW GOTO U2e30
U366a: unk_fe3(tmp3) 

U366c: tmp0:= RDSEGFLD(CS, SEL) 
U366d: STAD_DSZ16_ASZ32_SC1(rsp, SS,  , 0xfffffffffffffffe, mode=0x0a, tmp9) 
U366e: STAD_DSZ16_ASZ32_SC1(rsp, SS,  , 0xfffffffffffffffc, mode=0x0a, tmp0) 

U3670: STAD_DSZ16_ASZ32_SC1(rsp, SS,  , 0xfffffffffffffffa, mode=0x0a, tmp4) 
U3671: rsp:= ADD_DSZN(0xfffffffffffffffa, rsp) !m1 
U3672: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U3676

U3674: tmp12:= READURAM( , 0x0011, 64) 
U3675: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004a8, mode=0x01, tmp12, 0x00000000) 
U3676: tmp0:= READURAM( , 0x0070, 64) 

U3678: tmp0:= BTR_DSZ64(tmp0, 0x0000002e) 
U3679: WRITEURAM(tmp0, 0x0170, 64) !m2 
U367a: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x008) !m2 

U367c: LFNCEWTMRK-> FETCHFROMEIP1_ASZ32( , tmp3) 
U367d: NOP 
U367e: NOP 

U3680: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
U3681: AETTRACE( , tmp11, 0x0c) 
U3682: tmp0:= RDSEGFLD(UNK_SEG_09, BASE) 

U3684: LFNCEWAIT-> WRSEGFLD(tmp0, CS, BASE) 
U3685: tmp0:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U3686: WRSEGFLD(tmp0, CS, SEL+FLGS+LIM) SEQW GOTO U2790

U3688: tmp8:= ZEROEXT_DSZ32(0x80000301) 
U3689: tmp5:= ZEROEXT_DSZ32(0x0000368c) 
U368a: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4841

U368c: tmp14:= SAVEUIP(0x01, U5b94) !m0 SEQW GOTO U1ece
U368d: LFNCEMARK-> tmm7:= unk_698( , xmm0) 
U368e: tmp0:= MOVEFROMCREG_DSZ64( , 0x01b) 

U3690: tmp6:= SHR_DSZ64(tmp0, 0x00000016) 
U3691: tmp11:= SHR_DSZ32(tmp4, 0x00000012) 
U3692: MOVETOCREG_DSZ64( , 0x00000000, 0x48f) !m2 

U3694: tmp6:= AND_DSZ32(0x00001000, tmp6) 
U3695: tmp7:= AND_DSZ32(0x00002000, tmp5) 
U3696: tmp12:= AND_DSZ32(0x00000007, tmp11) 

U3698: tmp12:= SUB_DSZ32(0x00000003, tmp12) 
U3699: tmp12:= MOVEMERGEFLGS_DSZ32(0x0000000d, tmp12) 
U369a: tmp12:= CMOVCC_DSZ32_CONDNL(tmp12, 0x00000008) 

U369c: tmp12:= SHL_DSZ64(tmp12, 0x0000000b) 
U369d: tmp11:= OR_DSZ32(tmp6, tmp11) 
U369e: tmp8:= ZEROEXT_DSZ32(0x00000005) 

U36a0: tmp11:= OR_DSZ32(tmp7, tmp11) 
U36a1: LFNCEWAIT-> tmm5:= unk_704(tmm0) 
U36a2: tmm2:= unk_704(tmm3) 

U36a4: tmm5:= unk_694(tmm5, tmm2) 
U36a5: tmp15:= MOVEFROMCREG_DSZ64( , 0x480) 
U36a6: tmp3:= PINTMOVDTMM2I_DSZ32(tmm5) 

U36a8: tmp9:= ZEROEXT_DSZ64() 
U36a9: tmp6:= AND_DSZ32(0x00000003, tmp3) 
U36aa: tmp6:= SHL_DSZ64(tmp6, 0x00000023) 

U36ac: tmp7:= BT_DSZ32(tmp3, 0x00000007) 
U36ad: tmp5:= NOTAND_DSZ32(0x00002000, tmp5) 
U36ae: tmp0:= MOVEMERGEFLGS_DSZ64(tmp0, tmp7) 

U36b0: tmp7:= CMOVCC_DSZ32_CONDNB(tmp0, tmp5) 
U36b1: tmp7:= NOTAND_DSZ64(0x00007800, tmp7) 
U36b2: tmp7:= OR_DSZ64(tmp7, tmp12) 

U36b4: MOVETOCREG_OR_DSZ64(tmp7, 0x752, tmp6) 
U36b5: MOVETOCREG_AND_DSZ64(tmp3, 0x0000000c, 0x6c5) 
U36b6: tmm5:= unk_620(tmm2) 

U36b8: tmp5:= PINTMOVDTMM2I_DSZ32(tmm5) 
U36b9: SYNCMARK-> UFLOWCTRL( , tmp5, URET0) 
U36ba: tmp11:= AND_DSZ32(0x00000020, tmp4) 

U36bc: tmp6:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U36bd: tmp7:= AND_DSZ32(0x00000007, tmp4) 
U36be: tmp4:= AND_DSZ32(0x0000003f, tmp4) 

U36c0: tmp10:= NOTAND_DSZ32(0x0000003f, tmp15) 
U36c1: MOVETOCREG_BTR_DSZ64(tmp6, 0x00000010, 0x7fe) 
U36c2: SYNCWAIT-> tmp10:= OR_DSZ32(tmp7, tmp10) SEQW URET0

U36c4: NOP 
U36c5: WRITEURAM(tmp0, 0x0000, 64) !m2 
U36c6: tmp0:= READAFLAGS(tmp0) 

U36c8: tmp0:= CONCAT_DSZ16(0x00000011, tmp0) SEQW GOTO U5255
U36c9: tmp8:= MOVEFROMCREG_DSZ64( , 0x51b) 
U36ca: tmp8:= ZEROEXT_DSZ16(0x00000120, tmp8) 

U36cc: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, mode=0x01) 
U36cd: tmp8:= ZEROEXT_DSZ16(0x00000118, tmp8) 
U36ce: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, mode=0x01) 

U36d0: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000a0) 
U36d1: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000080) 
U36d2: tmp7:= BTR_DSZ64(tmp9, 0x0000000b) 

U36d4: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp7, U2742) 
U36d5: tmp0:= ZEROEXT_DSZ32(0x0000000e) 
U36d6: CMPUJNZ_DIRECT_NOTTAKEN(tmp7, U290c, tmp1) !m1 

U36d8: tmp0:= ZEROEXT_DSZ32(0x0000000f) 
U36d9: SYNCFULL-> CMPUJNZ_DIRECT_NOTTAKEN(tmp8, U290c, tmp2) !m1 
U36da: tmp8:= NOTAND_DSZ64(0x00000007, tmp8) 

U36dc: MOVETOCREG_DSZ64(tmp8, 0x574) 
U36dd: MOVETOCREG_DSZ64(tmp9, 0x575) 
U36de: tmp2:= AND_DSZ64(tmp9, tmp8) 

U36e0: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000a0,  , tmp9) 
U36e1: tmp8:= MOVEFROMCREG_DSZ64( , 0x51b) 
U36e2: tmp8:= ZEROEXT_DSZ16(0x00000130, tmp8) 

U36e4: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, mode=0x01) 
U36e5: tmp8:= ZEROEXT_DSZ16(0x00000128, tmp8) 
U36e6: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, mode=0x01) 

U36e8: tmp0:= ZEROEXT_DSZ32(0x00000010) 
U36e9: tmp1:= AND_DSZ64(tmp7, tmp8) 
U36ea: tmp1:= AND_DSZ64(tmp9, tmp1) 

U36ec: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, U290c, tmp2) !m1 
U36ed: tmp1:= XOR_DSZ64(0xffffffffffffffff, tmp7) 
U36ee: tmp1:= OR_DSZ64(tmp1, tmp8) 

U36f0: tmp1:= AND_DSZ64(tmp9, tmp1) 
U36f1: SYNCFULL-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, U290c, tmp2) !m1 
U36f2: MOVETOCREG_DSZ64(tmp8, 0x562) 

U36f4: MOVETOCREG_DSZ64(tmp7, 0x563) SEQW SAVEUIP1 U36f5SEQW GOTO U0164
U36f5: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000c0,  , tmp8) 
U36f6: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000e0,  , tmp7) 

U36f8: PORTOUT_DSZ64_ASZ16_SC1(0x0010,  , tmp8) !m2 
U36f9: tmp0:= ZEROEXT_DSZ32(0x00000004) SEQW SAVEUIP0 U36faSEQW GOTO U60e5
U36fa: tmp0:= MOVEFROMCREG_DSZ64( , 0x563) 

U36fc: PORTOUT_DSZ64_ASZ16_SC1(0x0010,  , tmp0) !m2 
U36fd: tmp0:= ZEROEXT_DSZ32(0x00000005) 
U36fe: SAVEUIP( , 0x00, U19a6) SEQW GOTO U60e5

U3700: SAVEUIP( , 0x00, U189a) 
U3701: SYNCWAIT-> TESTUSTATE( , UCODE, !0x00e4) !m0 ? SEQW URET1
U3702: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U5fa8

U3704: tmp1:= OR_DSZ32(0x00008000, tmp8) 
U3705: tmp1:= MSR2CR( , tmp1) 
U3706: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U3709

U3708: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp3, U2711, tmp1) !m1 
U3709: TESTUSTATE( , UCODE, !0x0040) !m0 ? SEQW GOTO U3710
U370a: tmp1:= MOVEFROMCREG_DSZ64( , 0x7e1) 

U370c: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U1db2) !m2 
U370d: TESTUSTATE( , UCODE, !0x0080) !m0 ? SEQW GOTO U2711
U370e: NOP 

U3710: SYNCWAIT-> TESTUSTATE( , UCODE, !0x0080) !m0 ? SEQW URET1
U3711: tmp1:= NOTAND_DSZ32(0x00000001, tmp8) 
U3712: tmp1:= SELECTCC_DSZ32_CONDB(tmp8, tmp1) 

U3714: tmp1:= SUB_DSZ32(0x00000300, tmp1) SEQW GOTO U0109
U3715: NOP 
U3716: NOP 

U3718: SYNCWAIT-> tmp5:= TESTUSTATE( , UCODE, !0x0200) !m0 ? SEQW URET1
U3719: NOP SEQW GOTO U189a
FUN_ucode_000371a:
U371a: PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , 0x00000000) !m2 

U371c: BTUJB_DIRECT_NOTTAKEN(tmp8, 0x0000001c, U0041) SEQW GOTO U7836
U371d: NOP 
U371e: NOP 

U3720: tmp1:= READURAM( , 0x005c, 64) 
U3721: SYNCMARK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000001d, U4f51) SEQW GOTO U3700
U3722: tmpv1:= ZEROEXT_DSZ32(0x00000502) 

U3724: tmpv1:= BTS_DSZ32(tmpv1, 0x00000010) SEQW GOTO U1a00
U3725: NOP 
U3726: NOP 

U3728: tmp14:= MOVEFROMCREG_DSZ64( , 0x402) 
U3729: tmp14:= AND_DSZ32(0x000003b0, tmp14) 
U372a: tmp14:= SHR_DSZ32(tmp14, 0x00000004) 

U372c: tmp14:= MOVEINSERTFLGS_DSZ32(tmp14, tmp14) 
U372d: tmp10:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U372e: tmp1:= SHR_DSZ64(tmp3, 0x00000021) SEQW GOTO U4074

U3730: TESTUSTATE( , VMX, !0x0004) !m0,m2 ? SEQW GOTO U100d
U3731: tmp1:= MOVEFROMCREG_DSZ64( , 0x7bb) 
U3732: SYNCWAIT-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 SEQW URET1

U3734: tmp1:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U5f96
U3735: NOP 
U3736: NOP 

U3738: TESTUSTATE( , VMX, 0x0004) !m2 ? SEQW GOTO U3731
U3739: LFNCEMARK-> tmp1:= MOVEFROMCREG_DSZ64( , 0x513) 
U373a: tmp2:= ZEROEXT_DSZ32(0x000000ff) 

U373c: tmp2:= CONCAT_DSZ32(tmp2, 0xfffffffffffff000) 
U373d: tmp1:= AND_DSZ64(tmp2, tmp1) 
U373e: tmp2:= SUB_DSZ32(0x00000800, tmp8) SEQW GOTO U5d1a

U3740: tmp5:= MOVEFROMCREG_DSZ64( , tmp10) SEQW GOTO U3700
U3741: LFNCEWAIT-> tmp0:= READURAM( , 0x0021, 64) 
U3742: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U3745) !m1,m2 

U3744: tmp1:= BTS_DSZ32(tmp1, 0x0000001e) 
U3745: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U31c1) !m1,m2 
U3746: tmp0:= ZEROEXT_DSZ32(0x0000005f) SEQW GOTO U31c2

U3748: tmp5:= MOVEFROMCREG_DSZ64( , tmp10) !m1 SEQW GOTO U3700
U3749: tmp0:= OR_DSZ16(0x00008080, tmp8) 
U374a: LFNCEMARK-> MOVETOCREG_BTR_DSZ64(tmp0, 0x00000009, 0x48c) 

U374c: LFNCEWAIT-> NOP SEQW UEND1
U374d: tmp7:= MOVE_DSZ32() 
U374e: tmp9:= ZEROEXT_DSZ32(tmp10) SEQW GOTO U0dc6

U3750: SYNCWAIT-> tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 SEQW GOTO U3700
U3751: NOP 
U3752: tmp12:= READURAM( , 0x0011, 64) 

U3754: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000308, mode=0x01, tmp12, tmp2) SEQW GOTO U73ae
U3755: NOP 
U3756: NOP 

U3758: tmp5:= unk_f75( , tmp2) !m2 SEQW GOTO U3700
U3759: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp1, mode=0x01, tmp2) 
U375a: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp8, U5efc) 

U375c: LFNCEWAIT-> unk_256() SEQW GOTO U189c
U375d: NOP 
U375e: NOP 

U3760: SYNCWAIT-> TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW URET1
U3761: rbx:= ZEROEXT_DSZ32(tmp12) SEQW GOTO U1db2
U3762: CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000004, U5a92) !m2 

U3764: CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000008, U5aa2) !m2 SEQW GOTO U1bd0
U3765: NOP 
U3766: NOP 

U3768: SYNCWAIT-> TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW URET1
U3769: rbx:= PORTIN_DSZ32_ASZ16_SC1(0x0078) !m1,m2 SEQW GOTO U1db2
U376a: rdx:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 

U376c: rbx:= ZEROEXT_DSZ32(tmp14) SEQW GOTO U1bd0
U376d: NOP 
U376e: NOP 

U3770: tmp5:= READURAM( , tmp10) SEQW GOTO U3700
U3771: tmp5:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U3772: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp5, 0x00000010, 0x7fe) !m2 

U3774: LFNCEWAIT-> unk_256() !m1 SEQW UEND0
U3775: SAVEUIP( , 0x01, U1a12) !m0 
U3776: tmpv0:= SAVEUIP(tmp5, 0x00, U3a34) SEQW GOTO U334d

U3778: SYNCWAIT-> tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 SEQW GOTO U3720
U3779: NOP 
U377a: tmp0:= OR_DSZ64(rdx) 

U377c: SAVEUIP_REGOVR(0x01, U377d, 0x0000) !m0 SEQW GOTO U334d
U377d: NOP 
U377e: NOP 

U3780: SAVEUIP( , 0x00, U6380) 
U3781: TESTUSTATE( , UCODE, 0x000c) ? SEQW GOTO U3701
U3782: SYNCWAIT-> tmp12:= ZEROEXT_DSZ32N(tmp12) !m1 

U3784: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U3786
U3785: tmp12:= PORTIN_DSZ32_ASZ16_SC1(0x0078) !m1,m2 
U3786: tmp1:= NOTAND_DSZ64(tmp12, tmp5) 

U3788: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U0009) SEQW GOTO U3701
U3789: NOP 
U378a: tmp3:= AND_DSZ16(tmp2, 0x00000001) 

U378c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1a50) SEQW GOTO U1431
U378d: NOP 
U378e: NOP 

U3790: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U3780
U3791: unk_dff() 
U3792: MOVETOCREG_OR_DSZ64( , 0x00000008, 0x63a) 

U3794: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x63e) !m0 
U3795: tmp1:= READURAM( , 0x005c, 64) 
U3796: tmp1:= BTS_DSZ64(tmp1, 0x0000002b) SEQW GOTO U033d

U3798: tmp1:= SUB_DSZ32(0x00000186, tmp8) 
U3799: tmp1:= SUB_DSZ32(0x00000003, tmp1) 
U379a: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp1, U24f9) SEQW GOTO U24fa

U379c: tmp1:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U616c
U379d: NOP 
U379e: NOP 

U37a0: tmp1:= READURAM( , 0x005c, 64) 
U37a1: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000001f, U4f51) !m0 SEQW GOTO U3780
U37a2: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x005) !m0 

U37a4: unk_eff() SEQW GOTO U23f9
U37a5: NOP 
U37a6: NOP 

U37a8: LFNCEMARK-> unk_25c(tmp5, tmp5) SEQW GOTO U3780
U37a9: NOP 
U37aa: tmp12:= unk_6a0() 

U37ac: tmm0:= unk_495(tmm0, tmm4) SEQW GOTO U1432
U37ad: NOP 
U37ae: NOP 

U37b0: tmp1:= MOVEFROMCREG_DSZ64( , 0x7bb) 
U37b1: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 SEQW GOTO U3780
U37b2: MOVETOCREG_OR_DSZ64( , 0x0000000c, 0x005) 

U37b4: SAVEUIP( , 0x01, U38b9) !m0 SEQW GOTO U0a95
U37b5: NOP 
U37b6: NOP 

U37b8: tmp2:= SAVEUIP( , 0x00, U3780) 
U37b9: tmp1:= READURAM( , 0x0010, 64) 
U37ba: tmp1:= NOTAND_DSZ64(0xffffffff, tmp1) 

U37bc: tmp1:= NOTAND_DSZ64(tmp2, tmp1) 
U37bd: tmp1:= AND_DSZ64(tmp5, tmp1) 
U37be: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) SEQW URET0

U37c0: tmp1:= SHL_DSZ64(tmp5, 0x00000001) 
U37c1: tmp1:= SAR_DSZ64(tmp1, 0x00000001) 
U37c2: LFNCEMARK-> unk_25c(tmp1, tmp1) 

U37c4: tmp2:= SHR_DSZ64(tmp5, 0x00000020) 
U37c5: tmp1:= AND_DSZ32(0x80000000, tmp2) 
U37c6: tmp2:= AND_DSZ32(0x0000ffff, tmp2) SEQW GOTO U0474

U37c8: tmp1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U37c9: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000f, U6380) !m0,m1 SEQW GOTO U3780
U37ca: tmm7:= unk_5ba(tmm7, tmm7) 

U37cc: tmm4:= unk_5ba(tmm4, tmm4) SEQW GOTO U2bde
U37cd: NOP 
U37ce: NOP 

U37d0: tmp2:= SAVEUIP( , 0x00, U3790) SEQW GOTO U37b9
U37d1: tmp0:= OR_DSZ16(0x00008080, tmp8) 
U37d2: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x48c) 

U37d4: LFNCEWAIT-> mm0:= unk_53f(0x00000000) SEQW GOTO U1bd0
U37d5: NOP 
U37d6: NOP 

U37d8: tmp2:= ZEROEXT_DSZ32(0x0000000f) 
U37d9: tmp2:= SHL_DSZ64(tmp2, 0x00000020) 
U37da: SAVEUIP( , 0x00, U3790) SEQW GOTO U37b9

U37dc: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000015, 0x06d) SEQW GOTO U6a39
U37dd: NOP 
U37de: NOP 

U37e0: tmp1:= READURAM( , 0x0023, 64) 
U37e1: tmp1:= AND_DSZ32(0x00004000, tmp1) 
U37e2: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U3780

U37e4: tmp1:= SELECTCC_DSZ64_CONDNZ(tmp1, tmp5) 
U37e5: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U2711) !m1 SEQW GOTO U3780
U37e6: NOP 

U37e8: SAVEUIP( , 0x00, U6380) 
U37e9: tmp1:= NOTAND_DSZ64(0x40007fff, tmp5) 
U37ea: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U0009) 

U37ec: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x0008) !m2 
U37ed: tmp1:= AND_DSZ32(0x00000010, tmp1) 
U37ee: SYNCWAIT-> tmp5:= SELECTCC_DSZ32_CONDNZ(tmp1, tmp5) SEQW URET1

U37f0: tmp1:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U37f1: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 SEQW GOTO U3780
U37f2: tmp13:= MOVEFROMCREG_DSZ64( , 0x000) 

U37f4: tmp15:= SHR_DSZ32(tmp13, 0x00000006) 
U37f5: tmp13:= MOVEINSERTFLGS_DSZ64(tmp15, tmp13) 
U37f6: tmp15:= AND_DSZ32(0x0000003f, tmp13) 

U37f8: tmp15:= SHL_DSZ32(tmp15, 0x00000003) 
U37f9: tmp15:= ADD_DSZ32(0x00002300, tmp15) 
switchD:
U37fa: UJMP( , tmp15) 

U37fc: tmp8:= ZEROEXT_DSZ32(0x80000301) 
U37fd: tmp5:= ZEROEXT_DSZ32(0x00003800) 
U37fe: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4841

U3800: tmp14:= SAVEUIP(0x01, U067c) !m0 SEQW GOTO U1df5
U3801: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U3802: LFNCEWAIT-> tmp9:= READURAM( , 0x0057, 64) 

U3804: tmp5:= LDPPHYSTICKLE_DSZN_ASZ64_SC1(0x000000d8, tmp9) !m1 
U3805: LFNCEMARK-> tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b8, tmp9) 
U3806: tmp4:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U3808: SYNCMARK-> FETCHFROMEIP1_ASZ64( , tmp5) !m1 
U3809: tmp15:= READURAM( , 0x0010, 64) 
U380a: tmp6:= NOTAND_DSZ64(tmp15, tmp6) 

U380c: MOVETOCREG_DSZ64(tmp5, 0x067) 
U380d: AETTRACE( , tmp5, 0x0d) !m1 
U380e: tmp7:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U3822

U3810: tmp1:= READURAM( , 0x004c, 64) 
U3811: tmp2:= AND_DSZ32(0x08000000, tmp1) 
U3812: tmp7:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000008) 

U3814: tmp15:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000100) 
U3815: MOVETOCREG_DSZ64(tmp15, 0x070) 
U3816: tmp2:= AND_DSZ32(0x00400000, tmp1) 

U3818: tmp2:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000004) 
U3819: tmp7:= OR_DSZ32(tmp2, tmp7) 
U381a: tmp2:= AND_DSZ32(0x00000004, tmp1) 

U381c: tmp2:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000002) 
U381d: tmp7:= OR_DSZ32(tmp2, tmp7) 
U381e: tmp2:= BT_DSZ64(tmp1, 0x00000037) 

U3820: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000001) 
U3821: tmp7:= OR_DSZ32(tmp2, tmp7) 
U3822: WRITEURAM( , 0x00000000, 0x0043, 64) 

U3824: WRITEURAM(tmp9, 0x0056, 64) 
U3825: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x2f2) !m1 
U3826: MOVETOCREG_OR_DSZ64( , 0x00000004, 0x29e) !m1 

U3828: WRITEURAM(tmp6, 0x0057, 64) 
U3829: tmp2:= READURAM( , 0x0070, 64) 
U382a: tmp15:= AND_DSZ32(0x00004000, tmp0) 

U382c: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000200) 
U382d: tmp1:= AND_DSZ32(0x00008000, tmp0) 
U382e: tmp1:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000400) 

U3830: tmp2:= OR_DSZ32(0x00001004, tmp2) 
U3831: tmp15:= OR_DSZ32(tmp1, tmp15) 
U3832: tmp2:= MOVETOCREG_OR_DSZ64(tmp2, 0x2c4, tmp15) !m1 

U3834: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U383c
U3835: SYNCWAIT-> tmp1:= READURAM( , 0x0011, 64) 
U3836: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 

U3838: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004a8, mode=0x01, tmp1, 0x00000000) 
U3839: NOP 
U383a: NOP 

U383c: SYNCMARK-> MOVETOCREG_DSZ64(tmp7, 0x01d) 
U383d: WRITEURAM(tmp2, 0x0070, 32) 
U383e: tmp2:= READURAM( , 0x001f, 64) 

U3840: tmp1:= AND_DSZ32(0x00040000, tmp0) 
U3841: tmp1:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000100) 
U3842: tmp2:= AND_DSZ32(0x00000100, tmp2) 

U3844: tmp2:= OR_DSZ32(tmp1, tmp2) 
U3845: WRITEURAM(tmp2, 0x001f, 64) 
U3846: tmp2:= CONCAT_DSZ32(0x7ffffc00) 

U3848: SAVEUIP_REGOVR(0x01, U3849, 0x0f21) !m0 SEQW GOTO U0bfc
U3849: NOP 
U384a: NOP 

U384c: SYNCWAIT-> BTUJB_DIRECT_NOTTAKEN(tmp4, 0x0000003a, U1912) !m0,m2 SEQW GOTO U008e
U384d: tmp0:= ZEROEXT_DSZ32(0x00000009) 
U384e: tmp0:= BTS_DSZ32(tmp0, 0x00000010) 

U3850: tmp1:= ZEROEXT_DSZ32() 
U3851: tmp2:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
U3852: SYNCFULL-> MOVETOCREG_BTR_DSZ64(tmp2, 0x00000012, 0x2cd) !m0,m1 SEQW SAVEUIP1 U3854SEQW GOTO U5814

U3854: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U3855: MOVETOCREG_DSZ64( , 0x00000000, 0x7e1) 
U3856: tmp3:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U3858: MOVETOCREG_BTS_DSZ64(tmp3, 0x00000004, 0x6c3) 
U3859: tmp3:= BTS_DSZ32(0x00000000, 0x0000001b) 
U385a: PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , tmp3) !m2 

U385c: MOVETOCREG_DSZ64(0x00000000, 0x000) 
FUN_ucode_000385d:
U385d: SYNCFULL-> NOP 
U385e: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U386e

U3860: TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW GOTO U1d45
U3861: tmp3:= READURAM( , 0x005c, 64) 
U3862: tmp2:= SHR_DSZ32(tmp3, 0x0000001b) 

U3864: LFNCEMARK-> tmp2:= MOVETOCREG_AND_DSZ64(tmp2, 0x00000003, 0x7c6) !m0 
U3865: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000002, U3869) !m0,m1,m2 
U3866: tmp2:= READURAM( , 0x0011, 64) 

U3868: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp2) 
U3869: tmp3:= AND_DSZ32(0x00000014, tmp3) 
U386a: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U386e) 

U386c: SAVEUIP( , 0x00, U5f1e) 
U386d: SAVEUIP_REGOVR(0x01, U386e, 0x0012) !m0 SEQW GOTO U5a25
U386e: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 

U3870: tmp7:= READURAM( , 0x0026, 64) 
U3871: MOVETOCREG_SHR_DSZ64(tmp7, 0x00000008, 0x01d) 
U3872: tmp1:= MOVEFROMCREG_DSZ64( , 0x51e) 

U3874: tmp0:= SHR_DSZ32(tmp7, 0x0000000f) 
U3875: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U3876: MOVETOCREG_OR_DSZ64(tmp1, 0x51e, tmp0) 

U3878: LFNCEWAIT-> tmp1:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U3879: tmp1:= AND_DSZ32(0x00000024, tmp1) 
U387a: tmp0:= SHR_DSZ32(tmp7, 0x00000010) 

U387c: tmp0:= NOTAND_DSZ32(0x00000024, tmp0) 
U387d: MOVETOCREG_OR_DSZ64(tmp0, 0x6c3, tmp1) 
U387e: tmp1:= ZEROEXT_DSZ32(0x00000002) 

U3880: MOVETOCREG_DSZ64(tmp1, 0x2f2, 32) !m1 
FUN_ucode_0003881:
U3881: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x6c5) 
U3882: tmp0:= READURAM( , 0x006d, 64) 

U3884: MOVETOCREG_DSZ64(tmp0, 0x7f1) 
U3885: tmp0:= READURAM( , 0x006f, 64) 
U3886: MOVETOCREG_DSZ64(tmp0, 0x20f, 32) !m1 

U3888: rax:= READURAM( , 0x0068, 64) 
U3889: rdx:= READURAM( , 0x0063, 64) 
U388a: rcx:= MOVEFROMCREG_DSZ64( , 0x2c0, 32) !m1 

U388c: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U388d: tmp0:= AND_DSZ64(0xffffffffffffff01, tmp2) 
U388e: MOVETOCREG_DSZ64(tmp0, 0x2df, 32) !m1 

U3890: tmp0:= READURAM( , 0x0038, 64) 
U3891: MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1 
U3892: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000018, 0x2da) !m1 

U3894: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x008) 
U3895: WRITEURAM(tmp0, 0x0070, 64) 
U3896: tmp1:= READURAM( , 0x006d, 64) 

U3898: MOVETOCREG_SHR_DSZ64(tmp1, 0x00000020, 0x065) 
U3899: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000008, 0x0b5) 
U389a: tmp6:= SAVEUIP_REGOVR( , 0x01, U389c, 0x6210) !m0 SEQW GOTO U5eaa

U389c: tmp1:= READURAM( , 0x0067, 64) 
U389d: tmp0:= READURAM( , 0x0050, 64) 
U389e: tmp0:= SHR_DSZ32(tmp0, 0x00000010) 

U38a0: tmp0:= SUB_DSZ32(0x00000083, tmp0) 
U38a1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U38a4) 
U38a2: AETTRACE( , tmp1, 0x0e) 

U38a4: SYNCFULL-> MOVETOCREG_DSZ64(tmp1, 0x01a) !m2 
U38a5: tmp0:= READURAM( , 0x002a, 64) 
U38a6: MOVETOCREG_DSZ64(tmp0, 0x070) !m2 

U38a8: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x01c) !m2 
U38a9: NOP SEQW SAVEUIP1 U38aaSEQW GOTO U141a
U38aa: tmp2:= READURAM( , 0x0050, 64) 

U38ac: WRITEURAM(tmp2, 0x0007, 32) !m2 
U38ad: tmp6:= READURAM( , 0x0026, 64) 
U38ae: tmp6:= SHR_DSZ64(tmp6, 0x00000020) 

U38b0: tmp2:= BT_DSZ32(tmp2, 0x00000017) 
U38b1: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp2, tmp2) 
FUN_ucode_00038b2:
U38b2: tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 

U38b4: LFNCEMARK-> WRITEURAM( , 0x00000000, 0x0007, 32) !m2 
U38b5: NOP 
U38b6: NOP 

U38b8: LFNCEWAIT->MSLOOP-> FETCHFROMEIP0_ASZ64( , tmp0) !m1 SEQW GOTO U2792
U38b9: tmp15:= MOVEFROMCREG_DSZ64( , 0x21d, 32) !m1 
U38ba: tmp15:= BT_DSZ32(tmp15, 0x00000008) 

U38bc: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00003b00) 
U38bd: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U395e
U38be: tmp2:= MOVEFROMCREG_DSZ64( , 0x20f, 32) !m1 

U38c0: LFNCEMARK-> WRITEURAM(tmp2, 0x0009, 64) 
U38c1: tmp12:= ADD_DSZ32(0x00000000, tmp15) 
FUN_ucode_00038c2:
U38c2: tmp2:= MOVEFROMCREG_DSZ64( , 0x411) 

U38c4: tmp3:= MOVEFROMCREG_DSZ64( , 0x064) 
U38c5: tmp4:= MOVEFROMCREG_DSZ64( , 0x106) 
U38c6: tmp5:= MOVEFROMCREG_DSZ64( , 0x488) 

U38c8: tmp6:= MOVEFROMCREG_DSZ64( , 0x74d) 
U38c9: tmp7:= MOVEFROMCREG_DSZ64( , 0x63c) 
U38ca: tmp8:= MOVEFROMCREG_DSZ64( , 0x680) 

U38cc: tmp9:= ZEROEXT_DSZ32() SEQW SAVEUIP0 U38cdSEQW GOTO U617d
U38cd: tmp2:= MOVEFROMCREG_DSZ64( , 0x609) 
U38ce: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp2) 

U38d0: tmp4:= MOVEFROMCREG_DSZ64( , 0x60a) 
U38d1: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020,  , tmp4) 
U38d2: tmp12:= ADD_DSZ32(0x00000040, tmp12) 

U38d4: tmp4:= MOVEFROMCREG_DSZ64( , 0x693) 
U38d5: tmp5:= MOVEFROMCREG_DSZ64( , 0x608) 
U38d6: tmp6:= MOVEFROMCREG_DSZ64( , 0x610) 

U38d8: tmp7:= ZEROEXT_DSZ32() 
U38d9: tmp8:= MOVEFROMCREG_DSZ64( , 0x403) 
U38da: tmp9:= MOVEFROMCREG_DSZ64( , 0x703) SEQW SAVEUIP0 U38dcSEQW GOTO U6181

U38dc: tmp1:= NOTAND_DSZ32(0x00000011, tmp1) 
U38dd: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x088) 
U38de: tmp2:= CONCAT_DSZ32(tmp2, tmp1) 

U38e0: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp2) 
U38e1: tmp6:= MOVEFROMCREG_DSZ64( , 0x06a) 
U38e2: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020,  , tmp6) 

U38e4: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040,  , 0x00000000) 
U38e5: WRMSLOOPCTRFBR( , 0x00001827) 
U38e6: tmp12:= ADD_DSZ32(0x00000180, tmp15) 

U38e8: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U38e9: tmp4:= MOVEFROMCREG_DSZ64( , tmp8) 
U38ea: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp4) 

U38ec: tmp9:= SHR_DSZ32(tmp8, 0x00000010) 
U38ed: tmp6:= MOVEFROMCREG_DSZ64( , tmp9) 
U38ee: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020,  , tmp6) 

U38f0: tmp12:= ADD_DSZ32(0x00000040, tmp12) 
U38f1: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U38e8
U38f2: WRMSLOOPCTRFBR( , 0x00000015) 

U38f4: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U38f5: tmp4:= MOVEFROMCREG_DSZ64( , tmp8) 
U38f6: tmp9:= SHR_DSZ32(tmp8, 0x00000010) 

U38f8: tmp6:= MOVEFROMCREG_DSZ64( , tmp9) 
U38f9: tmp6:= CONCAT_DSZ32(tmp6, tmp4) 
U38fa: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp6) 

U38fc: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U38fd: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U38f4
U38fe: tmp3:= MOVEFROMCREG_DSZ64( , 0x7f0) 

U3900: tmp4:= MOVEFROMCREG_DSZ64( , 0x067) 
U3901: tmp5:= ZEROEXT_DSZ32(tmp10) SEQW SAVEUIP0 U3902SEQW GOTO U1f74
U3902: tmp12:= ADD_DSZ32(0x00000ec0, tmp15) 

U3904: LFNCEWAIT-> WRMSLOOPCTRFBR( , 0x0000008f) 
U3905: NOP 
U3906: NOP 

U3908: tmp4:= READURAM( , 0x0008, 64) !m0 
U3909: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp4) 
U390a: tmp12:= ADD_DSZ32(0x00000020, tmp12) 

U390c: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3908
U390d: WRMSLOOPCTRFBR( , 0x00000007) 
U390e: tmp12:= ADD_DSZ32(0x000020c0, tmp15) 

U3910: SIMDLSTADSTGBUF_DSZ64_ASZ32_SC1(tmp12,  , mm0) 
U3911: SIMDHSTADSTGBUF_DSZ64_ASZ32_SC1(tmp12, 0x00000020,  , mm0) 
FUN_ucode_0003912:
U3912: tmp12:= ADD_DSZ32(0x00000040, tmp12) 

U3914: tmm6:= FMOV( , 0x00000011) !m0 
U3915: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3910
FUN_ucode_0003916:
U3916: WRMSLOOPCTRFBR( , 0x0000000f) 

U3918: SIMDLSTADSTGBUF_DSZ64_ASZ32_SC1(tmp12,  , xmm7) 
U3919: SIMDHSTADSTGBUF_DSZ64_ASZ32_SC1(tmp12, 0x00000020,  , xmm7) 
U391a: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040,  , rdi) 

U391c: tmp12:= ADD_DSZ32(0x00000060, tmp12) 
U391d: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3918
U391e: tmp3:= RDSEGFLD(SS_USERM, BASE) 

U3920: tmp4:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 
U3921: tmp5:= RDSEGFLD(UNK_SEG_09, BASE) 
U3922: tmp6:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) SEQW SAVEUIP0 U3924SEQW GOTO U2029

U3924: tmp3:= RDSEGFLD(LDT, BASE) 
U3925: tmp4:= RDSEGFLD(LDT, SEL+FLGS+LIM) 
U3926: tmp5:= RDSEGFLD(GDT, BASE) 

U3928: tmp6:= RDSEGFLD(GDT, SEL+FLGS+LIM) SEQW SAVEUIP0 U3929SEQW GOTO U2029
U3929: tmp3:= RDSEGFLD(TSS, BASE) 
U392a: tmp4:= RDSEGFLD(TSS, SEL+FLGS+LIM) 

U392c: tmp5:= RDSEGFLD(IDT, BASE) 
U392d: tmp6:= RDSEGFLD(IDT, SEL+FLGS+LIM) SEQW SAVEUIP0 U392eSEQW GOTO U2029
U392e: tmp3:= RDSEGFLD(GS, BASE) 

U3930: tmp4:= RDSEGFLD(GS, SEL+FLGS+LIM) 
U3931: tmp5:= RDSEGFLD(FS, BASE) 
U3932: tmp6:= RDSEGFLD(FS, SEL+FLGS+LIM) SEQW SAVEUIP0 U3934SEQW GOTO U2029

U3934: tmp3:= RDSEGFLD(DS, BASE) 
U3935: tmp4:= RDSEGFLD(DS, SEL+FLGS+LIM) 
U3936: tmp5:= RDSEGFLD(ES, BASE) 

U3938: tmp6:= RDSEGFLD(ES, SEL+FLGS+LIM) SEQW SAVEUIP0 U3939SEQW GOTO U2029
U3939: WRMSLOOPCTRFBR( , 0x00000003) 
U393a: NOP 

U393c: tmp0:= unk_14a(rdi) 
U393d: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp0) 
U393e: tmp0:= unk_14a(tmp7) 

U3940: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020,  , tmp0) 
U3941: tmp12:= ADD_DSZ32(0x00000040, tmp12) 
U3942: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U393c

U3944: tmp4:= RDSEGFLD(UNK_SEG_10, BASE) 
U3945: tmp5:= RDSEGFLD(UNK_SEG_11, BASE) SEQW SAVEUIP0 U3946SEQW GOTO U1f76
U3946: tmp12:= ADD_DSZ32(0x00002c80, tmp15) 

U3948: WRMSLOOPCTRFBR( , 0x00002002) SEQW SAVEUIP0 U3949SEQW GOTO U5799
U3949: NOP 
U394a: NOP 

U394c: WRMSLOOPCTRFBR( , 0x00000807) SEQW SAVEUIP0 U394dSEQW GOTO U5789
U394d: tmp2:= READURAM( , 0x005c, 64) 
U394e: NOP 

U3950: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000019, U3951) !m1,m2 SEQW GOTO U395e
U3951: WRMSLOOPCTRFBR( , 0x0000003f) 
U3952: tmp2:= ZEROEXT_DSZ32(0x00000020) 

U3954: tmp12:= ADD_DSZ32(0x000032c0, tmp15) 
U3955: tmp8:= MOVEFROMCREG_DSZ64( , tmp2) 
U3956: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp8) 

U3958: tmp2:= ADD_DSZ32(0x00000001, tmp2) 
U3959: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U395a: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3955

U395c: tmp8:= MOVEFROMCREG_DSZ64( , 0x009) 
U395d: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp8) 
U395e: NOP SEQW GOTO U78b0

U3960: NOP 
U3961: WRITEURAM(tmp0, 0x0000, 64) !m2 
U3962: tmp0:= READAFLAGS(tmp0) 

U3964: tmp0:= CONCAT_DSZ16(0x00000002, tmp0) SEQW GOTO U5255
U3965: MOVETOCREG_DSZ64(tmp5, 0x6c5) 
U3966: LFNCEWAIT-> tmp6:= MOVEFROMCREG_DSZ64( , 0x000) 

U3968: tmp6:= NOTAND_DSZ32(0x00000fff, tmp6) 
U3969: tmp6:= OR_DSZ32(0x00000006, tmp6) 
U396a: tmp6:= MOVETOCREG_BTS_DSZ64(tmp6, 0x0000000a, 0x000) !m0 

U396c: tmp5:= RDSEGFLD(UNK_SEG_04, FLGS) 
U396d: tmp5:= BT_DSZ32(tmp5, 0x00000003) 
U396e: tmp8:= MOVEMERGEFLGS_DSZ32(0x00000067, tmp5) 

U3970: tmp8:= CMOVCC_DSZ32_CONDB(tmp8, 0x0000002b) 
U3971: LFNCEMARK-> unk_fe3(tmp8) 
U3972: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U2234

U3974: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U3978
U3975: tmp15:= READURAM( , 0x004c, 64) 
U3976: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000004, U2234) !m1 

U3978: tmp5:= RDSEGFLD(TSS, FLGS) 
FUN_ucode_0003979:
U3979: tmp2:= NOTAND_DSZ32(tmp5, 0x00000008) 
U397a: tmp8:= SELECTCC_DSZ32_CONDNZ(tmp2, 0x00004000) 

U397c: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp8, 0x73c) 
U397d: tmp2:= SHL_DSZ64(tmp2, 0x00000021) 
U397e: NOP 

U3980: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, 0x752) 
U3981: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U3982: tmp6:= BTS_DSZ32(tmp6, 0x00000012) 

U3984: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp6, U39ac) 
U3985: tmp2:= RDSEGFLD(TSS, SEL) 
U3986: LFNCEMARK-> MOVETOCREG_DSZ64(tmp6, 0x000) !m2 

U3988: tmp5:= BT_DSZ32(tmp5, 0x00000003) 
U3989: tmp7:= MOVEMERGEFLGS_DSZ32(0x00000020, tmp5) 
U398a: tmp7:= CMOVCC_DSZ32_CONDB(tmp7, 0x0000000e) 

U398c: LFNCEWAIT-> STADPPHYS_DSZN_ASZ32_SC1(tmp7, mode=0x0f,  , tmp4) !m1 
U398d: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_ALIAS_DATASIZE, mode=0x0f,  , tmp9) !m0,m1 
U398e: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_13, mode=0x0f,  , rax) !m0,m1 

U3990: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_1b, mode=0x0f,  , rcx) !m0,m1 
U3991: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_23, mode=0x0f,  , rdx) !m0,m1 
U3992: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_2b, mode=0x0f,  , rbx) !m0,m1 

U3994: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_33, mode=0x0f,  , rsp) !m0,m1 
U3995: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_3b, mode=0x0f,  , rbp) !m0,m1 
U3996: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_43, mode=0x0f,  , rsi) !m0,m1 

U3998: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_4b, mode=0x0f,  , rdi) !m0,m1 
U3999: tmp8:= RDSEGFLD(ES, SEL) 
U399a: STADPPHYS_DSZ16_ASZ32_SC1(tmp7, IMM_MACRO_53, mode=0x0f,  , tmp8) !m0 

U399c: tmp8:= RDSEGFLD(CS, SEL) 
U399d: STADPPHYS_DSZ16_ASZ32_SC1(tmp7, IMM_MACRO_5b, mode=0x0f,  , tmp8) !m0 
U399e: tmp8:= RDSEGFLD(SS_USERM, SEL) 

U39a0: STADPPHYS_DSZ16_ASZ32_SC1(tmp7, IMM_MACRO_63, mode=0x0f,  , tmp8) !m0 
U39a1: tmp8:= RDSEGFLD(DS, SEL) 
U39a2: STADPPHYS_DSZ16_ASZ32_SC1(tmp7, IMM_MACRO_6b, mode=0x0f,  , tmp8) !m0 

U39a4: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000003, U39aa) !m0,m1,m2 
U39a5: tmp8:= RDSEGFLD(FS, SEL) 
U39a6: STADPPHYS_DSZ32_ASZ32_SC1(tmp7, IMM_MACRO_73, mode=0x0f,  , tmp8) !m0 

U39a8: tmp8:= RDSEGFLD(GS, SEL) 
U39a9: STADPPHYS_DSZ32_ASZ32_SC1(tmp7, IMM_MACRO_7b, mode=0x0f,  , tmp8) !m0 
U39aa: MOVETOCREG_BTS_DSZ64( , 0x00000012, 0x06d) !m0,m2 

U39ac: tmp2:= RDSEGFLD(UNK_SEG_04, SEL) 
U39ad: tmp5:= RDSEGFLD(UNK_SEG_04, FLGS) 
U39ae: tmp5:= BT_DSZ32(tmp5, 0x00000003) 

U39b0: tmp8:= MOVEMERGEFLGS_DSZ32(0x0000001c, tmp5) 
U39b1: tmp8:= CMOVCC_DSZ32_CONDB(tmp8, 0x0000000e) 
U39b2: unk_fe1(tmp8) 

U39b4: tmp8:= MOVEMERGEFLGS_DSZ32(0x00000067, tmp5) 
U39b5: tmp8:= CMOVCC_DSZ32_CONDB(tmp8, 0x0000002b) 
U39b6: unk_fe1(tmp8) 

U39b8: NOP 
U39b9: NOP 
U39ba: UJMP( , tmp12) 

U39bc: tmp3:= MOVEFROMCREG_DSZ64( , 0x486) 
U39bd: tmp3:= AND_DSZ16(tmp3, 0x00000002) 
U39be: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U39c0) SEQW GOTO U03b4

U39c0: tmp12:= OR_DSZ16(0x00000002, tmp12) SEQW GOTO U1a50
U39c1: tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x0000000c, 0x01c) 
U39c2: tmp7:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00000004) 

U39c4: tmp9:= SELECTCC_DSZ32_CONDNB(tmp9, 0x00000001) 
U39c5: tmp7:= OR_DSZ32(tmp9, tmp7) 
U39c6: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp7, 0x070, tmp2) 

U39c8: tmp7:= SELECTCC_DSZ32_CONDNB(tmp14, 0x00000004) 
U39c9: LFNCEWAIT-> tmp14:= CMOVCC_DSZ32_CONDP(tmp14, tmp7) SEQW URET1
U39ca: tmp5:= MOVEFROMCREG_DSZ64( , tmp8) SEQW GOTO U48b1

U39cc: tmp5:= MOVEFROMCREG_DSZ64( , tmp8) !m1 SEQW GOTO U48b1
U39cd: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U39ce: tmp0:= AND_DSZ32(0x08000000, tmp0) 

U39d0: tmp1:= MOVEFROMCREG_DSZ64( , 0x701) 
U39d1: tmp1:= NOTAND_DSZ64(0x08000000, tmp1) 
U39d2: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp1, 0x701, tmp0) !m2 

U39d4: TESTUSTATE( , SYS, 0x0800) !m1 ? SEQW GOTO U27ee
U39d5: LFNCEWAIT-> unk_256() !m1 SEQW UEND0
U39d6: tmm6:= unk_704(mm2) 

U39d8: tmm6:= unk_620(tmm6) 
U39d9: tmp8:= PINTMOVDTMM2I_DSZ32(tmm6) 
U39da: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U39dc: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U39dd: SAVEUIP( , 0x01, U419d) !m0 
U39de: UJMP( , tmp8) 

U39e0: NOP 
U39e1: WRITEURAM(tmp0, 0x0000, 64) !m2 
U39e2: tmp0:= READAFLAGS(tmp0) 

U39e4: tmp0:= CONCAT_DSZ16(0x00000013, tmp0) SEQW GOTO U5255
U39e5: tmpv1:= ZEROEXT_DSZ32(0x00000400) 
U39e6: tmpv1:= BTS_DSZ32(tmpv1, 0x00000010) 

U39e8: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U1db2
U39e9: tmpv0:= READURAM( , 0x0012, 64) 
U39ea: tmpv0:= BT_DSZ32(tmpv0, 0x00000000) 

U39ec: tmp15:= READUIP_REGOVR(0x01) !m0 
U39ed: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmpv0, tmp15) SEQW SAVEUIP1 U39eeSEQW GOTO U6d0c
U39ee: tmpv0:= SAVEUIP(tmp2, 0x01, U03be) !m0 

U39f0: SAVEUIP( , 0x00, U3a34) SEQW GOTO U334d
U39f1: LBSYNC(0x00000001) 
U39f2: LFNCEMARK-> LBSYNC(0x00000001) 

U39f4: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 
FUN_ucode_00039f5:
U39f5: tmp11:= ZEROEXT_DSZ32(0x0000000e) 
U39f6: LFNCEWAIT-> tmp1:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 

U39f8: tmp1:= AND_DSZ32(0x000c0000, tmp1) 
U39f9: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U294c) 
U39fa: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2dd) !m1,m2 

U39fc: tmp14:= ZEROEXT_DSZ64N(tmp8) !m1 SEQW GOTO U4905
U39fd: mm0:= unk_76f(tmm1) 
U39fe: MOVETOCREG_DSZ64(tmp0, 0x205, 32) !m1 

U3a00: tmm1:= unk_477(tmm1) 
U3a01: mm0:= unk_76f(tmm1) 
U3a02: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x206, 32) !m1 

U3a04: tmp1:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U3a05: tmp1:= AND_DSZ32(0x00000001, tmp1) SEQW SAVEUIP1 U3a06SEQW GOTO U287d
U3a06: SYNCMARK-> UFLOWCTRL( , tmp3, URET0) 

U3a08: WRMSLOOPCTRFBR( , 0x00000060) SEQW GOTO U0002
U3a09: WRMSLOOPCTRFBR( , 0x0000003f) 
U3a0a: tmp2:= ZEROEXT_DSZ32(0x00000020) 

U3a0c: tmp12:= ADD_DSZ32(0x000032c0, tmp15) 
U3a0d: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U3a0e: MOVETOCREG_DSZ64(tmp0, tmp2) 

U3a10: tmp2:= ADD_DSZ32(0x00000001, tmp2) 
U3a11: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U3a12: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3a0d

U3a14: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U3a15: MOVETOCREG_DSZ64(tmp0, 0x009) SEQW GOTO U1511
U3a16: LFNCEWAIT-> WRMSLOOPCTRFBR(0x00000003) 

U3a18: rdi:= unk_14d() 
U3a19: tmp7:= unk_14d() 
U3a1a: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3a18

U3a1c: NOP SEQW URET0
U3a1d: tmp14:= ZEROEXT_DSZ32(0x000024d1) 
FUN_ucode_0003a1e:
U3a1e: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U2ad1

U3a20: TESTUSTATE( , UCODE, 0x1000) ? SEQW GOTO U2ad1
U3a21: tmp1:= MOVEFROMCREG_DSZ64( , 0x067) 
U3a22: tmp2:= MOVEFROMCREG_DSZ64( , 0x065) 

U3a24: tmp3:= SUB_DSZN(tmp2, tmp1) !m1 
U3a25: AETTRACE( , tmp3, 0x0c) SEQW GOTO U2ad1
U3a26: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U3a28: MOVETOCREG_BTR_DSZ64(tmpv0, 0x0000000c, 0x6c3) 
U3a29: tmpv0:= ZEROEXT_DSZ32() 
U3a2a: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x7c6) 

U3a2c: LFNCEWAIT-> MOVETOCREG_DSZ64(tmpv0, 0x6c0) SEQW URET1
U3a2d: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U4736
U3a2e: tmp0:= READURAM( , 0x0012, 64) 

U3a30: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U4736) 
U3a31: SAVEUIP_REGOVR( , 0x01, U3a32, 0x7019) !m0 SEQW GOTO U6d0c
U3a32: SAVEUIP( , 0x01, U4736) !m0 

U3a34: NOP 
U3a35: NOP 
U3a36: NOP SEQW URET1

U3a38: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
U3a39: tmp6:= ADD_DSZ32(0x00000001, tmp6) 
U3a3a: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000008, U3a3c) !m1,m2 SEQW GOTO U338e

U3a3c: tmp15:= ADD_DSZ32(0x00000001, tmp15) 
U3a3d: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000010, U3a3e) !m1,m2 SEQW GOTO U338d
U3a3e: UJMP( , tmp14) 

U3a40: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
enter_probe_mode:
U3a41: tmp6:= ADD_DSZ32(0x00000001, tmp6) 
U3a42: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000008, U3a44) !m1,m2 SEQW GOTO U27b2

U3a44: tmp15:= ADD_DSZ32(0x00000001, tmp15) 
U3a45: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000017, U3a46) !m0,m1,m2 SEQW GOTO U27b1
U3a46: UJMP( , tmp14) 

U3a48: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
U3a49: tmp6:= ADD_DSZ32(0x00000001, tmp6) 
U3a4a: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000008, U3a4c) !m1,m2 SEQW GOTO U3b71

U3a4c: tmp15:= ADD_DSZ32(0x00000001, tmp15) 
U3a4d: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000008, U3a4e) !m1,m2 SEQW GOTO U3b70
U3a4e: UJMP( , tmp14) 

U3a50: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
U3a51: tmp6:= ADD_DSZ32(0x00000001, tmp6) 
U3a52: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000008, U3a54) !m1,m2 SEQW GOTO U3b9d

U3a54: tmp15:= ADD_DSZ32(0x00000001, tmp15) 
U3a55: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000006, U3a56) !m0,m1,m2 SEQW GOTO U3b9c
U3a56: UJMP( , tmp14) 

U3a58: tmp1:= SHR_DSZ64(tmp7, 0x00000020) 
U3a59: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 
U3a5a: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U449d

U3a5c: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U3a60
U3a5d: tmp7:= NOTAND_DSZ32(0x00001000, tmp7) 
U3a5e: tmp7:= OR_DSZ32(0xffff0ff0, tmp7) 

U3a60: LFNCEMARK-> WRITEURAM(tmp7, 0x003d, 64) !m2 SEQW GOTO U1bd0
U3a61: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2dd) !m1,m2 
U3a62: STADPPHYS_DSZ32_ASZ64_SC1(tmp2, mode=0x01,  , 0x00000000) 

U3a64: tmp0:= READURAM( , 0x0053, 64) 
U3a65: unk_a63(tmp0, 0x00008253) 
U3a66: tmp3:= READURAM( , 0x0053, 64) 

U3a68: tmp3:= OR_DSZ32(0x00000001, tmp3) 
U3a69: WRITEURAM(tmp3, 0x0053, 32) !m2 
U3a6a: tmp0:= ZEROEXT_DSZ32(0x00000009) SEQW SAVEUIP0 U3a6cSEQW GOTO U60e5

U3a6c: tmp7:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4, 0xfffffffffffffffe) 
U3a6d: tmp4:= ADD_DSZN(tmp7, tmp4) !m1 SEQW GOTO U1f9a
U3a6e: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U3a70: SYNCFULL-> MOVETOCREG_SHR_DSZ64(tmp0, 0x00000009, 0x6c5) 
U3a71: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U221e
U3a72: NOP 

U3a74: SAVEUIP( , 0x01, U221e) !m0 SEQW GOTO U5eba
U3a75: tmp2:= SHL_DSZ64(tmp4, 0x0000001f) 
U3a76: tmp2:= SHR_DSZ64(tmp2, 0x0000002f) 

U3a78: tmp2:= BTS_DSZ32(tmp2, 0x00000011) 
U3a79: tmp0:= ZEROEXT_DSZ16(tmp4) 
U3a7a: tmp0:= SHL_DSZ64(tmp0, 0x00000028) 

U3a7c: tmp3:= SHL_DSZ32(r64dst, 0x00000002) 
U3a7d: tmp3:= ADD_DSZ32(0x00004484, tmp3) 
U3a7e: SAVEUIP( , 0x01, U2711) !m0 SEQW SAVEUIP0 U3a80SEQW GOTO U06be

U3a80: r64dst:= ZEROEXT_DSZ32() 
U3a81: tmp1:= ZEROEXT_DSZ32(tmp1, tmp1) !m2 SEQW UEND0
U3a82: SAVEUIP_REGOVR(0x00, U3a84, 0x0000) SEQW GOTO U2bc8

U3a84: LFNCEWAIT-> tmp2:= ADD_DSZN(0x00000004, tmp4) !m1 SEQW GOTO U7245
U3a85: tmp6:= SHR_DSZ32(tmp13, 0x00000004) 
U3a86: tmp12:= ADDSUB_DSZ16_CONDD(0x00000001) 

U3a88: tmp12:= SELECTCC_DSZ32_CONDNS(tmp12, 0x00000001) 
U3a89: tmp12:= SUB_DSZ16(tmp6, tmp12) 
U3a8a: tmp12:= ADDSUB_DSZ16_CONDD(tmp12, 0x00018000) 

U3a8c: SYNCMARK-> UFLOWCTRL( , tmp12, MSLOOPCTR) 
U3a8d: tmp14:= SAVEUIP(0x01, U3af6) !m0 
U3a8e: tmp6:= TESTUSTATE( , SYS, !UST_SMM | 0xc000) !m0,m1 ? SEQW GOTO U3af6

U3a90: tmp14:= SAVEUIP(0x01, U3a91) !m0 
U3a91: tmp9:= unk_ec6(tmp4, tmp6) SEQW GOTO U3af8
U3a92: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) !m2 

U3a94: LFNCEWAIT-> tmp12:= RDSEGFLD(UNK_SEG_04, FLGS) 
U3a95: tmp12:= SHL_DSZ32(tmp12, 0x00000008) 
U3a96: tmp8:= RDSEGFLD(UNK_SEG_04, LIMIT_VAL) 

U3a98: tmp8:= AND_DSZ64(0x000f0000, tmp8) 
U3a99: tmp12:= OR_DSZ32(tmp8, tmp12) SEQW GOTO U4059
U3a9a: tmp0:= READUIP_REGOVR(0x00) 

U3a9c: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 
U3a9d: MOVETOCREG_DSZ64(tmp15, 0x752) !m2 
U3a9e: tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 

U3aa0: tmp14:= MOVEFROMCREG_DSZ64( , 0x067) 
U3aa1: tmp14:= SUB_DSZN(tmp15, tmp14) !m1 
U3aa2: SYNCMARK-> MOVETOCREG_DSZ64(tmp14, 0x71a) !m2 

U3aa4: LFNCEWTMRK-> unk_256() !m1 SEQW URET1
U3aa5: BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U07fe) 
U3aa6: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U2e61

U3aa8: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U3ab0
U3aa9: tmp2:= RDSEGFLD(TSS, SEL) 
U3aaa: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x072) !m0,m2 

U3aac: rsp:= LDPPHYS_DSZ64_ASZ32_SC8( , tmp11) 
U3aad: tmp2:= RDSEGFLD(SS_USERM, SEL) 
U3aae: MOVETOCREG_DSZ64(tmp7, 0x000) !m2 

U3ab0: rsp:= AND_DSZN(0xfffffffffffffff0, rsp) !m1 
U3ab1: tmp8:= RDSEGFLD(SS, SEL) SEQW GOTO U2e5c
U3ab2: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000b, U0c1a) !m0 

U3ab4: tmp4:= ZEROEXT_DSZ32(0x0000000d) 
U3ab5: LFNCEMARK-> tmm6:= unk_701(mm4) !m2 
U3ab6: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U3ab8) SEQW GOTO U1a50

U3ab8: tmm6:= FMOV( , 0x00000091) !m0 
U3ab9: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000006, U3aba) !m0,m1,m2 SEQW GOTO U1a50
U3aba: NOP 

U3abc: tmm6:= FMOV( , 0x00000091) !m0 SEQW GOTO U1a50
U3abd: SYNCWAIT-> tmp10:= RDSEGFLD(SEG_V0, BASE) 
U3abe: MOVETOCREG_DSZ64(tmp10, 0x2c0, 32) !m1 

U3ac0: LFNCEWAIT-> tmp10:= RDSEGFLD(SEG_V0, LIMIT) 
U3ac1: MOVETOCREG_DSZ64(tmp10, 0x2c1, 32) !m1 
U3ac2: tmp10:= RDSEGFLD(SEG_V0, SEL) 

U3ac4: WRITEURAM(tmp10, 0x0062, 64) 
U3ac5: tmp10:= RDSEGFLD(SEG_V0, FLGS) 
U3ac6: WRITEURAM(tmp10, 0x0063, 64) 

U3ac8: tmp10:= RDSEGFLD(SEG_V0, UNK_FLD_0e) 
U3ac9: WRITEURAM(tmp10, 0x0064, 64) SEQW GOTO U11b6
U3aca: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) 

U3acc: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
U3acd: tmp1:= RDSEGFLD(CS, SEL) 
U3ace: MOVETOCREG_DSZ64(0x00000009, 0x000) !m2 

U3ad0: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp1) !m0,m1 
U3ad1: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, tmp4) !m0,m1 
U3ad2: LFNCEWAIT-> LEA_DSZ8_ASZ32_SC1(tmp3) 

U3ad4: rsp:= ADD_DSZN(IMM_MACRO_f3, rsp) !m0,m1 SEQW GOTO U2be9
U3ad5: LFNCEMARK-> tmm0:= unk_6ee(tmm0) !m2 
FUN_ucode_0003ad6:
U3ad6: mm3:= unk_76a(tmm0) 

U3ad8: tmp3:= NOTAND_DSZ32(tmp3, 0x00000010) 
U3ad9: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 
U3ada: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 

U3adc: tmp1:= AND_DSZ32(0x00000020, tmp5) 
U3add: tmp1:= OR_DSZ32(tmp1, tmp3) 
U3ade: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3ae0) SEQW GOTO U3ae2

U3ae0: tmp1:= OR_DSZ16(0x00008080, tmp4) 
U3ae1: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x48c) 
U3ae2: tmm0:= unk_644(tmm0) 

U3ae4: LFNCEWAIT-> mm0:= unk_53f(0x00000000, tmm0) SEQW GOTO U1bd0
U3ae5: tmp8:= SUB_DSZ32(0x00000400, tmp6) 
U3ae6: tmp8:= SUB_DSZ32(0x0000000f, tmp8) 

U3ae8: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp8, U3ae9) SEQW GOTO U3aec
U3ae9: tmp8:= NOTAND_DSZ32(tmp6, 0x00000003) 
U3aea: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U3af4) 

U3aec: tmp8:= SUB_DSZ32(0x00000280, tmp6) 
U3aed: tmp8:= SUB_DSZ32(0x00000003, tmp8) 
U3aee: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp8, U3af4) 

U3af0: tmp8:= SUB_DSZ32(0x00000179, tmp6) 
U3af1: tmp8:= SUB_DSZ32(0x00000001, tmp8) 
U3af2: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp8, U3af4) SEQW GOTO U03e4

U3af4: tmp1:= ZEROEXT_DSZ32(0x00000080) 
U3af5: tmp8:= MOVEINSERTFLGS_DSZ32(0x0000000b, tmp6) SEQW GOTO U0ae4
U3af6: tmp9:= unk_fc6(tmp4, tmp6) 

U3af8: tmp9:= unk_ece(tmp8, tmp6) 
U3af9: tmp6:= ADD_DSZ32(0x00000010, tmp6) 
U3afa: SYNCWAIT-> tmp12:= TESTUSTATE(tmp12, UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW URET1

FUN_ucode_0003afc:
U3afc: TESTUSTATE( , SYS, !UST_SMM | 0xc000) !m0,m1 ? SEQW GOTO U581a
U3afd: NOP 
U3afe: NOP 

U3b00: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, mode=0x01, tmp6) SEQW GOTO U581c
U3b01: tmp14:= READUIP_REGOVR(0x01) !m0 
U3b02: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x0000001c, U06a5) 

U3b04: tmp11:= SHL_DSZ32(tmp8, 0x00000001) 
U3b05: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, U06a5) 
U3b06: tmp2:= NOTAND_DSZ32(0xc0001fff, tmp8) 

U3b08: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U06a5) 
U3b09: tmp11:= SELECTCC_DSZ32_CONDNB(tmp11, 0x00000400) 
U3b0a: tmp2:= SHR_DSZ32(tmp8, 0x00000003) 

U3b0c: tmp2:= ADD_DSZ16(tmp2, tmp7) 
U3b0d: tmp2:= ADD_DSZ32(tmp11, tmp2) 
U3b0e: LFNCEWAIT-> tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp12, mode=0x1c, tmp2) 

U3b10: tmp11:= AND_DSZ32(0x00000007, tmp8) 
U3b11: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp2, U06a5, tmp11) SEQW URET1
U3b12: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U00d2

U3b14: WRMSLOOPCTRFBR(0x0000000f) SEQW GOTO U00d4
U3b15: tmm6:= unk_624(tmm3, tmm2) 
U3b16: tmp2:= PINTMOVDTMM2I_DSZ32(tmm6) 

U3b18: tmp2:= AND_DSZ8(0x0000003f, tmp2) 
U3b19: tmp7:= OR_DSZ32(tmp2, tmp7) 
U3b1a: tmm6:= unk_704(mm7) 

U3b1c: tmm6:= unk_620(tmm6) 
U3b1d: tmp3:= PINTMOVDTMM2I_DSZ32(tmm6) 
U3b1e: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp6, U2b45) 

U3b20: tmp0:= MOVEFROMCREG_DSZ64( , 0x48c) 
U3b21: tmp0:= SHR_DSZ16(tmp0, 0x00000008) 
U3b22: LFNCEMARK-> tmm6:= FMOV() !m2 

U3b24: tmp4:= XOR_DSZ16(0x0000411e, tmp3) 
U3b25: LFNCEWAIT-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, tmp3) SEQW GOTO U031a
U3b26: SAVEUIP( , 0x01, U18ec) !m0 

U3b28: TESTUSTATE( , SYS, UST_VMX_OP_DIS) !m1 ? SEQW URET1
U3b29: tmpv2:= READURAM( , 0x0056, 64) 
U3b2a: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U601e

U3b2c: tmpv0:= READURAM( , 0x0043, 64) 
U3b2d: tmpv1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U3b2e: tmpv1:= BT_DSZ64(tmpv1, 0x0000000d) 

U3b30: tmpv1:= SELECTCC_DSZ64_CONDB(tmpv1, tmpv0) 
U3b31: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000033, U1db2) !m0,m2 
U3b32: tmpv2:= READURAM( , 0x0057, 64) SEQW GOTO U601e

U3b34: NOP 
U3b35: SYNCWAIT-> tmp9:= unk_cce(rdi, tmp1) !m0 
U3b36: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, IMM_MACRO_01) !m0 

U3b38: tmp9:= unk_cce(rdi, tmp1) !m0 
U3b39: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U3b35
U3b3a: tmp15:= SUB_DSZN(tmp4) !m1 

U3b3c: tmp15:= SHL_DSZ32(tmp15, 0x00000004) SEQW GOTO U1ba8
U3b3d: LFNCEWAIT-> rsp:= LDPPHYS_DSZ32_ASZ32_SC8( , tmp8) 
U3b3e: tmp2:= LDPPHYS_DSZ16_ASZ32_SC8( , tmp8) 

U3b40: tmp0:= unk_d61(tmp2) 
U3b41: tmp1:= unk_d61(tmp2) 
U3b42: tmp0:= CMOVCC_DSZ64_CONDNB(tmp1, tmp0) 

U3b44: SAVEUIP( , 0x01, U068e) !m0 
U3b45: LFNCEWAIT-> tmp1:= MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x73c) 
U3b46: tmp14:= ZEROEXT_DSZ32(0x00003575) 

U3b48: UFLOWCTRL(tmp1, tmp14, URET1) 
U3b49: LFNCEMARK-> unk_e6b(tmp0, tmp2) 
U3b4a: tmp8:= RDSEGFLD(UNK_SEG_09, SEL) 

U3b4c: LFNCEMARK-> WRSEGFLD(tmp8, UNK_SEG_09, UNK_FLD_0c) 
U3b4d: MOVETOCREG_DSZ64(tmp7, 0x000) !m2 
U3b4e: tmp8:= RDSEGFLD(SS, SEL) SEQW URET1

U3b50: NOP 
U3b51: SYNCWAIT-> tmp9:= unk_cce(rdi, tmp1) !m0 
U3b52: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, IMM_MACRO_01) !m0 

U3b54: tmp9:= unk_cce(rdi, tmp1) !m0 
U3b55: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U3b51
U3b56: tmp15:= SUB_DSZN(tmp4) !m1 

U3b58: tmp15:= SHL_DSZ32(tmp15, 0x00000004) SEQW GOTO U1ba8
U3b59: LFNCEWAIT-> tmp1:= MOVEFROMCREG_DSZ64( , 0x067) 
U3b5a: WRITEURAM(tmp1, 0x0067, 64) !m2 

U3b5c: WRITEURAM(tmp0, 0x0007, 32) !m2 
U3b5d: WRITEURAM(tmp0, 0x0050, 32) !m2 
U3b5e: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 

U3b60: tmp6:= SHL_DSZ64(tmp6, 0x00000020) 
U3b61: WRITEURAM(tmp6, 0x0126, 64) !m2 
U3b62: MOVE_DSZ32() SEQW SAVEUIP1 U3b64SEQW GOTO U20bd

U3b64: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c6) 
U3b65: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U3b66: LFNCEWAIT-> tmp1:= READURAM( , 0x005c, 64) 

U3b68: tmp1:= AND_DSZ32(0x00000100, tmp1) 
U3b69: tmp2:= OR_DSZ32(tmp2, tmp1) 
U3b6a: CMPUJZ_DIRECT_NOTTAKEN(tmp2, 0x00000001, U3b6c) !m1,m2 SEQW GOTO U0604

U3b6c: tmp0:= BT_DSZ32(tmp0, 0x00000017) 
U3b6d: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, tmp0) SEQW GOTO U079d
U3b6e: tmp15:= OR_DSZ32() 

U3b70: tmp6:= OR_DSZ32() 
U3b71: tmp1:= SHL_DSZ32(tmp6, 0x00000005) 
U3b72: tmp1:= OR_DSZ32(tmp15, tmp1) 

U3b74: tmp1:= SHL_DSZ32(tmp1, 0x0000000f) 
U3b75: tmp1:= OR_DSZ32(0x00001000, tmp1) 
U3b76: SAVEUIP_REGOVR(0x01, U3b78, 0x0002) !m0 SEQW GOTO U32cd

U3b78: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp1, 0x00000007, 0x3a5) !m0,m1,m2 
U3b79: tmp2:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 
U3b7a: UJMP( , tmp13) 

U3b7c: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U1246
U3b7d: tmp12:= ZEROEXT_DSZ32(0x0000030d) 
U3b7e: tmp12:= BTS_DSZ32(tmp12, 0x00000010) 

U3b80: tmp3:= READURAM( , 0x0012, 64) 
U3b81: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000000d, U1246) !m2 
U3b82: SAVEUIP_REGOVR( , 0x01, U3b84, 0x75c3) !m0 SEQW GOTO U6d0c

U3b84: SAVEUIP( , 0x01, U1246) !m0 SEQW GOTO U3a34
U3b85: tmp13:= MOVEFROMCREG_DSZ64( , 0x2da, 32) !m1 
U3b86: tmp9:= NOTAND_DSZ32(tmp13, tmp9) 

U3b88: tmp13:= READURAM( , 0x005c, 64) 
U3b89: BTUJB_DIRECT_NOTTAKEN(tmp13, 0x00000002, U3b8c) !m0,m1,m2 
U3b8a: NOP SEQW SAVEUIP1 U3b8cSEQW GOTO U141a

U3b8c: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000002, U21c0) !m0,m1 
U3b8d: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000000, U5ca5) !m2 
U3b8e: BTUJNB_DIRECT_NOTTAKEN(tmp9, 0x00000001, U3b90) !m1,m2 SEQW GOTO U31d1

U3b90: SYNCFULL-> MOVETOCREG_AND_DSZ64(tmp9, 0x00000008, 0x2db) !m1,m2 
U3b91: tmp15:= READURAM( , 0x0078, 64) 
U3b92: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000017, U07a5) !m0 

U3b94: tmp9:= AND_DSZ32(0x00600000, tmp15) 
U3b95: tmp9:= SUB_DSZ32(0x00200000, tmp9) 
U3b96: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U3b98) SEQW GOTO U3b99

U3b98: unk_eff() 
U3b99: LFNCEWAIT->MSSTOP-> unk_256() !m1 SEQW GOTO U2792
U3b9a: tmp15:= OR_DSZ32() 

U3b9c: tmp6:= OR_DSZ32() 
U3b9d: tmp1:= SHL_DSZ32(tmp6, 0x00000005) 
U3b9e: tmp1:= OR_DSZ32(tmp15, tmp1) 

U3ba0: tmp1:= SHL_DSZ32(tmp1, 0x0000000f) 
U3ba1: tmp1:= OR_DSZ32(0x00002000, tmp1) 
U3ba2: SAVEUIP_REGOVR(0x01, U3ba4, 0x0002) !m0 SEQW GOTO U32cd

U3ba4: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp1, 0x00000007, 0x3a5) !m0,m1,m2 
U3ba5: tmp2:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 
U3ba6: UJMP( , tmp13) 

U3ba8: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U3ba9: SAVEUIP_REGOVR(0x01, U3baa, 0x00ab) !m0 SEQW GOTO U02ca
U3baa: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000004, 0x005) 

U3bac: LFNCEWAIT-> tmp3:= AND_DSZ8(0x00000020, tmp2) 
U3bad: MSSTOP-> NOP 
U3bae: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U40b4) 

U3bb0: MSSTOP-> NOP SEQW GOTO U3bb0
U3bb1: tmp2:= MOVEFROMCREG_DSZ64( , 0x51b) 
U3bb2: MOVETOCREG_BTR_DSZ64(tmp2, 0x51b) 

U3bb4: tmp0:= READURAM( , 0x004a, 64) 
U3bb5: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x7f6) SEQW SAVEUIP1 U3bb6SEQW GOTO U0164
U3bb6: tmp0:= READURAM( , 0x005c, 64) !m2 

U3bb8: SYNCFULL-> tmp0:= BT_DSZ64(tmp0, 0x00000010) 
U3bb9: tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 
U3bba: tmp2:= SELECTCC_DSZ32_CONDB(tmp0, tmp2) 

U3bbc: tmp10:= AND_DSZ32(0x000f0000, tmp2) 
U3bbd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U0e64) 
U3bbe: tmp2:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 

U3bc0: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000f, U0e64) !m0 
U3bc1: tmp5:= BTS_DSZ32(0x00000000, 0x00000010) SEQW SAVEUIP0 U3bc2SEQW GOTO U5f64
U3bc2: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 

U3bc4: tmp1:= NOTAND_DSZ32(0x00000201, tmp1) 
U3bc5: MOVETOCREG_BTS_DSZ64(tmp1, 0x0000001f, 0x29d) !m0,m1 SEQW GOTO U2ba1
U3bc6: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, FLGS) 

U3bc8: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, 0x7f5) !m2 
U3bc9: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U33e6
U3bca: tmp14:= SAVEUIP(0x01, U33e6) !m0 

U3bcc: tmp11:= RDSEGFLD(CS, FLGS) 
U3bcd: tmp11:= XOR_DSZ32(tmp1, tmp11) 
U3bce: tmp11:= AND_DSZ32(0x00002000, tmp11) 

U3bd0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, tmp14) SEQW URET1
U3bd1: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U0092
U3bd2: LFNCEMARK-> tmp1:= unk_e7b(tmp0, tmp2) 

U3bd4: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp1, tmp1) 
U3bd5: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x7f5) !m2 
U3bd6: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U3bdc

U3bd8: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, FLGS) 
U3bd9: MOVETOCREG_DSZ64(tmp1, 0x7f5) !m2 
U3bda: NOP 

U3bdc: LFNCEWAIT-> LEA_DSZ8_ASZ32_SC1(tmp3) 
U3bdd: rsp:= ADD_DSZN(tmp9, rsp) !m1 SEQW URET0
U3bde: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U20a1

U3be0: LFNCEMARK-> tmp3:= unk_208(0x00000001) 
U3be1: tmp4:= unk_207(0x00080000) SEQW GOTO U099a
U3be2: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 

U3be4: tmpv3:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 
U3be5: BTUJNB_DIRECT_NOTTAKEN(tmpv3, 0x00000000, U3be6) !m1,m2 SEQW GOTO U3be4
U3be6: MOVETOCREG_DSZ64(tmpv2, 0x22c, 32) !m1,m2 

U3be8: MOVETOCREG_DSZ64(tmpv1, 0x22b, 32) !m1,m2 
U3be9: MOVETOCREG_DSZ64(tmpv0, 0x229, 32) !m1,m2 
U3bea: SYNCFULL-> NOP 

U3bec: tmpv3:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 
U3bed: BTUJNB_DIRECT_NOTTAKEN(tmpv3, 0x00000000, U3bee) !m1,m2 SEQW GOTO U3bea
patch_handle_0x05_write_stgbuf:
U3bee: URET(0x01) !m0 

U3bf0: FETCHFROMEIP1_ASZ64( , tmp8) 
U3bf1: tmp2:= READURAM( , 0x0072, 64) 
U3bf2: tmp0:= READURAM( , 0x0013, 64) 

U3bf4: tmp0:= BT_DSZ32(tmp0, 0x00000010) 
U3bf5: tmp0:= CMOVCC_DSZ32_CONDNB(tmp0, 0x0000003f) 
U3bf6: SYNCWAIT-> BTUJB_DIRECT_NOTTAKEN(tmp2, U3bf8, tmp0) !m1,m2 SEQW GOTO U008e

U3bf8: tmp5:= ZEROEXT_DSZ64(tmp8) SEQW GOTO U1916
U3bf9: LFNCEMARK-> tmp14:= unk_e6b(tmp0, tmp2) !m1 
U3bfa: tmp15:= MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x7f5) 

U3bfc: tmp14:= MOVEMERGEFLGS_DSZ32(0x00001dd4, tmp14) 
U3bfd: tmp1:= AND_DSZ32(0x00000800, tmp12) 
U3bfe: tmp12:= SELECTCC_DSZ32_CONDZ(tmp1, tmp12) 

U3c00: tmp3:= ZEROEXT_DSZ16(tmp13, tmp12) 
U3c01: SAVEUIP( , 0x01, U068e) !m0 
U3c02: tmp14:= CMOVCC_DSZ32_CONDO(tmp14, 0x00002e42) 

U3c04: UFLOWCTRL(tmp8, tmp14, URET1) 
U3c05: tmp7:= NOTAND_DSZ32(0x00000040, tmp7) 
U3c06: tmp7:= OR_DSZ32(0x00000400, tmp7) 

U3c08: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U3c0c
U3c09: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, BASE) 
U3c0a: MOVETOCREG_DSZ64(tmp1, 0x78e) 

U3c0c: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, LIMIT) 
U3c0d: MOVETOCREG_DSZ64(tmp1, 0x410) 
U3c0e: tmp1:= ADD_DSZ32(0x00000001, tmp1) 

U3c10: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x700) SEQW URET1
U3c11: SAVEUIP_REGOVR(0x01, U3c12, 0x0008) !m0 SEQW GOTO U2b0d
U3c12: tmp0:= READURAM( , 0x004f, 64) 

U3c14: tmp1:= MOVEFROMCREG_DSZ64( , 0x516) 
U3c15: tmp2:= AND_DSZ64(0xffffffff, tmp0) 
U3c16: MOVETOCREG_OR_DSZ64(tmp1, 0x516, tmp2) 

U3c18: tmp1:= MOVEFROMCREG_DSZ64( , 0x517) 
U3c19: tmp2:= SHR_DSZ64(tmp0, 0x00000020) 
U3c1a: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp1, 0x517, tmp2) SEQW SAVEUIP1 U3c1cSEQW GOTO U0164

U3c1c: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U3c1d) !m1,m2 SEQW GOTO U30da
U3c1d: tmp13:= READUIP_REGOVR(0x00) 
U3c1e: unk_963( , 0xffffffffffff012b) !m2 

U3c20: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x070) !m0,m2 SEQW GOTO U30da
U3c21: tmp0:= AND_DSZ32(0x00000002, tmp2) 
U3c22: tmp0:= SHR_DSZ32(tmp0, 0x00000001) 

U3c24: rax:= ZEROEXT_DSZ32(tmp0) 
U3c25: tmp2:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x50000000) 
U3c26: tmp2:= CONCAT_DSZ32(0x0000357a, tmp2) 

U3c28: MOVETOCREG_DSZ64(tmp2, 0x2c0, 32) !m1 
U3c29: tmp1:= MOVEFROMCREG_DSZ64( , 0x38e, 32) !m1 
U3c2a: tmp2:= SELECTCC_DSZ32_CONDNZ(tmp0, 0x00000800) 

U3c2c: tmp1:= NOTAND_DSZ32(tmp2, tmp1) 
U3c2d: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U2014
U3c2e: tmp2:= ZEROEXT_DSZ32(tmp1) 

U3c30: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1 
U3c31: tmp0:= NOTAND_DSZ32(0xf8000000, tmp0) 
U3c32: tmp0:= NOTAND_DSZ32(0x00000040, tmp0) 

U3c34: tmp1:= OR_DSZ32(tmp0, 0x10000000) 
U3c35: tmp0:= OR_DSZ32(tmp1, 0x50000000) 
U3c36: SAVEUIP( , 0x01, U2012) !m0 SEQW SAVEUIP0 U3c38SEQW GOTO U2a29

U3c38: SYNCFULL-> tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1,m2 
U3c39: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000005, U1db2) !m2 SEQW GOTO U3c38
U3c3a: tmp3:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 

U3c3c: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x00000002) 
U3c3d: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x0000000a) 
U3c3e: tmp4:= ADD_DSZ64(0x00000012, tmp4) 

U3c40: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U3c45) !m1,m2 
U3c41: tmp7:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp3) 
U3c42: tmp7:= AND_DSZ64(tmp5, tmp7) 

U3c44: tmp6:= OR_DSZ64(tmp6, tmp7) 
U3c45: STADSTGBUF_DSZ64_ASZ16_SC1(tmp3,  , tmp6) 
U3c46: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U3c3a

U3c48: NOP SEQW GOTO U1f9a
U3c49: tmp2:= ZEROEXT_DSZ32(tmp5) 
U3c4a: WRITEURAM(tmp2, 0x0064, 64) !m2 

U3c4c: tmp2:= SHR_DSZ64(tmp5, 0x00000020) 
U3c4d: LFNCEMARK-> WRITEURAM(tmp2, 0x0065, 64) !m2 SEQW SAVEUIP1 U3c4eSEQW GOTO U2178
U3c4e: WRITEURAM(tmp2, 0x0062, 64) 

U3c50: tmp2:= TESTUSTATE( , UCODE, !0x0800) !m0 ? SEQW GOTO U3c52
U3c51: tmp2:= ZEROEXT_DSZ32(0x00000010) 
U3c52: WRITEURAM(tmp2, 0x0063, 64) 

U3c54: mm2:= unk_7ea(0x00000000) 
U3c55: mm5:= unk_72a(0x00000000) 
U3c56: tmp5:= SHL_DSZ32(tmp5, 0x00000011) 

U3c58: tmp2:= OR_DSZ32(tmp5, tmp2) 
U3c59: tmp2:= SHL_DSZ32(tmp2, 0x00000004) 
U3c5a: mm5:= unk_7e8(0x00000000) 

U3c5c: tmp2:= OR_DSZ32(tmp5, tmp2) 
U3c5d: WRITEURAM(tmp2, 0x0066, 64) 
U3c5e: mm5:= unk_73a() 

U3c60: tmp2:= MOVEFROMCREG_DSZ64( , 0x06a) 
U3c61: tmp2:= CONCAT_DSZ16(tmp2, tmp5) 
U3c62: WRITEURAM(tmp2, 0x0067, 64) SEQW GOTO U11b6

U3c64: tmp7:= BTS_DSZ64(0x00000000, 0x0000003f) 
U3c65: tmm0:= unk_744(mm7) 
U3c66: tmp11:= ZEROEXT_DSZ32(0x000022e2) 

U3c68: tmm7:= XORPD(tmm5, tmm0) 
U3c69: tmp11:= MOVEINSERTFLGS_DSZ32(0x00000001, tmp11) 
U3c6a: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U5bd4

U3c6c: tmp13:= ZEROEXT_DSZ64(0x000043c4) SEQW GOTO U42ea
U3c6d: tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U3c6e: tmp10:= BTS_DSZ32(tmp0, 0x00000010) 

U3c70: BTUJB_DIRECT_NOTTAKEN(tmp13, 0x00000015, U3c71) !m1,m2 SEQW GOTO U3c74
U3c71: tmp10:= READURAM( , 0x0009, 64) 
FUN_ucode_0003c72:
U3c72: tmp10:= SHR_DSZ64(tmp10, 0x00000020) 

U3c74: tmp15:= AND_DSZ32(0x0000003f, tmp13) 
U3c75: tmp15:= SUB_DSZ32(0x0000001e, tmp15) 
U3c76: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U3c78) SEQW GOTO U3c79

U3c78: tmp10:= ZEROEXT_DSZ32(tmp0) 
U3c79: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x7fe) !m2 SEQW SAVEUIP1 U3c7aSEQW GOTO U2904
U3c7a: tmp3:= MOVEFROMCREG_DSZ64( , 0x512) 

U3c7c: tmp5:= ZEROEXT_DSZ32(0x00003c7e) 
U3c7d: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4840
U3c7e: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x005) !m2 

U3c80: tmp2:= MOVEFROMCREG_DSZ64( , 0x518) 
U3c81: tmp2:= BTR_DSZ64(tmp2, 0x00000028) 
U3c82: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp2, U3c84) SEQW GOTO U3c88

U3c84: tmp9:= NOTAND_DSZ32(0xfffffffffffff000, tmp12) 
U3c85: tmp2:= AND_DSZ64(0xfffffffffffff000, tmp2) 
U3c86: tmp2:= OR_DSZ64(tmp9, tmp2) 

U3c88: tmp9:= ZEROEXT_DSZ64(tmp12) 
U3c89: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000000a, U2b31) !m0,m1 
U3c8a: LFNCEWAIT-> tmp3:= AND_DSZ32(0x000009bf, tmp3) SEQW GOTO U2cdc

U3c8c: tmp2:= BTS_DSZ32(tmp2, 0x00000012) 
U3c8d: PORTOUT_DSZ32_ASZ16_SC1(0x50d8,  , tmp2) !m2 
U3c8e: SAVEUIP_REGOVR(0x01, U3c90, 0x0001) !m0 SEQW GOTO U6074

U3c90: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U6bb4
U3c91: NOP 
U3c92: NOP 

U3c94: tmp3:= ZEROEXT_DSZ32(0x00006bb4) SEQW GOTO U06ce
U3c95: tmp0:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 
U3c96: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U3a62) !m1,m2 

U3c98: tmp0:= READURAM( , 0x0015, 64) 
U3c99: tmp6:= AND_DSZ64(tmp7, tmp2) 
U3c9a: tmp12:= SUB_DSZ64(0x00000001, tmp1) 

U3c9c: tmp15:= ADD_DSZ64(tmp0, tmp12) 
U3c9d: tmp15:= AND_DSZ64(tmp7, tmp15) 
U3c9e: CMPUJNZ_DIRECT_NOTTAKEN(tmp6, U3a61, tmp15) !m1,m2 

U3ca0: tmp6:= CONCAT_DSZ32(rdx, rax) 
U3ca1: tmp6:= ADD_DSZN(tmp8, tmp6) !m1 
U3ca2: tmp15:= ADD_DSZN(tmp12, tmp6) !m1 

U3ca4: tmp15:= TEST_DSZ64(tmp15, tmp15) 
U3ca5: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U3a61) 
U3ca6: tmp3:= SUB_DSZ64(tmp11, tmp6) 

U3ca8: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp3, U3cad) 
U3ca9: tmp8:= ADD_DSZ64(tmp1, tmp6) 
U3caa: tmp3:= SUB_DSZ64(tmp5, tmp8) 

U3cac: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp3, U3a61) 
U3cad: LFNCEMARK-> tmp12:= ZEROEXT_DSZ32() 
U3cae: MOVETOCREG_DSZ64(0x00000015, 0x000) !m2 

U3cb0: LFNCEWAIT-> tmp8:= unk_fc6(tmp6, tmp12) 
U3cb1: tmp8:= unk_ece(tmp0, tmp12) 
U3cb2: tmp12:= ADD_DSZ32(0x00000010, tmp12) 

U3cb4: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp12, U3cb5, tmp1) !m1,m2 SEQW GOTO U3cb0
U3cb5: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 
U3cb6: tmp8:= ADD_DSZ64(tmp1, tmp0) 

U3cb8: tmp3:= SUB_DSZ64(tmp11, tmp0) 
U3cb9: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp3, U3cbd) 
U3cba: tmp3:= SUB_DSZ64(tmp5, tmp8) 

FUN_ucode_0003cbc:
U3cbc: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp3, U3a61) 
U3cbd: tmp6:= AND_DSZ64(tmp7, tmp2) 
U3cbe: tmp3:= AND_DSZ64(tmp7, tmp0) 

U3cc0: CMPUJNZ_DIRECT_NOTTAKEN(tmp6, U3a61, tmp3) !m1,m2 
U3cc1: tmp3:= AND_DSZ64(tmp7, tmp8) 
U3cc2: CMPUJNZ_DIRECT_NOTTAKEN(tmp6, U3a61, tmp3) !m1,m2 

U3cc4: tmp6:= ADD_DSZ64(tmp1, tmp0) 
U3cc5: tmp14:= MOVEFROMCREG_DSZ64( , 0x51b) 
U3cc6: tmp14:= ZEROEXT_DSZ16(0x00001000, tmp14) 

U3cc8: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000008) 
U3cc9: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000000, U6950) !m1 
U3cca: tmp11:= READURAM( , 0x0046, 64) 

U3ccc: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, mode=0x01,  , tmp11) 
U3ccd: tmp11:= READURAM( , 0x0047, 64) 
U3cce: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, 0x00000008, mode=0x01,  , tmp11) 

U3cd0: tmp11:= READURAM( , 0x0048, 64) 
U3cd1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, 0x00000010, mode=0x01,  , tmp11) 
U3cd2: tmp11:= READURAM( , 0x002c, 64) 

U3cd4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, 0x00000018, mode=0x01,  , tmp11) 
U3cd5: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000120,  , tmp4) 
U3cd6: tmp13:= SUB_DSZ32(0x00000020, tmp1) 

U3cd8: tmp13:= STC(tmp13) 
U3cd9: tmp15:= CONCAT_DSZ32(0x00000001, tmp13) 
U3cda: WRITEURAM(tmp15, 0x008e, 64) !m2 SEQW GOTO U69b6

U3cdc: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp9, tmp7) 
U3cdd: tmp9:= ZEROEXT_DSZ32(0x00000090) 
U3cde: tmp9:= CONCAT_DSZ16(0x00000013, tmp9) 

U3ce0: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp9) 
U3ce1: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U3ce2: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U0856) 

U3ce4: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U3ce0, tmp7) !m1,m2 SEQW GOTO U0856
U3ce5: tmp13:= BT_DSZ64(tmp13, 0x00000023) 
U3ce6: tmp13:= SELECTCC_DSZ32_CONDNB(tmp13, 0x00000001) 

U3ce8: tmp13:= XOR_DSZ32(tmp3, tmp13) 
U3ce9: tmp12:= MOVEINSERTFLGS_DSZ64(0x00000001, tmp12) 
U3cea: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp13, U3cfa) 

U3cec: tmp12:= MOVEINSERTFLGS_DSZ64( , tmp12) 
U3ced: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3cf8
U3cee: tmp13:= READURAM( , 0x001f, 64) 

U3cf0: tmp3:= SHR_DSZ64(tmp13, 0x0000002a) 
U3cf1: ROVR<- tmp13:= SHR_DSZ64(tmp13, 0x00000025) SEQW SAVEUIP0 U3cf2SEQW GOTO U1b08
U3cf2: tmp13:= BT_DSZ64(tmp13, 0x00000038) 

U3cf4: tmp13:= SELECTCC_DSZ32_CONDNB(tmp13, 0x00000001) 
U3cf5: tmp13:= XOR_DSZ32(tmp3, tmp13) 
U3cf6: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp13, U3cf8) SEQW GOTO U3cfa

U3cf8: WRITEURAM(tmp12, 0x001e, 64) !m2 
U3cf9: SYNCFULL-> SIGEVENT( , 0x000000d9) 
U3cfa: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x005) !m2 

U3cfc: tmp13:= SELECTCC_DSZ32_CONDNB(tmp12, 0x00020000) 
U3cfd: tmp9:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U3cfe: MOVETOCREG_BTS_DSZ64(tmp9, 0x00000010, 0x7fe) !m2 

U3d00: tmp5:= ZEROEXT_DSZ32(0x00003d02) 
U3d01: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4840
U3d02: tmp2:= ZEROEXT_DSZ16(0x0000000e) 

U3d04: tmp1:= ZEROEXT_DSZ64(tmp12) 
U3d05: tmp2:= CONCAT_DSZ8(0x0000000b, tmp2) 
U3d06: tmp4:= ZEROEXT_DSZ32(tmp11) 

U3d08: tmp14:= MOVEFROMCREG_DSZ64( , 0x067) 
U3d09: tmp0:= MOVEFROMCREG_DSZ64( , 0x065) 
U3d0a: tmp6:= SUB_DSZN(tmp0, tmp14) !m1 SEQW GOTO U6a45

U3d0c: WRITEURAM(tmp0, 0x000e, 32) 
U3d0d: TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U06ee
U3d0e: NOP 

U3d10: tmp0:= ZEROEXT_DSZ32(0x00000006) SEQW SAVEUIP0 U3d11SEQW GOTO U5971
U3d11: tmp0:= READURAM( , 0x000e, 64) 
U3d12: tmp0:= CONCAT_DSZ16(0x00000100, tmp0) 

U3d14: tmp15:= MOVEFROMCREG_DSZ64( , 0x692) 
U3d15: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp15, 0x692) !m2 SEQW GOTO U079e
U3d16: tmp1:= ZEROEXT_DSZ32(0x00000030) 

U3d18: tmp9:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U3d19: MOVETOCREG_BTS_DSZ64(tmp9, 0x00000005, 0x29d) !m1,m2 
U3d1a: LFNCEWAIT-> PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , tmp1) !m2 

U3d1c: SAVEUIP_REGOVR(0x01, U3d1d, 0x0000) !m0 SEQW GOTO U2b0d
U3d1d: tmp1:= READURAM( , 0x000f, 64) 
U3d1e: tmp1:= AND_DSZ32(0x00000070, tmp1) 

U3d20: tmp1:= SUB_DSZ32(0x00000030, tmp1) 
U3d21: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3d22) SEQW GOTO U3d25
U3d22: tmp1:= MOVEFROMCREG_DSZ64( , 0x2c2, 32) !m1 

U3d24: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000005, 0x2c2) !m1 
U3d25: SIGEVENT( , 0x000000b2) SEQW UEND2
U3d26: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U3fe9

U3d28: tmp2:= unk_207(0x000000f5) 
U3d29: tmp3:= ZEROEXT_DSZ32(0xffffffffffffffff) SEQW GOTO U09a2
U3d2a: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 

FUN_ucode_0003d2c:
U3d2c: SYNCMARK-> MOVETOCREG_SHR_DSZ64(tmp0, 0x00000009, 0x6c5) 
U3d2d: NOP 
U3d2e: NOP 

U3d30: SYNCWAIT-> TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U0664
U3d31: NOP 
U3d32: NOP 

U3d34: tmp14:= SAVEUIP(0x01, U0664) !m0 SEQW GOTO U5d81
U3d35: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000e, U60c9) !m0,m1 
ldat_read_arr6:
U3d36: tmp7:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_13, mode=0x0a) !m0,m1 

U3d38: tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0 
U3d39: LFNCEMARK-> tmp3:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 
U3d3a: tmp5:= ZEROEXT_DSZ32N(0x003f7700) !m1 

U3d3c: TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW GOTO U3d40
U3d3d: tmp5:= unk_20d(0x00000200) 
U3d3e: tmp5:= OR_DSZN(0x00254500, tmp5) !m1 

U3d40: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U3d4e
U3d41: tmp5:= unk_203(0x00257700, tmp5) 
U3d42: tmp5:= ZEROEXT_DSZ32N(tmp5) !m1 

U3d44: tmp5:= unk_207(0x00084400, tmp5) 
U3d45: tmp0:= unk_207(tmp7) 
U3d46: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000008, U2711) !m1 

U3d48: tmp0:= SHL_DSZ32(tmp7, 0x0000000a) 
U3d49: tmp0:= unk_207(tmp0, tmp7) 
U3d4a: tmp0:= AND_DSZ32(0x00080000, tmp0) 

U3d4c: tmp7:= NOTAND_DSZ32(0x00080000, tmp7) 
U3d4d: tmp7:= OR_DSZ32(tmp7, tmp0) 
U3d4e: unk_13f(tmp7) !m2 

U3d50: tmp7:= AND_DSZ32(tmp5, tmp7) 
U3d51: tmp5:= NOTAND_DSZ32(tmp5, tmp10) 
patch_handle_0x10_mailboxes:
U3d52: tmp7:= OR_DSZ32(tmp5, tmp7) 

U3d54: tmp13:= SAVEUIP(0x00, U33e5) 
U3d55: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U5fc4
U3d56: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp7, 0x00000011, 0x7fe) 

U3d58: tmp14:= SAVEUIP(0x01, U356e) !m0 SEQW GOTO U2c01
U3d59: tmp9:= ZEROEXT_DSZ32(0x0000010a) 
U3d5a: LFNCEWAIT-> tmp12:= MOVEFROMCREG_DSZ64( , tmp9) 

U3d5c: BTUJB_DIRECT_NOTTAKEN(tmp12, 0x0000003f, U3d84) !m0,m1,m2 
U3d5d: ROVR<- tmp12:= ZEROEXT_DSZ64( , 0x00008321) SEQW SAVEUIP1 U3d5e
U3d5e: tmp8:= READURAM( , 0x0010, 64) 

U3d60: tmp1:= AND_DSZ32(tmp8, tmp10) 
U3d61: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2b29) 
U3d62: tmp1:= READURAM( , 0x002b, 64) 

U3d64: tmp1:= SHL_DSZ32(tmp1, 0x00000003) 
U3d65: tmp3:= ADD_DSZ64(tmp1, tmp10) 
U3d66: tmp8:= NOTAND_DSZ64(tmp8, 0xffffffffffffffff) SEQW SAVEUIP1 U3d68SEQW GOTO U6d78

U3d68: LFNCEWAIT-> tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp3) 
U3d69: SAVEUIP_REGOVR( , 0x01, U3d6a, 0x8321) !m0 SEQW GOTO U5761
U3d6a: tmp1:= READURAM( , 0x002b, 64) 

U3d6c: tmp1:= ADD_DSZ32(0x00000001, tmp1) 
U3d6d: tmp1:= AND_DSZ32(0x01ffffff, tmp1) 
U3d6e: LFNCEMARK-> WRITEURAM(tmp1, 0x002b, 32) !m2 

U3d70: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000000, U3d7c) !m1,m2 
U3d71: tmp3:= NOTAND_DSZ64(0x00000fff, tmp3) SEQW SAVEUIP1 U3d72SEQW GOTO U6d75
U3d72: tmp10:= MOVETOCREG_DSZ64(tmp3, 0x108) !m2 

U3d74: tmp12:= BTS_DSZ64(tmp12, 0x0000003d) 
U3d75: WRITEURAM( , 0x00000000, 0x002b, 32) !m2 
U3d76: LFNCEWTMRK-> tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp3) 

U3d78: SAVEUIP_REGOVR( , 0x01, U3d79, 0x8321) !m0 SEQW GOTO U5761
U3d79: tmp1:= ZEROEXT_DSZ32(0x00000001) 
U3d7a: WRITEURAM(tmp1, 0x002b, 32) !m2 

U3d7c: LFNCEMARK-> tmp12:= OR_DSZ64(tmp3, tmp12) 
U3d7d: tmp8:= AND_DSZ64(0x000003c0, tmp3) 
U3d7e: tmp8:= SHR_DSZ64(tmp8, 0x00000006) 

U3d80: tmp3:= NOTAND_DSZ64(0x00000fff, tmp3) SEQW SAVEUIP1 U3d81SEQW GOTO U6d66
U3d81: tmp12:= BTS_DSZ64(tmp12, 0x0000003f) 
U3d82: MOVETOCREG_DSZ64(tmp12, tmp9) !m2 

U3d84: tmp1:= SUB_DSZ32(0x00000109, tmp9) 
U3d85: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U304e) SEQW GOTO U3d59
U3d86: SYNCFULL-> tmp5:= MOVEFROMCREG_DSZ64( , 0x6c5) 

U3d88: FETCHFROMEIP1_ASZ64( , tmp3) !m1 
U3d89: LFNCEWAIT-> SIGEVENT( , 0x00000043) 
U3d8a: MSLOOP-> MJMPTARGET_INDIRECT_ASZ64( , tmp3) !m1 

U3d8c: LFNCEMARK-> SAVEUIP( , 0x00, U2792) 
U3d8d: NOP 
U3d8e: NOP 

U3d90: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x000) SEQW GOTO U0d54
U3d91: mm0:= unk_7ea(0x00000000) 
U3d92: tmm3:= unk_624(0x00000000) 

U3d94: tmp1:= PINTMOVDTMM2I_DSZ32(tmm3) 
U3d95: tmp1:= AND_DSZ32(0x00000004, tmp1) 
U3d96: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U3025) 

U3d98: tmp1:= SUB_DSZ32(0x0001003e, tmp0) 
U3d99: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp1, U5a82) 
U3d9a: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U3d9c: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U3d9d: LFNCEMARK-> tmp4:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000020, 0x48c) !m2 
U3d9e: tmp1:= AND_DSZ32(0x00000020, tmp5) 

U3da0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3da1) SEQW GOTO U3da4
U3da1: tmp1:= OR_DSZ16(0x00008080, tmp4) 
U3da2: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x48c) 

U3da4: tmp1:= SUB_DSZ32(0x0000ffbb, tmp0) 
U3da5: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U3025) 
U3da6: tmp9:= unk_6a0() 

U3da8: tmp10:= unk_6a0() 
U3da9: tmm0:= unk_6a7(tmm1, tmm0) 
U3daa: mm2:= unk_76a(tmm0) 

U3dac: tmm0:= unk_69d( , tmm0) 
U3dad: tmp15:= FCOM2(tmp10, tmp8) 
U3dae: tmp1:= SHR_DSZ32(tmp8, 0x00000002) 

U3db0: tmp1:= AND_DSZ32(0x00000001, tmp1) 
U3db1: tmp2:= ADD_DSZ32(tmp1, tmp2) 
U3db2: SAVEUIP( , 0x00, U6df2) 

U3db4: tmp9:= unk_6a0() 
U3db5: tmm1:= unk_6c9(tmm0, tmm1) 
U3db6: tmm2:= unk_57f(tmm7, tmm0) 

U3db8: tmm0:= unk_487(tmm2, tmm1) 
U3db9: mm1:= unk_76a(tmm7) 
U3dba: tmp0:= SHR_DSZ32(tmp1, 0x00000003) 

U3dbc: tmp1:= OR_DSZ32(tmp1, tmp0) 
U3dbd: tmp1:= AND_DSZ32(0x00000001, tmp1) 
U3dbe: tmp2:= ADD_DSZ32(tmp1, tmp2) SEQW URET0

U3dc0: SYNCWAIT-> tmp8:= unk_cc6(rsi, tmp1) !m0 
U3dc1: tmp8:= unk_c8e(rdi, tmp1) !m0 
U3dc2: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, IMM_MACRO_01) !m0 

U3dc4: tmp8:= unk_cc6(rsi, tmp1) !m0 
U3dc5: tmp8:= unk_c8e(rdi, tmp1) !m0 
U3dc6: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U3dc0

U3dc8: tmp15:= SUB_DSZN(tmp4) !m1 
U3dc9: tmp15:= SHL_DSZ32(tmp15, 0x00000004) SEQW GOTO U1ba6
U3dca: LFNCEMARK-> tmp3:= READURAM( , 0x0057, 64) 

U3dcc: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp3, 0x2c0, 32) !m1 
U3dcd: tmp3:= READURAM( , 0x0056, 64) 
U3dce: MOVETOCREG_DSZ64(tmp3, 0x2c1, 32) !m1 

U3dd0: tmp3:= ZEROEXT_DSZ64(0xffffffffffffffff) 
U3dd1: WRITEURAM(tmp3, 0x0062, 64) !m2 
U3dd2: tmp3:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U3dd4: SYNCFULL-> tmp3:= MOVETOCREG_BTS_DSZ64(tmp3, 0x00000008, 0x6c3) !m2 
U3dd5: NOP SEQW GOTO U11b6
U3dd6: tmp8:= ZEROEXT_DSZ32(0x00030600) 

U3dd8: MOVETOCREG_DSZ64(tmp8, 0x6a1) !m2 
U3dd9: tmp8:= SHR_DSZ64(tmp14, 0x00000030) 
U3dda: tmp8:= SUB_DSZ32(0x00007c00, tmp8) 

U3ddc: tmp8:= MOVETOCREG_DSZ64(tmp8, 0x6a0) !m2 
U3ddd: tmp12:= SHR_DSZ32(tmp14, 0x00000010) 
U3dde: SYNCMARK-> UFLOWCTRL( , tmp12, MSLOOPCTR) 

U3de0: tmp13:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp14) 
U3de1: tmp8:= UFLOWCTRL(tmp8, tmp13, LDAT_IN) 
U3de2: tmp14:= ADD_DSZ16(0x00000020, tmp14) 

U3de4: SYNCWAIT-> tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U3de0
U3de5: tmp14:= SHR_DSZ64(tmp14, 0x00000020) 
U3de6: UJMP( , tmp14) 

U3de8: tmp1:= LDZX_DSZN_ASZ32_SC1(rdi, mode=0x08) !m1 
U3de9: tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 
U3dea: tmp4:= SUB_DSZN(0x00000001, tmp4) !m1 

U3dec: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 
U3ded: rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 
U3dee: MSLOOP-> tmp10:= SUB_DSZN(tmp1, tmp0) !m1 

U3df0: UJMPCC_DIRECT_TAKEN_CONDZ(tmp10, U0464) 
U3df1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U0464) SEQW GOTO U3de8
U3df2: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000001, 0x289) !m1,m2 

U3df4: LFNCEWTMRK-> tmpv1:= MOVEFROMCREG_DSZ64( , 0x289, 32) !m1 
U3df5: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000000, U3df6) !m1,m2 SEQW GOTO U3df4
U3df6: tmpv1:= MOVEFROMCREG_DSZ64( , 0x39e, 32) !m1 

U3df8: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
U3df9: tmpv0:= AND_DSZ32(0x000000fe, tmpv1) 
check_cpl_uend3:
U3dfa: tmpv0:= OR_DSZ32(0x00000001, tmpv0) 

U3dfc: tmpv1:= BT_DSZ32(tmpv1, 0x00000008) 
U3dfd: tmpv0:= MOVEMERGEFLGS_DSZ64(tmpv0, tmpv1) 
U3dfe: tmpv1:= BT_DSZ32(tmpv1, 0x00000016) SEQW URET1

U3e00: tmp12:= READURAM( , 0x0056, 64) 
U3e01: tmp7:= ADD_DSZ64(0x00000001, tmp12) 
U3e02: TESTUSTATE( , SYS, !UST_VMX_DIS | UST_USER_MODE | UST_SMM | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U53b0

U3e04: tmp4:= ADD_DSZ32(tmp8, 0x00000003) 
U3e05: tmp13:= SAVEUIP(0x00, U53b0) 
U3e06: TESTUSTATE( , SYS, UST_VMX_DIS | UST_VMX_OP_DIS) !m1 ? SEQW GOTO U2769

U3e08: SAVEUIP_REGOVR(0x01, U3e09, 0x0064) !m0 
U3e09: SAVEUIP( , 0x01, U6002) !m0 SEQW GOTO U1c7a
U3e0a: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x221, 32) !m1 

U3e0c: tmp12:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
U3e0d: tmp12:= AND_DSZ32(0x00000070, tmp12) 
U3e0e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp12, U1a1d) 

U3e10: tmp0:= SHR_DSZ32(tmp11, 0x00000010) 
U3e11: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U3e12: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000006, U6209) !m0,m1 

U3e14: tmp0:= AND_DSZ32(0x00000007, tmp11) 
U3e15: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000003, U6209) !m0,m1 
U3e16: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U3e18) SEQW SAVEUIP1 U3e18SEQW GOTO U3130

U3e18: SAVEUIP( , 0x01, U6209) !m0 SEQW GOTO U0a95
U3e19: tmp13:= SHR_DSZ32(tmp10, 0x00000003) 
U3e1a: tmp13:= AND_DSZ32(0x00000078, tmp13) 

U3e1c: tmp13:= OR_DSZ32(0x00523700, tmp13) 
U3e1d: tmp14:= SELECTCC_DSZ32_CONDB(tmp8, 0x00000080) 
U3e1e: tmp13:= OR_DSZ32(tmp13, tmp14) 

U3e20: tmp2:= AND_DSZ32(0x0000003f, tmp10) 
U3e21: tmp2:= OR_DSZ32(tmp1, tmp2) 
U3e22: tmp2:= UFLOWCTRL(tmp2, tmp2, USTATE) 

U3e24: UFLOWCTRL(tmp2, tmp13, URET0) 
U3e25: tmp1:= AND_DSZ32(0x00000004, tmp10) 
U3e26: tmp1:= SHL_DSZ64(tmp1, 0x00000021) 

U3e28: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp1, 0x752) 
U3e29: tmp14:= SHR_DSZ32(tmp10, 0x00000016) 
U3e2a: tmp14:= AND_DSZ32(0x000003fc, tmp14) 

U3e2c: tmp14:= OR_DSZ32(0x00523000, tmp14) 
U3e2d: SYNCWTMRK-> UFLOWCTRL(tmp2, tmp14, URET1) 
U3e2e: tmp2:= AND_DSZ32(0x3ffff000, tmp8) 

U3e30: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2711) 
U3e31: tmp10:= SHR_DSZ32(tmp10, 0x0000000a) 
U3e32: tmp12:= OR_DSZ32(0x0000c000, tmp8) 

U3e34: tmp12:= MSR2CR( , tmp12) 
U3e35: tmp2:= OR_DSZ32(0x00014000, tmp8) 
U3e36: tmp2:= MSR2CR( , tmp2) 

U3e38: tmp12:= CONCAT_DSZ32(tmp2, tmp12) 
U3e39: tmp1:= ZEROEXT_DSZ32(0x00100408) 
U3e3a: tmp1:= CONCAT_DSZ32(0x90810200, tmp1) 

U3e3c: tmp3:= READURAM( , 0x0035, 64) 
U3e3d: tmp3:= AND_DSZ64(tmp1, tmp3) 
U3e3e: tmp1:= ZEROEXT_DSZ32(0x020b8000) 

U3e40: tmp1:= CONCAT_DSZ32(0x003c491c, tmp1) 
U3e41: tmp2:= READURAM( , 0x0077, 64) 
U3e42: tmp1:= AND_DSZ64(tmp1, tmp2) 

U3e44: tmp2:= BTR_DSZ64(tmp1, 0x00000023) 
U3e45: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U3e4e
U3e46: tmp2:= BTC_DSZ64(tmp1, 0x00000023) 

U3e48: tmp1:= READURAM( , 0x0023, 64) 
U3e49: tmp1:= AND_DSZ32(0x00000040, tmp1) 
U3e4a: tmp3:= OR_DSZ64(tmp1, tmp3) 

U3e4c: TESTUSTATE( , UCODE, 0x0800) ? SEQW GOTO U3e4e
U3e4d: tmp3:= BTS_DSZ64(tmp3, 0x0000003d) 
U3e4e: tmp3:= OR_DSZ64(tmp2, tmp3) 

U3e50: tmp3:= XOR_DSZ64(0x00020008, tmp3) 
U3e51: tmp2:= AND_DSZ32(0x00003fff, tmp10) 
U3e52: tmp2:= SHL_DSZ32(tmp2, 0x00000002) SEQW URET0

U3e54: tmp6:= ZEROEXT_DSZ32(0x00010008) 
U3e55: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U3574
U3e56: tmp5:= MOVE_DSZ64(rsp, rsp) !m1 

U3e58: rsp:= ADD_DSZN(tmp9, rsp) !m1 
U3e59: tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0 
U3e5a: LFNCEMARK-> rsp:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 

U3e5c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp11, 0x79e) !m2 
U3e5d: tmp14:= SAVEUIP(0x01, U3bc6) !m0 SEQW GOTO U2c01
U3e5e: tmp1:= ZEROEXT_DSZ32(0x00000005) 

U3e60: tmp2:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 
U3e61: SAVEUIP_REGOVR(0x01, U3e62, 0x0321) !m0 SEQW GOTO U5e02
U3e62: tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 

U3e64: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000002) 
U3e65: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000006) 
U3e66: tmp5:= AND_DSZ32(tmp2, tmp5) 

U3e68: tmp5:= OR_DSZ32(tmp3, tmp5) 
U3e69: tmp1:= ZEROEXT_DSZ32(0x00000007) 
U3e6a: SAVEUIP_REGOVR(0x01, U3e6c, 0x0351) !m0 SEQW GOTO U5e02

U3e6c: tmp4:= ADD_DSZ32(0x0000000a, tmp4) 
U3e6d: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U3e5e
U3e6e: NOP 

U3e70: NOP SEQW GOTO U1f9a
U3e71: tmp3:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U3e72: tmp3:= ADD_DSZN(tmp3, tmp4) !m1 

U3e74: tmp14:= BT_DSZ32(tmp14, 0x00000013) 
U3e75: tmp11:= READURAM( , 0x006e, 64) 
U3e76: tmp11:= MOVEMERGEFLGS_DSZ64(tmp11, tmp14) 

U3e78: tmp3:= CMOVCC_DSZ64_CONDB(tmp11, tmp3) 
U3e79: tmp14:= BT_DSZ32(tmp14, 0x00000018) 
U3e7a: tmp11:= READURAM( , 0x004a, 64) 

U3e7c: tmp11:= MOVEMERGEFLGS_DSZ64(tmp11, tmp14) 
U3e7d: tmp3:= CMOVCC_DSZ64_CONDB(tmp11, tmp3) 
U3e7e: tmp0:= SUB_DSZ32(0x00000003, tmp2) 

U3e80: tmp11:= MOVEFROMCREG_DSZ64( , 0x065) 
U3e81: tmp11:= SELECTCC_DSZ32_CONDNZ(tmp0, tmp11) 
U3e82: tmp3:= SUB_DSZN(tmp11, tmp3) !m1 

U3e84: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp3, 0x71a) 
U3e85: WRITEURAM(tmp3, 0x003f, 64) 
U3e86: MOVETOCREG_DSZ64(tmp7, 0x00b) 

U3e88: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3e95
U3e89: tmp1:= CONCAT_DSZ32(tmp13, tmp1) 
U3e8a: WRITEURAM(tmp1, 0x0046, 64) 

U3e8c: tmp14:= MOVETOCREG_BTS_DSZ64(tmp14, 0x00000015, 0x000) 
U3e8d: tmp0:= CONCAT_DSZ32(tmp9, tmp12) 
U3e8e: WRITEURAM(tmp0, 0x0009, 64) 

U3e90: tmp0:= MOVEFROMCREG_DSZ64( , 0x01d) 
U3e91: tmp0:= AND_DSZ32(0x00000008, tmp0) 
U3e92: tmp0:= SHL_DSZ32(tmp0, 0x00000005) 

U3e94: MOVETOCREG_DSZ64(tmp0, 0x070) 
U3e95: tmp0:= ZEROEXT_DSZ32(0x00000004) 
U3e96: tmp0:= unk_204(tmp0, 0x00000003) 

U3e98: MOVETOCREG_OR_DSZ64( , 0x0000000c, 0x005) 
U3e99: tmp3:= READURAM( , 0x001f, 64) 
U3e9a: tmp3:= NOTAND_DSZ32(0x00000007, tmp3) 

U3e9c: WRITEURAM(tmp3, 0x001f, 32) 
U3e9d: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U3ea0
U3e9e: SYNCMARK-> MOVETOCREG_BTR_DSZ64(tmp10, 0x00000011, 0x7fe) 

U3ea0: tmp1:= SHL_DSZ32(tmp2, tmp0) 
U3ea1: tmp1:= ZEROEXT_DSZ16(tmp1) 
U3ea2: tmp2:= SHL_DSZ32(tmp2, 0x00000003) 

U3ea4: tmp2:= ZEROEXT_DSZ16(tmp2) 
U3ea5: SYNCWAIT-> tmp0:= unk_d61(tmp1) 
U3ea6: tmp11:= SHR_DSZ64(tmp0, 0x0000002d) 

U3ea8: tmp11:= AND_DSZ32(0x00000003, tmp11) 
U3ea9: tmp11:= SUB_DSZ32(tmp8, tmp11) 
U3eaa: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp11, U07fe) 

U3eac: tmp13:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U3ead: tmp7:= SHR_DSZ64(tmp13, 0x0000002f) 
U3eae: tmp13:= SHL_DSZ32(tmp13, 0x00000008) 

U3eb0: tmp7:= AND_DSZ32(tmp7, tmp13) 
U3eb1: tmp7:= AND_DSZ32(0x00000008, tmp7) 
U3eb2: tmp13:= NOTAND_DSZ32(tmp7, 0x00034100) 

U3eb4: tmp7:= NOTAND_DSZ32(tmp13, tmp10) 
U3eb5: tmp14:= BTR_DSZ32(tmp14, 0x0000000e) 
U3eb6: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U64f0

U3eb8: unk_e7b(tmp0, tmp1) !m1,m2 
U3eb9: LFNCEMARK-> tmp3:= unk_d61(tmp1) SEQW GOTO U64f5
U3eba: WRITEURAM(tmp10, 0x004f, 64) !m2 

U3ebc: tmp15:= ZEROEXT_DSZ32(0x00002921) 
U3ebd: WRITEURAM(tmp15, 0x002c, 32) !m2 
U3ebe: tmp5:= READURAM( , 0x0009, 64) 

U3ec0: WRITEURAM(tmp3, 0x004e, 64) !m2 
U3ec1: SYNCMARK-> tmp15:= MOVEFROMCREG_DSZ64( , 0x6c5) 
U3ec2: tmp15:= CONCAT_DSZ32(tmp15, tmp8) 

U3ec4: WRITEURAM(tmp15, 0x0047, 64) !m2 
U3ec5: tmp0:= MOVEMERGEFLGS_DSZ64(tmp7, tmp12) 
U3ec6: tmp14:= ZEROEXT_DSZ32(0x000061e1) 

U3ec8: tmm7:= unk_5ba(tmm1, tmm2) 
U3ec9: SYNCWAIT-> tmm6:= unk_5ba(tmm0, tmm4) 
U3eca: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U2df1

U3ecc: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x6c5) 
U3ecd: NOP SEQW GOTO U2df1
U3ece: MOVE_DSZ32() 

U3ed0: WRITEURAM(tmp14, 0x0047, 32) !m2 
U3ed1: WRITEURAM(tmp14, 0x0007, 32) !m2 
U3ed2: SAVEUIP_REGOVR(0x01, U3ed4, 0x0008) !m0 SEQW GOTO U32cd

U3ed4: tmp2:= READURAM( , 0x005c, 64) 
U3ed5: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000010, U7178) !m1,m2 
U3ed6: SAVEUIP_REGOVR(0x01, U3ed8, 0x0008) !m0 SEQW GOTO U2b0d

U3ed8: tmp2:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 
U3ed9: tmp2:= AND_DSZ32(0x0000008a, tmp2) 
U3eda: LFNCEMARK-> MOVETOCREG_DSZ64(tmp2, 0x38f, 32) !m1 

U3edc: LFNCEWAIT-> tmp8:= MOVEFROMCREG_DSZ64( , 0x281, 32) !m1 
U3edd: tmp8:= OR_DSZ32(0x000f0000, tmp8) 
U3ede: NOP 

U3ee0: SYNCFULL-> MOVETOCREG_DSZ64(tmp8, 0x281, 32) !m1 
U3ee1: tmp14:= ZEROEXT_DSZ32(0x00007150) SEQW GOTO U205c
U3ee2: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 

U3ee4: tmp1:= BTS_DSZ32(tmp1, 0x00000008) 
U3ee5: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp1, 0x0000001f, 0x29d) !m0,m1 
U3ee6: tmp8:= TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U3eec

U3ee8: tmp0:= ZEROEXT_DSZ32(0x00000001) SEQW SAVEUIP0 U3ee9SEQW GOTO U60e5
U3ee9: tmp7:= AND_DSZ32(0x00ff0000, tmp7) 
U3eea: tmp8:= SELECTCC_DSZ32_CONDZ(tmp7, 0x000f0000) 

U3eec: tmp0:= ZEROEXT_DSZ32(0x00000008) 
U3eed: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U3eee: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000009, U290c) !m1 

U3ef0: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U3eed) !m1,m2 
U3ef1: tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 
U3ef2: tmp2:= OR_DSZ32(tmp8, tmp2) 

U3ef4: tmp10:= AND_DSZ32(0x000f0000, tmp2) 
U3ef5: tmp14:= ZEROEXT_DSZ32(0x00005f0d) SEQW GOTO U3ece
U3ef6: LFNCEMARK-> unk_e7b(tmp0, tmp2) 

U3ef8: tmp2:= RDSEGFLD(TSS, SEL) 
U3ef9: tmp7:= NOTAND_DSZ32(0x00000007, tmp2) 
U3efa: tmp0:= unk_d6a(tmp7) !m2 

U3efc: tmp0:= BTR_DSZ64(tmp0, 0x00000029) 
U3efd: unk_d68(tmp7,  , tmp0) !m2 
U3efe: LFNCEWAIT-> tmp5:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) 

U3f00: WRSEGFLD(tmp5, TSS, SEL+FLGS+LIM) 
U3f01: tmp5:= RDSEGFLD(UNK_SEG_04, BASE) 
U3f02: LFNCEMARK-> WRSEGFLD(tmp5, TSS, BASE) 

U3f04: LFNCEWAIT-> tmp5:= ZEROEXT_DSZ32() SEQW GOTO U11ba
U3f05: tmp8:= SHL_DSZ32(tmp0, 0x00000003) 
U3f06: tmm0:= unk_496(0x00000000) 

U3f08: mm0:= unk_7ea(0x00000000) 
U3f09: tmm3:= unk_624(0x00000000) 
U3f0a: tmp1:= PINTMOVDTMM2I_DSZ32(tmm3) 

U3f0c: tmp1:= AND_DSZ32(0x00000004, tmp1) 
U3f0d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U5a02) 
U3f0e: tmp1:= SUB_DSZ32(0x0001003e, tmp0) 

U3f10: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp1, U5a82) 
U3f11: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 
U3f12: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 

U3f14: LFNCEMARK-> tmp4:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000020, 0x48c) !m2 
U3f15: tmp1:= AND_DSZ32(0x00000020, tmp5) 
U3f16: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3f18) SEQW GOTO U3f1a

U3f18: tmp1:= OR_DSZ16(0x00008080, tmp4) 
U3f19: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x48c) 
U3f1a: tmp1:= SUB_DSZ32(0x0000ffbb, tmp0) 

U3f1c: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U5a02) 
U3f1d: tmp9:= unk_6a0() 
U3f1e: tmp10:= unk_6a0() 

U3f20: tmm0:= unk_6a7(tmm1, tmm0) 
U3f21: mm2:= unk_76a(tmm0) 
U3f22: tmm0:= unk_69d( , tmm0) 

U3f24: ROVR<- tmp15:= FCOM2(tmp10, tmp8) SEQW SAVEUIP0 U3f25SEQW GOTO U3db4
U3f25: tmm2:= unk_6e1(tmm0, tmm0) 
U3f26: tmp2:= AND_DSZ32(0x00000003, tmp2) 

U3f28: tmp8:= OR_DSZ32(tmp2, tmp8) 
U3f29: mm1:= unk_72a(tmm0) 
U3f2a: tmp1:= SHL_DSZ32(tmp1, 0x00000004) 

U3f2c: tmp8:= OR_DSZ32(tmp1, tmp8) 
U3f2d: mm0:= unk_7ea(tmm0) 
U3f2e: tmp11:= SUB_DSZ32(0x0000fffd, tmp0) 

U3f30: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp11, U3f31) SEQW GOTO U657d
U3f31: tmp12:= unk_6a0() 
U3f32: tmp11:= unk_6a0() 

U3f34: tmm5:= unk_6e1(tmm2, tmm4) 
U3f35: tmp12:= unk_6a0() 
U3f36: tmm6:= unk_6e1(tmm2, tmm3) 

U3f38: tmm5:= unk_649(tmm4, tmm5) 
U3f39: tmp11:= unk_6a0() 
U3f3a: tmm6:= unk_649(tmm3, tmm6) 

U3f3c: tmm5:= unk_6e1(tmm2, tmm5) 
U3f3d: tmp12:= unk_6a0() 
U3f3e: tmm6:= unk_6e1(tmm2, tmm6) 

U3f40: tmm5:= unk_649(tmm4, tmm5) 
U3f41: tmp11:= unk_6a0() 
U3f42: tmm6:= unk_649(tmm3, tmm6) 

U3f44: tmm5:= unk_6e1(tmm2, tmm5) 
U3f45: tmp12:= unk_6a0() 
U3f46: tmm6:= unk_6e1(tmm2, tmm6) 

U3f48: tmm5:= unk_649(tmm4, tmm5) 
U3f49: tmp11:= unk_6a0() 
U3f4a: tmm6:= unk_649(tmm3, tmm6) 

U3f4c: tmm5:= unk_6e1(tmm2, tmm5) 
U3f4d: tmp12:= unk_6a0() 
U3f4e: tmm6:= unk_6e1(tmm2, tmm6) 

U3f50: tmm5:= unk_649(tmm4, tmm5) 
U3f51: tmp11:= unk_6a0() 
U3f52: tmm6:= unk_649(tmm3, tmm6) 

U3f54: tmm5:= unk_6e1(tmm2, tmm5) 
U3f55: tmp12:= unk_6a0() 
U3f56: tmm6:= unk_6e1(tmm2, tmm6) 

U3f58: tmm5:= unk_649(tmm4, tmm5) 
U3f59: tmp11:= unk_6a0() 
U3f5a: tmm6:= unk_649(tmm3, tmm6) 

U3f5c: tmm5:= unk_661(tmm2, tmm5) 
U3f5d: tmm6:= unk_6e1(tmm2, tmm6) 
U3f5e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U3f60) SEQW GOTO U65de

U3f60: tmp9:= unk_6a0() 
U3f61: tmm5:= unk_6e1(tmm0, tmm5) 
U3f62: tmm6:= unk_6c9(tmm1, tmm6) 

U3f64: tmm5:= unk_6c9(tmm0, tmm5) 
U3f65: tmp9:= unk_6a0() 
U3f66: mm7:= FMOV( , tmm1) !m0 

U3f68: tmp1:= AND_DSZ32(0x00000001, tmp8) 
U3f69: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U05a4) 
U3f6a: tmm5:= unk_496(tmm5, 0x00000000) 

U3f6c: mm0:= unk_6a6(tmm6, tmm5) !m0,m2 SEQW GOTO U1bd0
U3f6d: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U3f6e: PORTOUT_DSZ32_ASZ16_SC1(0x005c,  , tmp15) !m2 

U3f70: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x005c) !m2 
U3f71: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U3f70) !m1,m2 
U3f72: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U3f74: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3f75) !m0,m1,m2 SEQW GOTO U3f72
U3f75: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U3f76: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U3f78: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U3f79: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3f7a: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U3f7c: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3f7d: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3f7e) !m0,m1,m2 SEQW GOTO U3f7c
U3f7e: tmp15:= SHR_DSZ64(tmpv0, 0x00000030) 

U3f80: tmp15:= CONCAT_DSZ8(0x00000006, tmp15) 
U3f81: tmp15:= CONCAT_DSZ16(0x000001c0, tmp15) 
U3f82: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U3f84: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U3f85: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3f86: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U3f88: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3f89: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3f8a) !m0,m1,m2 SEQW GOTO U3f88
U3f8a: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 

U3f8c: tmp15:= ADD_DSZ32(0x00000004, tmp15) 
U3f8d: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U3f8e: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U3f90: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3f91: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U3f92: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U3f94: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3f95) !m0,m1,m2 SEQW GOTO U3f92
U3f95: tmp15:= ZEROEXT_DSZ64(tmpv0) 
U3f96: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 

U3f98: tmp15:= ROR_DSZ32(tmp15, 0x00000010) 
U3f99: tmp15:= OR_DSZ32(0x000000ff, tmp15) 
U3f9a: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U3f9c: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U3f9d: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3f9e: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U3fa0: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3fa1: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3fa2) !m0,m1,m2 SEQW GOTO U3fa0
U3fa2: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 

U3fa4: tmp15:= ADD_DSZ32(0x00000008, tmp15) 
U3fa5: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U3fa6: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U3fa8: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3fa9: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U3faa: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U3fac: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3fad) !m0,m1,m2 SEQW GOTO U3faa
U3fad: tmp15:= ZEROEXT_DSZ32(tmpv0) 
U3fae: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U3fb0: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U3fb1: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3fb2: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U3fb4: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3fb5: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3fb6) !m0,m1,m2 SEQW GOTO U3fb4
U3fb6: tmp15:= ZEROEXT_DSZ32() 

U3fb8: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U3fb9: tmp15:= ZEROEXT_DSZ32(0x00000019) 
U3fba: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 

U3fbc: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U3fbd: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3fbe: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3fc0) !m0,m1,m2 SEQW GOTO U3fbd

U3fc0: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U3fc1: tmp15:= ADD_DSZ32(0x0000000c, tmp15) 
U3fc2: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U3fc4: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U3fc5: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3fc6: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U3fc8: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3fc9: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3fca) !m0,m1,m2 SEQW GOTO U3fc8
U3fca: tmpv1:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 

U3fcc: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U3fcd: tmp15:= ADD_DSZ32(0x00000010, tmp15) 
U3fce: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U3fd0: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U3fd1: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3fd2: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U3fd4: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3fd5: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3fd6) !m0,m1,m2 SEQW GOTO U3fd4
U3fd6: tmpv2:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 

U3fd8: SYNCFULL-> tmpv1:= CONCAT_DSZ32(tmpv2, tmpv1) SEQW URET1
U3fd9: TESTUSTATE( , SYS, 0x0800) !m1 ? SEQW GOTO U3fdd
U3fda: tmp10:= ZEROEXT_DSZ16(tmp12) 

U3fdc: SIGEVENT( , 0x0000000f) 
U3fdd: tmp14:= READUIP_REGOVR(0x01) !m0 
U3fde: tmp12:= WRMSLOOPCTRFBR(0x00000007) 

U3fe0: unk_cce(tmp11) 
U3fe1: tmp0:= unk_ccc(tmp11) 
U3fe2: tmm3:= FMOV(0x00000011) !m0 

U3fe4: tmp11:= ADD_DSZN(0x00000010, tmp11) !m1 
U3fe5: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U3fe0
U3fe6: SIGEVENT( , 0x00000003) 

U3fe8: tmp11:= SUB_DSZN(0x00000080, tmp11) !m1 SEQW URET1
U3fe9: tmp2:= unk_109(0x00000001) 
U3fea: tmp3:= TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW GOTO U3fee

U3fec: tmp3:= unk_20d( , 0x00000200) 
U3fed: tmp3:= OR_DSZ32(0x00003000, tmp3) 
U3fee: tmp3:= CONCAT_DSZ16(0x0000001a, tmp3) 

U3ff0: LFNCEWAIT-> tmp1:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U3ff1: tmp1:= AND_DSZ32(tmp3, tmp1) 
U3ff2: unk_25e( , 0x000000ff) 

U3ff4: tmp3:= OR_DSZ32(0x00010000, tmp3) 
U3ff5: LFNCEMARK-> tmp7:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x1a) !m1 
U3ff6: tmp2:= XOR_DSZ32(tmp2, tmp7) 

U3ff8: tmp0:= NOTAND_DSZ32(tmp3, tmp7) 
U3ff9: tmp0:= OR_DSZ32(tmp1, tmp0) 
U3ffa: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x7fe) 

U3ffc: LFNCEMARK-> unk_13f(tmp0) !m2 
U3ffd: rsp:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U3ffe: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000a, U1bd0) !m0,m2 SEQW GOTO U008e

reset_flow:
U4000: NOP 
U4001: NOP SEQW GOTO U10d6
U4002: LFNCEWTMRK->MSSTOP-> FETCHFROMEIP1_ASZ32( , tmp1) 

U4004: MSSTOP-> MJMPTARGET_INDIRECT_ASZ32( , tmp1) SEQW GOTO U2792
U4005: NOP 
U4006: NOP 

U4008: tmp9:= unk_6a0() 
U4009: tmm3:= FMOV( , tmm1) SEQW GOTO U2281
U400a: LFNCEMARK-> unk_e7b(tmp0, tmp2) !m0 

U400c: LFNCEWAIT-> rsp:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 SEQW UEND0
U400d: tmm7:= unk_5ba(tmm7, tmm7) 
U400e: tmm7:= unk_790(mm1, tmm7) SEQW GOTO U056e

U4010: tmp9:= unk_6a0() 
U4011: tmm3:= FMOV( , tmm1) SEQW GOTO U2281
U4012: LFNCEMARK-> unk_e7b(tmp0, tmp2) !m0 

U4014: LFNCEWAIT-> r64dst:= ZEROEXT_DSZ32N(tmp3, r64dst) !m1 SEQW UEND0
U4015: BTUJB_DIRECT_NOTTAKEN(rbx, 0x00000001, U5ad8) !m2 
U4016: rax:= BTR_DSZ32(rax, 0x00000001) SEQW GOTO U5ad8

U4018: tmp9:= unk_6a0() 
U4019: tmm1:= unk_494( , tmm1) 
U401a: tmm3:= FMOV( , tmm1) SEQW GOTO U2281

U401c: tmp0:= MOVE_DSZ32(0x00002838) SEQW GOTO U4f5e
U401d: NOP 
U401e: NOP 

U4020: tmm1:= FMOV() 
U4021: tmm3:= FMOV( , tmm1) SEQW GOTO U2281
U4022: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U2b09) 

U4024: LFNCEWAIT-> r64src:= ZEROEXT_DSZ32(tmp2) SEQW GOTO U2b0a
U4025: NOP 
U4026: NOP 

U4028: tmm1:= unk_494() 
U4029: tmm3:= FMOV( , tmm1) SEQW GOTO U2281
U402a: LFNCEMARK-> tmp0:= READURAM( , 0x0022, 64) !m2 

U402c: LFNCEWAIT-> WRITEURAM(tmp0, 0x0000, 64) !m2 SEQW GOTO U21b8
U402d: NOP 
U402e: NOP 

U4030: tmp6:= AND_DSZ32(0x00000001, tmp12) 
U4031: tmp8:= unk_6a0() 
U4032: tmm1:= ORPD(tmm1, tmm0) SEQW GOTO U2091

U4034: tmp0:= MOVE_DSZ32(0x0000282d) SEQW GOTO U4f5e
U4035: NOP 
U4036: NOP 

U4038: tmp9:= unk_6a0() 
U4039: tmm1:= ORPD(tmm0, tmm1) 
U403a: tmm3:= FMOV( , tmm1) SEQW GOTO U2281

U403c: tmp0:= ZEROEXT_DSZ32(0x00010008) SEQW GOTO U73ac
U403d: NOP 
U403e: NOP 

U4040: tmm1:= FMOV( , tmm1) 
U4041: tmm3:= FMOV( , tmm1) SEQW GOTO U2281
U4042: LFNCEMARK-> tmp0:= READURAM( , 0x0022, 64) !m2 

U4044: LFNCEWAIT-> WRITEURAM(tmp0, 0x0001, 64) !m2 SEQW GOTO U21b8
U4045: NOP 
U4046: NOP 

U4048: tmm1:= unk_494( , tmm1) 
U4049: tmm3:= FMOV( , tmm1) SEQW GOTO U2281
U404a: LFNCEMARK-> tmp1:= READURAM( , tmp0) !m2 

U404c: tmp1:= BTR_DSZ32(tmp1) 
U404d: LFNCEWAIT-> WRITEURAM(tmp1, tmp0) !m2 SEQW GOTO U24da
U404e: NOP 

U4050: tmm1:= FMOV( , tmm0) 
U4051: tmm3:= FMOV( , tmm0) SEQW GOTO U2281
case_:
U4052: BTUJB_DIRECT_NOTTAKEN(rax, 0x0000000d, U5a12) !m2 

U4054: tmp10:= MOVEFROMCREG_DSZ64( , rax) SEQW GOTO U4065
U4055: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 
U4056: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) !m1 

U4058: LFNCEWAIT-> tmp12:= RDSEGFLD(UNK_SEG_04, LIMIT) 
U4059: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) SEQW GOTO U0382
case_2:
U405a: tmp4:= ZEROEXT_DSZ32(0x00000005) 

U405c: tmp10:= OR_DSZ32(rax) 
U405d: tmp13:= ZEROEXT_DSZ32(0x0000376a) SEQW GOTO U1a5e
U405e: LFNCEMARK-> tmm6:= unk_691(tmm5) 

U4060: LFNCEWAIT-> NOP 
U4061: tmp14:= SAVEUIP(0x01, U3d2a) !m0 SEQW GOTO U1a84
case_18:
U4062: tmp4:= OR_DSZ32(rax) 

U4064: tmp10:= READURAM( , tmp4) 
U4065: rdx:= ZEROEXT_DSZ64(tmp10) 
U4066: rbx:= SHR_DSZ64(tmp10, 0x00000020) SEQW GOTO U43a4

U4068: NOP 
U4069: NOP 
case_17:
U406a: tmp10:= PORTIN_DSZ8_ASZ16_SC1(rax) SEQW GOTO U4065

U406c: tmp2:= MOVEFROMCREG_DSZ64( , 0x701) 
U406d: tmp2:= NOTAND_DSZ64(0x30000000, tmp2) 
U406e: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp2, 0x701) 

U4070: WRSEGFLD(0x00000000) 
U4071: LFNCEMARK-> WRITEURAM( , 0x00000000, 0x004b, 64) SEQW URET1
case_19:
U4072: tmp10:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp4) SEQW GOTO U4065

U4074: tmp1:= OR_DSZ64(tmp10, tmp1) 
U4075: tmp1:= BT_DSZ64(tmp1, 0x0000000d) 
U4076: SYNCWAIT-> tmp12:= ZEROEXT_DSZ32N(tmp12) !m1 

U4078: SYNCWAIT-> tmp10:= SHR_DSZ64(tmp12, 0x00000020) SEQW URET1
U4079: NOP 
case_5:
U407a: tmp10:= PORTIN_DSZ16_ASZ16_SC1(rax) SEQW GOTO U4065

U407c: tmp3:= ZEROEXT_DSZ32(0x00000010) SEQW GOTO U31f1
U407d: NOP 
U407e: NOP 

U4080: NOP 
U4081: NOP 
case_6:
U4082: tmp10:= PORTIN_DSZ32_ASZ16_SC1(rax) SEQW GOTO U4065

thunk_FUN_ucode_0002712:
U4084: SAVEUIP( , 0x01, U5bf5) !m0 SEQW GOTO U273a
U4085: NOP 
U4086: NOP 

U4088: NOP 
U4089: NOP 
case_7:
U408a: tmp10:= PORTIN_DSZ64_ASZ16_SC1(rax) SEQW GOTO U4065

U408c: NOP SEQW GOTO U3a2d
U408d: NOP 
U408e: NOP 

U4090: NOP 
U4091: NOP 
case_24:
U4092: tmp10:= LDSTGBUF_DSZ64_ASZ16_SC1(rax) !m2 SEQW GOTO U4065

U4094: rdx:= MOVEFROMCREG_DSZ64( , 0x22d, 32) !m1,m2 SEQW GOTO U21fe
U4095: NOP 
U4096: NOP 

U4098: NOP 
U4099: NOP 
case_25:
U409a: NOP SEQW GOTO U2769

U409c: SAVEUIP( , 0x01, U009a) !m0 SEQW GOTO U32cd
U409d: NOP 
U409e: NOP 

U40a0: NOP 
U40a1: NOP 
case_12:
U40a2: NOP SEQW GOTO U2769

U40a4: SAVEUIP( , 0x01, U575e) !m0 SEQW GOTO U32cd
U40a5: NOP 
U40a6: NOP 

U40a8: NOP 
U40a9: NOP 
case_13:
U40aa: NOP SEQW GOTO U2769

U40ac: SAVEUIP( , 0x01, U3d1c) !m0 SEQW GOTO U2ac6
U40ad: NOP 
U40ae: NOP 

U40b0: NOP 
U40b1: NOP 
case_14:
U40b2: NOP SEQW GOTO U2769

U40b4: SIGEVENT( , 0x00000041) SEQW GOTO U079d
U40b5: NOP 
U40b6: NOP 

U40b8: NOP 
U40b9: NOP 
case_15:
U40ba: NOP SEQW GOTO U2769

U40bc: tmm6:= FMOV( , 0x00000011) !m0 SEQW GOTO U1bd0
U40bd: NOP 
U40be: NOP 

U40c0: NOP 
U40c1: NOP 
case_1:
U40c2: NOP SEQW GOTO U2769

U40c4: LFNCEMARK-> tmm0:= unk_61c( , 0x00000000) !m1,m2 SEQW GOTO U691a
U40c5: NOP 
U40c6: NOP 

U40c8: NOP 
U40c9: NOP 
case_11:
U40ca: NOP SEQW GOTO U2769

U40cc: tmp2:= AND_DSZ32(0x00000700, tmp11) 
U40cd: tmp15:= SUB_DSZ32(0x00000700, tmp2) 
U40ce: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U1711) 

U40d0: tmp9:= SUB_DSZ32(0x00000200, tmp2) 
U40d1: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U40e6
U40d2: tmp13:= AND_DSZ32(0x000007ff, tmp11) 

U40d4: tmp15:= SUB_DSZ32(0x00000301, tmp13) 
U40d5: tmp13:= SUB_DSZ32(0x00000312, tmp13) 
U40d6: tmp13:= SELECTCC_DSZ32_CONDZ(tmp13, tmp5) 

U40d8: tmp14:= CMOVCC_DSZ64_CONDZ(tmp15, tmp9) 
U40d9: tmp15:= SUB_DSZ32(0x00000000, tmp2) 
U40da: tmp14:= CMOVCC_DSZ64_CONDZ(tmp15, tmp14) 

U40dc: tmp15:= SUB_DSZ32(0x00000001, tmp13) 
U40dd: tmp14:= SELECTCC_DSZ64_CONDNZ(tmp15, tmp14) 
U40de: tmp15:= SUB_DSZ32(0x00000002, tmp13) 

U40e0: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, tmp9) 
U40e1: tmp14:= OR_DSZ32(tmp15, tmp14) 
U40e2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U5f95) 

U40e4: tmp15:= SUB_DSZ32(0x00000003, tmp5) 
U40e5: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U5f95) 
U40e6: tmp14:= SUB_DSZ32(0x00000000, tmp2) 

U40e8: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp14, 0x00000003) 
U40e9: tmp15:= AND_DSZ32(tmp15, tmp8) 
U40ea: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U40fc) 

U40ec: tmp14:= SELECTCC_DSZ32_CONDNZ(tmp14, 0x00000200) 
U40ed: tmp14:= NOTAND_DSZ32(tmp0, tmp14) 
U40ee: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U40fc) 

U40f0: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp9, 0x00000003) 
U40f1: tmp15:= AND_DSZ32(tmp15, tmp8) 
U40f2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U40fc) 

U40f4: tmp15:= READURAM( , 0x0043, 64) 
U40f5: tmp15:= SELECTCC_DSZ64_CONDNZ(tmp9, tmp15) 
U40f6: LFNCEMARK-> tmp15:= SHR_DSZ64(tmp15, 0x00000039) 

U40f8: tmp15:= AND_DSZ32(tmp8, tmp15) 
U40f9: tmp15:= AND_DSZ32(0x00000008, tmp15) 
U40fa: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U40fc) SEQW GOTO U1711

U40fc: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp9, tmp8) 
U40fd: tmp15:= AND_DSZ32(0x00000001, tmp15) 
U40fe: tmp1:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000003) SEQW GOTO U5f96

U4100: tmm6:= unk_620(tmm5) 
U4101: tmp3:= PINTMOVDTMM2I_DSZ32(tmm6) 
U4102: UJMP( , tmp3) 

U4104: ROVR<- tmp9:= unk_6a0() SEQW SAVEUIP0 U4105SEQW GOTO U418e
U4105: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U037a) 
U4106: tmp8:= OR_DSZ16(0x00000010, tmp8) 

U4108: tmp2:= AND_DSZ16(0x00000010, tmp1) 
U4109: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U584d) 
U410a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp8, 0x48c) !m2 

U410c: LFNCEWAIT-> mm7:= FMOV( , tmm1) !m0 SEQW GOTO U21fe
U410d: tmm2:= unk_69d( , tmm2) 
U410e: tmm3:= unk_496(tmm2, tmm2) 

U4110: tmp12:= FCOM2(tmp12, tmp11) 
U4111: tmm3:= unk_494( , tmm0) 
U4112: tmm3:= unk_53f(tmm3, tmm1) 

U4114: mm4:= unk_76a(tmm4) 
U4115: tmp2:= MOVEINSERTFLGS_DSZ32(tmp4) 
U4116: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp2, U4118) SEQW GOTO U5ddc

U4118: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U4556) 
U4119: tmp6:= ADD_DSZ32(0x00000001, tmp6) SEQW SAVEUIP0 U411aSEQW GOTO U5ddd
U411a: NOP 

U411c: mm0:= unk_689(tmm2, tmm3) SEQW GOTO U1bd0
U411d: NOP SEQW URET1
U411e: NOP 

U4120: SAVEUIP( , 0x01, U21dd) !m0 SEQW GOTO U425a
U4121: mm7:= FMOV( , tmm0) !m0 SEQW URET0
U4122: mm0:= FMOV( , tmm0) !m0 

U4124: mm7:= FMOV( , tmm0) !m0 SEQW GOTO U1a50
U4125: NOP SEQW URET1
U4126: tmm6:= FMOV( , 0x00000091) !m0 

U4128: mm0:= FMOV( , tmm0) !m0 SEQW URET0
U4129: mm0:= FMOV( , tmm0) SEQW GOTO U1bd0
U412a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U412c: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) SEQW GOTO U4986
U412d: tmm3:= FMOV( , 0x00000000) 
U412e: tmm2:= FMOV( , 0x00004000) SEQW URET0

U4130: mm0:= unk_53f(0x00000000, tmm1) SEQW GOTO U1bd0
U4131: tmm3:= FMOV( , 0x00004000) 
U4132: tmm2:= FMOV( , 0x00000000) SEQW URET0

U4134: mm0:= unk_53f(0x00000000) SEQW GOTO U1bd0
U4135: tmm3:= FMOV( , 0x00000000) 
U4136: tmm2:= unk_5b9(tmm7) SEQW URET0

U4138: tmp12:= unk_6a0() SEQW GOTO U4152
U4139: tmm2:= FMOV( , tmm0) 
U413a: tmm3:= FMOV( , 0x00000000) SEQW URET0

U413c: tmp3:= BTS_DSZ32(0x00000000, 0x0000001f) SEQW GOTO U418c
U413d: tmm2:= FMOV( , 0x00000000) 
U413e: tmm3:= unk_5b9(tmm7) SEQW URET0

U4140: tmp3:= BTS_DSZ64(0x00000000, 0x0000003f) SEQW GOTO U418c
U4141: tmm3:= FMOV( , tmm0) 
U4142: tmm2:= FMOV( , 0x00000000) SEQW URET0

U4144: tmp2:= ZEROEXT_DSZ16(0x00004120) SEQW GOTO U41f4
U4145: tmm2:= FMOV() 
U4146: tmm3:= FMOV() SEQW URET0

U4148: tmm2:= unk_494( , tmm2) SEQW GOTO U4355
U4149: tmp10:= unk_6a0() 
U414a: tmm2:= unk_53f(tmm1, tmm2) 

U414c: LFNCEMARK-> tmm7:= unk_6dc( , tmm2) !m2 SEQW GOTO U01aa
U414d: mm0:= FMOV( , tmm0) !m0 
U414e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U1a50) 

U4150: tmm6:= FMOV( , 0x00000091) !m0 SEQW GOTO U1a50
U4151: tmp12:= unk_6a0() 
U4152: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U4154: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) SEQW GOTO U5176
U4155: mm2:= unk_7e8(tmm3) 
U4156: tmp2:= OR_DSZ16(0x00000002, tmp2) 

U4158: tmm0:= unk_782(mm2, tmm3) SEQW URET1
U4159: tmm3:= FMOV() SEQW GOTO U4136
U415a: tmp12:= OR_DSZ16(0x00000001, tmp12) 

U415c: tmp8:= unk_6a0() SEQW GOTO U412a
U415d: mm2:= unk_7e8(tmm2) 
U415e: tmp2:= OR_DSZ16(0x00000002, tmp2) 

U4160: tmm0:= unk_782(mm2, tmm2) SEQW URET1
U4161: tmm2:= FMOV( , 0x00000000) SEQW GOTO U4146
U4162: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) 

U4164: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000f, U517a) !m0,m2 SEQW GOTO U2ad9
U4165: tmp9:= BTS_DSZ16(tmp9, 0x0000000d) 
U4166: LFNCEMARK-> tmm0:= FMOV() !m2 

U4168: tmp12:= BTS_DSZ32(tmp12, 0x00000005) SEQW GOTO U1432
U4169: mm2:= unk_72a(0x00000000) 
U416a: tmp3:= AND_DSZ8(0x00000001, tmp2) 

U416c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U421d) SEQW GOTO U2fb8
U416d: tmp2:= ZEROEXT_DSZ16(0x000041ad) 
U416e: tmp3:= AND_DSZ8(0x00000014, tmp7) 

U4170: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U03b4) SEQW GOTO U2fb8
U4171: tmp8:= unk_6a0() 
U4172: tmm4:= unk_496(tmm2, tmm3) 

U4174: tmm0:= unk_53f(tmm4, tmm0) SEQW GOTO U1432
U4175: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp6, U4249) 
U4176: UJMPCC_DIRECT_NOTTAKEN_CONDP(tmp6, U40c4) 

U4178: tmm0:= unk_5b9(tmm7) SEQW GOTO U691a
U4179: mm2:= unk_72a(0x00000000) 
U417a: tmp3:= AND_DSZ8(0x00000001, tmp2) 

U417c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1432) SEQW GOTO U421d
U417d: tmm4:= unk_5b9(tmm7) 
U417e: tmm7:= unk_5b9() 

U4180: tmp13:= ZEROEXT_DSZ64(0x000043bc) SEQW GOTO U42e8
U4181: tmm4:= unk_5b9(tmm7) 
U4182: tmm7:= unk_5b9() 

U4184: tmp13:= ZEROEXT_DSZ64(0x000043bc) SEQW GOTO U42fc
U4185: tmp14:= unk_6a0() 
U4186: tmp11:= unk_6a0() 

U4188: tmm4:= unk_494( , tmm6) 
U4189: tmm4:= unk_6c9(tmm3, tmm4) SEQW GOTO U2321
U418a: tmp3:= BTS_DSZ32(0x00000000, 0x0000000f) 

U418c: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) SEQW GOTO U18bd
U418d: SAVEUIP( , 0x00, U2349) 
FUN_ucode_000418e:
U418e: tmp1:= MOVEFROMCREG_DSZ64( , 0x486) 

U4190: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U4191: tmp8:= OR_DSZ16(0x00000002, tmp4) SEQW GOTO U4325
U4192: mm0:= unk_625(tmm2) 

U4194: LFNCEMARK-> tmm6:= unk_5ff(0x00000000) !m2 SEQW GOTO U1a50
U4195: tmm4:= unk_624(tmm0, tmm1) 
U4196: tmp0:= PINTMOVDTMM2I_DSZ32(tmm4) 

U4198: tmp0:= AND_DSZ32(0x00000014, tmp0) 
U4199: tmm0:= unk_72a(tmm0) SEQW GOTO U6fca
U419a: mm7:= FMOV( , 0x00000041) !m0 

U419c: mm0:= unk_496(IMM_MACRO_31) !m0 SEQW GOTO U1a50
U419d: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000001, 0x48c) !m2 
U419e: tmp2:= AND_DSZ32(0x00000001, tmp5) 

U41a0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U57a6) 
U41a1: tmp15:= unk_6a0() SEQW GOTO U0404
U41a2: tmm3:= FMOV( , 0x00000000) 

U41a4: tmm2:= FMOV() SEQW GOTO U3b15
U41a5: tmp3:= AND_DSZ32(0x00000008, tmp0) 
U41a6: tmp3:= SHR_DSZ32(tmp3, 0x00000002) 

U41a8: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x48c, tmp3) 
U41a9: tmp2:= XOR_DSZ32(0x00000002, tmp5) SEQW GOTO U2399
U41aa: tmm7:= unk_5b9(tmm1) 

U41ac: tmp13:= ZEROEXT_DSZ64(0x000043c4) SEQW GOTO U42e8
U41ad: tmm4:= unk_624(tmm0, tmm1) 
U41ae: tmp0:= PINTMOVDTMM2I_DSZ32(tmm4) 

U41b0: tmp0:= AND_DSZ32(0x00000014, tmp0) 
U41b1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U5ee9) SEQW GOTO U61cd
U41b2: tmm5:= unk_5b9(tmm7) 

U41b4: tmp13:= ZEROEXT_DSZ64(0x000043c4) SEQW GOTO U42f0
U41b5: tmp2:= SHR_DSZ16(tmp12, 0x0000000b) 
U41b6: tmp2:= AND_DSZ16(0x00000007, tmp2) 

U41b8: tmp3:= MOVEFROMCREG_DSZ64( , 0x06a) 
U41b9: tmp4:= ROR_DSZ8(tmp3, tmp2) SEQW GOTO U5c05
U41ba: tmp10:= OR_DSZ32(tmp4, tmp10) 

U41bc: tmp10:= NOTAND_DSZ32(0x00000002, tmp10) SEQW GOTO U4204
U41bd: tmp3:= SUB_DSZ32(0x00000100, tmp9) 
U41be: tmp3:= SUB_DSZ32(0x00000065, tmp3) 

U41c0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U0322) 
U41c1: tmp4:= NOTAND_DSZ32(0x00000007, tmp9) SEQW GOTO U5ac5
U41c2: tmp10:= OR_DSZ32(tmp4, tmp10) 

U41c4: tmp10:= NOTAND_DSZ32(0x00000002, tmp10) SEQW GOTO U42f8
U41c5: tmp12:= OR_DSZ16(0x00000041, tmp12) 
U41c6: tmp4:= ZEROEXT_DSZ32(0x00000002) 

U41c8: tmm6:= unk_743(mm4) !m2 
U41c9: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) SEQW GOTO U378a
U41ca: tmm4:= unk_5b9(tmm7) 

U41cc: tmp10:= NOTAND_DSZ64(0x0000003f, tmp10) SEQW GOTO U2af1
U41cd: tmp5:= MOVEFROMCREG_DSZ64( , 0x48c) 
U41ce: tmp5:= NOTAND_DSZ16(0x00000020, tmp5) 

U41d0: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, 0x48c) 
U41d1: tmp12:= OR_DSZ16(0x00000001, tmp12) SEQW GOTO U0c2a
U41d2: tmp10:= OR_DSZ32(tmp4, tmp10) 

U41d4: tmp10:= NOTAND_DSZ32(0x00000002, tmp10) SEQW GOTO U42f8
U41d5: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp6, U595e) 
U41d6: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp6, U4249) 

U41d8: tmm6:= unk_743() !m2 
U41d9: tmm4:= unk_624(tmm2, tmm2) SEQW GOTO U20f0
U41da: tmm4:= unk_5b9(tmm7) 

U41dc: tmp10:= NOTAND_DSZ64(0x0000003f, tmp10) SEQW GOTO U4230
U41dd: tmm4:= unk_68c(tmm3, tmm2) 
U41de: tmp2:= PINTMOVDTMM2I_DSZ64(tmm4) 

U41e0: mm3:= unk_7e8(tmm4) 
U41e1: tmm2:= unk_743(mm3, tmm2) SEQW GOTO U5fe9
U41e2: tmm7:= MOVDQU( , tmm7) 

U41e4: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x073) !m2 SEQW GOTO U41ea
U41e5: tmp12:= OR_DSZ16(0x00000002, tmp12) 
U41e6: tmp2:= BT_DSZ16(tmp6, 0x0000000a) 

U41e8: tmp3:= MOVEMERGEFLGS_DSZ64(0x0000ff81, tmp2) 
U41e9: tmp4:= CMOVCC_DSZ32_CONDB(tmp3, 0x0000fc01) SEQW GOTO U0624
U41ea: tmp10:= OR_DSZ32(tmp11, tmp10) 

U41ec: tmp13:= SAVEUIP(0x00, U08ce) SEQW GOTO U1000
U41ed: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U41ee: tmp3:= AND_DSZ16(0x00000010, tmp2) 

U41f0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U18cc) 
U41f1: tmp10:= ZEROEXT_DSZ32(0x00000043) SEQW GOTO U062c
U41f2: tmp2:= ZEROEXT_DSZ16(0x00004259) 

U41f4: tmm6:= unk_624(tmm3, tmm3) 
U41f5: tmp3:= PINTMOVDTMM2I_DSZ32(tmm6) 
U41f6: tmp3:= AND_DSZ8(0x00000004, tmp3) SEQW GOTO U1909

U41f8: tmm7:= unk_5b9(xmmsrc) SEQW GOTO U42e5
U41f9: tmp8:= unk_6a0() 
U41fa: tmm6:= unk_624(tmm2, tmm2) 

U41fc: tmp3:= PINTMOVDTMM2I_DSZ32(tmm6) 
U41fd: tmp3:= AND_DSZ16(0x00000010, tmp3) SEQW GOTO U2ae1
U41fe: LFNCEMARK-> tmp14:= FCOM2(tmp11, tmp10) !m2 

U4200: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U4201: tmp3:= AND_DSZ32(0x00000002, tmp2) 
U4202: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1a50) SEQW GOTO U3ab6

U4204: tmp13:= SAVEUIP(0x00, U088e) SEQW GOTO U1000
U4205: tmm0:= FMOV( , 0x00000000) 
U4206: UJMPCC_DIRECT_NOTTAKEN_CONDP(tmp6, U18c6) 

U4208: tmp1:= MOVEFROMCREG_DSZ64( , 0x486) 
U4209: tmp1:= SHR_DSZ32(tmp1, 0x00000008) SEQW GOTO U6f91
U420a: tmp8:= unk_6a0() !m2 

U420c: tmm6:= unk_620(tmm5) 
U420d: tmp4:= PINTMOVDTMM2I_DSZ32(tmm6) 
U420e: tmm4:= unk_624(tmm2, tmm2) SEQW GOTO U27bc

U4210: tmm7:= unk_5b9(xmmsrc) SEQW GOTO U4234
U4211: tmp2:= AND_DSZ32(0x00000004, tmp7) 
U4212: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U421d) 

U4214: tmm4:= unk_496(tmm3, tmm2) 
U4215: tmm0:= unk_53f(tmm4, tmm0) SEQW GOTO U1432
U4216: tmp0:= SUB_DSZ32(0x00000410, tmp5) 

U4218: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U421d) 
U4219: tmp1:= SUB_DSZ32(0x00000100, tmp5) 
U421a: tmp1:= SUB_DSZ32(0x00000004, tmp1) SEQW GOTO U684a

U421c: tmm7:= unk_5b9(xmmsrc) SEQW GOTO U4248
U421d: tmp12:= OR_DSZ16(0x00000001, tmp12) 
U421e: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 

U4220: tmp3:= AND_DSZ16(0x00000001, tmp2) 
U4221: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1a50) SEQW GOTO U1431
U4222: mm2:= unk_72a(tmm2) 

U4224: tmp12:= unk_6a0() 
U4225: tmm4:= unk_743(mm2, tmm4) 
U4226: tmm0:= unk_482(tmm4, tmm2) SEQW GOTO U1432

U4228: tmp13:= ZEROEXT_DSZ64(0x000043d4) SEQW GOTO U42fa
U4229: MOVDQU( , tmm7) 
U422a: tmp10:= OR_DSZ32(tmp4, tmp10) 

U422c: tmp10:= NOTAND_DSZ32(0x00000002, tmp10) 
U422d: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x073) !m2 SEQW GOTO U42f8
U422e: tmm4:= unk_5b9(xmmsrc) 

U4230: tmm7:= unk_5b9() 
U4231: tmp11:= ZEROEXT_DSZ32(0x0000220e) 
U4232: tmp13:= ZEROEXT_DSZ64(0x00004681) SEQW GOTO U42fe

U4234: tmp13:= ZEROEXT_DSZ64(0x000043d4) SEQW GOTO U42e6
U4235: tmm7:= unk_5b9(tmm4) 
U4236: tmm4:= unk_5b9(tmm3) 

U4238: tmp11:= ZEROEXT_DSZ32(0x00002266) 
U4239: tmp13:= ZEROEXT_DSZ64(0x000043cc) SEQW GOTO U0344
U423a: tmp11:= unk_6a0() 

U423c: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000004, 0x48c) 
U423d: tmp2:= AND_DSZ32(0x00000004, tmp5) 
U423e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U57a6) 

U4240: LFNCEWAIT-> tmm7:= unk_496(tmm3, tmm1) !m2 SEQW GOTO U0404
U4241: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) 
U4242: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 

U4244: MOVETOCREG_DSZ64(tmp15, 0x752) 
U4245: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000f, U517a) !m0,m2 
U4246: tmp7:= PINTMOVDTMM2I_DSZ64(tmm0) SEQW GOTO U245d

U4248: tmp13:= ZEROEXT_DSZ64(0x000043dc) SEQW GOTO U42e6
U4249: LFNCEMARK-> tmm6:= unk_743() !m2 
U424a: tmp12:= OR_DSZ16(0x00000001, tmp12) 

U424c: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U424d: tmp3:= AND_DSZ16(0x00000001, tmp2) 
U424e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1a50) SEQW GOTO U1432

U4250: tmp13:= ZEROEXT_DSZ64(0x000043dc) SEQW GOTO U42fa
U4251: LFNCEMARK-> tmm6:= unk_743(mm0) !m2 
U4252: unk_7e0(tmm3, tmm2) !m2 

U4254: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U4255: tmp3:= AND_DSZ32(0x00000002, tmp2) 
U4256: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1a50) SEQW GOTO U3ab6

U4258: tmp13:= SAVEUIP(0x00, U08ce) SEQW GOTO U1000
U4259: SAVEUIP( , 0x01, U5dd9) !m0 
U425a: mm0:= unk_7ea(tmm0) 

U425c: mm1:= unk_7ea(tmm1) 
U425d: tmp5:= SUB_DSZ32(tmp1, tmp0) 
U425e: tmm3:= unk_624(tmm0, tmm1) 

U4260: tmp2:= PINTMOVDTMM2I_DSZ32(tmm3) SEQW GOTO U036a
U4261: mm1:= unk_7ea(0x00000000) 
U4262: tmp0:= SUB_DSZ32(0x0001003e, tmp1) 

U4264: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp0, U5b24) 
U4265: tmp2:= ZEROEXT_DSZ32(0x0001003e) 
U4266: tmm1:= unk_7c2(mm2) 

U4268: tmm0:= unk_6aa(0x00000000, tmm1) SEQW GOTO U3ad5
U4269: tmp15:= FCOM2(tmp9, tmp8) !m0 
U426a: mm1:= unk_7ea(tmm1) 

U426c: tmm3:= unk_624(tmm0, tmm1) 
U426d: tmp2:= PINTMOVDTMM2I_DSZ32(tmm3) 
U426e: tmp2:= AND_DSZ32(0x00000014, tmp2) 

U4270: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U6255) SEQW GOTO U665d
U4271: tmm2:= unk_624(0x00000000) 
U4272: tmp1:= PINTMOVDTMM2I_DSZ32(tmm2) 

U4274: tmp2:= AND_DSZ32(0x00000040, tmp1) 
U4275: tmp2:= SHR_DSZ32(tmp2, 0x00000006) 
U4276: tmm3:= unk_743(mm2, tmm0) 

U4278: tmm0:= unk_482(tmm3, 0x00000000) SEQW GOTO U4129
U4279: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U427a: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U427c: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000001, 0x48c) 
U427d: tmp6:= AND_DSZ32(0x00000001, tmp5) 
U427e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U57a6) 

U4280: LFNCEWAIT-> tmp0:= unk_6a0() SEQW GOTO U1bd0
U4281: tmm4:= unk_624(tmm0, tmm0) 
U4282: tmp2:= PINTMOVDTMM2I_DSZ32(tmm4) 

U4284: tmp2:= AND_DSZ32(0x00000004, tmp2) 
U4285: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U5835) 
U4286: mm0:= unk_7ea(tmm0) 

U4288: tmp0:= SUB_DSZ32(0x0000ffff, tmp0) SEQW GOTO U2309
U4289: tmp1:= MOVEFROMCREG_DSZ64( , 0x486) 
U428a: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 

U428c: tmp8:= OR_DSZ16(0x00000002, tmp4) 
U428d: tmp2:= AND_DSZ16(0x00000002, tmp1) 
U428e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U57a6) 

U4290: tmp5:= ZEROEXT_DSZ32(0x0000c001) SEQW GOTO U21ea
U4291: tmm4:= unk_624(tmm0, tmm1) 
U4292: tmp0:= PINTMOVDTMM2I_DSZ32(tmm4) 

U4294: tmp0:= AND_DSZ32(0x00000014, tmp0) 
U4295: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U1a94) 
U4296: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U4298: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) SEQW GOTO U71de
U4299: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) 
U429a: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000f, U517a) !m0,m2 

U429c: tmp7:= PINTMOVDTMM2I_DSZ32(tmm0) 
U429d: tmp3:= BT_DSZ16(tmp9, 0x0000000d) 
U429e: tmp7:= MOVEMERGEFLGS_DSZ64(tmp7, tmp3) 

U42a0: tmp7:= CMOVCC_DSZ32_CONDB(tmp7, 0x80000000) SEQW GOTO U5a34
U42a1: tmp3:= ZEROEXT_DSZ32(0x0000c001) 
U42a2: tmm0:= unk_7c2(mm3, 0x00000000) 

U42a4: tmm0:= unk_69d( , tmm0) 
U42a5: tmp9:= BTS_DSZ16(tmp9, 0x0000000d) 
U42a6: tmm0:= unk_643( , tmm0) 

U42a8: LFNCEMARK-> tmm6:= unk_5ff(tmm0) !m2 SEQW GOTO U1432
U42a9: tmp2:= ZEROEXT_DSZ16(0x00004195) 
U42aa: mm3:= unk_72a(tmm2) 

U42ac: tmp3:= AND_DSZ8(0x00000001, tmp3) 
U42ad: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U03b4) 
U42ae: tmp3:= AND_DSZ8(0x00000014, tmp7) 

U42b0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U03b4) SEQW GOTO U2fb8
U42b1: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 
U42b2: SYNCFULL-> MOVETOCREG_DSZ64(tmp15, 0x752) 

U42b4: tmp10:= READURAM( , 0x000b, 64) 
U42b5: tmp3:= ZEROEXT_DSZ32(0x0000c001) 
U42b6: tmm0:= unk_7c2(mm3, 0x00000000) 

U42b8: tmm0:= unk_69d( , tmm0) SEQW GOTO U4b89
U42b9: tmm6:= unk_624(tmm2, tmm2) 
U42ba: tmp3:= PINTMOVDTMM2I_DSZ32(tmm6) 

U42bc: tmp3:= AND_DSZ16(0x00000010, tmp3) 
U42bd: tmp0:= CMOVCC_DSZ16_CONDZ(tmp3, 0x00000001) 
U42be: tmm2:= unk_743(mm0, tmm2) 

U42c0: tmm0:= unk_482(tmm2, tmm3) SEQW GOTO U1432
U42c1: tmp3:= AND_DSZ32(0x00000010, tmp1) 
U42c2: tmp3:= SHR_DSZ32(tmp3, 0x00000003) 

U42c4: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x48c, tmp3) 
U42c5: tmp2:= XOR_DSZ32(0x00000002, tmp5) 
U42c6: tmp2:= AND_DSZ32(tmp3, tmp2) 

U42c8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U57a6) 
U42c9: LFNCEWAIT-> tmm7:= unk_53f(tmm1, tmm0) !m2 SEQW GOTO U0404
U42ca: tmp4:= AND_DSZ32(0x00000300, tmp7) 

U42cc: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U42cd) SEQW GOTO U42ce
U42cd: tmm6:= FMOV( , 0x00000031) !m0 
U42ce: tmm2:= FMOV( , 0x00000011) !m0 

U42d0: tmm3:= FMOV( , 0x00000031) !m0 SEQW GOTO U3b15
U42d1: tmp3:= AND_DSZ32(0x00000008, tmp0) 
U42d2: tmp3:= SHR_DSZ32(tmp3, 0x00000002) 

U42d4: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x48c, tmp3) 
U42d5: tmp2:= XOR_DSZ32(0x00000002, tmp5) 
U42d6: tmp2:= AND_DSZ32(tmp3, tmp2) 

U42d8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U57a6) 
U42d9: LFNCEWAIT-> tmm7:= unk_496(tmm1, tmm0) !m2 SEQW GOTO U0404
U42da: tmp3:= AND_DSZ32(0x00000010, tmp1) 

U42dc: tmp3:= SHR_DSZ32(tmp3, 0x00000003) 
U42dd: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x48c, tmp3) 
U42de: tmp2:= XOR_DSZ32(0x00000002, tmp5) 

U42e0: tmp2:= AND_DSZ32(tmp3, tmp2) 
U42e1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U57a6) 
U42e2: LFNCEWAIT-> tmm7:= unk_496(tmm0, tmm1) !m2 SEQW GOTO U0404

U42e4: tmp10:= OR_DSZ32(tmp4, tmp10) SEQW GOTO U42f8
U42e5: tmp13:= ZEROEXT_DSZ64(0x000043c4) 
U42e6: tmm4:= unk_5b9(xmmdst) 

U42e8: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U0342
U42e9: tmp11:= ZEROEXT_DSZ32(0x000020b6) 
U42ea: tmp12:= WRMSLOOPCTRFBR(0x00000003) 

U42ec: tmp14:= SAVEUIP(0x01, U0ca1) !m0 
U42ed: tmp8:= ZEROEXT_DSZ16(0x0000ff81) SEQW GOTO U2bde
U42ee: tmm5:= unk_5b9(xmmsrc) 

U42f0: tmm4:= unk_5b9(xmmdst) 
U42f1: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U3c64
U42f2: tmp7:= BTS_DSZ32(0x00000000, 0x0000001f) 

U42f4: tmm0:= unk_744(mm7) 
U42f5: tmm0:= SHUFPD(tmm0, tmm0) 
U42f6: tmp11:= ZEROEXT_DSZ32(0x000020b6) SEQW GOTO U3c68

U42f8: tmp13:= SAVEUIP(0x00, U5ec9) SEQW GOTO U1000
U42f9: tmp13:= ZEROEXT_DSZ64(0x000043c4) 
U42fa: tmm4:= unk_5b9(xmmdst) 

U42fc: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U2362
U42fd: tmp11:= ZEROEXT_DSZ32(0x0000220e) 
U42fe: tmp12:= ZEROEXT_DSZ8() 

U4300: tmp14:= SAVEUIP(0x01, U0ca2) !m0 
U4301: tmp8:= ZEROEXT_DSZ16(0x0000ff81) SEQW GOTO U2bde
U4302: tmm7:= unk_5b9(xmmsrc) 

U4304: tmp2:= ROR_DSZ8(tmp1, 0x00000004) 
U4305: tmp11:= ZEROEXT_DSZ32(0x0000249a) 
U4306: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U063c

U4308: tmm4:= unk_7d0(mm2, xmmdst) 
U4309: tmm7:= unk_7d0(mm2, tmm7) 
U430a: tmp13:= ZEROEXT_DSZ64(0x000043d4) SEQW GOTO U42ea

U430c: tmm7:= unk_5b9(xmmsrc) SEQW GOTO U42f9
U430d: tmp14:= unk_6a0() 
U430e: mm2:= unk_72a(tmm0) 

U4310: tmm3:= unk_743(mm2) 
U4311: tmm3:= unk_483(tmm3, tmm6) 
U4312: tmm3:= unk_53f(tmm1, tmm3) 

U4314: tmm7:= unk_6dc( , tmm3) !m2 
U4315: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U4316: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U01aa) SEQW GOTO U0404

U4318: tmm7:= unk_5b9(xmmsrc) SEQW GOTO U4228
U4319: tmp0:= MOVEFROMCREG_DSZ64( , 0x001) 
U431a: tmp0:= SUB_DSZ32(0x00000196, tmp0) 

U431c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U236a) 
U431d: tmm7:= unk_5b9(tmm1) 
U431e: tmm4:= unk_5b9(tmm3) 

U4320: tmm4:= SHUFPD( , tmm4) 
U4321: tmm4:= unk_57a(tmm4) 
U4322: tmp11:= ZEROEXT_DSZ32(0x0000227a) 

U4324: tmp13:= ZEROEXT_DSZ64(0x000043cc) SEQW GOTO U42ea
U4325: tmp2:= AND_DSZ16(0x00000002, tmp1) 
U4326: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U57a6) 

U4328: tmm3:= unk_624(0x00000000) 
U4329: tmp3:= PINTMOVDTMM2I_DSZ32(tmm3) 
U432a: tmp8:= OR_DSZ16(0x00000020, tmp8) 

U432c: tmp7:= AND_DSZ16(0x00000020, tmp1) 
U432d: tmp9:= OR_DSZ32(0x00008080, tmp8) 
U432e: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp7) 

U4330: tmp8:= CMOVCC_DSZ16_CONDZ(tmp9, tmp8) 
U4331: tmp3:= AND_DSZ16(0x00000040, tmp3) SEQW URET0
U4332: tmm7:= unk_5b9(xmmsrc) SEQW GOTO U4250

U4334: tmm4:= unk_5b9(xmmsrc) SEQW GOTO U417e
U4335: tmp1:= MOVEFROMCREG_DSZ64( , 0x486) 
U4336: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 

U4338: tmp8:= OR_DSZ16(0x00000002, tmp4) 
U4339: tmp2:= AND_DSZ16(0x00000002, tmp1) 
U433a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U57a6) 

U433c: tmp8:= OR_DSZ16(0x00000020, tmp8) 
U433d: tmp7:= AND_DSZ16(0x00000020, tmp1) 
U433e: tmp9:= OR_DSZ32(0x00008080, tmp8) 

U4340: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp7) 
U4341: tmp8:= CMOVCC_DSZ16_CONDZ(tmp9, tmp8) 
U4342: MOVETOCREG_DSZ64(tmp8, 0x48c) !m2 

U4344: tmp0:= unk_6a0() SEQW GOTO U21fe
U4345: tmp3:= AND_DSZ32(0x00000008, tmp0) 
U4346: tmp3:= SHR_DSZ32(tmp3, 0x00000002) 

U4348: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x48c, tmp3) 
U4349: tmp2:= XOR_DSZ32(0x00000002, tmp5) 
U434a: tmp2:= AND_DSZ32(tmp3, tmp2) 

U434c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U57a6) 
U434d: mm2:= unk_76a(tmm2) 
U434e: tmp2:= MOVEINSERTFLGS_DSZ32(tmp2) 

U4350: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U4351) SEQW GOTO U419d
U4351: tmm4:= unk_494( , tmm1) 
U4352: tmm4:= unk_57f(tmm2, tmm4) 

U4354: tmm7:= unk_482(tmm4, tmm1) !m2 SEQW GOTO U0404
U4355: tmp2:= SUB_DSZ16(0x00000410, tmp5) 
U4356: tmp3:= SETCC_CONDZ(tmp2) 

U4358: tmm4:= unk_496(tmm3, tmm2) 
U4359: mm2:= unk_72a(tmm4) 
U435a: tmp3:= AND_DSZ8(tmp2, tmp3) 

U435c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U421d) 
U435d: tmm6:= unk_624(tmm3, tmm3) 
U435e: tmp4:= PINTMOVDTMM2I_DSZ32(tmm6) 

U4360: tmp4:= AND_DSZ8(0x00000010, tmp4) 
U4361: tmp4:= CMOVCC_DSZ16_CONDZ(tmp4, 0x00000001) 
U4362: tmm6:= unk_743(mm4, tmm3) 

U4364: tmm0:= unk_482(tmm6, tmm2) SEQW GOTO U1432
U4365: NOP 
U4366: tmp2:= AND_DSZ8(0x00000014, tmp7) 

U4368: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U4369) SEQW GOTO U2fb8
U4369: tmp3:= AND_DSZ8(0x00000010, tmp7) 
U436a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U032a) 

U436c: tmm6:= unk_624(tmm2, tmm2) 
U436d: tmp4:= PINTMOVDTMM2I_DSZ32(tmm6) 
U436e: tmp5:= AND_DSZ8(0x00000004, tmp4) 

U4370: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U4371) SEQW GOTO U2fb8
U4371: tmp12:= OR_DSZ16(0x00000004, tmp12) 
U4372: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 

U4374: tmp3:= AND_DSZ16(0x00000004, tmp2) 
U4375: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1a50) 
U4376: tmp8:= unk_6a0() 

U4378: tmm4:= unk_496(tmm3, tmm2) 
U4379: mm4:= unk_72a(tmm4) 
U437a: tmm0:= unk_702(mm4, tmm0) SEQW GOTO U1432

U437c: tmm4:= unk_5b9(xmmsrc) SEQW GOTO U4182
U437d: NOP 
U437e: NOP 

U4380: tmm4:= unk_5b9(xmmsrc) SEQW GOTO U2af1
U4381: NOP 
U4382: NOP 

U4384: tmp10:= OR_DSZ32(tmp4, tmp10) SEQW GOTO U4204
U4385: NOP 
U4386: NOP 

U4388: tmp10:= OR_DSZ32(tmp4, tmp10) SEQW GOTO U41ec
U4389: NOP 
U438a: NOP 

U438c: tmp10:= OR_DSZ32(tmp11, tmp10) SEQW GOTO U4204
U438d: NOP 
U438e: NOP 

U4390: tmm7:= unk_5b9(tmm1) SEQW GOTO U4304
U4391: NOP 
case_32:
U4392: BTUJB_DIRECT_NOTTAKEN(rax, 0x0000000d, U5a14) !m2 

U4394: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, rax) !m2 SEQW GOTO U43a4
U4395: NOP 
U4396: SAVEUIP( , 0x01, U0644) !m0 

U4398: SAVEUIP( , 0x00, U4ff5) SEQW GOTO U5d31
U4399: NOP 
case_33:
U439a: tmp4:= ZEROEXT_DSZ32(0x00000005) 

U439c: tmp10:= OR_DSZ32(rax) 
U439d: tmp13:= ZEROEXT_DSZ32(0x00005d8a) SEQW GOTO U1a5e
U439e: LFNCEMARK-> tmp14:= unk_e7b(tmp0, tmp2) !m1 

U43a0: LFNCEWAIT-> tmp15:= RDSEGFLD(UNK_SEG_09, FLGS) 
U43a1: MOVETOCREG_DSZ64(tmp15, 0x7f5) SEQW GOTO U3bfc
case_34:
U43a2: WRITEURAM(tmp2, rax) !m2 

U43a4: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW GOTO U1bd0
U43a5: NOP 
U43a6: tmp15:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 

U43a8: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000003, U5cb5) !m0,m2 SEQW GOTO U5b14
U43a9: NOP 
case_35:
U43aa: PORTOUT_DSZ8_ASZ16_SC1(rax,  , tmp2) 

U43ac: SAVEUIP_REGOVR(0x01, U43ad, 0x0002) !m0 
U43ad: SAVEUIP( , 0x01, U43a4) !m0 SEQW GOTO U2b0d
U43ae: SYNCFULL-> NOP 

U43b0: FETCHFROMEIP1_ASZ32( , tmp2) 
U43b1: MJMPTARGET_INDIRECT_ASZ64( , tmp2) !m1 SEQW UEND0
case_36:
U43b2: STADSTGBUF_DSZ64_ASZ16_SC1(tmp4,  , tmp2) SEQW GOTO U43a4

U43b4: AETTRACE( , tmp7, 0x0e) SEQW GOTO U0414
U43b5: NOP 
U43b6: NOP 

U43b8: NOP 
U43b9: NOP 
case_37:
U43ba: PORTOUT_DSZ16_ASZ16_SC1(rax,  , tmp2) SEQW GOTO U43ac

U43bc: tmm3:= unk_6a5(tmm0) SEQW GOTO U1545
U43bd: NOP 
U43be: NOP 

U43c0: NOP 
U43c1: NOP 
case_38:
U43c2: PORTOUT_DSZ32_ASZ16_SC1(rax,  , tmp2) SEQW GOTO U43ac

U43c4: tmm3:= unk_6cf(tmm1, tmm0) SEQW GOTO U1545
U43c5: NOP 
U43c6: NOP 

U43c8: NOP 
U43c9: NOP 
case_39:
U43ca: PORTOUT_DSZ64_ASZ16_SC1(rax,  , tmp2) SEQW GOTO U43ac

U43cc: tmm3:= unk_6c8(tmm1, tmm0) SEQW GOTO U1545
U43cd: NOP 
U43ce: NOP 

U43d0: NOP 
U43d1: NOP 
case_4:
U43d2: STADSTGBUF_DSZ64_ASZ16_SC1(rax,  , tmp2) !m2 SEQW GOTO U43a4

U43d4: tmm3:= unk_6a2(tmm0, tmm1) SEQW GOTO U1545
U43d5: NOP 
U43d6: NOP 

U43d8: NOP 
U43d9: NOP 
case_41:
U43da: NOP SEQW GOTO U2769

U43dc: tmm3:= unk_626(tmm1, tmm0) SEQW GOTO U1545
U43dd: NOP 
U43de: NOP 

U43e0: NOP 
U43e1: NOP 
case_42:
U43e2: NOP SEQW GOTO U2769

U43e4: SAVEUIP( , 0x01, U621d) !m0 SEQW GOTO U5fb2
U43e5: NOP 
U43e6: NOP 

U43e8: NOP 
U43e9: NOP 
case_43:
U43ea: NOP SEQW GOTO U2769

U43ec: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U43ed: tmp10:= READAFLAGS( , tmp10) !m2 
U43ee: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U3aca

U43f0: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) !m1,m2 
U43f1: tmp14:= SAVEUIP(0x01, U3acd) !m0 SEQW GOTO U142d
case_44:
U43f2: NOP 

U43f4: NOP SEQW GOTO U2769
FUN_ucode_00043f5:
U43f5: tmp0:= MOVEFROMCREG_DSZ64( , 0x01b) 
U43f6: SYNCMARK-> MOVETOCREG_DSZ64(tmp0, 0x752) !m2 

U43f8: tmp4:= ADD_DSZ32(tmp4, 0x00000001) 
U43f9: SYNCWAIT-> r64dst:= OR_DSZ32(tmp4) !m2 SEQW GOTO U1bd0
case_45:
U43fa: tmp4:= OR_DSZ64(rbx) 

U43fc: tmp5:= OR_DSZ64(rax) 
U43fd: tmp10:= OR_DSZ64(rdx) 
U43fe: SAVEUIP_REGOVR( , 0x00, U4400, 0xda54) 

U4400: SAVEUIP( , 0x01, U4094) !m0 SEQW GOTO U3be4
U4401: NOP 
case_46:
U4402: tmp4:= OR_DSZ32(rax) 

U4404: tmp10:= OR_DSZ32(rdx) 
U4405: tmp13:= ZEROEXT_DSZ32(0x00005a22) SEQW GOTO U1a5e
FUN_ucode_0004406:
U4406: SYNCFULL-> tmp1:= MOVEFROMCREG_DSZ64( , 0x120) !m2 

U4408: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U4409) SEQW GOTO U4406
U4409: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x121) SEQW URET1
case_47:
U440a: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b800) !m2 

U440c: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b840) !m2 
U440d: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b880) !m2 
U440e: tmp3:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b8c0) !m2 

U4410: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b900) !m2 
U4411: tmp5:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b940) !m2 SEQW GOTO U30fd
U4412: NOP 

U4414: tmp6:= AND_DSZ32(0x003c7fd7, tmp6) SEQW SAVEUIP0 U4415SEQW GOTO U04ec
U4415: tmp1:= SHR_DSZ32(tmp6, 0x0000000a) 
U4416: tmp1:= AND_DSZ32(0x00000200, tmp1) 

U4418: tmp0:= AND_DSZ32(0x003c4dd7, tmp6) 
U4419: tmp0:= OR_DSZ32(0x00003000, tmp0) 
U441a: tmp0:= OR_DSZ32(tmp1, tmp0) 

U441c: tmp6:= unk_207(tmp0, tmp6) !m1 SEQW GOTO U447d
U441d: tmp11:= SHR_DSZ32(tmp14, 0x0000001a) 
U441e: tmp11:= OR_DSZ32(0x00000009, tmp11) 

U4420: tmp11:= MOVEINSERTFLGS_DSZ32(tmp11, tmp14) 
U4421: tmp7:= SUB_DSZ64(0x00000010, tmp5) 
U4422: tmp4:= SUB_DSZ32(0x00000001, tmp4) 

U4424: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp4, tmp11) 
U4425: tmp7:= ADD_DSZ64(0x00000010, tmp7) SEQW SAVEUIP1 U4426SEQW GOTO U0252
U4426: tmp15:= MOVEFROMCREG_DSZ64( , 0x7e1) 

U4428: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U2711) !m1 
U4429: tmp5:= SAVEUIP( , 0x01, U0ae4) !m0 
U442a: tmp8:= MOVEMERGEFLGS_DSZ64(tmp8, tmp11) 

U442c: tmp15:= SHR_DSZ64(tmp8, 0x00000020) 
U442d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U37f2) 
U442e: tmp2:= AND_DSZ32(0xffffffffffffff00, tmp8) 

U4430: tmp2:= SUB_DSZ32(0x00000800, tmp2) 
U4431: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U37f2) 
U4432: tmp1:= ZEROEXT_DSZ32(0x00000080) SEQW URET1

U4434: tmp3:= SAVEUIP_REGOVR(0x00, U4435, 0x0dd5, 0x00004dd5) SEQW GOTO U04ec
U4435: tmp3:= unk_20d(0x00004fd5, tmp3) !m1 
U4436: tmp3:= unk_201(0x00007fd5, tmp3) !m1 

U4438: tmp3:= CONCAT_DSZ16(0x00000024, tmp3) 
U4439: tmp3:= ZEROEXT_DSZ32N(tmp3) !m1 
U443a: tmp1:= SHL_DSZ32(rax, 0x0000000a) 

U443c: tmp1:= AND_DSZ32(0x00080000, tmp1) 
U443d: tmp0:= AND_DSZ32(0x00080000, tmp6) 
U443e: tmp0:= unk_207(tmp1, tmp0) !m1 

U4440: tmp1:= unk_207(tmp1) 
U4441: tmp1:= SHL_DSZ32(tmp1, 0x00000001) 
U4442: tmp1:= AND_DSZ32(tmp1, tmp6) 

U4444: tmp6:= NOTAND_DSZ32(tmp3, tmp6) 
U4445: tmp6:= OR_DSZ32(tmp0, tmp6) 
U4446: tmp0:= AND_DSZ32(tmp3, rax) 

U4448: tmp6:= OR_DSZ32(tmp0, tmp6) 
U4449: tmp6:= BTR_DSZ32(tmp6, 0x00000010) 
U444a: tmp0:= ZEROEXT_DSZ16(tmp1) 

U444c: tmp1:= XOR_DSZ32(tmp0, tmp1) 
U444d: tmp4:= OR_DSZ32(tmp1, tmp4) 
U444e: tmp0:= AND_DSZ32(0x00000100, rax) 

U4450: tmp0:= unk_207(tmp0) !m1 
U4451: tmp4:= OR_DSZ32(tmp0, tmp4) SEQW GOTO U447d
U4452: NOP 

U4454: tmp4:= unk_208(IMM_MACRO_ALIAS_DATASIZE) !m0 
U4455: tmp4:= unk_207(0x00000004, tmp4) 
U4456: tmp4:= AND_DSZ32(IMM_MACRO_ALIAS_DATASIZE, tmp4) !m0 

U4458: tmp3:= ZEROEXT_DSZ32(0x00254fd5) 
U4459: tmp3:= unk_20d(tmp3, 0x00254dd5) !m1 
U445a: tmp3:= unk_201(0x003f7fd5, tmp3) !m1 

U445c: tmp3:= unk_203(0x00257fd5, tmp3) !m1 
U445d: tmp3:= ZEROEXT_DSZ32N(tmp3) !m1 
U445e: tmp3:= unk_207(0x00004cd5, tmp3) !m1 

U4460: tmp1:= unk_207(0x00080000) !m1 
U4461: tmp0:= SHL_DSZ32(rax, 0x0000000a) 
U4462: tmp0:= AND_DSZ32(tmp1, tmp0) 

U4464: tmp6:= NOTAND_DSZ32(tmp1, tmp6) 
U4465: tmp6:= OR_DSZ32(tmp0, tmp6) 
U4466: tmp1:= SHR_DSZ32(tmp6, 0x0000000b) 

U4468: tmp1:= AND_DSZ32(0x00000200, tmp1) 
U4469: tmp1:= BTS_DSZ32(tmp1, 0x00000008) 
U446a: tmp1:= unk_207(tmp1) !m1 

U446c: tmp1:= AND_DSZ32(tmp1, rax) 
U446d: tmp4:= OR_DSZ32(tmp1, tmp4) 
U446e: tmp6:= NOTAND_DSZ32(tmp3, tmp6) 

U4470: tmp0:= AND_DSZ32(tmp3, rax) 
U4471: tmp6:= OR_DSZ32(tmp0, tmp6) SEQW GOTO U447d
U4472: NOP 

U4474: tmp4:= unk_207(0x00000001) !m1 
U4475: tmp4:= OR_DSZ32(0x00000000, tmp4) 
U4476: tmp3:= ZEROEXT_DSZ32(0x00004100) 

U4478: tmp3:= CONCAT_DSZ16(0x00000003, tmp3) 
U4479: tmp3:= unk_206(tmp3) !m1 
U447a: tmp3:= unk_20e( , tmp3) !m1 

U447c: tmp6:= NOTAND_DSZ32(tmp3, rax) 
U447d: SYNCMARK-> MOVETOCREG_BTR_DSZ64(tmp5, 0x00000010, 0x7fe) !m2 
U447e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U2711) 

U4480: SYNCWAIT-> rax:= ZEROEXT_DSZ32(tmp6) SEQW UEND0
U4481: tmp0:= OR_DSZN(rax) !m1 
U4482: SAVEUIP( , 0x01, U7774) !m0 SEQW GOTO U6231

U4484: tmp1:= unk_e4b(tmp0, tmp2) SEQW URET0
U4485: tmp15:= SHL_DSZ64(tmp0, 0x00000020) 
U4486: WRITEURAM(tmp15, 0x0124, 64) SEQW GOTO U5b8a

U4488: tmp1:= unk_e4b(tmp0, tmp2) SEQW URET0
U4489: MOVETOCREG_BTR_DSZ64(tmp10, 0x00000010, 0x7fe) 
U448a: MOVETOCREG_DSZ64( , 0x00000000, 0x065) SEQW GOTO U0414

U448c: tmp1:= unk_e4b(tmp0, tmp2) SEQW GOTO U3a80
U448d: NOP 
U448e: NOP 

U4490: tmp1:= unk_e4b(tmp0, tmp2) SEQW URET0
U4491: tmp0:= SUB_DSZN(tmp0, r64dst) !m1 
U4492: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp0, U5eda) SEQW GOTO U221e

U4494: tmp1:= unk_e4b(tmp0, tmp2) SEQW GOTO U3a80
U4495: NOP 
U4496: NOP 

U4498: tmp1:= unk_e4b(tmp0, tmp2) SEQW URET0
U4499: tmp10:= NOTAND_DSZ32(0x00000008, tmp11) 
U449a: UPDATEUSTATE( , 0x08) SEQW GOTO U2d1a

U449c: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 SEQW URET1
FUN_ucode_000449d:
U449d: tmp7:= AND_DSZ32(0xffff2bff, tmp7) 
U449e: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp7, 0x0000000a, 0x7f8) !m0,m2 SEQW GOTO U1bd0

U44a0: tmp1:= unk_e4b(tmp0, tmp2) SEQW URET0
U44a1: tmp0:= ZEROEXT_DSZ32(0x0000001c) 
U44a2: tmp1:= ZEROEXT_DSZ32(0x00000000) SEQW GOTO U59ea

U44a4: tmp1:= unk_e4b(tmp0, tmp2) !m1 SEQW URET0
U44a5: tmp2:= SHL_DSZ32(tmp2, 0x00000006) 
U44a6: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000bc00, tmp2, tmp5) !m2 SEQW GOTO U6380

U44a8: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 SEQW URET1
U44a9: tmp5:= MOVEMERGEFLGS_DSZ32(tmp5, tmp1) 
U44aa: tmp5:= CMOVCC_DSZ32_CONDZ(tmp5, tmp2) SEQW GOTO U189a

U44ac: tmp1:= unk_e4b(tmp0, tmp2) !m1 SEQW GOTO U3a80
U44ad: NOP 
U44ae: NOP 

U44b0: tmp1:= unk_e4b(tmp0, tmp2) !m1 SEQW URET0
U44b1: tmp12:= STC(0x00003292) 
U44b2: tmp2:= MOVE_DSZ32(0x00000006) SEQW GOTO U4c3a

U44b4: tmp1:= unk_e4b(tmp0, tmp2) !m1 SEQW URET0
U44b5: tmp5:= ROR_DSZ64(tmp5, tmp1) 
U44b6: tmp5:= AND_DSZ64(tmp12, tmp5) SEQW GOTO U189a

U44b8: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 SEQW URET1
U44b9: tmp1:= AND_DSZ64(tmp5, tmp1) 
U44ba: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) SEQW GOTO U32f0

U44bc: tmp1:= unk_e4b(tmp0, tmp2) !m1 SEQW GOTO U3a80
U44bd: NOP 
U44be: NOP 

U44c0: tmp1:= unk_e4b(tmp0, tmp2) !m1 SEQW URET0
U44c1: tmp1:= AND_DSZ64(tmp5, tmp1) 
U44c2: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) SEQW GOTO U3200

U44c4: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW GOTO U3a80
U44c5: NOP 
U44c6: NOP 

U44c8: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW URET0
U44c9: tmp2:= BT_DSZ64(tmp3, 0x0000000f) 
U44ca: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00020000) SEQW GOTO U30ed

U44cc: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW GOTO U3a80
U44cd: NOP 
U44ce: NOP 

U44d0: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW URET0
U44d1: tmp2:= AND_DSZ32(0x00000020, tmp2) 
U44d2: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp1, 0x6c3, tmp2) !m2 SEQW GOTO U3204

U44d4: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 SEQW URET1
U44d5: tmp2:= READURAM( , 0x0020, 64) 
U44d6: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, U2711, tmp2) !m1 SEQW GOTO U3234

U44d8: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW URET0
U44d9: tmp13:= ZEROEXT_DSZ32(0x00000008) 
U44da: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 SEQW GOTO U296e

U44dc: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW GOTO U3a80
U44dd: NOP 
U44de: NOP 

U44e0: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW URET0
U44e1: tmp1:= ZEROEXT_DSZ64(tmp3) 
U44e2: tmp0:= BTS_DSZ32(0x00000000, 0x00000010) SEQW GOTO U73ad

U44e4: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW GOTO U3a80
U44e5: NOP 
U44e6: NOP 

U44e8: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW URET0
U44e9: tmp0:= ZEROEXT_DSZ32(0x00000001) 
U44ea: tmp0:= BTS_DSZ32(tmp0, 0x00000010) SEQW GOTO U73ad

U44ec: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW GOTO U3a80
U44ed: NOP 
U44ee: NOP 

U44f0: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW URET0
U44f1: tmp0:= CONCAT_DSZ16(0x00000091) 
U44f2: tmp0:= ZEROEXT_DSZ16(0x00007699, tmp0) SEQW GOTO U3b59

U44f4: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW GOTO U3a80
U44f5: NOP 
U44f6: NOP 

U44f8: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW URET0
probe_mode_force_sgx_eenter_eresume:
U44f9: LFNCEWTMRK-> unk_dff() 
U44fa: ADD_DSZ32(r64dst) !m1,m2 SEQW GOTO U1bd0

U44fc: tmp1:= unk_e4b(tmp0) !m1,m2 SEQW GOTO U3a80
U44fd: NOP 
U44fe: NOP 

U4500: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW URET0
U4501: tmp7:= CONCAT_DSZ16(tmp7, 0x00000403) 
U4502: SAVEUIP( , 0x00, U612e) SEQW GOTO U6cb0

U4504: tmp0:= ZEROEXT_DSZ32(0x00000001) SEQW GOTO U3d12
U4505: tmp0:= OR_DSZ16(0x00008080, tmp8) 
U4506: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x48c) 

U4508: tmp8:= unk_6a0() 
U4509: LFNCEWAIT-> mm0:= unk_53f(0x00000000, tmm0) SEQW GOTO U1bd0
U450a: NOP 

U450c: tmp0:= READURAM( , 0x005c, 64) 
U450d: tmp0:= SHR_DSZ32(tmp0, 0x0000000e) 
U450e: tmp1:= READURAM( , 0x0053, 64) 

U4510: tmp0:= NOTAND_DSZ32(tmp1, tmp0) 
U4511: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U3bc1) !m0,m1,m2 
U4512: tmp2:= READURAM( , 0x0035, 64) SEQW GOTO U5961

U4514: tmp5:= SAVEUIP_REGOVR(0x00, U4515, 0x0000) SEQW GOTO U5f64
U4515: MOVETOCREG_DSZ64( , 0x00000000, 0x29d, 32) !m1 
U4516: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1,m2 

U4518: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U4516) 
U4519: tmp12:= ZEROEXT_DSZ32(0x00005f8c) SEQW GOTO U3c11
U451a: NOP 

U451c: tmp5:= ZEROEXT_DSZ32() 
U451d: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x0010) !m2 
U451e: tmp0:= READURAM( , 0x0023, 64) 

U4520: tmp0:= XOR_DSZ32(tmp1, tmp0) 
U4521: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000006, U28e8) !m0,m1 
U4522: SAVEUIP( , 0x01, U28e1) !m0 SEQW GOTO U606c

U4524: tmp0:= MOVEFROMCREG_DSZ64( , 0x575) 
U4525: MOVETOCREG_BTS_DSZ64(tmp0, 0x0000000b, 0x575) !m0 
U4526: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x0010) !m2 

U4528: MOVETOCREG_DSZ64(tmp1, 0x562) 
U4529: tmp6:= MOVEFROMCREG_DSZ64( , 0x513) 
U452a: BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x00000000, U1b62) !m2 SEQW GOTO U1b59

U452c: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x0010) !m2 
U452d: MOVETOCREG_DSZ64(tmp0, 0x563) SEQW GOTO U06ee
U452e: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x29e) !m1 

U4530: SAVEUIP( , 0x01, U37a2) !m0 SEQW GOTO U208d
U4531: NOP 
U4532: NOP 

U4534: tmp0:= ZEROEXT_DSZ32(0x00000003) 
U4535: tmp5:= SAVEUIP( , 0x00, U3d12) SEQW GOTO U5f64
U4536: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp4, U5c15) 

U4538: tmp7:= ZEROEXT_DSZ64(0x00001f80) SEQW GOTO U5c16
U4539: NOP 
U453a: NOP 

U453c: tmp12:= ZEROEXT_DSZ32(0x0000059c) 
U453d: tmp5:= SAVEUIP( , 0x00, U3c11) SEQW GOTO U5f64
U453e: tmp0:= ZEROEXT_DSZ32(0x00000002) 

U4540: SAVEUIP( , 0x00, U3d12) SEQW GOTO U5f64
U4541: NOP 
U4542: NOP 

U4544: tmp5:= ZEROEXT_DSZ32() 
U4545: TESTUSTATE( , UCODE, 0x1000) ? SEQW GOTO U28e8
U4546: tmp0:= MOVEFROMCREG_DSZ64( , 0x575) 

U4548: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000000b, U28e8) !m0,m1 
U4549: tmp1:= MOVEFROMCREG_DSZ64( , 0x105) 
U454a: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000002, U28e8) !m0,m1 SEQW GOTO U31d9

U454c: tmp15:= READURAM( , 0x0053, 64) 
U454d: tmp15:= OR_DSZ64(0x00000001, tmp15) 
U454e: WRITEURAM(tmp15, 0x0053, 32) SEQW GOTO U06ee

FUN_ucode_0004550:
U4550: LBSYNC(0x00000002) SEQW GOTO U2515
U4551: NOP 
U4552: NOP 

U4554: SAVEUIP_REGOVR(0x01, U4555, 0x0000) !m0 
U4555: SAVEUIP( , 0x01, U06ee) !m0 SEQW GOTO U6074
U4556: tmp2:= AND_DSZ32(0x00000001, tmp6) 

U4558: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U4119) SEQW GOTO U5ddc
U4559: NOP 
U455a: NOP 

U455c: SAVEUIP_REGOVR(0x01, U455d, 0x0000) !m0 SEQW GOTO U6074
U455d: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x50a0) !m2 
U455e: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x50a8) !m2 

U4560: MOVETOCREG_DSZ64(tmp0, 0x205, 32) !m1 
U4561: MOVETOCREG_DSZ64(tmp1, 0x206, 32) !m1 SEQW GOTO U06ee
U4562: NOP 

U4564: tmp0:= ZEROEXT_DSZ32(0x00000004) 
U4565: tmp5:= SAVEUIP( , 0x00, U3d12) SEQW GOTO U5f64
U4566: tmp0:= OR_DSZ16(0x00008080, tmp8) 

U4568: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x48c) SEQW GOTO U0404
U4569: NOP 
U456a: NOP 

U456c: tmp0:= ZEROEXT_DSZ32(0x00000005) 
U456d: tmp5:= SAVEUIP( , 0x00, U3d12) SEQW GOTO U5f64
U456e: TESTUSTATE( , SYS, !UST_USER_MODE | UST_8086_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW URET1

U4570: SAVEUIP( , 0x00, U6394) SEQW GOTO U0a6d
U4571: NOP 
U4572: NOP 

U4574: tmp1:= ZEROEXT_DSZ32(0x0000018a) 
U4575: tmp1:= CONCAT_DSZ16(0x000000f1, tmp1) 
U4576: WRITEURAM(tmp1, 0x0078, 32) !m2 

U4578: SAVEUIP( , 0x01, U57c1) !m0 SEQW GOTO U631c
U4579: NOP 
U457a: NOP 

U457c: tmp5:= BTS_DSZ32(0x00000000, 0x00000010) 
U457d: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U457e: tmp2:= BT_DSZ32(tmp2, 0x00000011) 

U4580: tmp5:= SELECTCC_DSZ32_CONDNB(tmp2, tmp5) 
U4581: tmp1:= READURAM( , 0x000d, 64) 
U4582: tmp1:= SHR_DSZ64(tmp1, 0x00000020) SEQW GOTO U2585

U4584: SAVEUIP_REGOVR(0x01, U4585, 0x0001) !m0 
U4585: SAVEUIP( , 0x01, U458c) !m0 SEQW GOTO U6074
U4586: LFNCEWAIT-> tmp15:= unk_d61(tmp2) !m2 

U4588: SAVEUIP_REGOVR(0x01, U4589, 0x0007) !m0 SEQW GOTO U2778
U4589: NOP 
U458a: NOP 

U458c: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U0362
U458d: NOP 
U458e: NOP 

U4590: NOP SEQW GOTO U0cf6
U4591: NOP 
U4592: NOP 

U4594: tmp1:= SUB_DSZ32(0x00000001) 
U4595: SAVEUIP( , 0x01, U45a8) !m0 SEQW GOTO U287d
U4596: rcx:= ZEROEXT_DSZ16N(tmp4, rcx) !m1 

U4598: GENARITHFLAGS(0x0000003f, tmp10) !m2 SEQW GOTO U069e
U4599: NOP 
U459a: NOP 

U459c: SAVEUIP_REGOVR(0x01, U459d, 0x0001) !m0 
U459d: SAVEUIP( , 0x01, U45a8) !m0 SEQW GOTO U6074
U459e: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x003c) !m2 

U45a0: LFNCEMARK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U6380) !m1 SEQW GOTO U3398
U45a1: NOP 
U45a2: NOP 

U45a4: tmp1:= ADD_DSZ32() SEQW SAVEUIP1 U45a5SEQW GOTO U287d
U45a5: NOP 
U45a6: NOP 

U45a8: tmp5:= SAVEUIP( , 0x00, U31e1) SEQW GOTO U5f64
U45a9: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 
U45aa: tmp4:= ADD_DSZ64(0x00000008, tmp4) 

U45ac: STADSTGBUF_DSZ64_ASZ16_SC1(tmp2,  , tmp1) 
U45ad: tmp2:= ADD_DSZ64(0x00000020, tmp2) 
U45ae: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U45a9

U45b0: NOP SEQW GOTO U1f9a
U45b1: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 
U45b2: SYNCFULL-> MOVETOCREG_DSZ64(tmp15, 0x752) 

U45b4: unk_256() !m1 
U45b5: tmp0:= READURAM( , 0x003a, 64) 
U45b6: tmp0:= BTR_DSZ64(tmp0, 0x00000020) 

U45b8: WRITEURAM(tmp0, 0x003a, 64) !m2 
U45b9: SIGEVENT( , 0x0000008b) 
U45ba: tmp5:= LDZX_DSZ64_ASZ32_SC1(tmp8, mode=0x18) 

U45bc: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000008, mode=0x18) 
U45bd: tmp1:= READURAM( , 0x0010, 64) 
U45be: tmp1:= NOTAND_DSZ64(0xffffffff, tmp1) 

U45c0: tmp1:= OR_DSZ64(0x0000007f, tmp1) 
U45c1: tmp1:= AND_DSZ64(tmp1, tmp0) 
U45c2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 

U45c4: MOVETOCREG_DSZ64(tmp0, 0x101) !m2 
U45c5: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000010, mode=0x18) 
U45c6: MOVETOCREG_DSZ64(tmp0, 0x102) !m2 

U45c8: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000018, mode=0x18) 
U45c9: tmp1:= ZEROEXT_DSZ32(0xffffffc8) 
U45ca: tmp1:= CONCAT_DSZ32(0xfffe0000, tmp1) 

U45cc: tmp1:= AND_DSZ64(tmp1, tmp0) 
U45cd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 
U45ce: MOVETOCREG_DSZ64(tmp0, 0x0b1) !m2 

U45d0: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000020, mode=0x18) 
U45d1: tmp1:= ZEROEXT_DSZ32(0x0000001f) 
U45d2: tmp1:= AND_DSZ64(tmp1, tmp0) 

U45d4: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 
U45d5: WRITEURAM(tmp0, 0x0052, 64) !m2 
U45d6: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000028, mode=0x18) 

U45d8: unk_25c(tmp0, tmp0) 
U45d9: MOVETOCREG_DSZ64(tmp0, 0x080) !m2 
U45da: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000030, mode=0x18) 

U45dc: unk_25c(tmp0, tmp0) 
U45dd: MOVETOCREG_DSZ64(tmp0, 0x081) !m2 
U45de: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000038, mode=0x18) 

U45e0: unk_25c(tmp0, tmp0) 
U45e1: MOVETOCREG_DSZ64(tmp0, 0x082) !m2 
U45e2: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000040, mode=0x18) 

U45e4: unk_25c(tmp0, tmp0) 
U45e5: SYNCMARK-> MOVETOCREG_DSZ64(tmp0, 0x083) !m2 
U45e6: tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000048, mode=0x18) 

U45e8: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000050, mode=0x18) 
U45e9: tmp0:= OR_DSZ64(tmp1, tmp0) 
U45ea: tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000058, mode=0x18) 

U45ec: tmp0:= OR_DSZ64(tmp1, tmp0) 
U45ed: tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000060, mode=0x18) 
U45ee: tmp0:= OR_DSZ64(tmp1, tmp0) 

U45f0: tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000068, mode=0x18) 
U45f1: tmp0:= OR_DSZ64(tmp1, tmp0) 
U45f2: tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000070, mode=0x18) 

U45f4: tmp0:= OR_DSZ64(tmp1, tmp0) 
U45f5: tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000078, mode=0x18) 
U45f6: tmp0:= OR_DSZ64(tmp1, tmp0) 

U45f8: SYNCWAIT-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 
U45f9: tmp1:= ZEROEXT_DSZ32(0xf0840070) 
U45fa: tmp1:= CONCAT_DSZ32(0xffffff00, tmp1) 

U45fc: tmp1:= AND_DSZ64(tmp1, tmp5) 
U45fd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 
U45fe: UPDATEUSTATE( , 0x04) 

U4600: WRITEURAM( , 0x00000000, 0x003f, 64) !m2 SEQW GOTO U0e8e
U4601: tmp9:= ZEROEXT_DSZ32(0x000001fd) 
U4602: tmm5:= unk_744(tmm1) 

U4604: tmm6:= unk_660(tmm5) 
U4605: tmp6:= PINTMOVDTMM2I_DSZ64(tmm6) 
U4606: tmp6:= MOVEINSERTFLGS_DSZ64(tmp6, tmp6) 

U4608: tmp8:= unk_6a0() 
U4609: tmm0:= unk_53f(0x00000000, tmm0) 
U460a: tmm4:= unk_73a() SEQW GOTO U6fc2

U460c: tmp4:= SELECTCC_DSZ32_CONDZ(tmp8, 0x00000040) 
U460d: tmp0:= SHL_DSZ32(tmp10, 0x0000001a) 
U460e: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U4615

U4610: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U4611: tmp1:= AND_DSZ32(tmp0, tmp1) 
U4612: tmp1:= SELECTCC_DSZ32_CONDNS(tmp1, 0x00000060) 

U4614: tmp4:= OR_DSZ32(tmp1, tmp4) 
U4615: UFLOWCTRL( , tmp4, USTATE) 
U4616: tmp9:= ZEROEXT_DSZ32(0x000007c5) 

U4618: tmp0:= ZEROEXT_DSZ32(0xffffffffffffffff) 
U4619: tmp0:= CONCAT_DSZ32(tmp0, 0xffead800) 
U461a: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U0836

U461c: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U4620
U461d: tmp1:= NOTAND_DSZ32(tmp10, tmp11) 
U461e: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000005, U2711) !m1 

U4620: tmp0:= AND_DSZ64(tmp0, tmp10) 
U4621: tmp1:= TESTUSTATE(tmp10, SYS, UST_VMX_OP_DIS) !m1 ? SEQW GOTO U4625
U4622: BTUJNB_DIRECT_NOTTAKEN(tmp10, 0x0000000d, U2711) !m1 

U4624: tmp1:= ZEROEXT_DSZ32() 
U4625: TESTUSTATE( , UCODE, !0x0800) !m0 ? SEQW GOTO U4628
U4626: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U2711) !m1 

U4628: LFNCEMARK-> tmp1:= READURAM( , 0x0035, 64) 
U4629: tmp1:= SHR_DSZ64(tmp1, 0x00000014) 
U462a: tmp1:= AND_DSZ32(0x00200000, tmp1) 

U462c: tmp0:= NOTAND_DSZ64(tmp1, tmp0) 
U462d: tmp1:= READURAM( , 0x0077, 64) 
U462e: tmp1:= SHR_DSZ64(tmp1, 0x0000001c) 

U4630: tmp2:= READURAM( , 0x005c, 64) 
U4631: tmp2:= SHR_DSZ64(tmp2, 0x0000000b) 
U4632: tmp1:= NOTAND_DSZ32(tmp1, tmp2) 

U4634: tmp1:= AND_DSZ32(tmp1, 0x00008000) 
U4635: tmp0:= NOTAND_DSZ64(tmp1, tmp0) 
U4636: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 

U4638: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U2d06) SEQW GOTO U0836
U4639: rax:= unk_c45(tmp8, 0x00001800) 
U463a: tmp0:= unk_c45(tmp8, 0x00001808) 

U463c: rcx:= unk_c45(tmp8, 0x00001810) 
U463d: tmp1:= unk_c45(tmp8, 0x00001818) 
U463e: rdx:= unk_c45(tmp8, 0x00001820) 

U4640: tmp2:= unk_c45(tmp8, 0x00001828) 
U4641: rbx:= unk_c45(tmp8, 0x00001830) 
U4642: tmp3:= unk_c45(tmp8, 0x00001838) SEQW URET0

check_rsa_pub_key_hash:
U4644: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U4645: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U4646: tmp0:= NOTAND_DSZ32(tmp0, 0x00001001) 

U4648: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U4649) SEQW GOTO U008e
U4649: tmp0:= MOVEFROMCREG_DSZ64( , 0x01b) 
U464a: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x752) 

U464c: tmp0:= MOVEFROMCREG_DSZ64( , 0x0b1) 
U464d: tmp0:= NOTAND_DSZ32(tmp0, 0x00000007) 
U464e: tmp1:= MOVEFROMCREG_DSZ64( , 0x088) 

U4650: tmp1:= AND_DSZ32(0x00100000, tmp1) 
U4651: tmp0:= OR_DSZ32(tmp1, tmp0) 
U4652: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U1bd0) 

U4654: tmp1:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 
U4655: tmp1:= BT_DSZ64(tmp1, 0x0000003f) 
U4656: tmp0:= SELECTCC_DSZ64_CONDNB(tmp1, 0x00000040) 

U4658: tmp3:= ZEROEXT_DSZ32(0x00000063) 
U4659: tmp1:= MOVEMERGEFLGS_DSZ32(0x000000a3, tmp1) 
U465a: tmp3:= CMOVCC_DSZ32_CONDB(tmp1, tmp3) 

gen_rc4_key:
U465c: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U465d: tmp1:= BT_DSZ64(tmp1, 0x0000000d) 
U465e: tmp2:= SELECTCC_DSZ64_CONDB(tmp1, 0x00000020) 

U4660: tmp0:= OR_DSZ32(tmp2, tmp0) 
U4661: tmp0:= SHL_DSZ32(tmp0, 0x00000008) 
U4662: tmp0:= OR_DSZ32(0x00001202, tmp0) 

U4664: tmp2:= ZEROEXT_DSZ32N(tmp4) !m1 
U4665: tmp2:= SHL_DSZ64(tmp2, 0x00000010) 
U4666: ROVR<- tmp0:= OR_DSZ64(tmp2, tmp0) SEQW SAVEUIP1 U4668SEQW GOTO U66f8

U4668: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, U4670) 
U4669: SAVEUIP_REGOVR(0x01, U466a, 0x0010) !m0 SEQW GOTO U0514
U466a: tmpv0:= SHL_DSZ64(tmpv0, 0x00000008) 

U466c: tmpv0:= ZEROEXT_DSZ8(0x0000007d, tmpv0) 
U466d: tmpv1:= ZEROEXT_DSZ32(0x00000071) SEQW SAVEUIP1 U466eSEQW GOTO U66f8
U466e: NOP 

U4670: LFNCEWAIT-> unk_256() !m1 SEQW UEND0
U4671: unk_eff() SEQW GOTO U2711
U4672: tmp3:= PORTIN_DSZ16_ASZ16_SC1(0x4680) !m2 

U4674: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000b740,  , tmp3) 
U4675: PORTOUT_DSZ32_ASZ16_SC1(0x50d4,  , 0x00000000) !m2 
U4676: tmp2:= ZEROEXT_DSZ32(0x0000fff0) 

U4678: tmp1:= MOVEFROMCREG_DSZ64( , 0x78e) 
U4679: tmp1:= ADD_DSZ32(tmp2, tmp1) 
U467a: MOVETOCREG_DSZ64(tmp1, 0x067) !m2 

U467c: tmp3:= PORTIN_DSZ32_ASZ16_SC1(0x4800) !m2 
U467d: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000018, U467e) SEQW GOTO U43ae
U467e: WRITEURAM(tmp1, 0x0067, 64) !m2 

U4680: tmp0:= ZEROEXT_DSZ64() SEQW GOTO U3b5c
U4681: tmm3:= FMOV( , tmm0) 
U4682: tmm5:= unk_7c2(tmm0) 

U4684: tmm1:= unk_6aa(tmm3, tmm5) 
U4685: tmm3:= unk_62f(tmm3) 
U4686: tmm1:= unk_62f(tmm1) 

U4688: tmm5:= unk_637(tmm1, tmm3) 
U4689: tmp4:= PINTMOVDTMM2I_DSZ32(tmm5) 
U468a: tmp10:= OR_DSZ32(tmp4, tmp10) SEQW GOTO U2281

U468c: MOVETOCREG_DSZ64(tmp1, 0x067) 
U468d: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bf00) !m2 
U468e: tmp4:= AND_DSZ64(0x000c0000, tmp4) 

U4690: tmp7:= MOVEFROMCREG_DSZ64( , 0x088) 
U4691: tmp7:= NOTAND_DSZ64(0x000c0000, tmp7) 
U4692: MOVETOCREG_OR_DSZ64(tmp7, 0x088, tmp4) 

U4694: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002d0, mode=0x01, tmp12) 
U4695: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001cc, mode=0x01, tmp12) 
U4696: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U33ed

U4698: tmp2:= TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U469c
U4699: tmp7:= BTR_DSZ64(tmp7, 0x0000000f) 
U469a: tmp2:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00000080) 

U469c: SAVEUIP( , 0x00, U34fd) 
U469d: ROVR<- NOP SEQW SAVEUIP1 U469eSEQW GOTO U0ecd
U469e: tmp14:= MOVEINSERTFLGS_DSZ64(tmp4, 0x00000020) 

U46a0: TESTUSTATE( , UCODE, !0x0040) !m0 ? SEQW URET0
U46a1: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U6535
U46a2: LFNCEMARK-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004a8, mode=0x01, tmp12, 0x00000000) 

U46a4: tmp13:= ZEROEXT_DSZ32(0x000046ae) 
U46a5: LFNCEWAIT-> FETCHFROMEIP1_ASZ64( , tmp3) !m1 
U46a6: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U279a

U46a8: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U46ae
U46a9: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000001, U2991) !m1 
U46aa: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000002, U386e) !m0,m1,m2 

U46ac: tmp0:= READURAM( , 0x0007, 64) 
U46ad: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000003, U3b59) !m0,m1,m2 
U46ae: SAVEUIP( , 0x00, U5b44) 

U46b0: tmp9:= BT_DSZ32(tmp7, 0x0000000e) SEQW SAVEUIP1 U46b1SEQW GOTO U39c1
U46b1: NOP 
U46b2: NOP 

U46b4: TESTUSTATE( , SYS, !0x4000) !m0,m1 ? SEQW GOTO U4f50
U46b5: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW URET0
U46b6: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 

U46b8: MSLOOP-> unk_25e( , tmp14) SEQW GOTO U2792
U46b9: tmp10:= unk_52b(tmp10) 
U46ba: tmm3:= unk_4ec(tmm1) 

U46bc: tmm1:= XORPD(tmm1, tmm3) 
U46bd: tmm3:= unk_4ec(tmm3) 
U46be: tmm1:= XORPD(tmm1, tmm3) 

U46c0: tmm3:= unk_4ec(tmm3) 
U46c1: tmm1:= XORPD(tmm1, tmm3) 
U46c2: tmm1:= XORPD(tmm1, tmm2) SEQW URET1

U46c4: tmp0:= SUB_DSZ32(0x41b7b4a1, tmp0) 
U46c5: tmp1:= SUB_DSZ32(0xdbdc0f7f, tmp1) 
U46c6: tmp2:= SUB_DSZ32(0x6ea2ea0f, tmp2) 

U46c8: tmp3:= SUB_DSZ32(0xb28fb7b5, tmp3) 
U46c9: tmp4:= SUB_DSZ32(0x3f1586cb, tmp4) 
U46ca: tmp8:= SUB_DSZ32(0x0388e90c, tmp8) 

U46cc: tmp9:= SUB_DSZ32(0xae84cbf5, tmp9) 
U46cd: tmp10:= SUB_DSZ32(0x1d90453a, tmp10) 
U46ce: tmp0:= OR_DSZ32(tmp1, tmp0) 

U46d0: tmp0:= OR_DSZ32(tmp2, tmp0) 
U46d1: tmp0:= OR_DSZ32(tmp3, tmp0) 
U46d2: tmp0:= OR_DSZ32(tmp4, tmp0) 

U46d4: tmp0:= OR_DSZ32(tmp8, tmp0) 
U46d5: tmp0:= OR_DSZ32(tmp9, tmp0) 
U46d6: tmp0:= OR_DSZ32(tmp10, tmp0) 

U46d8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U57b5) 
U46d9: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000180) 
U46da: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, 0x00000011, U57b5) !m2 

U46dc: tmp0:= ZEROEXT_DSZ32(0x0ed17ed0) 
U46dd: tmp0:= CONCAT_DSZ32(0x0ed17ed0, tmp0) 
U46de: tmp1:= ZEROEXT_DSZ32(0x0ed17ed0) 

U46e0: tmp1:= CONCAT_DSZ32(0x0ed17ed0, tmp1) 
U46e1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7,  , tmp0) 
U46e2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000008,  , tmp1) 

U46e4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000030,  , tmp0) 
U46e5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000038,  , tmp1) 
U46e6: tmp0:= ZEROEXT_DSZ32(0x00000018) 

U46e8: LFNCEWAIT-> tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp14, 0x00000060, mode=0x01, tmp0) 
U46e9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000010, tmp0, tmp1) 
U46ea: tmp0:= SUB_DSZ64(0x00000008, tmp0) 

U46ec: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp0, U46ed) SEQW GOTO U46e8
U46ed: tmp5:= ADD_DSZ64(0x00000000, tmp7) 
U46ee: tmp6:= ZEROEXT_DSZ32(0x00000001) 

U46f0: tmp7:= ADD_DSZ64(0x00000040, tmp7) 
U46f1: tmp11:= ZEROEXT_DSZ16(0x000061b9) 
U46f2: WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U519c

U46f4: tmp8:= AND_DSZ32(0xe0000001, tmp2) 
U46f5: tmp1:= SELECTCC_DSZ32_CONDZ(tmp8, 0x00000040) 
U46f6: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U206d

U46f8: tmp7:= SHL_DSZ32(tmp7, 0x0000001a) 
U46f9: tmp3:= AND_DSZ32(tmp7, tmp10) 
U46fa: tmp5:= MOVEFROMCREG_DSZ64( , 0x7ff) 

U46fc: tmp6:= SHL_DSZ32(tmp5, 0x00000017) 
U46fd: tmp0:= AND_DSZ32(tmp6, tmp3) 
U46fe: tmp2:= TESTUSTATE(tmp0, SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U4705

U4700: tmp2:= NOTAND_DSZ32(tmp0, tmp3) 
U4701: tmp2:= SELECTCC_DSZ32_CONDNS(tmp2, 0x00000060) 
U4702: tmp4:= OR_DSZ32(tmp2, tmp4) 

U4704: tmp2:= NOTAND_DSZ32(tmp0, 0x80000000) 
U4705: tmp4:= OR_DSZ32(tmp1, tmp4) 
U4706: tmp2:= SELECTCC_DSZ32_CONDS(tmp2, 0x00000044) 

U4708: tmp4:= OR_DSZ32(tmp2, tmp4) 
U4709: tmp2:= SELECTCC_DSZ32_CONDNS(tmp0, 0x00000010) 
U470a: tmp4:= OR_DSZ32(tmp2, tmp4) 

U470c: UFLOWCTRL( , tmp4, USTATE) 
U470d: tmp1:= SHR_DSZ64(tmp10, 0x00000020) 
U470e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 

U4710: tmp1:= AND_DSZ32(0x60000000, tmp10) 
U4711: tmp1:= SUB_DSZ32(0x20000000, tmp1) 
U4712: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2711) 

U4714: tmp1:= NOTAND_DSZ32(tmp10, 0x80000001) 
U4715: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U2711) !m1 
U4716: LFNCEMARK-> TESTUSTATE( , SYS, UST_VMX_OP_DIS) !m1 ? SEQW GOTO U4720

U4718: tmp2:= READURAM( , 0x0043, 64) 
U4719: tmp2:= BT_DSZ64(tmp2, 0x00000027) 
U471a: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x80000001) 

U471c: tmp2:= OR_DSZ32(0x00000020, tmp2) 
U471d: tmp2:= NOTAND_DSZ32(tmp10, tmp2) 
U471e: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2711) 

U4720: tmp10:= AND_DSZ32(0xe005003f, tmp10) 
U4721: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U4724
U4722: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp10, 0x0000001f, U2711) !m0,m1 

U4724: tmp9:= ZEROEXT_DSZ32(0x000007f6) 
U4725: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U2cf2) SEQW GOTO U0836
U4726: tmp1:= READURAM( , 0x0043, 64) 

U4728: tmp4:= READURAM( , 0x0057, 64) 
U4729: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U472a: tmp4:= ADD_DSZ64(0x000001e8, tmp4) 

U472c: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1bae
U472d: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U472e: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000f, U1bae) !m0,m2 

U4730: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 
U4731: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U44a1) 
U4732: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0xfffffffffffffff8, mode=0x01, tmp6) 

U4734: CMPUJZ_DIRECT_NOTTAKEN(tmp1, U1bae, tmp11) !m2 
U4735: tmp6:= SUB_DSZ32(0x00000008, tmp6) SEQW GOTO U4731
U4736: tmp9:= ZEROEXT_DSZ8N(IMM_MACRO_1b) !m0,m1 

U4738: LFNCEWAIT-> tmp0:= READURAM( , 0x0070, 64) 
U4739: tmp7:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U6404
U473a: tmp7:= READURAM( , 0x004c, 64) 

U473c: tmp1:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U473e
U473d: tmp1:= READURAM( , 0x0043, 64) 
U473e: tmp1:= OR_DSZ64(tmp7, tmp1) 

U4740: tmp1:= SHR_DSZ64(tmp1, 0x00000037) 
U4741: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000005, U6404) !m1 
U4742: tmp1:= BTR_DSZ64(tmp0, 0x00000032) 

U4744: LFNCEWAIT-> MOVETOCREG_SHR_DSZ64(tmp1, 0x00000020, 0x008) 
U4745: tmp0:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00000400) SEQW GOTO U6406
U4746: tmp1:= ZEROEXT_DSZ32(0x00000110) 

U4748: MOVETOCREG_DSZ64(tmp1, 0x29e, 32) !m1,m2 
U4749: SAVEUIP_REGOVR(0x01, U474a, 0x0001) !m0 SEQW GOTO U2b0d
FUN_ucode_000474a:
U474a: unk_eef() 

U474c: SAVEUIP_REGOVR(0x01, U474d, 0x0001) !m0 SEQW GOTO U2b0d
U474d: tmp1:= MOVEFROMCREG_DSZ64( , 0x224, 32) !m1 
U474e: tmp1:= AND_DSZ32(0x00000001, tmp1) 

U4750: tmp0:= BT_DSZ64(tmp0, 0x0000002b) 
U4751: tmp1:= SELECTCC_DSZ32_CONDB(tmp0, tmp1) 
U4752: TESTUSTATE( , VMX, 0x0008) !m2 ? SEQW GOTO U588a

U4754: tmp0:= ZEROEXT_DSZ32(0x00000024) 
U4755: ROVR<- tmp1:= ZEROEXT_DSZ64(tmp1) SEQW SAVEUIP1 U4756
U4756: SAVEUIP( , 0x01, U079d) !m0 

U4758: tmp3:= ZEROEXT_DSZ32(0x0000000a) SEQW GOTO U1cfc
U4759: tmp12:= ADD_DSZ64(0x00000010, tmp8) 
U475a: tmp0:= READURAM( , 0x0006, 64) 

U475c: tmp0:= ZEROEXT_DSZ16(0x00000005, tmp0) 
U475d: tmp0:= OR_DSZ64(0x00010000, tmp0) 
U475e: tmp1:= MOVEFROMCREG_DSZ64( , 0x385, 32) !m1 

U4760: tmp2:= MOVEFROMCREG_DSZ64( , 0x381, 32) !m1 
U4761: WRMSLOOPCTRFBR( , 0x00000002) 
U4762: SAVEUIP( , 0x00, U4cdc) SEQW GOTO U0051

U4764: tmp6:= UFLOWCTRL( , tmp1, MSLOOPCTR) 
U4765: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x0000068e) 
U4766: tmp3:= OR_DSZN(rcx) !m1 

U4768: tmp4:= SAVEUIP( , 0x00, U0686) 
U4769: UFLOWCTRL(tmp6, tmp0, URET0) 
U476a: tmp14:= MOVEMERGEFLGS_DSZ32(0x00000466, tmp14) 

U476c: tmp5:= SAVEUIP( , 0x01, U068e) !m0 
U476d: tmp6:= UFLOWCTRL( , tmp9, USTATE) 
U476e: tmp14:= CMOVCC_DSZ32_CONDZ(tmp14, 0x00006691) 

U4770: tmp2:= CONCAT_DSZ16(tmp9, tmp2) 
U4771: tmp7:= ADD_DSZN(tmp9, rsi) !m1 
U4772: UFLOWCTRL(tmp6, tmp14, URET1) 

U4774: tmp2:= CONCAT_DSZ32(tmp1, tmp2) 
U4775: tmp8:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U4776: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U045c) 

U4778: tmp11:= SHR_DSZN(tmp9, tmp2) !m1 
U4779: SIGEVENT( , 0x00000033) 
U477a: TESTUSTATE( , UCODE, 0x0102) ? SEQW GOTO U6869

U477c: LFNCEWAIT-> tmp10:= READURAM( , 0x001e, 64) 
U477d: tmp3:= ADD_DSZN(tmp9, rdi) !m1 
U477e: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp7, U6868) 

U4780: tmp8:= LEA_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 
U4781: tmp11:= SUB_DSZN(tmp11, rcx) !m1 
U4782: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp3, U6868) 

U4784: tmp7:= LEA_DSZN_ASZ32_SC1(rdi, mode=0x08) !m1 
U4785: tmp9:= ZEROEXT_DSZ16N(tmp9) !m1 
U4786: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, U6868) 

U4788: tmp11:= SUB_DSZN(tmp8, tmp7) !m1 
U4789: tmp3:= unk_cd4(rsi) 
U478a: tmp1:= unk_0aa(tmp1) 

U478c: tmp11:= SUB_DSZ64(0x00000001, tmp11) 
U478d: tmp15:= unk_cd4(rdi) 
U478e: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp3, U6868) 

U4790: tmp11:= SUB_DSZ64(0x0000000f, tmp11) 
U4791: tmp1:= SUB_DSZN(tmp1) !m1 
U4792: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp15, U6868) 

U4794: tmp3:= SUB_DSZ64(0x0008000f, tmp9) 
U4795: tmp1:= SHL_DSZN(tmp1, 0x00000004) !m1 
U4796: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp11, U6868) 

U4798: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp3, U65f8) SEQW URET0
U4799: LFNCEWAIT-> TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U479c
U479a: tmp3:= unk_d61(tmp2) 

U479c: tmp0:= unk_d61(tmp2) 
U479d: unk_e6b(tmp0, tmp2) !m1 
U479e: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U47a8

U47a0: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000002b, U07fe) !m0 
U47a1: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U47a8
U47a2: unk_e6b(tmp3) !m1,m2 

U47a4: tmp8:= CONCAT_DSZ32(tmp3) 
U47a5: tmp8:= TEST_DSZ64(tmp8, tmp8) 
U47a6: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp8, U07fe) 

U47a8: tmp9:= unk_d61(tmp2) !m2 
U47a9: tmp8:= SUB_DSZ64(tmp9, tmp0) 
U47aa: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp8) 

U47ac: tmp0:= BTS_DSZ64(tmp0, 0x00000029) 
U47ad: tmp8:= NOTAND_DSZ32(0x00000007, tmp2) 
U47ae: tmp0:= CMOVCC_DSZ64_CONDNZ(tmp9, tmp0) 

U47b0: unk_d68(tmp8,  , tmp0) !m2 
U47b1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U4799) 
U47b2: SYNCFULL-> UJMP( , tmp13) 

U47b4: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U19a1) !m0,m2 
U47b5: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000b, U19a6) !m0,m2 
U47b6: tmp2:= NOTAND_DSZ64(0x00000fff, tmp2) 

U47b8: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U19a1, tmp0) !m2 
U47b9: CMPUJNZ_DIRECT_NOTTAKEN(tmp3, U19a1, tmp1) !m2 
U47ba: tmp7:= ZEROEXT_DSZ64(0xffffffffffffffff) 

U47bc: tmp7:= SHL_DSZ64(tmp7, 0x00000014) 
U47bd: tmp7:= AND_DSZ64(tmp1, tmp7) 
U47be: tmp2:= MOVEFROMCREG_DSZ64( , 0x51b) 

U47c0: tmp2:= AND_DSZ64(tmp7, tmp2) 
U47c1: tmp0:= AND_DSZ64(tmp7, tmp0) 
U47c2: CMPUJZ_DIRECT_NOTTAKEN(tmp0, U19a1, tmp2) !m2 

U47c4: tmp0:= READURAM( , 0x005c, 64) 
U47c5: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U19a1) !m2 
U47c6: tmp0:= ZEROEXT_DSZ32(0x00005c65) 

U47c8: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000180,  , tmp0) 
U47c9: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U47ca: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U19a1) !m2 

U47cc: tmp0:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 
U47cd: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U19a1) !m2 
U47ce: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x000c) !m2 

U47d0: tmp1:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U47d1: tmp0:= NOTAND_DSZ32(tmp1, tmp0) 
U47d2: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U47d4) SEQW GOTO U47e1

U47d4: SAVEUIP_REGOVR(0x01, U47d5, 0x0001) !m0 SEQW GOTO U6074
U47d5: NOP 
U47d6: NOP 

U47d8: tmp0:= ZEROEXT_DSZ32(0x0000000b) SEQW SAVEUIP0 U47d9SEQW GOTO U60e5
U47d9: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x50a0) !m2 
U47da: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x50a8) !m2 

U47dc: PORTOUT_DSZ64_ASZ16_SC1(0x4730,  , tmp0) !m2 
U47dd: PORTOUT_DSZ64_ASZ16_SC1(0x4738,  , tmp1) !m2 
U47de: MOVETOCREG_DSZ64(tmp0, 0x205, 32) !m1 

U47e0: MOVETOCREG_DSZ64(tmp1, 0x206, 32) !m1 
U47e1: tmp0:= READURAM( , 0x0023, 64) 
U47e2: tmp0:= AND_DSZ64(0x00000040, tmp0) 

U47e4: PORTOUT_DSZ64_ASZ16_SC1(0x0010,  , tmp0) !m2 
U47e5: tmp0:= ZEROEXT_DSZ32(0x00000003) SEQW SAVEUIP0 U47e6SEQW GOTO U60e5
U47e6: tmp7:= AND_DSZ32(0x00ff0000, tmp7) 

U47e8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U19a1) 
U47e9: tmp14:= ZEROEXT_DSZ32(0x00002bc6) SEQW GOTO U0434
U47ea: tmp11:= READURAM( , 0x007a, 64) 

U47ec: tmp11:= SHR_DSZ64(tmp11, 0x00000020) 
U47ed: tmp6:= MOVEFROMCREG_DSZ64( , 0x004) 
U47ee: tmp6:= AND_DSZ32(0x00000020, tmp6) 

U47f0: tmp0:= MOVEMERGEFLGS_DSZ32(0x00002805, tmp6) 
U47f1: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x00002806) 
U47f2: tmp1:= SELECTCC_DSZ64_CONDZ(tmp6, tmp11) 

U47f4: tmp8:= MOVEFROMCREG_DSZ64( , 0x070) 
U47f5: tmp8:= AND_DSZ32(0x00000100, tmp8) 
U47f6: tmp8:= SHL_DSZ32(tmp8, 0x00000014) 

U47f8: tmp0:= OR_DSZ32(tmp8, tmp0) 
U47f9: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U6324
U47fa: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000013, U73ad) !m0,m1,m2 

U47fc: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U73ad) SEQW GOTO U6324
U47fd: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000e, 0x701) !m0 
U47fe: MOVETOCREG_DSZ64(tmp1, 0x511) 

U4800: tmp10:= MOVEFROMCREG_DSZ64( , 0x510) 
U4801: BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U5c95) !m2 
U4802: tmp0:= BT_DSZ32(tmp10, 0x00000005) 

U4804: tmp0:= MOVEMERGEFLGS_DSZ32(0x0000002e, tmp0) 
U4805: tmp0:= CMOVCC_DSZ32_CONDB(tmp0, 0x0000008e) 
U4806: tmp15:= SIGEVENT(0x00001536, tmp0) SEQW GOTO U079d

U4808: tmp11:= SUB_DSZ32(0x00000000, rax) 
U4809: LFNCEMARK-> LBSYNC(0x00000002) 
U480a: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4f5c

U480c: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U481e
U480d: tmp1:= READURAM( , 0x0011, 64) 
U480e: LFNCEWAIT-> tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp1, 0x00000510, mode=0x01) 

U4810: tmp1:= SHR_DSZ64(tmp2, 0x00000020) 
U4811: tmp3:= BTR_DSZ32(tmp11, 0x0000001f) 
U4812: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp3) 

U4814: tmp2:= CMOVCC_DSZ32_CONDNB(tmp2, tmp1) 
U4815: tmp1:= SHR_DSZ32(tmp2, 0x0000001f) 
U4816: tmp4:= SHL_DSZ32(0x00000001, tmp3) 

U4818: tmp4:= AND_DSZ32(tmp4, tmp2) 
U4819: tmp2:= NOTAND_DSZ32(0x0000001f, tmp3) 
U481a: tmp2:= MOVEMERGEFLGS_DSZ32(tmp1, tmp2) 

U481c: tmp2:= CMOVCC_DSZ32_CONDNZ(tmp2, tmp4) 
U481d: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000000, U73ac) !m1,m2 
U481e: tmp0:= READURAM( , 0x0006, 64) 

U4820: WRITEURAM(tmp0, 0x0171, 64) !m2 
U4821: tmp8:= ADD_DSZ32(rcx) 
U4822: tmp9:= SUB_DSZ32(0x00000002, tmp8) 

U4824: tmp6:= READURAM( , 0x0035, 64) 
U4825: tmp7:= READURAM( , 0x0077, 64) 
U4826: rax:= ZEROEXT_DSZ32() 

U4828: rbx:= ZEROEXT_DSZ32() 
U4829: rcx:= ZEROEXT_DSZ32() 
U482a: rdx:= ZEROEXT_DSZ32() 

U482c: tmp10:= READURAM( , 0x0041, 64) 
U482d: tmp10:= BT_DSZ64(tmp10, 0x00000016) 
U482e: tmp2:= MOVEMERGEFLGS_DSZ32(0x00000015, tmp10) 

U4830: tmp2:= CMOVCC_DSZ32_CONDNB(tmp2, 0x00000002) 
U4831: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp11, U1cc6) 
U4832: tmp0:= SUB_DSZ32(tmp2, tmp11) 

U4834: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp0) 
U4835: tmp11:= CMOVCC_DSZ32_CONDNBE(tmp2, tmp11) 
U4836: LFNCEMARK-> tmp0:= SHL_DSZ32(tmp11, 0x00000003) 

U4838: tmp1:= ADD_DSZ32(tmp0, 0x00002414) 
U4839: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, tmp1) 
U483a: rax:= ZEROEXT_DSZ32(tmp2) 

U483c: rbx:= ZEROEXT_DSZ32(0x756e6547) 
U483d: rcx:= ZEROEXT_DSZ32(0x6c65746e) 
U483e: rdx:= ZEROEXT_DSZ32(0x49656e69) SEQW GOTO U1bd0

U4840: tmp8:= ZEROEXT_DSZ32() 
U4841: tmp9:= ZEROEXT_DSZ32() 
U4842: tmp15:= TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U4845

U4844: tmp15:= ZEROEXT_DSZ32(0x00000008) 
U4845: tmp15:= OR_DSZ32(0x00000002, tmp15) 
U4846: tmp15:= CONCAT_DSZ32(tmp15, 0x00009800) 

U4848: SYNCMARK-> MOVETOCREG_DSZ64(tmp15, 0x752) !m2 
U4849: MOVETOCREG_DSZ64(tmp15, 0x01b) !m2 
U484a: SAVEUIP( , 0x00, U04d4) SEQW SAVEUIP1 U484cSEQW GOTO U0151

U484c: ROVR<-SYNCWAIT-> MOVE_DSZ32() SEQW SAVEUIP1 U484dSEQW GOTO U02c2
U484d: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 
U484e: tmp15:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U4850: SYNCMARK-> MOVETOCREG_BTR_DSZ64(tmp15, 0x0000000b, 0x6c3) !m0,m2 SEQW SAVEUIP1 U4851SEQW GOTO U025a
U4851: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000088, mode=0x01, tmp5, tmp7) 
U4852: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000a0, mode=0x01, tmp5, tmp8) 

U4854: tmp2:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U4855: tmp2:= READAFLAGS( , tmp2) !m2 
U4856: tmp2:= NOTAND_DSZ32(0x00000100, tmp2) 

U4858: tmp2:= OR_DSZ32(tmp9, tmp2) 
FUN_ucode_0004859:
U4859: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000080, mode=0x01, tmp5, tmp2) 
U485a: tmp2:= RDSEGFLD(FS, BASE) 

U485c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000a8, mode=0x01, tmp5, tmp2) 
U485d: tmp2:= RDSEGFLD(GS, BASE) 
U485e: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000b0, mode=0x01, tmp5, tmp2) 

U4860: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U4861: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U4864
U4862: tmp12:= WRMSLOOPCTRFBR(0x0000000f) 

U4864: tmp2:= OR_DSZN(rdi) !m1 
U4865: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp5, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x01,  , tmp2) !m0 
U4866: rdi:= ZEROEXT_DSZ32() 

U4868: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U4864
U4869: tmp11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000010, mode=0x01, tmp1) 
U486a: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000200, mode=0x01, tmp11, 0x00000000) 

U486c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000208, mode=0x01, tmp11, 0x00000000) 
U486d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000210, mode=0x01, tmp11, 0x00000000) 
U486e: tmp6:= READURAM( , 0x005b, 64) 

U4870: tmp6:= SHR_DSZ64(tmp6, 0x00000038) 
U4871: tmp4:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U4872: tmp4:= BT_DSZ64(tmp4, 0x00000012) 

U4874: tmp6:= SELECTCC_DSZ32_CONDNB(tmp4, tmp6) 
U4875: tmp6:= OR_DSZ32(0x00000003, tmp6) 
U4876: SYNCWAIT-> tmp4:= ZEROEXT_DSZ32(tmp6) SEQW GOTO U4d4e

U4878: tmp6:= UFLOWCTRL( , tmp1, MSLOOPCTR) 
U4879: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x0000068e) 
U487a: tmp3:= OR_DSZN(rcx) !m1 

U487c: tmp4:= SAVEUIP( , 0x00, U0686) 
U487d: UFLOWCTRL(tmp6, tmp0, URET0) 
U487e: tmp14:= MOVEMERGEFLGS_DSZ32(0x00000466, tmp14) 

U4880: tmp5:= SAVEUIP( , 0x01, U068e) !m0 
U4881: tmp6:= UFLOWCTRL( , tmp9, USTATE) 
U4882: tmp14:= CMOVCC_DSZ32_CONDZ(tmp14, 0x00006440) 

U4884: tmp2:= CONCAT_DSZ16(tmp9, tmp2) 
U4885: tmp7:= ADD_DSZN(tmp9, rdi) !m1 
U4886: UFLOWCTRL(tmp6, tmp14, URET1) 

U4888: tmp2:= CONCAT_DSZ32(tmp1, tmp2) 
U4889: tmp8:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U488a: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U045d) 

U488c: tmp11:= SHR_DSZN(tmp9, tmp2) !m1 
U488d: SIGEVENT( , 0x00000037) 
U488e: TESTUSTATE( , UCODE, 0x0102) ? SEQW GOTO U6959

U4890: LFNCEWAIT-> tmp10:= READURAM( , 0x001e, 64) 
U4891: tmp11:= SUB_DSZN(tmp11, rcx) !m1 
U4892: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp7, U6958) 

U4894: LEA_DSZN_ASZ32_SC1(rdi, mode=0x08) !m1 
U4895: tmp9:= ZEROEXT_DSZ16N(tmp9) !m1 
U4896: tmp15:= unk_cd4(rdi) 

U4898: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, U6958) 
U4899: tmp1:= unk_0aa(tmp1) 
U489a: tmp3:= SUB_DSZ64(0x0008000f, tmp9) 

U489c: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp15, U6958) 
U489d: tmp7:= OR_DSZN(rax) !m1 
U489e: tmp8:= ZEROEXT_DSZ32(IMM_MACRO_43) !m0 

U48a0: tmp1:= SUB_DSZN(tmp1) !m1 
U48a1: tmp15:= SHL_DSZ64(tmp7, tmp8) 
U48a2: tmp7:= OR_DSZ64(tmp15, tmp7) 

U48a4: tmp8:= ADD_DSZ32(tmp8, tmp8) 
U48a5: tmp15:= SHL_DSZ64(tmp7, tmp8) 
U48a6: tmp7:= OR_DSZ64(tmp15, tmp7) 

U48a8: tmp8:= ADD_DSZ32(tmp8, tmp8) 
U48a9: tmp15:= SHL_DSZ64(tmp7, tmp8) 
U48aa: tmp7:= OR_DSZ64(tmp15, tmp7) 

U48ac: tmp1:= SHL_DSZN(tmp1, 0x00000004) !m1 
U48ad: tmm1:= unk_747(mm7) 
U48ae: tmm1:= SHUFPD(tmm1, tmm1) 

U48b0: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp3, U6644) SEQW URET0
U48b1: LFNCEMARK-> PORTOUT_DSZ64_ASZ16_SC1(0x00d8,  , tmp5) !m2 SEQW GOTO U2162
U48b2: tmp14:= READUIP_REGOVR(0x01) !m0 

U48b4: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U48b5: LFNCEMARK-> LBSYNC(0x00000002) 
U48b6: tmp6:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U48b8: LFNCEWAIT-> tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U48b9: TESTUSTATE( , SYS, UST_VMX_DIS | UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m1 ? SEQW SAVEUIP0 U48ba? SEQW GOTO U6786
U48ba: tmp0:= OR_DSZN(r64dst) !m1 

U48bc: tmp2:= NOTAND_DSZ64(0x00000003, tmp0) 
U48bd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U082e) 
U48be: BTUJNB_DIRECT_NOTTAKEN(tmp10, U082e, tmp0) 

U48c0: tmp8:= unk_cc6(tmp5) 
U48c1: LFNCEMARK-> LBSYNC(0x00000002) 
U48c2: mm4:= unk_76f(tmm0) 

U48c4: tmm0:= unk_5ba(tmm0, tmm0) 
U48c5: tmm7:= unk_76f(tmm0) 
U48c6: MOVEINSERTFLGS_DSZ32() !m2 SEQW URET1

U48c8: tmp0:= MOVE_DSZ32(0x0000003b) 
U48c9: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000000, U222c) !m1 
U48ca: BTUJNB_DIRECT_NOTTAKEN(tmp1, U4f5d, tmp2) 

U48cc: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 
U48cd: tmp15:= NOTAND_DSZ32(0x000001ff, rcx) 
U48ce: tmp2:= AND_DSZ32(0x000001ff, rcx) 

U48d0: tmp1:= NOTAND_DSZ64(0x00000fff, tmp1) 
U48d1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U4f5d) 
U48d2: LFNCEMARK-> tmp1:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp1, tmp2) 

U48d4: tmp9:= READURAM( , 0x0057, 64) 
U48d5: tmp15:= READURAM( , 0x0077, 64) 
U48d6: tmp15:= BT_DSZ32(tmp15, 0x00000010) 

U48d8: tmp15:= SELECTCC_DSZ32_CONDB(tmp15, 0x00000040) 
U48d9: tmp15:= OR_DSZ32(0x0000001e, tmp15) 
U48da: tmp14:= NOTAND_DSZ64(tmp15, tmp14) 

U48dc: tmp15:= AND_DSZ64(tmp14, tmp1) 
U48dd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U4f5d) 
U48de: tmp15:= SHR_DSZ32(tmp1, 0x00000001) 

U48e0: tmp15:= XOR_DSZ32(tmp15, tmp1) 
U48e1: tmp15:= AND_DSZ32(0x0000000a, tmp15) 
U48e2: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U4f5d) !m0 

U48e4: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U4f5d) 
U48e5: tmp4:= NOTAND_DSZ64(0x00000038, tmp1) 
U48e6: LFNCEWTMRK-> tmp4:= MOVETOCREG_BTS_DSZ64(tmp4, 0x0000003f, 0x51c) !m0 

U48e8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000300, tmp9, tmp1) 
U48e9: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(0x0000039e, tmp9, tmp2) 
U48ea: tmp6:= SHR_DSZ64(tmp1, 0x0000000b) 

U48ec: tmp6:= OR_DSZ32(0x00000001, tmp6) 
U48ed: tmp15:= READURAM( , 0x0079, 64) 
U48ee: tmp15:= NOTAND_DSZ64(0x1fffffff, tmp15) 

U48f0: tmp6:= OR_DSZ64(tmp6, tmp15) 
U48f1: tmp15:= READURAM( , 0x0043, 64) 
U48f2: tmp15:= BT_DSZ64(tmp15, 0x00000025) 

U48f4: ROVR<- tmp6:= SELECTCC_DSZ64_CONDNB(tmp15, tmp6) SEQW SAVEUIP0 U48f5
U48f5: WRITEURAM(tmp6, 0x0079, 64) 
U48f6: LFNCEWAIT-> tmp6:= unk_163(0x00000000, tmp6) 

U48f8: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp6, 0x00000008, 0x79d) SEQW SAVEUIP0 U48f9SEQW GOTO U2ddd
U48f9: tmp3:= SELECTCC_DSZ32_CONDNZ(tmp6, 0x00000007) 
U48fa: NOP 

U48fc: LFNCEWAIT-> unk_dff(tmp8) 
U48fd: MOVETOCREG_DSZ64(tmp15, 0x63a) 
U48fe: MOVETOCREG_OR_DSZ64(tmp3, 0x00000001, 0x63e) 

U4900: SAVEUIP( , 0x01, U1bd0) !m0 SEQW GOTO U2906
U4901: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U4902: MOVETOCREG_BTS_DSZ64(tmp1, 0x29d) !m1 

U4904: tmp14:= ZEROEXT_DSZ64N(tmp4) !m1 
U4905: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000008) 
U4906: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U7044) !m1,m2 

U4908: tmp0:= READURAM( , 0x005c, 64) 
U4909: tmp11:= ZEROEXT_DSZ32(0x00000005) 
U490a: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U294c) !m1 SEQW GOTO U69b5

U490c: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U490d: tmp4:= MOVE_DSZ64(IMM_MACRO_ALIAS_RIP) !m0 
U490e: tmp9:= TESTUSTATE( , SYS, UST_OP_SIZE_32BIT | 0x0200) !m1 ? SEQW GOTO U5cd6

U4910: UPDATEUSTATE(rsp, !0x20) !m0 
U4911: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U4915
U4912: tmp4:= MOVEINSERTFLGS_DSZ64(0x00000001, tmp4) 

U4914: UPDATEUSTATE( , 0x20) 
U4915: SIGEVENT( , 0x00000077) 
U4916: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U2d15

U4918: tmp2:= LDZX_DSZ16_ASZ32_SC1(tmp2, IMM_MACRO_ALIAS_DATASIZE, mode=0x18) !m0 
U4919: tmp8:= STC(tmp8) 
U491a: tmp0:= unk_d61(tmp2) 

U491c: tmp1:= unk_d61(tmp2) 
U491d: tmp0:= CMOVCC_DSZ64_CONDNB(tmp1, tmp0) 
U491e: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U5a42

U4920: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U5c84
U4921: LFNCEWAIT-> tmp11:= unk_e6b(tmp0, tmp2) !m1,m2 
U4922: MOVETOCREG_DSZ64( , 0x00000000, 0x78e) 

U4924: LFNCEMARK-> tmp1:= MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x7f5) 
U4925: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, U6595) 
U4926: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U642a

U4928: tmp1:= SUB_DSZ32(0x00000001) 
U4929: MOVETOCREG_DSZ64(tmp1, 0x410) 
U492a: MOVETOCREG_DSZ64( , 0x00000000, 0x700) 

U492c: tmp1:= SUB_DSZ32(0x0000ffff, tmp0) 
U492d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U6595) 
U492e: tmp1:= SHR_DSZ64(tmp0, 0x00000020) 

U4930: LFNCEMARK-> tmp1:= ROR_DSZ32(tmp1, 0x00000008) 
U4931: tmp1:= AND_DSZ32(0xffffffffffffef00, tmp1) 
U4932: tmp1:= SUB_DSZ32(0x0000cf00, tmp1) 

U4934: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U6595) 
U4935: tmp1:= MOVEFROMCREG_DSZ64( , 0x73c) 
U4936: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000e, U6595) !m0,m1 

U4938: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U493d
U4939: tmp1:= RDSEGFLD(CS, SEL) 
U493a: LFNCEWAIT-> STADPPHYS_DSZN_ASZ32_SC1(rsp, IMM_MACRO_fb, mode=0x0a,  , tmp1) !m0,m1 

U493c: STADPPHYS_DSZN_ASZ32_SC1(rsp, IMM_MACRO_f3, mode=0x0a,  , tmp4) !m0,m1 
U493d: rsp:= ADD_DSZ32(tmp9, rsp) 
U493e: LFNCEWAIT-> FETCHFROMEIP1_ASZ32( , tmp3) 

U4940: tmp0:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U4941: WRSEGFLD(tmp0, CS, SEL+FLGS+LIM) 
U4942: tmp0:= RDSEGFLD(UNK_SEG_09, BASE) 

U4944: WRSEGFLD(tmp0, CS, BASE) 
U4945: MJMPTARGET_INDIRECT_ASZ32( , tmp3) SEQW UEND0
U4946: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U3a6c

U4948: tmp2:= MOVEFROMCREG_DSZ64( , 0x562) 
U4949: tmp2:= NOTAND_DSZ64(0x00000fff, tmp2) 
U494a: TESTUSTATE( , UCODE, 0x1000) ? SEQW GOTO U3a66

U494c: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U4980
U494d: tmp0:= READURAM( , 0x0077, 64) 
U494e: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000022, U3a66) !m0,m1,m2 

U4950: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x50dc) !m2 
U4951: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U3a66) !m1,m2 
U4952: TESTUSTATE( , SYS, !UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U3a66

U4954: tmp0:= MOVEFROMCREG_DSZ64( , 0x563) 
U4955: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000000b, U3a66) !m0,m1,m2 
U4956: tmp0:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 

U4958: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U3a66) !m1,m2 
U4959: tmp3:= MOVEFROMCREG_DSZ64( , 0x105) 
U495a: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000002, U3a66) !m0,m1,m2 

U495c: tmp0:= ZEROEXT_DSZ32(0x00000008) SEQW SAVEUIP0 U495dSEQW GOTO U60e5
U495d: tmp7:= AND_DSZ32(0x00ff0000, tmp7) 
U495e: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U3a66) 

U4960: SAVEUIP_REGOVR(0x01, U4961, 0x0f20) !m0 SEQW GOTO U1b2a
U4961: tmp3:= ADD_DSZ64(0x00001000, tmp2) 
U4962: tmp0:= CONCAT_DSZ32(rdx, rax) 

U4964: tmp0:= ZEROEXT_DSZ64N(tmp0) !m1 
U4965: tmp7:= MOVEFROMCREG_DSZ64( , 0x563) 
U4966: tmp7:= NOTAND_DSZ64(0x00000fff, tmp7) 

U4968: tmp15:= ADD_DSZ64(tmp5, tmp3) 
U4969: tmp15:= AND_DSZ64(tmp7, tmp15) 
U496a: tmp7:= AND_DSZ64(tmp7, tmp2) 

U496c: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, U3a61, tmp7) !m1,m2 
U496d: tmp15:= ADD_DSZN(tmp5, tmp0) !m1 
U496e: tmp15:= TEST_DSZ64(tmp15, tmp15) 

U4970: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U3a61) 
U4971: LFNCEMARK-> MOVETOCREG_DSZ64(0x00000015, 0x000) !m2 
U4972: tmp1:= LDZX_DSZ32_ASZ32_SC1(tmp0) 

U4974: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp3, mode=0x01,  , tmp1) 
U4975: tmp6:= ZEROEXT_DSZ32(0x00000004) 
U4976: LFNCEWAIT-> tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp0, tmp6) 

U4978: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp3, mode=0x01, tmp6, tmp1) 
U4979: tmp6:= ADD_DSZ32(0x00000008, tmp6) 
U497a: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, U497c, tmp6) SEQW GOTO U4976

U497c: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 
U497d: LBSYNC(0x00000001) 
U497e: LFNCEMARK-> LBSYNC(0x00000001) 

U4980: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2dd) !m1,m2 
U4981: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000018, mode=0x01,  , tmp3) 
U4982: tmp3:= ADD_DSZ64(tmp5, tmp3) 

U4984: WRITEURAM(tmp3, 0x0015, 64) !m2 
U4985: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000020, mode=0x01,  , 0x00000000) SEQW GOTO U1f9a
U4986: tmp8:= RDSEGFLD(FS, BASE) 

U4988: WRSEGFLD(tmp8, UNK_SEG_04, BASE) 
U4989: tmp8:= RDSEGFLD(FS, SEL+FLGS+LIM) 
U498a: WRSEGFLD(tmp8, UNK_SEG_04, SEL+FLGS+LIM) 

U498c: WRSEGFLD(tmp4, FS, BASE) 
U498d: tmp8:= ZEROEXT_DSZ32(0x0000e0f3) 
U498e: tmp8:= SHL_DSZ32(tmp8, 0x00000010) 

U4990: tmp8:= CONCAT_DSZ32(0xffffffffffffffff, tmp8) 
U4991: LFNCEMARK-> WRSEGFLD(tmp8, FS, SEL+FLGS+LIM) 
U4992: MOVETOCREG_DSZ64(0x00000020, 0x000) 

U4994: LFNCEWAIT-> tmp8:= unk_fcc() 
U4995: tmp8:= RDSEGFLD(UNK_SEG_04, BASE) 
U4996: WRSEGFLD(tmp8, FS, BASE) 

U4998: tmp8:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) 
U4999: WRSEGFLD(tmp8, FS, SEL+FLGS+LIM) 
U499a: tmm6:= FMOV( , 0x00000091) !m0 SEQW GOTO U1a50

U499c: tmp0:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
U499d: tmp0:= OR_DSZ32(0x00000097, tmp0) 
U499e: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x223, 32) !m1 

U49a0: MOVETOCREG_DSZ64( , 0x00000000, 0x2f1, 32) !m1 
U49a1: WRITEURAM( , 0x00000000, 0x000f, 32) 
U49a2: tmp0:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U49a4SEQW GOTO U21a1

U49a4: TESTUSTATE( , UCODE, 0x1000) ? SEQW GOTO U49d2
U49a5: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2f2) !m0,m1 
U49a6: NOP 

U49a8: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp13, U49a9) SEQW GOTO U49c8
U49a9: NOP 
U49aa: NOP 

U49ac: LFNCEMARK-> tmp15:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U49ad: tmp7:= AND_DSZ32(0x00000010, tmp15) 
U49ae: rax:= SHR_DSZ32(tmp7, 0x00000002) 

U49b0: tmp7:= SHR_DSZ32(tmp15, 0x00000007) 
U49b1: tmp7:= AND_DSZ32(0x00000002, tmp7) 
U49b2: rax:= OR_DSZ32(rax, tmp7) 

U49b4: tmp7:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U49b5: tmp7:= NOTAND_DSZ32(tmp7, tmp15) 
U49b6: tmp7:= AND_DSZ32(0x00000001, tmp7) 

U49b8: rax:= OR_DSZ32(tmp7, rax) 
U49b9: tmp15:= SELECTCC_DSZ32_CONDNO(tmp13, 0x00000002) 
U49ba: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp15, 0x2d6, 32) !m1 

U49bc: tmp15:= SELECTCC_DSZ32_CONDNO(tmp13, 0x00000080) 
U49bd: MOVETOCREG_DSZ64(tmp15, 0x2d6, 32) !m1,m2 
U49be: tmp10:= READURAM( , 0x008f, 64) 

U49c0: tmp15:= SELECTCC_DSZ32_CONDNS(tmp13, 0x000000e0) 
U49c1: tmp15:= ADD_DSZ32(tmp15, 0x00002200) 
U49c2: MOVETOCREG_DSZ64(tmp10, tmp15) !m1,m2 

U49c4: tmp15:= SELECTCC_DSZ32_CONDNS(tmp13, 0x00000002) 
U49c5: LFNCEMARK-> MOVETOCREG_DSZ64(tmp15, 0x2d5, 32) !m1,m2 
U49c6: NOP 

U49c8: LFNCEWAIT-> WRITEURAM( , 0x00000000, 0x008f, 64) !m2 
U49c9: tmp1:= READURAM( , 0x0070, 64) 
U49ca: MOVETOCREG_DSZ64(tmp1, 0x2c4, 32) !m1,m2 

U49cc: MOVETOCREG_SHR_DSZ64(tmp1, 0x00000018, 0x2da) !m1,m2 
U49cd: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 
U49ce: tmp0:= MOVEFROMCREG_DSZ64( , 0x008) 

U49d0: tmp0:= AND_DSZ32(0x00004000, tmp0) 
U49d1: MOVETOCREG_OR_DSZ64(tmp0, 0x008, tmp1) !m2 
U49d2: tmp0:= ZEROEXT_DSZ64(tmp14) 

U49d4: tmp5:= unk_04d( , IMM_MACRO_21) !m0 SEQW GOTO U5ea9
U49d5: NOP 
U49d6: NOP 

U49d8: tmp14:= ZEROEXT_DSZ64(tmp0) SEQW GOTO U0414
U49d9: MOVETOCREG_DSZ64(tmp6, 0x00e) 
U49da: tmp1:= SHR_DSZ32(tmp7, 0x00000010) 

U49dc: tmp2:= ADD_DSZ32(IMM_MACRO_ALIAS_DATASIZE) !m0 
U49dd: tmp3:= AND_DSZ8(0x00000002, tmp2) 
U49de: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp3, tmp1) 

U49e0: MOVETOCREG_DSZ64(tmp1, 0x00f) 
U49e1: MOVETOCREG_DSZ64(tmp8, 0x00a) 
U49e2: MOVETOCREG_DSZ64( , 0x00000000, 0x00d) SEQW URET0

U49e4: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U49ea
U49e5: tmp1:= READURAM( , 0x003a, 64) 
U49e6: tmp2:= READURAM( , 0x005d, 64) 

U49e8: tmp3:= READURAM( , 0x005e, 64) 
U49e9: tmp4:= READURAM( , 0x0052, 64) 
U49ea: WRMSLOOPCTRFBR( , 0x0000008f) 

U49ec: LFNCEWAIT-> WRITEURAM( , 0x00000000, 0x0008, 64) !m0 
U49ed: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U49ec
U49ee: NOP 

U49f0: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U43e4
U49f1: NOP 
U49f2: tmp6:= PORTIN_DSZ32_ASZ16_SC1(0x48e8) !m2 

U49f4: tmp0:= MOVEFROMCREG_DSZ64( , 0x21d, 32) !m1 
U49f5: tmp0:= BT_DSZ32(tmp0, 0x00000008) 
U49f6: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000003) 

U49f8: tmp0:= SHR_DSZ32(tmp6, tmp0) 
U49f9: tmp0:= AND_DSZ32(0x00000007, tmp0) 
U49fa: LFNCEMARK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp0, 0x00000003, U4a10) !m0 

U49fc: tmp0:= ZEROEXT_DSZ32(0x00000020) 
U49fd: WRMSLOOPCTRFBR( , 0x0000003f) 
U49fe: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, tmp0) 

U4a00: tmp0:= ADD_DSZ32(0x00000001, tmp0) 
U4a01: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U49fe
U4a02: NOP 

U4a04: MOVETOCREG_DSZ64( , 0x00000000, 0x009) SEQW SAVEUIP1 U4a05SEQW GOTO U5fb2
U4a05: tmp1:= ZEROEXT_DSZ64(tmp10) 
U4a06: tmp2:= ZEROEXT_DSZ32() 

U4a08: tmp3:= ZEROEXT_DSZ32() 
U4a09: tmp4:= ZEROEXT_DSZ32() 
U4a0a: MOVETOCREG_DSZ64( , 0x00000000, 0x609) 

U4a0c: MOVETOCREG_DSZ64( , 0x00000000, 0x60a) 
U4a0d: MOVETOCREG_DSZ64( , 0x00000000, 0x10d) 
U4a0e: MOVETOCREG_DSZ64( , 0x00000000, 0x10e) 

U4a10: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U4a1e
U4a11: tmp0:= BTR_DSZ32(tmp6, 0x00000006) 
U4a12: tmp0:= AND_DSZ32(0x000001c0, tmp0) 

U4a14: tmp0:= SUB_DSZ32(0x00000080, tmp0) 
U4a15: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U4a1e) 
U4a16: NOP 

U4a18: LFNCEWAIT-> tmp0:= MOVETOCREG_DSZ64( , 0x00000000, 0x382, 32) !m1 
U4a19: MOVETOCREG_DSZ64(tmp0, 0x381, 32) !m1 
U4a1a: tmp0:= MOVETOCREG_DSZ64( , 0x00000000, 0x386, 32) !m1 

U4a1c: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000035, 0x385) !m1 
U4a1d: MOVETOCREG_DSZ64( , 0x00000000, 0x387, 32) !m1 
U4a1e: WRITEURAM(tmp1, 0x003a, 64) !m2 

U4a20: WRITEURAM(tmp2, 0x005d, 64) !m2 
U4a21: WRITEURAM(tmp3, 0x005e, 64) !m2 
U4a22: WRITEURAM(tmp4, 0x0052, 64) !m2 SEQW GOTO U621d

U4a24: tmp9:= AND_DSZ32(0x0000000a, tmp11) 
U4a25: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U1099) 
U4a26: tmp7:= BTR_DSZ32(tmp7, 0x00000011) 

U4a28: tmp4:= SHR_DSZ32(tmp11, 0x0000000e) 
U4a29: tmp4:= AND_DSZ32(0x00000003, tmp4) 
U4a2a: tmp9:= AND_DSZ32(0x00001000, tmp11) 

U4a2c: tmp4:= MOVEMERGEFLGS_DSZ32(tmp4, tmp9) 
U4a2d: tmp9:= SHL_DSZ32(tmp9, 0x00000005) 
U4a2e: tmp7:= OR_DSZ32(tmp9, tmp7) 

U4a30: tmp9:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 
U4a31: tmp9:= ROR_DSZ64(tmp9, 0x00000015) 
U4a32: tmp9:= NOTAND_DSZ64(0x00000003, tmp9) 

U4a34: tmp9:= OR_DSZ64(tmp4, tmp9) 
U4a35: tmp9:= ROL_DSZ64(tmp9, 0x00000015) 
U4a36: LFNCEMARK-> WRSEGFLD(tmp9, SS_USERM, SEL+FLGS+LIM) 

U4a38: LFNCEWAIT-> BTUJNB_DIRECT_NOTTAKEN(tmp11, 0x00000002, U4a3c) !m0 
U4a39: tmp9:= READURAM( , 0x0043, 64) 
U4a3a: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000027, U4a44) !m0 

U4a3c: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000001, U4a44) 
U4a3d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U4a44) 
U4a3e: LFNCEMARK-> tmp9:= RDSEGFLD(SS_USERM, SEL) 

U4a40: tmp9:= NOTAND_DSZ32(0x00000003, tmp9) 
U4a41: tmp9:= OR_DSZ32(tmp4, tmp9) 
U4a42: LFNCEWAIT-> WRSEGFLD(tmp9, SS_USERM, UNK_FLD_0c) 

U4a44: tmp9:= CONCAT_DSZ32(0x0000ffff) 
U4a45: tmp9:= AND_DSZ64(tmp11, tmp9) 
U4a46: tmp10:= AND_DSZ32(0x00000020, tmp11) 

U4a48: tmp10:= SHL_DSZ32(tmp10, 0x00000003) 
U4a49: tmp9:= OR_DSZ64(tmp9, tmp10) 
U4a4a: SYNCFULL-> WRITEURAM(tmp9, 0x001f, 64) !m2 

U4a4c: MOVETOCREG_SHR_DSZ64(tmp11, 0x00000008, 0x01d) 
U4a4d: tmp13:= BT_DSZ32(tmp11, 0x00000002) 
U4a4e: tmp13:= MOVEMERGEFLGS_DSZ32(0x00005c34, tmp13) 

U4a50: tmp13:= CMOVCC_DSZ32_CONDNB(tmp13, 0x00005f1e) 
U4a51: SYNCMARK-> UFLOWCTRL( , tmp13, URET0) 
U4a52: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U107a

U4a54: tmp9:= CONCAT_DSZ32(0x7ffffc00) 
U4a55: tmp8:= READURAM( , 0x0089, 64) 
U4a56: tmp8:= AND_DSZ64(tmp9, tmp8) 

U4a58: LFNCEMARK-> tmp10:= READURAM( , 0x0014, 64) !m2 
U4a59: NOP 
U4a5a: NOP 

U4a5c: LFNCEWAIT-> tmp10:= NOTAND_DSZ64(tmp9, tmp10) 
U4a5d: NOP 
U4a5e: NOP 

U4a60: ROVR<-SYNCWTMRK-> tmp8:= OR_DSZ64(tmp10, tmp8) SEQW SAVEUIP1 U4a61SEQW GOTO U1c5a
U4a61: NOP 
U4a62: NOP 

U4a64: SYNCWTMRK-> SAVEUIP( , 0x01, U1086) !m0 SEQW GOTO U5a2a
U4a65: tmm0:= unk_702(mm1) 
U4a66: tmm3:= unk_496(tmm5, tmm0) 

U4a68: tmm4:= unk_496(tmm6, tmm0) 
U4a69: mm0:= unk_689(tmm3, tmm4) !m0 
U4a6a: tmm0:= unk_702(mm2) 

U4a6c: tmm5:= unk_496(tmm1, tmm0) 
U4a6d: tmm6:= unk_496(tmm2, tmm0) 
U4a6e: mm7:= unk_689(tmm5, tmm6) !m0,m2 SEQW GOTO U1bd0

U4a70: LFNCEMARK-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U4a71: MOVETOCREG_BTR_DSZ64(tmp10, 0x00000010, 0x7fe) !m2 
U4a72: tmp9:= MOVEFROMCREG_DSZ64( , 0x00f) 

U4a74: tmp3:= AND_DSZ32(0x0000073f, tmp9) 
U4a75: tmp2:= ADD_DSZ8(0x00000040, tmp9) 
U4a76: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000040) 

U4a78: tmp9:= OR_DSZ32(tmp2, tmp3) 
U4a79: tmp5:= BT_DSZ32(tmp9, 0x00000005) 
U4a7a: tmp5:= SELECTCC_DSZ32_CONDNB(tmp5, 0x0000000d) 

U4a7c: tmp5:= OR_DSZ32(0x00000008, tmp5) 
U4a7d: tmp5:= SHL_DSZ64(tmp5, 0x0000000b) 
U4a7e: tmp3:= AND_DSZ32(0x00000600, tmp9) 

U4a80: tmp2:= XOR_DSZ32(0x00000600, tmp3) 
U4a81: tmp2:= MOVEMERGEFLGS_DSZ32(0x00000002, tmp2) 
U4a82: tmp4:= CMOVCC_DSZ32_CONDZ(tmp2, 0x00000000) 

U4a84: tmp1:= XOR_DSZ32(0x00000400, tmp3) 
U4a85: tmp1:= MOVEMERGEFLGS_DSZ32(0x00000001, tmp1) 
U4a86: tmp4:= CMOVCC_DSZ32_CONDZ(tmp1, tmp4) 

U4a88: tmp4:= SHL_DSZ64(tmp4, 0x00000023) 
U4a89: tmp5:= OR_DSZ64(tmp4, tmp5) 
U4a8a: tmp2:= AND_DSZ32(0x00000007, tmp9) 

U4a8c: tmp10:= SHL_DSZ64(tmp2, 0x00000003) 
U4a8d: tmp2:= SHL_DSZ64(tmp2, 0x0000001c) 
U4a8e: LFNCEWAIT-> tmp2:= OR_DSZ64(tmp10, tmp2) 

U4a90: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp2, 0x752, tmp5) 
U4a91: tmm4:= unk_73a() 
U4a92: tmm5:= unk_704(tmm1) 

U4a94: tmm6:= unk_660(tmm5) 
U4a95: tmp6:= PINTMOVDTMM2I_DSZ32(tmm6) 
U4a96: tmp6:= MOVEINSERTFLGS_DSZ32(tmp6, tmp6) 

U4a98: MOVETOCREG_SHR_DSZ64(tmp6, 0x00000006, 0x6c5) !m0,m2 
U4a99: tmp0:= MOVEFROMCREG_DSZ64( , 0x486) 
U4a9a: tmp4:= AND_DSZ16(0x00001839, tmp7) 

U4a9c: tmp1:= AND_DSZ16(0x00000020, tmp0) 
U4a9d: tmp2:= SUB_DSZ16(0x00000020, tmp4) 
U4a9e: tmp2:= OR_DSZ16(tmp1, tmp2) 

U4aa0: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U0554) 
U4aa1: tmm3:= unk_620(tmm5) 
U4aa2: tmp3:= PINTMOVDTMM2I_DSZ32(tmm3) 

U4aa4: tmp10:= SHR_DSZ32(tmp7, 0x00000003) 
U4aa5: tmp10:= AND_DSZ32(0x00000300, tmp10) 
U4aa6: tmp4:= SHL_DSZ32(tmp7, 0x00000003) 

U4aa8: tmp4:= AND_DSZ32(0x000000c0, tmp4) 
U4aa9: tmp11:= MOVEINSERTFLGS_DSZ32(tmp7, 0x000000c0) 
U4aaa: tmp4:= CMOVCC_DSZ16_CONDB(tmp11, tmp4) 

U4aac: SYNCWTMRK-> UFLOWCTRL( , tmp3, URET1) 
U4aad: tmp3:= OR_DSZ32(0x00000c00, tmp10) 
U4aae: tmp7:= OR_DSZ32(tmp4, tmp3) 

U4ab0: NOP 
U4ab1: NOP 
U4ab2: SYNCWAIT-> SAVEUIP( , 0x00, U3b15) SEQW URET1

U4ab4: SAVEUIP_REGOVR(0x01, U4ab5, 0x0001) !m0 SEQW GOTO U0be9
U4ab5: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(rax, 0x0000001c,  , tmp1) 
U4ab6: tmp1:= READURAM( , 0x0020, 64) 

U4ab8: tmp1:= AND_DSZ32(0x00007ffe, tmp1) 
U4ab9: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 
U4aba: LFNCEWAIT-> tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(rax) 

U4abc: tmp4:= unk_224(tmp2, tmp1) 
U4abd: tmp4:= ADD_DSZ32(tmp4, rax) 
U4abe: tmp4:= ADD_DSZ32(0x00000020, tmp4) 

U4ac0: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be00,  , tmp4) !m2 
U4ac1: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be80,  , tmp4) !m2 
U4ac2: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(rax, 0x00000008) 

U4ac4: tmp5:= unk_224(tmp2, tmp5) 
U4ac5: tmp5:= ADD_DSZ32(tmp5, rax) 
U4ac6: tmp5:= ADD_DSZ32(0x00000020, tmp5) 

U4ac8: PORTOUT_DSZ32_ASZ16_SC1(0x50cc,  , tmp5) !m2 
U4ac9: tmp7:= ZEROEXT_DSZ32(0x00002010) 
U4aca: tmp7:= BTS_DSZ32(tmp7, 0x0000001f) 

U4acc: tmp1:= PORTIN_DSZ32_ASZ16_SC1(tmp7) 
U4acd: tmp7:= PORTIN_DSZ32_ASZ16_SC1(tmp7) 
U4ace: tmp7:= CONCAT_DSZ32(tmp1, tmp7) 

U4ad0: tmp7:= SHR_DSZ64(tmp7, 0x00000014) 
U4ad1: tmp7:= SHL_DSZ64(tmp7, 0x0000000c) 
U4ad2: PORTOUT_DSZ32_ASZ16_SC1(0x50c0,  , tmp7) !m2 

U4ad4: SAVEUIP_REGOVR(0x01, U4ad5, 0x0005) !m0 SEQW GOTO U02ba
U4ad5: tmp4:= PORTIN_DSZ32_ASZ16_SC1(0x50c8) !m2 
U4ad6: tmp1:= READURAM( , 0x0020, 64) 

U4ad8: tmp1:= AND_DSZ32(0x00007ffe, tmp1) 
U4ad9: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 
U4ada: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp4, U0e0a, tmp1) 

U4adc: tmp2:= BTS_DSZ32(0x00000000, 0x0000001e) 
U4add: LFNCEWTMRK-> CMPUJZ_DIRECT_NOTTAKEN(tmp4, U0e01, tmp2) 
U4ade: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 

U4ae0: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000be00) !m2 
U4ae1: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2) 
U4ae2: LFNCEMARK-> tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000008) 

U4ae4: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp5, tmp4) !m1 
U4ae5: NOP 
U4ae6: NOP 

U4ae8: LFNCEMARK-> tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000004) 
U4ae9: NOP 
U4aea: NOP 

U4aec: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, tmp4) !m1 
U4aed: tmp6:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp2, 0x0000001f) 
U4aee: tmp2:= ADD_DSZ32(0x00000020, tmp2) 

U4af0: LFNCEMARK-> tmp6:= AND_DSZ32(0x000000c0, tmp6) 
U4af1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U4af2) SEQW GOTO U4ae1
U4af2: tmp5:= ZEROEXT_DSZ32(0x0000000f) 

U4af4: tmp5:= CONCAT_DSZ32(0x00000007, tmp5) 
U4af5: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp5, 0x20f, 32) !m1 
U4af6: tmp2:= ZEROEXT_DSZ32(0x00000002) 

U4af8: LFNCEMARK-> STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be40,  , tmp2) !m2 
U4af9: NOP SEQW GOTO U21fe
U4afa: tmp2:= ZEROEXT_DSZ32(0x00030300) 

U4afc: MOVETOCREG_DSZ64(tmp2, 0x631) 
U4afd: MOVETOCREG_DSZ64( , 0x00000000, 0x634) !m2 
U4afe: MOVETOCREG_DSZ64( , 0x00000000, 0x635) !m2 

U4b00: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x630) !m2 
U4b01: TESTUSTATE( , UCODE, 0x0044) ? SEQW GOTO U4b10
U4b02: tmp2:= MOVEFROMCREG_DSZ64( , 0x2c2, 32) !m1 

U4b04: MOVETOCREG_BTR_DSZ64(tmp2, 0x00000005, 0x2c2) !m1 
U4b05: tmp2:= MOVEFROMCREG_DSZ64( , 0x3cf, 32) !m1 
U4b06: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000008, U4b08) SEQW GOTO U4b10

U4b08: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1 
U4b09: tmp0:= NOTAND_DSZ64(0x08000040, tmp0) 
U4b0a: tmp1:= BTS_DSZ64(tmp0, 0x0000001c) 

U4b0c: tmp0:= BTS_DSZ64(tmp1, 0x0000001e) 
U4b0d: SAVEUIP( , 0x00, U3c38) SEQW SAVEUIP1 U4b0eSEQW GOTO U2a29
U4b0e: MOVETOCREG_BTS_DSZ64(tmp2, 0x3cf) !m1 

U4b10: NOP SEQW GOTO U7802
U4b11: tmp1:= ZEROEXT_DSZ32(0x00007fff) 
U4b12: tmp1:= SHL_DSZ64(tmp1, 0x00000026) 

U4b14: tmp1:= AND_DSZ64(tmp1, tmp5) 
U4b15: tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp2) 
U4b16: tmp5:= CMOVCC_DSZ64_CONDZ(tmp1, tmp5) 

U4b18: tmp13:= SUB_DSZ32(0x00000009, tmp2) 
U4b19: tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp13) 
U4b1a: tmp5:= CMOVCC_DSZ64_CONDZ(tmp1, tmp5) SEQW GOTO U1c3a

U4b1c: tmp1:= NOTAND_DSZ16(0x00000007, tmp3) 
U4b1d: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x08000000) 
U4b1e: tmp1:= CONCAT_DSZ16(0x0000c093, tmp1) 

U4b20: tmp1:= OR_DSZ32(tmp15, tmp1) 
U4b21: tmp1:= CONCAT_DSZ32(0xffffffffffffffff, tmp1) 
U4b22: WRSEGFLD(tmp1, DS, SEL+FLGS+LIM) 

U4b24: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001aa, tmp9) 
U4b25: tmp1:= NOTAND_DSZ16(0x00000007, tmp1) 
U4b26: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x08000000) 

U4b28: tmp1:= CONCAT_DSZ16(0x0000c093, tmp1) 
U4b29: tmp1:= OR_DSZ32(tmp15, tmp1) 
U4b2a: tmp1:= CONCAT_DSZ32(0xffffffffffffffff, tmp1) 

U4b2c: WRSEGFLD(tmp1, ES, SEL+FLGS+LIM) 
U4b2d: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001ca, tmp9) 
U4b2e: tmp1:= NOTAND_DSZ16(0x00000007, tmp1) 

U4b30: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x08000000) 
U4b31: tmp1:= CONCAT_DSZ16(0x0000c093, tmp1) 
U4b32: tmp1:= OR_DSZ32(tmp15, tmp1) 

U4b34: tmp1:= CONCAT_DSZ32(0xffffffffffffffff, tmp1) 
U4b35: WRSEGFLD(tmp1, FS, SEL+FLGS+LIM) 
U4b36: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000208, tmp9) 

U4b38: WRSEGFLD(tmp1, FS, BASE) 
U4b39: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001d2, tmp9) 
U4b3a: tmp1:= NOTAND_DSZ16(0x00000007, tmp1) 

U4b3c: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x08000000) 
U4b3d: tmp1:= CONCAT_DSZ16(0x0000c093, tmp1) 
U4b3e: tmp1:= OR_DSZ32(tmp15, tmp1) 

U4b40: tmp1:= CONCAT_DSZ32(0xffffffffffffffff, tmp1) 
U4b41: WRSEGFLD(tmp1, GS, SEL+FLGS+LIM) 
U4b42: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000210, tmp9) 

U4b44: WRSEGFLD(tmp1, GS, BASE) 
U4b45: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000228, tmp9) 
U4b46: WRSEGFLD(tmp1, GDT, BASE) 

U4b48: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000230, tmp9) 
U4b49: WRSEGFLD(tmp1, IDT, BASE) 
U4b4a: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b8, tmp9) 

U4b4c: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001a4, tmp9) 
U4b4d: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002f0, tmp9) 
U4b4e: LFNCEWTMRK-> tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002f8, tmp9) 

U4b50: SYNCMARK-> FETCHFROMEIP1_ASZ64( , tmp5) !m1 
U4b51: WRITEURAM(tmp1, 0x0074, 32) 
U4b52: tmp2:= SHL_DSZ64(tmp2, 0x00000010) 

U4b54: tmp2:= SAR_DSZ64(tmp2, 0x00000010) 
U4b55: WRITEURAM(tmp2, 0x0075, 64) 
U4b56: tmp3:= SHL_DSZ64(tmp3, 0x00000010) 

U4b58: tmp3:= SAR_DSZ64(tmp3, 0x00000010) 
U4b59: WRITEURAM(tmp3, 0x0076, 64) 
U4b5a: tmp4:= TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U4b5d

U4b5c: tmp4:= BTS_DSZ64(0x00000000, 0x0000003a) 
U4b5d: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U3809
U4b5e: LFNCEWTMRK-> tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000054, tmp9) 

U4b60: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000030, tmp9) 
U4b61: MOVETOCREG_DSZ64(0x00000014, 0x000) !m2 
U4b62: tmp14:= ZEROEXT_DSZ32(0x00003801) 

U4b64: SAVEUIP( , 0x00, U2df1) 
U4b65: SYNCWAIT-> tmp10:= MOVE_DSZ32(0x0000616a) SEQW GOTO U5a05
U4b66: tmp6:= CMOVCC_DSZ64_CONDNZ(tmp9, 0x00000200) 

U4b68: MOVETOCREG_DSZ64(tmp6, 0x29e, 32) !m1 
U4b69: tmp8:= READURAM( , 0x0007, 64) 
U4b6a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U4b6c) SEQW GOTO U2ce9

U4b6c: tmp9:= MOVEFROMCREG_DSZ64( , 0x105) 
U4b6d: tmp9:= AND_DSZ32(0x00000004, tmp9) 
U4b6e: tmp9:= MOVEMERGEFLGS_DSZ32(0x00000024, tmp9) 

U4b70: tmp9:= CMOVCC_DSZ32_CONDNZ(tmp9, 0x00000004) 
U4b71: tmp13:= READURAM( , 0x005c, 64) 
U4b72: tmp13:= OR_DSZ32(tmp9, tmp13) 

U4b74: ROVR<- WRITEURAM(tmp13, 0x005c, 32) !m2 SEQW SAVEUIP1 U4b75SEQW GOTO U29a9
U4b75: tmp9:= SHR_DSZ32(tmp8, 0x00000014) 
U4b76: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, 0x00000002, U34c8) !m0,m1,m2 

U4b78: tmp9:= MOVEFROMCREG_DSZ64( , 0x000) 
U4b79: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000b, U4b7a) !m0 SEQW GOTO U34c8
U4b7a: tmp9:= ZEROEXT_DSZ32() 

U4b7c: tmp8:= ZEROEXT_DSZ32() SEQW GOTO U34c9
U4b7d: tmp1:= unk_21f(tmp7) 
U4b7e: tmp1:= unk_1d6(tmp1) 

U4b80: tmp1:= SHL_DSZ32(tmp1, 0x00000003) 
U4b81: tmp7:= SHR_DSZ32(tmp7, tmp1) 
U4b82: tmp7:= unk_1d6(tmp7) 

U4b84: tmp7:= OR_DSZ32(tmp7, tmp1) 
U4b85: tmp9:= SHL_DSZ32(tmp9, 0x00000001) 
U4b86: tmp9:= OR_DSZ32(tmp7, tmp9) SEQW URET0

U4b88: WRTAGW-> tmm0:= unk_6a8(IMM_MACRO_ALIAS_STi) !m0 
U4b89: mm1:= unk_7ea(0x00000000) 
U4b8a: tmp2:= SUB_DSZ32(tmp1, 0x0001003a) 

U4b8c: tmp11:= ZEROEXT_DSZ32(0x0001003e) 
U4b8d: tmm1:= unk_7c2(tmm3) 
U4b8e: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp2, U5829) 

U4b90: tmm7:= unk_6aa(0x00000000, tmm1) 
U4b91: tmm3:= unk_6ee(tmm7) 
U4b92: tmm3:= unk_4b6( , tmm3) 

U4b94: tmm0:= unk_72a(0x00000000) 
U4b95: tmp9:= unk_6a0() 
U4b96: tmm1:= SHUFPD( , tmm1) 

U4b98: tmm3:= unk_50f( , tmm3) 
U4b99: tmm3:= ORPD(tmm3, tmm1) 
U4b9a: tmp9:= unk_6a0() 

U4b9c: tmp1:= ZEROEXT_DSZ32(0x0000ffff) 
U4b9d: tmm1:= unk_7c2(mm1, tmm1) 
U4b9e: tmm3:= unk_7c2(mm1, tmm3) 

U4ba0: tmm3:= unk_6e1(tmm1, tmm3) 
U4ba1: tmp9:= unk_6a0() 
U4ba2: mm2:= unk_7aa(tmm3) 

U4ba4: tmm2:= unk_495(tmm3, tmm1) 
U4ba5: tmp2:= SHR_DSZ32(tmp2, 0x0000001c) 
U4ba6: tmp8:= SHL_DSZ32(tmp8, 0x0000000b) 

U4ba8: tmp8:= OR_DSZ32(tmp2, tmp8) 
U4ba9: tmp2:= SUB_DSZ32(0x00000009, tmp2) 
U4baa: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp2, U5829) 

U4bac: tmp14:= unk_6a0() 
U4bad: tmm3:= unk_662(tmm6, tmm2) 
U4bae: mm2:= unk_7aa(tmm3) 

U4bb0: tmp1:= SHR_DSZ32(tmp2, 0x0000001c) 
U4bb1: tmp8:= SHL_DSZ32(tmp8, 0x00000004) 
U4bb2: tmp8:= OR_DSZ32(tmp1, tmp8) 

U4bb4: tmm5:= unk_746(tmm0) 
U4bb5: tmp5:= ZEROEXT_DSZ32(0x00000010) 
U4bb6: tmp1:= ZEROEXT_DSZ32() 

U4bb8: tmp1:= SHL_DSZ64(tmp1, 0x00000004) 
U4bb9: tmm2:= unk_495(tmm3, tmm1) 
U4bba: mm2:= unk_7aa(tmm3) 

U4bbc: tmm3:= unk_662(tmm6, tmm2) 
U4bbd: tmp2:= SHR_DSZ32(tmp2, 0x0000001c) 
U4bbe: tmp1:= OR_DSZ64(tmp2, tmp1) 

U4bc0: tmp5:= SUB_DSZ32(0x00000001, tmp5) 
U4bc1: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp5, U4bc2) SEQW GOTO U4bb8
U4bc2: tmm3:= unk_746(mm1) 

U4bc4: tmm3:= MOVHLPS(tmm3, tmm5) 
U4bc5: tmp11:= unk_cdc(tmp10) 
U4bc6: LFNCEMARK-> tmm0:= unk_6ee(tmm7) !m2 

U4bc8: tmm3:= unk_76a(tmm0) 
U4bc9: tmp11:= NOTAND_DSZ32(tmp11, 0x00000010) 
U4bca: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U4bcc: LFNCEWAIT-> tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U4bcd: tmp1:= AND_DSZ32(0x00000020, tmp5) 
U4bce: tmp1:= OR_DSZ32(tmp1, tmp11) 

U4bd0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U4bd1) SEQW GOTO U4bd4
U4bd1: tmp1:= OR_DSZ16(0x00008080, tmp4) 
U4bd2: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x48c) 

U4bd4: LFNCEWAIT-> tmm0:= FMOV( , 0x00000091) !m0 SEQW GOTO U1bd0
U4bd5: tmp1:= SHL_DSZ64(tmp1, 0x00000002) 
U4bd6: tmp0:= unk_f54( , tmp1) !m1 

U4bd8: tmp0:= NOTAND_DSZ64(0x00000003, tmp0) 
U4bd9: tmp0:= OR_DSZ64(0x00000002, tmp0) 
U4bda: WRITEURAM(tmp0, 0x004b, 64) 

U4bdc: tmp0:= READURAM( , 0x005c, 64) 
U4bdd: tmp0:= OR_DSZ32(0x00001000, tmp0) 
U4bde: WRITEURAM(tmp0, 0x005c, 32) SEQW GOTO U5ee2

U4be0: tmp10:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 
U4be1: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp10, 0x00000009, U4be0) 
U4be2: tmp11:= MOVEFROMCREG_DSZ64( , 0x21d, 32) !m1 

U4be4: tmp11:= BT_DSZ32(tmp11, 0x00000008) 
U4be5: tmp15:= SELECTCC_DSZ32_CONDNB(tmp11, 0x00003b00) 
U4be6: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000003, U4be8) !m0 SEQW GOTO U4be9

U4be8: SYNCFULL-> MOVETOCREG_OR_DSZ64( , 0x00000004, 0x701) 
U4be9: tmp12:= ADD_DSZ32(0x00000000, tmp15) SEQW SAVEUIP0 U4beaSEQW GOTO U3035
U4bea: NOP 

U4bec: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp2, 0x411) 
U4bed: MOVETOCREG_SHR_DSZ64(tmp2, 0x00000020, 0x064) 
FUN_ucode_0004bee:
U4bee: MOVETOCREG_DSZ64(tmp4, 0x106) 

U4bf0: MOVETOCREG_SHR_DSZ64(tmp4, 0x00000020, 0x488) 
U4bf1: MOVETOCREG_DSZ64(tmp6, 0x74d) 
U4bf2: MOVETOCREG_SHR_DSZ64(tmp6, 0x00000020, 0x63c) 

U4bf4: MOVETOCREG_DSZ64(tmp8, 0x680) SEQW SAVEUIP0 U4bf5SEQW GOTO U3035
U4bf5: MOVETOCREG_DSZ64(tmp2, 0x609) 
U4bf6: MOVETOCREG_DSZ64(tmp4, 0x60a) 

U4bf8: MOVETOCREG_DSZ64(tmp6, 0x693) 
U4bf9: MOVETOCREG_SHR_DSZ64(tmp6, 0x00000020, 0x608) 
U4bfa: LFNCEMARK-> MOVETOCREG_DSZ64(tmp8, 0x610) 

U4bfc: tmp12:= ZEROEXT_DSZ32(0x0000aec0) 
U4bfd: tmp11:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U4bfe: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U4c00: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U4c14) 
U4c01: tmp12:= ZEROEXT_DSZ32(0x00007ac0) 
U4c02: WRMSLOOPCTRFBR( , 0x0000005f) 

U4c04: tmp0:= ZEROEXT_DSZ32(0x00030600) 
U4c05: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x6a1) 
U4c06: NOP 

U4c08: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) SEQW SAVEUIP1 U4c09SEQW GOTO U2571
U4c09: WRMSLOOPCTRFBR( , 0x00000007) 
U4c0a: tmp0:= ZEROEXT_DSZ32(0x00030300) 

U4c0c: MOVETOCREG_DSZ64(tmp0, 0x6a1) !m2 
U4c0d: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) !m2 SEQW SAVEUIP1 U4c0eSEQW GOTO U2571
U4c0e: MOVETOCREG_DSZ64(tmp11, 0x706) 

U4c10: MOVETOCREG_SHR_DSZ64(tmp11, 0x00000020, 0x707) 
U4c11: tmp1:= MOVEFROMCREG_DSZ64( , 0x692) 
U4c12: SYNCFULL-> MOVETOCREG_BTR_DSZ64(tmp1, 0x692) !m2 

U4c14: tmp0:= MOVEFROMCREG_DSZ64( , 0x2eb, 32) !m1 
U4c15: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U4c14) 
U4c16: tmp2:= MOVEFROMCREG_DSZ64( , 0x630) !m2 

U4c18: tmp2:= AND_DSZ32(0x00000fff, tmp2) 
U4c19: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U4c16) 
U4c1a: tmp0:= ZEROEXT_DSZ32(0x00000083) 

U4c1c: tmp0:= CONCAT_DSZ16(tmp0, 0x00000200) 
U4c1d: MOVETOCREG_DSZ64(tmp0, 0x631) !m2 
U4c1e: MOVETOCREG_DSZ64( , 0x00000000, 0x634) !m2 

U4c20: MOVETOCREG_DSZ64( , 0x00000000, 0x635) !m2 
U4c21: MOVETOCREG_DSZ64( , 0x00000000, 0x636) !m2 
U4c22: MOVETOCREG_DSZ64( , 0x00000000, 0x637) !m2 

U4c24: MOVETOCREG_DSZ64( , 0x00000000, 0x638) !m2 
U4c25: tmp2:= ZEROEXT_DSZ32(0x00000083) 
U4c26: tmp2:= CONCAT_DSZ16(tmp2) 

U4c28: MOVETOCREG_DSZ64(tmp2, 0x630) !m2 
U4c29: SAVEUIP( , 0x00, U61aa) 
U4c2a: tmp2:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 

U4c2c: tmp0:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000020) 
U4c2d: tmp0:= ADD_DSZ32(0x0000bd80, tmp0) 
U4c2e: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp0) 

U4c30: tmp1:= ADD_DSZ64(tmp2, tmp1) 
U4c31: STADSTGBUF_DSZ64_ASZ16_SC1(tmp0,  , tmp1) SEQW URET0
U4c32: SAVEUIP_REGOVR(0x01, U4c34, 0x0000) !m0 SEQW GOTO U0a95

U4c34: SAVEUIP_REGOVR( , 0x01, U4c35, 0xc935) !m0 SEQW GOTO U256a
U4c35: tmp2:= ZEROEXT_DSZ32(0x00000006) 
U4c36: tmp1:= ZEROEXT_DSZ32(0x70000000) 

U4c38: tmp3:= ZEROEXT_DSZ32(0x00000080) 
U4c39: tmp12:= ZEROEXT_DSZ32() 
U4c3a: SAVEUIP_REGOVR(0x01, U4c3c, 0x0008) !m0 SEQW GOTO U2b0d

U4c3c: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x63a) 
U4c3d: WRMSLOOPCTRFBR( , 0x0000017f) 
U4c3e: NOP 

U4c40: LFNCEWAIT-> unk_def(tmp2) 
U4c41: tmp2:= ADD_DSZ32(0x00000040, tmp2) 
U4c42: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U4c40

U4c44: ROVR<- UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp12, tmp12) SEQW SAVEUIP1 U4c45SEQW GOTO U32cd
U4c45: tmp6:= MOVEFROMCREG_DSZ64( , 0x39e, 32) !m1 
U4c46: tmp5:= MOVEFROMCREG_DSZ64( , 0x6c5) 

U4c48: tmp5:= NOTAND_DSZ32(0x00000008, tmp5) 
U4c49: tmp15:= AND_DSZ32(0x00400000, tmp6) 
U4c4a: tmp15:= SHR_DSZ32(tmp15, 0x00000013) 

U4c4c: SYNCMARK-> MOVETOCREG_OR_DSZ64(tmp5, 0x6c5, tmp15) !m2 
U4c4d: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
U4c4e: BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x00000008, U4c50) SEQW GOTO U4c59

U4c50: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000001c, U4c54) 
U4c51: tmp7:= SUB_DSZ32(0x00001136, tmp14) 
U4c52: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U4c74) 

U4c54: WRITEURAM(tmp6, 0x0073, 64) !m2 
U4c55: ROVR<- tmp3:= STC(tmp3) SEQW SAVEUIP1 U4c56SEQW GOTO U32cd
U4c56: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp6, 0x00000008, 0x39e) !m1,m2 

U4c58: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
U4c59: tmp6:= AND_DSZ32(0x000000ff, tmp6) 
U4c5a: tmp6:= unk_222(tmp6) 

U4c5c: tmp6:= ADD_DSZ32(tmp6, tmp6) 
U4c5d: tmp8:= ZEROEXT_DSZ32(tmp1) 
U4c5e: tmp1:= ZEROEXT_DSZ32(tmp8) 

U4c60: tmp8:= ADD_DSZ32(0x00040000, tmp8) 
U4c61: tmp6:= SUB_DSZ32(0x00000001, tmp6) 
U4c62: WRMSLOOPCTRFBR( , 0x000003ff) 

U4c64: unk_fdf(tmp1) 
U4c65: tmp1:= ADD_DSZ32(0x00000040, tmp1) 
U4c66: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U4c64

U4c68: SYNCWAIT-> TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U4c70
U4c69: WRMSLOOPCTRFBR( , 0x000003ff) 
U4c6a: NOP 

U4c6c: unk_fdf(tmp1) 
U4c6d: tmp1:= ADD_DSZ32(0x00000040, tmp1) 
U4c6e: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U4c6c

U4c70: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U4c71) SEQW GOTO U4c5e
U4c71: NOP 
U4c72: NOP 

U4c74: SAVEUIP_REGOVR(0x01, U4c75, 0x0006) !m0 SEQW GOTO U2b0d
U4c75: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp12, tmp14) 
U4c76: SYNCFULL-> unk_fcf(tmp3) 

U4c78: SAVEUIP_REGOVR(0x01, U4c79, 0x0006) !m0 SEQW GOTO U2b0d
U4c79: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp3, U039a) 
U4c7a: UJMP( , tmp14) 

U4c7c: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U4c85
U4c7d: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000012, U2769) !m0,m1 
U4c7e: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000003, U2771) !m0,m1 

U4c80: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U4c85
U4c81: tmp2:= READURAM( , 0x0011, 64) 
U4c82: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp2) 

U4c84: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000f, U73ac) !m0,m1,m2 
U4c85: tmp3:= LEA_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U4c86: tmp3:= AND_DSZ8(0x0000003f, tmp3) 

U4c88: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U2711) 
U4c89: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U4c8a: tmp11:= ZEROEXT_DSZ16N(tmp11) !m1 

U4c8c: tmp2:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000208, mode=0x18) 
U4c8d: tmp4:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000200, mode=0x18) 
U4c8e: LFNCEMARK-> tmp5:= CONCAT_DSZ32(rdx, rax) 

U4c90: tmp5:= AND_DSZ64(tmp6, tmp5) 
U4c91: tmp7:= SHR_DSZ64(tmp5, 0x00000001) 
U4c92: tmp7:= AND_DSZ64(0x0000000c, tmp7) 

U4c94: tmp8:= AND_DSZ64(0x00000003, tmp5) 
U4c95: tmp8:= OR_DSZ64(tmp7, tmp8) 
U4c96: tmp7:= SHR_DSZ64(tmp4, 0x00000001) 

U4c98: tmp7:= AND_DSZ64(0x0000000c, tmp7) 
U4c99: tmp13:= AND_DSZ64(0x00000003, tmp4) 
U4c9a: tmp13:= OR_DSZ64(tmp7, tmp13) 

U4c9c: tmp13:= SHL_DSZ64(tmp13, 0x00000004) 
U4c9d: tmp8:= OR_DSZ64(tmp8, tmp13) 
U4c9e: UFLOWCTRL( , tmp8, USTATE) 

U4ca0: LFNCEWAIT-> WRITEURAM(tmp8, 0x003f, 64) 
U4ca1: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x072) !m0 
U4ca2: tmp2:= BTR_DSZ64(tmp2, 0x0000003f) 

U4ca4: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp2, U4ca5) SEQW GOTO U1f38
U4ca5: tmp7:= NOTAND_DSZ64(tmp6, tmp2) 
U4ca6: tmp10:= NOTAND_DSZ64(tmp2, tmp4) 

U4ca8: tmp7:= OR_DSZ64(tmp10, tmp7) 
U4ca9: tmp12:= WRMSLOOPCTRFBR(0x00000002) 
U4caa: tmp8:= ADD_DSZ64(0x00000210, tmp11) 

U4cac: tmp10:= LDZX_DSZ64_ASZ32_SC1(tmp8, mode=0x18) 
U4cad: tmp7:= OR_DSZ64(tmp10, tmp7) 
U4cae: tmp10:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000008, mode=0x18) 

U4cb0: tmp7:= OR_DSZ64(tmp10, tmp7) 
U4cb1: tmp8:= ADD_DSZ64(0x00000010, tmp8) 
U4cb2: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U4cac

U4cb4: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U2711) 
U4cb5: tmp2:= BT_DSZ64(tmp2, 0x00000003) 
U4cb6: tmp9:= SELECTCC_DSZ64_CONDNB(tmp2, 0x00000040) 

U4cb8: tmp7:= ADD_DSZ64(0x0000023f, tmp9) 
U4cb9: tmp3:= AND_DSZ64(tmp2, tmp5) 
U4cba: tmp3:= BT_DSZ64(tmp3, 0x00000003) 

U4cbc: tmp7:= MOVEMERGEFLGS_DSZ64(tmp7, tmp3) 
U4cbd: tmp8:= CMOVCC_DSZ64_CONDB(tmp7, 0x0000023f) 
U4cbe: tmp10:= ADD_DSZ64(0x00000001, tmp7) 

U4cc0: tmp6:= SHL_DSZ64(tmp10, 0x00000010) 
U4cc1: tmp2:= BT_DSZ64(tmp2, 0x00000004) 
U4cc2: tmp9:= SELECTCC_DSZ64_CONDNB(tmp2, 0x00000040) 

U4cc4: tmp7:= ADD_DSZ64(tmp9, tmp7) 
U4cc5: tmp3:= BT_DSZ64(tmp3, 0x00000004) 
U4cc6: tmp7:= MOVEMERGEFLGS_DSZ64(tmp7, tmp3) 

U4cc8: tmp8:= CMOVCC_DSZ64_CONDB(tmp7, tmp8) 
U4cc9: tmp12:= ADD_DSZ64(0x00000001, tmp7) 
U4cca: tmp12:= SHL_DSZ64(tmp12, 0x0000001c) 

U4ccc: tmp6:= OR_DSZ64(tmp12, tmp6) 
U4ccd: tmp6:= OR_DSZ64(0x00000240, tmp6) 
U4cce: tmm0:= unk_744(mm6) 

U4cd0: tmp2:= BT_DSZ64(tmp2, 0x00000008) 
U4cd1: tmp9:= SELECTCC_DSZ64_CONDNB(tmp2, 0x00000080) 
U4cd2: tmp7:= ADD_DSZ64(tmp9, tmp7) 

U4cd4: tmp3:= BT_DSZ64(tmp3, 0x00000008) 
U4cd5: tmp7:= MOVEMERGEFLGS_DSZ64(tmp7, tmp3) 
U4cd6: tmp8:= CMOVCC_DSZ64_CONDB(tmp7, tmp8) 

U4cd8: tmp8:= ADD_DSZN(tmp8, tmp11) !m1 
U4cd9: tmp3:= AND_DSZ64(tmp2, tmp5) 
U4cda: tmp4:= MOVEINSERTFLGS_DSZ64(0x00000001, tmp4) SEQW GOTO U1f51

U4cdc: ROVR<- tmp4:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U4cddSEQW GOTO U32cd
U4cdd: tmp7:= MOVEFROMCREG_DSZ64( , 0x382, 32) !m1 
U4cde: tmp13:= ZEROEXT_DSZ64(tmp7) 

U4ce0: tmp12:= ADD_DSZ64(0x00000018, tmp8) 
U4ce1: SYNCFULL-> UJMP( , U6099) SEQW SAVEUIP1 U4ce2
U4ce2: tmp12:= ADD_DSZ64(0x00000008, tmp12) 

U4ce4: tmp6:= MOVEFROMCREG_DSZ64( , 0x3a5, 32) !m1 
U4ce5: tmp6:= AND_DSZ32(0x00000c7d, tmp6) 
U4ce6: tmp5:= SHL_DSZ32(tmp4, 0x0000000f) 

U4ce8: tmp6:= OR_DSZ32(tmp6, tmp5) 
U4ce9: SYNCFULL-> tmp6:= MOVETOCREG_BTS_DSZ64(tmp6, 0x00000007, 0x3a5) !m0,m1,m2 
U4cea: tmp13:= MOVEFROMCREG_DSZ64( , 0x382, 32) !m1 

U4cec: tmp5:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 
U4ced: tmp5:= SHL_DSZ64(tmp5, 0x00000028) 
U4cee: tmp13:= OR_DSZ64(tmp5, tmp13) 

U4cf0: SYNCFULL-> tmp6:= MOVETOCREG_BTS_DSZ64(tmp6, 0x00000015, 0x3a5) !m1,m2 
U4cf1: tmp5:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 
U4cf2: tmp11:= BT_DSZ32(tmp13, 0x0000001e) 

U4cf4: tmp11:= SELECTCC_DSZ32_CONDNB(tmp11, tmp5) 
U4cf5: tmp11:= SHR_DSZ32(tmp11, 0x00000002) 
U4cf6: CMPUJNZ_DIRECT_NOTTAKEN(tmp11, 0x00000012, U4cfa) !m0 

U4cf8: tmp5:= NOTAND_DSZ32(0x000000fc, tmp5) 
U4cf9: tmp5:= OR_DSZ32(0x000000a0, tmp5) 
U4cfa: SYNCFULL-> CMPUJNZ_DIRECT_NOTTAKEN(tmp11, 0x0000001e, U4cfe) !m0 

U4cfc: tmp5:= NOTAND_DSZ32(0x000000fc, tmp5) 
U4cfd: tmp5:= OR_DSZ32(0x000000a4, tmp5) 
U4cfe: tmp5:= SHL_DSZ64(tmp5, 0x00000030) 

U4d00: tmp13:= OR_DSZ64(tmp5, tmp13) 
U4d01: SYNCFULL-> tmp6:= MOVETOCREG_BTS_DSZ64(tmp6, 0x00000014, 0x3a5) !m1,m2 
U4d02: tmp5:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 

U4d04: tmp5:= SHL_DSZ64(tmp5, 0x00000038) 
U4d05: tmp13:= OR_DSZ64(tmp5, tmp13) 
U4d06: SYNCFULL-> UJMP( , U6099) SEQW SAVEUIP1 U4d08

U4d08: tmp4:= ADD_DSZ32(0x00000001, tmp4) 
U4d09: SYNCFULL-> CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000010, U4ce2) 
U4d0a: MOVETOCREG_DSZ64(tmp7, 0x382, 32) !m1,m2 

U4d0c: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
U4d0d: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 
U4d0e: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f6) 

U4d10: tmp1:= CONCAT_DSZ32(tmp1, 0x00000008) 
U4d11: tmp2:= READURAM( , 0x001e, 64) 
U4d12: tmp3:= MOVEFROMCREG_DSZ64( , 0x529) 

U4d14: tmp4:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U4d15: tmp5:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U4d16: tmp4:= CONCAT_DSZ32(tmp5, tmp4) 

U4d18: tmp5:= MOVEFROMCREG_DSZ64( , 0x067) 
U4d19: tmp12:= ADD_DSZ64(0x00000028, tmp9) 
U4d1a: WRMSLOOPCTRFBR( , 0x00000005) SEQW SAVEUIP0 U4d1cSEQW GOTO U0051

U4d1c: WRMSLOOPCTRFBR( , 0x0000000f) 
U4d1d: tmp12:= ADD_DSZ64(0x000000a8, tmp9) 
U4d1e: NOP 

U4d20: tmp13:= ZEROEXT_DSZ64(rdi) 
U4d21: SYNCFULL-> UJMP( , U6099) SEQW SAVEUIP1 U4d22
U4d22: tmp12:= SUB_DSZ64(0x00000008, tmp12) 

U4d24: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U4d20
U4d25: tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U4d26: tmp0:= READAFLAGS( , tmp0) !m2 

U4d28: tmp11:= RDSEGFLD(UNK_SEG_09, SEL) 
U4d29: tmp1:= RDSEGFLD(SS_USERM, SEL) 
U4d2a: tmp1:= CONCAT_DSZ16(tmp1, tmp11) 

U4d2c: tmp0:= CONCAT_DSZ32(tmp1, tmp0) 
U4d2d: tmp11:= RDSEGFLD(DS, SEL) 
U4d2e: tmp1:= RDSEGFLD(ES, SEL) 

U4d30: tmp1:= CONCAT_DSZ16(tmp1, tmp11) 
U4d31: tmp11:= RDSEGFLD(FS, SEL) 
U4d32: tmp2:= RDSEGFLD(GS, SEL) 

U4d34: tmp2:= CONCAT_DSZ16(tmp2, tmp11) 
U4d35: tmp1:= CONCAT_DSZ32(tmp2, tmp1) 
U4d36: tmp2:= MOVEFROMCREG_DSZ64( , 0x609) 

U4d38: tmp3:= MOVEFROMCREG_DSZ64( , 0x60a) 
U4d39: tmp4:= MOVEFROMCREG_DSZ64( , 0x10d) 
U4d3a: tmp5:= MOVEFROMCREG_DSZ64( , 0x10e) 

U4d3c: tmp12:= ADD_DSZ64(0x000000d8, tmp9) 
U4d3d: WRMSLOOPCTRFBR( , 0x00000005) SEQW SAVEUIP0 U4d3eSEQW GOTO U0051
U4d3e: NOP 

U4d40: tmp0:= ZEROEXT_DSZ32(0x0000345a) SEQW GOTO U345c
U4d41: tmp5:= MOVEFROMCREG_DSZ64( , tmp8) 
U4d42: tmp5:= NOTAND_DSZ32(0x00000003, tmp5) 

U4d44: tmp5:= MOVETOCREG_DSZ64(tmp5, tmp8) 
U4d45: tmp10:= ZEROEXT_DSZ32(tmp10, tmp5) 
U4d46: tmp5:= NOTAND_DSZ32(0x00000003, tmp10) 

U4d48: tmp5:= MOVETOCREG_DSZ64(tmp5, tmp8) 
U4d49: tmp10:= ZEROEXT_DSZ64(tmp10, tmp5) 
U4d4a: SYNCFULL-> MOVETOCREG_DSZ64(tmp10, tmp8) SEQW GOTO U2162

U4d4c: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U4d4d: tmp11:= ZEROEXT_DSZ16N(tmp11) !m1 
U4d4e: SYNCMARK-> UFLOWCTRL( , tmp4, USTATE) 

U4d50: WRITEURAM(tmp4, 0x003f, 64) !m2 
U4d51: tmp4:= BT_DSZ64(tmp4, 0x00000003) 
U4d52: tmp13:= MOVEMERGEFLGS_DSZ64(0x000003ff, tmp4) 

U4d54: tmp8:= CMOVCC_DSZ64_CONDB(tmp13, 0x0000023f) 
U4d55: tmp4:= BT_DSZ64(tmp4, 0x00000004) 
U4d56: tmp13:= MOVEMERGEFLGS_DSZ64(0x0000043f, tmp4) 

U4d58: tmp8:= CMOVCC_DSZ64_CONDB(tmp13, tmp8) 
U4d59: TESTUSTATE( , SYS, UST_SMM | 0x0800) !m1 ? SEQW GOTO U4d65
U4d5a: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U4d5c: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000012, U2769) !m0,m1 
U4d5d: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U4d5e: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000003, U2771) !m0,m1 

U4d60: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U4d65
U4d61: tmp2:= READURAM( , 0x0011, 64) 
U4d62: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp2) 

U4d64: BTUJB_DIRECT_NOTTAKEN(tmp2, U73ac, tmp1) !m1,m2 
U4d65: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x072) !m0,m2 
U4d66: tmp1:= AND_DSZ32(tmp4, 0x00000006) 

U4d68: tmp1:= MOVEMERGEFLGS_DSZ64(0x00000018, tmp1) 
U4d69: tmp1:= CMOVCC_DSZ32_CONDNZ(tmp1, 0x00000200) 
U4d6a: tmp7:= AND_DSZ32(0x00000001, tmp4) 

U4d6c: tmp7:= SELECTCC_DSZ64_CONDNZ(tmp7, tmp1) 
U4d6d: tmp7:= ADD_DSZN(tmp7, tmp11) !m1 
U4d6e: TESTUSTATE( , SYS, 0x0800) !m1 ? SEQW GOTO U4d78

U4d70: tmp0:= LEA_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U4d71: tmp0:= AND_DSZ8(0x0000003f, tmp0) 
U4d72: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 

U4d74: tmp8:= ADD_DSZN(tmp8, tmp11) !m1 
U4d75: unk_cc2(tmp8) 
U4d76: unk_cc2(tmp7) 

U4d78: tmp5:= LDTICKLE_DSZ64_ASZ32_SC1(tmp11, 0x00000200, mode=0x18) 
U4d79: tmp5:= NOTAND_DSZ64(tmp4, tmp5) 
U4d7a: tmp4:= BT_DSZ64(tmp4, 0x0000003f) 

U4d7c: tmp5:= SELECTCC_DSZ64_CONDB(tmp4, tmp5) 
U4d7d: SAVEUIP( , 0x00, U3fd9) 
U4d7e: SYNCWAIT-> TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW SAVEUIP1 U4d80? SEQW GOTO U6eea

U4d80: SAVEUIP( , 0x00, U5eba) 
U4d81: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW SAVEUIP1 U4d82? SEQW GOTO U152d
U4d82: tmp8:= ADD_DSZN(tmp11, 0x000003c0) !m1 

U4d84: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U4d88
U4d85: tmp8:= SUB_DSZN(0x00000180, tmp8) !m1 
U4d86: NOP 

U4d88: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U4d95
U4d89: rax:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, mode=0x18) 
U4d8a: tmp0:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000008, mode=0x18) 

U4d8c: rcx:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000010, mode=0x18) 
U4d8d: tmp1:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000018, mode=0x18) 
U4d8e: rdx:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000020, mode=0x18) 

U4d90: tmp2:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000028, mode=0x18) 
U4d91: rbx:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000030, mode=0x18) 
U4d92: tmp3:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000038, mode=0x18) 

U4d94: tmp8:= ADD_DSZN(tmp8, 0x00000040) !m1 
U4d95: TESTUSTATE( , UCODE, !0x0040) !m0 ? SEQW SAVEUIP1 U4d96? SEQW GOTO U62c2
U4d96: tmp6:= ZEROEXT_DSZ64(tmp4) 

U4d98: tmp0:= AND_DSZ64(0x00000fff, tmp6) 
U4d99: tmp5:= OR_DSZ64(tmp0, tmp5) 
U4d9a: tmp7:= TESTUSTATE(tmp8, SYS, 0x8000) !m1 ? SEQW GOTO U1421

U4d9c: tmp0:= READURAM( , 0x003a, 64) 
U4d9d: tmp1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U4d9e: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U4da2) 

U4da0: tmp0:= BTS_DSZ64(tmp0, 0x00000020) 
U4da1: WRITEURAM(tmp0, 0x003a, 64) !m2 
U4da2: tmp0:= SHR_DSZ64(tmp0, 0x00000018) 

U4da4: tmp0:= AND_DSZ64(0x00000100, tmp0) 
U4da5: tmp5:= OR_DSZ32(0x00000100, tmp5) 
U4da6: tmp5:= NOTAND_DSZ64(tmp0, tmp5) 

U4da8: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000008, U596e) !m2 
U4da9: tmp4:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U4daa: BTUJNB_DIRECT_NOTTAKEN(tmp4, 0x00000000, U0f1a) 

U4dac: tmp14:= ZEROEXT_DSZ32(0x00000f19) 
U4dad: tmp1:= MOVEFROMCREG_DSZ64( , 0x067) 
U4dae: tmp0:= MOVEFROMCREG_DSZ64( , 0x065) 

U4db0: tmp0:= SUB_DSZN(tmp0, tmp1) !m1 
U4db1: AETTRACE( , tmp0, 0x0c) SEQW GOTO U2ad1
U4db2: tmp0:= SUB_DSZ64(tmp6, tmp7) 

U4db4: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp0, U05f6) 
U4db5: CMPUJNZ_DIRECT_NOTTAKEN(tmp7, U05f6, tmp12) 
U4db6: tmp0:= SELECTCC_DSZ32_CONDZ(tmp9, 0x00000001) 

U4db8: tmp0:= SHL_DSZ64(tmp0, 0x0000003e) 
U4db9: tmp6:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
U4dba: tmp6:= AND_DSZ32(0x00001800, tmp6) 

U4dbc: tmp6:= SHL_DSZ64(tmp6, 0x0000002f) 
U4dbd: tmp6:= OR_DSZ64(tmp0, tmp6) 
U4dbe: MOVETOCREG_DSZ64(tmp6, 0x211, 32) !m1,m2 

U4dc0: LBSYNC(0x00000001) 
U4dc1: LBSYNC(0x00000001) 
U4dc2: tmp0:= MOVEFROMCREG_DSZ64( , 0x2b4, 32) !m1 

U4dc4: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U05f6) 
U4dc5: SAVEUIP_REGOVR(0x01, U4dc6, 0x0006) !m0 SEQW GOTO U32cd
U4dc6: SYNCFULL-> MOVETOCREG_BTS_DSZ64( , 0x0000000a, 0x2e1) !m0,m1,m2 

U4dc8: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW GOTO U05f6
U4dc9: LFNCEMARK-> tmp14:= unk_e6b(tmp0, tmp2) !m1,m2 
U4dca: tmp8:= ZEROEXT_DSZ32(0x00002000, tmp8) 

U4dcc: tmp8:= MOVETOCREG_DSZ64(tmp8, 0x7f5) 
U4dcd: tmp15:= SHR_DSZ64(tmp0, 0x00000028) 
U4dce: tmp14:= MOVEMERGEFLGS_DSZ32(0x00003aa5, tmp14) 

U4dd0: tmp12:= ZEROEXT_DSZ16(tmp13, tmp12) 
U4dd1: tmp3:= CONCAT_DSZ32(tmp3, tmp12) 
U4dd2: MOVETOCREG_DSZ64( , 0x00000000, 0x78e) SEQW GOTO U3c01

U4dd4: tmp10:= AND_DSZ32(0x00000700, tmp11) 
U4dd5: tmp8:= SUB_DSZ32(0x00000700, tmp10) 
U4dd6: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp8, U0131) 

U4dd8: tmp12:= READURAM( , 0x000a, 64) 
U4dd9: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp2, 0x070) !m2 
U4dda: tmp7:= SELECTCC_DSZ64_CONDNP(tmp14, tmp7) 

U4ddc: tmp11:= BTR_DSZ32(tmp11, 0x0000001e) 
U4ddd: tmp6:= AND_DSZ32(0x00000800, tmp11) 
U4dde: tmp6:= SHR_DSZ32(tmp6, 0x0000000b) 

U4de0: tmp2:= AND_DSZ32(0x000000ff, tmp11) 
U4de1: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp11) 
U4de2: tmp8:= SHL_DSZ32(tmp2, 0x00000002) 

U4de4: tmp6:= OR_DSZ32(tmp8, tmp6) 
U4de5: tmp6:= CONCAT_DSZ16(tmp12, tmp6) 
U4de6: tmp1:= ZEROEXT_DSZ32(tmp11) 

U4de8: tmp13:= ZEROEXT_DSZ16(tmp12) 
U4de9: tmp12:= SHR_DSZ32(tmp12, 0x00000010) 
U4dea: tmp15:= READURAM( , 0x0070, 64) 

U4dec: tmp8:= SUB_DSZ32(0x00000200, tmp10) 
U4ded: tmp8:= SETCC_CONDZ(tmp8) 
U4dee: tmp8:= SHL_DSZ64(tmp8, 0x00000032) 

U4df0: tmp15:= OR_DSZ64(tmp8, tmp15) 
U4df1: WRITEURAM(tmp15, 0x0170, 64) !m2 
U4df2: MOVETOCREG_SHR_DSZ64(tmp15, 0x00000020, 0x008) 

U4df4: tmp9:= AND_DSZ32(0x00000500, tmp10) 
U4df5: tmp9:= SUB_DSZ32(0x00000400, tmp9) 
U4df6: tmp14:= MOVEMERGEFLGS_DSZ32(0x00014809, tmp9) 

U4df8: SYNCWAIT-> tmp14:= CMOVCC_DSZ64_CONDZ(tmp14, 0x00016809) 
U4df9: TESTUSTATE( , UCODE, 0x0080) ? SEQW GOTO U4dfc
U4dfa: tmp14:= BTS_DSZ64(tmp14, 0x00000018) 

U4dfc: MOVETOCREG_DSZ64(tmp14, 0x000) !m2 
U4dfd: tmp9:= SELECTCC_DSZ64_CONDNZ(tmp9, 0x00000004) 
U4dfe: tmp7:= BT_DSZ32(tmp7, 0x0000000c) 

U4e00: tmp9:= SELECTCC_DSZ64_CONDNB(tmp7, tmp9) 
U4e01: MOVETOCREG_DSZ64(tmp9, 0x070) !m2 
U4e02: TESTUSTATE( , UCODE, !0x0080) !m0 ? SEQW GOTO U1f1d

U4e04: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 
U4e05: tmp4:= SUB_DSZ32(0x00000300, tmp10) 
U4e06: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U4e08) SEQW GOTO U4e21

U4e08: tmp4:= SUB_DSZ32(0x0000000a, tmp2) 
U4e09: tmp4:= SUB_DSZ32(0x00000003, tmp4) 
U4e0a: tmp15:= SETCC_CONDBE(tmp4) 

U4e0c: tmp4:= SUB_DSZ32(0x00000000, tmp2) 
U4e0d: tmp4:= SETCC_CONDZ(tmp4) 
U4e0e: tmp15:= OR_DSZ32(tmp4, tmp15) 

U4e10: tmp4:= SUB_DSZ32(0x0000000e, tmp2) 
U4e11: tmp4:= MOVEMERGEFLGS_DSZ32(0x00000002, tmp4) 
U4e12: tmp15:= CMOVCC_DSZ64_CONDZ(tmp4, tmp15) 

U4e14: tmp4:= SUB_DSZ32(0x00000014, tmp2) 
U4e15: tmp4:= MOVEMERGEFLGS_DSZ32(0x00000002, tmp4) 
U4e16: tmp15:= CMOVCC_DSZ64_CONDZ(tmp4, tmp15) 

U4e18: tmp4:= SUB_DSZ32(0x00000008, tmp2) 
U4e19: tmp4:= MOVEMERGEFLGS_DSZ32(0x00000003, tmp4) 
U4e1a: tmp15:= CMOVCC_DSZ64_CONDZ(tmp4, tmp15) 

U4e1c: tmp4:= MOVEFROMCREG_DSZ64( , 0x004) 
U4e1d: tmp4:= NOTAND_DSZ32(0x00000003, tmp4) 
U4e1e: tmp15:= OR_DSZ32(tmp15, tmp4) 

U4e20: LFNCEMARK-> MOVETOCREG_DSZ64(tmp15, 0x004) 
U4e21: tmp15:= unk_205( , 0xffffffffffffffff) 
U4e22: tmp15:= CONCAT_DSZ32(tmp15) 

U4e24: tmp4:= ADD_DSZ64(tmp12, tmp3) 
U4e25: ROVR<- tmp4:= NOTAND_DSZ64(tmp15, tmp4) SEQW SAVEUIP1 U4e26SEQW GOTO U2178
U4e26: tmp8:= MOVEFROMCREG_DSZ64( , 0x79e) 

U4e28: tmp9:= AND_DSZ32(0x00000500, tmp10) 
U4e29: tmp9:= SUB_DSZ32(0x00000400, tmp9) 
U4e2a: tmp8:= SELECTCC_DSZ32_CONDNZ(tmp9, tmp8) 

U4e2c: tmp0:= SUB_DSZ32(0x00000400, tmp10) 
U4e2d: tmp0:= SELECTCC_DSZ32_CONDNZ(tmp0, 0x00000001) 
U4e2e: tmp7:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U4e30: tmp10:= ZEROEXT_DSZ64(tmp3) 
U4e31: tmp0:= unk_206(tmp0) 
U4e32: tmp7:= AND_DSZ32(tmp0, tmp7) 

U4e34: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U7781) 
U4e35: SAVEUIP_REGOVR( , 0x01, U4e36, 0x9075) !m0 SEQW GOTO U3722
U4e36: tmp7:= ZEROEXT_DSZ32(0x0000374d) 

U4e38: tmp7:= unk_203(0x000057da, tmp7) 
U4e39: NOP 
U4e3a: UJMP( , tmp7) 

U4e3c: tmp7:= ADD_DSZ32(0x00000000, tmp7) 
U4e3d: tmp7:= CMOVCC_DSZ32_CONDNZ(tmp7, 0x00000001) 
U4e3e: tmp0:= BTS_DSZ32(0x00000000, 0x00000017) 

U4e40: tmp0:= MOVEMERGEFLGS_DSZ32(tmp0, tmp7) 
U4e41: tmp0:= unk_116( , tmp0) 
U4e42: tmp0:= unk_226(tmp7, tmp0) 

U4e44: unk_114( , tmp0) 
U4e45: tmp7:= CONCAT_DSZ32(tmp0, tmp7) 
U4e46: WRITEURAM(tmp7, 0x0087, 64) 

U4e48: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x00c4) !m2 
U4e49: tmp0:= AND_DSZ32(0x000000ff, tmp0) 
U4e4a: WRITEURAM(tmp0, 0x0042, 32) 

U4e4c: tmp0:= MOVEFROMCREG_DSZ64( , 0x230, 32) !m1 
U4e4d: WRITEURAM(tmp0, 0x0051, 32) 
U4e4e: tmp0:= SUB_DSZ32(0x00000001) 

U4e50: MOVETOCREG_DSZ64(tmp0, 0x281, 32) !m1 
U4e51: tmp0:= ZEROEXT_DSZ32(0xfeb00000) 
U4e52: MOVETOCREG_DSZ64(tmp0, 0x51b) 

U4e54: tmp3:= ZEROEXT_DSZ32(0x00000a1b) 
U4e55: MOVETOCREG_DSZ64(tmp3, 0x6c3) 
U4e56: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x46f0) !m2 

U4e58: WRITEURAM(tmp0, 0x0035, 64) 
U4e59: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x46f8) !m2 
U4e5a: WRITEURAM(tmp1, 0x0077, 64) 

U4e5c: tmp2:= BT_DSZ64(tmp0, 0x00000009) 
U4e5d: tmp3:= SELECTCC_DSZ32_CONDB(tmp2, 0x00000010) 
U4e5e: tmp2:= BT_DSZ64(tmp0, 0x0000002a) 

U4e60: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00000020) 
U4e61: tmp3:= OR_DSZ32(tmp2, tmp3) 
U4e62: tmp2:= BT_DSZ64(tmp0, 0x00000025) 

U4e64: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000080) 
U4e65: tmp3:= OR_DSZ32(tmp2, tmp3) 
U4e66: tmp2:= BT_DSZ64(tmp0, 0x0000003c) 

U4e68: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000100) 
U4e69: tmp3:= OR_DSZ32(tmp2, tmp3) 
U4e6a: tmp2:= BT_DSZ64(tmp0, 0x00000008) 

U4e6c: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00000200) 
U4e6d: tmp3:= OR_DSZ32(tmp2, tmp3) 
U4e6e: tmp2:= BT_DSZ64(tmp1, 0x0000002b) 

U4e70: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000040) 
U4e71: tmp3:= OR_DSZ32(tmp2, tmp3) 
U4e72: tmp2:= MOVEFROMCREG_DSZ64( , 0x402) 

U4e74: MOVETOCREG_OR_DSZ64(tmp2, 0x402, tmp3) 
U4e75: tmp3:= SHR_DSZ64(tmp1, 0x0000000a) 
U4e76: tmp3:= AND_DSZ64(0x000c0000, tmp3) 

U4e78: tmp2:= SHL_DSZ64(tmp1, 0x0000000f) 
U4e79: tmp2:= AND_DSZ64(0x60000000, tmp2) 
U4e7a: tmp2:= OR_DSZ64(tmp2, tmp3) 

U4e7c: tmp4:= MOVEFROMCREG_DSZ64( , 0x104) 
U4e7d: tmp4:= BTS_DSZ64(tmp4, 0x0000002f) 
U4e7e: MOVETOCREG_OR_DSZ64(tmp2, 0x104, tmp4) 

U4e80: tmp3:= SHR_DSZ32(tmp3, 0x00000012) 
do_vmexit:
U4e81: tmp2:= SUB_DSZ32(0x00000003, tmp3) 
do_vmexit_ovr_enter_rip:
U4e82: tmp2:= MOVEMERGEFLGS_DSZ32(0x00000007, tmp2) 

U4e84: tmp3:= SHL_DSZ32(tmp3, 0x00000002) 
U4e85: tmp3:= CMOVCC_DSZ32_CONDZ(tmp2, tmp3) 
U4e86: tmp2:= SHL_DSZ32(0xffffffffffffffff, tmp3) 

U4e88: tmp2:= CONCAT_DSZ32(tmp2, 0x00000fff) 
U4e89: WRITEURAM(tmp2, 0x0010, 64) 
U4e8a: tmp0:= AND_DSZ32(0x00040000, tmp0) 

U4e8c: MOVETOCREG_SHR_DSZ64(tmp0, 0x0000000b, 0x007) !m0 
U4e8d: tmp2:= BT_DSZ64(tmp1, 0x00000013) 
U4e8e: tmp2:= SELECTCC_DSZ64_CONDNB(tmp2, 0x00000003) 

U4e90: tmp0:= SHR_DSZ64(tmp1, 0x00000006) 
U4e91: tmp0:= AND_DSZ64(0x00001000, tmp0) 
U4e92: tmp0:= OR_DSZ64(tmp2, tmp0) 

U4e94: tmp2:= MOVEFROMCREG_DSZ64( , 0x701) 
U4e95: tmp2:= OR_DSZ64(tmp0, tmp2) 
U4e96: MOVETOCREG_BTS_DSZ64(tmp2, 0x00000019, 0x701) 

U4e98: tmp0:= MOVEFROMCREG_DSZ64( , 0x002) 
U4e99: MOVETOCREG_OR_DSZ64(tmp0, 0x00000008, 0x002) 
U4e9a: tmp14:= ZEROEXT_DSZ16(0x00004ea1) 

U4e9c: tmp2:= AND_DSZ64(0x00000200, tmp8) 
U4e9d: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2b5d) 
U4e9e: rax:= ZEROEXT_DSZ32() 

U4ea0: tmp1:= MOVEFROMCREG_DSZ64( , 0x38e, 32) !m1 
U4ea1: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U4ea4
U4ea2: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x38e) !m1 

U4ea4: tmp11:= ZEROEXT_DSZ32(0x00000006) 
U4ea5: WRITEURAM(tmp11, 0x0073, 32) !m2 
U4ea6: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000001f, U4ea8) !m0 SEQW GOTO U20d4

U4ea8: tmp0:= ZEROEXT_DSZ32(0x00000006) 
U4ea9: MOVETOCREG_BTS_DSZ64(tmp0, 0x0000000b, 0x57f) !m0 SEQW GOTO U20d6
U4eaa: tmp3:= ZEROEXT_DSZ32(0x00000001) 

U4eac: tmp14:= ZEROEXT_DSZ32(0x0000194e) 
U4ead: tmp1:= READURAM( , 0x0053, 64) !m2 
U4eae: tmp1:= BT_DSZ64(tmp1, 0x00000002) 

U4eb0: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, tmp14) 
U4eb1: tmp0:= SHL_DSZ32(tmp3, 0x0000000f) 
U4eb2: tmp1:= BTR_DSZ32(tmp1, 0x0000000f) 

U4eb4: tmp1:= OR_DSZ32(tmp0, tmp1) 
U4eb5: WRITEURAM(tmp1, 0x0053, 32) 
U4eb6: tmp0:= SHL_DSZ32(tmp3, 0x00000008) 

U4eb8: tmp0:= OR_DSZ32(0x00000014, tmp0) 
U4eb9: SAVEUIP_REGOVR(0x01, U4eba, 0x0010) !m0 SEQW GOTO U5e06
U4eba: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 

U4ebc: tmp0:= OR_DSZ32(tmp0) 
U4ebd: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, tmp14) 
U4ebe: tmp0:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 

U4ec0: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000005, U0654) 
U4ec1: SYNCFULL-> WRMSLOOPCTRFBR(0x00000080) 
U4ec2: NOP SEQW GOTO U4eb6

U4ec4: tmp2:= ZEROEXT_DSZ32(0x00000004) 
U4ec5: MOVETOCREG_DSZ64(tmp2, 0x29e, 32) !m1 
U4ec6: tmp4:= READURAM( , 0x0048, 64) 

U4ec8: LFNCEMARK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U3eba) !m1,m2 
U4ec9: TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U4ece
U4eca: tmp2:= READURAM( , 0x0085, 64) 

U4ecc: tmp4:= READURAM( , 0x0086, 64) 
U4ecd: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x000000a0, tmp2) 
U4ece: WRITEURAM( , 0x00000000, 0x0085, 64) !m2 

U4ed0: WRITEURAM( , 0x00000000, 0x0086, 64) !m2 
U4ed1: tmp4:= READURAM( , 0x0057, 64) 
U4ed2: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000378, tmp4) 

U4ed4: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000037c, tmp4) 
U4ed5: tmp2:= CONCAT_DSZ32(tmp4, tmp2) 
U4ed6: LFNCEWAIT-> WRITEURAM(tmp2, 0x002f, 64) 

U4ed8: tmp2:= MOVE_DSZ32(0x00000001) 
U4ed9: LFNCEMARK-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp12, tmp2) 
U4eda: SAVEUIP_REGOVR(0x01, U4edc, 0x000f) !m0 SEQW GOTO U02d2

U4edc: SAVEUIP( , 0x01, U4ee4) !m0 
U4edd: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U04ac
U4ede: NOP 

U4ee0: ROVR<- tmm7:= unk_72f(tmm4) SEQW SAVEUIP0 U4ee1SEQW GOTO U2ddd
U4ee1: tmp0:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00000007) 
U4ee2: tmp0:= OR_DSZ32(0x00000001, tmp0) 

U4ee4: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U4ef0
U4ee5: WRITEURAM(tmp12, 0x0055, 64) !m2 
U4ee6: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001dc, tmp12) 

U4ee8: LFNCEWAIT-> WRITEURAM(tmp15, 0x0071, 32) SEQW SAVEUIP0 U4ee9SEQW GOTO U6332
U4ee9: tmp15:= READURAM( , 0x001f, 64) 
U4eea: tmp15:= SELECTCC_DSZ32_CONDS(tmp12, tmp15) 

U4eec: LFNCEMARK-> WRITEURAM(tmp15, 0x001f, 32) SEQW SAVEUIP1 U4eedSEQW GOTO U04ac
U4eed: NOP 
U4eee: NOP 

U4ef0: SYNCWAIT-> tmp14:= READURAM( , 0x0043, 64) 
U4ef1: tmp15:= MOVEMERGEFLGS_DSZ64(tmp10, tmp12) 
U4ef2: tmp10:= NOTAND_DSZ64(0x00000600, tmp10) 

U4ef4: tmp13:= SHL_DSZ32(tmp8, 0x00000007) 
U4ef5: tmp13:= CMOVCC_DSZ64_CONDNZ(tmp15, tmp13) 
U4ef6: tmp13:= AND_DSZ64(0x00000200, tmp13) 

U4ef8: tmp10:= OR_DSZ64(tmp13, tmp10) 
U4ef9: tmp10:= BTR_DSZ64(tmp10, 0x00000032) 
U4efa: tmp14:= BT_DSZ64(tmp14, 0x0000003c) 

U4efc: tmp4:= SELECTCC_DSZ32_CONDNB(tmp14, 0x00000028) 
U4efd: tmp4:= ADD_DSZ32(0x00000007, tmp4) 
U4efe: tmp13:= AND_DSZ32(0x00000008, tmp8) 

U4f00: tmp13:= SHL_DSZ64(tmp13, tmp4) 
U4f01: LFNCEWAIT-> tmp10:= MOVETOCREG_OR_DSZ64(tmp10, 0x2c4, tmp13) !m1 
U4f02: MOVETOCREG_SHR_DSZ64(tmp10, 0x00000020, 0x008) 

U4f04: WRITEURAM(tmp10, 0x0070, 64) 
U4f05: tmp15:= READURAM( , 0x0078, 64) 
U4f06: MOVETOCREG_DSZ64(tmp15, 0x01d) 

U4f08: LFNCEWAIT-> unk_dff(tmp9) 
U4f09: MOVETOCREG_DSZ64(tmp2, 0x63a) 
U4f0a: MOVETOCREG_DSZ64(tmp0, 0x63e) 

U4f0c: SAVEUIP_REGOVR(0x01, U4f0d, 0x0f1e) !m0 SEQW GOTO U5f20
U4f0d: tmp15:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U4f0e: LFNCEMARK-> MOVETOCREG_DSZ64(tmp15, 0x78e) 

U4f10: tmp6:= ADD_DSZ64(tmp15, tmp3) 
U4f11: tmp15:= unk_205( , 0xffffffffffffffff) 
U4f12: tmp15:= CONCAT_DSZ32(tmp15) 

U4f14: rsp:= NOTAND_DSZ64(tmp15, rsp) 
U4f15: tmp6:= NOTAND_DSZ64(tmp15, tmp6) 
U4f16: MOVETOCREG_DSZ64(tmp6, 0x067) 

U4f18: SAVEUIP_REGOVR(0x01, U4f19, 0x000f) !m0 SEQW GOTO U02da
U4f19: NOP 
U4f1a: NOP 

U4f1c: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U4f25
U4f1d: tmp0:= BT_DSZ64(tmp1, 0x0000001b) 
U4f1e: LFNCEWAIT-> tmp15:= READURAM( , 0x001f, 64) 

U4f20: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000008) 
U4f21: tmp0:= SHL_DSZ64(tmp0, 0x00000020) 
U4f22: tmp15:= OR_DSZ64(tmp0, tmp15) 

U4f24: LFNCEMARK-> WRITEURAM(tmp15, 0x011f, 64) 
U4f25: AETTRACE( , tmp6, 0x0d) 
U4f26: NOP 

U4f28: LFNCEWAIT-> TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U4f41
U4f29: tmp14:= READURAM( , 0x0038, 64) 
U4f2a: tmp15:= SHR_DSZ32(tmp14, 0x00000009) 

U4f2c: tmp15:= AND_DSZ32(0x00000006, tmp15) 
U4f2d: tmp14:= SHL_DSZ32(tmp14, 0x00000003) 
U4f2e: tmp14:= AND_DSZ32(0x00000038, tmp14) 

U4f30: tmp14:= OR_DSZ32(tmp15, tmp14) 
U4f31: mm1:= unk_72f(tmm0) 
U4f32: tmp13:= AND_DSZ32(0x00000001, tmp1) 

U4f34: tmp13:= SHL_DSZ32(tmp13, 0x00000001) 
U4f35: tmp15:= AND_DSZ32(0x00000004, tmp8) 
U4f36: tmp15:= SHR_DSZ32(tmp15, 0x00000002) 

U4f38: tmp13:= OR_DSZ32(tmp15, tmp13) 
U4f39: tmp13:= CMOVCC_DSZ32_CONDNZ(tmp13, 0x00000004) 
U4f3a: tmp1:= AND_DSZ32(0x00000020, tmp1) 

U4f3c: tmp13:= SHL_DSZ32(0x00000001, tmp13) 
U4f3d: tmp13:= OR_DSZ32(tmp1, tmp13) 
U4f3e: tmp14:= AND_DSZ32(tmp13, tmp14) 

U4f40: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U5719) 
U4f41: ROVR<- FETCHFROMEIP0_ASZ64( , tmp6) SEQW SAVEUIP1 U4f42SEQW GOTO U0ecd
U4f42: tmp2:= READURAM( , 0x004a, 64) 

U4f44: tmp14:= MOVEINSERTFLGS_DSZ64(tmp8, 0x00000020) 
U4f45: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U4dd4
U4f46: tmp13:= ZEROEXT_DSZ32(0x000039c2) 

U4f48: tmp6:= TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U60d6
U4f49: NOP 
U4f4a: NOP 

U4f4c: tmp9:= BT_DSZ32(tmp7, 0x0000000e) SEQW SAVEUIP1 U4f4dSEQW GOTO U39c1
U4f4d: NOP 
U4f4e: NOP 

U4f50: MSSTOP-> unk_25e( , tmp14) SEQW GOTO U2792
U4f51: tmp2:= NOTAND_DSZ32(0x00000fff, tmp8) 
U4f52: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2711) 

U4f54: tmp10:= SELECTCC_DSZ32_CONDB(tmp8, 0x00001000) 
U4f55: tmp10:= OR_DSZ32(tmp10, tmp8) 
U4f56: PORTOUT_DSZ32_ASZ16_SC1(0x0070,  , tmp10) !m2 

U4f58: SYNCFULL-> tmp10:= PORTIN_DSZ32_ASZ16_SC1(0x0074) !m2 
U4f59: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp8, 0x00000080) 
U4f5a: tmp1:= OR_DSZ32(0x00000040, tmp1) SEQW GOTO U0ae6

U4f5c: LFNCEWAIT-> NOP 
U4f5d: tmp1:= ZEROEXT_DSZ32() 
U4f5e: tmp10:= ZEROEXT_DSZ32() 

U4f60: tmp5:= ZEROEXT_DSZ32(0x00004f62) 
U4f61: tmp8:= TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U04cc
U4f62: LFNCEWTMRK-> MOVE_DSZ32() 

U4f64: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U4f65: tmp9:= READURAM( , 0x0057, 64) 
U4f66: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp9) 

U4f68: tmp9:= ZEROEXT_DSZ64(tmp9, tmp8) 
U4f69: tmp14:= AND_DSZ32(0x00000004, tmp8) 
U4f6a: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000050, tmp9) 

U4f6c: tmp15:= ADD_DSZ32(0x00000000, tmp15) 
U4f6d: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000040) 
U4f6e: tmp14:= OR_DSZ32(tmp15, tmp14) 

U4f70: tmp15:= SHR_DSZ32(tmp8, 0x00000011) 
U4f71: tmp15:= AND_DSZ32(0x0000002a, tmp15) 
U4f72: tmp14:= OR_DSZ32(tmp15, tmp14) 

U4f74: tmp15:= SHR_DSZ32(tmp0, 0x0000000b) 
U4f75: tmp15:= NOTAND_DSZ32(tmp15, 0x00000080) 
U4f76: LFNCEWAIT-> tmp14:= OR_DSZ32(tmp15, tmp14) 

U4f78: SYNCMARK-> UFLOWCTRL( , tmp14, USTATE) 
U4f79: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000f8, tmp9) 
U4f7a: tmp5:= NOTAND_DSZ32(0x00000200, tmp5) 

U4f7c: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U4f7e
U4f7d: tmp5:= OR_DSZ32(0x00000200, tmp5) 
U4f7e: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000f8, tmp9, tmp5) 

U4f80: tmp12:= WRMSLOOPCTRFBR(0x00000005) 
U4f81: tmp11:= ADD_DSZ64(0x00000108, tmp9) 
U4f82: tmp5:= MOVEFROMCREG_DSZ64( , 0x540) 

U4f84: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000328, tmp9, tmp5) 
U4f85: tmp5:= MOVEFROMCREG_DSZ64( , 0x541) 
U4f86: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000330, tmp9, tmp5) 

U4f88: tmp5:= MOVEFROMCREG_DSZ64( , 0x542) 
U4f89: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000338, tmp9, tmp5) 
U4f8a: tmp5:= MOVEFROMCREG_DSZ64( , 0x543) 

U4f8c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000340, tmp9, tmp5) 
U4f8d: tmp5:= RDSEGFLD(UNK_SEG_1b, SEL+FLGS+LIM) 
U4f8e: unk_f6d(tmp11, tmp12, tmp5) 

U4f90: tmp5:= RDSEGFLD(UNK_SEG_1b, BASE) 
U4f91: unk_f6d(tmp11, tmp12, tmp5) 
U4f92: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U4f8d

U4f94: tmp5:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U4f95: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000090, tmp9, tmp5) 
U4f96: tmp5:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U4f98: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000b0, tmp9, tmp5) 
U4f99: tmp5:= MOVEFROMCREG_DSZ64( , 0x529) 
U4f9a: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000a8, tmp9, tmp5) 

U4f9c: tmp5:= RDSEGFLD(GDT, BASE) 
U4f9d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000148, tmp9, tmp5) 
U4f9e: tmp5:= RDSEGFLD(GDT, LIMIT) 

U4fa0: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000198, tmp9, tmp5) 
U4fa1: tmp5:= RDSEGFLD(IDT, BASE) 
U4fa2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000150, tmp9, tmp5) 

U4fa4: tmp5:= RDSEGFLD(IDT, LIMIT) 
U4fa5: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001a0, tmp9, tmp5) 
U4fa6: tmp5:= RDSEGFLD(LDT, SEL+FLGS+LIM) 

U4fa8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000188, tmp9, tmp5) 
U4fa9: tmp5:= RDSEGFLD(LDT, BASE) 
U4faa: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000138, tmp9, tmp5) 

U4fac: tmp5:= RDSEGFLD(TSS, SEL+FLGS+LIM) 
U4fad: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000190, tmp9, tmp5) 
U4fae: tmp5:= RDSEGFLD(TSS, BASE) 

U4fb0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000140, tmp9, tmp5) 
U4fb1: tmp5:= READURAM( , 0x0075, 64) 
U4fb2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002d8, tmp9, tmp5) 

U4fb4: tmp5:= READURAM( , 0x0076, 64) 
U4fb5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002e0, tmp9, tmp5) 
U4fb6: tmp5:= READURAM( , 0x0074, 64) 

U4fb8: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000019c, tmp9, tmp5) 
U4fb9: ROVR<- NOP SEQW SAVEUIP1 U4fbaSEQW GOTO U741c
U4fba: tmp15:= ZEROEXT_DSZ32(0x000001f5) 

U4fbc: MOVETOCREG_DSZ64(tmp15, 0x00b) 
U4fbd: AETTRACE( , tmp2, 0x0c) 
U4fbe: tmp2:= READURAM( , 0x0043, 64) SEQW SAVEUIP1 U4fc0SEQW GOTO U6b20

U4fc0: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001cc, tmp9, tmp1) 
U4fc1: tmp1:= AND_DSZ32(0xfff101ff, tmp0) 
U4fc2: tmp1:= NOTAND_DSZ32(0x00300000, tmp1) 

U4fc4: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000023c, tmp9, tmp1) 
U4fc5: WRITEURAM(tmp1, 0x0005, 32) 
U4fc6: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U4fca

U4fc8: tmp2:= MOVEFROMCREG_DSZ64( , 0x577) 
U4fc9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000310, tmp9, tmp2) 
U4fca: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U4fce

U4fcc: tmp2:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U4fcd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000318, tmp9, tmp2) 
U4fce: tmp2:= MOVEFROMCREG_DSZ64( , 0x701) 

U4fd0: tmp1:= RDSEGFLD(UNK_SEG_10, BASE) 
U4fd1: tmp2:= SHR_DSZ32(tmp2, 0x0000001e) 
U4fd2: tmp1:= OR_DSZ64(tmp2, tmp1) 

U4fd4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000088, tmp9, tmp1) 
U4fd5: TESTUSTATE( , UCODE, 0x0080) ? SEQW GOTO U4fde
U4fd6: tmp2:= MOVEFROMCREG_DSZ64( , 0x2f7, 32) !m1 

enter_probe_mode:
U4fd8: tmp1:= READURAM( , 0x0087, 64) 
U4fd9: tmp1:= ZEROEXT_DSZ32(tmp1) 
U4fda: tmp2:= IMUL64L_DSZ64(tmp1, tmp2) 

U4fdc: tmp2:= SHR_DSZ64(tmp2, 0x00000007) 
U4fdd: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000360, tmp9, tmp2) 
U4fde: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U4fec

U4fe0: tmp2:= READURAM( , 0x0011, 64) 
U4fe1: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004e0, mode=0x01, tmp2) 
U4fe2: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000054, tmp9) 

FUN_ucode_0004fe4:
U4fe4: tmp15:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000001) 
U4fe5: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U4fe8
U4fe6: tmp15:= OR_DSZ32(0x00000002, tmp15) 

U4fe8: tmp15:= CONCAT_DSZ32(tmp15, tmp8) 
U4fe9: tmp1:= AND_DSZ64(tmp2, tmp15) 
U4fea: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U44e9) 

U4fec: LFNCEMARK-> TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U50c4
U4fed: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000050, tmp9) 
U4fee: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000028, tmp9) 

U4ff0: MOVETOCREG_DSZ64(0x00000013, 0x000) !m2 
U4ff1: tmp10:= ZEROEXT_DSZ32(0x0000616a) 
U4ff2: tmp14:= ZEROEXT_DSZ32(0x000050c0) 

U4ff4: LFNCEWAIT-> SAVEUIP( , 0x00, U441d) SEQW GOTO U5a05
U4ff5: tmp2:= ZEROEXT_DSZ8(tmp2) 
U4ff6: tmp1:= CONCAT_DSZ8(0x00000000, tmp2) 

U4ff8: SAVEUIP_REGOVR( , 0x01, U4ff9, 0xc935) !m0 SEQW GOTO U39e5
U4ff9: tmp9:= ZEROEXT_DSZ32(tmp10) 
U4ffa: tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 

U4ffc: MOVETOCREG_DSZ64(0x00000009, 0x000) 
U4ffd: MOVETOCREG_DSZ64( , 0x00000000, 0x065) 
U4ffe: tmp12:= ZEROEXT_DSZ8() SEQW GOTO U0182

U5000: MOVETOCREG_DSZ64( , 0x00000000, 0x6c0) 
U5001: tmp0:= MOVEFROMCREG_DSZ64( , 0x074) 
U5002: tmp0:= NOTAND_DSZ64(0x0000001e, tmp0) 

U5004: MOVETOCREG_OR_DSZ64(tmp0, 0x00000010, 0x074) !m2 
U5005: tmp0:= ZEROEXT_DSZ32(0x00005555) 
U5006: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x06a) 

U5008: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x00e) 
U5009: MOVETOCREG_DSZ64( , 0x00000000, 0x00f) 
U500a: MOVETOCREG_DSZ64( , 0x00000000, 0x00a) 

U500c: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x00d) 
U500d: tmp0:= ZEROEXT_DSZ32(0x00030000) 
U500e: WRITEURAM(tmp0, 0x0034, 32) 

U5010: WRITEURAM(tmp0, 0x0071, 32) 
U5011: MOVETOCREG_DSZ64( , 0x00000000, 0x7f1) 
U5012: tmp0:= OR_DSZ32(0x00040001) 

U5014: WRITEURAM(tmp0, 0x0041, 64) 
U5015: tmp0:= ZEROEXT_DSZ32(0x00000040) 
U5016: WRITEURAM(tmp0, 0x0006, 32) 

U5018: tmp0:= ZEROEXT_DSZ32(0x00020200) 
U5019: WRITEURAM(tmp0, 0x0084, 32) 
U501a: tmp1:= BTS_DSZ64(0x00000000, 0x00000038) 

U501c: WRITEURAM(tmp1, 0x005b, 64) 
U501d: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U5026
U501e: tmp0:= ZEROEXT_DSZ32(0x00000020) 

U5020: WRMSLOOPCTRFBR( , 0x0000003f) 
U5021: MOVETOCREG_DSZ64( , 0x00000000, tmp0) 
U5022: tmp0:= ADD_DSZ32(0x00000001, tmp0) 

U5024: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U5021
U5025: MOVETOCREG_DSZ64( , 0x00000000, 0x009) 
U5026: tmp0:= ZEROEXT_DSZ32(0x00000810) 

U5028: tmp0:= MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1 
U5029: WRITEURAM(tmp0, 0x0070, 64) 
U502a: MOVETOCREG_DSZ64( , 0x00000000, 0x2da, 32) !m1 

U502c: MOVETOCREG_DSZ64( , 0x00000000, 0x01a) 
U502d: MOVETOCREG_DSZ64( , 0x00000000, 0x065) 
U502e: MOVETOCREG_DSZ64( , 0x00000000, 0x006) 

U5030: unk_13f() !m2 
U5031: MOVETOCREG_DSZ64( , 0x00000000, 0x7fe) 
U5032: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x7ff) 

U5034: MOVETOCREG_DSZ64( , 0x00000000, 0x7f5) 
U5035: LFNCEWAIT-> tmp0:= ZEROEXT_DSZ32(0x00000093) 
U5036: tmp0:= SHL_DSZ32(tmp0, 0x00000010) 

U5038: tmp0:= CONCAT_DSZ32(0x0000ffff, tmp0) 
U5039: WRSEGFLD(0x00000000, SS_USERM, BASE) 
U503a: WRSEGFLD(tmp0, SS_USERM, SEL+FLGS+LIM) 

U503c: tmp1:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U503d: tmp1:= BT_DSZ32(tmp1, 0x00000007) 
U503e: tmp1:= MOVEMERGEFLGS_DSZ64(0x3fff0000, tmp1) 

U5040: tmp1:= CMOVCC_DSZ32_CONDB(tmp1, 0xffff0000) 
U5041: LFNCEMARK-> WRSEGFLD(tmp0, UNK_SEG_09, SEL+FLGS+LIM) 
U5042: WRSEGFLD(0x00000000, GS, BASE) 

U5044: WRSEGFLD(tmp0, GS, SEL+FLGS+LIM) 
U5045: tmp2:= ZEROEXT_DSZ32(0x0000f000) 
U5046: LFNCEWTMRK-> WRSEGFLD(tmp2, UNK_SEG_09, SEL) 

U5048: WRSEGFLD(0x00000000, FS, BASE) 
U5049: WRSEGFLD(tmp0, FS, SEL+FLGS+LIM) 
U504a: WRSEGFLD(0x00000000, ES, BASE) 

U504c: WRSEGFLD(tmp0, ES, SEL+FLGS+LIM) 
U504d: WRSEGFLD(0x00000000, DS, BASE) 
U504e: WRSEGFLD(tmp0, DS, SEL+FLGS+LIM) 

U5050: LFNCEWTMRK-> WRSEGFLD(tmp1, UNK_SEG_09, BASE) 
U5051: WRSEGFLD(0x00000000, SS, BASE) 
U5052: WRSEGFLD(tmp0, SS, SEL+FLGS+LIM) 

U5054: LFNCEWAIT-> WRSEGFLD(tmp1, CS, BASE) 
U5055: tmp2:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U5056: WRSEGFLD(tmp2, CS, SEL+FLGS+LIM) 

U5058: WRSEGFLD(0x00000000, DS_16bit, BASE) 
U5059: WRSEGFLD(tmp0, DS_16bit, SEL+FLGS+LIM) 
U505a: tmp0:= ZEROEXT_DSZ32(0x00000082) 

U505c: tmp0:= SHL_DSZ32(tmp0, 0x00000010) 
U505d: tmp0:= CONCAT_DSZ32(0x0000ffff, tmp0) 
U505e: WRSEGFLD(0x00000000, UNK_SEG_04, BASE) 

U5060: WRSEGFLD(0x00000000, TSS, BASE) 
U5061: WRSEGFLD(0x00000000, GDT, BASE) 
U5062: WRSEGFLD(0x00000000, IDT, BASE) 

U5064: WRSEGFLD(0x00000000, LDT, BASE) 
U5065: WRSEGFLD(tmp0, UNK_SEG_04, SEL+FLGS+LIM) 
U5066: WRSEGFLD(tmp0, GDT, SEL+FLGS+LIM) 

U5068: WRSEGFLD(tmp0, IDT, SEL+FLGS+LIM) 
U5069: WRSEGFLD(tmp0, LDT, SEL+FLGS+LIM) 
U506a: tmp2:= CONCAT_DSZ16(0x00000009) 

U506c: tmp2:= OR_DSZ64(tmp2, tmp0) 
U506d: WRSEGFLD(tmp2, TSS, SEL+FLGS+LIM) 
U506e: MOVETOCREG_DSZ64( , 0x00000000, 0x79e) 

U5070: MOVETOCREG_DSZ64( , 0x00000000, 0x73c) 
U5071: WRITEURAM( , 0x00000000, 0x0002, 64) 
U5072: tmp0:= RDSEGFLD(DS_32bit, SEL+FLGS+LIM) 

U5074: WRSEGFLD(tmp0) 
U5075: WRSEGFLD(tmp0) 
U5076: WRSEGFLD(0x00000000) 

U5078: WRSEGFLD(0x00000000) 
U5079: tmp0:= SUB_DSZ16(0x00000001) 
U507a: MOVETOCREG_DSZ64(tmp1, 0x78e) 

U507c: MOVETOCREG_DSZ64(tmp0, 0x410) 
U507d: tmp0:= ADD_DSZ32(0x00000001, tmp0) 
U507e: MOVETOCREG_DSZ64(tmp0, 0x700) 

U5080: tmp0:= READURAM( , 0x0023, 64) 
U5081: tmp0:= NOTAND_DSZ32(0x00001c00, tmp0) 
U5082: WRITEURAM(tmp0, 0x0023, 32) 

U5084: tmp0:= MOVETOCREG_BTS_DSZ64( , 0x0000003f, 0x7a8) !m0 
U5085: WRITEURAM( , 0x00000000, 0x007b, 64) 
U5086: MOVETOCREG_DSZ64(tmp0, 0x7aa) 

U5088: WRITEURAM( , 0x00000000, 0x007c, 64) 
U5089: MOVETOCREG_DSZ64(tmp0, 0x7ac) 
U508a: WRITEURAM( , 0x00000000, 0x007d, 64) 

U508c: MOVETOCREG_DSZ64(tmp0, 0x7ae) 
U508d: WRITEURAM( , 0x00000000, 0x007e, 64) 
U508e: MOVETOCREG_DSZ64( , 0x00000000, 0x529) 

U5090: WRITEURAM( , 0x00000000, 0x001e, 64) 
U5091: MOVETOCREG_DSZ64( , 0x00000000, 0x7c5) 
U5092: tmp0:= ZEROEXT_DSZ32(0xffff0ff0) 

U5094: WRITEURAM(tmp0, 0x003d, 64) 
U5095: SYNCFULL-> MOVETOCREG_BTS_DSZ64( , 0x0000000a, 0x7f8) !m0 
U5096: rbx:= ZEROEXT_DSZ32() 

U5098: rcx:= ZEROEXT_DSZ32() 
U5099: rdi:= ZEROEXT_DSZ32() 
U509a: rsi:= ZEROEXT_DSZ32() 

U509c: rsp:= ZEROEXT_DSZ32() 
U509d: rbp:= ZEROEXT_DSZ32() 
U509e: r8:= ZEROEXT_DSZ32() 

U50a0: r9:= ZEROEXT_DSZ32() 
U50a1: r10:= ZEROEXT_DSZ32() 
U50a2: r11:= ZEROEXT_DSZ32() 

U50a4: r12:= ZEROEXT_DSZ32() 
U50a5: r13:= ZEROEXT_DSZ32() 
U50a6: r14:= ZEROEXT_DSZ32() 

U50a8: NOP 
U50a9: NOP 
U50aa: ROVR<- r15:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U50acSEQW GOTO U0be9

U50ac: rdx:= ZEROEXT_DSZ32(tmp0) 
U50ad: MOVETOCREG_DSZ64(rax, 0x2c1, 32) !m1 
U50ae: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 

U50b0: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000013, 0x2cd) !m0,m1 
U50b1: SYNCFULL-> UJMP( , tmp14) 
U50b2: ROVR<- tmp0:= CONCAT_DSZ16(0x00000005) SEQW SAVEUIP0 U50b4SEQW GOTO U0d54

U50b4: NOP SEQW GOTO U3b59
U50b5: tmp0:= OR_DSZ16(0x00008080, tmp8) 
U50b6: MOVETOCREG_DSZ64(tmp0, 0x48c) 

U50b8: tmp5:= ZEROEXT_DSZ32(0x0000c001) 
U50b9: mm0:= unk_7c2(mm5, 0x00000000) 
U50ba: mm0:= unk_69d( , 0x00000000) 

U50bc: mm6:= unk_7ea(0x00000000) 
U50bd: tmp6:= ADD_DSZ32(0x00006000, tmp6) 
U50be: mm0:= unk_7c2(mm6, 0x00000000) SEQW GOTO U21fe

U50c0: tmp9:= READURAM( , 0x0057, 64) 
U50c1: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U50c2: LFNCEMARK-> tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp9) 

calc_sha256_start:
U50c4: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U50c5: TESTUSTATE( , UCODE, 0x0200) ? SEQW GOTO U50d1
U50c6: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000358, tmp9) 

U50c8: tmp15:= ZEROEXT_DSZ32(0x0000000f) 
U50c9: tmp15:= CONCAT_DSZ32(0x00000007, tmp15) 
U50ca: tmp1:= AND_DSZ64(tmp15, tmp1) 

U50cc: tmp15:= AND_DSZ32(0x00001000, tmp8) 
U50cd: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x0000000f) 
U50ce: tmp15:= ADD_DSZ32(0x00002200, tmp15) 

U50d0: MOVETOCREG_DSZ64(tmp1, tmp15) !m1 
U50d1: tmp1:= SHR_DSZ32(tmp8, 0x00000013) 
U50d2: tmp1:= AND_DSZ32(0x00000011, tmp1) 

U50d4: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000054, tmp9) 
U50d5: tmp15:= ADD_DSZ32(0x00000000, tmp15) 
U50d6: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000040) 

U50d8: tmp1:= OR_DSZ32(tmp15, tmp1) 
U50d9: LFNCEMARK-> tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000c0, tmp9) 
calc_sha256_update:
U50da: tmp15:= AND_DSZ32(0x00000020, tmp4) 

U50dc: tmp1:= OR_DSZ32(tmp15, tmp1) 
U50dd: tmp15:= SHR_DSZ32(tmp8, 0x00000006) 
U50de: tmp15:= NOTAND_DSZ32(tmp15, 0x00000008) 

U50e0: tmp1:= OR_DSZ32(tmp15, tmp1) 
U50e1: tmp13:= AND_DSZ32(0x00000200, tmp8) 
U50e2: tmp15:= SHR_DSZ32(tmp0, 0x0000000b) 

U50e4: tmp15:= NOTAND_DSZ32(tmp15, 0x00000080) 
U50e5: tmp1:= OR_DSZ32(tmp15, tmp1) 
U50e6: tmp15:= BT_DSZ64(tmp2, 0x0000003a) 

U50e8: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00000004) 
U50e9: tmp1:= OR_DSZ32(tmp15, tmp1) 
U50ea: tmp15:= AND_DSZ32(0x00004000, tmp2) 

U50ec: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000002) 
U50ed: ROVR<- tmp1:= OR_DSZ32(tmp15, tmp1) SEQW SAVEUIP1 U50eeSEQW GOTO U5c34
U50ee: SYNCMARK-> UFLOWCTRL( , tmp1, USTATE) 

U50f0: tmp7:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U50f1: tmp1:= unk_163(0x00000000) 
U50f2: MOVETOCREG_SHR_DSZ64(tmp1, 0x00000008, 0x79d) 

U50f4: WRITEURAM( , 0x00000000, 0x0079, 64) 
U50f5: MOVETOCREG_DSZ64( , 0x00000000, 0x7fe) 
U50f6: tmp15:= AND_DSZ32(0x00200000, tmp8) 

U50f8: tmp7:= MOVEMERGEFLGS_DSZ32(tmp7, tmp15) 
U50f9: SAVEUIP( , 0x00, U2906) 
U50fa: ROVR<- unk_13f() !m2 SEQW SAVEUIP1 U50fcSEQW GOTO U2ddd

U50fc: tmp15:= BT_DSZ32(tmp0, 0x0000000e) 
U50fd: tmp8:= MOVEMERGEFLGS_DSZ32(tmp8, tmp15) 
U50fe: tmp8:= CMOVCC_DSZ64_CONDNB(tmp8, 0x00000002) 

U5100: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp15) 
U5101: tmp2:= CMOVCC_DSZ64_CONDNB(tmp2, 0x00000008) 
U5102: MOVETOCREG_DSZ64( , 0x00000000, 0x513) 

U5104: MOVETOCREG_DSZ64( , 0x00000000, 0x79e) 
U5105: MOVETOCREG_DSZ64( , 0x00000000, 0x51c) 
U5106: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 

U5108: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000350, tmp9) 
U5109: tmp1:= CMOVCC_DSZ32_CONDZ(tmp7, tmp1) 
U510a: tmp1:= AND_DSZ32(0x00000801, tmp1) 

U510c: tmp15:= CMOVCC_DSZ32_CONDZ(tmp13, 0x00000500) 
U510d: tmp1:= OR_DSZ32(tmp15, tmp1) 
U510e: SYNCWAIT-> TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U101e

U5110: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, 0x7ff) 
U5111: rsp:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000c8, tmp9) 
U5112: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U5124

U5114: tmp12:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000348, tmp9) 
U5115: tmp15:= ZEROEXT_DSZ32(0xf8f8f8f8) 
U5116: tmp15:= CONCAT_DSZ32(tmp15, tmp15) 

U5118: tmp15:= AND_DSZ64(tmp15, tmp12) 
U5119: tmp12:= SELECTCC_DSZ64_CONDNZ(tmp15, tmp12) 
U511a: tmp15:= ZEROEXT_DSZ32(0x04040404) 

U511c: tmp15:= CONCAT_DSZ32(tmp15, tmp15) 
U511d: tmp15:= NOTAND_DSZ64(tmp12, tmp15) 
U511e: tmp15:= SHR_DSZ64(tmp15, 0x00000001) 

U5120: tmp15:= AND_DSZ64(tmp12, tmp15) 
U5121: tmp12:= SELECTCC_DSZ64_CONDNZ(tmp15, tmp12) 
U5122: MOVETOCREG_DSZ64(tmp12, 0x577) 

U5124: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000d8, tmp9) 
U5125: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000b8, tmp9) 
U5126: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000a0, tmp9) 

U5128: tmp12:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001e2, tmp9) 
U5129: tmp12:= NOTAND_DSZ16(0x00000007, tmp12) 
U512a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp12, U616a) 

U512c: tmp12:= CONCAT_DSZ16(0x0000008b, tmp12) 
U512d: tmp12:= CONCAT_DSZ32(0x00000067, tmp12) 
U512e: WRSEGFLD(tmp12, TSS, SEL+FLGS+LIM) 

U5130: tmp12:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000220, tmp9) 
U5131: WRSEGFLD(tmp12, TSS, BASE) 
U5132: tmp12:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001b2, tmp9) 

U5134: tmp3:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001ba, tmp9) 
U5135: LFNCEMARK-> unk_dff(tmp8) 
U5136: tmp12:= NOTAND_DSZ16(0x00000007, tmp12) 

U5138: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp12, U616a) 
U5139: tmp15:= SHL_DSZ32(tmp13, 0x00000004) 
U513a: tmp15:= SUB_DSZ16(tmp15, 0x0000c09b) 

U513c: MOVETOCREG_DSZ64(tmp15, 0x7f5) 
U513d: tmp12:= CONCAT_DSZ16(tmp15, tmp12) 
U513e: tmp12:= CONCAT_DSZ32(0xffffffffffffffff, tmp12) 

U5140: WRSEGFLD(tmp12, UNK_SEG_09, FLGS) 
U5141: WRSEGFLD(0x00000000, UNK_SEG_09, BASE) 
U5142: tmp12:= SUB_DSZ32(0x00000001) 

U5144: MOVETOCREG_DSZ64( , 0x00000000, 0x78e) 
U5145: MOVETOCREG_DSZ64( , 0x00000000, 0x700) 
U5146: MOVETOCREG_DSZ64(tmp12, 0x410) 

U5148: tmp12:= NOTAND_DSZ16(0x00000007, tmp3) 
U5149: tmp15:= OR_DSZ16(tmp13, tmp12) 
U514a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U616a) 

U514c: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp12, 0x08000000) 
U514d: tmp12:= CONCAT_DSZ16(0x0000c093, tmp12) 
U514e: MOVETOCREG_SHR_DSZ64(tmp12, 0x00000010, 0x73c) 

U5150: tmp12:= OR_DSZ32(tmp15, tmp12) 
U5151: tmp12:= CONCAT_DSZ32(0xffffffffffffffff, tmp12) 
U5152: SYNCMARK-> WRSEGFLD(tmp12, SS_USERM, SEL+FLGS+LIM) 

U5154: tmp15:= READURAM( , 0x0010, 64) 
U5155: tmp15:= ZEROEXT_DSZ16( , tmp15) 
U5156: tmp7:= NOTAND_DSZ64(tmp15, tmp7) SEQW SAVEUIP1 U5158SEQW GOTO U7005

U5158: tmp1:= ZEROEXT_DSZ32(0x08000000) 
U5159: WRSEGFLD(tmp1, LDT, SEL+FLGS+LIM) 
U515a: MOVETOCREG_DSZ64( , 0x00000000, 0x51e) 

U515c: tmp1:= SUB_DSZ16(0x00000001) 
U515d: WRSEGFLD(tmp1, GDT, LIMIT) 
U515e: WRSEGFLD(tmp1, IDT, LIMIT) 

U5160: WRSEGFLD(0x00000000, ES, BASE) 
U5161: WRSEGFLD(0x00000000, SS_USERM, BASE) 
U5162: WRSEGFLD(0x00000000, DS, BASE) 

U5164: LFNCEWAIT-> tmp3:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001c2, tmp9) 
U5165: tmp9:= ZEROEXT_DSZ64(tmp9, tmp3) 
U5166: WRSEGFLD(0x00000000, CS, BASE) 

U5168: tmp2:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U5169: WRSEGFLD(tmp2, CS, SEL+FLGS+LIM) 
U516a: WRSEGFLD(0x00000000, SS, BASE) 

U516c: tmp2:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 
U516d: WRSEGFLD(tmp2, SS, SEL+FLGS+LIM) 
U516e: SYNCWAIT-> rsp:= ZEROEXT_DSZ64N(rsp) !m1 

U5170: tmp5:= ZEROEXT_DSZ64N(tmp5) !m1 
U5171: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U4b1c
U5172: SAVEUIP_REGOVR(0x01, U5174, 0x0721) !m0 

U5174: SAVEUIP( , 0x00, U18ad) 
U5175: SAVEUIP( , 0x01, U05e4) !m0 SEQW GOTO U5d54
U5176: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000f, U517a) !m0,m2 

U5178: tmm0:= unk_495(tmm0, tmm4) 
U5179: tmm0:= unk_53c( , tmm0) !m1 
U517a: tmp8:= RDSEGFLD(FS, BASE) 

U517c: WRSEGFLD(tmp8, UNK_SEG_04, BASE) 
U517d: tmp8:= RDSEGFLD(FS, SEL+FLGS+LIM) 
U517e: WRSEGFLD(tmp8, UNK_SEG_04, SEL+FLGS+LIM) 

U5180: WRSEGFLD(tmp4, FS, BASE) 
U5181: tmp8:= ZEROEXT_DSZ32(0x0000e0f3) 
U5182: tmp8:= SHL_DSZ32(tmp8, 0x00000010) 

U5184: tmp8:= CONCAT_DSZ32(0xffffffffffffffff, tmp8) 
U5185: LFNCEMARK-> WRSEGFLD(tmp8, FS, SEL+FLGS+LIM) 
U5186: MOVETOCREG_DSZ64(0x00000020, 0x000) 

U5188: LFNCEWAIT-> tmp8:= unk_f1e() !m1 
U5189: tmp8:= RDSEGFLD(UNK_SEG_04, BASE) 
U518a: WRSEGFLD(tmp8, FS, BASE) 

U518c: tmp8:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) 
U518d: WRSEGFLD(tmp8, FS, SEL+FLGS+LIM) 
U518e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U1a50) 

U5190: tmm6:= FMOV( , 0x00000091) !m0 SEQW GOTO U1a50
U5191: tmp2:= AND_DSZ32(0x0000003f, tmp5) 
U5192: tmp2:= OR_DSZ32(0x00000020, tmp2) 

U5194: tmp1:= SUB_DSZ32(tmp2, tmp0) 
U5195: tmm2:= unk_7c2(mm1, tmm1) 
U5196: tmm2:= unk_6a7(tmm2, tmm0) 

U5198: tmp2:= ZEROEXT_DSZ32(0x00000004) 
U5199: tmm5:= unk_741(mm2) !m2 
U519a: mm0:= unk_6dd( , tmm2) SEQW GOTO U1bd0

U519c: tmm7:= FMOV() 
U519d: tmp0:= ZEROEXT_DSZ32(0x6a09e667) 
U519e: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7,  , tmp0) 

U51a0: tmp1:= ZEROEXT_DSZ32(0xbb67ae85) 
U51a1: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004,  , tmp1) 
U51a2: tmp2:= ZEROEXT_DSZ32(0x3c6ef372) 

U51a4: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008,  , tmp2) 
U51a5: tmp3:= ZEROEXT_DSZ32(0xa54ff53a) 
U51a6: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c,  , tmp3) 

U51a8: tmp4:= ZEROEXT_DSZ32(0x510e527f) 
U51a9: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010,  , tmp4) 
U51aa: tmp8:= ZEROEXT_DSZ32(0x9b05688c) 

U51ac: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014,  , tmp8) 
U51ad: tmp9:= ZEROEXT_DSZ32(0x1f83d9ab) 
U51ae: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018,  , tmp9) 

U51b0: tmp10:= ZEROEXT_DSZ32(0x5be0cd19) 
U51b1: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c,  , tmp10) 
U51b2: tmm6:= unk_704(mm6) 

U51b4: tmm7:= unk_4ce(tmm7, tmm6) 
U51b5: tmp13:= ZEROEXT_DSZ64(0x00000038) 
U51b6: LFNCEWAIT-> tmp14:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp5, mode=0x01, tmp13) 

U51b8: tmp14:= unk_37c(tmp14) 
U51b9: tmp14:= ROR_DSZ64(tmp14, 0x00000020) 
U51ba: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000020, mode=0x01, tmp13, tmp14) 

U51bc: tmp13:= SUB_DSZ32(0x00000008, tmp13) 
U51bd: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp13, U51be) SEQW GOTO U51b6
U51be: tmp11:= ZEROEXT_DSZ32(0x00000030) 

U51c0: tmp13:= ADD_DSZ32(0x00000020) 
U51c1: tmm0:= unk_744(mm5) 
U51c2: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000038, tmp13) 

U51c4: tmp14:= ROR_DSZ32(tmp15, 0x00000011) 
U51c5: tmp12:= ROR_DSZ32(tmp15, 0x00000013) 
U51c6: tmp14:= XOR_DSZ32(tmp12, tmp14) 

U51c8: tmp12:= SHR_DSZ32(tmp15, 0x0000000a) 
U51c9: tmp14:= XOR_DSZ32(tmp12, tmp14) 
U51ca: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000024, tmp13) 

U51cc: tmp14:= ADD_DSZ32(tmp15, tmp14) 
U51cd: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004, tmp13) 
U51ce: tmp12:= ROR_DSZ32(tmp15, 0x00000007) 

U51d0: tmp5:= ROR_DSZ32(tmp15, 0x00000012) 
U51d1: tmp12:= XOR_DSZ32(tmp5, tmp12) 
U51d2: tmp5:= SHR_DSZ32(tmp15, 0x00000003) 

U51d4: tmp12:= XOR_DSZ32(tmp5, tmp12) 
U51d5: tmp14:= ADD_DSZ32(tmp12, tmp14) 
U51d6: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp13) 

U51d8: tmp14:= ADD_DSZ32(tmp15, tmp14) 
U51d9: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000040, tmp13, tmp14) 
U51da: tmp13:= ADD_DSZ32(0x00000004, tmp13) 

U51dc: tmp11:= SUB_DSZ32(0x00000001, tmp11) 
U51dd: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp11, U51de) SEQW GOTO U51c2
U51de: tmp11:= ZEROEXT_DSZ32() 

U51e0: LFNCEWAIT-> tmp5:= READURAM( , 0x004e, 64) 
U51e1: tmp13:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, tmp11) 
U51e2: tmp14:= NOTAND_DSZ32(tmp4, tmp9) 

U51e4: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000020, tmp11) 
U51e5: tmp12:= AND_DSZ32(tmp8, tmp4) 
U51e6: tmp15:= ADD_DSZ32(tmp15, tmp13) 

U51e8: tmp14:= XOR_DSZ32(tmp14, tmp12) 
U51e9: tmp12:= ROR_DSZ32(tmp4, 0x00000006) 
U51ea: tmp15:= ADD_DSZ32(tmp14, tmp15) 

U51ec: tmp14:= ROR_DSZ32(tmp4, 0x0000000b) 
U51ed: tmp12:= XOR_DSZ32(tmp14, tmp12) 
U51ee: tmp14:= ROR_DSZ32(tmp4, 0x00000019) 

U51f0: tmp15:= ADD_DSZ32(tmp10, tmp15) 
U51f1: tmp10:= ZEROEXT_DSZ32(tmp9) 
U51f2: tmp9:= ZEROEXT_DSZ32(tmp8) 

U51f4: tmp8:= ZEROEXT_DSZ32(tmp4) 
U51f5: tmp12:= XOR_DSZ32(tmp14, tmp12) 
U51f6: tmp14:= ROR_DSZ32(tmp0, 0x0000000d) 

U51f8: tmp15:= ADD_DSZ32(tmp12, tmp15) 
U51f9: tmp12:= ROR_DSZ32(tmp0, 0x00000002) 
U51fa: tmp4:= ADD_DSZ32(tmp15, tmp3) 

U51fc: tmp3:= ZEROEXT_DSZ32(tmp2) 
U51fd: tmp12:= XOR_DSZ32(tmp14, tmp12) 
U51fe: tmp14:= ROR_DSZ32(tmp0, 0x00000016) 

U5200: tmp13:= XOR_DSZ32(tmp14, tmp12) 
U5201: tmp11:= ADD_DSZ32(0x00000004, tmp11) 
U5202: tmp12:= AND_DSZ32(tmp1, tmp0) 

U5204: tmp14:= AND_DSZ32(tmp2, tmp0) 
U5205: tmp12:= XOR_DSZ32(tmp14, tmp12) 
U5206: tmp14:= AND_DSZ32(tmp2, tmp1) 

U5208: tmp2:= ZEROEXT_DSZ32(tmp1) 
U5209: tmp12:= XOR_DSZ32(tmp14, tmp12) 
U520a: tmp1:= ZEROEXT_DSZ32(tmp0) 

U520c: tmp13:= ADD_DSZ32(tmp12, tmp13) 
U520d: tmp0:= ADD_DSZ32(tmp13, tmp15) 
U520e: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000008, U5210) !m2 SEQW GOTO U51e1

U5210: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7) 
U5211: tmp0:= ADD_DSZ32(tmp0, tmp15) 
U5212: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004) 

U5214: tmp1:= ADD_DSZ32(tmp1, tmp15) 
U5215: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008) 
U5216: tmp2:= ADD_DSZ32(tmp2, tmp15) 

U5218: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c) 
U5219: tmp3:= ADD_DSZ32(tmp3, tmp15) 
U521a: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010) 

U521c: tmp4:= ADD_DSZ32(tmp4, tmp15) 
U521d: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014) 
U521e: tmp8:= ADD_DSZ32(tmp8, tmp15) 

U5220: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018) 
U5221: tmp9:= ADD_DSZ32(tmp9, tmp15) 
U5222: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c) 

U5224: tmp10:= ADD_DSZ32(tmp10, tmp15) 
U5225: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000000, U5226) !m2 SEQW GOTO U5231
U5226: tmp0:= BSWAP_DSZ32(tmp0) 

U5228: tmp1:= BSWAP_DSZ32(tmp1) 
U5229: tmp2:= BSWAP_DSZ32(tmp2) 
U522a: tmp3:= BSWAP_DSZ32(tmp3) 

U522c: tmp4:= BSWAP_DSZ32(tmp4) 
U522d: tmp8:= BSWAP_DSZ32(tmp8) 
U522e: tmp9:= BSWAP_DSZ32(tmp9) 

U5230: tmp10:= BSWAP_DSZ32(tmp10) 
U5231: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7,  , tmp0) 
U5232: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004,  , tmp1) 

U5234: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008,  , tmp2) 
U5235: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c,  , tmp3) 
U5236: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010,  , tmp4) 

U5238: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014,  , tmp8) 
U5239: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018,  , tmp9) 
U523a: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c,  , tmp10) 

U523c: tmp5:= PINTMOVDTMM2I_DSZ64(tmm0) 
U523d: tmp5:= ADD_DSZ64(0x00000040, tmp5) 
U523e: tmp6:= SUB_DSZ32(0x00000001, tmp6) 

U5240: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp6, U5241) SEQW GOTO U51b5
U5241: tmp11:= READURAM( , 0x0047, 64) 
U5242: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp6, U0011) 

U5244: tmp15:= SHR_DSZ32(tmp11, 0x00000010) 
U5245: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U0011) 
U5246: tmp15:= BTS_DSZ64(0x00000000, 0x0000001f) 

U5248: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000020,  , tmp15) 
U5249: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000028,  , 0x00000000) 
U524a: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000030,  , 0x00000000) 

U524c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000038,  , 0x00000000) 
U524d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000040,  , 0x00000000) 
U524e: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000048,  , 0x00000000) 

U5250: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000050,  , 0x00000000) 
U5251: tmp15:= PINTMOVDTMM2I_DSZ32(tmm7) 
U5252: tmp15:= ROL_DSZ64(tmp15, 0x00000029) 

U5254: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000058,  , tmp15) SEQW GOTO U51be
U5255: WRITEURAM(tmp1, 0x0001, 64) !m2 
U5256: tmp1:= READAFLAGS(tmp1) 

U5258: tmp1:= CONCAT_DSZ16(tmp1, tmp0) 
U5259: WRITEURAM(tmp1, 0x0008, 64) !m2 
U525a: tmp0:= SHR_DSZ32(tmp0, 0x00000010) 

U525c: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U2719) !m1 
U525d: tmp1:= ZEROEXT_DSZ32(0x000036c4) 
U525e: tmp1:= CONCAT_DSZ16(tmp1, 0x00000ea8) SEQW GOTO U271c

U5260: tmp4:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
U5261: tmp13:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U5262: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U5269

U5264: tmp0:= ZEROEXT_DSZ32(0x00000011) 
U5265: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4f5d
U5266: tmp15:= READURAM( , 0x004c, 64) 

U5268: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000d, U73ac) !m1,m2 
U5269: LFNCEWAIT-> tmp11:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U526a: tmp11:= READAFLAGS( , tmp11) !m2 

U526c: tmp14:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U526d: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U526e: tmp1:= MOVEFROMCREG_DSZ64( , 0x7ff) 

U5270: TESTUSTATE( , SYS, !UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U2769
U5271: LFNCEMARK-> MOVE_DSZ32() 
U5272: tmp9:= NOTAND_DSZ32(0x0000000d, tmp0) 

U5274: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x7ff) 
U5275: MOVETOCREG_BTR_DSZ64(tmp9, 0x0000001f, 0x7f6) !m0 
U5276: MOVETOCREG_DSZ64( , 0x00000000, 0x7c5) 

U5278: ROVR<- unk_13f() !m2 SEQW SAVEUIP1 U5279SEQW GOTO U2075
U5279: MOVETOCREG_DSZ64( , 0x00000000, 0x7f8) 
U527a: MOVETOCREG_DSZ64( , 0x00000000, 0x7f9, 32) !m1 

U527c: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x7fe) 
U527d: tmp2:= ZEROEXT_DSZ32(0x0000fc00) 
U527e: tmp9:= READURAM( , 0x0071, 64) 

U5280: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U5282
U5281: tmp9:= READURAM( , 0x0034, 64) 
U5282: tmp9:= ZEROEXT_DSZ32(tmp9) 

U5284: tmp2:= ADD_DSZ64(tmp2, tmp9) 
U5285: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 
U5286: LFNCEWAIT-> tmp6:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003f8) 

U5288: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000240) 
U5289: tmp9:= AND_DSZ32(0xffca7800, tmp3) 
U528a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U5871) 

U528c: tmp9:= READURAM( , 0x005c, 64) 
U528d: tmp9:= BT_DSZ64(tmp9, 0x0000001a) 
U528e: tmp9:= SELECTCC_DSZ32_CONDB(tmp9, tmp3) 

U5290: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000f, U5871) !m0,m2 
U5291: tmp9:= READURAM( , 0x0035, 64) 
U5292: tmp9:= BT_DSZ64(tmp9, 0x00000029) 

U5294: tmp9:= SELECTCC_DSZ32_CONDB(tmp9, 0x00200000) 
U5295: tmp9:= AND_DSZ32(tmp9, tmp3) 
U5296: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U5871) 

U5298: tmp9:= READURAM( , 0x0077, 64) 
U5299: tmp9:= BT_DSZ64(tmp9, 0x0000002b) 
U529a: tmp9:= SELECTCC_DSZ32_CONDNB(tmp9, 0x00008000) 

U529c: tmp9:= AND_DSZ16(tmp9, tmp3) 
U529d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U5871) 
U529e: tmp9:= SHR_DSZ32(tmp6, 0x0000001a) 

U52a0: tmp9:= AND_DSZ32(tmp3, tmp9) 
U52a1: tmp9:= BT_DSZ32(tmp9, 0x00000005) 
U52a2: tmp9:= SETCC_CONDB(tmp9) 

U52a4: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003e0) 
U52a5: tmp10:= SHR_DSZ32(tmp5, 0x00000008) 
U52a6: tmp9:= AND_DSZ32(tmp9, tmp10) 

U52a8: tmp10:= SHR_DSZ32(tmp5, 0x0000000a) 
U52a9: tmp10:= AND_DSZ32(0x00000001, tmp10) 
U52aa: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, U5871, tmp10) !m2 

U52ac: tmp10:= BTS_DSZ32(0x00000000, 0x0000001f) 
U52ad: tmp9:= AND_DSZ32(0x80000001, tmp6) 
U52ae: CMPUJZ_DIRECT_NOTTAKEN(tmp9, U5871, tmp10) !m2 

U52b0: tmp9:= AND_DSZ32(0x60000000, tmp6) 
U52b1: tmp10:= BTS_DSZ32(0x00000000, 0x0000001d) 
U52b2: CMPUJZ_DIRECT_NOTTAKEN(tmp9, U5871, tmp10) !m2 

U52b4: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003f0) 
U52b5: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000248) 
U52b6: CMPUJNZ_DIRECT_NOTTAKEN(tmp8, U5871, tmp9) !m2 

U52b8: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003e8) 
U52b9: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000250) 
U52ba: tmp9:= XOR_DSZ32(tmp7, tmp9) 

U52bc: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000011, U5871) !m2 
U52bd: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001c8) 
U52be: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001b8) 

U52c0: tmp9:= SHR_DSZ32(tmp9, 0x00000010) 
U52c1: tmp10:= SHR_DSZ32(tmp10, 0x00000010) 
U52c2: tmp9:= AND_DSZ32(tmp10, tmp9) 

U52c4: tmp9:= AND_DSZ32(0x00000060, tmp9) 
U52c5: tmp9:= SUB_DSZ32(0x00000060, tmp9) 
U52c6: tmp7:= BT_DSZ32(tmp7, 0x00000011) 

U52c8: tmp9:= SELECTCC_DSZ32_CONDNB(tmp7, tmp9) 
U52c9: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, 0x00000000, U5871) !m2 
U52ca: tmp9:= NOTAND_DSZ32(tmp6, 0x00000001) 

U52cc: tmp9:= SELECTCC_DSZ32_CONDNB(tmp7, tmp9) 
U52cd: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, 0x00000000, U5871) !m2 
U52ce: tmp9:= MOVEFROMCREG_DSZ64( , 0x7f0) 

U52d0: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000000, U5871) !m2 
U52d1: LFNCEMARK-> tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000180) 
U52d2: NOP 

U52d4: LFNCEWAIT-> WRSEGFLD(tmp9, GDT, BASE) 
U52d5: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003c0) 
U52d6: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000190) 

U52d8: WRSEGFLD(tmp9, LDT, BASE) 
U52d9: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000160) 
U52da: WRSEGFLD(tmp9, IDT, BASE) 

U52dc: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001dc) 
U52dd: tmp9:= SHL_DSZ64(tmp9, 0x00000020) 
U52de: WRITEURAM(tmp9, 0x0124, 64) !m2 

U52e0: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001a0) 
U52e1: WRSEGFLD(tmp9, ES, BASE) 
U52e2: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001b0) 

U52e4: WRSEGFLD(tmp9, UNK_SEG_09, BASE) 
U52e5: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001c0) 
U52e6: WRSEGFLD(tmp9, SS_USERM, BASE) 

U52e8: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000130) 
U52e9: WRSEGFLD(tmp9, DS, BASE) 
U52ea: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000140) 

U52ec: WRSEGFLD(tmp9, FS, BASE) 
U52ed: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000150) 
U52ee: WRSEGFLD(tmp9, GS, BASE) 

U52f0: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000170) 
U52f1: WRSEGFLD(tmp9, TSS, BASE) 
U52f2: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000198) 

U52f4: WRSEGFLD(tmp9, LDT, SEL+FLGS+LIM) 
U52f5: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000188) 
U52f6: WRSEGFLD(tmp9, GDT, SEL+FLGS+LIM) 

U52f8: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000168) 
U52f9: WRSEGFLD(tmp9, IDT, SEL+FLGS+LIM) 
U52fa: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001a8) 

U52fc: WRSEGFLD(tmp10, ES, SEL+FLGS+LIM) 
U52fd: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001b8) 
U52fe: WRSEGFLD(tmp10, UNK_SEG_09, SEL+FLGS+LIM) 

U5300: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001c8) 
U5301: WRSEGFLD(tmp10, SS_USERM, SEL+FLGS+LIM) 
U5302: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000138) 

U5304: WRSEGFLD(tmp10, DS, SEL+FLGS+LIM) 
U5305: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000148) 
U5306: WRSEGFLD(tmp10, FS, SEL+FLGS+LIM) 

U5308: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000158) 
U5309: WRSEGFLD(tmp10, GS, SEL+FLGS+LIM) 
U530a: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000178) 

U530c: LFNCEMARK-> WRSEGFLD(tmp10, TSS, SEL+FLGS+LIM) 
U530d: tmp9:= READURAM( , 0x0010, 64) 
U530e: tmp9:= NOTAND_DSZ64(0xffffffff, tmp9) 

U5310: tmp8:= NOTAND_DSZ64(tmp9, tmp8) 
U5311: MOVETOCREG_DSZ64(tmp8, 0x529) 
U5312: tmp14:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003d8) 

U5314: rdi:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000394) 
U5315: rsi:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000038c) 
U5316: rbp:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000384) 

U5318: rsp:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000037c) 
U5319: rbx:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000374) 
U531a: rdx:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000036c) 

U531c: rcx:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000364) 
U531d: rax:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000035c) 
U531e: r8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000354) 

U5320: r9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000034c) 
U5321: r10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000344) 
U5322: r11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000033c) 

U5324: r12:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000334) 
U5325: r13:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000032c) 
U5326: r14:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000324) 

U5328: r15:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000031c) 
U5329: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003d0) 
U532a: WRITEURAM(tmp9, 0x003d, 64) !m2 

U532c: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003a8) 
U532d: LFNCEWAIT-> WRSEGFLD(tmp9, ES, UNK_FLD_0c) 
U532e: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003ac) 

U5330: WRSEGFLD(tmp9, UNK_SEG_09, UNK_FLD_0c) 
U5331: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003b0) 
U5332: WRSEGFLD(tmp9, SS_USERM, UNK_FLD_0c) 

U5334: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003b4) 
U5335: WRSEGFLD(tmp9, DS, UNK_FLD_0c) 
U5336: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003b8) 

U5338: WRSEGFLD(tmp9, FS, UNK_FLD_0c) 
U5339: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003bc) 
U533a: WRSEGFLD(tmp9, GS, UNK_FLD_0c) 

U533c: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003c4) 
U533d: LFNCEMARK-> WRSEGFLD(tmp9, TSS, UNK_FLD_0c) 
U533e: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002f8) 

U5340: WRITEURAM(tmp9, 0x0071, 32) !m2 
U5341: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002ec) 
U5342: WRITEURAM(tmp9, 0x0034, 32) !m2 

U5344: tmp8:= READURAM( , 0x0077, 64) 
U5345: tmp8:= BT_DSZ64(tmp8, 0x0000002b) 
U5346: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp8, U5348) SEQW GOTO U534d

U5348: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002e0) 
U5349: tmp8:= AND_DSZ16(0x00000002, tmp8) 
U534a: tmp8:= SHL_DSZ32(tmp8, 0x00000008) 

U534c: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x007, tmp8) !m2 
U534d: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U536d
U534e: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x0000027c) 

U5350: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000280) 
U5351: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp9, 0x2c4, 32) !m1 
U5352: MOVETOCREG_DSZ64(tmp10, 0x008) !m2 

U5354: tmp9:= CONCAT_DSZ32(tmp10, tmp9) 
U5355: WRITEURAM(tmp9, 0x0070, 64) !m2 
U5356: tmp0:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x0000027e) 

U5358: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003a4) 
U5359: WRITEURAM(tmp9, 0x0039, 32) !m2 
U535a: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x004) 

U535c: tmp9:= AND_DSZ32(0x00000001, tmp9) 
U535d: tmp9:= SHL_DSZ32(tmp9, 0x00000005) 
U535e: MOVETOCREG_OR_DSZ64(tmp10, 0x004, tmp9) !m2 

U5360: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000039c) 
U5361: WRITEURAM(tmp9, 0x003e, 64) !m2 
U5362: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001e8) 

U5364: WRITEURAM(tmp9, 0x006e, 64) !m2 
U5365: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001f0) 
U5366: WRITEURAM(tmp9, 0x000a, 64) !m2 

U5368: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001f8) 
U5369: WRITEURAM(tmp9, 0x0009, 64) !m2 
U536a: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001e0) 

U536c: WRITEURAM(tmp9, 0x000b, 64) !m2 
U536d: tmp13:= ADD_DSZ64(tmp2, 0x00000208) 
U536e: tmp9:= ZEROEXT_DSZ32(0x00000004) 

U5370: tmp9:= SUB_DSZ32(0x00000001, tmp9) 
U5371: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp13, tmp9) 
U5372: tmp11:= ADD_DSZ64(tmp9, 0x00000540) 

U5374: MOVETOCREG_DSZ64(tmp10, tmp11) !m2 
U5375: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U5376) SEQW GOTO U5370
U5376: tmp4:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp2, 0x00000230) 

U5378: tmp9:= READURAM( , 0x005c, 64) 
U5379: tmp12:= ZEROEXT_DSZ32(0x00000010) 
U537a: tmp5:= MOVEINSERTFLGS_DSZ64( , tmp5) 

U537c: tmp11:= READURAM( , 0x0059, 64) 
U537d: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U5382
U537e: tmp11:= READURAM( , 0x0080, 64) 

U5380: tmp12:= ZEROEXT_DSZ32(0x00000024) 
U5381: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000004, U5396) !m2 
U5382: tmp10:= READURAM( , 0x0018, 64) 

U5384: tmp0:= ROR_DSZ32(tmp10, 0x00000003) 
U5385: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U5386: tmp9:= MOVEFROMCREG_DSZ64( , 0x281, 32) !m1 

U5388: tmp0:= NOTAND_DSZ32(tmp0, tmp9) 
U5389: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x281, 32) !m1 
U538a: tmp0:= SHR_DSZ64(tmp10, 0x00000017) 

U538c: tmp1:= MOVETOCREG_SHR_DSZ64(tmp0, 0x0000000c, 0x008) 
U538d: tmp10:= SHR_DSZ64(tmp11, 0x00000020) 
U538e: tmp10:= AND_DSZ32(0x00010000, tmp10) 

U5390: tmp9:= AND_DSZ32(0xffff0000, tmp11) 
U5391: tmp9:= SHR_DSZ32(tmp9, 0x00000010) 
U5392: tmp9:= MOVETOCREG_OR_DSZ64(tmp9, 0x2c4, tmp10) !m1 

U5394: tmp9:= CONCAT_DSZ32(tmp1, tmp9) 
U5395: WRITEURAM(tmp9, 0x0070, 64) !m2 
U5396: tmp10:= MOVEFROMCREG_DSZ64( , 0x51e) 

U5398: tmp9:= AND_DSZ32(0x00000040, tmp11) 
U5399: tmp9:= SHR_DSZ32(tmp9, 0x00000006) 
U539a: MOVETOCREG_OR_DSZ64(tmp9, 0x51e, tmp10) 

U539c: tmp9:= AND_DSZ32(0x00002000, tmp11) 
U539d: tmp3:= NOTAND_DSZ32(0x00002000, tmp3) 
U539e: tmp3:= OR_DSZ32(tmp9, tmp3) 

U53a0: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U4a24
U53a1: tmp9:= AND_DSZ32(0x00000008, tmp11) 
U53a2: NOP 

U53a4: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U1099) SEQW GOTO U4a26
U53a5: tmp10:= SUB_DSZ32(0x00000120, tmp1) 
U53a6: tmp10:= SELECTCC_DSZ32_CONDZ(tmp10, 0x00000002) 

U53a8: tmp10:= ADD_DSZ32(0x00000004, tmp10) 
U53a9: tmp12:= ADD_DSZ32(0x00000004, tmp1) 
U53aa: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp9, tmp12) !m2 

U53ac: tmp12:= ADD_DSZ32(0x00000001, tmp12) 
U53ad: tmp10:= SUB_DSZ32(0x00000001, tmp10) 
U53ae: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp10, U304e) SEQW GOTO U53aa

U53b0: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U04b4) 
U53b1: tmp11:= MOVEFROMCREG_DSZ64( , 0x105) 
U53b2: tmp11:= SHR_DSZ32(tmp11, 0x00000002) 

U53b4: tmp11:= AND_DSZ32(0x00000001, tmp11) 
U53b5: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U53b6: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U53b8: tmp0:= SHR_DSZ64(tmp2, 0x0000003d) 
U53b9: tmp9:= AND_DSZ32(0x00004000, tmp2) 
U53ba: tmp9:= SELECTCC_DSZ32_CONDZ(tmp9, 0x00000080) 

U53bc: tmp2:= AND_DSZ32(0x00000c00, tmp2) 
U53bd: tmp2:= OR_DSZ32(tmp0, tmp2) 
U53be: WRITEURAM(tmp2, 0x0038, 32) 

U53c0: tmp2:= SETCC_CONDNZ(tmp2) 
U53c1: tmp2:= OR_DSZ32(tmp9, tmp2) 
U53c2: LFNCEWAIT-> tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp12) 

U53c4: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp7, 0x0000001f, U04b4) !m0 
U53c5: tmp1:= READURAM( , 0x0057, 64) 
U53c6: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b8, tmp12) 

U53c8: tmp13:= SUB_DSZ64(tmp0, tmp1) 
U53c9: tmp13:= CMOVCC_DSZ64_CONDZ(tmp8, tmp13) 
U53ca: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp12) 

U53cc: tmp7:= SUB_DSZ32(tmp8, tmp7) 
U53cd: tmp13:= OR_DSZ64(tmp13, tmp7) 
U53ce: tmp4:= MOVEFROMCREG_DSZ64( , 0x004) 

U53d0: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp4, 0x00000002, U31b8) !m0,m1,m2 
U53d1: tmp6:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000f8, tmp12) 
U53d2: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000fc, tmp12) 

U53d4: tmm1:= unk_707(mm0) 
U53d5: tmp0:= AND_DSZ32(0x80000000, tmp0) 
U53d6: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U53d8: tmp2:= OR_DSZ32(tmp2, tmp0) 
U53d9: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d4, tmp12) 
U53da: tmp0:= OR_DSZ32(0x00000000, tmp0) 

U53dc: tmm2:= unk_707(mm0) 
U53dd: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000004) 
U53de: tmp2:= OR_DSZ32(tmp0, tmp2) 

U53e0: tmp0:= MOVEFROMCREG_DSZ64( , 0x402) 
U53e1: tmp0:= AND_DSZ32(0x00000008, tmp0) 
U53e2: tmp3:= READURAM( , 0x0041, 64) 

U53e4: tmp3:= SHR_DSZ64(tmp3, 0x0000001f) 
U53e5: tmp3:= AND_DSZ32(0x00000008, tmp3) 
U53e6: tmp0:= OR_DSZ32(tmp0, tmp3) 

U53e8: tmp2:= OR_DSZ32(tmp0, tmp2) 
U53e9: tmp0:= AND_DSZ32(0x00010000, tmp6) 
U53ea: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000040) 

U53ec: tmp2:= OR_DSZ32(tmp0, tmp2) 
U53ed: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp13, U0242) 
U53ee: tmp0:= SHR_DSZ32(tmp6, 0x0000000a) 

U53f0: tmp1:= NOTAND_DSZ32(tmp0, tmp11) 
U53f1: tmp13:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000010) 
U53f2: tmp10:= SELECTCC_DSZ32_CONDNZ(tmp8, 0x00000020) 

U53f4: tmp5:= AND_DSZ32(0x00000002, tmp0) 
U53f5: tmp0:= OR_DSZ32(tmp1, tmp5) 
U53f6: tmp10:= OR_DSZ32(tmp0, tmp10) 

U53f8: tmm0:= unk_707(tmm2) 
U53f9: tmp0:= SHL_DSZ32(tmp0, 0x00000003) 
U53fa: tmp0:= OR_DSZ32(tmp11, tmp0) 

U53fc: tmp12:= MOVEINSERTFLGS_DSZ64(tmp0, tmp12) 
U53fd: MOVETOCREG_OR_DSZ64(tmp2, 0x6c5, tmp13) 
U53fe: tmp10:= AND_DSZ32(0x00000204, tmp6) 

U5400: tmp10:= SHL_DSZ32(tmp10, 0x00000001) 
U5401: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000b0, tmp12) 
U5402: tmm6:= unk_747(mm0) 

U5404: tmp0:= NOTAND_DSZ32(tmp0, 0x00000020) 
U5405: tmp0:= SHL_DSZ32(tmp0, 0x00000005) 
U5406: tmp10:= OR_DSZ32(tmp0, tmp10) 

U5408: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000090, tmp12) 
U5409: tmm7:= unk_747(mm0) 
U540a: tmp0:= SHR_DSZ32(tmp0, 0x00000015) 

U540c: tmp0:= NOTAND_DSZ32(tmp0, 0x00000400) 
U540d: tmp10:= OR_DSZ32(tmp0, tmp10) 
U540e: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001b4, tmp12) 

U5410: tmp3:= BTS_DSZ32(tmp3, 0x0000001f) 
U5411: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000002cc, tmp12) 
U5412: tmp0:= SELECTCC_DSZ32_CONDNB(tmp3, tmp0) 

U5414: tmp0:= CONCAT_DSZ32(tmp0, tmp3) 
U5415: tmp3:= AND_DSZ64(0x00200000, tmp0) 
U5416: tmp3:= SELECTCC_DSZ32_CONDZ(tmp3, 0x00000800) 

U5418: tmp10:= OR_DSZ32(tmp3, tmp10) 
U5419: tmp0:= BT_DSZ64(tmp0, 0x00000021) 
U541a: tmp3:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00001000) 

U541c: tmp10:= OR_DSZ32(tmp3, tmp10) 
U541d: tmp14:= SHR_DSZ32(tmp6, 0x0000000a) 
U541e: tmp14:= AND_DSZ32(0x00000038, tmp14) 

U5420: tmp2:= CONCAT_DSZ16(tmp14, tmp10) 
U5421: tmp4:= BT_DSZ64(tmp0, 0x00000029) 
U5422: tmp4:= SELECTCC_DSZ32_CONDNB(tmp4, 0x00000200) 

U5424: tmp14:= BT_DSZ64(tmp0, 0x00000024) 
U5425: tmp14:= SELECTCC_DSZ32_CONDNB(tmp14, 0x00000010) 
U5426: tmp4:= OR_DSZ32(tmp14, tmp4) 

U5428: tmp11:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001ac, tmp12) 
U5429: tmp14:= AND_DSZ32(0x00000040, tmp11) 
U542a: tmp14:= SELECTCC_DSZ32_CONDZ(tmp14, 0x00000004) 

U542c: tmp4:= OR_DSZ32(tmp14, tmp4) 
U542d: tmp2:= CONCAT_DSZ32(tmp4, tmp2) 
U542e: LFNCEWTMRK-> WRITEURAM( , 0x00000000, 0x004a, 64) 

U5430: MOVETOCREG_DSZ64(tmp2, 0x6c0) 
U5431: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000104, tmp12) 
U5432: SYNCMARK-> WRITEURAM(tmp4, 0x0048, 64) 

U5434: tmp4:= OR_DSZ32(0x00000000, tmp4) 
U5435: tmp4:= SETCC_CONDNZ(tmp4) 
U5436: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2f22) 

U5438: tmp13:= ZEROEXT_DSZ64(tmp12) 
U5439: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U5441
U543a: tmp4:= CONCAT_DSZ32(tmp4, tmp6) 

U543c: tmp3:= READURAM( , 0x0011, 64) 
U543d: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004e8, mode=0x01, tmp3) 
U543e: tmp3:= AND_DSZ64(tmp3, tmp4) 

U5440: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U44e1) 
U5441: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp12) 
U5442: tmp7:= CONCAT_DSZ32(tmp7, tmp7) 

U5444: tmp3:= MOVEFROMCREG_DSZ64( , 0x402) 
U5445: tmp3:= AND_DSZ32(0x000003b0, tmp3) 
U5446: tmp3:= SHR_DSZ32(tmp3, 0x00000004) 

U5448: tmp7:= MOVEINSERTFLGS_DSZ64(tmp3, tmp7) 
U5449: tmp3:= READURAM( , 0x0077, 64) 
U544a: tmp14:= SHR_DSZ64(tmp3, 0x00000010) 

U544c: tmp14:= AND_DSZ64(0x00000001, tmp14) 
U544d: tmp15:= SHR_DSZ64(tmp3, 0x0000002a) 
U544e: tmp15:= AND_DSZ64(0x00000010, tmp15) 

U5450: tmp15:= OR_DSZ32(tmp14, tmp15) 
U5451: tmp3:= SHR_DSZ64(tmp3, 0x0000002a) 
U5452: tmp3:= AND_DSZ64(0x00000002, tmp3) 

U5454: tmp3:= OR_DSZ32(tmp15, tmp3) 
U5455: tmp14:= READURAM( , 0x0035, 64) 
U5456: tmp15:= SHR_DSZ64(tmp14, 0x00000032) 

U5458: tmp15:= AND_DSZ64(0x00000020, tmp15) 
U5459: tmp14:= SHR_DSZ64(tmp14, 0x00000026) 
U545a: tmp14:= AND_DSZ64(0x00000008, tmp14) 

U545c: tmp14:= OR_DSZ32(tmp15, tmp14) 
U545d: tmp3:= OR_DSZ32(tmp3, tmp14) 
U545e: tmp6:= MOVEINSERTFLGS_DSZ64(tmp3, tmp6) 

U5460: tmp14:= AND_DSZ32(0xfe036dfb, tmp7) 
U5461: tmp14:= SUB_DSZ32(0x00036dfb, tmp14) 
U5462: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U3380) 

U5464: tmp14:= AND_DSZ32(0xfffc11fb, tmp6) 
U5465: tmp14:= SUB_DSZ32(0x000011fb, tmp14) 
U5466: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U3380) 

U5468: tmp15:= SELECTCC_DSZ32_CONDNS(tmp7, tmp6) 
U5469: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000010, U3380) !m1,m2 
U546a: tmp15:= SELECTCC_DSZ32_CONDNS(tmp7, tmp7) 

U546c: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000017, U3380) !m0,m1,m2 
U546d: tmp15:= SELECTCC_DSZ32_CONDNS(tmp6, tmp6) 
U546e: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000011, U3380) !m1,m2 

U5470: tmp15:= SELECTCC_DSZ32_CONDNS(tmp6, tmp7) 
U5471: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000018, U3380) !m1,m2 
U5472: tmp8:= AND_DSZ32(0x00000200, tmp7) 

U5474: tmp15:= unk_204(0x00000200) 
U5475: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, U3380, tmp8) !m1,m2 
U5476: tmp15:= XOR_DSZ32(tmp15, 0x00000200) 

U5478: tmp14:= AND_DSZ32(tmp15, tmp6) 
U5479: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U3380) 
U547a: tmp15:= AND_DSZ32(0x00000c00, tmp6) 

U547c: tmp14:= SUB_DSZ32(0x00000c00, tmp15) 
U547d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp14, U3380) 
U547e: tmp14:= SELECTCC_DSZ32_CONDB(tmp12, tmp15) 

U5480: CMPUJNZ_DIRECT_NOTTAKEN(tmp14, 0x00000000, U3380) !m1,m2 
U5481: tmp9:= ZEROEXT_DSZ32(0x000044d9) 
U5482: WRITEURAM(tmp9, 0x002c, 32) !m2 

U5484: MOVETOCREG_DSZ64(0x0000000a, 0x000) !m2 
U5485: SYNCWAIT-> tmp14:= READURAM( , 0x0010, 64) 
U5486: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U54f5

U5488: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000c0, tmp12) 
U5489: SAVEUIP_REGOVR(0x01, U548a, 0x0983) !m0 SEQW GOTO U60f9
U548a: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000b8, tmp12) 

U548c: tmp1:= ZEROEXT_DSZ16( , tmp14) 
U548d: tmp1:= AND_DSZ64(tmp1, tmp3) 
U548e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U44d9) 

U5490: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000a0, tmp12) 
U5491: tmp1:= NOTAND_DSZ32(tmp3, 0x80000021) 
U5492: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U44d9) 

U5494: tmp1:= SHR_DSZ64(tmp3, 0x00000020) 
U5495: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U44d9) 
U5496: tmp3:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001c2, tmp12) 

U5498: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001aa, tmp12) 
U5499: tmp3:= OR_DSZ32(tmp1, tmp3) 
U549a: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001ca, tmp12) 

U549c: tmp3:= OR_DSZ32(tmp1, tmp3) 
FUN_ucode_000549d:
U549d: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001d2, tmp12) 
U549e: tmp3:= OR_DSZ32(tmp1, tmp3) 

U54a0: tmp2:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001b2, tmp12) 
U54a1: tmp3:= OR_DSZ32(tmp2, tmp3) 
U54a2: tmp2:= SUB_DSZ32(0x00000001, tmp2) 

U54a4: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001ba, tmp12) 
U54a5: tmp3:= OR_DSZ32(tmp1, tmp3) 
U54a6: tmp4:= SHR_DSZ32(tmp8, 0x00000009) 

U54a8: tmp1:= OR_DSZ16(tmp4, tmp1) 
U54a9: tmp1:= SUB_DSZ32(0x00000001, tmp1) 
U54aa: tmp2:= OR_DSZ32(tmp1, tmp2) 

U54ac: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001e2, tmp12) 
U54ad: tmp3:= OR_DSZ32(tmp1, tmp3) 
U54ae: tmp1:= SUB_DSZ32(0x00000001, tmp1) 

U54b0: tmp2:= OR_DSZ32(tmp1, tmp2) 
U54b1: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp2, U44d9) 
U54b2: tmp3:= AND_DSZ32(0x00000007, tmp3) 

U54b4: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U44d9) 
U54b5: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000d8, tmp12) 
U54b6: tmp1:= SUB_DSZ32(0x00000001, tmp4) 

U54b8: tmp1:= CONCAT_DSZ32(tmp1) 
U54b9: tmp1:= AND_DSZ64(tmp3, tmp1) 
U54ba: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U44d9) 

U54bc: unk_25c( , tmp3) 
U54bd: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000208, tmp12) 
U54be: unk_25c( , tmp3) 

U54c0: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000210, tmp12) 
U54c1: unk_25c( , tmp3) 
U54c2: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000220, tmp12) 

U54c4: unk_25c( , tmp3) 
U54c5: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000228, tmp12) 
U54c6: unk_25c( , tmp3) 

U54c8: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000230, tmp12) 
U54c9: unk_25c( , tmp3) 
U54ca: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002f8, tmp12) 

U54cc: unk_25c( , tmp3) 
U54cd: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002f0, tmp12) 
U54ce: unk_25c( , tmp3) 

U54d0: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000350, tmp12) 
U54d1: tmp1:= READURAM( , 0x0041, 64) 
U54d2: tmp1:= SHR_DSZ64(tmp1, 0x00000017) 

U54d4: tmp1:= AND_DSZ32(tmp1, 0x00000800) 
U54d5: tmp1:= OR_DSZ64(0xfffffffffffff7fe, tmp1) 
U54d6: tmp3:= AND_DSZ64(tmp3, tmp1) 

U54d8: tmp1:= SELECTCC_DSZ32_CONDZ(tmp8, 0x00000500) 
U54d9: tmp15:= BT_DSZ64(tmp7, 0x00000015) 
U54da: tmp1:= MOVEMERGEFLGS_DSZ32(tmp1, tmp15) 

U54dc: tmp3:= CMOVCC_DSZ64_CONDNB(tmp1, tmp3) 
U54dd: CMPUJNZ_DIRECT_NOTTAKEN(tmp3, U44d9, tmp1) 
U54de: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000348, tmp12) 

U54e0: tmp15:= BT_DSZ64(tmp7, 0x00000013) 
U54e1: ROVR<- tmp3:= SELECTCC_DSZ64_CONDNB(tmp15, tmp3) SEQW SAVEUIP1 U54e2SEQW GOTO U5a15
U54e2: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000358, tmp12) 

U54e4: tmp15:= BT_DSZ64(tmp7, 0x0000000c) 
U54e5: tmp3:= SELECTCC_DSZ64_CONDNB(tmp15, tmp3) 
U54e6: tmp1:= ZEROEXT_DSZ32(0x00000007) 

U54e8: tmp1:= CONCAT_DSZ32(tmp1, 0x0000000f) 
U54e9: tmp1:= NOTAND_DSZ64(tmp1, tmp3) 
U54ea: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U44d9) 

U54ec: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000050, tmp12) 
U54ed: CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U0d08) 
U54ee: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000054, tmp12) 

U54f0: CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U0ddc) 
U54f1: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U54f5
U54f2: tmp4:= MOVEFROMCREG_DSZ64( , 0x402) 

U54f4: MOVETOCREG_BTR_DSZ64(tmp4, 0x00000003, 0x402) !m0,m2 
U54f5: tmp4:= READURAM( , 0x0048, 64) 
U54f6: CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U188a) !m2 

U54f8: LFNCEMARK-> TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U7285
U54f9: tmp15:= AND_DSZ32(0x04066173, tmp0) 
U54fa: tmp15:= SUB_DSZ32(0x04006172, tmp15) 

U54fc: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 
U54fd: tmp1:= SHR_DSZ64(tmp0, 0x00000020) 
U54fe: tmp15:= AND_DSZ32(0xffc21000, tmp1) 

U5500: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 
U5501: tmp15:= SELECTCC_DSZ32_CONDNP(tmp7, tmp1) 
U5502: tmp15:= AND_DSZ32(0x00000300, tmp15) 

U5504: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 
U5505: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp7, tmp1) 
U5506: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000e, U2969) !m0,m1 

U5508: tmp15:= READURAM( , 0x003a, 64) 
U5509: tmp15:= NOTAND_DSZ32(tmp15, 0x00080001) 
U550a: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, tmp1) 

U550c: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000015, U2969) !m1 
U550d: tmp15:= SELECTCC_DSZ32_CONDNP(tmp6, tmp1) 
U550e: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000f, U2969) !m0,m1 

U5510: tmp15:= SELECTCC_DSZ32_CONDNO(tmp7, tmp1) 
U5511: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000012, U2969) !m0,m1 
U5512: tmp15:= SELECTCC_DSZ32_CONDNS(tmp6, tmp1) 

U5514: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000013, U2969) !m0,m1 
U5515: tmp15:= SELECTCC_DSZ32_CONDNB(tmp7, tmp1) 
U5516: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000d, U2969) !m1 

U5518: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000368, tmp13) 
U5519: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000370, tmp13) 
U551a: tmp15:= BT_DSZ32(tmp1, 0x0000000d) 

U551c: tmp4:= SELECTCC_DSZ64_CONDNB(tmp15, tmp4) 
U551d: tmp8:= SHR_DSZ64(tmp4, 0x00000001) 
U551e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U2969) 

U5520: tmp8:= AND_DSZ32(0x00000002, tmp1) 
U5521: tmp8:= SELECTCC_DSZ64_CONDNZ(tmp8, tmp4) 
U5522: BTUJB_DIRECT_NOTTAKEN(tmp8, 0x00000000, U2969) !m1 

U5524: tmp9:= SELECTCC_DSZ64_CONDNB(tmp15, tmp9) 
U5525: tmp10:= AND_DSZ64(0x00000001, tmp4) 
U5526: tmp9:= SELECTCC_DSZ64_CONDZ(tmp10, tmp9) 

U5528: tmp10:= AND_DSZ64(tmp14, tmp9) 
U5529: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U2969) 
U552a: tmp9:= OR_DSZ64(tmp4, tmp9) 

U552c: WRITEURAM(tmp9, 0x0054, 64) 
U552d: tmp15:= SELECTCC_DSZ32_CONDO(tmp6, tmp1) 
U552e: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000b, U2969) !m0,m1 

U5530: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000010, U2969) !m1 
U5531: tmp15:= AND_DSZ32(0x00000082, tmp1) 
U5532: tmp15:= SUB_DSZ32(0x00000080, tmp15) 

U5534: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U2969) 
U5535: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000098, tmp13) 
U5536: tmp5:= AND_DSZ32(0x00000001, tmp1) 

U5538: TESTUSTATE( , VMX, 0x0004) !m2 ? SEQW GOTO U553a
U5539: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U2969) 
U553a: tmp2:= SELECTCC_DSZ64_CONDZ(tmp5, tmp2) 

U553c: tmp15:= AND_DSZ64(tmp14, tmp2) 
U553d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 
U553e: LFNCEWAIT-> MOVETOCREG_OR_DSZ64(tmp2, 0x51e, tmp5) 

U5540: tmp8:= ZEROEXT_DSZ64(tmp11) 
U5541: TESTUSTATE( , VMX, 0x0010) !m2 ? SEQW GOTO U7496
U5542: tmp11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000e0, tmp13) 

U5544: tmp15:= AND_DSZ64(tmp14, tmp11) 
U5545: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 
U5546: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000258, tmp13) 

U5548: TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U554c
U5549: BTUJNB_DIRECT_NOTTAKEN(tmp8, 0x00000000, U2969) !m1 
U554a: tmp9:= ZEROEXT_DSZ32() 

U554c: tmp15:= SHR_DSZ32(tmp9, 0x00000004) 
U554d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 
U554e: LFNCEWAIT-> tmp4:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp11, 0x00000080) 

U5550: tmp3:= TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U5558
U5551: NOP 
U5552: NOP 

U5554: tmp14:= SAVEUIP_REGOVR(0x01, U5555, 0x0000, 0x00000001) !m0 SEQW GOTO U5b75
U5555: WRITEURAM(tmp2, 0x0085, 64) 
U5556: WRITEURAM(tmp11, 0x0086, 64) 

U5558: tmp4:= SHR_DSZ32(tmp4, 0x00000004) 
U5559: tmp4:= SUB_DSZ32(tmp4, tmp9) 
U555a: tmp4:= SETCC_CONDNLE(tmp4) 

U555c: tmp15:= NOTAND_DSZ32(tmp5, tmp4) 
U555d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 
U555e: tmp4:= SHL_DSZ32(tmp4, 0x00000007) 

U5560: tmp4:= CONCAT_DSZ32(tmp3, tmp4) 
U5561: LFNCEMARK-> WRITEURAM(tmp4, 0x004a, 64) 
U5562: tmp15:= ZEROEXT_DSZ64(tmp11) 

U5564: tmp11:= ZEROEXT_DSZ32() 
U5565: tmp10:= ZEROEXT_DSZ64(tmp13) SEQW SAVEUIP1 U5566SEQW GOTO U69f5
U5566: tmp13:= ZEROEXT_DSZ64(tmp10) 

U5568: tmp15:= CMOVCC_DSZ64_CONDNZ(tmp3, tmp15) 
U5569: tmp2:= MOVEFROMCREG_DSZ64( , 0x57f) 
calc_fast_sha256_start:
U556a: tmp2:= NOTAND_DSZ32(tmp2, 0x00000800) 

U556c: tmp2:= SHR_DSZ32(tmp2, 0x0000000a) 
U556d: tmp15:= OR_DSZ64(tmp2, tmp15) 
U556e: tmp2:= OR_DSZ32(0x00000001, tmp15) 

U5570: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 
U5571: tmp15:= CONCAT_DSZ16(0x00000203, tmp15) 
U5572: tmp15:= CONCAT_DSZ32(tmp15, tmp2) 

U5574: tmp15:= BTR_DSZ64(tmp15, 0x00000031) 
U5575: MOVETOCREG_DSZ64(tmp15, 0x513) SEQW GOTO U7499
U5576: tmp9:= ZEROEXT_DSZ32(0x00030600) 

U5578: MOVETOCREG_DSZ64(tmp9, 0x6a1) 
U5579: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) !m2 
U557a: WRMSLOOPCTRFBR( , 0x000000bf) 

U557c: LFNCEWAIT-> UFLOWCTRL(LDAT_IN) 
U557d: UFLOWCTRL(LDAT_IN) 
U557e: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U557c

U5580: tmp9:= ZEROEXT_DSZ32(0x00030300) 
U5581: MOVETOCREG_DSZ64(tmp9, 0x6a1) !m2 
U5582: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) !m2 

U5584: WRMSLOOPCTRFBR( , 0x0000000f) 
U5585: LFNCEWAIT-> UFLOWCTRL(LDAT_IN) 
U5586: UFLOWCTRL(LDAT_IN) 

U5588: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U5585
U5589: MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 
U558a: NOP 

U558c: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U1f9a
U558d: tmp0:= ZEROEXT_DSZ32(0x00007ac0) 
U558e: tmp1:= ZEROEXT_DSZ32(0x00003420) 

U5590: STADSTGBUF_DSZ64_ASZ16_SC1(tmp0, tmp1, 0x00000000) 
U5591: tmp1:= SUB_DSZ32(0x00000020, tmp1) 
U5592: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp1, U1f9a) SEQW GOTO U5590

U5594: tmp1:= NOTAND_DSZ64(tmp5, tmp1) 
U5595: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U6380) SEQW SAVEUIP1 U5596SEQW GOTO U02ba
U5596: tmp1:= BTS_DSZ32(0x00000000, 0x0000001f) 

U5598: PORTOUT_DSZ32_ASZ16_SC1(0x003c,  , tmp1) !m2 SEQW GOTO U5718
U5599: tmp0:= MOVEFROMCREG_DSZ64( , 0x701) 
U559a: tmp0:= BT_DSZ64(tmp0, 0x0000000d) 

U559c: MOVETOCREG_DSZ64( , 0x00000000, 0x065) 
U559d: tmp3:= NOTAND_DSZ64(0x0000000f, tmp2) 
U559e: tmp3:= ADD_DSZN(0x00000010, tmp3) !m1 

U55a0: tmp3:= MOVEMERGEFLGS_DSZ64(tmp3, tmp0) 
U55a1: tmp1:= CMOVCC_DSZ64_CONDB(tmp3, tmp2) 
U55a2: tmp3:= SUB_DSZN(tmp4, tmp1) !m1 

U55a4: LFNCEMARK-> unk_257( , tmp3) !m1 SEQW URET0
U55a5: tmp14:= ZEROEXT_DSZ32(0x00003bb1) SEQW GOTO U0434
U55a6: tmp2:= unk_cdb(tmp2) 

U55a8: tmp12:= MOVEFROMCREG_DSZ64( , 0x2b2, 32) !m1 
U55a9: tmp3:= AND_DSZ32(0x00070000, tmp12) 
U55aa: tmp3:= SUB_DSZ32(0x00020000, tmp3) 

U55ac: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U304e) 
U55ad: tmp3:= AND_DSZ32(0x000007ff, tmp12) 
U55ae: tmp3:= SUB_DSZ32(tmp2, tmp3) 

U55b0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U304e) 
U55b1: tmp3:= MOVEFROMCREG_DSZ64( , 0x2b8, 32) !m1 
U55b2: CMPUJNZ_DIRECT_NOTTAKEN(tmp3, 0x00000000, U304e) !m1,m2 

U55b4: tmp3:= SHR_DSZ32(tmp2, 0x00000006) 
U55b5: tmp3:= ADD_DSZ32(0x00002298, tmp3) 
U55b6: tmp3:= MOVEFROMCREG_DSZ64( , tmp3) !m1 

U55b8: tmp3:= BT_DSZ64(tmp3, tmp2) 
U55b9: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp3, U304e) 
U55ba: tmp12:= SUB_DSZ32(0x00000001) 

U55bc: MOVETOCREG_DSZ64(tmp12, 0x2b8, 32) !m1 
U55bd: tmp12:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1,m2 
U55be: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp12, 0x00000004, U55c0) !m2 SEQW GOTO U55bd

U55c0: MOVETOCREG_DSZ64( , 0x00000000, 0x2b8, 32) !m1 
U55c1: tmp12:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1,m2 
U55c2: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp12, 0x00000004, U55c4) !m2 SEQW GOTO U55c1

U55c4: tmp12:= MOVEFROMCREG_DSZ64( , 0x2d3, 32) !m1 
U55c5: BTUJB_DIRECT_NOTTAKEN(tmp12, 0x00000007, U55c4) !m0,m2 
U55c6: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x28b, 32) !m1,m2 

U55c8: tmp2:= CONCAT_DSZ16(0x00005000) 
U55c9: tmp2:= unk_cdb(tmp2) SEQW URET0
U55ca: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U55cd

U55cc: TESTUSTATE( , UCODE, 0x0044) ? SEQW GOTO U55d6
U55cd: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U55ce: tmp0:= NOTAND_DSZ32(0x00000003, tmp0) 

U55d0: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x285, 32) !m1 
U55d1: MOVETOCREG_DSZ64( , 0x00000000, 0x20c, 32) !m1 
U55d2: MOVETOCREG_BTS_DSZ64( , 0x0000000a, 0x2e9) !m0,m1 

U55d4: MOVETOCREG_DSZ64( , 0x00000000, 0x38b, 32) !m1 
U55d5: MOVETOCREG_DSZ64( , 0x00000000, 0x392, 32) !m1 
U55d6: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x411) 

U55d8: MOVETOCREG_DSZ64( , 0x00000000, 0x064) 
U55d9: MOVETOCREG_DSZ64( , 0x00000000, 0x106) 
U55da: MOVETOCREG_DSZ64( , 0x00000000, 0x488) 

U55dc: MOVETOCREG_DSZ64( , 0x00000000, 0x680) 
U55dd: MOVETOCREG_DSZ64( , 0x00000000, 0x74d) 
U55de: MOVETOCREG_DSZ64( , 0x00000000, 0x63c) 

U55e0: tmp0:= MOVEFROMCREG_DSZ64( , 0x2bc, 32) !m1 
U55e1: MOVETOCREG_BTR_DSZ64(tmp0, 0x2bc) !m1 
U55e2: tmp1:= MOVEFROMCREG_DSZ64( , 0x63b) 

U55e4: tmp1:= MOVETOCREG_BTS_DSZ64(tmp1, 0x0000001c, 0x63b) 
U55e5: TESTUSTATE( , UCODE, !0x0030) !m0 ? SEQW GOTO U4afa
U55e6: tmp1:= MOVEFROMCREG_DSZ64( , 0x236, 32) !m1 

U55e8: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000002, U55e6) !m0,m2 
U55e9: tmp11:= ZEROEXT_DSZ32(0x00000001) 
U55ea: WRITEURAM(tmp11, 0x0073, 32) !m2 

U55ec: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c2, 32) !m1 
U55ed: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000005, 0x2c2) !m1,m2 
U55ee: NOP SEQW SAVEUIP1 U55f0SEQW GOTO U4406

U55f0: tmp0:= ZEROEXT_DSZ32(0x00011000) 
U55f1: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x631) !m2 
U55f2: NOP 

U55f4: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x634) 
U55f5: MOVETOCREG_DSZ64( , 0x00000000, 0x635) 
U55f6: MOVETOCREG_DSZ64( , 0x00000000, 0x636) 

U55f8: MOVETOCREG_DSZ64( , 0x00000000, 0x637) 
U55f9: MOVETOCREG_DSZ64( , 0x00000000, 0x638) 
U55fa: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x630) !m2 

U55fc: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U4b01
U55fd: tmp11:= ZEROEXT_DSZ32(0x00000002) 
U55fe: WRITEURAM(tmp11, 0x0073, 32) 

U5600: NOP 
U5601: NOP 
U5602: tmp6:= PORTIN_DSZ32_ASZ16_SC1(0x4638) !m2 

U5604: tmp7:= SHR_DSZ32(tmp6, 0x00000016) 
U5605: tmp9:= SHR_DSZ32(tmp6, 0x00000010) 
U5606: tmp9:= AND_DSZ32(0x0000003f, tmp9) 

U5608: tmp9:= CMOVCC_DSZ32_CONDNZ(tmp9, 0x00000003) 
U5609: tmp7:= MOVEMERGEFLGS_DSZ32(tmp7, tmp9) 
U560a: tmp7:= unk_116( , tmp7) 

U560c: tmp7:= unk_226(tmp9, tmp7) 
U560d: unk_114( , tmp7) 
U560e: tmp8:= MOVEFROMCREG_DSZ64( , 0x22a, 32) !m1 

U5610: tmp9:= MOVEFROMCREG_DSZ64( , 0x38c, 32) !m1 
U5611: tmp12:= MOVEFROMCREG_DSZ64( , 0x38e, 32) !m1 
U5612: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U5c58

U5614: MOVETOCREG_DSZ64(tmp7, 0x2c3, 32) !m1 
U5615: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d8, 32) !m1 
U5616: tmp0:= NOTAND_DSZ64(0x003f0000, tmp0) 

U5618: tmp6:= SHL_DSZ32(tmp6, 0x00000008) 
U5619: tmp6:= AND_DSZ32(0x003f0000, tmp6) 
U561a: MOVETOCREG_OR_DSZ64(tmp0, 0x2d8, tmp6) !m1 

U561c: tmp0:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 
U561d: tmp0:= OR_DSZ32(0x00000300, tmp0) 
U561e: MOVETOCREG_DSZ64(tmp0, 0x238, 32) !m1 

U5620: tmp0:= MOVEFROMCREG_DSZ64( , 0x394, 32) !m1 
U5621: tmp0:= BTS_DSZ32(tmp0, 0x00000016) 
U5622: MOVETOCREG_DSZ64(tmp0, 0x394, 32) !m1 

U5624: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000001d, U1919) !m2 
U5625: tmp11:= ZEROEXT_DSZ32(0x00000003) 
U5626: WRITEURAM(tmp11, 0x0073, 32) !m2 

U5628: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp8, 0x00000009, U200a) !m1 
U5629: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1 
U562a: tmp1:= OR_DSZ32(tmp0, 0x38000000) 

U562c: tmp0:= OR_DSZ32(tmp1, 0xc0000040) 
U562d: SAVEUIP( , 0x00, U191c) SEQW GOTO U0302
U562e: tmp2:= OR_DSZ32(tmp2, 0x00000004) 

U5630: ROVR<- tmp12:= CONCAT_DSZ32(tmp2, tmp12) SEQW SAVEUIP1 U5631
U5631: tmp2:= BT_DSZ64(tmp3, 0x00000024) 
U5632: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00010000) 

U5634: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U5639
U5635: tmp12:= OR_DSZ64(tmp2, tmp12) 
U5636: tmp12:= NOTAND_DSZ64(tmp12, tmp5) 

U5638: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp12, U2711) 
U5639: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000022, U563a) !m0,m2 SEQW GOTO U563d
U563a: tmp2:= MOVEFROMCREG_DSZ64( , 0x7ff) 

U563c: MOVETOCREG_BTR_DSZ64(tmp2, 0x0000000b, 0x7ff) !m0,m2 SEQW SAVEUIP1 U563dSEQW GOTO U0164
U563d: tmp2:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U563e: tmp2:= NOTAND_DSZ32(0x00000001, tmp2) 

U5640: tmp3:= AND_DSZ32(0x00000001, tmp5) 
U5641: tmp2:= MOVETOCREG_OR_DSZ64(tmp2, 0x6c3, tmp3) !m2 SEQW SAVEUIP1 U5642SEQW GOTO U02ba
U5642: tmp1:= unk_d9b(0x000000c0) !m2 

U5644: tmp1:= NOTAND_DSZ32(0x00800012, tmp1) 
U5645: tmp2:= SHR_DSZ64(tmp5, 0x0000000f) 
U5646: tmp2:= AND_DSZ32(0x00800002, tmp2) 

U5648: tmp1:= OR_DSZ32(tmp2, tmp1) 
U5649: tmp2:= SHL_DSZ32(tmp5, 0x00000001) 
U564a: tmp2:= AND_DSZ32(0x00000010, tmp2) 

U564c: tmp1:= OR_DSZ32(tmp2, tmp1) 
U564d: tmp1:= unk_d9f(0x000000c0) !m2 
U564e: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 

U5650: WRITEURAM(tmp5, 0x0041, 64) SEQW SAVEUIP1 U5651SEQW GOTO U32cd
U5651: tmp1:= MOVEFROMCREG_DSZ64( , 0x2e6, 32) !m1 
U5652: tmp1:= NOTAND_DSZ32(0x00000010, tmp1) 

U5654: tmp3:= SHR_DSZ32(tmp5, 0x00000013) 
U5655: tmp3:= AND_DSZ32(0x00000010, tmp3) 
U5656: MOVETOCREG_OR_DSZ64(tmp1, 0x2e6, tmp3) !m1 SEQW GOTO U324e

U5658: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2d6) !m0,m1,m2 
U5659: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U6380) !m1 SEQW SAVEUIP1 U565aSEQW GOTO U628e
U565a: MOVETOCREG_DSZ64(tmp3, 0x2e0, 32) !m1,m2 

U565c: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2d5) !m0,m1,m2 SEQW GOTO U332d
U565d: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U5951) 
U565e: tmp1:= CONCAT_DSZ8(0x00000004, tmp2) 

U5660: SAVEUIP_REGOVR( , 0x01, U5661, 0xdca9) !m0 SEQW GOTO U3722
U5661: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U5662: tmp10:= READAFLAGS( , tmp10) !m2 

U5664: MOVETOCREG_DSZ64(0x00000009, 0x000) 
U5665: tmp9:= MOVE_DSZ32(tmp10) 
U5666: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 

U5668: tmp5:= ZEROEXT_DSZ32(0x00000021) SEQW GOTO U0186
U5669: tmp14:= READUIP_REGOVR(0x01) !m0 
U566a: LFNCEWTMRK-> tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 

U566c: tmp8:= UFLOWCTRL(tmp8, tmp5, LDAT_IN) 
U566d: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U5671
U566e: STADSTGBUF_DSZ64_ASZ16_SC1(tmp3,  , tmp5) 

U5670: tmp3:= ADD_DSZ32(0x00000020, tmp3) 
U5671: tmp4:= ADD_DSZ64(0x00000008, tmp4) 
U5672: SYNCWAIT-> tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U566a

U5674: MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 SEQW URET1
U5675: SYNCFULL-> MOVETOCREG_DSZ64(tmp10, tmp8) SEQW GOTO U2162
U5676: tmp13:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004b8, mode=0x01, tmp12) 

U5678: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001b4, mode=0x01, tmp13) 
U5679: tmp4:= BTS_DSZ32(tmp4, 0x0000001f) 
U567a: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000002cc, mode=0x01, tmp13) 

U567c: tmp10:= SELECTCC_DSZ32_CONDNB(tmp4, tmp10) 
U567d: tmp10:= BTC_DSZ32(tmp10, 0x00000003) 
U567e: tmp11:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001ac, mode=0x01, tmp13) 

U5680: tmp15:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001bc, mode=0x01, tmp13) 
U5681: tmp15:= AND_DSZ32(0x00008000, tmp15) 
U5682: tmp15:= SHL_DSZ32(tmp15, 0x00000010) 

U5684: tmp11:= SHL_DSZ32(tmp11, 0x00000017) 
U5685: tmp15:= OR_DSZ32(tmp11, tmp15) 
U5686: tmp15:= OR_DSZ32(tmp10, tmp15) 

U5688: tmp15:= CONCAT_DSZ32(tmp15, tmp4) 
U5689: WRITEURAM(tmp15, 0x0043, 64) 
U568a: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000368, mode=0x01, tmp13) 

U568c: tmp11:= AND_DSZ32(0x00002000, tmp10) 
U568d: tmp4:= SELECTCC_DSZ64_CONDZ(tmp11, tmp4) 
U568e: tmp11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000370, mode=0x01, tmp13) 

U5690: ROVR<- tmp11:= OR_DSZ64(tmp4, tmp11) SEQW SAVEUIP1 U5691SEQW GOTO U5751
U5691: WRITEURAM(tmp11, 0x0054, 64) 
U5692: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001c4, mode=0x01, tmp13) 

U5694: tmp4:= CONCAT_DSZ32(tmp4) 
U5695: SAVEUIP_REGOVR( , 0x01, U5696, 0xb4d1) !m0 SEQW GOTO U5e6d
U5696: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000025c, mode=0x01, tmp13) 

U5698: tmp4:= SHL_DSZ64(tmp4, 0x0000002a) 
U5699: WRITEURAM(tmp4, 0x0014, 64) 
U569a: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000018, mode=0x01, tmp13) 

U569c: WRITEURAM(tmp4, 0x0015, 64) 
U569d: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000020, mode=0x01, tmp13) 
U569e: WRITEURAM(tmp4, 0x0016, 64) 

U56a0: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002c0, mode=0x01, tmp13) 
U56a1: SYNCFULL-> WRITEURAM(tmp4, 0x004d, 64) SEQW GOTO U15f0
U56a2: tmp1:= ZEROEXT_DSZ32(0xffffffffffffffff) 

U56a4: CMPUJZ_DIRECT_NOTTAKEN(rax, U10cd, tmp1) !m2 
U56a5: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000be40) !m2 
U56a6: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U4ab4) 

U56a8: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000001, U4ad4) 
U56a9: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000002, U56aa) !m0,m2 SEQW GOTO U2769
U56aa: MOVETOCREG_DSZ64( , 0x00000000, 0x20f, 32) !m1,m2 

U56ac: tmp4:= PORTIN_DSZ32_ASZ16_SC1(0x50c8) !m2 
U56ad: tmp1:= READURAM( , 0x0020, 64) 
U56ae: tmp1:= AND_DSZ32(0x00007ffe, tmp1) 

U56b0: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 
U56b1: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp4, U5801, tmp1) !m2 
U56b2: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000be00) !m2 

U56b4: LFNCEWTMRK-> tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000004) 
U56b5: tmp5:= MOVEFROMCREG_DSZ64( , tmp4) !m1 
U56b6: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000010) 

U56b8: tmp6:= ADD_DSZ64(tmp5, tmp6) 
U56b9: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000010,  , tmp6) 
U56ba: tmp6:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x0000001a) 

U56bc: tmp6:= ADD_DSZ16(0x00000001, tmp6) 
U56bd: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x0000001a,  , tmp6) 
U56be: tmp6:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp2, 0x0000001f) 

U56c0: tmp2:= ADD_DSZ32(0x00000020, tmp2) 
U56c1: LFNCEMARK-> tmp6:= AND_DSZ32(0x000000c0, tmp6) 
U56c2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U56c4) SEQW GOTO U56b4

U56c4: tmp7:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000be80) !m2 
U56c5: tmp6:= AND_DSZ32(0x00000080, tmp6) 
U56c6: tmp2:= MOVEMERGEFLGS_DSZ64(tmp2, tmp6) 

U56c8: tmp2:= CMOVCC_DSZ32_CONDZ(tmp2, tmp7) 
U56c9: LFNCEWAIT-> STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be00,  , tmp2) !m2 
U56ca: tmp1:= ZEROEXT_DSZ32(0x00000001) 

U56cc: LFNCEMARK-> STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be40,  , tmp1) !m2 
U56cd: NOP SEQW GOTO U21fe
U56ce: tmp15:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000390, tmp12) 

U56d0: tmp6:= READURAM( , 0x0010, 64) 
U56d1: tmp6:= NOTAND_DSZ64(0x00000fc0, tmp6) 
U56d2: tmp15:= NOTAND_DSZ64(tmp6, tmp15) 

U56d4: tmp11:= ZEROEXT_DSZ32() 
U56d5: tmp4:= MOVEFROMCREG_DSZ64( , 0x105) 
U56d6: tmp4:= BT_DSZ32(tmp4, 0x00000002) 

U56d8: tmp12:= MOVEMERGEFLGS_DSZ64(tmp12, tmp4) SEQW SAVEUIP1 U56d9SEQW GOTO U69f5
U56d9: tmp5:= CMOVCC_DSZ64_CONDNZ(tmp3, tmp15) 
U56da: tmp6:= LDPPHYS_DSZ8_ASZ64_SC1(0x00000020, mode=0x01, tmp5) !m2 

U56dc: tmp6:= BTR_DSZ32(tmp6, 0x00000000) 
U56dd: STADPPHYS_DSZ8_ASZ64_SC1(0x00000020, mode=0x01, tmp5, tmp6) !m2 
U56de: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x28b, 32) !m1,m2 SEQW SAVEUIP0 U56e0SEQW GOTO U0139

U56e0: tmp6:= ZEROEXT_DSZ64(tmp12) 
U56e1: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U56e2: tmp9:= ZEROEXT_DSZ32(0x00000200) 

U56e4: tmp8:= ZEROEXT_DSZ32() 
U56e5: tmp0:= ZEROEXT_DSZ32() 
U56e6: tmp7:= LDPPHYS_DSZ32_ASZ64_SC1(tmp8, mode=0x01, tmp5) !m2 

U56e8: STADPPHYS_DSZ32_ASZ64_SC1(tmp8, mode=0x01, tmp5, 0x00000000) !m2 
U56e9: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9, tmp4) 
U56ea: tmp10:= OR_DSZ32(tmp7, tmp10) 

U56ec: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9, tmp4, tmp10) 
U56ed: tmp1:= unk_21f(tmp7) 
U56ee: tmp1:= unk_1d6(tmp1) 

U56f0: tmp1:= SHL_DSZ32(tmp1, 0x00000003) 
U56f1: tmp7:= SHR_DSZ32(tmp7, tmp1) 
U56f2: tmp7:= unk_1d6(tmp7) 

U56f4: tmp1:= OR_DSZ32(tmp7, tmp1) 
U56f5: tmp2:= SHL_DSZ32(tmp8, 0x00000003) 
U56f6: tmp2:= OR_DSZ32(tmp1, tmp2) 

U56f8: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp7) 
U56f9: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp2, tmp0) 
U56fa: tmp8:= ADD_DSZ32(0x00000004, tmp8) 

U56fc: tmp9:= ADD_DSZ32(0x00000010, tmp9) 
U56fd: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U56e6
U56fe: tmp12:= ZEROEXT_DSZ64(tmp6) 

U5700: tmp14:= SAVEUIP(0x01, U35e8) !m0 SEQW GOTO U6141
U5701: CMPUJZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U082e) 
U5702: tmp9:= SHL_DSZ64(tmp4, 0x0000001d) 

U5704: tmp4:= ZEROEXT_DSZ32(0x00000002) 
FUN_ucode_0005705:
U5705: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000003, U57a5) !m0,m2 
U5706: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U1d11) !m2 

U5708: tmp5:= TEST_DSZ64( , tmp15) 
U5709: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp5, U082e) 
FUN_ucode_000570a:
U570a: tmp5:= NOTAND_DSZ64(0x00000fff, tmp15) 

U570c: SAVEUIP( , 0x00, U2904) SEQW GOTO U1d12
U570d: tmp1:= ZEROEXT_DSZ32(0x00000000) 
U570e: tmp2:= ZEROEXT_DSZ32(0x00000020) 

U5710: tmp10:= ZEROEXT_DSZ32(0x000031be) 
U5711: SYNCWAIT-> SAVEUIP_REGOVR(0x01, U5712, 0x0003) !m0 SEQW GOTO U02ba
U5712: tmp3:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 

U5714: tmp3:= BT_DSZN(tmp3, tmp1) !m1 
U5715: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp3, tmp10) 
U5716: PORTOUT_DSZ32_ASZ16_SC1(0x0000, tmp2, tmp5) !m1,m2 

U5718: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 SEQW GOTO U6380
U5719: WRITEURAM(tmp11, 0x006b, 64) !m2 
U571a: tmp1:= CONCAT_DSZ8(tmp8, tmp5) 

U571c: tmp1:= CONCAT_DSZ16(tmp7, tmp1) 
U571d: tmp1:= CONCAT_DSZ32(tmp11, tmp1) 
U571e: WRITEURAM(tmp1, 0x002c, 64) !m2 

U5720: tmp0:= MOVE_DSZ32(0x00005be5) 
FUN_ucode_0005721:
U5721: WRITEURAM(tmp3, 0x006c, 64) !m2 
U5722: tmp0:= CONCAT_DSZ16(0x000000db, tmp0) 

U5724: WRITEURAM(tmp13, 0x0005, 32) !m2 SEQW GOTO U2712
U5725: tmp14:= READUIP_REGOVR(0x01) !m0 
U5726: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x00000050) 

U5728: tmp9:= BTR_DSZ64(tmp9, 0x0000001a) 
U5729: tmp6:= BT_DSZ32(tmp9, 0x0000001b) 
U572a: tmp14:= READUIP_REGOVR(0x01) !m0 

U572c: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 
U572d: tmp15:= SELECTCC_DSZ64_CONDB(tmp6, tmp7) 
U572e: unk_25c( , tmp15) 

U5730: tmp15:= SHR_DSZ64(tmp15, 0x00000020) SEQW URET1
FUN_ucode_0005731:
U5731: tmp14:= ZEROEXT_DSZ32(0x00000e5e) SEQW GOTO U0434
U5732: SYNCFULL-> tmpv2:= MOVEFROMCREG_DSZ64( , 0x529) 

U5734: SAVEUIP( , 0x01, U3b26) !m0 SEQW GOTO U6080
U5735: tmp3:= BTR_DSZ64(tmp3, 0x0000000b) 
U5736: tmp15:= SELECTCC_DSZ32_CONDNB(tmp3, 0x08000000) 

U5738: tmp15:= CONCAT_DSZ32(tmp15) 
U5739: tmp2:= OR_DSZ64(tmp15, tmp2) 
U573a: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xffffffffffffffe8, mode=0x01,  , tmp2) 

U573c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xffffffffffffffe0, mode=0x01,  , tmp9) 
U573d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xffffffffffffffd8, mode=0x01,  , tmp3) 
U573e: tmp0:= ZEROEXT_DSZ32(0x00000701) 

U5740: tmp3:= ZEROEXT_DSZ32(0x00000028) SEQW GOTO U31f1
FUN_ucode_0005741:
U5741: tmp15:= ZEROEXT_DSZ16(0x0000000d) 
U5742: MOVETOCREG_DSZ64(tmp15, 0x2da, 32) !m1 

U5744: tmp15:= SHL_DSZ32(tmp15, 0x00000018) 
U5745: tmp15:= OR_DSZ32(0x00009e1d, tmp15) 
U5746: tmp15:= CONCAT_DSZ32(0x000e88c8, tmp15) 

U5748: tmp13:= OR_DSZ64(tmp15, tmp13) 
U5749: WRITEURAM(tmp13, 0x0070, 64) 
U574a: SYNCMARK-> MOVETOCREG_DSZ64(tmp13, 0x2c4, 32) !m1 

U574c: MOVETOCREG_SHR_DSZ64(tmp13, 0x00000020, 0x008) SEQW URET0
U574d: SAVEUIP( , 0x01, U1f9a) !m0 SEQW GOTO U5669
U574e: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp7, 0x7fe) 

U5750: BTUJB_DIRECT_NOTTAKEN(tmp7, 0x00000011, U33c1) !m1,m2 SEQW GOTO U1e8a
U5751: tmp14:= READUIP_REGOVR(0x01) !m0 
U5752: tmpv2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000048, mode=0x1c, tmpv1) 

U5754: WRITEURAM(tmpv2, 0x0018, 64) 
U5755: tmpv2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000068, mode=0x1c, tmpv1) 
U5756: WRITEURAM(tmpv2, 0x001a, 64) 

U5758: tmpv2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000058, mode=0x1c, tmpv1) 
U5759: WRITEURAM(tmpv2, 0x0017, 64) 
U575a: tmpv2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000078, mode=0x1c, tmpv1) 

U575c: WRITEURAM(tmpv2, 0x0019, 64) SEQW URET1
U575d: SAVEUIP( , 0x00, U5b34) SEQW GOTO U152d
U575e: SYNCFULL-> MOVETOCREG_OR_DSZ64( , 0x201, tmpv1) !m1,m2 

U5760: MOVETOCREG_OR_DSZ64( , 0x204, tmpv1) !m1,m2 SEQW GOTO U009d
U5761: tmpv0:= AND_DSZ64(0x00000c2a, tmpv2) 
U5762: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv0, U2b29) 

U5764: tmpv1:= AND_DSZ32(0x00000014, tmpv2) 
U5765: tmpv1:= SELECTCC_DSZ32_CONDZ(tmpv1, tmpv2) 
U5766: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000000, U2b29) !m1 

U5768: LFNCEWAIT-> tmpv1:= READURAM( , 0x002b, 64) 
FUN_ucode_0005769:
U5769: tmpv1:= AND_DSZ32(0x01ffffff, tmpv1) 
U576a: tmpv1:= SELECTCC_DSZ32_CONDNZ(tmpv1, tmpv2) 

U576c: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000000, U2b29) !m1 SEQW URET1
U576d: tmp2:= SHR_DSZ32(tmp0, 0x00000010) SEQW GOTO U2c01
U576e: NOP 

U5770: NOP SEQW GOTO U20a8
U5771: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp10, 0x2c1, 32) !m1 
U5772: tmp10:= READURAM( , 0x004b, 64) 

U5774: WRITEURAM(tmp10, 0x0062, 64) 
U5775: tmp10:= RDSEGFLD(UNK_SEG_11, BASE) 
U5776: tmp5:= MOVEFROMCREG_DSZ64( , 0x701) 

U5778: tmp5:= SHR_DSZ32(tmp5, 0x0000001c) 
FUN_ucode_0005779:
U5779: tmp5:= AND_DSZ32(0x00000003, tmp5) 
U577a: tmp5:= OR_DSZ64(tmp5, tmp10) 

U577c: WRITEURAM(tmp5, 0x0063, 64) SEQW GOTO U11b6
U577d: tmp0:= ZEROEXT_DSZ32(0x00011000) 
U577e: MOVETOCREG_DSZ64(tmp0, 0x631) !m2 

U5780: MOVETOCREG_DSZ64( , 0x00000000, 0x634) !m2 
U5781: MOVETOCREG_DSZ64( , 0x00000000, 0x635) !m2 
U5782: MOVETOCREG_DSZ64( , 0x00000000, 0x636) !m2 

U5784: MOVETOCREG_DSZ64( , 0x00000000, 0x637) !m2 
U5785: MOVETOCREG_DSZ64( , 0x00000000, 0x638) !m2 
U5786: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x630) !m2 

U5788: SAVEUIP( , 0x00, U61aa) SEQW GOTO U4c2a
U5789: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U578a: tmp6:= MOVEFROMCREG_DSZ64( , tmp8) !m1 

U578c: tmp8:= SHR_DSZ32(tmp8, 0x00000010) 
U578d: tmp9:= MOVEFROMCREG_DSZ64( , tmp8) !m1 
U578e: tmp9:= CONCAT_DSZ32(tmp9, tmp6) 

U5790: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp9) 
U5791: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U5792: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U5789

U5794: NOP SEQW URET0
rsa_signing_error:
U5795: MOVETOCREG_DSZ64(tmp4, 0x79d) SEQW GOTO U06ae
U5796: tmp0:= READURAM( , 0x000e, 64) 

U5798: tmp14:= ZEROEXT_DSZ32(0x00003d12) SEQW GOTO U0434
U5799: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U579a: tmp6:= MOVEFROMCREG_DSZ64( , tmp8) !m1 

U579c: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp6) 
U579d: tmp8:= SHR_DSZ32(tmp8, 0x00000010) 
U579e: tmp6:= MOVEFROMCREG_DSZ64( , tmp8) !m1 

U57a0: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020,  , tmp6) 
U57a1: tmp12:= ADD_DSZ32(0x00000040, tmp12) 
U57a2: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U5799

U57a4: NOP SEQW URET0
U57a5: SAVEUIP( , 0x00, U0444) SEQW GOTO U1d12
U57a6: tmp0:= OR_DSZ16(0x00008080, tmp8) 

U57a8: MOVETOCREG_DSZ64(tmp0, 0x48c) SEQW GOTO U21fe
U57a9: tmp2:= ZEROEXT_DSZ32(0x00000002) 
U57aa: MOVETOCREG_BTS_DSZ64( , 0x0000000a, 0x29e) !m0,m1,m2 

U57ac: TESTUSTATE( , VMX, 0x0002) !m2 ? SEQW GOTO U5fe0
U57ad: tmp0:= ZEROEXT_DSZ32(0x0000b000) 
U57ae: tmp2:= CONCAT_DSZ8(0x00000002, tmp2) 

U57b0: tmp2:= BTS_DSZ32(tmp2, 0x0000001f) 
U57b1: tmp6:= ZEROEXT_DSZ32(0x0000003a) 
U57b2: tmp1:= SAVEUIP_REGOVR(0x01, U57b4, 0x00f6) !m0 

U57b4: tmp4:= SAVEUIP( , 0x01, U079d) !m0 SEQW GOTO U5e9c
U57b5: tmp15:= STC() 
U57b6: tmp2:= READURAM( , 0x005c, 64) 

U57b8: tmp2:= BT_DSZ32(tmp2, 0x00000003) 
U57b9: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0xfffffffffffffff8) 
U57ba: tmp2:= ADD_DSZ32(0x00000084, tmp2) 

U57bc: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000040,  , 0x00000000) 
U57bd: tmp2:= SUB_DSZ32(0x00000001, tmp2) 
U57be: tmp7:= ADD_DSZ64(0x00000004, tmp7) 

U57c0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U5ae5) SEQW GOTO U57bc
U57c1: tmp15:= READURAM( , 0x0053, 64) !m2 
U57c2: tmp15:= NOTAND_DSZ32(0x00000079, tmp15) 

U57c4: tmp15:= OR_DSZ32(0x0000001a, tmp15) 
U57c5: WRITEURAM(tmp15, 0x0053, 32) !m2 
U57c6: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U57c8: SYNCFULL-> MOVETOCREG_BTR_DSZ64(tmp0, 0x00000005, 0x6c3) !m2 
U57c9: PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 
U57ca: MOVETOCREG_BTS_DSZ64( , 0x00000004, 0x29d) !m1,m2 

U57cc: tmp15:= ZEROEXT_DSZ32(0x000000ee) SEQW GOTO U6279
U57cd: tmp12:= READURAM( , 0x0057, 64) 
U57ce: tmp4:= MOVEFROMCREG_DSZ64( , 0x513) 

U57d0: tmp3:= ZEROEXT_DSZ32(0x000000ff) 
U57d1: tmp3:= CONCAT_DSZ32(tmp3, 0xfffffffffffff000) 
U57d2: tmp4:= AND_DSZ64(tmp3, tmp4) 

U57d4: tmp3:= SUB_DSZ32(0x00000800, tmp8) 
U57d5: tmp3:= SHL_DSZ32(tmp3, 0x00000004) 
U57d6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, tmp3, tmp5) 

U57d8: tmp14:= SAVEUIP(0x01, U320c) !m0 SEQW URET0
U57d9: tmp0:= CONCAT_DSZ16(0x0000005d) SEQW GOTO U3b59
U57da: tmp5:= MOVE_DSZ32() 

U57dc: tmp9:= ZEROEXT_DSZ32(tmp10) SEQW GOTO U0186
U57dd: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x63a) !m0 
U57de: MOVETOCREG_OR_DSZ64( , 0x00000007, 0x63e) !m0 

U57e0: LFNCEWTMRK-> unk_dff() 
U57e1: tmp4:= ZEROEXT_DSZ32(0x00000037) 
U57e2: MOVETOCREG_DSZ64(tmp4, 0x00b) 

U57e4: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U57e5: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
U57e6: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x6c5) !m2 

U57e8: WRITEURAM( , 0x00000000, 0x004a, 64) !m2 SEQW GOTO U50c0
U57e9: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2) 
U57ea: tmp15:= BT_DSZ64(tmp1, 0x00000000) 

U57ec: tmp15:= SELECTCC_DSZ64_CONDNB(tmp15, tmp15) 
U57ed: tmp15:= AND_DSZ64(tmp4, tmp15) 
U57ee: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U379c) 

U57f0: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, tmp3) 
U57f1: tmp12:= SUBR_DSZ64(tmp12, IMM_MACRO_01) !m0 SEQW URET1
U57f2: tmp3:= ADD_DSZ32(0x00000001, tmp3) 

FUN_ucode_00057f4:
U57f4: tmp2:= ADD_DSZ64(0x00000008, tmp2) SEQW GOTO U57e9
U57f5: tmp3:= SELECTCC_DSZ32_CONDB(tmp1, 0x00000018) 
U57f6: rax:= OR_DSZ32(0x00000003, tmp3) 

U57f8: tmp3:= BT_DSZ64(tmp2, 0x0000003b) 
U57f9: tmp3:= MOVEMERGEFLGS_DSZ32(0x00000240, tmp3) 
U57fa: tmp3:= CMOVCC_DSZ32_CONDNB(tmp3, 0x00000440) 

U57fc: tmp3:= MOVEMERGEFLGS_DSZ32(tmp3, tmp1) 
gen_key_step:
U57fd: rbx:= CMOVCC_DSZ32_CONDNB(tmp3, 0x00000240) 
U57fe: tmp3:= MOVEMERGEFLGS_DSZ32(0x00000240, tmp1) 

U5800: rcx:= CMOVCC_DSZ32_CONDB(tmp3, 0x00000440) SEQW GOTO U1bd0
U5801: tmp13:= SAVEUIP(0x00, U64e2) 
U5802: tmp8:= PORTIN_DSZ32_ASZ16_SC1(0x50d0) !m2 

U5804: tmp6:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp8, 0x0000001e) 
U5805: LFNCEWAIT-> tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, 0x00000004) 
U5806: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000004, U2885) !m1 

U5808: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000d, U1f62) !m2 
U5809: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000008) 
U580a: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000009, U276a) !m1 

U580c: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000006, U2289) !m0,m1 SEQW GOTO U64e2
U580d: tmp0:= MOVEFROMCREG_DSZ64( , 0x070) 
U580e: tmp15:= MOVEFROMCREG_DSZ64( , 0x01c) 

U5810: tmp0:= CONCAT_DSZ32(tmp15, tmp0) 
U5811: WRITEURAM(tmp0, 0x002a, 64) !m2 
U5812: SAVEUIP( , 0x01, U5ba4) !m0 

U5814: tmp12:= ZEROEXT_DSZ32(0x000003bf) 
U5815: MOVETOCREG_DSZ64(tmp12, 0x00b) !m2 
U5816: tmp12:= ZEROEXT_DSZ32(0x00000003) 

U5818: MOVETOCREG_DSZ64(tmp12, 0x005) !m2 SEQW URET1
U5819: tmp13:= SAVEUIP(tmp10, 0x00, U2d62) SEQW GOTO U6332
U581a: tmp1:= LDZX_DSZ32_ASZ32_SC1(tmp4, tmp6) 

U581c: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, tmp6, tmp1) SEQW GOTO U39f1
U581d: tmp6:= READURAM( , 0x0048, 64) 
U581e: tmp6:= SUB_DSZ32(0x00000001, tmp6) 

U5820: WRITEURAM(tmp6, 0x0048, 32) !m2 
U5821: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U5822) SEQW GOTO U61bc
U5822: tmp7:= ADD_DSZ64(0x000000e0, tmp7) 

U5824: tmp0:= ZEROEXT_DSZ32(0x000000ff) 
U5825: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0, tmp0) 
U5826: tmp0:= SUB_DSZ32(0x00000001, tmp0) 

U5828: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp0, U5e1d) SEQW GOTO U5825
U5829: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U582a: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U582c: tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000001, 0x48c) 
U582d: tmp6:= AND_DSZ32(0x00000001, tmp5) 
U582e: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U3749) 

U5830: tmp12:= unk_6a0() 
U5831: WRTAGW-> tmp12:= unk_ccc(tmp10) 
U5832: tmm0:= unk_743() !m2 

U5834: tmm0:= FMOV( , 0x00000091) !m0 SEQW GOTO U1bd0
U5835: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U5836: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U5838: tmp4:= NOTAND_DSZ16(0x00000200, tmp4) 
U5839: tmp9:= unk_6a0() 
U583a: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000004, 0x48c) 

U583c: tmp2:= AND_DSZ32(0x00000004, tmp5) 
U583d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U57a6) 
U583e: mm0:= FMOV( , tmm1) !m0 

U5840: LFNCEWAIT-> mm7:= FMOV( , tmm0) !m0 SEQW GOTO U1bd0
U5841: rax:= ZEROEXT_DSZ32(0x0000000f) 
U5842: tmp1:= BT_DSZ64(tmp2, 0x0000003b) 

U5844: tmp3:= MOVEMERGEFLGS_DSZ32(0x000002c0, tmp1) 
U5845: tmp3:= CMOVCC_DSZ32_CONDB(tmp3, 0x00000240) 
U5846: tmp1:= READURAM( , 0x0023, 64) 

U5848: tmp1:= BT_DSZ64(tmp1, 0x00000008) 
U5849: tmp1:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00000080) 
U584a: rbx:= ADD_DSZ32(tmp1, tmp3) 

U584c: rcx:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000100) SEQW GOTO U1bd0
U584d: tmp0:= OR_DSZ16(0x00008080, tmp8) 
U584e: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x48c) 

U5850: mm7:= FMOV( , tmm1) !m0 
U5851: tmp5:= ZEROEXT_DSZ32(0x0000c001) 
U5852: mm0:= unk_7c2(mm5, 0x00000000) 

U5854: mm0:= unk_69d( , 0x00000000) 
U5855: mm6:= unk_7ea(0x00000000) 
U5856: tmp6:= ADD_DSZ32(0x00006000, tmp6) 

U5858: LFNCEWAIT-> mm0:= unk_7c2(mm6, IMM_MACRO_31) !m0 SEQW GOTO U21fe
U5859: tmp9:= unk_6a0() 
U585a: tmp2:= SHR_DSZ32(tmp8, 0x00000003) 

U585c: tmm3:= unk_702(mm2, tmm3) 
U585d: tmm5:= unk_496(tmm5, tmm1) 
U585e: tmm5:= unk_6e1(tmm3, tmm5) 

U5860: tmm4:= unk_702(mm2, tmm4) 
U5861: tmm6:= unk_6e1(tmm4, tmm6) 
U5862: tmm1:= unk_6c9(tmm5, tmm6) 

U5864: mm0:= unk_689(tmm4, tmm1) !m2 SEQW GOTO U1bd0
U5865: tmp1:= MOVEFROMCREG_DSZ64( , 0x01a) !m2 
U5866: tmp0:= MOVEFROMCREG_DSZ64( , 0x065) !m2 

U5868: tmp1:= SUB_DSZN(tmp0, tmp1) !m1 
U5869: tmp0:= READURAM( , 0x0037, 64) !m2 
U586a: CMPUJZ_DIRECT_NOTTAKEN(tmp1, U5ad2, tmp0) !m2 

U586c: tmp0:= ZEROEXT_DSZ32(0x00030300) 
U586d: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x6a1) !m2 
U586e: tmp1:= ZEROEXT_DSZ32(0x00001a09) 

U5870: tmp1:= BTS_DSZ32(tmp1, 0x00000011) SEQW GOTO U3741
U5871: MOVETOCREG_DSZ64(tmp0, 0x7f6) 
U5872: MOVETOCREG_DSZ64(tmp1, 0x7ff) 

U5874: MOVETOCREG_DSZ64(tmp11, 0x7fe) 
FUN_ucode_0005875:
U5875: unk_13f(tmp11) !m2 
U5876: MOVETOCREG_DSZ64(tmp4, 0x7f9, 32) !m1 

U5878: MOVETOCREG_DSZ64(tmp13, 0x7c5) 
U5879: MOVETOCREG_DSZ64(tmp14, 0x7f8) 
U587a: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x065) 

U587c: SAVEUIP( , 0x01, U2e04) !m0 SEQW GOTO U0164
U587d: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U587e: tmp5:= SHR_DSZ32(tmp0, 0x0000000a) 

U5880: tmp5:= AND_DSZ32(0x00000200, tmp5) 
U5881: tmp1:= AND_DSZ32(0x003c4dd7, tmp0) 
FUN_ucode_0005882:
U5882: tmp1:= OR_DSZ32(0x00003000, tmp1) 

U5884: tmp2:= AND_DSZ32(0x003c7fd7, tmp0) 
U5885: tmp1:= OR_DSZ32(tmp5, tmp1) 
U5886: tmp0:= unk_207(tmp1, tmp2) 

U5888: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x1a, tmp0) !m0,m1 
U5889: rsp:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 SEQW UEND0
U588a: tmp2:= TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U5890

U588c: tmp0:= READURAM( , 0x0042, 64) 
U588d: tmp0:= BT_DSZ32(tmp0, 0x0000001f) 
U588e: tmp2:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000002) 

U5890: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1 
U5891: tmp0:= BT_DSZ32(tmp0, 0x00000003) 
U5892: tmp2:= SELECTCC_DSZ32_CONDNB(tmp0, tmp2) 

U5894: tmp2:= OR_DSZ32(0x00000001, tmp2) 
U5895: tmp2:= NOTAND_DSZN(tmp2, rcx) !m1 
U5896: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U4671) 

U5898: tmp5:= AND_DSZ32(0x00000002, rcx) 
U5899: tmp2:= NOTAND_DSZ32(rax, 0x000000f0) 
U589a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U017a) 

U589c: LFNCEMARK-> tmp3:= AND_DSZ32(0x00000001, rcx) 
U589d: tmp0:= OR_DSZ32(rax) 
U589e: tmp2:= READURAM( , 0x005c, 64) 

U58a0: tmp2:= BT_DSZ32(tmp2, 0x00000019) 
U58a1: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, tmp0) 
U58a2: tmp2:= AND_DSZ32(0x000000f0, tmp2) 

U58a4: tmp2:= SUB_DSZ32(0x00000020, tmp2) 
U58a5: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp2, U58b0) 
U58a6: WRMSLOOPCTRFBR( , 0x0000003f) 

U58a8: tmp2:= ZEROEXT_DSZ32(0x0000005f) 
U58a9: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, tmp2) 
U58aa: tmp2:= SUBR_DSZ64(tmp2, IMM_MACRO_01) !m0 

U58ac: MOVETOCREG_DSZ64( , 0x00000000, tmp2) 
U58ad: tmp2:= SUBR_DSZ64(tmp2, 0x00000001) SEQW GOTO U58a9
U58ae: MOVETOCREG_DSZ64( , 0x00000000, 0x009) 

U58b0: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U58b1: tmp10:= READAFLAGS( , tmp10) !m2 
U58b2: tmp2:= SHR_DSZ32(tmp10, 0x00000009) 

U58b4: tmp2:= OR_DSZ32(tmp2, tmp3) 
U58b5: tmp4:= MOVEFROMCREG_DSZ64( , 0x01d) 
U58b6: tmp4:= SHR_DSZ32(tmp4, 0x00000001) 

U58b8: tmp2:= AND_DSZ32(tmp2, tmp4) 
U58b9: tmp1:= NOTAND_DSZ32(tmp2, tmp1) 
U58ba: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U017a) 

U58bc: tmp12:= OR_DSZ32() 
U58bd: tmp0:= ROR_DSZ8(tmp0, 0x00000004) 
U58be: tmp0:= ADD_DSZ8(tmp0, 0x00000001) 

U58c0: tmp4:= SHL_DSZ32(tmp0, 0x00000008) 
FUN_ucode_00058c1:
U58c1: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U58c2: tmp2:= SUB_DSZ32(0x00000002, tmp0) 

U58c4: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDLE(tmp2, U58d0) 
U58c5: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x00c8) !m2 
U58c6: tmp1:= SHR_DSZ32(tmp1, 0x00000010) 

U58c8: tmp1:= AND_DSZ32(0x00000007, tmp1) 
U58c9: tmp8:= SUB_DSZ32(tmp1, tmp0) 
U58ca: tmp1:= MOVEMERGEFLGS_DSZ32(tmp1, tmp8) 

U58cc: tmp0:= CMOVCC_DSZ32_CONDNBE(tmp1, tmp0) 
U58cd: tmp0:= AND_DSZ32(0x00000007, tmp0) 
U58ce: tmp2:= SUB_DSZ32(0x00000002, tmp0) 

U58d0: tmp2:= MOVEMERGEFLGS_DSZ32(0x00000001, tmp2) 
U58d1: tmp0:= CMOVCC_DSZ32_CONDZ(tmp2, tmp0) 
U58d2: tmp11:= OR_DSZ32(0x00010000, tmp4) 

U58d4: tmp11:= OR_DSZ32(tmp0, tmp11) 
U58d5: LFNCEWAIT-> WRITEURAM(tmp11, 0x000f, 32) 
U58d6: tmp2:= ADD_DSZ32(tmp0, tmp0) 

U58d8: tmp2:= OR_DSZ32(tmp2, tmp3) 
U58d9: tmp2:= OR_DSZ32(0x00000020, tmp2) 
U58da: tmp2:= CONCAT_DSZ16(tmp2) 

U58dc: WRITEURAM(tmp2, 0x0007, 32) 
U58dd: NOP 
U58de: TESTUSTATE( , UCODE, !0x3000) !m0 ? SEQW GOTO U1071

U58e0: tmp1:= SUB_DSZ32(0x00000001, tmp0) 
U58e1: tmp4:= SHL_DSZ32(tmp1, 0x00000002) 
U58e2: tmp4:= ADD_DSZ32(0x00000063, tmp4) 

U58e4: SIGEVENT( , tmp4) 
U58e5: tmp1:= NOTAND_DSZ32(tmp1, 0x00000007) 
U58e6: SYNCMARK-> MOVETOCREG_OR_DSZ64(tmp12, 0x6c5, tmp1) !m2 

U58e8: tmp4:= SHL_DSZ32(tmp3, 0x00000006) 
U58e9: MOVETOCREG_DSZ64(tmp4, 0x007) !m2 
U58ea: tmp9:= ZEROEXT_DSZ32(0x00700084) 

U58ec: tmp9:= CONCAT_DSZ32(tmp9, 0x00000000) 
U58ed: tmp7:= MOVE_DSZ32(0x00000010) 
U58ee: tmp8:= ZEROEXT_DSZ32(0x00000008) 

U58f0: tmp6:= TESTUSTATE( , VMX, !0x0001) !m0,m2 ? SEQW GOTO U58f6
U58f1: tmp2:= SHR_DSZ32(tmp10, 0x00000009) 
U58f2: tmp2:= OR_DSZ32(tmp3, tmp2) 

U58f4: tmp2:= NOTAND_DSZ32(tmp2, 0x00000001) 
U58f5: tmp9:= OR_DSZ64(tmp2, tmp9) 
U58f6: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U58f8) SEQW GOTO U5934

U58f8: MOVETOCREG_BTS_DSZ64( , 0x00000009, 0x072) 
U58f9: tmp5:= CONCAT_DSZ32(rdx, rbx) 
U58fa: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U5934) !m2 

U58fc: LBSYNC(0x00000001) 
U58fd: LBSYNC(0x00000001) SEQW SAVEUIP1 U58feSEQW GOTO U628e
U58fe: tmp12:= MOVEFROMCREG_DSZ64( , 0x2b2, 32) !m1 

U5900: tmp5:= AND_DSZ32(0x00010000, tmp12) 
U5901: tmp4:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U5902: tmp4:= OR_DSZ32(tmp9, tmp4) 

U5904: tmp4:= AND_DSZ32(0x00000001, tmp4) 
U5905: tmp5:= OR_DSZ32(tmp5, tmp4) 
U5906: tmp12:= AND_DSZ32(0x000000f0, tmp12) 

U5908: tmp4:= MOVEFROMCREG_DSZ64( , 0x28a, 32) !m1 
U5909: tmp4:= AND_DSZ32(0x000000f0, tmp4) 
U590a: tmp4:= SUB_DSZ32(tmp4, tmp12) 

U590c: tmp4:= SELECTCC_DSZ32_CONDNBE(tmp4, 0x00000001) 
U590d: tmp5:= OR_DSZ32(tmp4, tmp5) 
U590e: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x2d5) !m0,m1 

U5910: tmp4:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1,m2 
U5911: BTUJNB_DIRECT_NOTTAKEN(tmp4, 0x00000004, U5912) !m2 SEQW GOTO U5910
U5912: tmp12:= MOVEFROMCREG_DSZ64( , 0x2d9, 32) !m1 

U5914: tmp13:= AND_DSZ32(0x00000004, tmp4) 
U5915: tmp4:= NOTAND_DSZ32(tmp4, 0x00000004) 
U5916: tmp5:= OR_DSZ32(tmp4, tmp5) 

FUN_ucode_0005918:
U5918: tmp4:= SUB_DSZ64(tmp3, tmp12) 
FUN_ucode_0005919:
U5919: tmp4:= SELECTCC_DSZ32_CONDBE(tmp4, 0x00000001) 
U591a: tmp4:= OR_DSZ32(tmp4, tmp5) 

U591c: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U591d) SEQW GOTO U5934
U591d: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2d6) !m1 
U591e: NOP 

U5920: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2d6) !m0,m1,m2 
U5921: NOP 
U5922: NOP 

U5924: LFNCEWAIT-> tmp4:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1 
U5925: tmp4:= NOTAND_DSZ32(tmp4, 0x00020000) 
U5926: tmp4:= OR_DSZ32(tmp4, tmp5) 

U5928: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U5929) SEQW GOTO U5934
U5929: tmp4:= SHL_DSZ32(tmp13, 0x00000008) 
U592a: MOVETOCREG_BTS_DSZ64(tmp4, 0x0000000b, 0x072) !m0 

U592c: tmp6:= ZEROEXT_DSZ64(tmp12) 
U592d: MOVETOCREG_DSZ64(tmp3, 0x2e0, 32) !m1 
U592e: tmp4:= ZEROEXT_DSZ32(0x00000082) 

U5930: LFNCEMARK-> MOVETOCREG_DSZ64(tmp4, 0x2d5, 32) !m1,m2 
U5931: NOP 
U5932: NOP 

U5934: LFNCEWAIT-> WRITEURAM(tmp6, 0x008f, 64) 
U5935: MOVETOCREG_AND_DSZ64(tmp11, 0x00000007, 0x2f1) !m0,m1 SEQW SAVEUIP1 U5936SEQW GOTO U67c1
U5936: NOP 

U5938: SYNCWAIT-> TESTUSTATE( , UCODE, 0x000c) ? SEQW GOTO U78aa
U5939: NOP 
U593a: NOP 

U593c: SAVEUIP( , 0x00, U2ac5) SEQW GOTO U3048
U593d: tmp11:= AND_DSZ32(0x00007ffe, tmp11) 
U593e: tmp8:= SHR_DSZ32(tmp11, 0x00000002) 

U5940: tmp10:= ADD_DSZ32(tmp6, tmp6) 
U5941: tmp10:= ADD_DSZ32(tmp7, tmp10) 
U5942: tmp8:= unk_224(tmp10, tmp8) 

U5944: tmp8:= ADD_DSZ32(0x00000980, tmp8) 
FUN_ucode_0005945:
U5945: tmp9:= BT_DSZ32(tmp11, 0x00000001) 
U5946: tmp9:= SELECTCC_DSZ32_CONDNB(tmp9, tmp6) 

U5948: tmp9:= ADD_DSZ32(tmp8, tmp9) 
U5949: tmp9:= ADD_DSZ32(tmp7, tmp9) SEQW URET1
U594a: TESTUSTATE( , VMX, !0x2000) !m0,m2 ? SEQW GOTO U0846

U594c: TESTUSTATE( , VMX, 0x8000) !m2 ? SEQW URET1
U594d: tmp0:= ZEROEXT_DSZ32(0x0002282b) SEQW GOTO U00f5
U594e: tmp0:= ADD_DSZ64(0x00000018, tmp5) 

U5950: unk_d68(tmp4, tmp9, tmp0) SEQW GOTO U4db2
U5951: MOVE_DSZ32() 
U5952: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 

U5954: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
FUN_ucode_0005955:
U5955: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U0d0d) 
U5956: tmp15:= unk_208(0x000000f5) 

U5958: LFNCEMARK-> unk_25e( , tmp15) 
U5959: tmp1:= CONCAT_DSZ8(0x00000004, tmp2) 
U595a: tmp8:= MOVEFROMCREG_DSZ64( , 0x79e) 

U595c: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U595d: tmp10:= READAFLAGS( , tmp10) !m2 SEQW GOTO U27ce
U595e: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000d, U5a72) !m2 

U5960: tmp12:= OR_DSZ16(0x00000001, tmp12) SEQW GOTO U2b11
U5961: tmp2:= BT_DSZ32(tmp2, 0x00000007) 
U5962: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000002) 

U5964: SAVEUIP_REGOVR(0x01, U5965, 0x0000) !m0 SEQW GOTO U32cd
U5965: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U5966: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000b, U2b9d) !m0,m1 

U5968: tmp0:= READURAM( , 0x0053, 64) !m2 
U5969: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U596a) !m0,m2 SEQW GOTO U5da9
U596a: tmp0:= MOVEFROMCREG_DSZ64( , 0x21d, 32) !m1 

U596c: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U2b9d) !m1 
U596d: LFNCEMARK-> tmp4:= PORTIN_DSZ32_ASZ16_SC1(0x0010) !m2 SEQW GOTO U1b75
U596e: tmp0:= READURAM( , 0x003f, 64) 

U5970: MOVETOCREG_DSZ64(tmp0, 0x6c5) !m2 SEQW GOTO U0f3a
U5971: tmp1:= READURAM( , 0x0053, 64) !m2 
U5972: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 

U5974: tmp7:= SUB_DSZ64(0x00000000, tmp1) 
U5975: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U304e) SEQW SAVEUIP1 U5976SEQW GOTO U0cb9
U5976: tmp7:= unk_222(tmp1) 

U5978: tmp7:= CONCAT_DSZ16(tmp7, tmp7) 
U5979: tmp7:= unk_0fc(tmp0, tmp7) 
U597a: PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , tmp7) !m2 

U597c: SYNCFULL-> PORTOUT_DSZ32_ASZ16_SC1(0x0064,  , tmp1) !m2 
U597d: PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 SEQW URET0
U597e: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U615d

U5980: tmp1:= ZEROEXT_DSZ32(0x0000040c) 
U5981: tmp1:= BTS_DSZ32(tmp1, 0x00000010) 
U5982: tmp3:= READURAM( , 0x0012, 64) 

U5984: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000000c, U615d) !m1 
U5985: SAVEUIP_REGOVR( , 0x01, U5986, 0xe413) !m0 SEQW GOTO U6d0c
U5986: SAVEUIP( , 0x01, U615d) !m0 

U5988: tmpv0:= SAVEUIP(tmp0, 0x00, U3a34) SEQW GOTO U334d
U5989: tmp15:= READURAM( , 0x0024, 64) 
U598a: SYNCMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000003f, U304e) !m0,m1,m2 

U598c: tmp15:= SHR_DSZ64(tmp15, 0x0000001c) 
U598d: tmp10:= SHR_DSZ32(tmp15, 0x00000004) 
U598e: tmp10:= AND_DSZ32(0x000000fc, tmp10) 

U5990: tmp15:= AND_DSZ32(0x0ffff000, tmp15) 
U5991: tmp15:= OR_DSZ32(tmp10, tmp15) 
U5992: tmp15:= OR_DSZ32(0x80000000, tmp15) 

U5994: tmp10:= AND_DSZ32(0x00000003, tmp1) 
U5995: tmp10:= OR_DSZ32(tmp10, tmp15) SEQW URET0
U5996: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U5998: ROVR<-LFNCEMARK-> AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW SAVEUIP0 U5999
U5999: TESTUSTATE( , VMX, !0x0400) !m0,m2 ? SEQW GOTO U44a1
U599a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U2711) 

U599c: tmp12:= READURAM( , 0x0057, 64) 
U599d: tmp0:= ZEROEXT_DSZ32(0x0000282b) 
U599e: LFNCEMARK-> TESTUSTATE( , VMX, 0x1000) !m2 ? SEQW SAVEUIP0 U59a0? SEQW GOTO U594a

U59a0: tmp2:= SHL_DSZ32(r64src, 0x00000004) 
U59a1: tmp4:= MOVEFROMCREG_DSZ64( , 0x513) 
U59a2: tmp5:= ZEROEXT_DSZ32(0x000000ff) 

U59a4: tmp5:= CONCAT_DSZ32(tmp5, 0xfffffffffffff000) 
U59a5: tmp4:= AND_DSZ64(tmp5, tmp4) 
U59a6: tmp14:= READUIP_REGOVR(0x01) !m0 

U59a8: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000258, mode=0x01, tmp12) 
U59a9: tmp5:= SHL_DSZ32(tmp5, 0x00000004) 
U59aa: tmp5:= AND_DSZ32(0x000000f0, tmp5) 

U59ac: tmp5:= SUB_DSZ32(tmp5, tmp2) 
U59ad: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x00000080, mode=0x1c, tmp2) 
U59ae: TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U611a

U59b0: tmp2:= ZEROEXT_DSZ8(tmp2) 
U59b1: tmp14:= SAVEUIP(0x01, U008e) !m0 SEQW GOTO U67a2
U59b2: BTUJB_DIRECT_NOTTAKEN(rbx, 0x00000002, U2d8d) !m0,m1 

U59b4: rax:= BTR_DSZ32(rax, 0x00000002) SEQW GOTO U2d8d
U59b5: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 
U59b6: SYNCMARK-> MOVETOCREG_DSZ64(tmp15, 0x752) 

U59b8: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000001f, U00f9) !m0 
U59b9: SFENCE() 
U59ba: tmp2:= BT_DSZ64(tmp2, 0x0000000f) 

U59bc: tmp15:= BT_DSZ64(tmp2, 0x0000000f) 
U59bd: tmp15:= CMOVCC_DSZ32_CONDB(tmp15, 0x00000004) 
U59be: SYNCWAIT-> tmp4:= SUB_DSZN(tmp4) !m1 

U59c0: tmp4:= SHL_DSZ32(tmp4, tmp15) 
U59c1: tmp4:= ADD_DSZ32(tmp5, tmp4) SEQW URET0
U59c2: tmp0:= MOVE_DSZ32(0x0000282b) SEQW GOTO U4f5d

U59c4: tmp8:= SAVEUIP( , 0x00, U31e9) 
U59c5: ROVR<- tmp1:= CONCAT_DSZ8(tmp3, tmp2) SEQW SAVEUIP1 U59c6SEQW GOTO U2178
U59c6: tmp7:= ZEROEXT_DSZ32(0x00000025) 

U59c8: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW URET0
U59c9: tmp14:= MOVETOCREG_DSZ64(0x00000009, 0x000) 
U59ca: tmp9:= ZEROEXT_DSZ32(tmp10) 

U59cc: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U59d1
U59cd: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 
U59ce: tmp0:= READURAM( , 0x0014, 64) 

U59d0: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U6a38) !m1 
U59d1: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 SEQW GOTO U3e71
U59d2: tmm3:= unk_53f(tmm1, tmm3) 

U59d4: tmm7:= unk_689(tmm3, tmm6) !m2 SEQW GOTO U0404
U59d5: tmp1:= SAVEUIP(tmp5, 0x00, U6304) 
U59d6: tmp2:= MOVEFROMCREG_DSZ64( , 0x7bb) 

U59d8: tmp3:= SUB_DSZ64(0x00000001) 
U59d9: SYNCMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U304e) !m0,m1,m2 
U59da: tmp3:= CONCAT_DSZ32(0xffffffffffffffff, tmp3) 

U59dc: tmp1:= AND_DSZ64(tmp1, tmp3) 
U59dd: tmp13:= AND_DSZ64(tmp1, tmp2) 
U59de: tmp14:= MOVEFROMCREG_DSZ64( , 0x574) 

U59e0: tmp14:= AND_DSZ64(tmp1, tmp14) 
U59e1: CMPUJZ_DIRECT_NOTTAKEN(tmp14, U2711, tmp13) !m1 SEQW URET0
U59e2: WRITEURAM(tmp11, 0x001e, 64) !m2 SEQW GOTO U4e04

U59e4: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U59e5: ROVR<-LFNCEMARK-> AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW SAVEUIP1 U59e6
U59e6: tmp0:= ZEROEXT_DSZ32(0x0000001c) 

U59e8: TESTUSTATE( , VMX, 0x0800) !m2 ? SEQW SAVEUIP1 U59e9? SEQW GOTO U5f46
U59e9: tmp1:= ZEROEXT_DSZ32(0x00000010) 
U59ea: LFNCEWAIT-> tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 

U59ec: tmp4:= AND_DSZ32(0x00000078, tmp15) 
U59ed: tmp4:= SHL_DSZ32(tmp4, 0x00000005) 
U59ee: tmp1:= OR_DSZ32(tmp4, tmp1) 

U59f0: tmp4:= SHR_DSZ32(tmp15, 0x0000001c) 
U59f1: tmp4:= AND_DSZ32(0x0000000f, tmp4) 
U59f2: tmp1:= OR_DSZ32(tmp4, tmp1) 

U59f4: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U73ad) !m1,m2 SEQW GOTO U4f5e
U59f5: tmp1:= AND_DSZ32(0x00000001, tmp1) 
U59f6: MOVETOCREG_OR_DSZ64(tmp2, 0x105, tmp1) !m2 

U59f8: tmp1:= SHR_DSZ32(tmp5, 0x0000000b) 
U59f9: tmp1:= NOTAND_DSZ32(tmp1, 0x00000001) 
U59fa: MOVETOCREG_OR_DSZ64(tmp1, 0x00000002, 0x383) !m0,m1,m2 

U59fc: tmp1:= AND_DSZ32(0x00000001, tmp5) 
U59fd: SYNCWAIT-> tmp1:= SHL_DSZ32(tmp1, 0x0000001c) SEQW SAVEUIP1 U59feSEQW GOTO U32cd
U59fe: tmp2:= MOVEFROMCREG_DSZ64( , 0x3df, 32) !m1 

U5a00: tmp2:= NOTAND_DSZ32(0x10000000, tmp2) 
U5a01: MOVETOCREG_OR_DSZ64(tmp2, 0x3df, tmp1) !m1,m2 SEQW GOTO U324e
U5a02: tmp9:= unk_6a0() 

U5a04: mm7:= FMOV( , tmm1) !m0 SEQW GOTO U1bd0
U5a05: tmp15:= SHL_DSZ64(tmp4, 0x00000004) 
U5a06: tmp9:= READURAM( , 0x0010, 64) 

U5a08: tmp15:= SUB_DSZ64(0x00000001, tmp15) 
U5a09: tmp9:= ZEROEXT_DSZ16( , tmp9) 
U5a0a: tmp15:= ADD_DSZ64(tmp15, tmp5) 

U5a0c: tmp15:= OR_DSZ64(tmp5, tmp15) 
U5a0d: tmp15:= AND_DSZ64(tmp9, tmp15) 
U5a0e: tmp9:= AND_DSZ32(0x0000000f, tmp5) 

U5a10: tmp9:= OR_DSZ64(tmp15, tmp9) 
U5a11: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, tmp10) SEQW URET0
U5a12: tmp10:= MOVEFROMCREG_DSZ64( , rax) !m1 SEQW GOTO U4065

U5a14: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, rax) !m1,m2 SEQW GOTO U43a4
U5a15: tmp1:= ZEROEXT_DSZ32(0xf8f8f8f8) 
U5a16: tmp1:= CONCAT_DSZ32(tmp1, tmp1) 

U5a18: tmp1:= AND_DSZ64(tmpv0, tmp1) 
U5a19: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, tmpv1) 
FUN_ucode_0005a1a:
U5a1a: tmp1:= ZEROEXT_DSZ32(0x04040404) 

U5a1c: tmp1:= CONCAT_DSZ32(tmp1, tmp1) 
U5a1d: tmp1:= NOTAND_DSZ64(tmpv0, tmp1) 
U5a1e: tmp1:= SHR_DSZ64(tmp1, 0x00000001) 

U5a20: tmp1:= AND_DSZ64(tmpv0, tmp1) 
U5a21: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, tmpv1) SEQW URET1
U5a22: rdx:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 SEQW GOTO U5c54

U5a24: tmp14:= SAVEUIP(0x01, U37fc) !m0 SEQW GOTO U1df5
U5a25: tmpv0:= BT_DSZ32(tmpv0, 0x00000017) 
U5a26: tmpv0:= SELECTCC_DSZ32_CONDNB(tmpv0, 0x00001000) 

U5a28: tmpv1:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U5a29: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmpv1, 0x6c3, tmpv0) 
U5a2a: tmpv2:= CONCAT_DSZ16(0x00000038) 

U5a2c: tmpv0:= MOVEFROMCREG_DSZ64( , 0x7c6) 
U5a2d: tmpv0:= NOTAND_DSZ32(tmpv2, tmpv0) 
U5a2e: tmpv1:= READURAM( , 0x004c, 64) 

U5a30: tmpv1:= AND_DSZ32(tmpv2, tmpv1) 
U5a31: MOVETOCREG_OR_DSZ64(tmpv0, 0x7c6, tmpv1) SEQW URET0
U5a32: tmm4:= unk_601(tmm3, tmm2) !m2 SEQW GOTO U24a6

U5a34: tmm0:= unk_744(mm7) SEQW GOTO U517a
U5a35: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x072) !m0,m2 
U5a36: LFNCEMARK-> WRITEURAM( , 0x00000000, 0x0007, 32) !m2 

U5a38: tmp9:= READURAM( , 0x002c, 64) 
U5a39: tmp6:= SHR_DSZ64(tmp9, 0x00000020) 
U5a3a: tmp4:= SHR_DSZ32(tmp9, 0x00000008) 

U5a3c: tmp5:= ZEROEXT_DSZ8(tmp9) 
U5a3d: tmp7:= SHR_DSZ32(tmp9, 0x00000010) 
U5a3e: tmp3:= READURAM( , 0x006c, 64) 

U5a40: tmp11:= READURAM( , 0x006b, 64) 
U5a41: LFNCEWAIT-> tmp12:= READURAM( , 0x0011, 64) SEQW GOTO U4698
U5a42: tmp9:= ZEROEXT_DSZ64(IMM_MACRO_f3) !m0 

U5a44: LFNCEWAIT-> tmp11:= unk_e6b(tmp0, tmp2) !m1,m2 SEQW GOTO U4922
U5a45: tmp0:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U5a46: tmp0:= BTR_DSZ64(tmp0, 0x00000003) 

U5a48: tmp15:= MOVEFROMCREG_DSZ64( , 0x00c) SEQW SAVEUIP1 U5a49SEQW GOTO U5814
U5a49: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000008, U5a4c) !m2 
U5a4a: tmp0:= BTS_DSZ64(tmp0, 0x00000004) 

U5a4c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x2df, 32) !m1,m2 
U5a4d: tmp0:= READURAM( , 0x005c, 64) 
U5a4e: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000017, U2ac1) !m0,m1 

U5a50: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000015, U2abd) !m1 
U5a51: tmp15:= CONCAT_DSZ32(rdx, rax) SEQW GOTO U2ac0
U5a52: rax:= SELECTCC_DSZ32_CONDB(tmp1, 0x00000040) 

U5a54: rbx:= SELECTCC_DSZ32_CONDB(tmp1, 0x000003c0) SEQW GOTO U1bd0
U5a55: SYNCFULL-> NOP 
U5a56: tmp11:= MOVEFROMCREG_DSZ64( , 0x070) 

U5a58: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000004, U3074) !m1,m2 
U5a59: BTUJNB_DIRECT_NOTTAKEN(tmp11, 0x00000006, U615d) !m0,m1 
U5a5a: SYNCMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x00b) !m0,m2 

U5a5c: tmp11:= NOTAND_DSZ32(0x00000050, tmp11) 
U5a5d: tmp1:= READURAM( , 0x002b, 64) 
U5a5e: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000020, U61f5) !m1 

U5a60: WRITEURAM( , 0x00000000, 0x012b, 64) !m2 
U5a61: tmp12:= ZEROEXT_DSZ64(0x0000615d) SEQW GOTO U30d4
U5a62: LFNCEMARK-> tmm6:= unk_743(mm0) !m2 

U5a64: MOVEINSERTFLGS_DSZ32(0x0000000b) !m2 SEQW GOTO U2b15
FUN_ucode_0005a65:
U5a65: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U5a66: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U5a68: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U5a69) !m2 SEQW GOTO U5a66
U5a69: MOVETOCREG_DSZ64(tmpv0, 0x22b, 32) !m1 
U5a6a: tmp15:= ZEROEXT_DSZ32(0x000006ff) 

U5a6c: tmp15:= CONCAT_DSZ16(tmp15, 0x00000007) 
U5a6d: MOVETOCREG_DSZ64(tmp15, 0x229, 32) !m1,m2 
U5a6e: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1,m2 

U5a70: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U5a71) !m2 SEQW GOTO U5a6e
U5a71: tmpv1:= MOVEFROMCREG_DSZ64( , 0x22d, 32) !m1,m2 SEQW URET1
U5a72: tmp5:= AND_DSZ32(0x00000002, tmp7) 

U5a74: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U5960) SEQW GOTO U3ab2
U5a75: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U5a76: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U5a78: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U5a79) !m2 SEQW GOTO U5a76
U5a79: MOVETOCREG_DSZ64(tmpv0, 0x22b, 32) !m1 
U5a7a: MOVETOCREG_DSZ64(tmpv1, 0x22c, 32) !m1 

U5a7c: tmp15:= ZEROEXT_DSZ32(0x0000070f) 
U5a7d: tmp15:= CONCAT_DSZ16(tmp15, 0x00000005) 
U5a7e: MOVETOCREG_DSZ64(tmp15, 0x229, 32) !m1,m2 

U5a80: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1,m2 
U5a81: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U068e) SEQW GOTO U5a80
U5a82: tmp3:= ZEROEXT_DSZ32(0x00000004) 

U5a84: tmm7:= unk_780(mm3) !m2 SEQW GOTO U1bd0
U5a85: MOVETOCREG_DSZ64( , 0x00000000, 0x48f) !m2 
U5a86: tmp3:= AND_DSZ32(0x00000080, tmp8) 

U5a88: tmp3:= NOTAND_DSZ32(tmp2, tmp3) 
U5a89: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U3ba8) 
U5a8a: tmp5:= BT_DSZ32(tmp5, 0x00000013) 

U5a8c: tmp3:= MOVEFROMCREG_DSZ64( , 0x001) 
U5a8d: tmp3:= SELECTCC_DSZ32_CONDB(tmp5, tmp3) 
U5a8e: tmp2:= SUB_DSZ32(0x00000a45, tmp3) 

U5a90: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U18cd) 
U5a91: LFNCEMARK-> NOP SEQW GOTO U192c
U5a92: rax:= SELECTCC_DSZ32_CONDB(tmp1, 0x00000040) 

U5a94: rbx:= SELECTCC_DSZ32_CONDB(tmp1, 0x00000400) SEQW GOTO U1bd0
U5a95: tmp2:= PINTMOVDTMM2I_DSZ32(tmm2) 
U5a96: tmp2:= NOTAND_DSZ32(0x000001ff, tmp2) 

U5a98: tmp9:= ZEROEXT_DSZ64(tmp10) 
U5a99: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U2475
U5a9a: tmm3:= SHUFPD(tmm7, tmm7) 

U5a9c: tmp2:= NOTAND_DSZ32(0x00000fff, tmp2) 
U5a9d: tmp2:= OR_DSZ32(0x000006ed, tmp2) 
U5a9e: tmm2:= unk_704(mm2) 

U5aa0: tmp9:= unk_52b(tmp11) 
U5aa1: tmm1:= unk_57a(tmm1) SEQW GOTO U431d
U5aa2: rax:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000080) 

U5aa4: rcx:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000001) SEQW GOTO U1bd0
FUN_ucode_0005aa5:
U5aa5: tmp1:= READURAM( , 0x003d, 64) 
U5aa6: tmp1:= OR_DSZ32(0x00002000, tmp1) 

U5aa8: tmp1:= NOTAND_DSZ32(0x0000000f, tmp1) 
U5aa9: WRITEURAM(tmp1, 0x003d, 64) !m2 
U5aaa: MOVETOCREG_DSZ64(tmp2, 0x7f8) !m2 

U5aac: tmp2:= MOVEFROMCREG_DSZ64( , 0x78e) 
U5aad: tmp2:= ADD_DSZN(tmp12, tmp2) !m1 
U5aae: tmp1:= MOVEFROMCREG_DSZ64( , 0x065) 

U5ab0: tmp1:= SUB_DSZN(tmp1, tmp2) !m1 
U5ab1: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x067) !m2 SEQW GOTO U1ecc
U5ab2: tmp0:= READURAM( , 0x0021, 64) !m2 

U5ab4: unk_963(tmp0, IMM_MACRO_21) !m0,m2 SEQW GOTO U24da
U5ab5: rsi:= ADDSUB_DSZ16_CONDD(tmp4, rsi) !m1 
U5ab6: rdi:= ADDSUB_DSZ16_CONDD(tmp4, rdi) !m1 

U5ab8: tmp15:= SHR_DSZ32(tmp4, tmp2) 
U5ab9: rcx:= SUB_DSZN(tmp15, rcx) !m1 
U5aba: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000a, U2e7a) !m0,m1 

U5abc: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000f, U2e7e) !m0,m1 
U5abd: LFNCEMARK-> WRITEURAM(tmp10, 0x001e, 64) !m2 
U5abe: MOVETOCREG_OR_DSZ64( , 0x00000004, 0x00b) !m2 

U5ac0: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0,m2 
U5ac1: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 SEQW URET1
U5ac2: MOVEINSERTFLGS_DSZ32(0x0000000b) !m2 SEQW GOTO U1a50

U5ac4: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x38e) !m1 SEQW GOTO U0041
U5ac5: tmp4:= SUB_DSZ32(0x00000100, tmp4) 
U5ac6: tmp4:= SUB_DSZ32(0x00000058, tmp4) 

U5ac8: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U40bc) 
U5ac9: tmp9:= BTS_DSZ16(tmp9, 0x0000000b) 
U5aca: tmp12:= OR_DSZ16(0x00000041, tmp12) 

U5acc: tmm6:= unk_743() !m2 
U5acd: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 
U5ace: tmp2:= AND_DSZ16(tmp5, 0x00000001) 

U5ad0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U0392) 
U5ad1: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp6, U3ab2) SEQW GOTO U1431
U5ad2: tmp1:= ZEROEXT_DSZ32(0x0000404a) 

U5ad4: tmp1:= BTS_DSZ32(tmp1, 0x00000014) SEQW GOTO U3741
U5ad5: rax:= BTS_DSZ32(rax, 0x00000001) 
U5ad6: rbx:= BTS_DSZ32(rbx, 0x00000001) 

U5ad8: tmp14:= ZEROEXT_DSZ16(0x00002d8a) 
U5ad9: tmp15:= ZEROEXT_DSZ16(0x000059b2) 
U5ada: tmp0:= ZEROEXT_DSZ16(0x00000001) 

U5adc: tmp0:= CONCAT_DSZ16(tmp0, 0x00000200) 
U5add: tmp2:= ZEROEXT_DSZ16(0x0000007f) 
U5ade: tmp2:= CONCAT_DSZ16(tmp2, 0x0000002f) 

U5ae0: tmp4:= SUB_DSZ64(0x00000001) 
U5ae1: tmp5:= SUB_DSZ64(0x00000001) SEQW GOTO U2f66
U5ae2: tmp0:= READURAM( , 0x0008, 64) !m2 

U5ae4: tmp0:= SHR_DSZ32(tmp0, 0x00000010) SEQW GOTO U312a
U5ae5: tmp11:= ZEROEXT_DSZ32(0x00000006) 
U5ae6: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp15, U294c) 

U5ae8: tmp11:= ZEROEXT_DSZ32(0x00000007) 
U5ae9: tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 
U5aea: tmp2:= AND_DSZ32(0x000f0000, tmp2) 

U5aec: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U294c) 
U5aed: tmp0:= READURAM( , 0x005c, 64) 
U5aee: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U7048) !m1,m2 

U5af0: tmp14:= MOVEFROMCREG_DSZ64( , 0x51b) 
U5af1: tmp14:= ZEROEXT_DSZ16(0x00001000, tmp14) SEQW GOTO U7048
U5af2: tmp1:= READURAM( , 0x0008, 64) !m2 

U5af4: LFNCEMARK-> tmp1:= CONCAT_DSZ16(tmp1, tmp0) SEQW GOTO U5e80
U5af5: tmm5:= unk_649(tmm0, tmm5) 
U5af6: tmp1:= AND_DSZ32(0x00000001, tmp8) 

U5af8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U5859) 
U5af9: tmp2:= SHR_DSZ32(tmp8, 0x00000004) 
U5afa: tmm4:= unk_702(mm2, tmm4) 

U5afc: tmm7:= unk_6e1(tmm4, tmm5) 
U5afd: tmm3:= unk_702(mm2, tmm3) 
U5afe: tmm0:= unk_6e1(tmm3, tmm6) 

U5b00: tmm1:= unk_6c9(tmm0, tmm7) 
U5b01: LFNCEWAIT-> mm0:= unk_689(tmm3, tmm1) !m2 SEQW GOTO U1bd0
U5b02: tmp1:= READURAM( , 0x0008, 64) !m2 

U5b04: LFNCEMARK-> tmp1:= CONCAT_DSZ16(tmp0, tmp1) SEQW GOTO U5e80
U5b05: rbp:= ZEROEXT_DSZ32N(tmp0, rbp) !m1 
U5b06: LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_1b, mode=0x0a) !m0,m1 

U5b08: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_23, mode=0x0a) !m0,m1 
U5b09: rbx:= ZEROEXT_DSZ32N(tmp0, rbx) !m1 
U5b0a: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_2b, mode=0x0a) !m0,m1 

U5b0c: rdx:= ZEROEXT_DSZ32N(tmp0, rdx) !m1 
U5b0d: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_33, mode=0x0a) !m0,m1 
U5b0e: rcx:= ZEROEXT_DSZ32N(tmp0, rcx) !m1 

U5b10: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_3b, mode=0x0a) !m0,m1 
U5b11: rax:= ZEROEXT_DSZ32N(tmp0, rax) !m1 
U5b12: rsp:= ADD_DSZN(IMM_MACRO_43, rsp) !m0,m1 SEQW UEND0

U5b14: tmp14:= ZEROEXT_DSZ32(0x000076cd) SEQW GOTO U0434
U5b15: tmp11:= SHR_DSZ64(tmp8, 0x00000020) 
U5b16: LFNCEWAIT-> WRITEURAM(tmp11, 0x000f, 32) 

U5b18: tmp5:= OR_DSZ32() 
U5b19: tmp3:= WRITEURAM(tmp8, 0x0007, 32) 
U5b1a: tmp0:= SHR_DSZ32(tmp3, 0x00000011) 

U5b1c: tmp0:= AND_DSZ32(0x00000007, tmp0) 
U5b1d: tmp3:= SHR_DSZ32(tmp3, 0x00000010) 
U5b1e: tmp3:= AND_DSZ32(0x00000001, tmp3) 

U5b20: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U5b21: tmp10:= READAFLAGS( , tmp10) !m2 
U5b22: tmp12:= OR_DSZ32() SEQW GOTO U58de

U5b24: tmm0:= FMOV() !m2 SEQW GOTO U1bd0
U5b25: tmp8:= ZEROEXT_DSZ32(0x00000002) 
U5b26: tmp12:= SHR_DSZ64(tmp0, 0x00000020) 

U5b28: tmp13:= SAVEUIP(0x00, U5b2a) 
U5b29: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U01c2
U5b2a: tmp2:= SHR_DSZ32(tmp0, 0x00000010) 

U5b2c: tmp5:= MOVE_DSZ64(rsp, rsp) !m1 
U5b2d: tmp13:= ZEROEXT_DSZ64(tmp0) 
U5b2e: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U654d

U5b30: tmp8:= MOVETOCREG_DSZ64(tmp8, 0x6c5) 
U5b31: tmp1:= ZEROEXT_DSZ32(0x00000803, tmp8) 
U5b32: tmp14:= SAVEUIP(0x01, U4dc9) !m0 SEQW GOTO U6560

FUN_ucode_0005b34:
U5b34: SAVEUIP( , 0x01, U3a6e) !m0 SEQW GOTO U3fd9
U5b35: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 
U5b36: LFNCEWTMRK-> unk_dff() 

U5b38: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U5b3c
U5b39: tmp14:= READUIP_REGOVR(0x01) !m0 
U5b3a: tmp11:= MOVEFROMCREG_DSZ64( , 0x529) 

U5b3c: tmp6:= NOTAND_DSZ32(0x0000001f, tmp11) 
U5b3d: tmp12:= WRMSLOOPCTRFBR(0x00000003) 
U5b3e: tmp4:= READURAM( , 0x0010, 64) 

U5b40: LFNCEWAIT-> tmp4:= ZEROEXT_DSZ16(0x000001e6, tmp4) 
U5b41: tmp7:= unk_d6b(tmp6) 
U5b42: tmp6:= ZEROEXT_DSZ64(tmp6, tmp7) SEQW GOTO U1eb4

U5b44: MSSTOP-> MJMPTARGET_INDIRECT_ASZ64( , tmp3) !m1 SEQW GOTO U2792
U5b45: tmp2:= OR_DSZ64(tmp1, tmp2) 
U5b46: tmp2:= AND_DSZ64(tmp2, tmp5) 

U5b48: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000020, U2711) !m1 
FUN_ucode_0005b49:
U5b49: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000001, U3208) !m1,m2 
U5b4a: LFNCEMARK-> tmp1:= SHR_DSZ64(tmp5, 0x00000019) 

U5b4c: tmp1:= AND_DSZ32(0x00000080, tmp1) 
U5b4d: tmp2:= SHR_DSZ32(tmp5, 0x00000008) 
U5b4e: tmp2:= AND_DSZ32(0x0000007f, tmp2) 

U5b50: tmp1:= OR_DSZ32(tmp1, tmp2) 
U5b51: PORTOUT_DSZ8_ASZ16_SC1(0x00c3,  , tmp1) !m2 
U5b52: PORTOUT_DSZ8_ASZ16_SC1(0x46bf,  , tmp1) !m2 SEQW GOTO U3208

U5b54: tmp2:= OR_DSZ32(0x00000100, tmp2) SEQW GOTO U46a2
U5b55: MOVETOCREG_DSZ64(tmp5, 0x57f) !m2 
U5b56: tmp1:= MOVEFROMCREG_DSZ64( , 0x513) 

U5b58: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U6380) !m1 
U5b59: tmp2:= NOTAND_DSZ64(0x00000fff, tmp1) 
U5b5a: tmp3:= NOTAND_DSZ32(tmp5, 0x00000800) 

U5b5c: tmp3:= SHR_DSZ32(tmp3, 0x0000000a) 
U5b5d: tmp5:= MOVEFROMCREG_DSZ64( , 0x51b) 
U5b5e: tmp5:= ZEROEXT_DSZ16( , tmp5) 

U5b60: CMPUJZ_DIRECT_NOTTAKEN(tmp5, U6380, tmp2) !m1 
U5b61: tmp1:= NOTAND_DSZ64(0x00000002, tmp1) 
U5b62: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp1, 0x513, tmp3) !m2 SEQW GOTO U6380

U5b64: MSLOOP-> unk_256() !m1 SEQW GOTO U2792
U5b65: tmp4:= MOVEFROMCREG_DSZ64( , 0x51b) 
U5b66: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x525) 

U5b68: tmp0:= BT_DSZ64(tmp2, 0x00000006) 
U5b69: tmp0:= CMOVCC_DSZ64_CONDNB(tmp0, tmp4) 
U5b6a: tmp0:= NOTAND_DSZ64(0x00000fff, tmp2) 

U5b6c: tmp3:= XOR_DSZ64(tmp0, tmp3) 
U5b6d: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000001, U770d) !m1,m2 
U5b6e: tmp15:= AND_DSZ32(0x00000fff, tmp1) 

U5b70: rax:= OR_DSZ64(tmp15, tmp0) 
U5b71: rbx:= ZEROEXT_DSZ64(tmp1) 
U5b72: rcx:= AND_DSZ32(0x00000078, tmp2) SEQW GOTO U1bd0

U5b74: tmp14:= SHR_DSZ64(tmp14, 0x00000020) SEQW GOTO U06ae
U5b75: tmp14:= READUIP_REGOVR(0x01) !m0 
U5b76: tmp15:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x00000398, mode=0x1c, tmp13) 

U5b78: tmp3:= SHR_DSZ16(tmp15, 0x00000008) 
U5b79: tmp3:= AND_DSZ32(0x000000f0, tmp3) 
U5b7a: tmp2:= AND_DSZ32(0x000000f0, tmp4) 

U5b7c: tmp2:= SUB_DSZ32(tmp2, tmp3) 
U5b7d: tmp2:= MOVEMERGEFLGS_DSZ32(tmp3, tmp2) 
U5b7e: tmp2:= CMOVCC_DSZ32_CONDNBE(tmp2, tmp4) 

U5b80: tmp15:= AND_DSZ32(0x000000f0, tmp15) 
U5b81: tmp15:= SUB_DSZ32(tmp2, tmp15) 
U5b82: tmp3:= SELECTCC_DSZ32_CONDBE(tmp15, 0x00000002) SEQW URET1

U5b84: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 SEQW GOTO U2911
U5b85: LBSYNC(0x00000001) 
FUN_ucode_0005b86:
U5b86: LFNCEMARK-> LBSYNC(0x00000001) 

U5b88: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x007) !m2 
U5b89: NOP 
U5b8a: SYNCWAIT-> TESTUSTATE( , UCODE, 0x3000) ? SEQW URET1

U5b8c: tmp15:= READURAM( , 0x0012, 64) 
U5b8d: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000005, U0416) 
U5b8e: SAVEUIP_REGOVR( , 0x01, U5b90, 0xf9ba) !m0 SEQW GOTO U6d0c

U5b90: SAVEUIP( , 0x00, U3a34) 
U5b91: SAVEUIP( , 0x01, U0416) !m0 
U5b92: tmpv0:= CONCAT_DSZ32(tmp1, tmp0) SEQW GOTO U334d

U5b94: tmp14:= SAVEUIP(0x01, U2b35) !m0 SEQW GOTO U5d69
U5b95: rdx:= NOTAND_DSZ32(tmp0, tmp1) 
U5b96: tmp1:= READURAM( , 0x005c, 64) 

U5b98: tmp1:= SHR_DSZ32(tmp1, 0x00000006) 
U5b99: tmp1:= NOTAND_DSZ32(tmp1, tmp10) 
U5b9a: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U1bd0) !m0,m2 

U5b9c: tmp0:= READURAM( , 0x0006, 64) 
U5b9d: tmp1:= SUB_DSZ16(0x00000040, tmp0) 
U5b9e: tmp0:= MOVEMERGEFLGS_DSZ32(tmp0, tmp1) 

U5ba0: rax:= CMOVCC_DSZ16_CONDB(tmp0, 0x00000040) 
U5ba1: rbx:= CMOVCC_DSZ16_CONDNBE(tmp0, 0x00000040) 
U5ba2: rcx:= ZEROEXT_DSZ32(0x00000003) SEQW GOTO U1bd0

U5ba4: SAVEUIP( , 0x01, U792e) !m0 SEQW GOTO U3130
U5ba5: tmp1:= ZEROEXT_DSZ32(0x00000002) 
U5ba6: tmp1:= CONCAT_DSZ16(0x00000249, tmp1) 

U5ba8: tmp1:= MOVEMERGEFLGS_DSZ32(tmp1, tmp8) 
U5ba9: rax:= CMOVCC_DSZ32_CONDNZ(tmp1, 0x00000001) 
U5baa: tmp1:= ZEROEXT_DSZ32(0x0000ffff) 

U5bac: tmp1:= CONCAT_DSZ16(0x0000003f, tmp1) 
U5bad: tmp1:= MOVEMERGEFLGS_DSZ32(tmp1, tmp8) 
U5bae: rbx:= CMOVCC_DSZ32_CONDNZ(tmp1, 0x0000000f) 

U5bb0: tmp0:= ZEROEXT_DSZ32(0x00000007) 
U5bb1: tmp0:= CONCAT_DSZ16(0x00008000, tmp0) 
U5bb2: rcx:= SELECTCC_DSZ32_CONDNZ(tmp8, tmp0) SEQW GOTO U1bd0

U5bb4: LFNCEMARK-> tmm0:= unk_6ae(tmm0) !m2 SEQW GOTO U64a0
FUN_ucode_0005bb5:
U5bb5: tmp0:= unk_14d(tmp10) 
U5bb6: tmp10:= READURAM( , 0x0062, 64) 

U5bb8: LFNCEWAIT-> WRITEURAM(tmp10, 0x004b, 64) 
U5bb9: tmp5:= READURAM( , 0x0063, 64) 
U5bba: tmp10:= AND_DSZ64(0xfffffffffffff000, tmp5) 

U5bbc: WRSEGFLD(tmp10) 
U5bbd: tmp5:= AND_DSZ32(0x00000003, tmp5) 
U5bbe: tmp5:= SHL_DSZ32(tmp5, 0x0000001c) 

U5bc0: tmp10:= MOVEFROMCREG_DSZ64( , 0x701) 
U5bc1: tmp10:= NOTAND_DSZ64(0x30000000, tmp10) 
U5bc2: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp10, 0x701, tmp5) SEQW GOTO U6380

U5bc4: tmm0:= unk_7c2(mm5, tmm0) SEQW GOTO U64aa
U5bc5: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c0, 32) !m1 
U5bc6: WRITEURAM(tmp0, 0x0057, 64) !m2 

U5bc8: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c1, 32) !m1 
U5bc9: WRITEURAM(tmp0, 0x0056, 64) !m2 
U5bca: tmp0:= READURAM( , 0x0063, 64) 

U5bcc: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U5bcd: tmp1:= SHL_DSZ32(tmp0, 0x00000008) 
U5bce: tmp2:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U5bd0: tmp2:= BTR_DSZ32(tmp2, 0x00000008) 
U5bd1: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp2, 0x6c3, tmp1) !m2 
U5bd2: NOP SEQW GOTO U6380

U5bd4: tmp13:= ZEROEXT_DSZ64(0x000043c4) SEQW GOTO U0344
U5bd5: tmp0:= ZEROEXT_DSZ64N(0xffffffffffffffff) !m1 
U5bd6: tmp0:= SAR_DSZ64(tmp0, 0x00000020) 

U5bd8: tmp5:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 
U5bd9: tmp5:= OR_DSZ32(0x00ffffff, tmp5) 
U5bda: tmp5:= OR_DSZ64(tmp0, tmp5) 

U5bdc: LFNCEWAIT-> tmp3:= LDZX_DSZ16_ASZ32_SC1(tmp2, mode=0x18) 
U5bdd: tmp4:= LDZX_DSZN_ASZ32_SC1(tmp2, 0x00000002, mode=0x18) !m1 
U5bde: unk_25c( , tmp4) 

U5be0: tmp4:= AND_DSZ64(tmp5, tmp4) 
U5be1: WRSEGFLD(tmp3) !m0 
U5be2: LFNCEMARK-> WRSEGFLD(tmp4) !m0 SEQW GOTO U1bd0

U5be4: tmp14:= ZEROEXT_DSZ32(0x00002dda) SEQW GOTO U3ece
U5be5: tmp1:= READURAM( , 0x002c, 64) 
U5be6: tmp7:= SHR_DSZ32(tmp1, 0x00000010) 

U5be8: tmp8:= SHR_DSZ32(tmp1, 0x00000008) 
U5be9: tmp8:= AND_DSZ32(0x000000ff, tmp8) 
U5bea: tmp5:= AND_DSZ32(0x000000ff, tmp1) 

U5bec: tmp11:= READURAM( , 0x006b, 64) 
U5bed: WRITEURAM( , 0x00000000, 0x0007, 32) !m2 
U5bee: tmp3:= READURAM( , 0x006c, 64) 

U5bf0: tmp15:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U5bf1: tmp6:= ADD_DSZN(tmp15, tmp3) !m1 
U5bf2: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x072) !m0,m2 SEQW GOTO U4f41

U5bf4: LFNCEWAIT-> tmp2:= ADD_DSZN(0x00000004, tmp4) !m1 SEQW GOTO U7231
U5bf5: tmp5:= OR_DSZ64(tmpv0) 
U5bf6: tmp8:= MOVEFROMCREG_DSZ64( , 0x0b1) 

U5bf8: BTUJNB_DIRECT_NOTTAKEN(tmp8, 0x00000005, U5bf9) !m2 SEQW GOTO U2ccd
U5bf9: MOVETOCREG_DSZ64( , 0x00000000, 0x109) !m2 
U5bfa: MOVETOCREG_DSZ64( , 0x00000000, 0x10a) !m2 

U5bfc: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000008, U2cba) !m1 
U5bfd: tmp1:= MOVEFROMCREG_DSZ64( , 0x102) 
U5bfe: tmp1:= SHR_DSZ32(tmp1, 0x00000007) 

U5c00: WRITEURAM(tmp1, 0x002b, 32) !m2 
probe_mode_force_smm_xlat:
U5c01: MOVETOCREG_DSZ64( , 0x00000000, 0x107) !m2 
U5c02: tmp13:= SAVEUIP(0x00, U2ccc) SEQW GOTO U5ec6

U5c04: mm0:= unk_6dd( , tmm2) SEQW GOTO U1bd0
U5c05: tmp5:= AND_DSZ8(0x00000001, tmp4) 
U5c06: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U5c09) 

U5c08: mm0:= FMOV( , tmm0) !m0 
U5c09: tmp2:= AND_DSZ32(0x00000007, tmp9) 
U5c0a: tmp3:= SHL_DSZ8(0x00000001, tmp2) 

U5c0c: tmp4:= AND_DSZ8(tmp3, tmp4) 
U5c0d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U5c10) 
U5c0e: mm0:= FMOV( , tmm0) !m0 

U5c10: tmm5:= FMOV( , 0x00004001) !m0 
U5c11: mm0:= FMOV( , 0x00000001) !m0 
U5c12: mm0:= FMOV( , tmm5) !m0 SEQW GOTO U1a50

U5c14: tmm7:= unk_53f(tmm1) SEQW GOTO U0404
U5c15: tmp7:= LDZX_DSZ32_ASZ32_SC1(tmp11, 0x00000018, mode=0x18) 
U5c16: tmp3:= AND_DSZ32(0xffff0000, tmp7) 

U5c18: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U2711) 
U5c19: tmm5:= unk_707(mm7) 
U5c1a: SYNCWTMRK-> tmm6:= unk_691(tmm5) 

U5c1c: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U3b12
U5c1d: SAVEUIP( , 0x00, U00d2) 
U5c1e: tmp3:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 

U5c20: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000003f, U3b14) !m0,m1,m2 
U5c21: tmp3:= unk_205() !m1 
U5c22: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U3b14) SEQW URET0

U5c24: tmp13:= MOVEFROMCREG_DSZ64( , 0x287, 32) !m1 SEQW GOTO U1be4
U5c25: tmp13:= LDZX_DSZ32_ASZ32_SC1(tmp4) 
U5c26: tmp13:= SHL_DSZ32(tmp13, 0x00000002) 

U5c28: tmp0:= SUB_DSZ32(0x00000286, tmp13) 
U5c29: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000286, tmp0) 
U5c2a: tmp13:= CMOVCC_DSZ32_CONDB(tmp0, tmp13) 

U5c2c: tmp0:= SUB_DSZ32(0x0003efc4, tmp13) 
U5c2d: tmp0:= MOVEMERGEFLGS_DSZ32(0x0003efc4, tmp0) 
U5c2e: tmp13:= CMOVCC_DSZ32_CONDNBE(tmp0, tmp13) 

U5c30: tmp13:= NOTAND_DSZ32(0x0000003f, tmp13) 
U5c31: tmp13:= ADD_DSZ32(0x00000004, tmp13) 
U5c32: WRITEURAM(tmp13, 0x008e, 64) !m2 SEQW URET1

U5c34: tmpv0:= ZEROEXT_DSZ32() SEQW GOTO U5f20
U5c35: tmp10:= unk_6a0() 
U5c36: tmm2:= unk_6e1(tmm2, tmm0) 

U5c38: tmp11:= unk_6a0() 
FUN_ucode_0005c39:
U5c39: tmm3:= unk_6c9(tmm0, tmm3) 
U5c3a: tmp1:= SUB_DSZ32(0x0000ffb9, tmp0) 

U5c3c: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U5c3d) SEQW GOTO U6dd1
U5c3d: tmp3:= ZEROEXT_DSZ32(0x00000010) 
U5c3e: tmm5:= unk_700(mm3) !m2 

U5c40: tmp10:= unk_6a0() 
U5c41: tmm3:= unk_6e1(tmm2, tmm0) 
U5c42: LFNCEMARK-> tmm7:= unk_6a1(tmm3, tmm1) !m2 SEQW GOTO U01aa

U5c44: SFENCE() SEQW GOTO U06ae
U5c45: tmp15:= SHR_DSZ32(tmp14, 0x00000004) 
U5c46: tmp14:= CONCAT_DSZ32(tmp14, tmp15) 

U5c48: tmp15:= ZEROEXT_DSZ32(0x0000e904) 
U5c49: tmp15:= CONCAT_DSZ32(0x41ff0100, tmp15) 
U5c4a: BTUJNB_DIRECT_NOTTAKEN(tmp15, U770d, tmp14) !m1,m2 

U5c4c: tmp15:= ZEROEXT_DSZ32(0xffffe90c) 
U5c4d: tmp15:= CONCAT_DSZ32(0x41ff01ff, tmp15) 
U5c4e: tmp15:= BT_DSZ64(tmp15, tmp14) 

U5c50: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00000001) 
U5c51: tmp15:= OR_DSZ32(0x00000002, tmp15) 
U5c52: tmp14:= SHR_DSZ64(tmp14, 0x0000001e) SEQW GOTO U1d3c

U5c54: rbx:= ZEROEXT_DSZ32(tmp14) SEQW GOTO U1bd0
U5c55: tmp0:= MOVEFROMCREG_DSZ64( , 0x38e, 32) !m1 
U5c56: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64(tmp0, 0x00000018, 0x38e) !m1 

U5c58: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U5c5e
U5c59: MOVETOCREG_DSZ64( , 0x00000000, 0x609) 
U5c5a: MOVETOCREG_DSZ64( , 0x00000000, 0x60a) 

U5c5c: MOVETOCREG_DSZ64( , 0x00000000, 0x10d) 
U5c5d: MOVETOCREG_DSZ64( , 0x00000000, 0x10e) 
U5c5e: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000001d, U5c60) !m2 SEQW GOTO U5c62

U5c60: tmp0:= MOVEFROMCREG_DSZ64( , 0x105) 
U5c61: MOVETOCREG_BTS_DSZ64(tmp0, 0x105) 
send_op_data_pcu_mailbox:
U5c62: tmp14:= ZEROEXT_DSZ16(0x00004e3c) SEQW GOTO U49e4

U5c64: tmp14:= ZEROEXT_DSZ32(0x00003ee2) SEQW GOTO U0434
U5c65: SAVEUIP( , 0x00, U36c9) 
FUN_ucode_0005c66:
U5c66: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2dd) !m1 

U5c68: tmp15:= ZEROEXT_DSZ32(0xffffffffffffffff) 
U5c69: MOVETOCREG_DSZ64(tmp15, 0x00b) 
U5c6a: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000120) 

U5c6c: SYNCFULL-> MOVETOCREG_SHR_DSZ64(tmp4, 0x00000024, 0x6c5) 
U5c6d: MOVETOCREG_SHR_DSZ64(tmp4, 0x00000020, 0x01c) 
U5c6e: MOVETOCREG_SHR_DSZ64(tmp4, 0x00000030, 0x070) 

U5c70: tmp4:= ZEROEXT_DSZ32(tmp4) 
U5c71: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000100) 
U5c72: MOVETOCREG_DSZ64(tmp0, 0x067) SEQW URET0

U5c74: tmp12:= unk_6a0() SEQW GOTO U6e48
U5c75: mm0:= unk_72a(tmm1) 
U5c76: tmp0:= AND_DSZ32(0x00000001, tmp0) 

U5c78: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2af9) 
U5c79: LFNCEWAIT-> tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U5c7a: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U5c7c: tmp4:= OR_DSZ16(0x00000200, tmp4) 
FUN_ucode_0005c7d:
U5c7d: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000028, 0x48c) !m2 
U5c7e: tmp6:= AND_DSZ32(0x00000008, tmp5) 

U5c80: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U4505) 
U5c81: tmp14:= MOVEFROMCREG_DSZ64( , 0x01a) 
U5c82: LFNCEWAIT-> tmm0:= FMOV( , tmm0) SEQW GOTO U2a39

U5c84: LFNCEWAIT-> tmp11:= unk_e6b(tmp0, tmp2) !m1,m2 SEQW GOTO U4922
U5c85: tmp13:= CONCAT_DSZ16(0x000000c0) 
U5c86: tmp13:= OR_DSZ32(tmp7, tmp13) 

U5c88: SYNCFULL-> MOVETOCREG_DSZ64(tmp13, tmp1) !m2 
U5c89: tmp13:= ADD_DSZ32(0x00000002, tmp1) 
U5c8a: tmp13:= MOVEFROMCREG_DSZ64( , tmp13) 

U5c8c: tmp9:= READURAM( , 0x005a, 64) !m2 
FUN_ucode_0005c8d:
U5c8d: tmp13:= AND_DSZ64(tmp9, tmp13) 
U5c8e: tmp13:= SUB_DSZ64(tmp10, tmp13) 

U5c90: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp13, tmp14) 
U5c91: tmp13:= OR_DSZ32(tmp7, tmp3) 
U5c92: SYNCFULL-> MOVETOCREG_DSZ64(tmp13, tmp1) !m2 SEQW GOTO U304e

U5c94: MOVETOCREG_DSZ64( , 0x00000000, 0x000) SEQW GOTO U2048
U5c95: tmp0:= MOVEFROMCREG_DSZ64( , 0x609) 
U5c96: tmp4:= SHR_DSZ64(tmp0, 0x00000039) 

U5c98: tmp2:= AND_DSZ32(0x00000040, tmp4) 
U5c99: tmp2:= SHL_DSZ64(tmp2, 0x00000004) 
U5c9a: tmp4:= NOTAND_DSZ32(tmp4, 0x00000051) 

U5c9c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U5ca2) 
U5c9d: tmp0:= ZEROEXT_DSZ32(0x0000005a) 
FUN_ucode_0005c9e:
U5c9e: tmp0:= SHL_DSZ64(tmp0, 0x00000039) 

FUN_ucode_0005ca0:
U5ca0: tmp0:= OR_DSZ64(0x00000006, tmp0) 
U5ca1: MOVETOCREG_DSZ64(tmp1, 0x60a) !m2 
U5ca2: MOVETOCREG_OR_DSZ64(tmp0, 0x609, tmp2) !m2 

U5ca4: SIGEVENT( , 0x00000002) SEQW GOTO U079d
U5ca5: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000001, 0x2db) !m1 
U5ca6: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x00d4) !m2 

U5ca8: tmp10:= PORTIN_DSZ64_ASZ16_SC1(0x00d8) !m2 
U5ca9: BTUJNB_DIRECT_NOTTAKEN(tmp11, 0x0000001c, U03e6) 
U5caa: tmp12:= AND_DSZ32(0x000000ff, tmp11) 

U5cac: tmp7:= SUB_DSZ32(0x00000006, tmp12) 
U5cad: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp7, U03e4) 
FUN_ucode_0005cae:
U5cae: tmp6:= SHR_DSZ32(tmp11, 0x00000008) 

U5cb0: tmp6:= AND_DSZ32(0x0000ffff, tmp6) 
U5cb1: tmp7:= SHL_DSZ32(tmp12, 0x00000002) 
U5cb2: tmp7:= ADD_DSZ32(0x00002162, tmp7) 

U5cb4: SYNCFULL-> UJMP( , tmp7) 
U5cb5: NOP SEQW SAVEUIP0 U5cb6SEQW GOTO U60f2
U5cb6: WRITEURAM( , 0x00000000, 0x0007, 32) 

U5cb8: tmp0:= READURAM( , 0x0053, 64) 
U5cb9: tmp0:= NOTAND_DSZ64(0x00000008, tmp0) 
U5cba: WRITEURAM(tmp0, 0x0053, 32) 

U5cbc: tmp4:= READURAM( , 0x008d, 64) 
U5cbd: PORTOUT_DSZ32_ASZ16_SC1(0x0010,  , tmp4) !m2 
U5cbe: SAVEUIP_REGOVR(0x01, U5cc0, 0x0210) !m0 SEQW GOTO U28f1

U5cc0: tmp2:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000001) SEQW GOTO U5f54
U5cc1: tmp1:= SAR_DSZ64(tmp1, 0x00000010) 
U5cc2: tmp1:= SUB_DSZ64(tmp3, tmp1) 

U5cc4: tmp1:= SHL_DSZ64(tmp1, 0x00000010) 
U5cc5: tmp1:= SAR_DSZ64(tmp1, 0x00000010) 
U5cc6: tmp3:= SUB_DSZ32(tmp3, tmp5) 

U5cc8: tmp2:= BT_DSZ64(tmp5, 0x00000034) 
U5cc9: tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp2) 
U5cca: tmp2:= SHR_DSZ64(tmp5, 0x0000003f) 

U5ccc: tmp2:= SHL_DSZ64(tmp2, 0x0000003f) 
U5ccd: tmp5:= CMOVCC_DSZ64_CONDB(tmp1, tmp3) 
U5cce: tmp5:= BTR_DSZ64(tmp5, 0x0000003f) 

U5cd0: tmp5:= OR_DSZ64(tmp2, tmp5) SEQW URET0
U5cd1: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000008, 0x38a) !m1 SEQW GOTO U6380
U5cd2: tmp4:= MOVE_DSZ64(IMM_MACRO_ALIAS_RIP) !m0 

U5cd4: tmp9:= TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT | 0x0200) !m0,m1 ? SEQW GOTO U4910
U5cd5: tmp2:= LDZX_DSZ16_ASZ32_SC1(tmp2, IMM_MACRO_ALIAS_DATASIZE, mode=0x18) !m0 
U5cd6: MOVETOCREG_DSZ64(0x00000009, 0x000) !m2 

U5cd8: LFNCEWAIT-> tmp6:= RDSEGFLD(CS, FLGS) SEQW GOTO U2c01
U5cd9: tmp2:= AND_DSZ32(0x00000010, tmp2) 
FUN_ucode_0005cda:
U5cda: tmp2:= SHL_DSZ32(tmp2, 0x00000013) 

U5cdc: tmp5:= OR_DSZ64(tmp2, tmp5) 
U5cdd: tmp5:= OR_DSZ64(0x00000080, tmp5) 
U5cde: TESTUSTATE( , UCODE, !0x0200) !m0 ? SEQW GOTO U5ce1

U5ce0: tmp5:= XOR_DSZ64(0x00001080, tmp5) 
U5ce1: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x00c0) !m2 
U5ce2: tmp2:= AND_DSZ32(0x00800002, tmp1) 

U5ce4: tmp2:= SHL_DSZ64(tmp2, 0x0000000f) 
U5ce5: tmp5:= OR_DSZ64(tmp2, tmp5) 
U5ce6: tmp1:= AND_DSZ32(0x00000010, tmp1) 

U5ce8: tmp1:= SHR_DSZ32(tmp1, 0x00000001) SEQW GOTO U3056
U5ce9: tmp2:= SHR_DSZ32(tmp5, 0x0000000a) 
U5cea: tmp2:= AND_DSZ32(0x00007800, tmp2) 

U5cec: tmp1:= AND_DSZ32(0x00000001, tmp5) 
U5ced: tmp1:= SHL_DSZ32(tmp1, 0x00000002) 
U5cee: tmp2:= OR_DSZ32(tmp1, tmp2) 

U5cf0: tmp1:= AND_DSZ32(0x00000002, tmp5) 
U5cf1: tmp1:= SHL_DSZ32(tmp1, 0x00000009) 
U5cf2: ROVR<- tmp2:= OR_DSZ32(tmp1, tmp2) SEQW SAVEUIP1 U5cf4SEQW GOTO U02ba

U5cf4: tmp1:= PORTIN_DSZ16_ASZ16_SC1(0x00c0) !m2 
U5cf5: tmp1:= NOTAND_DSZ32(0x00007c04, tmp1) 
U5cf6: tmp1:= OR_DSZ32(tmp2, tmp1) 

U5cf8: PORTOUT_DSZ16_ASZ16_SC1(0x00c0,  , tmp1) !m2 SEQW GOTO U5718
U5cf9: tmp2:= SELECTCC_DSZ32_CONDNZ(tmp2, 0x00000080) 
U5cfa: tmp1:= XOR_DSZ32(tmp2, tmp1) 

U5cfc: tmp5:= OR_DSZ64(tmp1, tmp5) 
U5cfd: tmp1:= SHR_DSZ64(tmp5, 0x00000018) 
U5cfe: tmp1:= AND_DSZ32(0x00001800, tmp1) 

U5d00: tmp2:= BT_DSZ32(tmp1, 0x0000000c) 
U5d01: tmp1:= ADD_DSZ32(0x00000800, tmp1) 
U5d02: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00001800) 

U5d04: tmp1:= NOTAND_DSZ32(tmp2, tmp1) 
U5d05: tmp5:= OR_DSZ64(tmp1, tmp5) 
U5d06: tmp1:= BT_DSZ64(tmp5, 0x00000031) 

U5d08: tmp1:= SELECTCC_DSZ32_CONDB(tmp1, 0x00038000) SEQW GOTO U3056
U5d09: tmp13:= READUIP_REGOVR(0x00) 
U5d0a: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp14) 

U5d0c: tmp4:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp14, 0x00000050) 
U5d0d: tmp15:= SHL_DSZ32(tmp4, 0x00000004) 
U5d0e: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, U5f95, tmp7) !m2 

U5d10: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000054) 
U5d11: tmp15:= SUB_DSZ32(0x0000ffff, tmp15) 
U5d12: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 

U5d14: tmp15:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp14, 0x00000052) 
U5d15: tmp15:= AND_DSZ16(0x0000f8ff, tmp15) 
U5d16: tmp15:= SUB_DSZ16(0x000000f3, tmp15) 

U5d18: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) SEQW URET0
U5d19: tmp1:= ZEROEXT_DSZ32(0x00000120) SEQW GOTO U2f68
U5d1a: tmp2:= SHL_DSZ32(tmp2, 0x00000004) 

U5d1c: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3759
U5d1d: tmp3:= READURAM( , 0x0043, 64) 
U5d1e: SYNCMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000024, U3759) !m1,m2 

U5d20: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp1, tmp2) SEQW GOTO U375a
U5d21: tmp15:= SUB_DSZ32(0x00000003, tmp5) 
U5d22: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp15, U5f95) 

U5d24: tmp15:= SUB_DSZ32(0x00000003, tmp5) 
U5d25: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00001000) 
U5d26: tmp15:= AND_DSZ32(tmp10, tmp15) 

U5d28: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f95) 
U5d29: tmp15:= SUB_DSZ32(0x00000001, tmp5) 
U5d2a: tmp14:= unk_201(0x00000001, tmp15) 

U5d2c: tmp15:= SETCC_CONDZ(tmp15) 
U5d2d: CMPUJZ_DIRECT_NOTTAKEN(tmp14, 0x00000000, U5f95) !m2 
U5d2e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U5f95) 

U5d30: LFNCEMARK-> tmp3:= OR_DSZ32(tmp3, tmp15) SEQW GOTO U1708
U5d31: TESTUSTATE( , VMX, 0x0001) !m2 ? SEQW URET1
U5d32: tmp0:= ZEROEXT_DSZ32(0x00002001) 

U5d34: tmp11:= READURAM( , 0x0043, 64) 
U5d35: tmp1:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U5d3d
U5d36: tmp15:= READURAM( , 0x004c, 64) 

U5d38: tmp15:= BT_DSZ64(tmp15, 0x00000037) 
FUN_ucode_0005d39:
U5d39: tmp11:= CMOVCC_DSZ64_CONDB(tmp15, tmp11) 
U5d3a: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00020000) 

U5d3c: tmp0:= OR_DSZ32(tmp15, tmp0) 
U5d3d: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x0000003f, U635c) !m0,m1 
U5d3e: MOVETOCREG_DSZ64(tmp10, 0x7fe) !m2 

U5d40: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U73ad) !m1,m2 SEQW GOTO U4f5e
U5d41: tmp13:= READUIP_REGOVR(0x00) 
U5d42: tmp7:= SHR_DSZ32(tmp0, 0x00000001) 

U5d44: tmp7:= AND_DSZ64(0x00000070, tmp7) 
U5d45: tmp7:= ADD_DSZ64(tmp8, tmp7) 
U5d46: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, tmp7) 

U5d48: tmp9:= BTR_DSZ32(tmp9, tmp0) 
U5d49: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, tmp7, tmp9) 
U5d4a: tmp9:= ADD_DSZ32(0x00000070, tmp8) 

U5d4c: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, tmp9) 
U5d4d: CMPUJNZ_DIRECT_NOTTAKEN(tmp7, 0x00000000, U4b7d) 
U5d4e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U304e) 

U5d50: tmp9:= SUB_DSZ8(0x00000010, tmp9) SEQW GOTO U5d4c
U5d51: TESTUSTATE( , UCODE, 0x0400) ? SEQW URET1
U5d52: tmpv2:= MOVEFROMCREG_DSZ64( , 0x529) 

U5d54: LFNCEMARK-> tmpv1:= READURAM( , 0x0052, 64) 
U5d55: tmpv0:= NOTAND_DSZ64(0x0000001f, tmpv2) 
U5d56: tmpv0:= SUB_DSZ64(tmpv1, tmpv0) 

U5d58: tmpv0:= SELECTCC_DSZ32_CONDNZ(tmpv0, 0x00000001) 
U5d59: LFNCEWAIT-> tmpv1:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U5d5a: tmpv1:= BT_DSZ32(tmpv1, 0x00000007) 

U5d5c: tmpv1:= MOVEMERGEFLGS_DSZ32(0x00000001, tmpv1) 
U5d5d: tmpv0:= CMOVCC_DSZ32_CONDNB(tmpv1, tmpv0) 
U5d5e: tmpv0:= OR_DSZ32(0x000000b4, tmpv0) 

U5d60: LFNCEMARK-> MOVETOCREG_DSZ64(0x00000002, tmpv0) !m2 SEQW URET0
U5d61: WRITEURAM( , 0x00000000, 0x0007, 32) SEQW GOTO U79a8
U5d62: SAVEUIP( , 0x00, U456e) 

U5d64: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U0b92
U5d65: tmp0:= OR_DSZN(0x00010000) !m1 
U5d66: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U0b92) 

U5d68: SAVEUIP( , 0x01, U221e) !m0 SEQW GOTO U2f02
U5d69: TESTUSTATE( , UCODE, 0x3000) ? SEQW URET1
U5d6a: LFNCEWAIT-> tmp3:= MOVEFROMCREG_DSZ64( , 0x01c) 

U5d6c: tmp9:= AND_DSZ32(0x0000000f, tmp3) 
U5d6d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U06ae) 
U5d6e: tmp9:= READURAM( , 0x0012, 64) 

U5d70: BTUJNB_DIRECT_NOTTAKEN(tmp9, 0x0000000a, U06ae) !m0 
U5d71: tmp5:= ZEROEXT_DSZ32(0x0000040a) 
U5d72: tmp5:= BTS_DSZ32(tmp5, 0x00000010) 

U5d74: SAVEUIP_REGOVR( , 0x01, U5d75, 0xc859) !m0 SEQW GOTO U6d0c
U5d75: tmpv0:= AND_DSZ64(0x0000000f, tmp3) 
U5d76: SAVEUIP( , 0x01, U2ab5) !m0 

U5d78: SAVEUIP( , 0x00, U3a34) SEQW GOTO U334d
U5d79: tmp7:= LDZX_DSZ32_ASZ32_SC1(tmp11, 0x00000018, mode=0x18) 
U5d7a: tmp3:= AND_DSZ32(0xffff0000, tmp7) 

U5d7c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U2711) 
U5d7d: tmm5:= unk_707(mm7) 
U5d7e: LDHINT_BUFFER_ASZ32_SC1(tmp11, 0x000018c0) 

U5d80: LFNCEMARK-> tmm6:= unk_691(tmm5) 
U5d81: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U5ee4
U5d82: SAVEUIP( , 0x00, U24fd) 

U5d84: tmp3:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 
U5d85: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000003f, U5ee5) !m0,m2 
U5d86: tmp3:= unk_205() !m1 

U5d88: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U5ee5) SEQW URET0
U5d89: tmm5:= unk_741() !m2 SEQW GOTO U4129
U5d8a: tmp14:= NOTAND_DSZ32(0x00000000, tmp14) 

U5d8c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp14, U5d8d) SEQW GOTO U5c54
U5d8d: tmp4:= ZEROEXT_DSZ32(0x00000007) 
U5d8e: tmp10:= OR_DSZ32(rdx) 

U5d90: tmp13:= ZEROEXT_DSZ32(0x00005c54) SEQW GOTO U1a5e
U5d91: tmp9:= LDZX_DSZ64_ASZ32_SC1(tmp8, mode=0x18) 
U5d92: tmp10:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000008, mode=0x18) 

U5d94: LFNCEWAIT-> WRITEURAM(tmp10, 0x004b, 64) 
U5d95: tmp10:= NOTAND_DSZ64(0x00000fff, tmp9) 
U5d96: tmp10:= SHL_DSZ64(tmp10, 0x00000010) 

U5d98: tmp10:= SAR_DSZ64(tmp10, 0x00000010) 
U5d99: WRSEGFLD(tmp10) 
U5d9a: tmp10:= MOVEFROMCREG_DSZ64( , 0x701) 

U5d9c: tmp9:= AND_DSZ32(0x00000003, tmp9) 
U5d9d: tmp9:= SHL_DSZ32(tmp9, 0x0000001c) 
U5d9e: tmp10:= NOTAND_DSZ64(0x30000000, tmp10) 

U5da0: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp10, 0x701, tmp9) SEQW URET1
U5da1: tmp0:= CONCAT_DSZ16(0x00000004) SEQW GOTO U50b4
U5da2: tmp0:= READURAM( , 0x0022, 64) !m2 

U5da4: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U5da5) !m2 SEQW GOTO U5af2
U5da5: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U5b02) !m2 
U5da6: tmp0:= unk_13f(tmp0) 

U5da8: tmp7:= MOVEMERGEFLGS_DSZ64(tmp7, tmp0) SEQW GOTO U21b8
U5da9: tmp0:= READURAM( , 0x0077, 64) 
U5daa: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000022, U5db6) !m0,m2 

U5dac: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x50dc) !m2 
U5dad: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U5db6) !m2 
U5dae: tmp0:= MOVEFROMCREG_DSZ64( , 0x575) 

U5db0: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000000b, U5db6) !m0,m2 
U5db1: LFNCEMARK-> tmp0:= MOVEFROMCREG_DSZ64( , 0x562) 
U5db2: tmp0:= NOTAND_DSZ64(0x00000fff, tmp0) 

U5db4: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, 0x00000018, mode=0x01) 
U5db5: CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U1b75) !m2 
U5db6: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 

U5db8: tmp5:= BTS_DSZ32(0x00000000, 0x00000010) SEQW GOTO U28e8
U5db9: tmp15:= READURAM( , 0x0020, 64) 
U5dba: tmp15:= BT_DSZ64(tmp15, 0x00000001) 

U5dbc: tmp15:= SELECTCC_DSZ64_CONDNB(tmp15, 0x00003b00) 
U5dbd: tmp15:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp15, 0x00000020) 
U5dbe: SYNCFULL-> UFLOWCTRL( , tmp15, URET1) 

U5dc0: tmpv1:= MOVEFROMCREG_DSZ64( , 0x562) 
U5dc1: tmpv1:= NOTAND_DSZ64(0x00000fff, tmpv1) 
U5dc2: tmpv0:= LDPPHYS_DSZ32_ASZ64_SC1(tmpv1, mode=0x01) !m2 

U5dc4: tmpv2:= ZEROEXT_DSZ32(0x00000001) 
U5dc5: STADPPHYS_DSZ32_ASZ64_SC1(tmpv1, mode=0x01,  , tmpv2) !m2 
U5dc6: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U248d) !m1 

U5dc8: MSSTOP-> NOP SEQW GOTO U5dc2
U5dc9: tmp15:= SUB_DSZ64(0x00000009, rcx) 
U5dca: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp15, U2711) 

FUN_ucode_0005dcc:
U5dcc: tmp5:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U5dcd: tmp2:= READURAM( , 0x0011, 64) 
U5dce: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000270, mode=0x01, tmp2) 

U5dd0: MOVETOCREG_DSZ64(tmp2, 0x7fe) !m2 
U5dd1: tmp0:= SHL_DSZ32(rcx, 0x0000000b) 
U5dd2: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp3, 0x752, tmp0) !m2 

U5dd4: tmp15:= unk_20f() !m1 
U5dd5: tmp4:= MOVEMERGEFLGS_DSZ64(tmp4, tmp15) 
U5dd6: r64dst:= CMOVCC_DSZ64_CONDZ(tmp4, r64dst) 

U5dd8: SYNCFULL-> MOVETOCREG_DSZ64(tmp5, 0x7fe) !m2 SEQW GOTO U1bd0
FUN_ucode_0005dd9:
U5dd9: tmm2:= unk_6a7(tmm1, tmm0) 
U5dda: mm6:= unk_76a(tmm2) 

U5ddc: SAVEUIP( , 0x00, U5c04) 
U5ddd: tmp6:= AND_DSZ32(0x00000007, tmp6) 
U5dde: tmp2:= SHR_DSZ32(tmp6, 0x00000002) 

U5de0: tmp3:= AND_DSZ32(0x00000002, tmp6) 
U5de1: tmp3:= SHL_DSZ32(tmp3, 0x00000002) 
U5de2: tmp2:= OR_DSZ32(tmp3, tmp2) 

U5de4: tmp3:= AND_DSZ32(0x00000001, tmp6) 
U5de5: tmp3:= SHL_DSZ32(tmp3, 0x00000001) 
U5de6: tmp2:= OR_DSZ32(tmp3, tmp2) 

U5de8: tmm5:= unk_741(mm2) !m2 SEQW URET0
U5de9: NOP SEQW GOTO U6995
FUN_ucode_0005dea:
U5dea: tmp0:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U5dec: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000008, U5ded) !m2 SEQW GOTO U1be4
U5ded: WRITEURAM( , 0x00000000, 0x0067, 64) 
U5dee: tmp0:= ZEROEXT_DSZ16(0x00001be4) 

U5df0: tmp0:= CONCAT_DSZ16(0x00000083, tmp0) 
U5df1: WRITEURAM(tmp0, 0x0007, 32) SEQW GOTO U3b5c
U5df2: tmp2:= ZEROEXT_DSZ32(0x00000001) 

U5df4: SAVEUIP_REGOVR(0x01, U5df5, 0x0032) !m0 SEQW GOTO U07b5
U5df5: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 
U5df6: tmp0:= SUB_DSZ32(tmp2, tmp0) 

U5df8: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp0, tmp1) 
U5df9: tmp4:= ADD_DSZ32(tmp1, tmp4) SEQW GOTO U1f9a
FUN_ucode_0005dfa:
U5dfa: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x7fe) !m2 

U5dfc: SAVEUIP_REGOVR(0x00, U5dfd, 0x0007) SEQW GOTO U02fa
U5dfd: tmp7:= RDSEGFLD(CS, FLGS) 
U5dfe: MOVETOCREG_DSZ64(tmp7, 0x7f5) 

U5e00: tmp15:= ZEROEXT_DSZ32(0x00000034) 
U5e01: tmp3:= ZEROEXT_DSZ32(0x00000028) SEQW GOTO U6576
U5e02: tmpv2:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U5e04: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmpv2, 0x0000001f, U5e05) !m0,m2 SEQW GOTO U5e02
U5e05: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmpv1) !m2 
FUN_ucode_0005e06:
U5e06: tmpv0:= BTS_DSZ32(tmpv0, 0x0000001f) 

U5e08: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmpv0) !m2 
U5e09: SYNCFULL-> tmpv1:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U5e0a: BTUJNB_DIRECT_NOTTAKEN(tmpv1, 0x0000001f, U1db2) !m0,m2 SEQW GOTO U5e09

U5e0c: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp4) SEQW GOTO U64da
U5e0d: SYNCFULL-> tmp1:= MOVEFROMCREG_DSZ64( , 0x2bc, 32) !m1 
U5e0e: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000002, 0x2bc) !m0,m1 

U5e10: tmp1:= XOR_DSZ32(0x00000001, tmp2) 
U5e11: tmp2:= SHR_DSZ32(tmp2, 0x0000001e) 
U5e12: tmp2:= AND_DSZ32(0x00000001, tmp2) 

U5e14: tmp1:= AND_DSZ32(tmp1, tmp2) 
U5e15: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U38a5) 
U5e16: tmp1:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 

U5e18: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x2c4) !m1,m2 
U5e19: tmp1:= READURAM( , 0x0070, 64) 
U5e1a: tmp1:= BTS_DSZ64(tmp1, 0x00000001) 

U5e1c: WRITEURAM(tmp1, 0x0070, 64) !m2 SEQW GOTO U38a5
U5e1d: tmp0:= ZEROEXT_DSZ32() 
U5e1e: tmp1:= ZEROEXT_DSZ32() 

U5e20: tmp2:= ADD_DSZ64(0xfffffffffffffe40, tmp0) 
FUN_ucode_0005e21:
U5e21: tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp2) 
U5e22: tmp1:= ADD_DSZ8(tmp2, tmp1) 

U5e24: tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0) 
U5e25: tmp1:= ADD_DSZ8(tmp2, tmp1) 
U5e26: tmp3:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp1) 

U5e28: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0, tmp3) 
U5e29: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp1, tmp2) 
U5e2a: tmp0:= ADD_DSZ8(0x00000001, tmp0) 

U5e2c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U2b3d) SEQW GOTO U5e20
U5e2d: tmp0:= ZEROEXT_DSZ32(IMM_MACRO_ALIAS_MSLOOPCTR) !m0 
U5e2e: WRITEURAM(tmp0, 0x0108, 64) !m2 

U5e30: tmp0:= AND_DSZ32(0x000000ff, tmp1) 
U5e31: SYNCFULL-> UFLOWCTRL( , tmp0, MSLOOPCTR) 
U5e32: tmp0:= SHR_DSZ32(tmp1, 0x00000008) 

U5e34: tmp1:= AND_DSZ32(0x0000000f, tmp1) 
U5e35: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U2155) !m1 
U5e36: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000010, U217c) !m1 

U5e38: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000001, U3126) !m1,m2 
U5e39: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000011, U5da2) !m2 
U5e3a: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000012, U5e4e) !m0,m2 

U5e3c: WRITEURAM(rdi, 0x0022, 64) !m2 SEQW GOTO U21b8
U5e3d: tmp1:= PINTMOVDTMM2I_DSZ64(tmm1) 
U5e3e: tmp3:= SUB_DSZ64(tmp1, rdx) 

U5e40: tmp4:= OR_DSZ64(tmp3, tmp4) 
U5e41: tmp3:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 
U5e42: GENARITHFLAGS(tmp3, tmp4) !m2 

U5e44: tmp0:= CMOVCC_DSZ64_CONDZ(rbx, tmp0) !m2 
U5e45: tmp1:= CMOVCC_DSZ64_CONDZ(rcx, tmp1) !m2 
U5e46: tmm2:= unk_744(mm0) 

U5e48: tmm3:= unk_744(mm1) 
U5e49: tmm4:= MOVHLPS(tmm2, tmm3) 
U5e4a: tmp12:= unk_c1e(tmp2) !m1,m2 

U5e4c: rax:= CMOVCC_DSZ64_CONDNZ(tmp0, rax) !m2 
U5e4d: rdx:= CMOVCC_DSZ64_CONDNZ(tmp1, rdx) !m2 SEQW UEND0
FUN_ucode_0005e4e:
U5e4e: rdi:= READURAM( , 0x0022, 64) !m2 SEQW GOTO U21b8

U5e50: tmp7:= READURAM( , 0x0000, 64) !m2 SEQW GOTO U2158
U5e51: tmp3:= READURAM( , 0x0056, 64) 
U5e52: tmp13:= ZEROEXT_DSZ32(0x00000002) 

U5e54: SAVEUIP_REGOVR(0x01, U5e55, 0x0056) !m0 SEQW GOTO U1962
U5e55: MOVEINSERTFLGS_DSZ32() !m2 
U5e56: tmp2:= SUB_DSZ64(tmp12, tmp3) 

U5e58: tmp2:= MOVEMERGEFLGS_DSZ64(0xffffffffffffffff, tmp2) 
U5e59: tmp3:= CMOVCC_DSZ64_CONDZ(tmp2, tmp3) 
U5e5a: LFNCEWTMRK-> WRITEURAM(tmp3, 0x0056, 64) 

U5e5c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000278, tmp12, 0x00000000) 
U5e5d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b0, tmp12, 0x00000000) 
U5e5e: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp12, 0x00000000) 

U5e60: tmp5:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U5e61: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000039, U57d9) !m2 SEQW GOTO U008e
U5e62: tmp15:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U5e64: MOVETOCREG_BTR_DSZ64(tmp15, 0x00000003, 0x6c3) !m0,m2 SEQW SAVEUIP1 U5e65SEQW GOTO U2074
U5e65: tmp15:= MOVEFROMCREG_DSZ64( , 0x105) 
U5e66: LFNCEWAIT-> MOVETOCREG_OR_DSZ64(tmp15, 0x00000004, 0x105) 

fit_process_error:
U5e68: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x4c18) !m2 
U5e69: tmp15:= OR_DSZ32(0x00000001, tmp15) 
U5e6a: SYNCMARK-> PORTOUT_DSZ32_ASZ16_SC1(0x4c18,  , tmp15) !m2 SEQW URET0

U5e6c: tmp7:= READURAM( , 0x0001, 64) !m2 SEQW GOTO U2158
U5e6d: tmp14:= READUIP_REGOVR(0x01) !m0 
U5e6e: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000f0, mode=0x1c, tmpv1) 

U5e70: tmpv3:= NOTAND_DSZ32(0x0000001f, tmp10) 
U5e71: tmp10:= MOVEMERGEFLGS_DSZ64(tmp10, tmpv3) 
U5e72: tmp10:= CMOVCC_DSZ32_CONDZ(tmp10, 0x0000001f) 

U5e74: tmp10:= SHL_DSZ64(tmp10, 0x0000002a) 
U5e75: tmpv2:= OR_DSZ64(tmp10, tmpv2) 
U5e76: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000e8, mode=0x1c, tmpv1) 

U5e78: tmp10:= AND_DSZ32(0x0000001f, tmp10) 
U5e79: tmp10:= SELECTCC_DSZ32_CONDNZ(tmpv3, tmp10) 
U5e7a: tmp10:= SHL_DSZ64(tmp10, 0x00000025) 

U5e7c: tmpv2:= OR_DSZ64(tmp10, tmpv2) 
U5e7d: LFNCEMARK-> WRITEURAM(tmpv2, 0x011f, 64) SEQW URET1
U5e7e: tmp0:= READURAM( , 0x0008, 64) !m2 SEQW GOTO U312a

FUN_ucode_0005e80:
U5e80: LFNCEWAIT-> WRITEURAM(tmp1, 0x0008, 64) !m2 SEQW GOTO U21b8
U5e81: tmp4:= SHR_DSZ64(tmp6, 0x00000012) 
U5e82: tmp4:= AND_DSZ32(0x0000003f, tmp4) 

U5e84: tmp1:= ZEROEXT_DSZ32(0x00000003) 
U5e85: tmp5:= unk_2e6(tmp1, tmp4) 
U5e86: tmp4:= unk_361(tmp5) 

U5e88: tmp4:= SETCC_CONDNZ(tmp4) 
U5e89: tmp4:= ADD_DSZ8(tmp5, tmp4) 
U5e8a: tmp4:= unk_2e4(tmp1, tmp4) 

U5e8c: tmp4:= AND_DSZ32(0x0000003f, tmp4) 
U5e8d: tmp4:= SHL_DSZ32(tmp4, 0x00000009) 
U5e8e: tmp5:= MOVEFROMCREG_DSZ64( , 0x401) 

U5e90: tmp5:= NOTAND_DSZ32(0x00007e00, tmp5) 
U5e91: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmp5, 0x401, tmp4) SEQW URET0
U5e92: SAVEUIP_REGOVR(0x01, U5e94, 0x0000) !m0 SEQW GOTO U2b0d

U5e94: SIGEVENT( , 0x000000b2) SEQW UEND2
U5e95: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U24ed
U5e96: tmp12:= WRMSLOOPCTRFBR(0x0000000f) 

U5e98: tmp11:= ADD_DSZN(0x00000080, tmp11) !m1 
U5e99: tmp11:= ADD_DSZN(0x00000080, tmp11) !m1 SEQW GOTO U24f0
U5e9a: tmp1:= ZEROEXT_DSZ32() 

U5e9c: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U5ea0
U5e9d: tmpv1:= READURAM( , 0x004c, 64) 
U5e9e: BTUJB_DIRECT_NOTTAKEN(tmpv1, U73ac, tmpv0) !m1,m2 

U5ea0: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1db2
U5ea1: tmpv1:= READURAM( , 0x0043, 64) 
U5ea2: BTUJB_DIRECT_NOTTAKEN(tmpv1, U4f5d, tmpv0) SEQW URET1

U5ea4: tmp14:= MOVEFROMCREG_DSZ64( , 0x000) SEQW SAVEUIP0 U5ea5SEQW GOTO U6a56
U5ea5: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000015, 0x06d) !m2 
FUN_ucode_0005ea6:
U5ea6: tmp0:= ZEROEXT_DSZ32(0x00000002) 

U5ea8: SAVEUIP( , 0x01, U079d) !m0 SEQW GOTO U0c69
U5ea9: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x0b5) !m2 
U5eaa: tmpv1:= TESTUSTATE( , UCODE, 0x0400) ? SEQW URET1

U5eac: tmpv0:= READUIP_REGOVR(0x01) !m0 
U5ead: tmp14:= CONCAT_DSZ32(tmp14, tmpv0) 
U5eae: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x0b1) 

U5eb0: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000002, U0416) !m0 
U5eb1: tmpv0:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U5eb2: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x0000000a, U6b84) !m0,m1 

U5eb4: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmpv3, U6b68) 
U5eb5: tmpv0:= MOVEFROMCREG_DSZ64( , 0x000) 
U5eb6: tmpv0:= AND_DSZ32(0x0000003f, tmpv0) 

U5eb8: tmpv0:= SUB_DSZ32(0x0000000a, tmpv0) 
U5eb9: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv0, U6b6e) SEQW GOTO U6b69
U5eba: tmp14:= READUIP_REGOVR(0x01) !m0 

U5ebc: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U5e95
U5ebd: SAVEUIP( , 0x00, U24ed) 
U5ebe: tmp7:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 

U5ec0: BTUJB_DIRECT_NOTTAKEN(tmp7, 0x0000003f, U5e96) !m0,m2 
U5ec1: tmp7:= unk_205() !m1 
U5ec2: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U5e96) SEQW URET0

U5ec4: MOVETOCREG_BTS_DSZ64( , 0x0000000a, 0x00b) !m0,m2 SEQW SAVEUIP1 U5ec5SEQW GOTO U215d
U5ec5: tmp13:= SAVEUIP(0x00, U5b64) 
U5ec6: LFNCEMARK-> tmp9:= ZEROEXT_DSZ32(0x00000109) 

U5ec8: tmp10:= MOVEFROMCREG_DSZ64( , 0x101) SEQW GOTO U3d5a
U5ec9: tmp3:= AND_DSZ32(0x00000007, tmp3) 
U5eca: tmp0:= NOTAND_DSZ32(0x00000038, tmp10) 

U5ecc: tmp0:= MOVEMERGEFLGS_DSZ64(tmp0, tmp3) 
U5ecd: tmp10:= CMOVCC_DSZ32_CONDNZ(tmp0, tmp10) 
U5ece: tmp0:= OR_DSZ32(tmp10, tmp15) 

U5ed0: tmp0:= OR_DSZ32(tmp9, tmp0) 
U5ed1: tmm5:= unk_707(mm0) 
U5ed2: LFNCEMARK-> tmm6:= unk_691(tmm5) 

U5ed4: tmp3:= MOVEFROMCREG_DSZ64( , 0x7c5) 
rc4_decrypt:
U5ed5: tmp3:= BT_DSZ32(tmp3, 0x0000000a) 
U5ed6: LFNCEWAIT-> tmp1:= MOVEMERGEFLGS_DSZ64(0x00000019, tmp3) 

U5ed8: tmp1:= CMOVCC_DSZ32_CONDNB(tmp1, 0x0000004d) 
U5ed9: SIGEVENT( , tmp1) SEQW GOTO U079d
U5eda: tmp1:= MOVEFROMCREG_DSZ64( , 0x701) 

U5edc: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U5edd) !m2 SEQW GOTO U5ee2
U5edd: tmp0:= READURAM( , 0x005c, 64) 
U5ede: tmp0:= OR_DSZ32(0x00001000, tmp0) 

U5ee0: WRITEURAM(tmp0, 0x005c, 32) 
U5ee1: WRITEURAM( , 0x00000000, 0x004b, 64) 
U5ee2: SIGEVENT( , 0x00000015) SEQW GOTO U079d

U5ee4: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U24fd
U5ee5: tmp12:= WRMSLOOPCTRFBR(0x0000000f) 
U5ee6: tmp11:= ADD_DSZN(0x00000080, tmp11) !m1 

FUN_ucode_0005ee8:
U5ee8: tmp11:= ADD_DSZN(0x00000080, tmp11) !m1 SEQW GOTO U2500
U5ee9: SAVEUIP( , 0x00, U39d6) 
U5eea: tmm4:= unk_624(tmm0, tmm0) 

U5eec: tmm5:= unk_624(tmm1, tmm1) 
U5eed: tmp0:= PINTMOVDTMM2I_DSZ32(tmm4) 
U5eee: tmp1:= PINTMOVDTMM2I_DSZ32(tmm5) 

U5ef0: tmp0:= SHR_DSZ32(tmp0, 0x00000002) 
U5ef1: tmp2:= AND_DSZ32(0x00000007, tmp0) 
U5ef2: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 

U5ef4: tmp8:= AND_DSZ32(0x0000000f, tmp1) 
U5ef5: tmp2:= OR_DSZ32(tmp8, tmp2) 
U5ef6: tmm0:= unk_72a(tmm0) 

U5ef8: tmp8:= SHL_DSZ32(tmp8, 0x00000004) 
U5ef9: tmp2:= OR_DSZ32(tmp8, tmp2) SEQW URET0
U5efa: TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U3210

U5efc: SYNCWAIT-> UJMPCC_DIRECT_NOTTAKEN_CONDP(tmp8, U48b1) 
U5efd: tmp13:= SAVEUIP(0x00, U4422) 
U5efe: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U08e6

U5f00: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000008, mode=0x01,  , tmp5) SEQW URET0
U5f01: TESTUSTATE( , SYS, UST_VMX_OP_DIS) !m1 ? SEQW GOTO U5f06
U5f02: LFNCEWAIT-> tmp6:= READURAM( , 0x0079, 64) 

U5f04: tmp6:= unk_163(0x00000000, tmp6) 
U5f05: MOVETOCREG_SHR_DSZ64(tmp6, 0x00000008, 0x79d) 
U5f06: SAVEUIP( , 0x00, U7689) SEQW GOTO U23d1

U5f08: tmp1:= MOVEFROMCREG_DSZ64( , 0x565) SEQW SAVEUIP1 U5f09SEQW GOTO U043c
U5f09: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 
U5f0a: tmp1:= MOVEFROMCREG_DSZ64( , 0x105) 

U5f0c: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp1, 0x0000000f, 0x105) !m0,m2 SEQW GOTO U6380
U5f0d: tmp2:= ZEROEXT_DSZ32(tmp10) 
U5f0e: tmp0:= READURAM( , 0x005c, 64) 

U5f10: tmp0:= BT_DSZ64(tmp0, 0x00000010) 
U5f11: tmp2:= SELECTCC_DSZ32_CONDB(tmp0, tmp2) 
U5f12: tmp0:= ZEROEXT_DSZ32(0x00000012) 

U5f14: tmp0:= CONCAT_DSZ16(0x00000100, tmp0) 
U5f15: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000000, U3d0c) !m1,m2 
U5f16: tmp0:= ZEROEXT_DSZ32(0x00000011) 

U5f18: tmp0:= CONCAT_DSZ16(0x00000100, tmp0) 
U5f19: tmp2:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U5f1a: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000f, U3d0c) !m0,m1,m2 

U5f1c: tmp14:= READURAM( , 0x000d, 64) 
U5f1d: tmp14:= ZEROEXT_DSZ16(tmp14) SEQW GOTO U0414
U5f1e: tmpv0:= READURAM( , 0x0043, 64) 

U5f20: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U3a2c
U5f21: tmpv1:= READURAM( , 0x004c, 64) 
U5f22: tmpv2:= CONCAT_DSZ16(0x00000038) 

U5f24: tmpv2:= CONCAT_DSZ32(0x00000008, tmpv2) 
U5f25: tmpv1:= NOTAND_DSZ64(tmpv2, tmpv1) 
U5f26: tmpv0:= OR_DSZ64(tmpv1, tmpv0) SEQW GOTO U3a2c

U5f28: WRITEURAM(tmp11, 0x000e, 64) !m2 SEQW SAVEUIP0 U5f29SEQW GOTO U60f2
FUN_ucode_0005f29:
U5f29: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x00c0) !m2 
U5f2a: tmp1:= BTR_DSZ32(tmp1, 0x00000003) 

U5f2c: PORTOUT_DSZ8_ASZ16_SC1(0x00c0,  , tmp1) !m2 SEQW GOTO U6732
U5f2d: tmp0:= ADD_DSZ8(0x00000001, tmp0) 
U5f2e: tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0) 

U5f30: tmp1:= ADD_DSZ8(tmp2, tmp1) 
U5f31: tmp3:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp1) 
FUN_ucode_0005f32:
U5f32: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0, tmp3) 

U5f34: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp1, tmp2) 
U5f35: tmp2:= ADD_DSZ8(tmp3, tmp2) 
U5f36: tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp2) 

U5f38: tmp3:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp5, mode=0x01) 
U5f39: tmp3:= XOR_DSZ8(tmp2, tmp3) 
U5f3a: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp5, mode=0x01,  , tmp3) 

U5f3c: tmp5:= ADD_DSZ64(0x00000001, tmp5) 
U5f3d: tmp6:= SUB_DSZ32(0x00000001, tmp6) 
U5f3e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, tmp8) SEQW GOTO U5f2d

U5f40: tmp0:= ZEROEXT_DSZ32(0x00000002) SEQW SAVEUIP0 U5f41SEQW GOTO U60e5
U5f41: WRITEURAM( , 0x00000000, 0x0053, 64) 
U5f42: tmp14:= READURAM( , 0x004e, 64) 

U5f44: tmp6:= READURAM( , 0x002c, 64) 
U5f45: SAVEUIP( , 0x00, U0414) SEQW GOTO U2d28
U5f46: tmp12:= READURAM( , 0x0057, 64) 

U5f48: TESTUSTATE( , VMX, 0x1000) !m2 ? SEQW SAVEUIP0 U5f49? SEQW GOTO U00f1
U5f49: tmp4:= MOVEFROMCREG_DSZ64( , 0x513) 
U5f4a: tmp5:= ZEROEXT_DSZ32(0x000000ff) 

U5f4c: tmp5:= CONCAT_DSZ32(tmp5, 0xfffffffffffff000) 
U5f4d: tmp4:= AND_DSZ64(tmp5, tmp4) 
U5f4e: tmp14:= READUIP_REGOVR(0x01) !m0 

U5f50: tmp3:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp4, 0x00000080, mode=0x1c) SEQW GOTO U0c72
U5f51: MOVETOCREG_BTS_DSZ64( , 0x00000003, 0x29d) !m0,m1,m2 
U5f52: tmp2:= ZEROEXT_DSZ32() 

U5f54: tmp1:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 
U5f55: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U2d24) !m0,m1 
U5f56: tmp0:= ZEROEXT_DSZ32(0x00002d22) 

U5f58: WRITEURAM(tmp0, 0x000d, 32) !m2 
U5f59: tmp2:= OR_DSZ32(0x000000c0, tmp2) 
U5f5a: tmp1:= READURAM( , 0x0035, 64) 

U5f5c: tmp1:= BT_DSZ32(tmp1, 0x00000007) 
U5f5d: tmp1:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00000002) 
U5f5e: MOVETOCREG_OR_DSZ64(tmp2, 0x6c5, tmp1) !m2 

U5f60: tmp0:= READURAM( , 0x005c, 64) 
U5f61: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U1136) !m2 
U5f62: tmp14:= ZEROEXT_DSZ32(0x00001136) SEQW GOTO U4c35

U5f64: NOP SEQW SAVEUIP1 U5f65SEQW GOTO U0cb9
U5f65: tmp7:= PORTIN_DSZ32_ASZ16_SC1(0x0018) !m2 
U5f66: tmp7:= SUB_DSZ32(0x00000001, tmp7) 

U5f68: tmp7:= SUB_DSZ32(tmp5, tmp7) 
U5f69: PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , tmp7) !m2 
U5f6a: PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 SEQW GOTO U304e

U5f6c: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U1db2
U5f6d: tmpv0:= READURAM( , 0x0012, 64) 
U5f6e: tmpv1:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U5f70: tmpv0:= SHR_DSZ32(tmpv0, 0x0000001a) 
U5f71: tmpv0:= AND_DSZ32(0x00000020, tmpv0) 
U5f72: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmpv1, 0x6c3, tmpv0) SEQW URET1

U5f74: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U2b5d
U5f75: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1 
U5f76: tmp0:= OR_DSZ32(0x30000000, tmp0) 

U5f78: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3ff, 32) !m1 
U5f79: tmp0:= OR_DSZ32(0xc0000040, tmp0) 
FUN_ucode_0005f7a:
U5f7a: MOVETOCREG_DSZ64(tmp0, 0x3ff, 32) !m1,m2 SEQW GOTO U2b5d

U5f7c: SAVEUIP_REGOVR(0x01, U5f7d, 0x000e) !m0 SEQW GOTO U02ba
U5f7d: SYNCWAIT-> tmp14:= PORTIN_DSZ32_ASZ16_SC1(0x9708) !m2 
U5f7e: tmp14:= BTS_DSZ32(tmp14, 0x00000000) 

U5f80: PORTOUT_DSZ32_ASZ16_SC1(0x9708,  , tmp14) !m2 
U5f81: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
U5f82: LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(0x0000000b) SEQW GOTO U079e

U5f84: SAVEUIP_REGOVR(0x00, U5f85, 0x0000) SEQW GOTO U0725
U5f85: tmp0:= MOVEFROMCREG_DSZ64( , 0x7bb) 
U5f86: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000008, 0x7bb) !m2 

U5f88: MOVETOCREG_DSZ64( , 0x00000000, 0x2f1, 32) !m1,m2 
U5f89: PORTOUT_DSZ64_ASZ16_SC1(0x4620,  , 0x00000000) !m2 
U5f8a: SAVEUIP( , 0x01, U3471) !m0 SEQW GOTO U2174

U5f8c: SAVEUIP_REGOVR(0x01, U5f8d, 0x0010) !m0 SEQW GOTO U5f6c
U5f8d: tmp0:= READURAM( , 0x0053, 64) 
U5f8e: WRITEURAM( , 0x00000000, 0x0053, 64) !m2 

U5f90: tmp15:= READURAM( , 0x0078, 64) 
U5f91: WRITEURAM(tmp15, 0x0007, 32) !m2 
U5f92: tmp15:= BT_DSZ32(tmp15, 0x00000017) 

U5f94: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp15, tmp15) SEQW GOTO U3b99
U5f95: tmp1:= ZEROEXT_DSZ32() 
U5f96: tmp0:= ZEROEXT_DSZ32(0x00000021) 

U5f98: tmp12:= READURAM( , 0x000b, 64) 
U5f99: tmp0:= BTS_DSZ32(tmp0, 0x0000001f) 
U5f9a: WRITEURAM(tmp12, 0x0057, 64) !m2 

U5f9c: WRITEURAM(tmp0, 0x0005, 32) !m2 
U5f9d: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000023c, tmp12, tmp0) 
U5f9e: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000280, tmp12, tmp1) 

U5fa0: unk_eff() 
U5fa1: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U57dd
U5fa2: tmp0:= OR_DSZ32(0x00100000, tmp0) 

U5fa4: MOVETOCREG_OR_DSZ64( , 0x00000008, 0x63a) !m2 
U5fa5: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x63e) !m0,m2 
U5fa6: LFNCEWTMRK-> unk_dff() SEQW GOTO U57e1

U5fa8: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U4f51
U5fa9: tmp1:= SUB_DSZ32(0x0000004e, tmp8) 
U5faa: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp8, U03a2) 

U5fac: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3188) 
U5fad: tmp1:= SUB_DSZ32(0x0000004f, tmp8) 
U5fae: tmp2:= ZEROEXT_DSZ32(0x00008418) 

U5fb0: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U318c) SEQW GOTO U2711
U5fb1: unk_256() !m1 
U5fb2: MOVETOCREG_DSZ64( , 0x00000000, 0x7f0) !m2 

U5fb4: MOVETOCREG_DSZ64( , 0x00000000, 0x101) !m2 
U5fb5: tmp10:= ZEROEXT_DSZ32(0x0000007f) 
U5fb6: MOVETOCREG_DSZ64(tmp10, 0x102) !m2 

U5fb8: MOVETOCREG_DSZ64( , 0x00000000, 0x0b1) !m2 
U5fb9: WRITEURAM( , 0x00000000, 0x0052, 64) !m2 
U5fba: MOVETOCREG_DSZ64( , 0x00000000, 0x080) !m2 

U5fbc: MOVETOCREG_DSZ64( , 0x00000000, 0x081) !m2 
U5fbd: MOVETOCREG_DSZ64( , 0x00000000, 0x082) !m2 
U5fbe: MOVETOCREG_DSZ64( , 0x00000000, 0x083) !m2 

U5fc0: tmp10:= READURAM( , 0x003a, 64) 
U5fc1: tmp10:= BTS_DSZ64(tmp10, 0x00000020) 
U5fc2: LFNCEMARK-> WRITEURAM(tmp10, 0x003a, 64) !m2 SEQW URET1

U5fc4: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U574e
U5fc5: tmp1:= unk_207(0x00180000) 
U5fc6: tmp1:= AND_DSZ32(tmp1, tmp7) 

U5fc8: tmp1:= SUB_DSZ32(0x00180000, tmp1) 
U5fc9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2711) 
U5fca: MOVETOCREG_DSZ64(tmp7, 0x7fe) !m2 

U5fcc: BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U1e8a) !m2 SEQW GOTO U1e8a
U5fcd: tmp0:= READURAM( , 0x003f, 64) 
U5fce: MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1,m2 

U5fd0: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000018, 0x2da) !m1,m2 
U5fd1: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x008) !m2 
U5fd2: SAVEUIP( , 0x01, U5e81) !m0 SEQW SAVEUIP0 U5fd4SEQW GOTO U6d95

U5fd4: tmp14:= READURAM( , 0x0007, 64) 
U5fd5: tmp14:= BT_DSZ32(tmp14, 0x00000017) 
U5fd6: tmp14:= CMOVCC_DSZ32_CONDB(tmp14, 0x00003b99) 

U5fd8: tmp13:= ZEROEXT_DSZ32() 
U5fd9: tmp5:= SUB_DSZ8(0x00000001, tmp11) 
U5fda: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp5, U5fdc) SEQW GOTO U23fc

U5fdc: tmp13:= SELECTCC_DSZ32_CONDNZ(tmp5, 0x00000002) 
U5fdd: MOVETOCREG_DSZ64(tmp13, 0x2f2, 32) !m1 
U5fde: SAVEUIP( , 0x00, U3d1c) SEQW GOTO U3048

U5fe0: SAVEUIP_REGOVR(0x01, U5fe1, 0x0003) !m0 SEQW GOTO U29e5
U5fe1: LFNCEMARK-> tmp5:= READURAM( , 0x0070, 64) 
U5fe2: tmp5:= MOVETOCREG_BTS_DSZ64(tmp5, 0x0000000a, 0x2c4) !m0,m1,m2 

U5fe4: WRITEURAM(tmp5, 0x0070, 32) !m2 
U5fe5: tmp1:= CONCAT_DSZ8(0x00000002, tmp2) 
U5fe6: tmp4:= unk_203( , 0x00000001) 

U5fe8: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U4ff9) SEQW GOTO U1bde
U5fe9: tmm0:= unk_480(tmm2, tmm3) 
U5fea: tmp5:= SHR_DSZ64(tmp2, 0x00000020) 

U5fec: tmp2:= OR_DSZ32(tmp2, tmp5) 
U5fed: tmp2:= OR_DSZ32(tmp2, tmp3) 
FUN_ucode_0005fee:
U5fee: mm3:= unk_72a(tmm2) 

U5ff0: tmm3:= unk_743(mm3, tmm3) 
U5ff1: tmm4:= unk_482(tmm3) 
U5ff2: tmp2:= CMOVCC_DSZ32_CONDZ(tmp2, 0x00000001) 

U5ff4: tmm6:= unk_743(mm2, tmm0) 
U5ff5: tmm6:= unk_482(tmm6, tmm4) 
U5ff6: tmm0:= unk_53f(tmm6, tmm0) 

U5ff8: mm5:= unk_7e8(tmm0) 
U5ff9: tmp5:= OR_DSZ16(0x00000002, tmp5) 
U5ffa: tmm0:= unk_782(mm5, tmm0) SEQW URET1

U5ffc: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U6002
U5ffd: tmp13:= READUIP_REGOVR(0x00) 
U5ffe: tmp6:= READURAM( , 0x0011, 64) 

U6000: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp6) 
U6001: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp6, U07de, tmp4) 
U6002: TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW URET0

U6004: NOP SEQW GOTO U2711
U6005: tmm0:= unk_574(tmm4) 
U6006: tmm1:= unk_574(tmm7) 

U6008: tmm5:= unk_664(tmm1, tmm0) 
U6009: tmm5:= unk_694(tmm5, tmm2) 
U600a: tmp6:= PINTMOVDTMM2I_DSZ32(tmm5) 

U600c: tmp4:= SHR_DSZ32(tmp6, 0x00000008) 
U600d: tmp6:= NOTAND_DSZ32(0x00000f00, tmp6) 
U600e: tmp6:= BT_DSZ32(tmp6, 0x00000010) 

U6010: tmp6:= CMOVCC_DSZ64_CONDB(tmp6, tmp13) 
U6011: SYNCMARK-> tmp6:= UFLOWCTRL( , tmp6, URET0) 
U6012: tmp4:= AND_DSZ32(0x0000000f, tmp4) 

U6014: tmm0:= unk_69d( , tmm0) 
U6015: tmm1:= unk_69d( , tmm1) 
U6016: SYNCWTMRK-> tmp10:= OR_DSZ32(tmp4, tmp10) SEQW URET0

U6018: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U6c59
U6019: SAVEUIP( , 0x01, U6c59) !m0 
U601a: tmpv2:= READURAM( , 0x0057, 64) 

U601c: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U601e
U601d: tmpv2:= ZEROEXT_DSZ64(tmp0) 
U601e: tmpv2:= ZEROEXT_DSZ8(0x00000073, tmpv2) 

U6020: SAVEUIP( , 0x00, U0674) SEQW GOTO U77ac
U6021: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U5f51) !m2 
U6022: tmp15:= ZEROEXT_DSZ32(0x0000602c) 

U6024: tmp15:= CONCAT_DSZ16(0x000000ed, tmp15) 
U6025: WRITEURAM(tmp15, 0x0007, 32) !m2 
U6026: tmp0:= READURAM( , 0x0053, 64) !m2 

U6028: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U194c) !m0,m2 
U6029: tmp3:= ZEROEXT_DSZ32(0x00000002) 
U602a: SYNCFULL-> PORTOUT_DSZ32_ASZ16_SC1(0x0050,  , tmp3) !m2 

U602c: tmp3:= PORTIN_DSZ32_ASZ16_SC1(0x0050) !m2 
U602d: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000000, U194c) !m2 
U602e: tmp3:= MOVEFROMCREG_DSZ64( , 0x2dc, 32) !m1 

U6030: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000001, U28d9) !m1 
U6031: tmp3:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U6032: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000005, U20a8) !m1 SEQW GOTO U602c

U6034: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U1a80
U6035: tmp0:= READURAM( , 0x005c, 64) 
U6036: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U19a1) !m2 

U6038: tmp0:= ZEROEXT_DSZ32(0x00001a74) 
U6039: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000180,  , tmp0) 
U603a: tmp8:= MOVEFROMCREG_DSZ64( , 0x574) 

U603c: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 
U603d: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000a0,  , tmp1) SEQW GOTO U0434
U603e: tmp0:= ZEROEXT_DSZ32(0x0000001d) 

U6040: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U6045
U6041: tmp2:= READURAM( , 0x0043, 64) 
U6042: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000017, U59ec) !m0,m2 

U6044: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U05fc
U6045: tmp0:= OR_DSZ32(0x00020000, tmp0) 
U6046: tmp2:= READURAM( , 0x004c, 64) 

U6048: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000017, U59ec) !m0,m2 SEQW GOTO U05fc
U6049: tmp5:= AND_DSZ16(0x00000001, tmp3) 
U604a: tmp0:= CMOVCC_DSZ32_CONDZ(tmp4, tmp1) 

U604c: tmp2:= SHL_DSZ8(tmp1, 0x00000004) 
U604d: rax:= ADD_DSZ8(tmp0, rax) 
U604e: tmp2:= CMOVCC_DSZ32_CONDZ(tmp5, tmp2) 

U6050: tmp0:= SETCC_CONDB(tmp1) 
U6051: rax:= ADD_DSZ8(tmp2, rax) 
U6052: tmp0:= CMOVCC_DSZ32_CONDZ(tmp4, tmp0) 

U6054: tmp1:= SHR_DSZ32(tmp4, 0x00000002) 
U6055: rax:= ADD_DSZ8(0x00000000, rax) !m2 
U6056: tmp2:= OR_DSZ16(tmp5, tmp0) 

U6058: tmp7:= OR_DSZ16(tmp2, tmp1) 
U6059: tmp7:= MOVEINSERTFLGS_DSZ32(tmp7) 
U605a: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000005) !m2 

U605c: GENARITHFLAGS(tmp0, tmp7) !m2 SEQW UEND0
U605d: tmp12:= TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U408c
U605e: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 

U6060: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, mode=0x01) 
U6061: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, mode=0x01, tmp0) 
U6062: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0x00000008, mode=0x01, tmp0) 

U6064: MOVETOCREG_DSZ64(tmp1, 0x7fe) !m2 
U6065: unk_13f(tmp1) !m2 
U6066: LFNCEWAIT-> rsp:= unk_a6f(rsp, tmp0) SEQW GOTO U19c6

U6068: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U19a6) 
U6069: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U19a6
U606a: SAVEUIP( , 0x01, U47b4) !m0 

U606c: tmp0:= MOVEFROMCREG_DSZ64( , 0x574) 
U606d: tmp0:= NOTAND_DSZ64(0x00000fff, tmp0) 
U606e: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 

U6070: tmp2:= PORTIN_DSZ64_ASZ16_SC1(0x4cd8) !m2 
U6071: tmp3:= PORTIN_DSZ64_ASZ16_SC1(0x4ce0) !m2 
U6072: tmp3:= NOTAND_DSZ64(0x00000200, tmp3) SEQW URET1

U6074: tmpv0:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U6075: BTUJB_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U1db2) !m2 SEQW SAVEUIP0 U6076SEQW GOTO U02b2
U6076: tmpv0:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 

U6078: BTUJB_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U607e) !m1 
U6079: tmpv0:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U607a: tmpv0:= BTS_DSZ32(tmpv0, 0x00000012) 

U607c: PORTOUT_DSZ32_ASZ16_SC1(0x50d8,  , tmpv0) !m2 
U607d: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x208) !m0,m1,m2 
U607e: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 SEQW GOTO U06c6

U6080: tmpv0:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U66ea
U6081: tmpv1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U6082: tmpv1:= BT_DSZ64(tmpv1, 0x0000000d) 

U6084: tmpv1:= SELECTCC_DSZ32_CONDNB(tmpv1, 0x00000100) 
U6085: tmpv0:= OR_DSZ64(tmpv1, tmpv0) 
U6086: tmpv1:= READURAM( , 0x0043, 64) 

U6088: tmpv1:= BT_DSZ64(tmpv1, 0x00000033) 
U6089: tmpv1:= SELECTCC_DSZ32_CONDB(tmpv1, 0x00000100) 
fit_load_end:
U608a: tmpv0:= OR_DSZ64(tmpv1, tmpv0) SEQW GOTO U66ea

U608c: tmp13:= OR_DSZ32(tmp15, tmp13) 
U608d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp13, U608e) SEQW GOTO U040c
U608e: SYNCMARK-> UFLOWCTRL( , tmp14, URET1) 

U6090: tmp13:= READURAM( , 0x005c, 64) 
U6091: tmp13:= BTR_DSZ32(tmp13, 0x0000000c) 
U6092: WRITEURAM(tmp13, 0x005c, 32) 

U6094: tmp15:= READURAM( , 0x004b, 64) 
U6095: tmp13:= MOVEMERGEFLGS_DSZ32(0x00000001, tmp13) 
U6096: tmp15:= CMOVCC_DSZ64_CONDNB(tmp13, tmp15) 

U6098: SYNCWAIT-> WRITEURAM(tmp15, 0x004b, 64) SEQW GOTO U040c
U6099: tmp10:= READUIP_REGOVR(0x01) !m0 
U609a: tmp15:= CONCAT_DSZ16(0x0000010f) 

U609c: tmp15:= OR_DSZ32(tmp15, 0x00000001) 
U609d: tmp14:= ZEROEXT_DSZ32(0x00006b95) 
U609e: tmp14:= SHL_DSZ64(tmp14, 0x00000030) 

U60a0: tmp14:= OR_DSZ64(tmp12, tmp14) 
U60a1: tmp11:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 
U60a2: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000000, U60a1) !m1 

U60a4: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x22e) !m0,m1 
U60a5: SAVEUIP_REGOVR( , 0x01, U60a6, 0xbdef) !m0 SEQW GOTO U3be6
U60a6: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp10, U60aa) 

U60a8: tmp14:= ADD_DSZ64(0x00000004, tmp14) 
U60a9: tmp13:= SHR_DSZ64(tmp13, 0x00000020) SEQW SAVEUIP1 U60aaSEQW GOTO U3be6
FUN_ucode_00060aa:
U60aa: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 

U60ac: SYNCFULL-> UJMP( , tmp10) 
U60ad: SAVEUIP( , 0x00, U31e9) 
U60ae: ROVR<- tmp1:= CONCAT_DSZ8(tmp3, tmp2) SEQW SAVEUIP1 U60b0SEQW GOTO U2178

U60b0: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW URET0
U60b1: MOVETOCREG_DSZ64(0x00000009, 0x000) 
U60b2: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U60b8

U60b4: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 
U60b5: tmp0:= READURAM( , 0x0014, 64) 
U60b6: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U6a38) !m1 

FUN_ucode_00060b8:
U60b8: tmp9:= ZEROEXT_DSZ32(tmp10) 
U60b9: tmp5:= ZEROEXT_DSZ16(0x00000025) SEQW GOTO U3635
U60ba: SAVEUIP( , 0x01, U77c0) !m0 

U60bc: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U044c
U60bd: tmp5:= AND_DSZ32(0x0000000f, tmp5) 
FUN_ucode_00060be:
U60be: tmp9:= AND_DSZ32(0x00000001, tmp5) 

U60c0: tmp6:= MOVEMERGEFLGS_DSZ64(tmp6, tmp9) 
U60c1: tmp9:= CMOVCC_DSZ64_CONDNZ(tmp6, tmp11) 
U60c2: tmp9:= AND_DSZ32(0x00000001, tmp9) 

U60c4: tmp4:= OR_DSZ64(tmp9, tmp10) 
U60c5: tmp4:= AND_DSZ64(tmp4, tmp5) 
U60c6: tmp3:= AND_DSZ64(tmp6, tmp5) 

U60c8: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp4, U59f4, tmp3) !m2 SEQW URET1
U60c9: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U2711
U60ca: tmp13:= ZEROEXT_DSZ32(0x00000001) 

U60cc: LFNCEWAIT-> MOVETOCREG_DSZ64(0x00000406, 0x000) 
U60cd: tmp2:= RDSEGFLD(TSS, SEL) 
U60ce: tmp2:= LDPPHYS_DSZ16_ASZ32_SC1(mode=0x0f) 

U60d0: tmp0:= unk_f61(tmp2) 
U60d1: LFNCEMARK-> unk_e7b(tmp0, tmp2) !m1 
U60d2: tmp12:= ZEROEXT_DSZ16(0x000001e2) 

U60d4: tmp9:= AND_DSZ32(0x003f3fd7, tmp10) 
U60d5: tmp5:= WRITEURAM( , 0x00000000, 0x006f, 64) !m2 SEQW GOTO U3965
U60d6: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 

U60d8: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U279a
U60d9: tmp0:= READURAM( , 0x0011, 64) 
U60da: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004c8, mode=0x01, tmp0) 

U60dc: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000009, U60dd) !m1 SEQW GOTO U279a
U60dd: tmp0:= MOVE_DSZ32(0x00000002) 
U60de: tmp0:= BTS_DSZ32(tmp0, 0x00000010) 

U60e0: LFNCEWAIT-> tmp4:= READURAM( , 0x001f, 64) !m2 
U60e1: tmp4:= NOTAND_DSZ32(0x00000007, tmp4) 
U60e2: tmp4:= OR_DSZ32(tmp4, tmp5) 

U60e4: WRITEURAM(tmp4, 0x001f, 32) !m2 SEQW GOTO U73ac
U60e5: tmp1:= READURAM( , 0x0053, 64) !m2 
U60e6: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 

U60e8: tmp7:= SUB_DSZ64(0x00000000, tmp1) 
U60e9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U304e) SEQW SAVEUIP1 U60eaSEQW GOTO U0cb9
U60ea: tmp7:= unk_222(tmp1) 

U60ec: tmp7:= CONCAT_DSZ16(tmp7, tmp7) 
U60ed: tmp7:= unk_0fc(tmp0, tmp7) 
U60ee: PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , tmp7) !m2 

U60f0: SYNCFULL-> PORTOUT_DSZ32_ASZ16_SC1(0x0064,  , tmp1) !m2 
U60f1: PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 
U60f2: NOP SEQW SAVEUIP1 U60f4SEQW GOTO U0cb9

U60f4: tmp7:= PORTIN_DSZ32_ASZ16_SC1(0x0018) !m2 
U60f5: PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 
FUN_ucode_00060f6:
U60f6: tmp1:= AND_DSZ32(0x000000ff, tmp7) 

U60f8: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U304e) SEQW GOTO U60f2
U60f9: tmp1:= SHR_DSZ32(tmpv1, 0x00000004) 
U60fa: tmp2:= OR_DSZ32(0x00002000, tmp1) 

U60fc: tmp1:= OR_DSZ32(tmp2, 0xffca5800) 
U60fd: tmp4:= SELECTCC_DSZ32_CONDNP(tmp6, 0x00008000) 
U60fe: tmp1:= OR_DSZ32(tmp4, tmp1) 

U6100: tmp4:= READURAM( , 0x005c, 64) 
U6101: tmp4:= BT_DSZ64(tmp4, 0x0000001a) 
U6102: tmp4:= SELECTCC_DSZ32_CONDB(tmp4, 0x00008000) 

U6104: tmp1:= OR_DSZ32(tmp4, tmp1) 
U6105: tmp4:= SELECTCC_DSZ32_CONDZ(tmp6, 0x00200000) 
U6106: tmp1:= OR_DSZ32(tmp4, tmp1) 

U6108: tmp1:= CONCAT_DSZ32(0xffffffffffffffff, tmp1) 
U6109: tmp1:= AND_DSZ64(tmp1, tmpv0) 
FUN_ucode_000610a:
U610a: tmp1:= SUB_DSZ64(tmp2, tmp1) 

U610c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, tmpv2) SEQW URET1
FUN_ucode_000610d:
U610d: TESTUSTATE( , UCODE, 0x0800) ? SEQW GOTO U6110
U610e: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000003f, U2711) !m0,m1 

U6110: tmp2:= READURAM( , tmp10) 
U6111: tmp12:= ZEROEXT_DSZ32N(tmp12) !m1 
U6112: tmp1:= OR_DSZ32(0x00010000, tmp8) 

U6114: tmp1:= MSR2CR( , tmp1) 
U6115: tmp12:= ROL_DSZ64(tmp12, tmp1) 
U6116: tmp2:= NOTAND_DSZ64(tmp12, tmp2) 

U6118: tmp5:= ROL_DSZ64(tmp5, tmp1) 
U6119: tmp5:= OR_DSZ64(tmp2, tmp5) SEQW URET1
U611a: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp5, U611c) SEQW GOTO U3210

U611c: tmp6:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
U611d: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U611e: MOVETOCREG_OR_DSZ64( , 0x0000000c, 0x005) !m2 

U6120: tmp5:= AND_DSZ32(0x00000100, tmp5) 
U6121: tmp5:= SHR_DSZ32(tmp5, 0x00000008) 
U6122: tmp6:= SHR_DSZ32(tmp6, 0x00000001) 

U6124: tmp5:= NOTAND_DSZ32(tmp6, tmp5) 
U6125: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, 0x070) !m2 
U6126: tmp1:= MOVE_DSZ32() SEQW GOTO U59f4

U6128: ROVR<- MOVE_DSZ32() SEQW SAVEUIP1 U6129SEQW GOTO U02ba
U6129: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x50dc) !m2 
U612a: tmp1:= OR_DSZ32(0x00000001, tmp1) 

U612c: PORTOUT_DSZ32_ASZ16_SC1(0x50dc,  , tmp1) !m2 
U612d: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
FUN_ucode_000612e:
U612e: tmp15:= READURAM( , 0x005c, 64) 

U6130: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000008, U079e) 
U6131: tmp2:= ZEROEXT_DSZ32(0x00000cf9) 
FUN_ucode_0006132:
U6132: tmp1:= ZEROEXT_DSZ32(0x00000006) 

U6134: PORTOUT_DSZ8_ASZ16_SC1(tmp2,  , tmp1) SEQW GOTO U67f6
U6135: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000300) 
FUN_ucode_0006136:
U6136: tmp10:= AND_DSZ32(0xffffffffffffb700, tmp5) 

U6138: tmp10:= XOR_DSZ32(0x00040000, tmp10) 
U6139: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U401c) 
U613a: tmp14:= SAVEUIP(0x01, U1bd0) !m0 

U613c: tmp10:= AND_DSZ32(0x000000f0, tmp5) 
U613d: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp10, U401c) 
U613e: tmp0:= AND_DSZ32(0x000000ff, tmp5) 

U6140: tmp8:= ZEROEXT_DSZ32(0x00000200) SEQW SAVEUIP0 U6141SEQW GOTO U2e81
U6141: tmp8:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(0x00000398, tmp12) 
U6142: tmp9:= SUB_DSZ32(tmp8, tmp0) 

U6144: tmp9:= MOVEMERGEFLGS_DSZ32(tmp0, tmp9) 
U6145: tmp9:= CMOVCC_DSZ32_CONDNBE(tmp9, tmp8) 
U6146: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp12, 0x00000398, tmp9) 

U6148: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x000000a0) SEQW GOTO U67ae
U6149: tmpv0:= CONCAT_DSZ16(0x0000060f) 
U614a: tmpv0:= OR_DSZ32(tmpv0, 0x00000003) 

U614c: tmpv1:= READURAM( , 0x0020, 64) 
U614d: tmpv1:= CONCAT_DSZ8(tmpv1, 0x00000046) 
U614e: tmpv1:= SHL_DSZ64(tmpv1, 0x00000030) 

U6150: tmpv1:= OR_DSZ64(0x000046b4, tmpv1) 
U6151: tmpv3:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 
U6152: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmpv3, 0x00000000, U6151) !m1 

U6154: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x22e) !m0,m1 
U6155: MOVETOCREG_DSZ64(tmpv1, 0x22b, 32) !m1 
U6156: MOVETOCREG_DSZ64(tmpv0, 0x229, 32) !m1,m2 

U6158: tmpv3:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1,m2 
U6159: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmpv3, 0x00000000, U6158) !m1 
U615a: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1 

U615c: tmpv2:= MOVEFROMCREG_DSZ64( , 0x22d, 32) !m1,m2 SEQW URET0
U615d: TESTUSTATE( , SYS, 0x0800) !m1 ? SEQW GOTO U66fc
U615e: tmp11:= MOVEFROMCREG_DSZ64( , 0x004) 

U6160: SYNCFULL-> tmp3:= MOVETOCREG_AND_DSZ64(tmp11, 0x00000004, 0x005) !m2 
gen_key_first_step:
U6161: tmp3:= MOVEMERGEFLGS_DSZ32(0x00000020, tmp3) 
U6162: tmp11:= BT_DSZ32(tmp11, 0x00000003) SEQW SAVEUIP1 U6164SEQW GOTO U215d

U6164: tmp11:= SELECTCC_DSZ32_CONDNB(tmp11, 0x00000004) 
U6165: tmp3:= CMOVCC_DSZ32_CONDNZ(tmp3, tmp11) 
U6166: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 

U6168: unk_256() !m1 
U6169: LFNCEMARK->MSSTOP-> unk_25e( , tmp3) SEQW GOTO U2792
U616a: tmp1:= ZEROEXT_DSZ32(0x00000003) 

U616c: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U64c2
U616d: MOVETOCREG_DSZ64( , 0x00000000, 0x6c0) 
U616e: tmp12:= READURAM( , 0x0057, 64) 

U6170: WRITEURAM(tmp12, 0x0056, 64) !m2 
U6171: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b8, tmp12) 
U6172: SYNCFULL-> WRITEURAM(tmp0, 0x0057, 64) !m2 

U6174: tmp0:= ZEROEXT_DSZ32(0x00000023) 
U6175: ROVR<- tmp0:= BTS_DSZ32(tmp0, 0x0000001e) SEQW SAVEUIP1 U6176
U6176: SAVEUIP( , 0x00, U02f2) 

U6178: SAVEUIP( , 0x01, U73ad) !m0 SEQW GOTO U02ea
U6179: tmp0:= CONCAT_DSZ32(tmp1, tmp0) 
U617a: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp0) 

U617c: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U617d: tmp2:= CONCAT_DSZ32(tmp3, tmp2) 
U617e: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp2) 

U6180: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U6181: tmp4:= CONCAT_DSZ32(tmp5, tmp4) 
U6182: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp4) 

U6184: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U6185: tmp6:= CONCAT_DSZ32(tmp7, tmp6) 
U6186: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp6) 

U6188: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U6189: tmp8:= CONCAT_DSZ32(tmp9, tmp8) 
U618a: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp8) 

U618c: tmp12:= ADD_DSZ32(0x00000020, tmp12) SEQW URET0
U618d: SAVEUIP_REGOVR(0x01, U618e, 0x0005) !m0 SEQW GOTO U32cd
U618e: tmp5:= MOVEFROMCREG_DSZ64( , 0x389, 32) !m1 

U6190: tmp5:= NOTAND_DSZ32(0x00000003, tmp5) 
U6191: tmp5:= MOVETOCREG_DSZ64(tmp5, 0x389, 32) !m1 
U6192: tmp10:= ZEROEXT_DSZ32(tmp10, tmp5) 

U6194: tmp5:= NOTAND_DSZ32(0x00000003, tmp10) 
U6195: tmp5:= MOVETOCREG_DSZ64(tmp5, 0x389, 32) !m1 
U6196: tmp10:= ZEROEXT_DSZ64(tmp10, tmp5) 

U6198: MOVETOCREG_DSZ64(tmp10, 0x389, 32) !m1 
U6199: SYNCFULL-> MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW GOTO U2162
U619a: tmp2:= RDSEGFLD(UNK_SEG_09, SEL) 

U619c: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U07fe
U619d: tmp2:= RDSEGFLD(SS_USERM, SEL) 
U619e: tmp1:= RDSEGFLD(GS, SEL) 

U61a0: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp1) !m0,m1 
U61a1: tmp1:= RDSEGFLD(FS, SEL) 
U61a2: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, tmp1) !m0,m1 

U61a4: tmp1:= RDSEGFLD(DS, SEL) 
U61a5: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_eb, mode=0x0a, tmp1) !m0,m1 
U61a6: tmp1:= RDSEGFLD(ES, SEL) 

U61a8: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_e3, mode=0x0a, tmp1) !m0,m1 
U61a9: rsp:= ADD_DSZN(IMM_MACRO_e3, rsp) !m0,m1 SEQW GOTO U3578
U61aa: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x221, 32) !m1 

U61ac: TESTUSTATE( , UCODE, !0x0044) !m0 ? SEQW GOTO U76b1
U61ad: tmp3:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 
U61ae: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000008, U61ad) !m1 

U61b0: tmp5:= OR_DSZ32(0x00004000) 
U61b1: tmp5:= MOVETOCREG_DSZ64(tmp5, 0x28c, 32) !m1 
U61b2: tmp12:= ADD_DSZ32(0x00002f80, tmp15) 

U61b4: TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U143a
U61b5: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U61b6: tmp5:= ZEROEXT_DSZ64(tmp2, tmp5) 

U61b8: tmp5:= MOVETOCREG_DSZ64(tmp5, 0x7bb) SEQW GOTO U144e
U61b9: tmp6:= ZEROEXT_DSZ32(0x00000007) 
U61ba: WRITEURAM(tmp6, 0x0048, 32) !m2 

U61bc: tmp7:= ADD_DSZ64(0x00000020, tmp7) 
U61bd: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7,  , tmp0) 
U61be: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004,  , tmp1) 

U61c0: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008,  , tmp2) 
U61c1: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c,  , tmp3) 
U61c2: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010,  , tmp4) 

U61c4: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014,  , tmp8) 
U61c5: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018,  , tmp9) 
U61c6: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c,  , tmp10) 

U61c8: tmp5:= SUB_DSZ64(0x00000040, tmp5) 
U61c9: tmp6:= ZEROEXT_DSZ32(0x00000001) 
U61ca: tmp11:= ZEROEXT_DSZ16(0x0000581d) 

U61cc: WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U51b2
U61cd: tmp10:= unk_6a0() 
U61ce: tmp11:= FCOM2(tmp8, tmp10) 

U61d0: mm1:= unk_76a(tmm3) 
U61d1: tmp1:= MOVEINSERTFLGS_DSZ32(tmp1) 
U61d2: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp1, U066c) 

U61d4: mm0:= unk_7ea(tmm0) 
U61d5: tmp1:= SUB_DSZ32(0x0000fffc, tmp0) 
U61d6: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U5c35) 

U61d8: tmp10:= unk_6a0() 
U61d9: tmm4:= unk_6c9(tmm0, tmm2) 
U61da: tmm2:= unk_5be( , tmm4) 

U61dc: tmm0:= unk_7a8(tmm4) 
U61dd: tmm3:= unk_649(tmm4, tmm2) 
U61de: tmm5:= unk_494( , tmm2) 

U61e0: tmm4:= unk_649(tmm4, tmm5) SEQW GOTO U6fde
U61e1: tmp15:= READURAM( , 0x0047, 64) 
U61e2: tmp8:= ZEROEXT_DSZ32(tmp15) 

U61e4: SYNCMARK-> MOVETOCREG_SHR_DSZ64(tmp15, 0x00000020, 0x6c5) 
U61e5: tmm1:= unk_5ba( , tmm7) 
U61e6: tmm2:= unk_5ba( , tmm7) 

U61e8: tmm0:= unk_5ba( , tmm6) 
U61e9: tmm4:= unk_5ba( , tmm6) 
U61ea: mm5:= unk_72f(tmm2) 

U61ec: tmm3:= unk_72f(tmm1) 
U61ed: tmp7:= ZEROEXT_DSZ64(tmp0) 
U61ee: tmp10:= READURAM( , 0x004f, 64) 

U61f0: tmp12:= READURAM( , 0x000b, 64) 
U61f1: tmp12:= MOVEMERGEFLGS_DSZ64(tmp12, tmp0) 
U61f2: tmp3:= READURAM( , 0x004e, 64) 

U61f4: SYNCWAIT-> tmp14:= READURAM( , 0x0043, 64) SEQW GOTO U4ec9
U61f5: tmp6:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
U61f6: tmp15:= ZEROEXT_DSZ32(0x00000009) 

U61f8: tmp15:= unk_201(tmp15, 0x0000000a) 
U61f9: BTUJB_DIRECT_NOTTAKEN(tmp6, U615d, tmp15) !m1 
U61fa: SYNCWAIT-> tmp8:= MOVEFROMCREG_DSZ64( , 0x009) 

U61fc: tmp8:= OR_DSZ32(0x00000040, tmp8) 
U61fd: tmp8:= MOVEFROMCREG_DSZ64( , tmp8) 
U61fe: tmp8:= SHL_DSZ64(tmp8, 0x00000010) 

U6200: tmp8:= SAR_DSZ64(tmp8, 0x00000010) 
U6201: tmp5:= MOVEFROMCREG_DSZ64( , 0x009) 
U6202: SAVEUIP_REGOVR(0x00, U6204, 0x0000) SEQW GOTO U30c4

U6204: tmp0:= SHL_DSZ64(tmp5, 0x00000001) 
U6205: tmp0:= SAR_DSZ64(tmp0, 0x00000001) 
U6206: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000007, U0292) !m0 

U6208: NOP SEQW GOTO U597e
U6209: tmp11:= OR_DSZ32(tmp12, tmp11) 
U620a: tmp9:= ZEROEXT_DSZ32(0xffffffffffffbfff) 

U620c: tmp9:= CONCAT_DSZ32(tmp9, 0xffffffffffffffdf) 
U620d: tmp7:= ZEROEXT_DSZ32(0x00000020) 
U620e: tmp8:= ZEROEXT_DSZ32(0x0000000f) 

U6210: tmp5:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U6211: tmp6:= MOVEFROMCREG_DSZ64( , 0x2da, 32) !m1 
U6212: tmp6:= SHL_DSZ32(tmp6, 0x00000018) 

U6214: tmp6:= OR_DSZ32(tmp5, tmp6) 
U6215: tmp5:= MOVEFROMCREG_DSZ64( , 0x008) 
U6216: tmp6:= CONCAT_DSZ32(tmp5, tmp6) 

U6218: WRITEURAM(tmp6, 0x003f, 64) !m2 
U6219: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x2f3) !m1,m2 
U621a: SAVEUIP( , 0x01, U3048) !m0 

U621c: SAVEUIP( , 0x00, U7671) SEQW GOTO U67c1
U621d: tmp11:= CONCAT_DSZ32(0x0000000b) 
U621e: WRITEURAM(tmp11, 0x0073, 64) !m2 

U6220: tmp1:= ZEROEXT_DSZ32(0x00030000) 
U6221: tmp2:= ZEROEXT_DSZ32(0x00030012) 
U6222: SAVEUIP( , 0x00, U4406) SEQW SAVEUIP1 U6224SEQW GOTO U2895

U6224: tmp11:= ZEROEXT_DSZ32(0x00000004) 
U6225: WRITEURAM(tmp11, 0x0073, 32) !m2 
U6226: SYNCFULL-> tmp2:= MOVEFROMCREG_DSZ64( , 0x630) !m2 

U6228: tmp2:= AND_DSZ32(0x00000fff, tmp2) 
U6229: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U622a) SEQW GOTO U6226
U622a: MOVETOCREG_DSZ64( , 0x00000000, 0x631) 

U622c: tmp11:= ZEROEXT_DSZ32(0x00000005) 
U622d: WRITEURAM(tmp11, 0x0073, 32) 
U622e: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x63a) !m2 

U6230: SYNCFULL-> UJMP( , tmp14) 
U6231: tmp11:= ZEROEXT_DSZ32(0x00000405) SEQW SAVEUIP0 U6232SEQW GOTO U2c59
U6232: tmp9:= SHL_DSZ32(tmp9, 0x00000002) 

U6234: tmp9:= ADD_DSZ32(tmp9, 0x00003114) 
U6235: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, tmp9) 
U6236: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp2, tmp1) 

U6238: tmp15:= XOR_DSZ32(0x00000cf8, tmp15) 
U6239: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U4485) 
U623a: tmp10:= ZEROEXT_DSZ16(tmp1) 

U623c: tmp15:= NOTAND_DSZ32(0x00000003, tmp1) 
U623d: tmp15:= XOR_DSZ32(0x00000cfc, tmp15) 
U623e: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U5989) SEQW SAVEUIP0 U6240

U6240: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(tmp10,  , tmp0) !m1 SEQW GOTO U5b85
U6241: tmp14:= unk_52b(tmp14) 
U6242: tmp15:= unk_52b(tmp15) 

U6244: tmm5:= unk_5b9(tmm6) 
U6245: tmm6:= unk_4ee(tmm7, tmm6) 
U6246: tmm7:= unk_4d7(tmm5, tmm7) 

U6248: tmp14:= unk_ece(tmp7) 
U6249: tmp15:= unk_ece(tmp7) 
U624a: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7) 

U624c: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004) 
U624d: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008) 
U624e: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c) 

U6250: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010) 
U6251: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014) 
U6252: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018) 

U6254: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c) SEQW GOTO U0011
U6255: tmm4:= unk_624(tmm0, tmm0) 
U6256: tmp4:= PINTMOVDTMM2I_DSZ32(tmm4) 

U6258: tmm3:= unk_624(tmm1, tmm1) 
U6259: tmp1:= PINTMOVDTMM2I_DSZ32(tmm3) 
U625a: tmp4:= SHR_DSZ32(tmp4, 0x00000002) 

U625c: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 
U625d: tmp2:= OR_DSZ32(tmp1, tmp4) 
U625e: tmp2:= AND_DSZ32(0x0000000f, tmp2) 

U6260: mm3:= unk_72a(tmm1) 
U6261: tmp3:= SHL_DSZ32(tmp3, 0x00000004) 
U6262: tmp2:= OR_DSZ32(tmp3, tmp2) 

U6264: tmm6:= unk_704(mm2) 
U6265: tmm6:= unk_620(tmm6) 
U6266: tmp3:= PINTMOVDTMM2I_DSZ32(tmm6) 

U6268: SYNCFULL-> UJMP( , tmp3) 
U6269: WRITEURAM( , 0x00000000, 0x0007, 64) !m2 
U626a: SAVEUIP( , 0x00, U0049) SEQW SAVEUIP1 U626cSEQW GOTO U2074

U626c: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW URET0
U626d: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U6271
U626e: tmp15:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U6270: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000006, U6275) !m0,m1 
U6271: tmp0:= READURAM( , 0x0023, 64) 
U6272: NOP 

U6274: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000c, U6275) !m1 SEQW GOTO U1a45
U6275: tmp15:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
U6276: NOP 

U6278: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmp15, 0x00000001, 0x2cd) !m1,m2 SEQW GOTO U2e04
U6279: tmp15:= CONCAT_DSZ16(tmp15, 0x00006286) 
U627a: WRITEURAM(tmp15, 0x0007, 32) !m2 

U627c: tmp15:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U627d: tmp15:= AND_DSZ64(0x00000400, tmp15) 
U627e: tmp15:= SHL_DSZ64(tmp15, 0x00000006) 

U6280: tmp1:= READURAM( , 0x005c, 64) 
U6281: tmp1:= NOTAND_DSZ64(tmp15, tmp1) 
U6282: WRITEURAM(tmp1, 0x005c, 64) !m2 

U6284: SAVEUIP_REGOVR(0x01, U6285, 0x0210) !m0 SEQW GOTO U28f1
U6285: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp0, U43a6) 
U6286: SYNCFULL-> MOVE_DSZ32() 

U6288: tmp15:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U6289: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000c, U43a6) 
U628a: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000d, U576e) !m2 

U628c: NOP 
U628d: NOP SEQW GOTO U6286
U628e: tmp3:= READURAM( , 0x003b, 64) 

U6290: tmp1:= SAVEUIP_REGOVR(0x00, U6291, 0x0012) SEQW GOTO U3044
U6291: tmp3:= ADD_DSZ64(tmp3, tmp1) 
U6292: tmp2:= SUB_DSZ64(tmp3, tmp5) 

U6294: tmp3:= ADD_DSZ64(tmp2, tmp1) 
U6295: tmp3:= CMOVCC_DSZ64_CONDNB(tmp3, 0xffffffffffffffff) 
U6296: tmp3:= SELECTCC_DSZ64_CONDB(tmp2, tmp3) 

U6298: tmp2:= READURAM( , 0x0087, 64) 
U6299: tmp2:= ZEROEXT_DSZ32(tmp2) 
U629a: tmp3:= unk_156( , tmp3) 

U629c: tmp3:= unk_266(tmp2, tmp3) 
U629d: unk_154( , tmp3) SEQW URET1
U629e: TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U62a5

U62a0: tmp9:= SUB_DSZ32(0x000000b0, tmp1) 
U62a1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U6611) 
U62a2: tmp9:= SUB_DSZ32(0x00000300, tmp1) 

U62a4: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U6135) 
U62a5: tmp9:= SHR_DSZ32(tmp1, 0x00000004) 
U62a6: tmp9:= SUB_DSZ32(0x00000031, tmp9) 

U62a8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U401c) 
U62a9: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000310) 
U62aa: tmp9:= NOTAND_DSZ32(0x00ffffff, tmp9) 

U62ac: LFNCEMARK-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000310, tmp9) SEQW GOTO U1bd0
U62ad: tmp2:= SELECTCC_DSZ32_CONDNP(tmp14, 0x00000300) 
U62ae: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 

U62b0: tmp2:= SELECTCC_DSZ32_CONDNZ(tmp14, 0x00004000) 
U62b1: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U62b2: tmp2:= SELECTCC_DSZ32_CONDNO(tmp14, 0x00040000) 

U62b4: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U62b5: tmp2:= SELECTCC_DSZ32_CONDNB(tmp14, 0x00002000) 
U62b6: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 

U62b8: tmp2:= BT_DSZ64(tmp3, 0x0000002b) 
U62b9: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00008000) 
U62ba: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 

U62bc: tmp2:= READURAM( , 0x003a, 64) 
U62bd: tmp2:= NOTAND_DSZ32(tmp2, 0x00080001) 
U62be: tmp2:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00200000) 

U62c0: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U62c1: tmp2:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00080000) SEQW GOTO U30e1
U62c2: tmp14:= READUIP_REGOVR(0x01) !m0 

U62c4: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U62c6
U62c5: tmp8:= ADD_DSZN(tmp11, 0x00000400) !m1 
U62c6: tmp7:= RDSEGFLD(UNK_SEG_11, BASE) 

U62c8: tmp1:= MOVEFROMCREG_DSZ64( , 0x701) 
U62c9: tmp1:= SHR_DSZ32(tmp1, 0x0000001c) 
U62ca: tmp1:= AND_DSZ32(0x00000003, tmp1) 

U62cc: tmp7:= OR_DSZ64(tmp1, tmp7) 
U62cd: STAD_DSZ64_ASZ32_SC1(tmp8, mode=0x18, tmp7) 
U62ce: tmp7:= READURAM( , 0x004b, 64) 

U62d0: STAD_DSZ64_ASZ32_SC1(tmp8, 0x00000008, mode=0x18, tmp7) 
U62d1: tmp8:= ADD_DSZN(tmp8, 0x00000040) !m1 SEQW URET1
U62d2: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U3a6c

U62d4: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0xffffffffffffffd6) 
U62d5: tmp2:= MOVEFROMCREG_DSZ64( , 0x562) 
U62d6: tmp2:= NOTAND_DSZ64(0x00000fff, tmp2) 

U62d8: tmp7:= MOVEFROMCREG_DSZ64( , 0x563) 
U62d9: tmp7:= NOTAND_DSZ64(0x00000fff, tmp7) 
U62da: tmp5:= MOVEFROMCREG_DSZ64( , 0x51b) 

U62dc: tmp11:= ADD_DSZ64(0x00040000, tmp5) 
U62dd: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U3c95
U62de: tmp0:= CONCAT_DSZ32(rdx, rax) 

U62e0: tmp0:= ADD_DSZN(tmp8, tmp0) !m1 
U62e1: WRITEURAM(tmp0, 0x0015, 64) !m2 SEQW GOTO U3cb6
U62e2: tmp3:= READURAM( , 0x005c, 64) 

U62e4: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000026, U62e5) !m0,m1 SEQW GOTO U62e8
U62e5: tmp14:= MOVEFROMCREG_DSZ64( , 0x7bb) 
U62e6: BTUJB_DIRECT_NOTTAKEN(tmp14, 0x00000008, U5f7c) !m2 

U62e8: SAVEUIP_REGOVR(0x01, U62e9, 0x0003) !m0 SEQW GOTO U29e5
U62e9: unk_eff() 
U62ea: SAVEUIP( , 0x00, U6469) 

U62ec: MOVETOCREG_BTS_DSZ64( , 0x28e) !m1,m2 
U62ed: tmp0:= MOVEFROMCREG_DSZ64( , 0x28e, 32) !m1,m2 
U62ee: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U62f0) !m1 SEQW GOTO U62ed

U62f0: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x2d6) !m0,m1 
U62f1: LFNCEMARK-> MOVETOCREG_BTR_DSZ64(tmp0, 0x28e) !m1 SEQW URET0
U62f2: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U62fd

U62f4: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 
U62f5: tmp5:= CONCAT_DSZ32(tmp9, tmp12) 
U62f6: WRITEURAM(tmp5, 0x0009, 64) 

U62f8: MOVETOCREG_OR_DSZ64( , 0x0000000c, 0x005) 
U62f9: tmp1:= CONCAT_DSZ8(0x00000004, tmp2) 
U62fa: MOVETOCREG_BTS_DSZ64( , 0x00000015, 0x072) 

U62fc: WRITEURAM(tmp1, 0x0046, 64) 
U62fd: tmp13:= READUIP_REGOVR(0x00) 
U62fe: tmp5:= LDPPHYS_DSZ16_ASZ32_SC1(0x00000066, mode=0x0f) 

U6300: tmp7:= SHR_DSZ32(tmp2, 0x00000003) 
U6301: LFNCEMARK-> tmp7:= LDPPHYS_DSZ8_ASZ32_SC1(tmp5, 0xffffffffffffffe0, mode=0x0f, tmp7) 
U6302: tmp5:= AND_DSZ32(0x00000007, tmp2) SEQW URET0

U6304: SYNCWAIT-> tmp1:= SAVEUIP(tmp5, 0x01, U59d9) !m0 SEQW SAVEUIP0 U6305SEQW GOTO U05cc
U6305: tmp1:= SHR_DSZ64(tmp5, 0x00000014) 
U6306: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U630c) 

U6308: tmp2:= READURAM( , 0x0010, 64) 
U6309: tmp2:= SHR_DSZ64(tmp2, 0x00000014) 
U630a: tmp1:= OR_DSZ32(tmp2, tmp1) SEQW SAVEUIP1 U630cSEQW GOTO U048c

U630c: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x0000000a, U3200) !m0,m1,m2 
U630d: tmp1:= OR_DSZ64(0x00000200, tmp5) 
U630e: PORTOUT_DSZ64_ASZ16_SC1(0x4ce0,  , tmp1) !m2 

U6310: tmp14:= MOVEFROMCREG_DSZ64( , 0x574) 
U6311: SYNCFULL-> PORTOUT_DSZ64_ASZ16_SC1(0x4cd8,  , tmp14) !m2 SEQW GOTO U3200
U6312: tmp11:= OR_DSZ32(0x00000007, tmp12) 

U6314: BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000020, U5f28) !m2 SEQW SAVEUIP0 U6315SEQW GOTO U60f2
U6315: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x00c0) !m2 
U6316: tmp1:= BTR_DSZ32(tmp1, 0x00000003) 

U6318: PORTOUT_DSZ8_ASZ16_SC1(0x00c0,  , tmp1) !m2 
U6319: tmp4:= ADD_DSZ32(0x00000030, tmp10) 
U631a: SAVEUIP( , 0x01, U327c) !m0 

U631c: tmp11:= ZEROEXT_DSZ32(0x0000000b) 
U631d: WRITEURAM(tmp11, 0x0073, 32) !m2 
U631e: tmp1:= MOVEFROMCREG_DSZ64( , 0x6c5) 

U6320: tmp1:= SHL_DSZ32(tmp1, 0x00000007) 
U6321: tmp1:= OR_DSZ32(0x00000004, tmp1) 
U6322: WRITEURAM(tmp1, 0x0053, 32) !m2 SEQW URET1

U6324: tmp9:= READURAM( , 0x0055, 64) SEQW SAVEUIP0 U6325SEQW GOTO U5e62
U6325: tmp4:= READURAM( , 0x0057, 64) 
U6326: WRITEURAM(tmp4, 0x004a, 64) !m2 

U6328: SYNCWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000040, tmp9, tmp4) 
U6329: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U632c
U632a: tmp0:= BTS_DSZ32(tmp0, 0x0000001d) 

U632c: LFNCEMARK-> WRITEURAM(tmp9, 0x0057, 64) !m2 
U632d: tmp0:= OR_DSZ32(0x0000c000, tmp0) 
U632e: tmp0:= OR_DSZ32(0x00100000, tmp0) 

U6330: tmp4:= READURAM( , 0x0071, 64) 
U6331: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001dc, tmp9, tmp4) SEQW GOTO U4f5e
U6332: tmp15:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U6334: MOVETOCREG_OR_DSZ64(tmp15, 0x00000008, 0x6c3) !m2 SEQW SAVEUIP1 U6335SEQW GOTO U2074
U6335: tmp15:= MOVEFROMCREG_DSZ64( , 0x105) 
U6336: tmp15:= NOTAND_DSZ64(0x00004004, tmp15) 

U6338: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp15, 0x105) 
U6339: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x4c18) !m2 
U633a: tmp15:= NOTAND_DSZ32(0x00000001, tmp15) 

U633c: PORTOUT_DSZ32_ASZ16_SC1(0x4c18,  , tmp15) !m2 
U633d: tmp15:= READUIP_REGOVR(0x00) 
U633e: WRITEURAM(tmp15, 0x008e, 32) !m2 

U6340: tmp15:= READURAM( , 0x0037, 64) 
U6341: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U304e) !m1,m2 
U6342: tmp15:= NOTAND_DSZ32(0x00000001, tmp15) 

U6344: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp15) 
U6345: tmp15:= READURAM( , 0x008e, 64) SEQW GOTO U03be
U6346: tmp10:= ZEROEXT_DSZ32(0x00004000) 

U6348: tmp10:= CONCAT_DSZ16(tmp10, 0x00001e60) 
U6349: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp5, tmp12) 
U634a: PORTOUT_DSZ64_ASZ16_SC1(tmp10,  , tmp1) 

U634c: tmp10:= SUB_DSZ64(0x00000008, tmp10) 
U634d: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U6349
U634e: tmp3:= PORTIN_DSZ64_ASZ16_SC1(0x4ce0) !m2 

U6350: tmp3:= OR_DSZ64(0x00000800, tmp3) 
U6351: PORTOUT_DSZ64_ASZ16_SC1(0x4ce0,  , tmp3) !m2 
U6352: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000011, U6380) !m1 

U6354: tmp1:= ZEROEXT_DSZ32(0x00000001) 
U6355: PORTOUT_DSZ8_ASZ16_SC1(0x1e70,  , tmp1) !m2 
U6356: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x1e70) !m2 

U6358: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U6356) !m1 
U6359: tmp1:= ZEROEXT_DSZ32(0x00000001) 
U635a: SYNCFULL-> PORTOUT_DSZ8_ASZ16_SC1(0x1e74,  , tmp1) !m2 SEQW GOTO U6380

U635c: tmp0:= BTS_DSZ32(tmp0, 0x0000000c) SEQW SAVEUIP0 U635dSEQW GOTO U0644
U635d: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U6366) !m1 
U635e: tmp12:= READURAM( , 0x0057, 64) 

U6360: tmp11:= BT_DSZ64(tmp11, 0x0000003e) 
U6361: tmp5:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(0x0000039c, tmp12) 
U6362: tmp15:= SELECTCC_DSZ32_CONDB(tmp11, 0xffffffffffffffff) 

U6364: tmp5:= OR_DSZ32(tmp15, tmp5) 
U6365: CMPUJZ_DIRECT_NOTTAKEN(tmp5, U56ce, tmp2) !m2 
U6366: tmp2:= AND_DSZ32(0x000000ff, tmp2) 

U6368: tmp2:= BTS_DSZ32(tmp2, 0x0000001f) 
U6369: tmp4:= ZEROEXT_DSZ32() SEQW GOTO U5d3e
U636a: tmp12:= READURAM( , 0x0057, 64) 

U636c: tmp4:= MOVEFROMCREG_DSZ64( , 0x513) 
U636d: tmp0:= ZEROEXT_DSZ32(0x000000ff) 
U636e: tmp0:= CONCAT_DSZ32(tmp0, 0xfffffffffffff000) 

U6370: tmp4:= AND_DSZ64(tmp0, tmp4) 
U6371: tmp0:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(0x00000398, tmp12) 
U6372: tmp2:= ZEROEXT_DSZ64(tmp0) 

U6374: tmp8:= ZEROEXT_DSZ32(0x00000100) SEQW SAVEUIP0 U6375SEQW GOTO U2e81
U6375: tmp8:= AND_DSZ32(0x000000f0, tmp0) 
U6376: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000a0, tmp4, tmp8) 

U6378: tmp8:= ZEROEXT_DSZ32(0x00000200) SEQW SAVEUIP0 U6379SEQW GOTO U5d41
U6379: tmp8:= SHL_DSZ16(tmp2, 0x00000008) 
U637a: tmp8:= OR_DSZ8(tmp9, tmp8) 

U637c: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp12, 0x00000398, tmp8) 
U637d: tmp8:= MOVEFROMCREG_DSZ64( , 0x01d) 
U637e: MOVETOCREG_BTR_DSZ64(tmp8, 0x00000001, 0x01d) !m2 SEQW URET1

U6380: LFNCEWAIT-> TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U320c
U6381: tmp4:= SUB_DSZ32(0x00000001, tmp4) 
U6382: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp4, U0162) 

U6384: LFNCEWAIT-> tmp7:= ADD_DSZ64(0x00000010, tmp7) SEQW SAVEUIP1 U6385SEQW GOTO U0252
U6385: tmp15:= SUB_DSZ32(0x00000079, tmp8) 
U6386: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U37f2) 

U6388: tmp15:= SUB_DSZ32(0x0000007a, tmp8) 
U6389: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U37f2) 
U638a: tmp15:= NOTAND_DSZ32(0x00000001, tmp8) 

U638c: tmp15:= SUB_DSZ32(0xc0000100, tmp15) 
U638d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U37f2) 
U638e: SYNCWAIT-> SAVEUIP( , 0x01, U0105) !m0 SEQW GOTO U442a

U6390: TESTUSTATE( , SYS, !UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U5bd5
U6391: tmp0:= ZEROEXT_DSZ32(0x0000042e) 
U6392: SAVEUIP( , 0x01, U5bd5) !m0 

U6394: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U6395: TESTUSTATE( , VMX, 0x0040) !m2 ? SEQW URET1
U6396: tmp15:= READURAM( , 0x0043, 64) 

U6398: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000022, U07de) !m0 
U6399: SAVEUIP( , 0x00, U4f5e) 
U639a: tmp3:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U639c: tmp11:= unk_88f() !m0,m1 
U639d: tmp11:= ZEROEXT_DSZ16N(tmp11) !m1 
U639e: tmp1:= BT_DSZ64(tmp3, 0x00000022) 

U63a0: tmp1:= SELECTCC_DSZ64_CONDNB(tmp1, tmp11) SEQW URET0
U63a1: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U63a4
U63a2: tmp14:= BTS_DSZ32(tmp14, 0x00000015) 

U63a4: tmp2:= SHL_DSZ32(tmp2, 0x00000002) 
U63a5: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp14, 0x000) 
U63a6: tmp9:= OR_DSZ32(0x00003000, tmp10) 

U63a8: tmp8:= SHR_DSZ32(tmp10, 0x0000000a) 
U63a9: tmp11:= unk_207(tmp8, tmp9) 
U63aa: tmp11:= AND_DSZ32(0x00000200, tmp11) 

U63ac: tmp9:= BTR_DSZ32(tmp9, 0x00000009) 
U63ad: tmp9:= OR_DSZ32(tmp9, tmp11) 
U63ae: tmp6:= ZEROEXT_DSZ32(0x00010300) 

U63b0: tmp6:= unk_207(0x00090100, tmp6) 
U63b1: LFNCEMARK-> tmp0:= LDPPHYS_DSZ32_ASZ32_SC1(tmp2) SEQW GOTO U3648
U63b2: tmp5:= SHR_DSZ64(tmp1, 0x0000000b) 

U63b4: tmp1:= OR_DSZ64(tmp5, tmp3) 
U63b5: tmp1:= OR_DSZ64(tmp1, tmp0) 
U63b6: MOVE_DSZ32() 

U63b8: LFNCEWAIT-> tmp5:= unk_163(0x00000000, tmp1) 
U63b9: tmp5:= SHR_DSZ32(tmp5, 0x00000008) 
U63ba: MOVETOCREG_DSZ64(tmp5, 0x79d) 

U63bc: WRITEURAM(tmp1, 0x0079, 64) 
U63bd: tmp13:= MOVE_DSZ32(0x000021fe) 
U63be: tmp15:= SHR_DSZ32(r64dst, 0x00000011) 

U63c0: tmp14:= MOVEINSERTFLGS_DSZ32(tmp15, 0x0000043c) 
U63c1: tmp15:= MOVEINSERTFLGS_DSZ32(tmp15, 0x00000164) 
U63c2: tmp13:= CMOVCC_DSZ32_CONDP(tmp14, tmp13) 

U63c4: tmp13:= CMOVCC_DSZ32_CONDB(tmp15, tmp13) 
U63c5: SYNCFULL-> UFLOWCTRL( , tmp13, URET0) 
U63c6: SAVEUIP( , 0x01, U21fe) !m0 SEQW URET0

U63c8: tmp3:= SUB_DSZ32(0x00000001, tmp5) SEQW SAVEUIP1 U63c9SEQW GOTO U32cd
U63c9: tmp2:= SELECTCC_DSZ32_CONDB(tmp3, 0x000000bd) 
U63ca: tmp2:= MOVEMERGEFLGS_DSZ64(tmp2, tmp3) 

U63cc: tmp2:= CMOVCC_DSZ32_CONDNZ(tmp2, 0x000000ac) 
U63cd: tmp1:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 
U63ce: tmp1:= NOTAND_DSZ32(0x000000bd, tmp1) 

U63d0: tmp2:= OR_DSZ32(0x00000080, tmp2) 
U63d1: MOVETOCREG_OR_DSZ64(tmp1, 0x38f, tmp2) !m1 
U63d2: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 

U63d4: tmp1:= MOVEFROMCREG_DSZ64( , 0x104) 
U63d5: tmp1:= NOTAND_DSZ64(0x00200000, tmp1) 
U63d6: tmp2:= SELECTCC_DSZ32_CONDB(tmp3, 0x00200000) 

U63d8: MOVETOCREG_OR_DSZ64(tmp1, 0x104, tmp2) SEQW GOTO U3230
U63d9: rax:= ADD_DSZ16(tmp1, tmp0) 
U63da: rax:= CONCAT_DSZ16(0x00003c00, rax) 

U63dc: tmp0:= ADD_DSZ32(tmp9, 0x00000009) 
U63dd: tmp0:= ADD_DSZ32(tmp9, tmp0) 
U63de: tmp1:= unk_222(tmp3) 

U63e0: tmp1:= SHL_DSZ32(tmp1, 0x00000001) 
U63e1: tmp1:= SUB_DSZ32(0x00000001, tmp1) 
U63e2: tmp1:= MOVEMERGEFLGS_DSZ32(tmp1, tmp9) 

U63e4: tmp0:= CMOVCC_DSZ32_CONDZ(tmp1, tmp0) 
U63e5: rbx:= SHL_DSZ32(tmp0, 0x00000016) 
U63e6: rbx:= OR_DSZ32(0x0000003f, rbx) 

U63e8: tmp2:= MOVEMERGEFLGS_DSZ32(0x000007ff, tmp2) 
U63e9: tmp2:= CMOVCC_DSZ32_CONDNB(tmp2, 0x000003ff) 
U63ea: tmp0:= MOVEMERGEFLGS_DSZ32(0x0000003f, tmp9) 

U63ec: rcx:= CMOVCC_DSZ32_CONDNZ(tmp0, tmp2) 
U63ed: rdx:= ZEROEXT_DSZ32(0x00000001) SEQW GOTO U1bd0
U63ee: tmp15:= ZEROEXT_DSZ32(0x00000002) 

U63f0: PORTOUT_DSZ32_ASZ16_SC1(0x005c,  , tmp15) !m2 
U63f1: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x005c) !m2 
U63f2: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U63f1) !m1 

U63f4: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U63f5: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U63f6) !m0,m1 SEQW GOTO U63f4
U63f6: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 

U63f8: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U63f9: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U63fa: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 

U63fc: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U63fd: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U63fe: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U6400) !m0,m1 SEQW GOTO U63fd

U6400: tmp15:= SHR_DSZ64(tmpv0, 0x00000030) 
U6401: tmp15:= CONCAT_DSZ8(0x00000007, tmp15) 
U6402: tmp15:= CONCAT_DSZ16(0x000000c0, tmp15) SEQW GOTO U7359

U6404: TESTUSTATE( , VMX, !0x0002) !m0,m2 ? SEQW GOTO U6408
U6405: LFNCEWAIT-> tmp1:= MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000a, 0x2c4) !m0,m1 
U6406: WRITEURAM(tmp1, 0x0070, 64) !m2 

U6408: WRITEURAM(tmp0, 0x000a, 32) !m2 
U6409: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U640a: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x6c5) !m0 

U640c: tmp10:= OR_DSZ32(tmp0, tmp10) 
U640d: MOVETOCREG_DSZ64(0x00000016, 0x000) 
U640e: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U3d35

U6410: tmp1:= unk_208(IMM_MACRO_ALIAS_DATASIZE) !m0 
U6411: tmp1:= unk_207(0x00000004, tmp1) 
U6412: tmp1:= SUB_DSZ32(IMM_MACRO_ALIAS_DATASIZE, tmp1) !m0 

U6414: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2711) SEQW GOTO U3d36
U6415: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U6416: PORTOUT_DSZ32_ASZ16_SC1(0x005c,  , tmp15) !m2 

U6418: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x005c) !m2 
U6419: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U6418) !m1 
U641a: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U641c: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U641d) !m0,m1 SEQW GOTO U641a
U641d: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U641e: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U6420: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U6421: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U6422: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U6424: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U6425: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U6426) !m0,m1 SEQW GOTO U6424
U6426: tmp15:= SHR_DSZ64(tmpv0, 0x00000030) 

U6428: tmp15:= CONCAT_DSZ8(0x00000007, tmp15) 
U6429: tmp15:= CONCAT_DSZ16(0x000001c0, tmp15) SEQW GOTO U7099
U642a: tmp1:= AND_DSZ32(tmp1, 0x00006000) 

U642c: tmp1:= SUB_DSZ32(0x00002000, tmp1) 
U642d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U6595) 
U642e: tmp1:= TEST_DSZ64(tmp3, tmp3) 

U6430: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U6595) 
U6431: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U6436
U6432: tmp1:= RDSEGFLD(CS, SEL) 

U6434: LFNCEWAIT-> STADPPHYS_DSZN_ASZ64_SC1(rsp, IMM_MACRO_fb, mode=0x0a,  , tmp1) !m0,m1 
U6435: STADPPHYS_DSZN_ASZ64_SC1(rsp, IMM_MACRO_f3, mode=0x0a,  , tmp4) !m0,m1 
U6436: rsp:= ADD_DSZ64(tmp9, rsp) 

U6438: LFNCEWAIT-> FETCHFROMEIP1_ASZ64( , tmp3) 
U6439: tmp0:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U643a: WRSEGFLD(tmp0, CS, SEL+FLGS+LIM) 

U643c: tmp0:= RDSEGFLD(UNK_SEG_09, BASE) 
U643d: WRSEGFLD(tmp0, CS, BASE) 
U643e: MJMPTARGET_INDIRECT_ASZ64( , tmp3) SEQW UEND0

U6440: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U6444
U6441: STAD_DSZ64_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp7) 
U6442: tmp5:= ADD_DSZ64(0x00000008, tmp5) 

U6444: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U6448
U6445: STAD_DSZ32_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp7) 
U6446: tmp5:= ADD_DSZ64(0x00000004, tmp5) 

U6448: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U644c
U6449: STAD_DSZ16_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp7) 
U644a: tmp5:= ADD_DSZ64(0x00000002, tmp5) 

U644c: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U644e
U644d: STAD_DSZ8_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp7) 
U644e: tmp15:= SHL_DSZN(rcx, tmp2) !m1 

U6450: rdi:= ADD_DSZN(tmp15, rdi) !m1 
U6451: rcx:= ZEROEXT_DSZ16N( , rcx) !m1 
U6452: SYNCWAIT-> SFENCE() SEQW UEND0

U6454: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U0d8d
U6455: tmp0:= LDZX_DSZ32_ASZ32_SC1(tmp11, mode=0x18) 
U6456: tmp1:= LDZX_DSZ32_ASZ32_SC1(tmp11, 0x00000004, mode=0x18) 

U6458: tmp9:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000008, mode=0x18) 
U6459: tmp6:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000010, mode=0x18) 
U645a: tmp3:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 

U645c: tmp3:= BT_DSZ64(tmp3, 0x0000003f) 
U645d: tmp8:= ZEROEXT_DSZ32(tmp9) 
U645e: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp3) 

U6460: tmp8:= CMOVCC_DSZ64_CONDB(tmp9, tmp8) 
U6461: tmp9:= ZEROEXT_DSZ32(tmp6) 
U6462: tmp6:= MOVEMERGEFLGS_DSZ64(tmp6, tmp3) 

U6464: tmp6:= CMOVCC_DSZ64_CONDB(tmp6, tmp9) 
U6465: tmp10:= SHR_DSZ64(tmp8, 0x00000020) 
U6466: tmp10:= MOVSX_DSZ16(tmp10) 

U6468: tmp8:= CONCAT_DSZ32(tmp10, tmp8) SEQW URET0
U6469: tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 
U646a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x71a) 

U646c: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U6472
U646d: tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 
U646e: AETTRACE( , tmp0, 0x0c) 

U6470: tmp2:= SAVEUIP( , 0x00, U6080) 
U6471: SAVEUIP_REGOVR(0x01, U6472, 0x0210) !m0 SEQW GOTO U5d54
U6472: MOVETOCREG_BTS_DSZ64( , 0x0000000a, 0x29e) !m0,m1,m2 

U6474: rax:= ZEROEXT_DSZ32() 
U6475: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U6476: tmp0:= AND_DSZ32(0x60000000, tmp0) 

U6478: MOVETOCREG_DSZ64(tmp0, 0x7f6) 
U6479: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U647a: tmp0:= AND_DSZ32(0x0000080c, tmp0) 

U647c: tmp0:= OR_DSZ32(0x00000010, tmp0) 
U647d: LFNCEWAIT-> tmp14:= ZEROEXT_DSZ16(0x00002d66) SEQW GOTO U5028
U647e: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000000b, U6481) !m0,m1 

U6480: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) SEQW SAVEUIP0 U6481SEQW GOTO U59d9
U6481: tmp2:= NOTAND_DSZ32(0x00000800, tmp2) 
U6482: tmp2:= AND_DSZ32(tmp3, tmp2) 

U6484: tmp3:= CONCAT_DSZ32(0x000000ff, tmp3) 
U6485: tmp1:= MOVEFROMCREG_DSZ64( , 0x513) 
FUN_ucode_0006486:
U6486: tmp13:= SHR_DSZ64(tmp1, 0x00000020) 

U6488: tmp14:= AND_DSZ32(0x0000ffff, tmp13) 
U6489: tmp1:= CONCAT_DSZ32(tmp14, tmp1) 
U648a: tmp14:= AND_DSZ64(tmp3, tmp1) 

U648c: tmp2:= SUB_DSZ64(tmp14, tmp2) 
U648d: tmp3:= NOTAND_DSZ32(tmp3, 0x00000800) 
U648e: tmp2:= OR_DSZ64(tmp3, tmp2) 

U6490: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, tmp10) !m2 
U6491: tmp3:= NOTAND_DSZ32(tmp1, 0x00000001) 
U6492: tmp2:= OR_DSZ64(tmp3, tmp2) 

U6494: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U05c4) SEQW GOTO U6380
U6495: mm1:= unk_7ea(tmm0) 
U6496: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000002, U2ae9) !m0,m1 

U6498: tmp5:= ZEROEXT_DSZ16(0x0000fc01) 
U6499: tmp11:= SUB_DSZ32(tmp1, 0x0000fc01) 
U649a: tmm4:= unk_7c2(tmm3) 

U649c: tmm0:= unk_7c2( , tmm0) 
U649d: tmm0:= unk_6aa(tmm0, tmm4) 
U649e: LFNCEMARK-> tmm0:= unk_66e(tmm0) !m2 

U64a0: mm2:= unk_7e8(tmm0) 
U64a1: tmp2:= AND_DSZ8(0x00000004, tmp2) 
U64a2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U5bc4) 

U64a4: tmm0:= unk_7c2( , tmm0) 
U64a5: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000008, U64aa) !m1 
U64a6: mm0:= unk_76a(tmm0) 

U64a8: tmp0:= AND_DSZ8(0x00000010, tmp0) 
U64a9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U1432) 
U64aa: tmp12:= OR_DSZ16(0x00000010, tmp12) SEQW GOTO U1432

U64ac: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U64b9
U64ad: tmp4:= AND_DSZ32(0x00000fe0, tmp2) 
U64ae: MOVETOCREG_DSZ64(tmp4, 0x2dd, 32) !m1,m2 

U64b0: tmp4:= READURAM( , 0x0024, 64) 
U64b1: tmp0:= ZEROEXT_DSZ32(0x00010004) 
U64b2: tmp0:= OR_DSZ32(0x00002000, tmp0) 

U64b4: tmp1:= SHR_DSZ32(tmp2, 0x00000005) 
U64b5: tmp10:= ZEROEXT_DSZ32() 
U64b6: tmp4:= AND_DSZ32(tmp1, tmp4) 

U64b8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U73b1) 
U64b9: tmp4:= AND_DSZ32(0x200fffff, tmp2) 
U64ba: SYNCMARK-> MOVETOCREG_DSZ64(tmp4, 0x2dd, 32) !m1,m2 

U64bc: tmp4:= AND_DSZ32(0x000c0000, tmp2) 
U64bd: tmp0:= ZEROEXT_DSZ32(0x00000005) 
U64be: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U079e) 

U64c0: tmp0:= ZEROEXT_DSZ32(0x00000006) 
U64c1: SYNCWAIT-> BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000010, U079e) SEQW GOTO U5f90
U64c2: tmp12:= READURAM( , 0x0057, 64) 

U64c4: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000004, tmp12, tmp1) 
U64c5: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0,m2 
U64c6: tmp15:= ZEROEXT_DSZ32(0x000000bf) 

U64c8: MOVETOCREG_DSZ64(tmp15, 0x00b) !m2 
U64c9: WRITEURAM( , 0x00000000, 0x0014, 64) !m2 
U64ca: MOVETOCREG_DSZ64( , 0x00000000, 0x6c0) !m2 

U64cc: unk_eff() 
U64cd: MOVETOCREG_DSZ64( , 0x00000000, 0x01d) !m2 
U64ce: tmp15:= READURAM( , 0x0070, 64) 

U64d0: tmp12:= ZEROEXT_DSZ32(0x0000f615) 
U64d1: tmp12:= CONCAT_DSZ32(0x00020800, tmp12) 
U64d2: tmp15:= OR_DSZ64(tmp12, tmp15) 

U64d4: WRITEURAM(tmp15, 0x0070, 64) !m2 
U64d5: tmp15:= READURAM( , 0x001f, 64) 
U64d6: tmp15:= BTS_DSZ64(tmp15, 0x0000002f) 

U64d8: SYNCMARK-> WRITEURAM(tmp15, 0x001f, 64) !m2 SEQW GOTO U2e04
U64d9: tmp5:= PORTIN_DSZ32_ASZ16_SC1(tmp4) 
U64da: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000010) 

U64dc: tmp10:= ADD_DSZ64(tmp5, tmp10) 
U64dd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000010,  , tmp10) 
U64de: tmp10:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp8, 0x0000001a) 

U64e0: tmp10:= ADD_DSZ16(0x00000001, tmp10) 
U64e1: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp8, 0x0000001a,  , tmp10) 
U64e2: tmp8:= ADD_DSZ32(0x00000020, tmp8) 

U64e4: LFNCEMARK-> tmp6:= AND_DSZ32(0x0000c000, tmp6) 
U64e5: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U64e6) SEQW GOTO U5804
U64e6: tmp7:= PORTIN_DSZ32_ASZ16_SC1(0x50cc) !m2 

U64e8: tmp6:= AND_DSZ32(0x00008000, tmp6) 
U64e9: tmp8:= MOVEMERGEFLGS_DSZ64(tmp8, tmp6) 
ucode_fit_xlat_found:
U64ea: tmp8:= CMOVCC_DSZ32_CONDZ(tmp8, tmp7) 

U64ec: PORTOUT_DSZ32_ASZ16_SC1(0x50d0,  , tmp8) !m2 
U64ed: tmp1:= BTS_DSZ32(0x00000000, 0x0000001e) 
U64ee: PORTOUT_DSZ32_ASZ16_SC1(0x50c8,  , tmp1) !m2 SEQW GOTO U56b2

U64f0: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp1) !m1 
U64f1: tmp1:= CONCAT_DSZ32(0x0000001f) 
U64f2: tmp0:= NOTAND_DSZ64(tmp1, tmp0) 

U64f4: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
U64f5: tmp8:= SHR_DSZ64(tmp0, 0x0000001f) 
U64f6: tmp8:= NOTAND_DSZ32(tmp8, 0x00000200) 

U64f8: tmp2:= NOTAND_DSZ32(tmp8, tmp7) 
U64f9: tmp7:= NOTAND_DSZ32(0x0000003f, tmp14) 
U64fa: tmp7:= OR_DSZ32(0x00000008, tmp7) 

U64fc: tmp8:= AND_DSZ32(0x00000003, tmp6) 
U64fd: tmp8:= SELECTCC_DSZ32_CONDZ(tmp8, 0x00000001) 
U64fe: tmp12:= SHR_DSZ64(tmp0, 0x00000020) 

U6500: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U6505
U6501: tmp11:= AND_DSZ32(0x00000007, tmp12) 
U6502: tmp1:= SELECTCC_DSZ32_CONDZ(tmp11, 0x00000004) 

U6504: tmp8:= OR_DSZ32(tmp1, tmp8) 
U6505: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp2, 0x7fe) SEQW GOTO U5b2a
U6506: tmm3:= unk_624(0x00000000) 

U6508: tmp2:= PINTMOVDTMM2I_DSZ32(tmm3) 
U6509: tmm4:= unk_624(tmm1, tmm1) 
U650a: tmp3:= PINTMOVDTMM2I_DSZ32(tmm4) 

U650c: tmp1:= AND_DSZ32(0x00000010, tmp2) 
U650d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U19b5) 
U650e: tmp1:= AND_DSZ32(0x00000004, tmp3) 

U6510: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U19b5) 
U6511: tmp1:= AND_DSZ32(0x00000040, tmp2) 
U6512: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U5d89) 

U6514: tmp1:= OR_DSZ32(tmp3, tmp2) 
U6515: tmp1:= AND_DSZ32(0x00000020, tmp1) 
U6516: tmp1:= SHR_DSZ32(tmp1, 0x00000004) 

U6518: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U6519: tmp8:= OR_DSZ32(tmp1, tmp4) 
U651a: tmp8:= NOTAND_DSZ32(0x00004700, tmp8) 

U651c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp8, 0x48c) !m2 SEQW GOTO U1bd0
U651d: tmp5:= SUB_DSZ32(0x00000800, tmp5) 
U651e: tmp1:= AND_DSZ32(0x00001800, tmp5) 

U6520: tmp1:= SHL_DSZ64(tmp1, 0x00000018) 
U6521: tmp5:= OR_DSZ64(tmp1, tmp5) 
U6522: tmp1:= AND_DSZ32(0x00000180, tmp5) 

U6524: tmp2:= AND_DSZ32(0x00000100, tmp1) 
U6525: tmp2:= SELECTCC_DSZ32_CONDNZ(tmp2, 0x00000080) 
U6526: tmp1:= XOR_DSZ32(tmp2, tmp1) 

U6528: tmp1:= SHL_DSZ64(tmp1, 0x00000019) 
U6529: tmp5:= OR_DSZ64(tmp1, tmp5) 
U652a: tmp1:= CONCAT_DSZ32(0x00020020) 

U652c: tmp5:= OR_DSZ64(tmp1, tmp5) 
U652d: tmp1:= NOTAND_DSZ32(tmp5, 0x00038000) 
U652e: tmp2:= ZEROEXT_DSZ32(0x00038000) 

U6530: tmp2:= BTS_DSZ64(tmp2, 0x00000031) 
U6531: tmp2:= SELECTCC_DSZ64_CONDNZ(tmp1, tmp2) 
U6532: tmp5:= NOTAND_DSZ64(tmp2, tmp5) 

U6534: tmp5:= NOTAND_DSZ64(0x00007ffc, tmp5) SEQW GOTO U3208
U6535: tmp10:= AND_DSZ32(0x00000700, tmp11) 
U6536: tmp9:= SUB_DSZ32(0x00000700, tmp10) 

U6538: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U5b54) 
U6539: MOVETOCREG_OR_DSZ64( , 0x00000004, 0x00b) !m2 
U653a: tmp9:= SUB_DSZ32(0x00000400, tmp10) 

U653c: tmp9:= SUB_DSZ32(0x00000200, tmp9) 
U653d: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000002c8, mode=0x01, tmp12) 
U653e: tmp8:= SELECTCC_DSZ32_CONDNBE(tmp9, tmp8) 

U6540: tmp9:= AND_DSZ32(0x00000800, tmp11) 
U6541: tmp0:= ZEROEXT_DSZ64(tmp12) 
U6542: tmp12:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000100, mode=0x01, tmp12) 

U6544: tmp12:= SELECTCC_DSZ32_CONDZ(tmp9, tmp12) 
U6545: LFNCEWAIT-> tmp12:= CONCAT_DSZ16(tmp8, tmp12) 
U6546: tmp9:= TESTUSTATE( , SYS, UST_SMM | 0x2000) !m1 ? SEQW GOTO U4dd9

U6548: tmp5:= ZEROEXT_DSZ32(0x00002aad) 
U6549: tmp15:= MOVEFROMCREG_DSZ64( , 0x6c5) 
U654a: WRITEURAM(tmp15, 0x0047, 64) 

U654c: tmp1:= ZEROEXT_DSZ32(tmp11) SEQW GOTO U6a70
U654d: tmp11:= SHR_DSZ64(tmp13, 0x00000020) 
U654e: tmp11:= AND_DSZ32(0x0000001f, tmp11) 

U6550: tmp1:= SELECTCC_DSZ32_CONDZ(tmp11, 0x00000004) 
U6551: tmp8:= OR_DSZ32(tmp1, tmp8) 
U6552: tmp1:= RDSEGFLD(TSS, FLGS) 

U6554: tmp1:= AND_DSZ32(0x00000008, tmp1) 
U6555: tmp8:= MOVETOCREG_OR_DSZ64(tmp8, 0x6c5, tmp1) 
U6556: tmp1:= AND_DSZ32(0x00000800, tmp12) 

U6558: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x00001001) 
U6559: tmp8:= ZEROEXT_DSZ32(0x00000003, tmp8) 
U655a: tmp1:= XOR_DSZ32(tmp1, tmp8) 

U655c: tmp14:= SAVEUIP(0x01, U3bf9) !m0 
U655d: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U6560
U655e: tmp14:= SAVEUIP(0x01, U439e) !m0 

U6560: tmp8:= SHL_DSZ64(tmp1, 0x00000018) 
U6561: tmp8:= MOVETOCREG_OR_DSZ64(tmp8, 0x752, tmp1) 
U6562: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp7, 0x000) 

U6564: MOVETOCREG_DSZ64(tmp8, 0x01b) !m2 SEQW GOTO U2c01
U6565: tmp15:= RDSEGFLD(SS, FLGS) 
U6566: MOVETOCREG_DSZ64(tmp15, 0x73c) 

U6568: rsp:= ZEROEXT_DSZ64N(tmp5) !m1 
U6569: tmp0:= RDSEGFLD(SS, BASE) 
U656a: WRSEGFLD(tmp0, SS_USERM, BASE) 

U656c: tmp0:= RDSEGFLD(SS, SEL+FLGS+LIM) 
U656d: WRSEGFLD(tmp0, SS_USERM, SEL+FLGS+LIM) 
U656e: MOVETOCREG_SHR_DSZ64(tmp15, 0x00000005, 0x79e) 

U6570: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp13, U00e1) 
U6571: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp13, U0414) 
U6572: tmp3:= MOVEMERGEFLGS_DSZ32(0x00000030, tmp13) 

U6574: tmp3:= CMOVCC_DSZ32_CONDZ(tmp3, 0x00000028) 
U6575: tmp15:= ZEROEXT_DSZ32(0x00000034) 
U6576: tmp1:= AND_DSZ32(0x000000fc, tmp6) 

U6578: tmp1:= SUB_DSZ32(tmp15, tmp1) 
U6579: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U0414) 
U657a: tmp6:= NOTAND_DSZ32(0x000000fc, tmp6) 

U657c: tmp6:= OR_DSZ32(tmp3, tmp6) SEQW GOTO U00e5
U657d: tmm5:= unk_496(tmm0, tmm0) 
U657e: tmm4:= unk_53e( , tmm5) 

U6580: mm3:= unk_728(tmm5) 
U6581: ROVR<- tmm0:= unk_6c9(tmm5, tmm4) SEQW SAVEUIP0 U6582SEQW GOTO U6ec5
U6582: tmm2:= unk_494( , tmm3) 

U6584: tmm5:= unk_649(tmm0, tmm5) 
U6585: tmm2:= unk_6e1(tmm2, tmm5) 
U6586: tmm0:= unk_6e1(tmm4, tmm5) 

U6588: tmm5:= unk_6e1(tmm4, tmm6) 
U6589: tmm7:= unk_6e1(tmm3, tmm6) 
U658a: tmm6:= unk_6c9(tmm2, tmm5) 

U658c: tmm5:= unk_6c9(tmm0, tmm7) 
U658d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U658e) SEQW GOTO U65de
U658e: tmm6:= unk_6c9(tmm4, tmm6) 

U6590: tmm5:= unk_6c9(tmm3, tmm5) 
U6591: tmp1:= SHR_DSZ32(tmp8, 0x00000004) 
U6592: tmm7:= unk_702(mm1) 

U6594: tmm5:= unk_496(tmm5, tmm7) SEQW GOTO U3f65
U6595: tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 
U6596: tmp10:= MOVEFROMCREG_DSZ64( , 0x067) 

U6598: tmp1:= SUB_DSZ64(tmp15, tmp10) 
U6599: tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp4) 
U659a: tmp10:= SUB_DSZ32(tmp15, tmp10) 

U659c: tmp1:= CMOVCC_DSZ64_CONDB(tmp1, tmp10) 
U659d: SYNCMARK-> MOVETOCREG_DSZ64(tmp1, 0x71a) 
U659e: MOVETOCREG_DSZ64(0x00000009, 0x000) 

U65a0: MOVE_DSZ64() 
U65a1: UPDATEUSTATE( , 0xfc) 
U65a2: tmp10:= MOVEFROMCREG_DSZ64( , 0x01b) 

U65a4: MOVETOCREG_DSZ64(tmp10, 0x752) 
U65a5: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U65a6: tmp10:= READAFLAGS( , tmp10) !m2 

U65a8: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, U00da) 
U65a9: BTUJB_DIRECT_NOTTAKEN(tmp8, 0x00000000, U3acd) !m1,m2 
U65aa: LFNCEMARK-> LEA_DSZ8_ASZ32_SC1(tmp3) 

U65ac: rsp:= ADD_DSZN(tmp9, rsp) !m1 SEQW GOTO U2be9
U65ad: STAD_DSZN_ASZ32_SC1(tmp11, mode=0x18,  , tmp0) !m1 
U65ae: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_ALIAS_DATASIZE, mode=0x18,  , tmp10) !m0,m1 

U65b0: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_13, mode=0x18,  , tmp8) !m0,m1 
U65b1: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U2a99
U65b2: tmp1:= SHL_DSZ32(0x00000000, 0x00000004) 

U65b4: tmp1:= ADD_DSZ32(tmp3, tmp1) 
U65b5: tmp6:= SHR_DSZ32(tmp1, 0x00000010) 
U65b6: tmp5:= CONCAT_DSZ16(0xffffffffffffffff, tmp1) 

FUN_ucode_00065b8:
U65b8: tmp6:= SHL_DSZ32(tmp6, 0x0000000c) 
FUN_ucode_00065b9:
U65b9: tmp2:= OR_DSZ32(tmp7, tmp6) 
U65ba: tmp1:= SHL_DSZ32(0x00000000, 0x00000004) 

U65bc: tmp1:= ADD_DSZ32(tmp4, tmp1) 
U65bd: tmp8:= SHR_DSZ32(tmp1, 0x00000010) 
U65be: tmp7:= CONCAT_DSZ16(0xffffffffffffffff, tmp1) 

U65c0: tmp8:= SHL_DSZ32(tmp8, 0x0000000c) 
U65c1: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_1b, mode=0x18,  , tmp5) !m0,m1 
U65c2: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_23, mode=0x18,  , tmp2) !m0,m1 

U65c4: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_2b, mode=0x18,  , tmp7) !m0,m1 
U65c5: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_33, mode=0x18,  , tmp8) !m0,m1 SEQW URET0
U65c6: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U65cc

U65c8: tmp9:= READURAM( , 0x0011, 64) 
U65c9: LDHINT_CACHEALL_ASZ64_SC1(0x000001c8, tmp9) 
U65ca: LDHINT_CACHEALL_ASZ64_SC1(0x00008100, tmp9) 

U65cc: tmp15:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U65cd: tmp2:= READURAM( , 0x005c, 64) 
U65ce: tmp1:= SHR_DSZ64(tmp2, 0x0000000b) 

U65d0: tmp1:= NOTAND_DSZ32(tmp15, tmp1) 
U65d1: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000f, U2769) !m0,m1 
U65d2: TESTUSTATE( , UCODE, 0x0800) ? SEQW GOTO U2769

U65d4: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x003c) !m2 
U65d5: tmp15:= READURAM( , 0x0020, 64) 
U65d6: BTUJNB_DIRECT_NOTTAKEN(tmp1, U2769, tmp15) !m1 

U65d8: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW URET0
U65d9: tmp15:= SHL_DSZ64(tmp2, 0x00000015) 
U65da: tmp2:= READURAM( , 0x0043, 64) 

U65dc: tmp15:= NOTAND_DSZ64(tmp2, tmp15) 
U65dd: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000002f, U2769) !m0,m1 SEQW URET0
U65de: tmp0:= SHR_DSZ32(tmp8, 0x00000003) 

U65e0: tmp2:= SHR_DSZ32(tmp8, 0x00000001) 
U65e1: tmp1:= XOR_DSZ32(tmp0, tmp2) 
U65e2: tmp2:= XOR_DSZ32(tmp8, tmp2) 

U65e4: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp11, U65e5) SEQW GOTO U2b01
U65e5: tmm6:= FMOV( , tmm6) 
U65e6: tmm2:= unk_6e1(tmm0, tmm5) 

U65e8: tmm1:= FMOV( , tmm0) 
U65e9: tmp13:= unk_6a0() 
U65ea: tmp3:= AND_DSZ32(0x00000001, tmp8) 

U65ec: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U4a65) 
U65ed: tmm0:= unk_702(mm1) 
U65ee: tmm1:= unk_496(tmm1, tmm0) 

U65f0: tmm2:= unk_496(tmm2, tmm0) 
U65f1: mm0:= unk_689(tmm1, tmm2) !m0 
U65f2: tmm0:= unk_702(mm2) 

U65f4: tmm5:= unk_496(tmm5, tmm0) 
U65f5: tmm6:= unk_496(tmm6, tmm0) 
U65f6: LFNCEWAIT-> mm7:= unk_689(tmm5, tmm6) !m0,m2 SEQW GOTO U1bd0

U65f8: MOVETOCREG_SHR_DSZ64(tmp2, 0x00000010, 0x6c5) SEQW SAVEUIP1 U65f9SEQW GOTO U3a9a
U65f9: tmp9:= SHL_DSZN(rcx, tmp2) !m1 
U65fa: tmp12:= SHR_DSZN(tmp9, 0x00000004) !m1 

U65fc: tmp1:= SUB_DSZN(0x0008000f, tmp9) !m1 
U65fd: tmp12:= SUB_DSZ16(tmp12, 0x00018000) 
U65fe: tmp12:= SELECTCC_DSZ64_CONDNBE(tmp1, tmp12) 

U6600: tmp12:= ZEROEXT_DSZ16(tmp12, 0x00018000) 
U6601: SYNCMARK-> tmp4:= UFLOWCTRL( , tmp12, MSLOOPCTR) 
U6602: tmp15:= MOVEMERGEFLGS_DSZ32(0x000065f9, tmp1) 

U6604: tmp11:= AND_DSZ32(0x0000000f, tmp9) 
U6605: tmp1:= unk_0aa(tmp12) 
U6606: tmp14:= MOVEMERGEFLGS_DSZ32(0x00000466, tmp11) 

U6608: SAVEUIP( , 0x01, U068e) !m0 
U6609: tmp1:= SUB_DSZN(tmp1) !m1 
U660a: tmp14:= CMOVCC_DSZ32_CONDZ(tmp14, 0x00006691) 

U660c: tmp2:= CONCAT_DSZ32(tmp12, tmp2) 
U660d: tmp1:= SHL_DSZN(tmp1, 0x00000004) !m1 
U660e: tmp14:= CMOVCC_DSZ32_CONDNBE(tmp15, tmp14) 

U6610: UFLOWCTRL(tmp4, tmp14, URET1) SEQW GOTO U1b9c
U6611: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x000000b0, 0x00000000) 
U6612: tmp14:= SAVEUIP(0x01, U1bd0) !m0 

U6614: tmp3:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x00000398, tmp12) 
U6615: tmp0:= SHR_DSZ16(tmp3, 0x00000008) 
U6616: tmp8:= ZEROEXT_DSZ32(0x00000100) SEQW SAVEUIP0 U6618SEQW GOTO U5d41

U6618: tmp1:= ZEROEXT_DSZ32(tmp0) 
U6619: tmp5:= SHR_DSZ32(tmp0, 0x00000003) 
U661a: tmp5:= AND_DSZ32(0x00000018, tmp5) 

U661c: tmp5:= OR_DSZ32(0x000003a0, tmp5) 
U661d: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp12, tmp5) 
U661e: tmp3:= AND_DSZ32(0x000000ff, tmp3) 

U6620: tmp9:= SHL_DSZ16(tmp9, 0x00000008) 
U6621: tmp9:= OR_DSZ16(tmp3, tmp9) 
U6622: LFNCEMARK-> STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp12, 0x00000398, tmp9) 

U6624: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000080) 
U6625: tmp2:= ZEROEXT_DSZ8(tmp2) 
U6626: tmp5:= BT_DSZ64(tmp5, tmp1) 

U6628: tmp5:= SELECTCC_DSZ32_CONDNB(tmp5, 0x00000001) 
U6629: tmp9:= CONCAT_DSZ32(tmp5, tmp9) SEQW GOTO U67a4
U662a: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0) 

U662c: tmp1:= SHR_DSZ64(tmp4, 0x00000020) 
U662d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U6f84) 
U662e: tmp1:= ADD_DSZ32(0x0000004c, tmp4) 

U6630: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp1) 
U6631: tmp1:= ADD_DSZ64(tmp1, tmp4) 
U6632: tmp1:= SHR_DSZ64(tmp4, 0x00000020) 

U6634: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U6f84) 
U6635: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U6636: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U6f84) !m1 

U6638: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x0000000c) 
U6639: CMPUJNZ_DIRECT_NOTTAKEN(rdx, U6f84, tmp1) !m1 
U663a: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000018) 

U663c: BTUJNB_DIRECT_NOTTAKEN(tmp2, U6f84, tmp6) !m1 
U663d: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000004) 
U663e: tmp2:= SUB_DSZ32(tmp1, tmp9) 

U6640: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp2, U6f84) 
U6641: tmp9:= ZEROEXT_DSZ32(tmp1) 
U6642: tmp10:= ZEROEXT_DSZ32(tmp4) SEQW GOTO U6f84

U6644: MOVETOCREG_SHR_DSZ64(tmp2, 0x00000010, 0x6c5) SEQW SAVEUIP1 U6645SEQW GOTO U3a9a
U6645: tmp9:= SHL_DSZN(rcx, tmp2) !m1 
U6646: tmp12:= SHR_DSZN(tmp9, 0x00000004) !m1 

U6648: tmp1:= SUB_DSZN(0x0008000f, tmp9) !m1 
U6649: tmp12:= SUB_DSZ16(tmp12, 0x00018000) 
U664a: tmp12:= SELECTCC_DSZ64_CONDNBE(tmp1, tmp12) 

U664c: tmp12:= ZEROEXT_DSZ16(tmp12, 0x00018000) 
U664d: SYNCMARK-> tmp4:= UFLOWCTRL( , tmp12, MSLOOPCTR) 
U664e: tmp15:= MOVEMERGEFLGS_DSZ32(0x00006645, tmp1) 

U6650: tmp11:= AND_DSZ32(0x0000000f, tmp9) 
U6651: tmp1:= unk_0aa(tmp12) 
U6652: tmp14:= MOVEMERGEFLGS_DSZ32(0x00000466, tmp11) 

U6654: SAVEUIP( , 0x01, U068e) !m0 
U6655: tmp1:= SUB_DSZN(tmp1) !m1 
U6656: tmp14:= CMOVCC_DSZ32_CONDZ(tmp14, 0x00006440) 

U6658: tmp2:= CONCAT_DSZ32(tmp12, tmp2) 
U6659: tmp1:= SHL_DSZN(tmp1, 0x00000004) !m1 
U665a: tmp14:= CMOVCC_DSZ32_CONDNBE(tmp15, tmp14) 

U665c: UFLOWCTRL(tmp4, tmp14, URET1) SEQW GOTO U3b51
U665d: tmp1:= SUB_DSZ32(0x0000ffff, tmp1) 
U665e: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp1, U6675) 

U6660: tmp2:= SUB_DSZ32(0x00000010, tmp1) 
U6661: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp2, U5c75) 
FUN_ucode_0006662:
U6662: mm0:= unk_72a(tmm1) 

U6664: tmm1:= unk_702( , tmm1) 
U6665: tmm1:= unk_6c2( , tmm1) 
U6666: tmp1:= PINTMOVDTMM2I_DSZ32(tmm1) 

U6668: tmp3:= SUB_DSZ32(tmp1) 
U6669: tmp3:= MOVEINSERTFLGS_DSZ64(tmp0, tmp3) 
U666a: tmp1:= CMOVCC_DSZ32_CONDB(tmp3, tmp1) 

U666c: mm2:= unk_7ea(tmm0) 
U666d: tmp2:= ADD_DSZ32(tmp1, tmp2) 
U666e: tmm0:= unk_7c2(mm2, tmm0) 

U6670: tmp1:= SUB_DSZ32(0x00019ffe, tmp2) 
U6671: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp1, U5c75) 
U6672: tmp1:= SUB_DSZ32(0x00006001, tmp2) 

U6674: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp1, U2af9) 
U6675: mm0:= unk_6dd( , tmm0) SEQW GOTO U1bd0
U6676: tmp7:= MOVEFROMCREG_DSZ64( , 0x01c) 

U6678: tmp13:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U6679: tmp5:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
U667a: tmp13:= NOTAND_DSZ32(0x00002000, tmp13) 

U667c: tmp12:= READURAM( , 0x003d, 64) 
U667d: tmp12:= NOTAND_DSZ32(0x0000000f, tmp12) 
U667e: tmp12:= OR_DSZ32(tmp7, tmp12) 

U6680: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U6684
U6681: tmp8:= READURAM( , 0x0014, 64) 
U6682: BTUJB_DIRECT_NOTTAKEN(tmp8, 0x00000001, U6689) !m1 

U6684: tmp5:= NOTAND_DSZ32(0x00000003, tmp5) 
U6685: MOVETOCREG_DSZ64(tmp13, 0x7f8) !m2 
U6686: MOVETOCREG_DSZ64(tmp5, 0x7f9, 32) !m1,m2 

U6688: LFNCEMARK-> WRITEURAM(tmp12, 0x003d, 64) !m2 
U6689: tmp11:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U668a: tmp8:= SUB_DSZ32(0x00000005, tmp3) 

U668c: tmp8:= MOVEMERGEFLGS_DSZ32(0x00000036, tmp8) 
U668d: tmp8:= CMOVCC_DSZ32_CONDZ(tmp8, 0x00000000) 
U668e: BTUJB_DIRECT_NOTTAKEN(tmp11, U2aa5, tmp8) !m1 

U6690: SYNCFULL-> tmp0:= unk_203( , 0x00000001) SEQW URET0
U6691: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U6696
U6692: tmp0:= LDZX_DSZ64_ASZ32_SC1(rsi, mode=0x18, tmp5) 

U6694: STAD_DSZ64_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp0) 
U6695: tmp5:= ADD_DSZ64(0x00000008, tmp5) 
U6696: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U669c

U6698: tmp0:= LDZX_DSZ32_ASZ32_SC1(rsi, mode=0x18, tmp5) 
U6699: STAD_DSZ32_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp0) 
U669a: tmp5:= ADD_DSZ64(0x00000004, tmp5) 

U669c: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U66a1
FUN_ucode_000669d:
U669d: tmp0:= LDZX_DSZ16_ASZ32_SC1(rsi, mode=0x18, tmp5) 
U669e: STAD_DSZ16_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp0) 

U66a0: tmp5:= ADD_DSZ64(0x00000002, tmp5) 
U66a1: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U66a5
U66a2: tmp0:= LDZX_DSZ8_ASZ32_SC1(rsi, mode=0x18, tmp5) 

U66a4: STAD_DSZ8_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp0) 
U66a5: tmp15:= SHL_DSZN(rcx, tmp2) !m1 
U66a6: rsi:= ADD_DSZN(tmp15, rsi) !m1 

U66a8: rdi:= ADD_DSZN(tmp15, rdi) !m1 
U66a9: rcx:= ZEROEXT_DSZ16N( , rcx) !m1 
U66aa: SYNCWAIT-> SFENCE() SEQW UEND0

U66ac: tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x0000000c, 0x01c) !m2 
U66ad: tmp7:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00000004) 
U66ae: MOVETOCREG_DSZ64(tmp7, 0x070) !m2 

U66b0: WRITEURAM(tmp12, 0x0009, 64) SEQW SAVEUIP1 U66b1SEQW GOTO U0272
U66b1: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000248, mode=0x01, tmp0) 
U66b2: WRITEURAM(tmp10, 0x0046, 64) 

U66b4: tmp10:= BT_DSZ32(tmp10, 0x0000001f) 
U66b5: tmp10:= SELECTCC_DSZ64_CONDNB(tmp10, 0x00200000) 
U66b6: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp14, 0x000, tmp10) 

U66b8: tmp4:= ZEROEXT_DSZ16(tmp13) 
U66b9: tmp0:= ZEROEXT_DSZ32(0x00001000) 
U66ba: tmp10:= AND_DSZ32(0x00000700, tmp1) 

U66bc: tmp10:= SUB_DSZ32(0x00000400, tmp10) 
U66bd: tmp10:= SUB_DSZ32(0x00000200, tmp10) 
U66be: tmp10:= SELECTCC_DSZ32_CONDNBE(tmp10, 0x00200000) 

U66c0: tmp0:= OR_DSZ32(tmp10, tmp0) 
U66c1: tmp10:= SUB_DSZ32(0x0000000e, tmp2) 
U66c2: tmp2:= BTS_DSZ32(tmp1, 0x0000001f) 

U66c4: tmp1:= SELECTCC_DSZ64_CONDNZ(tmp10, tmp11) 
U66c5: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x000) SEQW GOTO U4f60
U66c6: tmp10:= MOVEFROMCREG_DSZ64( , 0x7f8) 

U66c8: tmp15:= MOVEFROMCREG_DSZ64( , 0x004) 
U66c9: tmp10:= CONCAT_DSZ32(tmp15, tmp10) 
U66ca: SYNCMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x7f8) !m2 

U66cc: MOVETOCREG_DSZ64(0x0000001e, 0x000) !m2 
U66cd: tmp4:= READURAM( , 0x0060, 64) 
U66ce: SYNCWAIT-> tmp3:= unk_d60(tmp4, tmp9) 

U66d0: tmp5:= unk_d60(tmp4, tmp9) 
U66d1: tmp6:= unk_d60(tmp4, tmp9) 
U66d2: tmp7:= unk_d60(tmp4, tmp9) 

U66d4: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U66da
U66d5: tmp3:= ZEROEXT_DSZ32(tmp3) 
U66d6: tmp5:= ZEROEXT_DSZ32(tmp5) 

U66d8: tmp6:= ZEROEXT_DSZ32(tmp6) 
U66d9: tmp7:= ZEROEXT_DSZ32(tmp7) 
U66da: tmp12:= ADD_DSZ64(tmp1, tmp5) 

U66dc: tmp1:= SUB_DSZ64(tmp3, tmp5) 
U66dd: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, tmp2) 
U66de: tmp1:= SUB_DSZ64(tmp6, tmp12) 

U66e0: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp1, tmp2) SEQW URET1
U66e1: tmpv0:= ZEROEXT_DSZ64(tmp6) 
U66e2: tmpv1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U66e4: tmpv1:= BT_DSZ64(tmpv1, 0x0000000d) 
U66e5: tmpv1:= SELECTCC_DSZ64_CONDB(tmpv1, tmpv0) 
U66e6: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000011, U6c59) !m1 

U66e8: tmpv0:= TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U66ea
U66e9: tmpv0:= OR_DSZ32(0x00000100, tmpv0) 
U66ea: tmpv2:= NOTAND_DSZ64(0x0000001f, tmpv2) 

U66ec: tmpv2:= SHL_DSZ64(tmpv2, 0x00000004) 
U66ed: tmpv0:= OR_DSZ32(0x00000083, tmpv0) 
U66ee: tmpv2:= OR_DSZ64(tmpv0, tmpv2) SEQW SAVEUIP0 U66f0SEQW GOTO U77ac

U66f0: tmpv0:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U66f1: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000002, U1db2) !m0,m2 
U66f2: tmpv1:= ZEROEXT_DSZ8(tmpv2) 

U66f4: tmpv0:= SHR_DSZ64(tmpv2, 0x00000008) 
U66f5: tmpv0:= SHL_DSZ64(tmpv0, 0x00000010) 
U66f6: tmpv0:= OR_DSZ64(0x00004302, tmpv0) 

U66f8: MOVETOCREG_SHR_DSZ64(tmpv0, 0x00000038, 0x08b) !m2 
U66f9: tmpv0:= SHL_DSZ64(tmpv0, 0x00000008) 
U66fa: MOVETOCREG_OR_DSZ64(tmpv0, 0x08a, tmpv1) !m2 SEQW GOTO U06c6

U66fc: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U66fd: tmp14:= ZEROEXT_DSZ32(0x000022c0) 
U66fe: WRMSLOOPCTRFBR( , 0x00000009) 

U6700: SAVEUIP( , 0x00, U04dc) SEQW SAVEUIP1 U6701SEQW GOTO U0262
U6701: tmp15:= ZEROEXT_DSZ64(0xfffffffffffff000) 
U6702: LFNCEWAIT-> MOVETOCREG_AND_DSZ64(tmp0, 0x511, tmp15) 

U6704: MOVETOCREG_DSZ64(tmp1, 0x510) 
U6705: MOVETOCREG_AND_DSZ64(tmp2, 0x518, tmp15) 
U6706: MOVETOCREG_DSZ64(tmp8, 0x000) 

U6708: MOVETOCREG_DSZ64(tmp7, 0x070) 
U6709: tmp15:= MOVEFROMCREG_DSZ64( , 0x004) 
U670a: tmp15:= NOTAND_DSZ32(0x00000003, tmp15) 

U670c: tmp3:= AND_DSZ32(0x00000003, tmp3) 
U670d: tmp15:= OR_DSZ32(0x00000200, tmp15) 
U670e: MOVETOCREG_OR_DSZ64(tmp15, 0x004, tmp3) SEQW SAVEUIP1 U6710SEQW GOTO U043c

U6710: tmp15:= READURAM( , 0x001f, 64) 
U6711: tmp15:= NOTAND_DSZ64(0x00000200, tmp15) 
U6712: WRITEURAM(tmp15, 0x001f, 64) 

U6714: MOVETOCREG_DSZ64(tmp6, 0x71a) 
U6715: MOVETOCREG_DSZ64(tmp6, 0x067) SEQW GOTO U251d
U6716: tmp4:= XOR_DSZ32(0xffffffffffffb22a, tmp3) 

U6718: tmp6:= SHL_DSZ32(tmp0, 0x0000000a) 
U6719: ROVR<- tmp9:= AND_DSZ32(tmp4, tmp0) SEQW SAVEUIP1 U671aSEQW GOTO U2178
U671a: tmp6:= AND_DSZ32(0x00080000, tmp6) 

U671c: tmp7:= AND_DSZ32(0x00080000, tmp5) 
U671d: tmp8:= unk_207(tmp6, tmp7) 
U671e: tmp1:= NOTAND_DSZ32(0x0009cdfd, tmp5) 

U6720: tmp2:= AND_DSZ32(0x00000100, tmp0) 
U6721: ROVR<- tmp1:= AND_DSZ32(tmp3, tmp1) SEQW SAVEUIP1 U6722
U6722: tmp1:= OR_DSZ32(tmp8, tmp1) 

U6724: tmp9:= OR_DSZ32(tmp1, tmp9) 
U6725: tmp5:= BTR_DSZ32(tmp5, 0x00000010) SEQW SAVEUIP1 U6726SEQW GOTO U2e95
U6726: unk_13f(tmp9) !m2 

U6728: SYNCFULL-> MOVETOCREG_DSZ64(tmp9, 0x7fe) !m2 
U6729: tmp2:= unk_207(tmp2) 
U672a: tmp8:= unk_207(tmp6) 

U672c: tmp8:= SHL_DSZ32(tmp8, 0x00000001) 
U672d: tmp10:= AND_DSZ32(tmp5, tmp8) 
U672e: tmp2:= ADD_DSZ32(tmp10, tmp2) 

U6730: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U06f5) 
U6731: rsp:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 SEQW UEND0
U6732: tmp11:= CONCAT_DSZ32(0x0000000c) 

U6734: WRITEURAM(tmp11, 0x0073, 64) SEQW SAVEUIP1 U6735SEQW GOTO U6a1e
U6735: SYNCWAIT-> tmp2:= READURAM( , 0x0077, 64) 
U6736: SAVEUIP_REGOVR(0x01, U6738, 0x0001) !m0 

U6738: SAVEUIP( , 0x01, U6bc9) !m0 
U6739: tmp0:= ZEROEXT_DSZ32(0x00000013) 
U673a: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000002b, U6074) !m0,m1 

U673c: SAVEUIP_REGOVR(0x00, U673d, 0x0002) SEQW GOTO U02b2
U673d: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U673e: tmp1:= AND_DSZ32(0x00020000, tmp2) 

U6740: tmp4:= AND_DSZ32(0x00040000, tmp2) 
U6741: tmp3:= READURAM( , 0x000d, 64) 
U6742: tmp3:= SHR_DSZ64(tmp3, 0x00000020) 

U6744: tmp3:= AND_DSZ32(0x000000ff, tmp3) 
U6745: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U6b44
U6746: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x00040000) 

U6748: tmp0:= AND_DSZ32(0x000000ff, tmp2) 
U6749: tmp0:= SUB_DSZ32(tmp0, tmp3) 
U674a: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00040000) 

U674c: tmp1:= OR_DSZ32(tmp1, tmp0) 
U674d: tmp2:= ZEROEXT_DSZ8(tmp2, tmp1) SEQW GOTO U6b49
U674e: tmp14:= AND_DSZ32(0x0000000a, tmp9) 

U6750: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U3b8e) 
U6751: tmp15:= READURAM( , 0x0078, 64) 
U6752: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000017, U6754) !m0,m1 SEQW GOTO U07a5

U6754: tmp0:= MOVEFROMCREG_DSZ64( , 0x01d) 
U6755: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U3b98) !m1,m2 
U6756: tmp0:= ZEROEXT_DSZ64(tmp10) 

U6758: tmp14:= NOTAND_DSZ32(tmp0, 0x000000f0) 
U6759: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp14, U3b98) 
U675a: LFNCEMARK-> tmp3:= AND_DSZ64(0x000000ff, tmp0) 

U675c: tmp4:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U675d: tmp0:= ZEROEXT_DSZ32(0x0000000c) 
U675e: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp4, 0x0000000a, U079e) !m0 

U6760: tmp0:= ZEROEXT_DSZ64(tmp3) 
U6761: unk_eff() 
U6762: ROVR<- NOP SEQW SAVEUIP1 U6764SEQW GOTO U2b0d

U6764: tmp1:= ZEROEXT_DSZ32(0x00000110) 
U6765: MOVETOCREG_DSZ64(tmp1, 0x29e, 32) !m1 
U6766: tmp3:= OR_DSZ32(0x00000001) 

U6768: tmp5:= OR_DSZ32() 
U6769: tmp1:= OR_DSZ32(0x00000001) SEQW GOTO U589e
U676a: SAVEUIP( , 0x01, U08fe) !m0 

U676c: tmp15:= READURAM( , 0x0042, 64) 
U676d: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000000a, U76e9) !m0,m1,m2 
U676e: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000003, U76e9) !m0,m1,m2 

U6770: tmp15:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U6771: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000009, U76e9) !m1,m2 
U6772: tmp0:= READURAM( , 0x0044, 64) 

U6774: tmp15:= SHR_DSZ32(tmp0, 0x00000010) 
U6775: tmp15:= AND_DSZ32(0x00000007, tmp15) 
U6776: tmp0:= SUB_DSZ16(tmp0, tmp1) 

U6778: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, U76e9) 
U6779: tmp15:= SUB_DSZ16(tmp15, tmp0) 
U677a: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp15, U76e9) 

U677c: SYNCMARK-> tmp0:= ADD_DSZ32(0x00000001, tmp0) 
FUN_ucode_000677d:
U677d: tmp0:= SHL_DSZ32(tmp0, 0x00000004) 
U677e: unk_eff() 

U6780: ROVR<-SYNCWAIT-> tmp3:= MOVE_DSZ32(0x00000001) SEQW SAVEUIP1 U6781SEQW GOTO U2b0d
U6781: tmp1:= ZEROEXT_DSZ32(0x00000110) 
U6782: MOVETOCREG_DSZ64(tmp1, 0x29e, 32) !m1,m2 

U6784: tmp1:= OR_DSZ32(0x00000001) 
U6785: tmp5:= OR_DSZ32() SEQW GOTO U589e
U6786: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW URET0

U6788: TESTUSTATE( , SYS, UST_VMX_DIS | UST_VMX_OP_DIS) !m1 ? SEQW GOTO U2769
U6789: tmp3:= READURAM( , 0x0043, 64) 
U678a: tmp3:= BT_DSZ64(tmp3, 0x0000002e) 

U678c: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U5ffc
U678d: tmp4:= unk_88f() !m0,m1 
U678e: tmp4:= ZEROEXT_DSZ16N(tmp4) !m1 

U6790: WRITEURAM(tmp4, 0x0073, 64) !m2 
U6791: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp0, U05d4) 
U6792: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp3, U05d4) 

U6794: tmp3:= SHR_DSZN(r64dst, 0x0000000f) !m1 
U6795: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U05d4) 
U6796: tmp3:= ZEROEXT_DSZ32(0x0000002d) 

U6798: tmp4:= SELECTCC_DSZ32_CONDP(tmp0, 0x00000001) 
U6799: tmp3:= ADD_DSZ32(tmp4, tmp3) 
U679a: tmp3:= READURAM( , tmp3) 

U679c: tmp4:= SHR_DSZ32(r64dst, 0x00000003) 
U679d: tmp13:= READUIP_REGOVR(0x00) 
U679e: LFNCEWAIT-> tmp4:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp3, tmp4) 

U67a0: tmp3:= AND_DSZ32(0x00000007, r64dst) 
U67a1: BTUJB_DIRECT_NOTTAKEN(tmp4, U05d4, tmp3) SEQW GOTO U6002
U67a2: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x00000398, tmp12) 

U67a4: tmp0:= SHR_DSZ16(tmp9, 0x00000008) 
U67a5: tmp0:= AND_DSZ32(0x000000f0, tmp0) 
U67a6: tmp8:= AND_DSZ32(0x000000f0, tmp2) 

U67a8: tmp8:= SUB_DSZ32(tmp8, tmp0) 
U67a9: tmp8:= MOVEMERGEFLGS_DSZ32(tmp0, tmp8) 
U67aa: tmp8:= CMOVCC_DSZ32_CONDNBE(tmp8, tmp2) 

U67ac: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x000000a0, tmp8) 
U67ad: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000020, U4034) 
U67ae: tmp9:= AND_DSZ32(0x000000f0, tmp9) 

U67b0: tmp8:= AND_DSZ32(0x000000f0, tmp8) 
U67b1: tmp9:= SUB_DSZ32(tmp8, tmp9) 
U67b2: tmp9:= SELECTCC_DSZ32_CONDBE(tmp9, 0x00000002) 

U67b4: tmp0:= READURAM( , 0x0043, 64) 
U67b5: tmp0:= BT_DSZ64(tmp0, 0x00000002) 
U67b6: tmp9:= SELECTCC_DSZ32_CONDB(tmp0, tmp9) 

U67b8: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000002) 
U67b9: tmp8:= MOVEFROMCREG_DSZ64( , 0x01d) 
U67ba: tmp8:= NOTAND_DSZ32(tmp0, tmp8) 

U67bc: tmp8:= OR_DSZ32(tmp9, tmp8) 
U67bd: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp8, 0x01d) SEQW URET1
U67be: SAVEUIP( , 0x00, U2ac5) 

U67c0: SAVEUIP( , 0x01, U3048) !m0 
U67c1: tmp4:= AND_DSZ32(0x00000070, tmp11) 
U67c2: tmp4:= SUB_DSZ32(0x00000020, tmp4) 

U67c4: tmp4:= SELECTCC_DSZ32_CONDZ(tmp4, 0x00000004) 
U67c5: tmp4:= OR_DSZ32(0x00000002, tmp4) 
U67c6: tmp1:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 

U67c8: tmp1:= NOTAND_DSZ32(tmp4, tmp1) 
U67c9: MOVETOCREG_DSZ64(tmp1, 0x223, 32) !m1,m2 
U67ca: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U67d2

U67cc: tmp2:= READURAM( , 0x005c, 64) 
U67cd: tmp2:= BT_DSZ32(tmp2, 0x00000008) 
U67ce: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00000002) 

U67d0: tmp9:= OR_DSZ64(tmp9, tmp2) 
U67d1: tmp7:= OR_DSZ64(0x00000002, tmp7) 
U67d2: tmp4:= READURAM( , 0x0070, 64) 

U67d4: tmp4:= NOTAND_DSZ64(tmp7, tmp4) 
U67d5: tmp4:= MOVETOCREG_OR_DSZ64(tmp4, 0x2c4, tmp9) !m1,m2 
U67d6: MOVETOCREG_SHR_DSZ64(tmp4, 0x00000020, 0x008) !m2 

U67d8: tmp4:= SHR_DSZ32(tmp4, 0x00000018) 
U67d9: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp4, 0x2da, tmp8) !m1,m2 SEQW URET1
U67da: tmp14:= unk_52b(tmp14) 

U67dc: tmp15:= unk_52b(tmp15) 
U67dd: tmm5:= unk_5b9(tmm6) 
U67de: tmm6:= unk_4ee(tmm7, tmm6) 

U67e0: tmm7:= unk_4d7(tmm5, tmm7) 
U67e1: tmm6:= unk_6d8(xmm2, tmm6) 
U67e2: tmm7:= unk_6d8(xmm2, tmm7) 

U67e4: tmp15:= ZEROEXT_DSZ32(0x00000300) 
U67e5: tmp8:= unk_ea6(tmp15) 
U67e6: tmp9:= unk_ea6(tmp15) 

U67e8: xmm0:= MOVHLPS(tmm1, tmm0) 
U67e9: tmp8:= unk_ea6(tmp15) 
U67ea: tmp9:= unk_ea6(tmp15) 

U67ec: xmm1:= MOVHLPS(tmm1, tmm0) 
U67ed: tmp15:= ZEROEXT_DSZ32(0x00000380) 
U67ee: tmp8:= unk_ea6(tmp15) 

U67f0: tmp9:= unk_ea6(tmp15) 
U67f1: xmm2:= MOVHLPS(tmm1, tmm0) 
U67f2: tmp8:= unk_ea6(tmp15) 

U67f4: tmp9:= unk_ea6(tmp15) 
U67f5: xmm3:= MOVHLPS(tmm1, tmm0) SEQW GOTO U6248
U67f6: LFNCEWAIT-> tmp15:= MOVEFROMCREG_DSZ64( , 0x068) 

U67f8: tmp0:= BTS_DSZ32(tmp0, 0x0000001f) 
U67f9: tmp1:= READURAM( , 0x000e, 64) 
U67fa: SYNCFULL-> tmp1:= SHR_DSZ64(tmp1, 0x00000030) 

U67fc: tmp1:= CONCAT_DSZ16(tmp1, tmp15) 
U67fd: tmp1:= CONCAT_DSZ32(tmp1, tmp0) 
U67fe: WRITEURAM(tmp1, 0x000e, 64) !m2 

U6800: tmp0:= READURAM( , 0x005c, 64) 
U6801: tmp0:= BT_DSZ32(tmp0, 0x00000008) 
U6802: tmp15:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000002) 

U6804: tmp0:= SUB_DSZ64(0x00000001) 
U6805: tmp0:= NOTAND_DSZ64(tmp15, tmp0) 
U6806: WRITEURAM(tmp0, 0x0070, 64) !m2 

U6808: tmp2:= READURAM( , 0x0020, 64) 
U6809: tmp2:= AND_DSZ32(0x00007ffe, tmp2) 
U680a: tmp2:= SHL_DSZ32(0x00000001, tmp2) 

U680c: ROVR<- tmp1:= MOVE_DSZ32() SEQW SAVEUIP1 U680dSEQW GOTO U02ba
U680d: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x0004) !m2 
U680e: tmp0:= OR_DSZ32(tmp2, tmp0) 

U6810: PORTOUT_DSZ32_ASZ16_SC1(0x0004,  , tmp0) !m2 
U6811: SYNCFULL-> PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 SEQW GOTO U64c5
U6812: tmp15:= SUB_DSZ32(0x00000400, tmp14) 

U6814: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp15, U770d) 
U6815: TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U681c
U6816: tmp15:= SUB_DSZ32(0x000000b0, tmp14) 

U6818: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U1d39) 
U6819: tmp15:= SUB_DSZ32(0x00000300, tmp14) 
U681a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U1d39) 

U681c: tmp15:= READURAM( , 0x0043, 64) 
U681d: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000028, U770d) !m1,m2 
U681e: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp14, U5c45) 

U6820: tmp15:= SHR_DSZ32(tmp14, 0x00000004) 
U6821: tmp14:= CONCAT_DSZ32(tmp14, tmp15) 
U6822: tmp15:= ZEROEXT_DSZ32(0xffffe90c) 

U6824: tmp15:= CONCAT_DSZ32(0x41ff01ff, tmp15) 
U6825: BTUJNB_DIRECT_NOTTAKEN(tmp15, U770d, tmp14) !m1,m2 
U6826: tmp15:= ZEROEXT_DSZ32(0x0000e904) 

U6828: tmp15:= CONCAT_DSZ32(0x41ff0100, tmp15) 
U6829: tmp15:= BT_DSZ64(tmp15, tmp14) 
U682a: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00000002) 

U682c: tmp15:= OR_DSZ32(0x00000001, tmp15) 
U682d: tmp14:= SHR_DSZ64(tmp14, 0x0000001e) SEQW GOTO U1d3c
U682e: MOVETOCREG_DSZ64(tmp0, 0x207, 32) !m1 

U6830: SYNCFULL-> MOVETOCREG_DSZ64(tmp1, 0x209, 32) !m1 
U6831: tmp0:= MOVEFROMCREG_DSZ64( , 0x233, 32) !m1 
U6832: tmp1:= MOVEFROMCREG_DSZ64( , 0x234, 32) !m1 

U6834: tmm0:= unk_747(mm0) 
U6835: tmm0:= unk_746(mm1, tmm0) 
U6836: tmp0:= MOVEFROMCREG_DSZ64( , 0x20a, 32) !m1 

U6838: tmp1:= MOVEFROMCREG_DSZ64( , 0x20b, 32) !m1 
U6839: tmm1:= unk_747(mm0) 
U683a: SYNCFULL-> tmm1:= unk_746(mm1, tmm1) 

U683c: MOVETOCREG_DSZ64( , 0x00000000, 0x233, 32) !m1 
U683d: MOVETOCREG_DSZ64( , 0x00000000, 0x234, 32) !m1 
U683e: MOVETOCREG_DSZ64( , 0x00000000, 0x207, 32) !m1 

U6840: MOVETOCREG_DSZ64( , 0x00000000, 0x209, 32) !m1 
U6841: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x208) !m0,m1 SEQW SAVEUIP0 U6842SEQW GOTO U7735
U6842: tmp0:= PORTIN_DSZ8_ASZ16_SC1(0x50d8) !m2 

U6844: tmp0:= SUB_DSZ8(tmp0, 0x00000020) 
U6845: SAVEUIP( , 0x00, U6846) 
U6846: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U39fd) 

U6848: tmm0:= XORPD(tmm0, tmm0) 
U6849: tmp0:= SUB_DSZ8(0x00000001, tmp0) SEQW GOTO U7735
U684a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U421d) 

U684c: tmp2:= AND_DSZ32(0x00000010, tmp5) 
U684d: tmp2:= CMOVCC_DSZ32_CONDZ(tmp2, 0x00000001) 
U684e: tmp10:= ZEROEXT_DSZ32(0x00000001) 

U6850: tmm1:= unk_704(tmm2) 
U6851: tmm4:= unk_743(mm2, tmm1) 
U6852: tmm7:= unk_483(tmm4) 

U6854: tmp0:= BT_DSZ16(tmp5, 0x0000000a) 
U6855: tmp1:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000001) 
U6856: tmm1:= unk_743(mm1, tmm0) 

U6858: tmm0:= unk_482(tmm1, tmm7) 
U6859: tmm6:= unk_496(tmm3, tmm2) 
U685a: tmm0:= unk_53f(tmm6, tmm0) 

U685c: tmp8:= PINTMOVDTMM2I_DSZ32(tmm0) 
U685d: tmp3:= AND_DSZ8(0x00000001, tmp8) 
U685e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U6860) SEQW GOTO U1432

U6860: tmp12:= OR_DSZ16(0x00000004, tmp12) 
U6861: tmp9:= unk_6a0() 
U6862: tmm0:= unk_53f(tmm0, tmm1) 

U6864: tmp4:= MOVEFROMCREG_DSZ64( , 0x486) 
U6865: tmp0:= AND_DSZ16(0x00000004, tmp4) 
U6866: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U1a50) SEQW GOTO U1432

U6868: tmp8:= MOVEFROMCREG_DSZ64( , 0x01b) SEQW SAVEUIP1 U6869SEQW GOTO U3a9e
U6869: tmp14:= AND_DSZ32(0x00007800, tmp2) 
U686a: tmp8:= XOR_DSZ64(tmp14, tmp8) 

U686c: SYNCMARK-> MOVETOCREG_DSZ64(tmp8, 0x752) !m2 
U686d: tmp5:= AETTRACE( , 0x00000000, 0x08, tmp8) 
U686e: tmp2:= OR_DSZ32(0x00008000, tmp2) 

U6870: tmp10:= ADDSUB_DSZ16_CONDD(0x00000001) 
U6871: tmp10:= SELECTCC_DSZ32_CONDNS(tmp10, 0x00000001) 
U6872: tmp10:= SUB_DSZ16(rcx, tmp10) 

U6874: tmp10:= ADDSUB_DSZ16_CONDD(tmp10, 0x00018000) 
U6875: SYNCWAIT-> tmp15:= SUB_DSZN(0x00008001, rcx) !m1 
U6876: tmp10:= SELECTCC_DSZ32_CONDNB(tmp15, tmp10) 

U6878: tmp10:= ZEROEXT_DSZ16(tmp10, 0x00018000) 
U6879: tmp4:= UFLOWCTRL( , tmp10, MSLOOPCTR) 
U687a: tmp11:= MOVEMERGEFLGS_DSZ32(0x00002551, tmp15) 

U687c: tmp11:= CMOVCC_DSZ32_CONDNB(tmp11, 0x00002560) 
U687d: SYNCMARK-> tmp4:= UFLOWCTRL( , tmp11, URET0) 
U687e: tmp2:= CONCAT_DSZ32(tmp10, tmp2) 

U6880: tmp1:= unk_0aa(tmp10) 
U6881: tmp1:= SUB_DSZN(tmp1) !m1 
U6882: tmp1:= SHL_DSZN(tmp1, tmp2) !m1 

U6884: SYNCWAIT-> tmp14:= SAVEUIP(0x01, U0466) !m0 SEQW URET0
U6885: TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW GOTO U688a
U6886: tmp2:= MOVEFROMCREG_DSZ64( , 0x7e1) 

U6888: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U2711) !m1 
U6889: LFNCEMARK-> TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW URET0
U688a: tmp13:= READUIP_REGOVR(0x00) 

U688c: tmp0:= MOVEMERGEFLGS_DSZ32(0x0000001f, tmp8) 
U688d: tmp0:= CMOVCC_DSZ32_CONDB(tmp0, 0x00000020) 
U688e: tmp7:= SELECTCC_DSZ32_CONDB(tmp8, 0x00000800) 

U6890: tmp3:= SELECTCC_DSZ32_CONDB(tmp8, 0x00010000) 
U6891: MOVETOCREG_DSZ64(tmp3, 0x000) !m2 
U6892: tmp3:= CONCAT_DSZ16(tmp0, 0x00004f5d) 

U6894: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U6899
U6895: tmp2:= READURAM( , 0x0043, 64) 
U6896: tmp12:= READURAM( , 0x004d, 64) 

U6898: SAVEUIP_REGOVR(0x01, U6899, 0x0000) !m0 SEQW GOTO U3b01
U6899: tmp12:= READURAM( , 0x0011, 64) 
U689a: tmp3:= ZEROEXT_DSZ16(0x000073ac, tmp3) 

U689c: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW URET0
U689d: tmp2:= READURAM( , 0x004c, 64) 
U689e: tmp12:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002c0, mode=0x01, tmp12) 

U68a0: SAVEUIP_REGOVR(0x01, U68a1, 0x0001) !m0 SEQW GOTO U3b01
U68a1: NOP SEQW URET0
U68a2: tmp11:= unk_6a0() 

U68a4: tmp12:= unk_6a0() 
U68a5: tmm5:= unk_6e1(tmm2, tmm3) 
U68a6: tmp11:= unk_6a0() 

U68a8: tmm6:= unk_6e1(tmm2, tmm4) 
U68a9: tmm5:= unk_649(tmm3, tmm5) 
U68aa: tmp12:= unk_6a0() 

U68ac: tmm5:= unk_6e1(tmm2, tmm5) 
U68ad: tmm6:= unk_649(tmm4, tmm6) 
U68ae: tmp11:= unk_6a0() 

U68b0: tmm6:= unk_6e1(tmm2, tmm6) 
U68b1: tmp12:= unk_6a0() 
U68b2: tmm5:= unk_649(tmm3, tmm5) 

U68b4: tmm6:= unk_649(tmm4, tmm6) 
U68b5: tmm5:= unk_6e1(tmm1, tmm5) 
U68b6: tmm6:= unk_6e1(tmm2, tmm6) 

U68b8: tmp12:= unk_6a0() 
U68b9: tmm5:= unk_6c9(tmm5, tmm6) 
U68ba: tmm7:= unk_702(mm2) 

U68bc: tmm4:= unk_496(tmm4, tmm7) 
U68bd: tmm5:= unk_496(tmm5, tmm7) 
U68be: mm0:= unk_689(tmm4, tmm5) !m2 SEQW GOTO U1bd0

U68c0: tmp14:= READUIP_REGOVR(0x01) !m0 
U68c1: tmp15:= BT_DSZ16(tmp1, 0x0000000f) 
U68c2: tmp8:= MOVEMERGEFLGS_DSZ64(tmp8, tmp15) 

U68c4: tmp8:= CMOVCC_DSZ64_CONDNB(tmp8, tmp9) 
U68c5: tmp12:= ADD_DSZ16(0x00000008, tmp1) 
U68c6: tmp10:= SHR_DSZ32(tmp12, 0x00000003) 

U68c8: tmp10:= BTR_DSZ32(tmp10, 0x0000000c) 
U68c9: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp10) 
U68ca: tmp9:= CMOVCC_DSZ64_CONDB(tmp9, tmp8) 

U68cc: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp12) 
U68cd: tmp12:= SHR_DSZ32(tmp1, 0x00000003) 
U68ce: tmp12:= BTR_DSZ32(tmp12, 0x0000000c) 

U68d0: tmp10:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp9, mode=0x1c, tmp10) 
U68d1: tmp15:= SELECTCC_DSZ32_CONDNB(tmp9, 0xffffffffffffffff) 
U68d2: tmp10:= OR_DSZ8(tmp15, tmp10) 

U68d4: tmp12:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp8, mode=0x1c, tmp12) 
U68d5: tmp12:= CONCAT_DSZ8(tmp10, tmp12) 
U68d6: tmp15:= AND_DSZ32(0x00000007, tmp1) 

U68d8: tmp12:= SHR_DSZ32(tmp12, tmp15) 
U68d9: tmp15:= SHR_DSZ32(0x0000000f, tmp2) 
U68da: tmp12:= AND_DSZ32(tmp15, tmp12) 

U68dc: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp12, U31ac) SEQW URET1
U68dd: tmp2:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U68de: STAD_DSZN_ASZ32_SC1(tmp2, SS,  , mode=0x1a, rbp) !m1 

U68e0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U68e1) SEQW GOTO U68f5
U68e1: tmp7:= MOVEFROMCREG_DSZ64( , 0x01b) 
U68e2: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x752) 

U68e4: tmp0:= SUB_DSZ32(0x00000001, tmp0) 
U68e5: tmp5:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U68e6: tmp2:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, tmp2) !m0,m1 

U68e8: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U68f2) 
U68e9: tmp3:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rbp) !m0,m1 
U68ea: tmp4:= LDZX_DSZN_ASZ32_SC1(tmp3, SS, mode=0x1a) !m1 

U68ec: tmp3:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, tmp3) !m0,m1 
FUN_ucode_00068ed:
U68ed: STAD_DSZN_ASZ32_SC1(tmp2, SS,  , mode=0x1a, tmp4) !m1 
U68ee: tmp2:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, tmp2) !m0,m1 

U68f0: tmp0:= SUB_DSZ32(0x00000001, tmp0) 
U68f1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U68f2) SEQW GOTO U68ea
U68f2: STAD_DSZN_ASZ32_SC1(tmp2, SS,  , mode=0x1a, tmp5) !m1 

U68f4: unk_256() !m1 
U68f5: unk_c32(tmp2, tmp1) !m1 
U68f6: tmp3:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 

U68f8: tmp2:= ADD_DSZN(tmp1, tmp2) !m1 
U68f9: rbp:= ZEROEXT_DSZ32N(tmp3, rbp) !m1 
U68fa: rsp:= ZEROEXT_DSZ8N(tmp2, rsp) !m1 SEQW UEND0

U68fc: unk_13f(tmp5) !m2 
U68fd: MOVETOCREG_DSZ64(tmp5, 0x7fe) 
U68fe: tmp9:= AND_DSZ32(tmp5, tmp9) 

U6900: tmp7:= BT_DSZ32(tmp5, 0x00000011) 
U6901: tmp7:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00000003) 
U6902: tmp4:= SELECTCC_DSZ32_CONDNZ(tmp13, 0x00000003) 

U6904: tmp7:= OR_DSZ32(tmp7, tmp4) 
U6905: tmp4:= RDSEGFLD(UNK_SEG_09, SEL) 
U6906: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp4, 0x79e, tmp7) !m2 

U6908: tmp4:= SELECTCC_DSZ32_CONDNZ(tmp13, 0x00000060) 
U6909: tmp4:= SHL_DSZ32(tmp4, 0x00000010) 
U690a: LFNCEWAIT-> tmp7:= RDSEGFLD(SS, SEL+FLGS+LIM) 

U690c: tmp7:= OR_DSZ64(tmp7, tmp4) 
U690d: WRSEGFLD(tmp7, SS, SEL+FLGS+LIM) 
U690e: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x072) !m2 

U6910: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp13, U0414) 
U6911: tmp3:= ZEROEXT_DSZ32(0x00000028) 
U6912: tmp1:= AND_DSZ32(0x000000fc, tmp6) 

U6914: tmp15:= SUB_DSZ32(0x00000034, tmp1) 
U6915: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U657a) 
FUN_ucode_0006916:
U6916: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp13, U0414) 

U6918: tmp15:= SUB_DSZ32(0x0000002c, tmp1) 
U6919: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U0414) SEQW GOTO U657a
U691a: tmp12:= OR_DSZ16(0x00000008, tmp12) 

U691c: tmp3:= MOVEFROMCREG_DSZ64( , 0x486) 
U691d: tmp2:= AND_DSZ16(0x00000008, tmp3) 
U691e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U2081) 

U6920: tmp4:= SHR_DSZ16(tmp3, 0x0000000a) 
U6921: tmp4:= AND_DSZ8(0x00000003, tmp4) 
U6922: mm5:= unk_72a(tmm0) 

U6924: tmp2:= AND_DSZ8(0x00000001, tmp5) 
U6925: tmp3:= MOVEMERGEFLGS_DSZ32(0x0000000c, tmp2) 
U6926: tmp2:= CMOVCC_DSZ32_CONDNZ(tmp3, 0x0000000a) 

U6928: tmp3:= SHR_DSZ8(tmp2, tmp4) 
U6929: tmp3:= AND_DSZ8(0x00000001, tmp3) 
U692a: tmp12:= unk_6a0() 

U692c: tmp10:= unk_6a0() 
U692d: tmm4:= unk_743(mm3, tmm4) 
U692e: tmm0:= unk_483(tmm4, tmm2) 

U6930: tmm0:= unk_702(mm5, tmm0) 
U6931: tmp4:= MOVEMERGEFLGS_DSZ32(0x00000012, tmp3) 
U6932: tmp5:= CMOVCC_DSZ32_CONDZ(tmp4, 0x00000010) 

U6934: LFNCEMARK-> tmm6:= unk_740(mm5) !m2 
U6935: tmp2:= SHR_DSZ16(tmp6, 0x00000009) 
U6936: tmp3:= AND_DSZ8(tmp3, tmp2) 

U6938: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U2051) SEQW GOTO U1432
U6939: tmp1:= CONCAT_DSZ32(tmp1, tmp0) 
U693a: tmp12:= CONCAT_DSZ32(tmp3, tmp2) 

U693c: tmp0:= CONCAT_DSZ32(tmp8, tmp4) 
U693d: tmp10:= CONCAT_DSZ32(tmp10, tmp9) 
U693e: tmp2:= MOVEFROMCREG_DSZ64( , 0x562) 

U6940: tmp2:= NOTAND_DSZ64(0x00000fff, tmp2) 
U6941: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000120) 
U6942: tmp6:= ADD_DSZ64(tmp14, tmp13) 

U6944: tmp6:= ADD_DSZ64(0x00000060, tmp6) 
U6945: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0xffffffffffffffde) 
U6946: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, U3a61, tmp5) !m1,m2 

U6948: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0xffffffffffffffe6) 
U6949: CMPUJNZ_DIRECT_NOTTAKEN(tmp12, U3a61, tmp5) !m1,m2 
U694a: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0xffffffffffffffee) 

U694c: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, U3a61, tmp5) !m1,m2 
U694d: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0xfffffffffffffff6) 
FUN_ucode_000694e:
U694e: CMPUJNZ_DIRECT_NOTTAKEN(tmp10, U3a61, tmp5) !m1,m2 

U6950: tmp0:= READURAM( , 0x0015, 64) 
U6951: WRITEURAM(tmp6, 0x0015, 64) !m2 
U6952: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000020, mode=0x01) 

U6954: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2dd) !m1,m2 
U6955: CMPUJNZ_DIRECT_NOTTAKEN(tmp6, 0x00000000, U1f9a) !m2 
U6956: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000020, mode=0x01,  , tmp0) SEQW GOTO U1f9a

U6958: tmp8:= MOVEFROMCREG_DSZ64( , 0x01b) SEQW SAVEUIP1 U6959SEQW GOTO U3a9e
U6959: tmp14:= AND_DSZ32(0x00007800, tmp2) 
U695a: tmp8:= XOR_DSZ64(tmp14, tmp8) 

U695c: SYNCMARK-> MOVETOCREG_DSZ64(tmp8, 0x752) !m2 
U695d: tmp5:= AETTRACE( , 0x00000000, 0x08, tmp8) 
U695e: tmp2:= OR_DSZ32(0x00008000, tmp2) 

FUN_ucode_0006960:
U6960: tmp10:= ADDSUB_DSZ16_CONDD(0x00000001) 
U6961: tmp10:= SELECTCC_DSZ32_CONDNS(tmp10, 0x00000001) 
U6962: tmp10:= SUB_DSZ16(rcx, tmp10) 

U6964: tmp10:= ADDSUB_DSZ16_CONDD(tmp10, 0x00018000) 
U6965: SYNCWAIT-> tmp15:= SUB_DSZN(0x00008001, rcx) !m1 
U6966: tmp10:= SELECTCC_DSZ32_CONDNB(tmp15, tmp10) 

U6968: tmp10:= ZEROEXT_DSZ16(tmp10, 0x00018000) 
U6969: tmp4:= UFLOWCTRL( , tmp10, MSLOOPCTR) 
U696a: tmp11:= MOVEMERGEFLGS_DSZ32(0x00001ce2, tmp15) 

U696c: tmp11:= CMOVCC_DSZ32_CONDNB(tmp11, 0x00001cf1) 
U696d: SAVEUIP( , 0x00, U0686) 
U696e: tmp4:= UFLOWCTRL(tmp4, tmp11, URET0) 

U6970: tmp2:= CONCAT_DSZ32(tmp10, tmp2) 
U6971: tmp1:= unk_0aa(tmp10) 
U6972: tmp1:= SUB_DSZN(tmp1) !m1 

U6974: tmp1:= SHL_DSZN(tmp1, tmp2) !m1 
U6975: tmp14:= SAVEUIP(0x01, U0466) !m0 SEQW URET0
U6976: tmp0:= ZEROEXT_DSZ32(0x00000037) 

U6978: SAVEUIP_REGOVR(0x01, U6979, 0x0032) !m0 SEQW GOTO U1c7a
U6979: tmp0:= OR_DSZ32(rcx) 
U697a: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U2711) !m1 

U697c: tmp4:= CONCAT_DSZ32(rdx, rax) 
U697d: BTUJNB_DIRECT_NOTTAKEN(tmp4, 0x00000000, U2711) !m1 
U697e: tmp0:= NOTAND_DSZ64(0x0000001b, tmp4) 

U6980: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 
U6981: tmp0:= AND_DSZ32(0x00000008, tmp4) 
U6982: tmp1:= AND_DSZ32(0x00000010, tmp4) 

U6984: tmp0:= SELECTCC_DSZ64_CONDZ(tmp0, 0x00000010) 
U6985: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, U2711, tmp1) !m1 
U6986: tmp0:= READURAM( , 0x0035, 64) !m2 

U6988: tmp0:= BT_DSZ64(tmp0, 0x0000003c) 
U6989: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000018) 
U698a: tmp0:= AND_DSZ32(tmp0, tmp4) 

U698c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 
U698d: LFNCEWAIT-> tmp1:= READURAM( , 0x005b, 64) 
U698e: tmp0:= SHL_DSZ64(tmp4, 0x00000038) 

U6990: WRITEURAM(tmp0, 0x005b, 64) !m2 
U6991: tmp1:= XOR_DSZ64(tmp1, tmp0) 
U6992: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000003b, U39cd) !m0,m1,m2 

U6994: NOP SEQW UEND0
U6995: tmp0:= MOVEFROMCREG_DSZ64( , 0x38c, 32) !m1 
U6996: tmp0:= NOTAND_DSZ32(tmp0, 0xa0000000) 

U6998: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000400, tmp0) 
U6999: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x000007a8) 
U699a: MOVETOCREG_DSZ64(rbx, tmp0) !m2 

U699c: tmp0:= MOVE_DSZ32(0x000069a0) 
U699d: tmp0:= CONCAT_DSZ16(0x00000088, tmp0) 
U699e: WRITEURAM(tmp0, 0x0007, 32) !m2 

U69a0: SIGEVENT( , 0x0000007f) 
U69a1: LFNCEWAIT-> tmp0:= READURAM( , 0x001f, 64) 
U69a2: tmp0:= OR_DSZ32(0x00000001, tmp0) 

U69a4: WRITEURAM(tmp0, 0x001f, 32) !m2 SEQW SAVEUIP0 U69a5SEQW GOTO U0504
U69a5: tmp9:= MOVE_DSZ32(0x00700084) 
U69a6: tmp9:= CONCAT_DSZ32(tmp9, 0x00000000) 

U69a8: tmp7:= ZEROEXT_DSZ32(0x00000000) 
U69a9: TESTUSTATE( , VMX, !0x0001) !m0,m2 ? SEQW GOTO U69b0
U69aa: tmp8:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U69ac: tmp8:= NOTAND_DSZ32(tmp8, 0x00000200) 
U69ad: tmp8:= SHR_DSZ32(tmp8, 0x00000009) 
U69ae: tmp9:= OR_DSZ64(tmp8, tmp9) 

compute_ucode_sha_end:
U69b0: tmp2:= ZEROEXT_DSZ32(0x00000200) 
U69b1: MOVETOCREG_DSZ64(tmp2, 0x2f1, 32) !m1,m2 
U69b2: tmp8:= ZEROEXT_DSZ32(0x00000008) 

U69b4: tmp11:= ZEROEXT_DSZ32(0x00020101) SEQW GOTO U67be
U69b5: WRITEURAM(tmp14, 0x008d, 64) !m2 
U69b6: tmp7:= READURAM( , 0x005c, 64) 

U69b8: tmp7:= BT_DSZ32(tmp7, 0x00000010) 
U69b9: tmp9:= SUB_DSZ64(0x00001000, tmp14) 
U69ba: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp7) 

U69bc: tmp7:= MOVEFROMCREG_DSZ64( , 0x51b) 
U69bd: tmp7:= ZEROEXT_DSZ8( , tmp7) 
U69be: tmp7:= CMOVCC_DSZ64_CONDB(tmp9, tmp7) 

U69c0: tmp8:= ADD_DSZ64(0x00000320, tmp7) 
U69c1: LFNCEMARK-> WRITEURAM(tmp8, 0x004e, 64) !m2 
U69c2: WRMSLOOPCTRFBR( , 0x0000001f) 

U69c4: tmp9:= ZEROEXT_DSZ32(0x00000124) 
U69c5: tmm5:= FPREADROM_DTYPENOP(tmp9) 
U69c6: tmp10:= PINTMOVDTMM2I_DSZ64(tmm5) 

U69c8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8,  , tmp10) 
U69c9: tmp9:= ADD_DSZ32(0x00000001, tmp9) 
U69ca: tmp8:= ADD_DSZ64(0x00000008, tmp8) 

U69cc: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U69c5
U69cd: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp13, U2382) 
U69ce: tmp5:= ADD_DSZ64(0x00000080, tmp14) 

U69d0: tmp6:= ZEROEXT_DSZ32(0x00000004) 
U69d1: tmp11:= ZEROEXT_DSZ16(0x000046c4) 
U69d2: tmp11:= CONCAT_DSZ16(0x00000001, tmp11) 

U69d4: WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U519c
U69d5: tmp15:= unk_203( , 0x00000001) 
U69d6: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U2ce5) 

U69d8: BTUJB_DIRECT_NOTTAKEN(tmp13, 0x00000015, U2ce5) !m1 
U69d9: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000000b, U2ce5) !m0,m1 
U69da: tmp5:= READURAM( , 0x0025, 64) 

U69dc: tmp6:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000004, tmp5) 
U69dd: CMPUJNZ_DIRECT_NOTTAKEN(tmp6, 0x00000000, U2ce5) !m1 
U69de: tmp3:= MOVEFROMCREG_DSZ64( , 0x004) 

U69e0: tmp15:= READURAM( , 0x001f, 64) 
U69e1: tmp15:= OR_DSZ32(tmp15, tmp3) 
U69e2: tmp15:= AND_DSZ32(0x00000200, tmp15) 

U69e4: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x08000000) 
U69e5: tmp0:= OR_DSZ32(tmp15, tmp0) 
U69e6: tmp3:= NOTAND_DSZ32(0x00000003, tmp3) 

U69e8: MOVETOCREG_OR_DSZ64(tmp3, 0x00000002, 0x004) !m0,m2 
U69e9: tmp6:= SUB_DSZ32(0x00000001) 
U69ea: tmp3:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x0000039e, mode=0x01, tmp12) 

U69ec: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, tmp0) 
U69ed: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000004, tmp5, tmp6) 
U69ee: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(0x00000020, tmp5, tmp3) 

U69f0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000008, tmp5, tmp1) 
U69f1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000018, tmp5, tmp2) 
U69f2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000010, tmp5, tmp9) 

U69f4: SIGEVENT( , 0x00000051) SEQW GOTO U079d
U69f5: tmp3:= MOVEFROMCREG_DSZ64( , 0x575) 
U69f6: tmp4:= NOTAND_DSZ32(tmp3, 0x00000800) 

U69f8: tmp3:= NOTAND_DSZ64(0x00000fff, tmp3) 
U69f9: tmp13:= MOVEFROMCREG_DSZ64( , 0x574) 
U69fa: tmp4:= OR_DSZ32(tmp11, tmp4) 

U69fc: tmp13:= AND_DSZ64(tmp3, tmp13) 
U69fd: tmp3:= AND_DSZ64(tmp3, tmp15) 
U69fe: tmp3:= SUB_DSZ64(tmp13, tmp3) 

U6a00: tmp4:= OR_DSZ64(tmp4, tmp3) 
U6a01: tmp4:= SELECTCC_DSZ32_CONDNZ(tmp4, 0x00000003) 
U6a02: tmp3:= MOVEFROMCREG_DSZ64( , 0x573) 

U6a04: tmp13:= NOTAND_DSZ32(tmp3, 0x00000800) 
U6a05: tmp13:= OR_DSZ32(tmp11, tmp13) 
U6a06: tmp3:= NOTAND_DSZ64(0x00000fff, tmp3) 

U6a08: tmp11:= MOVEFROMCREG_DSZ64( , 0x572) 
U6a09: tmp11:= AND_DSZ32(tmp3, tmp11) 
U6a0a: tmp3:= AND_DSZ64(tmp3, tmp15) 

U6a0c: tmp3:= SUB_DSZ64(tmp11, tmp3) 
U6a0d: tmp13:= OR_DSZ64(tmp13, tmp3) 
U6a0e: tmp13:= SELECTCC_DSZ32_CONDNZ(tmp13, 0x00000003) 

U6a10: tmp13:= SELECTCC_DSZ32_CONDB(tmp12, tmp13) 
U6a11: tmp4:= OR_DSZ32(tmp4, tmp13) 
U6a12: tmp3:= MOVEFROMCREG_DSZ64( , 0x51b) 

U6a14: tmp3:= ZEROEXT_DSZ16(tmp4, tmp3) SEQW URET1
U6a15: tmp11:= ZEROEXT_DSZ32(0x00000004) 
U6a16: tmp3:= ADD_DSZN(tmp13, tmp4) !m1 

U6a18: tmp3:= SUB_DSZN(0x00000001, tmp3) !m1 
U6a19: tmp2:= TEST_DSZ64(tmp3, tmp3) 
U6a1a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U28c5) 

U6a1c: WRITEURAM(tmp4, 0x008d, 64) !m2 
U6a1d: SAVEUIP( , 0x01, U6021) !m0 
U6a1e: tmp1:= READURAM( , 0x0020, 64) 

U6a20: tmp0:= SHR_DSZ64(tmp1, 0x00000030) 
U6a21: tmp1:= AND_DSZ32(0x00007ffe, tmp1) 
U6a22: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 

U6a24: tmp0:= BTR_DSZ32(tmp0, tmp1) 
U6a25: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x0004) !m2 
U6a26: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U6a32) !m1 

U6a28: tmp3:= WRMSLOOPCTRFBR( , 0x0000000f) 
U6a29: tmp3:= SHL_DSZ32(tmp3, 0x00000001) 
U6a2a: tmp2:= SHR_DSZ32(tmp1, 0x0000001e) 

U6a2c: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U6a2d: tmp3:= OR_DSZ32(tmp2, tmp3) 
U6a2e: tmp1:= SHL_DSZ32(tmp1, 0x00000002) 

U6a30: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U6a29
U6a31: tmp0:= NOTAND_DSZ32(tmp3, tmp0) 
U6a32: tmp0:= CONCAT_DSZ32(tmp0) 

U6a34: SYNCMARK-> WRITEURAM(tmp0, 0x0153, 64) !m2 SEQW URET1
U6a35: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) !m2 
U6a36: tmp10:= READAFLAGS( , tmp10) !m2 

U6a38: tmp9:= ZEROEXT_DSZ32() 
U6a39: tmp4:= ZEROEXT_DSZ32(tmp13) 
FUN_ucode_0006a3a:
U6a3a: tmp13:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U6a41

U6a3c: tmp15:= READURAM( , 0x0014, 64) 
U6a3d: tmp15:= SHR_DSZ64(tmp15, 0x00000015) 
U6a3e: tmp15:= BT_DSZ32(tmp15, tmp2) 

U6a40: tmp13:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00020000) 
U6a41: ROVR<- tmp2:= ZEROEXT_DSZ32(tmp1) SEQW SAVEUIP1 U6a42SEQW GOTO U0514
U6a42: tmp1:= ZEROEXT_DSZ32() 

U6a44: tmp10:= MOVETOCREG_OR_DSZ64(tmp10, 0x7fe, tmp9) 
U6a45: LFNCEMARK-> tmp10:= SUB_DSZ8(0x00000012, tmp2) 
U6a46: tmp10:= SELECTCC_DSZ32_CONDNZ(tmp10, 0x00000800) 

U6a48: tmp15:= SUB_DSZ8(0x00000001, tmp2) 
U6a49: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U6a4a) SEQW GOTO U6a50
U6a4a: tmp15:= ZEROEXT_DSZ32(0x000000f5) 

FUN_ucode_0006a4c:
U6a4c: MOVETOCREG_DSZ64(tmp15, 0x00b) 
U6a4d: tmp1:= MOVEFROMCREG_DSZ64( , 0x01c) 
U6a4e: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 

U6a50: tmp0:= OR_DSZ32(0x00001000, tmp10) SEQW SAVEUIP0 U6a51SEQW GOTO U2971
U6a51: tmp2:= BTS_DSZ32(tmp2, 0x0000001f) 
U6a52: tmp2:= OR_DSZ32(tmp5, tmp2) 

U6a54: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x000) 
U6a55: BTUJB_DIRECT_NOTTAKEN(tmp13, 0x00000011, U73ae) !m1,m2 SEQW GOTO U4f60
U6a56: tmp4:= SHR_DSZ32(tmp14, 0x0000000d) 

U6a58: tmp2:= AND_DSZ16(0xfffffffffffffffc, tmp2) 
U6a59: tmp4:= AND_DSZ32(0x00000003, tmp4) 
U6a5a: tmp2:= OR_DSZ16(tmp4, tmp2) 

U6a5c: tmp4:= AND_DSZ32(0x00000001, tmp4) 
U6a5d: tmp1:= AND_DSZ32(0x00000003, tmp6) 
U6a5e: tmp1:= SHL_DSZ32(tmp1, 0x00000004) 

U6a60: tmp4:= MOVEINSERTFLGS_DSZ64(tmp1, tmp4) 
U6a61: tmp2:= MOVEINSERTFLGS_DSZ64(tmp1, tmp2) 
U6a62: tmp3:= CMOVCC_DSZ32_CONDS(tmp4, tmp0) 

U6a64: tmp3:= CMOVCC_DSZ32_CONDNO(tmp2, tmp3) 
U6a65: tmp1:= MOVEMERGEFLGS_DSZ32(0x00000003, tmp1) 
U6a66: tmp1:= CMOVCC_DSZ32_CONDZ(tmp1, 0x0000000b) 

U6a68: tmp2:= AND_DSZ32(0x000000fc, tmp6) 
U6a69: tmp2:= SHR_DSZ32(tmp2, 0x00000002) 
U6a6a: tmp1:= CONCAT_DSZ8(tmp1, tmp2) 

U6a6c: TESTUSTATE( , SYS, UST_SMM | 0x2000) !m1 ? SEQW GOTO U1894
U6a6d: tmp13:= READUIP_REGOVR(0x00) 
U6a6e: tmp5:= ZEROEXT_DSZ32(0x00001891) 

U6a70: tmp8:= AND_DSZ32(0x000007ff, tmp1) 
U6a71: tmp8:= CONCAT_DSZ16(0x00008000, tmp8) 
U6a72: tmp15:= AND_DSZ32(0x000000e0, tmp1) 

U6a74: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, 0xd600d000) 
U6a75: tmp15:= SHL_DSZ32(tmp15, tmp1) 
U6a76: tmp8:= SELECTCC_DSZ32_CONDNS(tmp15, tmp8) SEQW GOTO U4842

U6a78: LFNCEMARK-> NOP SEQW SAVEUIP1 U6a79SEQW GOTO U2ea9
U6a79: tmp12:= MOVEFROMCREG_DSZ64( , 0x511) 
U6a7a: tmp12:= SHL_DSZ64(tmp12, 0x00000010) 

U6a7c: tmp12:= SAR_DSZ64(tmp12, 0x00000010) 
U6a7d: tmp5:= AND_DSZ16(0xfffffffffffff000, tmp12) 
U6a7e: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000006, U3c6d) !m0,m1,m2 

U6a80: SAVEUIP( , 0x00, U2904) SEQW SAVEUIP1 U6a81SEQW GOTO U0bbc
U6a81: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U6a82: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000016, U6a8c) !m0,m1 

U6a84: TESTUSTATE( , SYS, 0x2000) !m1 ? SEQW GOTO U1afc
U6a85: tmp3:= MOVEFROMCREG_DSZ64( , 0x555) 
U6a86: tmp15:= MOVEFROMCREG_DSZ64( , 0x556) 

U6a88: tmp3:= AND_DSZ64(tmp15, tmp3) 
U6a89: tmp15:= AND_DSZ64(tmp15, tmp12) 
U6a8a: CMPUJNZ_DIRECT_NOTTAKEN(tmp3, U1afc, tmp15) !m2 

U6a8c: tmp15:= AND_DSZ32(0x00140000, tmp11) 
U6a8d: tmp15:= SUB_DSZ32(0x00040000, tmp15) 
U6a8e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U3385) 

U6a90: tmp11:= AND_DSZ32(0x0000001f, tmp11) 
U6a91: LFNCEWTMRK-> tmp15:= READURAM( , 0x005c, 64) 
U6a92: tmp15:= BT_DSZ64(tmp15, 0x00000029) 

U6a94: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00000020) 
U6a95: tmp11:= OR_DSZ32(tmp15, tmp11) SEQW GOTO U1b00
U6a96: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U6a98: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000012, U2769) !m0,m1 
U6a99: tmp11:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U6a9a: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000003, U2771) !m0,m1 

U6a9c: tmp6:= READURAM( , 0x005b, 64) !m2 
U6a9d: tmp6:= SHR_DSZ64(tmp6, 0x00000038) 
U6a9e: tmp11:= ZEROEXT_DSZ64() 

U6aa0: tmp13:= SAVEUIP(0x00, U4d59) 
U6aa1: tmp4:= AND_DSZ32(rax, tmp6) 
U6aa2: tmp4:= BTS_DSZ64(tmp4, 0x0000003f) 

U6aa4: tmp5:= OR_DSZ64(0x00000004, tmp4) 
U6aa5: tmp5:= OR_DSZ64(tmp11, tmp5) 
U6aa6: SYNCMARK-> UFLOWCTRL( , tmp5, USTATE) 

U6aa8: WRITEURAM(tmp5, 0x003f, 64) !m2 
U6aa9: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U6aaa: tmp11:= ZEROEXT_DSZ16N(tmp11) !m1 

U6aac: tmp4:= BT_DSZ64(tmp4, 0x00000003) 
U6aad: tmp7:= MOVEMERGEFLGS_DSZ64(0x0000027f, tmp4) 
U6aae: tmp8:= CMOVCC_DSZ64_CONDB(tmp7, 0x0000023f) 

U6ab0: tmp4:= BT_DSZ64(tmp4, 0x00000004) 
U6ab1: tmp7:= SELECTCC_DSZ64_CONDNB(tmp4, 0x00000040) 
U6ab2: tmp8:= ADD_DSZ64(tmp8, tmp7) 

U6ab4: tmp4:= BT_DSZ64(tmp4, 0x00000008) 
U6ab5: tmp7:= SELECTCC_DSZ64_CONDNB(tmp4, 0x00000080) 
U6ab6: tmp8:= ADD_DSZ64(tmp8, tmp7) SEQW URET0

U6ab8: tmp7:= ADD_DSZ64(0x00000020, tmp7) 
U6ab9: tmp5:= ADD_DSZ64(0x00000184, tmp14) 
U6aba: tmp6:= ADD_DSZ64(0x00000080, tmp14) 

U6abc: unk_13f() !m2 
U6abd: tmp0:= BTS_DSZ64(0x00000000, 0x00000020) 
U6abe: tmm1:= unk_744(mm0) 

U6ac0: tmm1:= unk_645(tmm1) 
U6ac1: tmp11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, 0x000000f8) 
U6ac2: tmp11:= SHR_DSZ64(tmp11, 0x00000010) 

U6ac4: tmp11:= ADD_DSZ64(0x00000002, tmp11) 
U6ac5: tmm5:= unk_744(tmm3) 
U6ac6: tmm5:= unk_645(tmm5) 

U6ac8: tmp12:= WRMSLOOPCTRFBR(0x0000001f) 
U6ac9: tmp0:= ZEROEXT_DSZ32() 
U6aca: tmm5:= unk_6e6(tmm5, tmm1) 

U6acc: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp0) 
U6acd: tmp1:= unk_37f(tmp1) !m2 
U6ace: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp0, tmp1) 

U6ad0: tmp0:= ADD_DSZ64(0x00000008, tmp0) 
U6ad1: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U6acc
U6ad2: tmp10:= ZEROEXT_DSZ64(tmp5) 

U6ad4: tmp9:= ZEROEXT_DSZ32(0x00000004) 
U6ad5: tmp8:= ZEROEXT_DSZ32(0x00000100) 
U6ad6: tmp8:= ADD_DSZ32(0x00000008, tmp8) 

U6ad8: SAVEUIP( , 0x00, U19aa) SEQW GOTO U0f41
U6ad9: tmp0:= BT_DSZ64(tmp6, 0x0000003c) 
U6ada: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x00004000) 

U6adc: tmp1:= OR_DSZ32(tmp0, tmp1) 
U6add: tmp0:= BT_DSZ64(tmp7, 0x0000002b) 
U6ade: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000004) 

U6ae0: tmp1:= OR_DSZ32(tmp0, tmp1) 
U6ae1: tmp0:= AND_DSZ64(0x00020000, tmp7) 
U6ae2: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00008000) 

U6ae4: tmp1:= OR_DSZ32(tmp0, tmp1) 
U6ae5: tmp3:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U6ae6: tmp0:= SHR_DSZ64(tmp7, 0x00000021) 

U6ae8: tmp0:= OR_DSZ32(tmp3, tmp0) 
U6ae9: tmp0:= BT_DSZ32(tmp0, 0x0000000d) 
U6aea: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x02000000) 

U6aec: tmp1:= OR_DSZ32(tmp0, tmp1) 
U6aed: tmp0:= AND_DSZ32(0x00040000, tmp7) 
U6aee: tmp0:= SELECTCC_DSZ32_CONDNZ(tmp0, 0x20000000) 

U6af0: tmp1:= OR_DSZ32(tmp0, tmp1) 
U6af1: tmp0:= SHR_DSZ64(tmp7, 0x0000001f) 
U6af2: tmp0:= NOTAND_DSZ32(tmp0, 0x00800000) 

U6af4: tmp1:= OR_DSZ32(tmp0, tmp1) 
U6af5: tmp0:= READURAM( , 0x003a, 64) 
U6af6: tmp0:= NOTAND_DSZ32(tmp0, 0x00080001) 

U6af8: tmp0:= SELECTCC_DSZ32_CONDNZ(tmp0, 0x00400000) 
U6af9: tmp1:= OR_DSZ32(tmp0, tmp1) 
U6afa: rbx:= SELECTCC_DSZ32_CONDNZ(tmp8, tmp1) SEQW GOTO U1bd0

U6afc: unk_cc1(tmp2, tmp1) 
U6afd: mm4:= unk_73a() 
U6afe: tmp9:= LDZX_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_ALIAS_DATASIZE, mode=0x18) !m0,m1 

U6b00: tmp1:= LDZX_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_13, mode=0x18) !m0,m1 
U6b01: tmp8:= LDZX_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_1b, mode=0x18) !m0,m1 
U6b02: tmp7:= LDZX_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_23, mode=0x18) !m0,m1 

U6b04: tmp6:= LDZX_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_2b, mode=0x18) !m0,m1 
U6b05: tmp5:= LDZX_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_33, mode=0x18) !m0,m1 
U6b06: tmp4:= NOTAND_DSZ16(0x00007f00, tmp4) 

U6b08: tmp3:= AND_DSZ16(0x00007f00, tmp9) 
U6b09: tmp3:= OR_DSZ16(tmp3, tmp4) 
U6b0a: MOVETOCREG_DSZ64(tmp3, 0x48c) !m2 

U6b0c: tmp2:= SHR_DSZ16(tmp9, 0x0000000b) 
U6b0d: tmp2:= AND_DSZ8(0x00000007, tmp2) 
U6b0e: MOVETOCREG_DSZ64(tmp1, 0x06a) !m2 

U6b10: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, 0x073) !m2 
U6b11: tmp3:= MOVEFROMCREG_DSZ64( , 0x069) 
U6b12: MOVETOCREG_BTS_DSZ64(tmp3, 0x069) 

U6b14: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U49d9
U6b15: tmp1:= SHR_DSZ32(tmp7, 0x0000000c) 
U6b16: tmp2:= CONCAT_DSZ16(tmp1, tmp8) 

U6b18: tmp5:= SHR_DSZ32(tmp5, 0x0000000c) 
U6b19: tmp3:= CONCAT_DSZ16(tmp5, tmp6) 
U6b1a: MOVETOCREG_DSZ64(tmp2, 0x00a) 

U6b1c: MOVETOCREG_DSZ64( , 0x00000000, 0x00d) 
U6b1d: MOVETOCREG_DSZ64(tmp3, 0x00e) 
U6b1e: MOVETOCREG_DSZ64(tmp7, 0x00f) SEQW URET0

U6b20: tmp1:= TESTUSTATE( , UCODE, !0x0800) !m0 ? SEQW GOTO U6b22
U6b21: tmp1:= ZEROEXT_DSZ32(0x00000200) 
U6b22: tmp1:= OR_DSZ32(0x00000400, tmp1) 

U6b24: tmp15:= READURAM( , 0x0070, 64) 
U6b25: tmp1:= AND_DSZ32(tmp1, tmp15) 
U6b26: tmp1:= SHR_DSZ32(tmp1, 0x00000007) 

U6b28: tmp2:= BT_DSZ64(tmp2, 0x0000003c) 
U6b29: tmp15:= SELECTCC_DSZ64_CONDNB(tmp2, tmp15) 
U6b2a: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000008) 

U6b2c: tmp15:= BT_DSZ64(tmp15, 0x00000032) 
U6b2d: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00000008) 
U6b2e: tmp1:= NOTAND_DSZ32(tmp2, tmp1) 

U6b30: tmp1:= OR_DSZ32(tmp15, tmp1) 
U6b31: tmp15:= AND_DSZ32(0x0000000c, tmp11) 
U6b32: tmp15:= ROR_DSZ64(tmp15, 0x00000003) 

U6b34: tmp1:= OR_DSZ32(tmp15, tmp1) 
U6b35: tmp15:= SELECTCC_DSZ32_CONDNS(tmp15, 0x00000002) 
U6b36: tmp1:= OR_DSZ32(tmp15, tmp1) 

U6b38: tmp15:= AND_DSZ32(0x00000200, tmp11) 
U6b39: tmp15:= SHR_DSZ32(tmp15, 0x00000005) 
U6b3a: tmp1:= OR_DSZ32(tmp15, tmp1) 

U6b3c: tmp15:= AND_DSZ32(0x00000200, tmp6) 
U6b3d: tmp15:= SHR_DSZ32(tmp15, 0x00000005) 
U6b3e: tmp1:= OR_DSZ32(tmp15, tmp1) 

U6b40: tmp15:= AND_DSZ32(0x00000010, tmp1) 
U6b41: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x08000000) 
U6b42: tmp0:= OR_DSZ32(tmp15, tmp0) SEQW URET1

U6b44: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U6b45: MOVETOCREG_BTS_DSZ64(tmp0, 0x0000000b, 0x285) !m0,m1,m2 
U6b46: tmp1:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00040000) 

U6b48: tmp2:= ZEROEXT_DSZ8(tmp3, tmp1) 
U6b49: tmp0:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U6b4a: tmp0:= AND_DSZ32(0x00000001, tmp0) 

U6b4c: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00040000) 
U6b4d: tmp2:= OR_DSZ32(tmp0, tmp2) 
U6b4e: tmp2:= OR_DSZ32(tmp2, tmp4) 

U6b50: tmp2:= BTS_DSZ32(tmp2, 0x00000011) 
U6b51: PORTOUT_DSZ32_ASZ16_SC1(0x50d8,  , tmp2) !m2 
U6b52: PORTOUT_DSZ64_ASZ16_SC1(0x50b0,  , 0x00000000) !m2 

U6b54: PORTOUT_DSZ64_ASZ16_SC1(0x50b8,  , 0x00000000) !m2 
U6b55: PORTOUT_DSZ64_ASZ16_SC1(0x50a0,  , 0x00000000) !m2 
U6b56: PORTOUT_DSZ64_ASZ16_SC1(0x50a8,  , 0x00000000) !m2 

U6b58: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
U6b59: tmp0:= ZEROEXT_DSZ32(0x0000000f) SEQW SAVEUIP0 U6b5aSEQW GOTO U60e5
U6b5a: tmp11:= ZEROEXT_DSZ32(0x0000000d) 

U6b5c: WRITEURAM(tmp11, 0x0073, 32) 
U6b5d: tmp0:= AND_DSZ32(0x00040000, tmp2) 
U6b5e: tmp7:= OR_DSZ32(tmp0, tmp7) 

U6b60: tmp7:= AND_DSZ32(0x00ff0000, tmp7) 
U6b61: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000010, tmp7) 
U6b62: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x00000011) 

U6b64: tmp14:= MOVEMERGEFLGS_DSZ32(0x00003c8c, tmp7) 
U6b65: tmp14:= CMOVCC_DSZ32_CONDNZ(tmp14, 0x00003c90) 
U6b66: UFLOWCTRL( , tmp14, URET0) SEQW GOTO U5971

U6b68: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U6b6e
U6b69: tmpv0:= READURAM( , 0x0043, 64) 
U6b6a: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000003, U6b6e) !m0,m1 

U6b6c: tmpv1:= READURAM( , 0x0057, 64) 
U6b6d: LFNCEWAIT-> tmpv1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000060, tmpv1) 
U6b6e: tmpv0:= READURAM( , 0x003b, 64) 

U6b70: tmpv1:= ADD_DSZ64(tmpv0, tmpv1) 
U6b71: LFNCEWTMRK-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x2d7, 32) !m1 
U6b72: tmpv2:= ZEROEXT_DSZ64(tmpv0) SEQW SAVEUIP0 U6b74SEQW GOTO U3045

U6b74: tmpv0:= SHL_DSZ64(tmpv1, 0x00000008) 
U6b75: tmpv0:= OR_DSZ64(0x00000019, tmpv0) 
U6b76: tmpv1:= ZEROEXT_DSZ32(0x00000083) SEQW SAVEUIP1 U6b78SEQW GOTO U66f8

U6b78: tmpv0:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U6b79: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000009, U6b84) !m1 
U6b7a: tmpv0:= SHR_DSZ64(tmpv2, 0x00000037) 

U6b7c: tmpv0:= SHL_DSZ64(tmpv0, 0x00000018) 
U6b7d: tmpv1:= AND_DSZ32(0x0000ffff, tmpv2) 
U6b7e: tmpv0:= OR_DSZ64(tmpv1, tmpv0) 

U6b80: tmpv0:= SHL_DSZ64(tmpv0, 0x00000010) 
U6b81: tmpv0:= OR_DSZ64(0x00007302, tmpv0) 
U6b82: tmpv1:= ZEROEXT_DSZ32(0x00000071) SEQW SAVEUIP1 U6b84SEQW GOTO U66f9

U6b84: SYNCMARK-> UFLOWCTRL( , tmp14, URET1) 
U6b85: tmpv0:= MOVEFROMCREG_DSZ64( , 0x220, 32) !m1 
U6b86: tmpv0:= AND_DSZ32(0x00003f00, tmpv0) 

U6b88: tmpv0:= SHL_DSZ32(tmpv0, 0x00000008) 
U6b89: tmpv0:= OR_DSZ32(0x00000302, tmpv0) 
U6b8a: SYNCWAIT-> tmpv1:= ZEROEXT_DSZ32(0x00000041) SEQW GOTO U66f9

U6b8c: tmp8:= MOVEFROMCREG_DSZ64( , 0x562) 
U6b8d: tmp8:= NOTAND_DSZ64(0x00000fff, tmp8) 
U6b8e: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 

U6b90: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000020, mode=0x01) 
U6b91: tmp0:= READURAM( , 0x005c, 64) !m2 
U6b92: tmp15:= SHR_DSZ64(tmp0, 0x0000001d) 

U6b94: tmp15:= AND_DSZ32(0x00002000, tmp15) 
U6b95: tmp0:= NOTAND_DSZ64(0x00002000, tmp0) 
U6b96: tmp0:= OR_DSZ64(tmp15, tmp0) 

U6b98: WRITEURAM(tmp0, 0x005c, 64) !m2 
U6b99: tmp0:= SUB_DSZ64(0x00000020, tmp8) 
U6b9a: WRITEURAM(tmp0, 0x001b, 64) !m2 

U6b9c: tmp13:= READURAM( , 0x0070, 64) 
U6b9d: tmp13:= OR_DSZ64(0x000000e2, tmp13) 
U6b9e: WRITEURAM(tmp13, 0x0070, 64) !m2 

U6ba0: tmp12:= ADD_DSZ64(0x00000800, tmp8) 
FUN_ucode_0006ba1:
U6ba1: LFNCEMARK-> WRITEURAM(tmp12, 0x0011, 64) !m2 
U6ba2: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000034, mode=0x01) 

U6ba4: tmp13:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000024, mode=0x01) 
U6ba5: tmp0:= ADD_DSZ64(tmp13, tmp0) 
U6ba6: tmp0:= ADD_DSZ64(tmp0, tmp2) 

U6ba8: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000010, mode=0x01) 
U6ba9: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000000, U6baa) !m1 SEQW GOTO U6bb0
U6baa: tmp3:= ZEROEXT_DSZ64(tmp0) 

U6bac: tmp7:= ZEROEXT_DSZ32(0x00000001) 
U6bad: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, 0x0000000c, mode=0x01,  , tmp7) 
U6bae: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000020, mode=0x01,  , tmp2) 

U6bb0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000d8, mode=0x01, tmp12, tmp3) 
U6bb1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000c8, mode=0x01, tmp12, tmp12) 
U6bb2: LFNCEWAIT-> tmp0:= ZEROEXT_DSZ32(0x00002000) SEQW GOTO U73ac

U6bb4: tmp2:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U6bb5: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U6bb6: tmp2:= SHL_DSZ32(tmp2, 0x00000010) SEQW SAVEUIP0 U6bb8SEQW GOTO U60f2

U6bb8: tmp2:= OR_DSZ32(tmp2, tmp7) 
U6bb9: tmp2:= AND_DSZ32(0x00ff0000, tmp2) 
U6bba: tmp11:= ZEROEXT_DSZ32(0x0000000e) 

U6bbc: WRITEURAM(tmp11, 0x0073, 32) 
U6bbd: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x8408) !m2 
U6bbe: tmp0:= AND_DSZ32(0xffff0180, tmp0) 

U6bc0: tmp1:= SUB_DSZ32(0x00000100, tmp0) 
U6bc1: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x8404) !m2 
U6bc2: tmp0:= AND_DSZ32(0x80000000, tmp0) 

U6bc4: tmp1:= OR_DSZ32(tmp0, tmp1) 
U6bc5: tmp1:= OR_DSZ32(tmp2, tmp1) SEQW SAVEUIP1 U6bc6SEQW GOTO U287d
U6bc6: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000012, tmp1) 

U6bc8: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x00000014) 
U6bc9: SAVEUIP_REGOVR(0x00, U6bca, 0x0000) SEQW GOTO U60e5
U6bca: tmp11:= ZEROEXT_DSZ32(0x0000000f) 

U6bcc: WRITEURAM(tmp11, 0x0073, 32) 
U6bcd: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U6bd2
U6bce: MOVETOCREG_DSZ64( , 0x00000000, 0x207, 32) !m1 

U6bd0: MOVETOCREG_DSZ64( , 0x00000000, 0x209, 32) !m1 
U6bd1: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000002, 0x208) !m0,m1 
U6bd2: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 

U6bd4: MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000b, 0x285) !m0,m1,m2 
U6bd5: PORTOUT_DSZ32_ASZ16_SC1(0x0010,  , 0x00000000) !m2 
U6bd6: PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , 0x00000000) !m2 

U6bd8: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x00c0) !m2 
U6bd9: tmp1:= BTR_DSZ32(tmp1, 0x00000003) 
U6bda: LFNCEWAIT-> PORTOUT_DSZ8_ASZ16_SC1(0x00c0,  , tmp1) !m2 SEQW GOTO U4672

U6bdc: tmp1:= SHR_DSZ64(tmp5, 0x00000020) 
U6bdd: tmp3:= MOVEFROMCREG_DSZ64( , 0x573) 
U6bde: tmp2:= NOTAND_DSZ32(tmp3, 0x00000800) 

U6be0: tmp1:= OR_DSZ32(tmp2, tmp1) 
U6be1: TESTUSTATE( , UCODE, 0x0800) ? SEQW GOTO U6bec
U6be2: tmp2:= MOVEFROMCREG_DSZ64( , 0x572) 

U6be4: tmp2:= AND_DSZ32(tmp3, tmp2) 
U6be5: tmp3:= AND_DSZ32(tmp3, tmp5) 
U6be6: tmp3:= XOR_DSZ32(tmp2, tmp3) 

U6be8: tmp3:= NOTAND_DSZ32(0x00000fff, tmp3) 
U6be9: tmp1:= OR_DSZ32(tmp3, tmp1) 
U6bea: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2711) 

U6bec: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 
U6bed: tmp2:= SAVEUIP(tmp5, 0x01, U59d9) !m0 SEQW SAVEUIP0 U6beeSEQW GOTO U59d8
U6bee: tmp1:= AND_DSZ32(0x00000c00, tmp5) 

U6bf0: tmp1:= SHR_DSZ32(tmp1, 0x0000000a) 
U6bf1: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U2711) !m1 
U6bf2: tmp3:= MOVEFROMCREG_DSZ64( , 0x7bb) 

U6bf4: tmp3:= AND_DSZ32(0x00000c00, tmp3) 
U6bf5: tmp3:= SHR_DSZ32(tmp3, 0x00000008) 
U6bf6: tmp3:= OR_DSZ32(tmp1, tmp3) 

U6bf8: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000003, U2711) !m0,m1 
U6bf9: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x0000000e, U2711) !m0,m1 
U6bfa: tmp1:= MOVEFROMCREG_DSZ64( , 0x2e7, 32) !m1 

FUN_ucode_0006bfc:
U6bfc: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000c, U6bfa) !m1 
FUN_ucode_0006bfd:
U6bfd: SAVEUIP_REGOVR(0x01, U6bfe, 0x0003) !m0 SEQW GOTO U32cd
U6bfe: MOVETOCREG_DSZ64(tmp5, 0x7bb) !m2 

U6c00: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
U6c01: tmp3:= AND_DSZ32(0x00000800, tmp5) 
U6c02: tmp3:= SELECTCC_DSZ32_CONDNZ(tmp3, 0x00020003) 

U6c04: LFNCEMARK-> MOVETOCREG_DSZ64(tmp3, 0x2d6, 32) !m1,m2 SEQW GOTO U6380
U6c05: tmm1:= unk_57e( , 0x00000000) 
U6c06: tmp1:= SUB_DSZ32(0x0000ffff, tmp0) 

U6c08: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp1, U2b19) 
U6c09: mm2:= unk_768(0x00000000) 
U6c0a: tmm1:= unk_649(0x00000000, tmm1) 

U6c0c: tmp2:= ADD_DSZ32(0x00000075, tmp2) 
U6c0d: tmm2:= FPREADROM_DTYPENOP(tmp2) 
U6c0e: tmm1:= unk_661(tmm7, tmm1) 

U6c10: tmm3:= unk_6e1(tmm1, tmm1) 
U6c11: tmp12:= unk_6a0() 
U6c12: tmp13:= unk_6a0() 

U6c14: tmm6:= unk_6e1(tmm3, tmm4) 
U6c15: tmp12:= unk_6a0() 
U6c16: tmm7:= unk_6e1(tmm3, tmm4) 

U6c18: tmm6:= unk_649(tmm5, tmm6) 
U6c19: tmp12:= unk_6a0() 
U6c1a: tmm7:= unk_649(tmm4, tmm7) 

U6c1c: tmm6:= unk_6e1(tmm3, tmm6) 
U6c1d: tmp13:= unk_6a0() 
U6c1e: tmm7:= unk_6e1(tmm3, tmm7) 

U6c20: tmm6:= unk_649(tmm5, tmm6) 
U6c21: tmp12:= unk_6a0() 
U6c22: tmm7:= unk_649(tmm4, tmm7) 

U6c24: tmm6:= unk_6e1(tmm3, tmm6) 
U6c25: tmm7:= unk_6e1(tmm3, tmm7) 
U6c26: tmm6:= unk_649(tmm1, tmm6) 

U6c28: tmm7:= unk_6e1(tmm7, tmm1) 
U6c29: tmp9:= unk_6a0() 
U6c2a: tmm3:= unk_649(tmm2, tmm1) 

U6c2c: tmm7:= unk_649(tmm7, tmm6) 
U6c2d: tmm1:= unk_6e1(tmm3, tmm7) 
U6c2e: LFNCEWAIT-> mm0:= unk_689(tmm2, tmm1) !m2 SEQW GOTO U1bd0

U6c30: MOVE_DSZ32() SEQW SAVEUIP1 U6c31SEQW GOTO U319a
U6c31: tmp0:= READURAM( , 0x0053, 64) 
U6c32: tmp0:= BTR_DSZ64(tmp0, 0x00000006) 

U6c34: WRITEURAM(tmp0, 0x0053, 64) 
U6c35: MOVETOCREG_BTS_DSZ64( , 0x00000008, 0x005) 
U6c36: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000060) 

U6c38: MOVETOCREG_DSZ64(tmp0, 0x7c6) 
U6c39: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x7f1) 
U6c3a: tmp1:= AND_DSZ32(0x00002000, tmp0) 

U6c3c: tmp2:= AND_DSZ32(0x00008000, tmp0) 
U6c3d: tmp0:= READURAM( , 0x005c, 64) 
U6c3e: tmp0:= NOTAND_DSZ32(0x00002000, tmp0) 

U6c40: tmp0:= OR_DSZ32(tmp1, tmp0) 
U6c41: WRITEURAM(tmp0, 0x005c, 32) 
U6c42: tmp0:= MOVEFROMCREG_DSZ64( , 0x105) 

U6c44: tmp0:= NOTAND_DSZ64(0x00008000, tmp0) 
U6c45: MOVETOCREG_OR_DSZ64(tmp0, 0x105, tmp2) 
U6c46: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000160) 

U6c48: WRITEURAM(tmp0, 0x001b, 64) 
U6c49: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000020) 
U6c4a: MOVETOCREG_DSZ64(tmp0, 0x20f, 32) !m1,m2 

U6c4c: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000040) 
U6c4d: MOVETOCREG_DSZ64(tmp0, 0x7f8) 
U6c4e: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x7f9) !m1 

U6c50: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1() 
U6c51: WRITEURAM(tmp0, 0x0070, 64) 
U6c52: MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1 

U6c54: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000018, 0x2da) !m1 
U6c55: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x008) 
U6c56: tmp14:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000180) 

FUN_ucode_0006c58:
U6c58: SAVEUIP( , 0x01, U0416) !m0 SEQW GOTO U2e30
U6c59: tmp0:= ZEROEXT_DSZ16( , tmp14) 
U6c5a: tmp0:= AND_DSZ64(tmp0, tmp5) 

U6c5c: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U5f95) 
U6c5d: tmp7:= TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U6c6c
U6c5e: tmp4:= NOTAND_DSZ64(0x00000fb8, tmp4) 

U6c60: mm7:= unk_72f(tmm4) 
U6c61: tmp15:= TESTUSTATE( , VMX, 0x0100) !m2 ? SEQW GOTO U6c66
U6c62: tmp4:= MOVETOCREG_BTS_DSZ64(tmp4, 0x0000003f, 0x51c) !m0 

U6c64: tmp15:= SHR_DSZ64(tmp4, 0x0000000b) 
U6c65: tmp15:= OR_DSZ32(0x00000001, tmp15) 
FUN_ucode_0006c66:
U6c66: tmp7:= SHL_DSZ64(tmp7, 0x0000001d) 

U6c68: tmp7:= OR_DSZ64(tmp7, tmp15) 
FUN_ucode_0006c69:
U6c69: tmp3:= BT_DSZ64(tmp3, 0x00000025) 
U6c6a: tmp7:= SELECTCC_DSZ64_CONDNB(tmp3, tmp7) 

U6c6c: WRITEURAM(tmp7, 0x0079, 64) 
U6c6d: LFNCEWAIT-> tmp7:= unk_163(0x00000000, tmp7) 
U6c6e: tmp15:= SHR_DSZ32(tmp7, 0x00000008) 

U6c70: tmm4:= unk_707(mm7) 
U6c71: MOVETOCREG_DSZ64(tmp15, 0x79d) 
U6c72: tmp11:= ZEROEXT_DSZ32(0x00005f95) 

U6c74: ROVR<- mm0:= unk_76f(tmm6) SEQW SAVEUIP1 U6c75SEQW GOTO U60f9
U6c75: MOVETOCREG_DSZ64(tmp0, 0x7c5) 
U6c76: tmp15:= ZEROEXT_DSZ32(0x00000500) 

U6c78: TESTUSTATE( , VMX, !0x1000) !m0,m2 ? SEQW GOTO U2ebe
U6c79: tmp4:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U6c7a: tmp9:= ZEROEXT_DSZ32(0x00000500) 

U6c7c: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U6c80
U6c7d: tmp9:= SELECTCC_DSZ32_CONDNB(tmp10, 0x00000500) 
U6c7e: tmp15:= OR_DSZ32(tmp9, 0x00000400) 

U6c80: tmp4:= NOTAND_DSZ32(tmp15, tmp4) 
U6c81: tmp9:= SELECTCC_DSZ32_CONDZ(tmp13, tmp9) 
U6c82: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp4, 0x7ff, tmp9) SEQW GOTO U2ed4

U6c84: tmp0:= BT_DSZ64(tmp0, 0x00000020) 
U6c85: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x00020000) 
FUN_ucode_0006c86:
U6c86: tmp1:= MOVEFROMCREG_DSZ64( , 0x7bb) 

U6c88: tmp1:= AND_DSZ32(0x00000800, tmp1) 
U6c89: tmp1:= SHR_DSZ32(tmp1, 0x00000002) 
U6c8a: tmp1:= OR_DSZ16(0x0000f9ff, tmp1) 

U6c8c: rdx:= CONCAT_DSZ16(0x0000bfe9, tmp1) 
U6c8d: rdx:= OR_DSZ32(tmp0, rdx) 
U6c8e: tmp0:= ZEROEXT_DSZ32(0x0000eb37) 

U6c90: rcx:= CONCAT_DSZ16(0x000005d8, tmp0) 
U6c91: tmp0:= BT_DSZ64(tmp7, 0x00000024) 
U6c92: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000080) 

U6c94: rcx:= OR_DSZ32(tmp0, rcx) 
U6c95: tmp0:= AND_DSZ64(0x00040000, tmp10) 
U6c96: tmp1:= READURAM( , 0x005c, 64) 

U6c98: tmp1:= SHR_DSZ32(tmp1, 0x00000006) 
U6c99: tmp0:= NOTAND_DSZ32(tmp1, tmp0) 
U6c9a: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000008) 

U6c9c: rcx:= OR_DSZ32(tmp0, rcx) 
U6c9d: tmp0:= MOVEFROMCREG_DSZ64( , 0x701) 
U6c9e: tmp0:= NOTAND_DSZ32(tmp0, 0x00000003) 

U6ca0: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x02000000) 
U6ca1: rcx:= OR_DSZ32(tmp0, rcx) 
U6ca2: tmp0:= AND_DSZ64(0x02000000, tmp7) 

U6ca4: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00200000) 
U6ca5: rcx:= OR_DSZ32(tmp0, rcx) 
U6ca6: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U6ca8: tmp0:= BT_DSZ32(tmp0, 0x00000012) 
U6ca9: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x08000000) 
U6caa: rcx:= OR_DSZ32(tmp0, rcx) 

U6cac: tmp0:= BT_DSZ64(tmp6, 0x00000037) 
U6cad: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x40000000) 
U6cae: rcx:= OR_DSZ32(tmp0, rcx) SEQW GOTO U1bd0

U6cb0: tmp15:= OR_DSZ32(tmp7, 0xff000000) 
U6cb1: WRITEURAM(tmp15, 0x000e, 64) !m2 
U6cb2: tmp6:= unk_04e(tmp0, 0x00000003) 

U6cb4: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00d0) !m2 
U6cb5: tmp15:= AND_DSZ32(0x00007c00, tmp15) 
U6cb6: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U0686) 

U6cb8: tmp4:= ZEROEXT_DSZ32(0x00000413) 
U6cb9: PORTOUT_DSZ32_ASZ16_SC1(0x0070,  , tmp4) !m2 
U6cba: tmp7:= PORTIN_DSZ32_ASZ16_SC1(0x0074) !m2 

U6cbc: BTUJNB_DIRECT_NOTTAKEN(tmp7, 0x00000000, U6cdc) !m1 
U6cbd: tmp7:= SHR_DSZ32(tmp7, 0x00000008) 
U6cbe: tmp7:= AND_DSZ32(0x0000fffc, tmp7) 

U6cc0: tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U6cb9
U6cc1: tmp7:= CONCAT_DSZ32(0xaa000000, tmp7) 
U6cc2: tmp8:= READURAM( , 0x0020, 64) 

U6cc4: ROVR<- tmp8:= AND_DSZ32(0x00007fff, tmp8) SEQW SAVEUIP1 U6cc5SEQW GOTO U02ba
U6cc5: tmp8:= SHL_DSZ32(tmp8, 0x00000018) 
U6cc6: tmp4:= PORTIN_DSZ64_ASZ16_SC1(0x0000, tmp0) !m2 

U6cc8: tmp4:= AND_DSZ32(0x00000040, tmp4) 
U6cc9: tmp4:= SHL_DSZ64(tmp4, 0x00000036) 
U6cca: tmp7:= OR_DSZ64(tmp4, tmp7) 

U6ccc: tmp4:= PORTIN_DSZ64_ASZ16_SC1(0x0000, tmp1) !m2 
U6ccd: tmp4:= BT_DSZ64(tmp4, 0x0000003f) 
U6cce: tmp15:= CONCAT_DSZ32(0x40000000) 

U6cd0: tmp15:= SELECTCC_DSZ64_CONDNB(tmp4, tmp15) 
U6cd1: tmp4:= SELECTCC_DSZ64_CONDNB(tmp4, tmp4) 
U6cd2: tmp4:= BT_DSZ64(tmp4, 0x0000003d) 

U6cd4: tmp7:= CMOVCC_DSZ64_CONDB(tmp4, tmp7) 
U6cd5: tmp7:= OR_DSZ64(tmp15, tmp7) 
U6cd6: PORTOUT_DSZ64_ASZ16_SC1(0x0000, tmp1, tmp7) !m2 

U6cd8: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp4, U6cda) 
U6cd9: PORTOUT_DSZ64_ASZ16_SC1(0x0000, tmp3, tmp8) !m2 
U6cda: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 

U6cdc: SYNCFULL-> tmp0:= ZEROEXT_DSZ64(tmp6) SEQW URET0
U6cdd: MOVE_DSZ32() 
U6cde: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 

U6ce0: tmp8:= MOVEFROMCREG_DSZ64( , 0x562) 
U6ce1: tmp1:= MOVEFROMCREG_DSZ64( , 0x563) 
U6ce2: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U6ce9) !m1 

U6ce4: tmp8:= MOVEFROMCREG_DSZ64( , 0x574) 
U6ce5: MOVETOCREG_DSZ64(tmp8, 0x562) !m2 
U6ce6: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 

U6ce8: SYNCFULL-> MOVETOCREG_DSZ64(tmp1, 0x563) !m2 
U6ce9: tmp3:= CONCAT_DSZ32(rbx, rdx) 
U6cea: tmp8:= NOTAND_DSZ64(0x00000fff, tmp8) 

U6cec: tmp1:= NOTAND_DSZ64(0x00000fff, tmp1) 
U6ced: tmp2:= ADD_DSZ64(0x00001000, tmp8) 
U6cee: tmp4:= LDZX_DSZ32_ASZ32_SC1(tmp3) 

U6cf0: tmp5:= LDZX_DSZ32_ASZ32_SC1(tmp3) 
U6cf1: tmp4:= ADD_DSZ32(tmp5, tmp4) 
U6cf2: tmp4:= ADD_DSZ32(0x00000007, tmp4) 

U6cf4: tmp4:= NOTAND_DSZ32(0x00000007, tmp4) 
U6cf5: ROVR<- tmp0:= ADD_DSZ64(tmp4, tmp2) SEQW SAVEUIP1 U6cf6
U6cf6: tmp0:= SUB_DSZ64(0x00000001, tmp0) 

U6cf8: tmp0:= AND_DSZ64(tmp1, tmp0) 
U6cf9: tmp5:= AND_DSZ64(tmp1, tmp8) 
U6cfa: SYNCFULL-> CMPUJNZ_DIRECT_NOTTAKEN(tmp0, U1c95, tmp5) !m2 SEQW SAVEUIP1 U6cfcSEQW GOTO U1b2a

U6cfc: tmp5:= READURAM( , 0x005c, 64) 
U6cfd: tmp5:= BTS_DSZ64(tmp5, 0x0000002a) 
U6cfe: WRITEURAM(tmp5, 0x005c, 64) 

U6d00: tmp5:= LDPPHYS_DSZ32_ASZ64_SC1(tmp8, 0x00000004, mode=0x01) 
U6d01: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000000, U6d02) !m1 SEQW GOTO U6b90
U6d02: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000020, mode=0x01,  , tmp2) 

U6d04: tmp0:= ZEROEXT_DSZ32() 
U6d05: tmp5:= LDZX_DSZ64_ASZ32_SC1(tmp3, tmp0) 
U6d06: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, mode=0x01, tmp0, tmp5) 

U6d08: tmp0:= ADD_DSZ32(0x00000008, tmp0) 
U6d09: CMPUJZ_DIRECT_NOTTAKEN(tmp0, U6b91, tmp4) !m1 SEQW GOTO U6d05
U6d0a: tmpv1:= BTS_DSZ32(tmpv1, 0x00000011) 

U6d0c: LFNCEMARK-> tmpv0:= SHR_DSZ32(tmpv1, 0x00000010) 
U6d0d: tmpv0:= AND_DSZ64(0x00000003, tmpv0) 
U6d0e: tmpv0:= CONCAT_DSZ32(tmpv0) 

U6d10: LFNCEWAIT-> tmpv2:= READURAM( , 0x008c, 64) 
U6d11: tmpv2:= BTR_DSZ64(tmpv2, 0x00000020) 
U6d12: tmpv2:= BTR_DSZ64(tmpv2, 0x00000021) 

U6d14: tmpv2:= OR_DSZ64(tmpv0, tmpv2) 
U6d15: LFNCEMARK-> WRITEURAM(tmpv2, 0x018c, 64) !m2 
U6d16: tmpv1:= NOTAND_DSZ32(0x00030000, tmpv1) 

U6d18: tmpv1:= SHL_DSZ64(tmpv1, 0x00000028) 
U6d19: LFNCEWAIT-> tmpv0:= READURAM( , 0x008c, 64) 
U6d1a: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x0000001d, U6d20) !m1 

U6d1c: tmpv2:= BTS_DSZ64(0x00000000, 0x00000030) 
U6d1d: tmpv1:= SUB_DSZ64(tmpv2, tmpv1) 
U6d1e: tmpv1:= BTS_DSZ64(tmpv1, 0x00000012) 

U6d20: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x0000001c, U6d25) !m1 
U6d21: tmpv2:= BTS_DSZ64(0x00000000, 0x00000030) 
U6d22: tmpv1:= SUB_DSZ64(tmpv2, tmpv1) 

U6d24: tmpv1:= BTS_DSZ64(tmpv1, 0x00000011) 
U6d25: tmpv2:= SHR_DSZ64(tmpv1, 0x00000028) 
U6d26: tmpv2:= AND_DSZ32(0x0000001f, tmpv2) 

U6d28: BTUJNB_DIRECT_NOTTAKEN(tmpv0, U6d2d, tmpv2) !m1 
U6d29: tmpv2:= CONCAT_DSZ32(0x00410000) 
U6d2a: tmpv1:= ADD_DSZ64(tmpv2, tmpv1) 

U6d2c: tmpv1:= BTS_DSZ64(tmpv1, 0x00000010) 
U6d2d: tmpv0:= MOVEFROMCREG_DSZ64( , 0x2b9, 32) !m1 
U6d2e: tmpv0:= AND_DSZ32(0x000000ff, tmpv0) 

U6d30: tmpv0:= SHL_DSZ32(tmpv0, 0x00000018) 
U6d31: tmpv0:= OR_DSZ64(tmpv1, tmpv0) 
U6d32: tmpv0:= OR_DSZ64(0x0000fade, tmpv0) 

U6d34: tmpv2:= SHR_DSZ64(tmpv1, 0x00000028) 
U6d35: tmpv2:= AND_DSZ64(0x0000001f, tmpv2) 
U6d36: SAVEUIP( , 0x00, U0c0a) SEQW GOTO U334d

U6d38: unk_cc2(tmp0, tmp1) 
U6d39: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x486) 
U6d3a: tmp0:= CONCAT_DSZ16(0xffffffffffffffff, tmp0) 

U6d3c: tmm2:= unk_73a() 
U6d3d: tmp2:= SHR_DSZ16(tmp10, 0x0000000b) 
U6d3e: tmp2:= AND_DSZ8(0x00000007, tmp2) 

U6d40: tmp8:= SHL_DSZ8(tmp2, 0x00000001) 
U6d41: tmp3:= SUB_DSZ8(0x00000001, tmp2) 
U6d42: tmp4:= MOVEFROMCREG_DSZ64( , 0x06a) 

U6d44: tmp5:= ROR_DSZ8(tmp4, tmp3) 
U6d45: tmm5:= unk_704(mm5) 
U6d46: tmm7:= unk_6a3(tmm5, IMM_MACRO_31) !m0 

U6d48: tmp6:= PINTMOVDTMM2I_DSZ32(tmm7) 
U6d49: tmp12:= WRMSLOOPCTRFBR(0x00000006) 
U6d4a: tmp6:= ROL_DSZ16(tmp6, 0x00000002) 

U6d4c: tmp5:= ROL_DSZ8(tmp5, 0x00000001) 
U6d4d: tmm5:= unk_704(mm5) 
U6d4e: tmm7:= unk_6a3(tmm5, IMM_MACRO_31) !m0 

U6d50: tmp4:= PINTMOVDTMM2I_DSZ32(tmm7) 
U6d51: tmp6:= OR_DSZ32(tmp4, tmp6) 
U6d52: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U6d4a

U6d54: tmp6:= ROL_DSZ16(tmp6, tmp8) 
U6d55: tmp10:= CONCAT_DSZ16(0xffffffffffffffff, tmp10) 
U6d56: tmp8:= CONCAT_DSZ16(0xffffffffffffffff, tmp6) 

U6d58: tmp3:= MOVEFROMCREG_DSZ64( , 0x00a) 
U6d59: tmp6:= MOVEFROMCREG_DSZ64( , 0x00d) 
U6d5a: tmp2:= MOVEFROMCREG_DSZ64( , 0x069) 

U6d5c: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U6d5d: tmp2:= CMOVCC_DSZ64_CONDZ(tmp2, 0xffffffffffffffff) 
U6d5e: tmp2:= CONCAT_DSZ32(tmp2, 0xffffffffffffffff) 

U6d60: tmp3:= SUB_DSZ64(tmp6, tmp3) 
U6d61: tmp3:= AND_DSZ64(tmp2, tmp3) 
U6d62: tmp3:= AND_DSZ64(tmp2, tmp3) 

U6d64: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) 
U6d65: tmp7:= MOVEFROMCREG_DSZ64( , 0x00f) SEQW GOTO U65ad
U6d66: tmpv3:= ADD_DSZ32(0x0000000c, tmpv3) 

U6d68: tmpv3:= SHL_DSZ64(0xffffffffffffffff, tmpv3) 
U6d69: tmpv0:= READURAM( , 0x0010, 64) 
U6d6a: tmpv3:= NOTAND_DSZ64(tmpv0, tmpv3) 

U6d6c: TESTUSTATE( , UCODE, !0x0400) !m0 ? SEQW GOTO U6d75
U6d6d: tmpv0:= SUB_DSZ32(0x0000010a, tmp9) 
U6d6e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmpv0, U6d75) 

U6d70: tmpv0:= MOVEFROMCREG_DSZ64( , 0x102) 
U6d71: tmpv0:= SHR_DSZ64(tmpv0, 0x00000020) 
U6d72: tmpv0:= AND_DSZ32(tmpv0, tmpv3) 

U6d74: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv0, U2b29) 
U6d75: tmpv0:= NOTAND_DSZ64(tmpv3, tmpv2) 
U6d76: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv0, U2b29) 

U6d78: tmpv0:= MOVEFROMCREG_DSZ64( , 0x574) 
U6d79: tmpv1:= MOVEFROMCREG_DSZ64( , 0x575) 
U6d7a: tmpv1:= NOTAND_DSZ64(0x00000fff, tmpv1) 

U6d7c: tmpv1:= AND_DSZ64(tmpv3, tmpv1) 
U6d7d: tmpv0:= AND_DSZ64(tmpv1, tmpv0) 
U6d7e: tmpv1:= AND_DSZ64(tmpv1, tmpv2) 

U6d80: tmpv0:= SUB_DSZ64(tmpv1, tmpv0) 
U6d81: tmpv1:= MOVEFROMCREG_DSZ64( , 0x575) 
U6d82: tmpv1:= NOTAND_DSZ32(tmpv1, 0x00000400) 

FUN_ucode_0006d84:
U6d84: tmpv0:= OR_DSZ64(tmpv1, tmpv0) 
U6d85: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmpv0, U2b29) 
U6d86: tmpv0:= MOVEFROMCREG_DSZ64( , 0x572) 

U6d88: tmpv1:= MOVEFROMCREG_DSZ64( , 0x573) 
U6d89: tmpv1:= NOTAND_DSZ64(0x00000fff, tmpv1) 
U6d8a: tmpv1:= AND_DSZ64(tmpv3, tmpv1) 

U6d8c: tmpv0:= AND_DSZ64(tmpv1, tmpv0) 
U6d8d: tmpv1:= AND_DSZ64(tmpv1, tmpv2) 
U6d8e: tmpv0:= SUB_DSZ64(tmpv1, tmpv0) 

U6d90: tmpv1:= MOVEFROMCREG_DSZ64( , 0x573) 
U6d91: tmpv1:= NOTAND_DSZ32(tmpv1, 0x00000800) 
U6d92: tmpv0:= OR_DSZ64(tmpv1, tmpv0) 

U6d94: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmpv0, U2b29) SEQW URET1
U6d95: tmp6:= MOVEFROMCREG_DSZ64( , 0x231, 32) !m1 
U6d96: tmp1:= AND_DSZ32(0x0003f000, tmp6) 

U6d98: tmp4:= SHR_DSZ32(tmp6, 0x00000006) 
U6d99: tmp4:= AND_DSZ32(0x0003f000, tmp4) 
U6d9a: tmp1:= SUB_DSZ32(tmp1, tmp4) 

U6d9c: tmp1:= SELECTCC_DSZ32_CONDB(tmp1, 0x00000001) 
U6d9d: tmp5:= SHR_DSZ32(tmp4, 0x0000000c) 
U6d9e: tmp4:= AND_DSZ32(0x00000f00, tmp6) 

U6da0: tmp4:= SHR_DSZ64(tmp4, 0x00000008) 
U6da1: tmp4:= ADD_DSZ32(0x00000001, tmp4) 
U6da2: tmp4:= unk_2e4(tmp4, tmp5) 

U6da4: tmp3:= AND_DSZ32(0x0000001e, tmp6) 
U6da5: tmp3:= SHR_DSZ32(tmp3, 0x00000001) 
U6da6: tmp3:= ADD_DSZ32(0x00000009, tmp3) 

U6da8: tmp5:= READURAM( , 0x0020, 64) 
FUN_ucode_0006da9:
U6da9: tmp5:= SHR_DSZ64(tmp5, 0x00000030) 
U6daa: tmp5:= NOTAND_DSZ32(tmp5, 0x00000003) 

U6dac: tmp5:= SELECTCC_DSZ32_CONDNZ(tmp5, tmp3) 
U6dad: tmp3:= ADD_DSZ32(tmp5, tmp3) 
U6dae: tmp3:= unk_2a4(tmp4, tmp3) 

U6db0: tmp4:= SHR_DSZ32(tmp3, 0x00000002) 
U6db1: tmp4:= AND_DSZ32(0x00003ffe, tmp4) 
U6db2: tmp1:= OR_DSZ32(tmp4, tmp1) 

U6db4: tmp4:= AND_DSZ32(0x000000e0, tmp6) 
U6db5: tmp4:= SHR_DSZ32(tmp4, 0x00000005) 
U6db6: tmp5:= SHL_DSZ32(tmp4, 0x00000002) 

U6db8: tmp4:= ADD_DSZ32(tmp5, tmp4) 
U6db9: tmp4:= SUB_DSZ32(tmp4, 0x00000080) 
U6dba: tmp4:= unk_2a4(tmp3, tmp4) 

U6dbc: tmp4:= SHL_DSZ32(tmp4, 0x00000004) 
U6dbd: tmp4:= AND_DSZ32(0x07ffc000, tmp4) 
U6dbe: tmp5:= READURAM( , 0x001c, 64) 

U6dc0: tmp5:= SHR_DSZ64(tmp5, 0x00000020) 
U6dc1: tmp1:= CONCAT_DSZ32(tmp5, tmp1) 
U6dc2: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmp1, 0x232, tmp4) !m1 SEQW URET1

U6dc4: tmp10:= unk_6a0() 
U6dc5: tmm2:= unk_649(tmm0, tmm2) 
U6dc6: tmp11:= unk_6a0() 

U6dc8: tmp15:= FCOM2(tmp8, tmp11) 
U6dc9: tmm3:= unk_6c9(tmm0, tmm3) 
U6dca: tmp12:= unk_6a0() 

U6dcc: tmm2:= unk_6e1(tmm4, tmm2) 
U6dcd: mm0:= unk_76a(tmm7) 
U6dce: tmp0:= AND_DSZ32(0x00000008, tmp0) 

U6dd0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U5c14) 
U6dd1: tmm2:= unk_6e6(tmm3, tmm2) 
U6dd2: tmm0:= unk_661(tmm2, tmm2) 

U6dd4: tmm3:= unk_6e1(tmm0, tmm0) 
U6dd5: tmp15:= unk_6a0() 
U6dd6: tmp13:= unk_6a0() 

U6dd8: tmm6:= unk_6e1(tmm3, tmm7) 
U6dd9: tmp15:= unk_6a0() 
U6dda: tmm4:= unk_6e1(tmm3, tmm5) 

U6ddc: tmp13:= unk_6a0() 
U6ddd: tmm6:= unk_649(tmm7, tmm6) 
U6dde: tmm4:= unk_649(tmm5, tmm4) 

U6de0: tmm6:= unk_6e1(tmm3, tmm6) 
U6de1: tmp15:= unk_6a0() 
U6de2: tmm4:= unk_6e1(tmm3, tmm4) 

U6de4: tmm6:= unk_649(tmm7, tmm6) 
U6de5: tmp13:= unk_6a0() 
U6de6: tmm4:= unk_649(tmm5, tmm4) 

U6de8: tmm6:= unk_6e1(tmm3, tmm6) 
U6de9: tmm4:= unk_6e1(tmm0, tmm4) 
U6dea: tmp3:= ZEROEXT_DSZ32(0x00000010) 

U6dec: tmm3:= unk_700(mm3) !m2 
U6ded: tmm4:= unk_649(tmm4, tmm6) 
U6dee: tmm4:= unk_6e1(tmm2, tmm4) 

U6df0: tmm0:= unk_6c9(tmm2, tmm4) 
U6df1: LFNCEMARK-> tmm7:= unk_6a1(tmm0, tmm1) !m2 SEQW GOTO U01aa
U6df2: tmm1:= unk_6e1(tmm0, tmm0) 

U6df4: tmm2:= unk_6e1(tmm1, tmm1) 
U6df5: tmp2:= AND_DSZ32(0x00000003, tmp2) 
U6df6: tmp8:= OR_DSZ32(tmp2, tmp8) 

U6df8: mm1:= unk_72a(tmm0) 
U6df9: tmp1:= SHL_DSZ32(tmp1, 0x00000004) 
U6dfa: tmp8:= OR_DSZ32(tmp1, tmp8) 

U6dfc: mm0:= unk_7ea(tmm0) 
U6dfd: tmp11:= SUB_DSZ32(0x0000fffd, tmp0) 
U6dfe: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp11, U6e00) SEQW GOTO U6eb6

U6e00: tmp1:= SHR_DSZ32(tmp8, 0x00000001) 
U6e01: tmp2:= SHR_DSZ32(tmp8, 0x00000003) 
U6e02: tmp2:= XOR_DSZ32(tmp1, tmp2) 

U6e04: tmp1:= AND_DSZ32(0x00000001, tmp8) 
U6e05: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U68a2) 
U6e06: tmp11:= unk_6a0() 

U6e08: tmp12:= unk_6a0() 
U6e09: tmm5:= unk_6e1(tmm2, tmm3) 
U6e0a: tmp11:= unk_6a0() 

U6e0c: tmm6:= unk_6e1(tmm2, tmm4) 
U6e0d: tmm5:= unk_649(tmm3, tmm5) 
U6e0e: tmp12:= unk_6a0() 

U6e10: tmm5:= unk_6e1(tmm2, tmm5) 
U6e11: tmm6:= unk_649(tmm4, tmm6) 
U6e12: tmp11:= unk_6a0() 

U6e14: tmm6:= unk_6e1(tmm2, tmm6) 
U6e15: tmp12:= unk_6a0() 
fit_load_start:
U6e16: tmm5:= unk_649(tmm3, tmm5) 

U6e18: tmm6:= unk_649(tmm4, tmm6) 
U6e19: tmm5:= unk_6e1(tmm1, tmm5) 
U6e1a: tmm6:= unk_6e1(tmm2, tmm6) 

U6e1c: tmm5:= unk_649(tmm5, tmm6) 
U6e1d: tmm7:= unk_702(mm2) 
U6e1e: tmm0:= unk_496(tmm0, tmm7) 

U6e20: tmm5:= unk_6e1(tmm0, tmm5) 
U6e21: mm0:= unk_689(tmm0, tmm5) !m2 SEQW GOTO U1bd0
U6e22: mm0:= unk_7ea(tmm3) 

U6e24: tmp0:= ADD_DSZ32(0x00000005, tmp0) 
U6e25: tmm3:= unk_7c2(mm0, tmm3) 
U6e26: tmm6:= unk_704(mm6) 

U6e28: tmm6:= unk_644(tmm6) 
U6e29: tmm2:= unk_6e1(tmm2, tmm6) 
U6e2a: tmm2:= unk_6c9(tmm2, tmm3) 

U6e2c: tmm4:= unk_6e6(tmm2, tmm4) 
U6e2d: tmm2:= unk_661(tmm4, tmm4) 
U6e2e: tmm6:= unk_702(tmm1) 

U6e30: tmm4:= unk_496(tmm4, tmm6) 
U6e31: tmm3:= unk_6e1(tmm2, tmm2) 
U6e32: tmp13:= unk_6a0() 

U6e34: tmm7:= unk_6e1(tmm3, tmm5) 
U6e35: tmp13:= unk_6a0() 
U6e36: tmm3:= unk_6e1(tmm3, tmm5) 

U6e38: tmp13:= unk_6a0() 
U6e39: tmm7:= unk_6c9(tmm5, tmm7) 
U6e3a: tmp13:= unk_6a0() 

U6e3c: tmm3:= unk_649(tmm5, tmm3) 
U6e3d: tmm5:= unk_6e1(tmm4, tmm2) 
U6e3e: tmm3:= unk_6e1(tmm2, tmm3) 

U6e40: tmm2:= unk_649(tmm7, tmm3) 
U6e41: tmm2:= unk_6e1(tmm5, tmm2) 
process_next_fit_xlat:
U6e42: tmp8:= ADD_DSZ32(0x000000f5, tmp6) 

U6e44: tmm3:= FPREADROM_DTYPENOP(tmp8) 
U6e45: tmm4:= unk_6c9(tmm4, tmm2) 
U6e46: tmm5:= unk_496(tmm3, tmm6) 

U6e48: mm0:= unk_72a(tmm0) 
U6e49: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U6e4a: tmm6:= unk_6c9(tmm4, tmm5) 

non_ucode_fit_xlat_found:
U6e4c: tmp11:= unk_6a0() 
U6e4d: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp7, U59d2) 
U6e4e: tmp11:= unk_6a0() 

U6e50: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U59d2) 
U6e51: LFNCEWAIT-> tmm7:= unk_689(tmm4, tmm5) !m2 SEQW GOTO U0404
U6e52: tmp9:= SHR_DSZ32(tmp0, 0x00000010) 

U6e54: LDHINT_BUFFER_ASZ32_SC1(tmp11) 
U6e55: tmp13:= SAVEUIP(0x00, U1a84) 
U6e56: LDHINT_BUFFER_ASZ32_SC1(tmp11, 0x00001880) 

U6e58: LDHINT_BUFFER_ASZ32_SC1(tmp11, 0x000018c0) 
U6e59: tmp3:= TEST_DSZ64(tmp6, tmp6) 
U6e5a: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U6e5c) SEQW GOTO U6e6a

U6e5c: tmp10:= CONCAT_DSZ32(0xffff0000) 
U6e5d: tmp3:= READURAM( , 0x005c, 64) 
U6e5e: tmp7:= NOTAND_DSZ64(tmp10, tmp3) 

U6e60: tmp3:= AND_DSZ64(tmp10, tmp6) 
U6e61: tmp3:= OR_DSZ64(tmp7, tmp3) 
U6e62: WRITEURAM(tmp3, 0x015c, 64) 

U6e64: tmp10:= NOTAND_DSZ64(tmp10, tmp6) 
U6e65: tmp3:= SHR_DSZ64(tmp10, 0x0000002f) 
U6e66: tmp3:= XOR_DSZ64(0x00000001, tmp3) 

U6e68: tmp3:= SHL_DSZ64(tmp3, 0x00000030) 
U6e69: tmp6:= OR_DSZ64(tmp10, tmp3) 
U6e6a: tmp10:= NOTAND_DSZ16(tmp0, tmp9) 

U6e6c: tmp10:= AND_DSZ16(0x0000003f, tmp10) 
U6e6d: tmp9:= NOTAND_DSZ16(0x00008080, tmp9) 
U6e6e: tmp12:= CMOVCC_DSZ16_CONDZ(tmp10, 0x00008080) 

U6e70: tmp12:= OR_DSZ16(tmp9, tmp12) 
U6e71: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp12, 0x48c) 
U6e72: MOVETOCREG_DSZ64(tmp1, 0x06b) 

U6e74: tmp3:= SHR_DSZ16(tmp9, 0x0000000b) 
U6e75: tmp3:= AND_DSZ8(0x00000007, tmp3) 
U6e76: SYNCMARK-> MOVETOCREG_DSZ64(tmp3, 0x073) 

U6e78: MOVETOCREG_DSZ64(tmp0, 0x486) 
U6e79: LDHINT_BUFFER_ASZ32_SC1(tmp11, 0x00003800) 
U6e7a: tmp10:= SHR_DSZ32(tmp1, 0x00000010) 

U6e7c: MOVETOCREG_DSZ64(tmp6, 0x00e) 
U6e7d: MOVETOCREG_DSZ64(tmp10, 0x00f) 
U6e7e: MOVETOCREG_DSZ64(tmp8, 0x00a) 

U6e80: MOVETOCREG_DSZ64( , 0x00000000, 0x00d) 
U6e81: tmp9:= MOVEFROMCREG_DSZ64( , 0x069) 
U6e82: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp9, 0x069) SEQW URET0

U6e84: tmm1:= unk_6e1(tmm7, 0x00000000) 
U6e85: tmm2:= unk_661(tmm7, 0x00000000) 
U6e86: tmm2:= unk_6e1(tmm1, tmm2) 

U6e88: tmp12:= unk_6a0() 
U6e89: tmp11:= unk_6a0() 
U6e8a: tmm7:= unk_6e1(tmm2, tmm4) 

U6e8c: tmp12:= unk_6a0() 
U6e8d: tmm6:= unk_6e1(tmm2, tmm3) 
U6e8e: tmm7:= unk_649(tmm4, tmm7) 

U6e90: tmp11:= unk_6a0() 
U6e91: tmm6:= unk_649(tmm3, tmm6) 
U6e92: tmm7:= unk_6e1(tmm2, tmm7) 

U6e94: tmp12:= unk_6a0() 
U6e95: tmm6:= unk_6e1(tmm2, tmm6) 
U6e96: tmm7:= unk_649(tmm4, tmm7) 

U6e98: tmp11:= unk_6a0() 
U6e99: tmm6:= unk_649(tmm3, tmm6) 
U6e9a: tmm7:= unk_6e1(tmm2, tmm7) 

U6e9c: tmp12:= unk_6a0() 
U6e9d: tmm6:= unk_6e1(tmm2, tmm6) 
U6e9e: tmm7:= unk_649(tmm4, tmm7) 

U6ea0: tmp11:= unk_6a0() 
U6ea1: tmm6:= unk_649(tmm3, tmm6) 
U6ea2: tmm7:= unk_6e1(tmm2, tmm7) 

U6ea4: tmp12:= unk_6a0() 
U6ea5: tmm6:= unk_6e1(tmm2, tmm6) 
U6ea6: tmm7:= unk_649(tmm4, tmm7) 

U6ea8: tmp11:= unk_6a0() 
U6ea9: tmm6:= unk_649(tmm3, tmm6) 
U6eaa: tmm7:= unk_661(tmm2, tmm7) 

U6eac: tmm6:= unk_661(tmm2, tmm6) 
U6ead: tmm7:= unk_6e1(tmm1, tmm7) 
U6eae: tmm6:= unk_6e1(tmm2, tmm6) 

U6eb0: tmp11:= unk_6a0() 
U6eb1: tmm3:= unk_6e1(tmm2, tmm3) 
U6eb2: tmm7:= unk_649(tmm7, tmm6) 

U6eb4: tmm3:= unk_649(tmm3, tmm7) 
U6eb5: mm0:= unk_689(tmm1, tmm3) !m2 SEQW GOTO U1bd0
U6eb6: tmm5:= unk_496(tmm0, tmm0) 

U6eb8: tmm4:= unk_53e( , tmm5) 
U6eb9: mm3:= unk_728(tmm5) 
U6eba: tmm0:= unk_6c9(tmm5, tmm4) 

U6ebc: tmp1:= SHL_DSZ32(tmp8, 0x00000002) 
U6ebd: tmp1:= AND_DSZ32(0x00000008, tmp1) 
U6ebe: tmp8:= XOR_DSZ32(tmp1, tmp8) 

U6ec0: tmp2:= SHL_DSZ32(tmp8, 0x00000001) 
U6ec1: tmp2:= AND_DSZ32(0x00000010, tmp2) 
U6ec2: tmp8:= XOR_DSZ32(tmp2, tmp8) 

FUN_ucode_0006ec4:
U6ec4: SAVEUIP( , 0x00, U5af5) 
U6ec5: tmm2:= unk_6e1(tmm0, tmm0) 
U6ec6: tmp12:= unk_6a0() 

U6ec8: tmp11:= unk_6a0() 
U6ec9: tmm5:= unk_6e1(tmm2, tmm4) 
U6eca: tmp12:= unk_6a0() 

U6ecc: tmm6:= unk_6e1(tmm2, tmm3) 
U6ecd: tmm5:= unk_649(tmm4, tmm5) 
U6ece: tmp11:= unk_6a0() 

U6ed0: tmm6:= unk_649(tmm3, tmm6) 
U6ed1: tmm5:= unk_6e1(tmm2, tmm5) 
U6ed2: tmp12:= unk_6a0() 

U6ed4: tmm6:= unk_6e1(tmm2, tmm6) 
U6ed5: tmm5:= unk_649(tmm4, tmm5) 
U6ed6: tmp11:= unk_6a0() 

U6ed8: tmm6:= unk_649(tmm3, tmm6) 
U6ed9: tmm5:= unk_6e1(tmm2, tmm5) 
U6eda: tmp12:= unk_6a0() 

U6edc: tmm6:= unk_6e1(tmm2, tmm6) 
U6edd: tmm5:= unk_649(tmm4, tmm5) 
U6ede: tmp11:= unk_6a0() 

U6ee0: tmm6:= unk_649(tmm3, tmm6) 
U6ee1: tmm5:= unk_6e1(tmm2, tmm5) 
U6ee2: tmp1:= ADD_DSZ32(0x00000065, tmp3) 

U6ee4: tmm3:= FPREADROM_DTYPENOP(tmp1) 
U6ee5: tmm6:= unk_661(tmm2, tmm6) 
U6ee6: tmp1:= ADD_DSZ32(0x0000006d, tmp3) 

U6ee8: tmm4:= FPREADROM_DTYPENOP(tmp1) 
U6ee9: tmm5:= unk_6e1(tmm5, tmm0) SEQW URET0
U6eea: tmp7:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 

U6eec: tmp7:= BT_DSZ64(tmp7, 0x0000003f) 
U6eed: tmp13:= READUIP_REGOVR(0x00) 
U6eee: tmp14:= READUIP_REGOVR(0x01) !m0 

U6ef0: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x486) 
U6ef1: tmm4:= unk_73a() 
U6ef2: tmp0:= CONCAT_DSZ16(tmp12, tmp0) 

U6ef4: STAD_DSZ32_ASZ32_SC1(tmp11, mode=0x18,  , tmp0) 
U6ef5: tmp10:= MOVEFROMCREG_DSZ64( , 0x06a) 
U6ef6: tmp2:= MOVEFROMCREG_DSZ64( , 0x00f) 

U6ef8: tmp2:= AND_DSZ32(0x000007ff, tmp2) 
U6ef9: tmp10:= CONCAT_DSZ16(tmp2, tmp10) 
U6efa: STAD_DSZ32_ASZ32_SC1(tmp11, 0x00000004, mode=0x18,  , tmp10) 

U6efc: tmp10:= ZEROEXT_DSZ64() 
U6efd: tmp3:= MOVEFROMCREG_DSZ64( , 0x00a) 
FUN_ucode_0006efe:
U6efe: tmp6:= MOVEFROMCREG_DSZ64( , 0x00d) 

U6f00: tmp2:= MOVEFROMCREG_DSZ64( , 0x069) 
U6f01: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U6f02: tmp2:= CMOVCC_DSZ64_CONDZ(tmp2, 0xffffffffffffffff) 

U6f04: tmp2:= CONCAT_DSZ32(tmp2, 0xffffffffffffffff) 
U6f05: tmp3:= SUB_DSZ64(tmp6, tmp3) 
U6f06: tmp3:= AND_DSZ64(tmp2, tmp3) 

U6f08: tmp3:= AND_DSZ64(tmp2, tmp3) 
U6f09: tmp10:= CONCAT_DSZ32(tmp10, tmp3) 
U6f0a: tmp10:= MOVEMERGEFLGS_DSZ64(tmp10, tmp7) 

U6f0c: tmp10:= CMOVCC_DSZ64_CONDNB(tmp10, tmp3) 
U6f0d: STAD_DSZ64_ASZ32_SC1(tmp11, 0x00000008, mode=0x18,  , tmp10) 
U6f0e: tmp10:= MOVEFROMCREG_DSZ64( , 0x00e) 

U6f10: tmp9:= CONCAT_DSZ32(0xffff0000) 
U6f11: tmp1:= READURAM( , 0x005c, 64) 
U6f12: tmp2:= NOTAND_DSZ64(tmp9, tmp10) 

U6f14: tmp1:= AND_DSZ64(tmp9, tmp1) 
U6f15: tmp9:= OR_DSZ64(tmp2, tmp1) 
U6f16: tmp1:= TEST_DSZ64( , tmp10) 

U6f18: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp1) 
U6f19: tmp10:= CMOVCC_DSZ64_CONDZ(tmp9, tmp10) 
U6f1a: tmp3:= ZEROEXT_DSZ32(tmp10) 

U6f1c: tmp3:= MOVEMERGEFLGS_DSZ64(tmp3, tmp7) 
U6f1d: tmp3:= CMOVCC_DSZ64_CONDNB(tmp3, tmp10) 
U6f1e: STAD_DSZ64_ASZ32_SC1(tmp11, 0x00000010, mode=0x18,  , tmp3) SEQW URET0

U6f20: SAVEUIP( , 0x01, U212a) !m0 
U6f21: tmp0:= ZEROEXT_DSZ32(0x00640fa0) 
U6f22: LFNCEMARK-> tmp0:= CONCAT_DSZ32(0x03e80190, tmp0) 

U6f24: tmp13:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 
U6f25: tmp13:= SHR_DSZ32(tmp13, 0x0000000b) 
U6f26: tmp13:= AND_DSZ32(0x00000030, tmp13) 

U6f28: tmp0:= SHR_DSZ64(tmp0, tmp13) 
U6f29: tmp13:= ZEROEXT_DSZ16(tmp0) 
U6f2a: tmp0:= MOVEFROMCREG_DSZ64( , 0x220, 32) !m1 

U6f2c: tmp3:= SHR_DSZ32(tmp0, 0x00000008) 
U6f2d: tmp4:= READURAM( , 0x0023, 64) 
U6f2e: tmp4:= BT_DSZ64(tmp4, 0x00000003) 

U6f30: tmp0:= MOVEMERGEFLGS_DSZ64(tmp0, tmp4) 
U6f31: tmp4:= CMOVCC_DSZ32_CONDB(tmp0, tmp3) 
U6f32: tmp4:= AND_DSZ32(0x0000003f, tmp4) 

U6f34: tmp2:= unk_0bc(tmp3) 
U6f35: tmp2:= BTR_DSZ32(tmp2, 0x00000003) 
U6f36: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, tmp2) 

U6f38: tmp3:= ZEROEXT_DSZ8(tmp3) 
U6f39: tmp0:= SUB_DSZ32(tmp2, 0x00000008) 
U6f3a: tmp0:= unk_2e4(tmp0, tmp4) 

U6f3c: tmp0:= unk_2a4(tmp13, tmp0) 
process_plain_patch:
U6f3d: tmp0:= SHR_DSZ32(tmp0, 0x00000003) 
U6f3e: tmp2:= unk_116( , tmp0) 

U6f40: tmp2:= unk_226(tmp3, tmp2) 
U6f41: tmp0:= unk_114( , tmp2) 
U6f42: tmp0:= OR_DSZ32(tmp0) 

U6f44: tmp0:= SETCC_CONDNZ(tmp0) 
U6f45: tmp2:= ADD_DSZ32(tmp0, tmp2) 
U6f46: tmp0:= SUB_DSZ32(tmp2, tmp13) 

U6f48: tmp1:= CONCAT_DSZ16(tmp2, tmp0) 
U6f49: tmp1:= OR_DSZ32(0x80000000, tmp1) 
U6f4a: tmp1:= SELECTCC_DSZ32_CONDZ(tmp0, tmp1) 

U6f4c: tmp1:= OR_DSZ32(0x00008000, tmp1) 
U6f4d: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, 0x221, 32) !m1 
U6f4e: tmp0:= CONCAT_DSZ32(0x0000003f) 

U6f50: tmp4:= SHL_DSZ64(tmp4, 0x00000020) 
U6f51: tmp9:= READURAM( , 0x005c, 64) 
U6f52: tmp9:= NOTAND_DSZ64(tmp0, tmp9) 

U6f54: tmp4:= AND_DSZ64(tmp0, tmp4) 
U6f55: tmp9:= OR_DSZ64(tmp4, tmp9) 
U6f56: LFNCEMARK-> WRITEURAM(tmp9, 0x015c, 64) !m2 SEQW URET1

U6f58: tmp0:= ZEROEXT_DSZ32(0xffffffffffffffc0) 
U6f59: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0) 
U6f5a: tmp12:= CONCAT_DSZ16(0x00000200) 

U6f5c: tmp11:= OR_DSZ32(0x00000001, tmp12) 
U6f5d: tmp1:= SUB_DSZ64(0xffffffb0, tmp0) 
U6f5e: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp1, U5f28) 

U6f60: tmp11:= OR_DSZ32(0x00000002, tmp12) 
U6f61: tmp1:= SUB_DSZ64(0xff000000, tmp0) 
U6f62: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U5f28) 

U6f64: tmp11:= OR_DSZ32(0x00000003, tmp12) 
U6f65: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0) 
U6f66: tmp2:= ZEROEXT_DSZ32(0x5449465f) 

U6f68: tmp2:= CONCAT_DSZ32(0x2020205f, tmp2) 
check_cpumodel_matches:
U6f69: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U5f28, tmp1) !m2 
U6f6a: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, 0x00000008) 

U6f6c: tmp11:= OR_DSZ32(0x00000004, tmp12) 
U6f6d: tmp2:= SHR_DSZ64(tmp1, 0x00000018) 
U6f6e: tmp2:= BTR_DSZ32(tmp2, 0x0000001f) 

U6f70: tmp2:= SUB_DSZ32(0x00010000, tmp2) 
U6f71: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U5f28) 
U6f72: tmp11:= OR_DSZ32(0x00000005, tmp12) 

U6f74: tmp3:= ADD_DSZ32(0x00000000, tmp1) 
U6f75: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000000, U5f28) !m2 
U6f76: tmp11:= OR_DSZ32(0x00000006, tmp12) 

U6f78: tmp3:= SHL_DSZ32(tmp3, 0x00000004) 
U6f79: tmp3:= ADD_DSZ64(tmp3, tmp0) 
U6f7a: tmp2:= SUB_DSZ64(0xffffffc0, tmp3) 

U6f7c: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp2, U5f28) 
U6f7d: tmp9:= BTS_DSZ32(0x00000000, 0x0000001f) 
U6f7e: tmp10:= CONCAT_DSZ32(0x00000001) 

U6f80: tmp6:= PORTIN_DSZ64_ASZ16_SC1(0x4710) !m2 
U6f81: tmp6:= SHR_DSZ64(tmp6, 0x00000032) 
U6f82: tmp6:= AND_DSZ32(0x00000007, tmp6) 

U6f84: tmp0:= ADD_DSZ32(0x00000010, tmp0) 
U6f85: tmp1:= SUB_DSZ32(tmp3, tmp0) 
U6f86: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp1, U6312) 

U6f88: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, 0x00000008) 
U6f89: tmp2:= SHR_DSZ64(tmp1, 0x00000030) 
U6f8a: tmp2:= AND_DSZ32(0x0000007f, tmp2) 

U6f8c: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000001, U6f8d) !m1 SEQW GOTO U662a
U6f8d: tmp11:= OR_DSZ32(0x00000008, tmp12) 
U6f8e: tmp2:= SUB_DSZ32(0x0000007f, tmp2) 

U6f90: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U6f84) SEQW GOTO U6312
U6f91: tmp1:= AND_DSZ32(0x00000003, tmp1) 
U6f92: tmp2:= BT_DSZ16(tmp6, 0x00000009) 

U6f94: tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp2) 
U6f95: tmp2:= CMOVCC_DSZ32_CONDB(tmp1, 0x00000003) 
U6f96: tmp3:= MOVEINSERTFLGS_DSZ32(tmp2, 0x00000003) 

U6f98: tmp2:= CMOVCC_DSZ32_CONDB(tmp3, tmp2) 
U6f99: tmp3:= ADD_DSZ8(tmp2, 0x00000059) 
U6f9a: tmm1:= FPREADROM_DTYPENOP(tmp3) 

U6f9c: tmp4:= ADD_DSZ8(tmp2, 0x0000005d) 
U6f9d: tmm4:= FPREADROM_DTYPENOP(tmp4) 
U6f9e: tmp5:= ADD_DSZ8(tmp2, 0x00000061) 

U6fa0: tmm6:= FPREADROM_DTYPENOP(tmp5) 
U6fa1: tmm6:= unk_53f(tmm7, tmm6) 
U6fa2: mm0:= unk_7ea(tmm7) 

U6fa4: tmp0:= SUB_DSZ32(0x00000001, tmp0) 
U6fa5: tmm6:= unk_7c2(mm0, tmm6) 
U6fa6: tmp1:= PINTMOVDTMM2I_DSZ64(tmm7) 

U6fa8: tmp1:= SHL_DSZ64(tmp1, 0x00000001) 
U6fa9: tmp1:= NOTAND_DSZ64(0x00000000, tmp1) 
U6faa: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U055c) 

U6fac: mm3:= unk_76b(tmm7) 
U6fad: tmm1:= unk_743(mm3, tmm1) 
U6fae: tmm1:= unk_485(tmm1) 

U6fb0: mm5:= unk_7ea(tmm7) 
U6fb1: tmm1:= unk_7c2(mm5, tmm1) 
U6fb2: tmm0:= unk_68c(tmm7, tmm1) 

U6fb4: mm3:= unk_76a(tmm7) 
U6fb5: tmp3:= AND_DSZ8(0x00000010, tmp3) 
U6fb6: tmp8:= CMOVCC_DSZ16_CONDZ(tmp3, 0x00000001) 

U6fb8: tmm4:= unk_743(tmm0, tmm4) 
U6fb9: tmm4:= unk_482(tmm4) 
U6fba: mm5:= unk_7ea(tmm0) 

U6fbc: tmm4:= unk_7c2(mm5, tmm4) 
U6fbd: tmm0:= unk_688(tmm0, tmm4) 
U6fbe: tmp4:= MOVEFROMCREG_DSZ64( , 0x486) 

U6fc0: tmp5:= AND_DSZ16(0x00000010, tmp4) 
U6fc1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp5, U2a41) 
U6fc2: tmp5:= ZEROEXT_DSZ32(0x0000c001) 

U6fc4: tmm1:= unk_7c2(mm5, tmm0) 
U6fc5: tmm0:= unk_6aa(tmm0, tmm1) 
U6fc6: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000009, U5bb4) !m2 

U6fc8: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp6, U64a0) 
U6fc9: LFNCEMARK-> tmm0:= unk_6ee(tmm0) !m2 SEQW GOTO U64a0
U6fca: tmp0:= OR_DSZ32(tmp8, tmp0) 

U6fcc: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U778a) 
U6fcd: tmp10:= unk_6a0() 
U6fce: tmp11:= unk_6a0() 

U6fd0: tmp12:= FCOM2(tmp8, tmp10) 
U6fd1: tmp13:= FCOM2(tmp11, tmp8) 
U6fd2: mm0:= unk_76a(tmm4) 

U6fd4: mm1:= unk_76a(tmm5) 
U6fd5: tmp0:= AND_DSZ32(tmp1, tmp0) 
U6fd6: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U6dc4) 

U6fd8: tmm2:= unk_5be( , tmm0) 
U6fd9: tmm0:= unk_7a8(tmm0) 
U6fda: tmm3:= unk_649(tmm0, tmm2) 

U6fdc: tmm4:= unk_494( , tmm2) 
U6fdd: tmm4:= unk_649(tmm4, tmm0) 
U6fde: tmm3:= unk_649(tmm3, tmm3) 

U6fe0: mm0:= unk_7ea(tmm2) 
U6fe1: tmp0:= SUB_DSZ32(0x0000ffff, tmp0) 
U6fe2: tmp10:= unk_6a0() 

U6fe4: tmm3:= unk_666(tmm4, tmm3) 
U6fe5: tmm2:= unk_6e1(tmm2, tmm3) 
U6fe6: tmm4:= unk_6e1(tmm3, tmm3) 

U6fe8: tmp13:= unk_6a0() 
U6fe9: tmm0:= unk_6e1(tmm4, tmm5) 
U6fea: tmp13:= unk_6a0() 

U6fec: tmm0:= unk_649(tmm5, tmm0) 
U6fed: tmm0:= unk_6e1(tmm4, tmm0) 
U6fee: tmp13:= unk_6a0() 

U6ff0: tmm0:= unk_649(tmm5, tmm0) 
U6ff1: tmm5:= unk_704(mm0) 
U6ff2: tmm5:= unk_644(tmm5) 

U6ff4: tmm0:= unk_6e1(tmm4, tmm0) 
U6ff5: tmp0:= ADD_DSZ32(0x000000b5, tmp8) 
U6ff6: tmm4:= FPREADROM_DTYPENOP(tmp0) 

U6ff8: tmm5:= unk_649(tmm5, tmm4) 
U6ff9: tmm0:= unk_6e1(tmm0, tmm3) 
U6ffa: tmp0:= ADD_DSZ32(0x000000d5, tmp8) 

U6ffc: tmm3:= FPREADROM_DTYPENOP(tmp0) 
U6ffd: tmm0:= unk_649(tmm2, tmm0) 
U6ffe: tmp3:= ZEROEXT_DSZ32(0x00000010) 

U7000: tmm2:= unk_700(mm3) !m2 
U7001: tmm0:= unk_6c9(tmm3, tmm0) 
U7002: tmm0:= unk_6c9(tmm5, tmm0) 

U7004: LFNCEMARK-> tmm7:= unk_6a1(tmm0, tmm1) !m2 SEQW GOTO U01aa
U7005: tmp14:= READUIP_REGOVR(0x01) !m0 
U7006: MOVETOCREG_DSZ64(tmp2, 0x63a) 

U7008: tmp15:= AND_DSZ32(0x00000003, tmp8) 
U7009: tmp15:= SHR_DSZ32(0x0000000f, tmp15) 
U700a: MOVETOCREG_DSZ64(tmp15, 0x63e) 

U700c: tmp15:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U700d: tmp1:= OR_DSZ32(0x80000021, tmp1) 
U700e: tmp15:= AND_DSZ32(0x60000000, tmp15) 

U7010: tmp1:= AND_DSZ32(0x8005003f, tmp1) 
U7011: tmp15:= OR_DSZ32(tmp15, tmp1) 
U7012: MOVETOCREG_DSZ64(tmp15, 0x7f6) 

U7014: tmp4:= NOTAND_DSZ32(0xffca5800, tmp4) 
U7015: tmp4:= OR_DSZ32(0x00002000, tmp4) 
U7016: tmp15:= READURAM( , 0x005c, 64) 

U7018: tmp15:= BT_DSZ64(tmp15, 0x0000001a) 
U7019: tmp15:= SELECTCC_DSZ32_CONDB(tmp15, 0x00008000) 
U701a: tmp4:= NOTAND_DSZ32(tmp15, tmp4) 

U701c: tmp15:= READURAM( , 0x0035, 64) 
U701d: tmp15:= BT_DSZ64(tmp15, 0x00000029) 
U701e: tmp15:= SELECTCC_DSZ32_CONDB(tmp15, 0x00200000) 

U7020: tmp4:= NOTAND_DSZ32(tmp15, tmp4) 
U7021: tmp15:= READURAM( , 0x0077, 64) 
U7022: tmp15:= BT_DSZ64(tmp15, 0x0000002b) 

U7024: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00008000) 
U7025: tmp4:= NOTAND_DSZ32(tmp15, tmp4) 
U7026: tmp1:= SELECTCC_DSZ32_CONDZ(tmp13, 0x00000020) 

U7028: MOVETOCREG_DSZ64(tmp7, 0x529) 
U7029: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp4, 0x7c5, tmp1) 
U702a: tmp15:= MOVEFROMCREG_DSZ64( , 0x701) 

U702c: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U7030
U702d: WRSEGFLD(0x00000000) 
U702e: tmp15:= NOTAND_DSZ64(0xc0000000, tmp15) 

U7030: tmp12:= READURAM( , 0x005c, 64) 
U7031: tmp12:= AND_DSZ32(0x00040000, tmp12) 
U7032: tmp15:= NOTAND_DSZ64(0x00040000, tmp15) 

U7034: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp15, 0x701, tmp12) 
U7035: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U7039
U7036: MOVETOCREG_DSZ64( , 0x00000000, 0x7f9, 32) !m1 

U7038: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x7f8) 
U7039: TESTUSTATE( , UCODE, 0x00a0) ? SEQW URET1
U703a: tmp12:= WRMSLOOPCTRFBR(0x00000003) 

U703c: tmp2:= NOTAND_DSZ32(0x0000001f, tmp7) 
U703d: tmp3:= ZEROEXT_DSZ32(0x00000540) 
U703e: tmp4:= READURAM( , 0x0010, 64) 

U7040: tmp4:= ZEROEXT_DSZ16(0x000001e6, tmp4) 
U7041: LFNCEWAIT-> tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2) 
U7042: tmp2:= ZEROEXT_DSZ64(tmp2, tmp1) SEQW GOTO U57ea

U7044: tmp11:= ZEROEXT_DSZ32(0x00000008) 
U7045: tmp2:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U7046: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000a, U294c) !m0,m1 

U7048: tmp11:= ZEROEXT_DSZ32(0x00000009) 
U7049: tmp2:= PORTIN_DSZ64_ASZ16_SC1(0x4710) !m2 
U704a: tmp2:= SHR_DSZ64(tmp2, 0x00000032) 

U704c: tmp2:= AND_DSZ32(0x00000007, tmp2) 
U704d: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000044) 
U704e: BTUJNB_DIRECT_NOTTAKEN(tmp1, U294c, tmp2) !m1 

U7050: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000010) 
U7051: tmp11:= ZEROEXT_DSZ32(0x0000000a) 
U7052: tmp4:= READURAM( , 0x0034, 64) 

U7054: tmp4:= SHR_DSZ64(tmp4, 0x00000020) 
U7055: tmp2:= SUB_DSZ32(tmp4, tmp2) 
U7056: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp2, U294c) 

U7058: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x0000000c) 
U7059: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000001f, U705a) !m0,m1,m2 SEQW GOTO U7070
U705a: tmp0:= READURAM( , 0x0053, 64) 

U705c: tmp0:= OR_DSZ32(0x00000020, tmp0) 
U705d: tmp0:= WRITEURAM(tmp0, 0x0053, 32) 
U705e: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 

U7060: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000000a, U7064) !m0,m1,m2 
U7061: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x8404) !m2 
U7062: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U294c) !m1 

U7064: tmp11:= ZEROEXT_DSZ32(0x0000000b) 
U7065: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U7066: tmp2:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 

U7068: tmp0:= SHR_DSZ32(tmp1, 0x00000010) 
U7069: tmp0:= NOTAND_DSZ32(tmp2, tmp0) 
U706a: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U294c) !m1 

U706c: TESTUSTATE( , SYS, !0xc000) !m0,m1 ? SEQW GOTO U7070
U706d: tmp11:= ZEROEXT_DSZ32(0x0000000c) 
U706e: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U294c) !m0,m1 

U7070: tmp1:= ADD_DSZN(0x00000024, tmp14) !m1 
U7071: ROVR<- tmp10:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U7072SEQW GOTO U0be9
U7072: tmp5:= ZEROEXT_DSZ32(0x00000001) 

U7074: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U7075: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp1) 
U7076: tmp2:= SUB_DSZ32(tmp3, tmp2) 

U7078: tmp2:= SELECTCC_DSZ32_CONDNZ(tmp2, tmp5) 
U7079: tmp10:= OR_DSZ32(tmp2, tmp10) 
U707a: tmp5:= ADD_DSZ32(tmp5, tmp5) 

U707c: tmp1:= ADD_DSZN(0x00000004, tmp1) !m1 
U707d: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U7075
U707e: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000001a0) 

U7080: tmp0:= CONCAT_DSZ32(tmp10, tmp0) 
U7081: STADSTGBUF_DSZ64_ASZ16_SC1(0x000001a0,  , tmp0) 
U7082: tmp4:= ADD_DSZ64(0x00000284, tmp14) SEQW GOTO U1f7c

U7084: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U7085: PORTOUT_DSZ32_ASZ16_SC1(0x005c,  , tmp15) !m2 
U7086: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x005c) !m2 

U7088: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U7086) !m1,m2 
U7089: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U708a: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U708c) !m0,m1,m2 SEQW GOTO U7089

U708c: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U708d: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U708e: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U7090: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U7091: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U7092: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U7094: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7095) !m0,m1,m2 SEQW GOTO U7092
U7095: tmp15:= SHR_DSZ64(tmpv0, 0x00000030) 
U7096: tmp15:= CONCAT_DSZ8(0x00000007, tmp15) 

U7098: tmp15:= CONCAT_DSZ16(0x000041c0, tmp15) 
U7099: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U709a: tmp15:= ZEROEXT_DSZ32(0x00000007) 

U709c: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U709d: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U709e: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U70a0: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U70a1) !m0,m1,m2 SEQW GOTO U709e
U70a1: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U70a2: tmp15:= ADD_DSZ32(0x00000010, tmp15) 

U70a4: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U70a5: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U70a6: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 

U70a8: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U70a9: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U70aa: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U70ac) !m0,m1,m2 SEQW GOTO U70a9

U70ac: tmp15:= ZEROEXT_DSZ64(tmpv1) 
U70ad: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 
U70ae: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U70b0: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U70b1: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U70b2: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U70b4: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U70b5: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U70b6) !m0,m1,m2 SEQW GOTO U70b4
U70b6: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 

U70b8: tmp15:= ADD_DSZ32(0x00000004, tmp15) 
U70b9: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U70ba: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U70bc: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U70bd: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U70be: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U70c0: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U70c1) !m0,m1,m2 SEQW GOTO U70be
U70c1: tmp15:= ZEROEXT_DSZ64(tmpv0) 
U70c2: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 

U70c4: tmp15:= ROR_DSZ32(tmp15, 0x00000010) 
U70c5: tmp15:= OR_DSZ32(0x000000ff, tmp15) SEQW GOTO U7372
U70c6: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x0000027c, tmp11) 

U70c8: tmp9:= MOVEFROMCREG_DSZ64( , 0x008) 
U70c9: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000280, tmp9) 
U70ca: tmp9:= MOVEFROMCREG_DSZ64( , 0x070) 

U70cc: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x0000027e, tmp9) 
U70cd: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000005, U70ce) !m1,m2 SEQW GOTO U70d4
U70ce: tmp9:= MOVEFROMCREG_DSZ64( , 0x105) 

U70d0: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000278, tmp9) 
U70d1: tmp9:= NOTAND_DSZ32(0x00004000, tmp9) 
U70d2: MOVETOCREG_DSZ64(tmp9, 0x105) 

U70d4: MOVETOCREG_DSZ64( , 0x00000000, 0x20f, 32) !m1,m2 
U70d5: LFNCEWAIT-> WRSEGFLD(tmp4, DS_16bit, BASE) 
U70d6: tmp9:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 

U70d8: WRSEGFLD(tmp9, DS_16bit, SEL+FLGS+LIM) 
U70d9: tmp9:= ZEROEXT_DSZ32(0x00008093) 
U70da: tmp9:= SHL_DSZ32(tmp9, 0x00000010) 

U70dc: tmp9:= CONCAT_DSZ32(0xffffffffffffffff, tmp9) 
U70dd: WRSEGFLD(tmp9, UNK_SEG_04, SEL+FLGS+LIM) 
U70de: WRSEGFLD(tmp9, DS, SEL+FLGS+LIM) 

U70e0: WRSEGFLD(tmp9, FS, SEL+FLGS+LIM) 
U70e1: WRSEGFLD(tmp9, ES, SEL+FLGS+LIM) 
U70e2: WRSEGFLD(tmp9, GS, SEL+FLGS+LIM) 

U70e4: WRSEGFLD(tmp9, SS_USERM, SEL+FLGS+LIM) 
U70e5: WRSEGFLD(tmp9, SS, SEL+FLGS+LIM) 
U70e6: MOVE_DSZ32() 

U70e8: tmp10:= SHR_DSZ32(tmp4, 0x00000004) 
U70e9: tmp10:= CONCAT_DSZ16(0x0000809b, tmp10) 
U70ea: tmp10:= CONCAT_DSZ32(0xffffffffffffffff, tmp10) 

U70ec: WRSEGFLD(0x00000000, DS, BASE) 
U70ed: WRSEGFLD(0x00000000, ES, BASE) 
U70ee: WRSEGFLD(0x00000000, FS, BASE) 

U70f0: WRSEGFLD(0x00000000, GS, BASE) 
U70f1: WRSEGFLD(0x00000000, SS_USERM, BASE) 
U70f2: WRSEGFLD(0x00000000, SS, BASE) 

U70f4: MOVETOCREG_DSZ64(tmp9, 0x73c) !m2 
U70f5: WRSEGFLD(tmp4, UNK_SEG_09, BASE) 
U70f6: WRSEGFLD(tmp4, CS, BASE) 

U70f8: WRSEGFLD(tmp10, UNK_SEG_09, FLGS) 
U70f9: WRSEGFLD(tmp10, CS, SEL+FLGS+LIM) 
U70fa: MOVETOCREG_SHR_DSZ64(tmp10, 0x00000010, 0x7f5) !m2 

U70fc: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x79e) 
U70fd: tmp9:= SUB_DSZ32(0x00000001) 
U70fe: MOVETOCREG_DSZ64(tmp9, 0x410) 

U7100: MOVETOCREG_DSZ64( , 0x00000000, 0x700) 
U7101: SYNCMARK-> MOVETOCREG_DSZ64(tmp4, 0x78e) 
U7102: tmp11:= OR_DSZ32(0x00003e14, tmp11) 

U7104: tmp10:= TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U1e00
U7105: tmp9:= READURAM( , 0x005c, 64) !m2 
U7106: tmp9:= NOTAND_DSZ32(tmp9, 0x00000800) 

U7108: tmp11:= NOTAND_DSZ32(tmp9, tmp11) SEQW GOTO U1e01
U7109: tmp11:= unk_6a0() 
U710a: tmp12:= unk_6a0() 

U710c: tmm2:= unk_495(tmm1, tmm4) 
U710d: tmp5:= ZEROEXT_DSZ32(0x0000ffff) 
U710e: tmm2:= unk_7c2(mm5, tmm2) 

U7110: tmm3:= unk_7c2(mm5, tmm3) 
U7111: tmm2:= unk_6e1(tmm2, tmm3) 
U7112: tmm2:= unk_7c2( , tmm2) 

U7114: tmm1:= unk_68c(tmm1, tmm2) 
U7115: tmp11:= unk_6a0() 
U7116: tmp12:= unk_6a0() 

U7118: tmm2:= unk_495(tmm1, tmm4) 
U7119: tmm2:= unk_7c2(mm5, tmm2) 
U711a: tmm3:= unk_7c2(mm5, tmm3) 

U711c: tmm2:= unk_6e1(tmm2, tmm3) 
U711d: tmm2:= unk_7c2( , tmm2) 
U711e: tmm1:= unk_68c(tmm1, tmm2) 

U7120: tmp1:= AND_DSZ32(0x000000f0, tmp0) 
U7121: tmp2:= SHR_DSZ32(tmp1, 0x00000003) 
U7122: tmp3:= SHR_DSZ32(tmp1, 0x00000002) 

U7124: tmp1:= ADD_DSZ32(tmp3, tmp2) 
U7125: tmp3:= SUB_DSZ32(tmp1, tmp0) 
U7126: tmp11:= unk_6a0() 

U7128: tmp12:= unk_6a0() 
U7129: tmm2:= unk_495(tmm1, tmm4) 
U712a: tmm2:= unk_7c2(mm5, tmm2) 

U712c: tmm3:= unk_7c2(mm5, tmm3) 
U712d: tmm2:= unk_6e1(tmm2, tmm3) 
U712e: tmm2:= unk_7c2( , tmm2) 

U7130: tmm1:= unk_68c(tmm1, tmm2) 
U7131: tmp11:= unk_6a0() 
U7132: tmp12:= unk_6a0() 

U7134: tmm2:= unk_495(tmm1, tmm4) 
U7135: tmm2:= unk_7c2(mm5, tmm2) 
U7136: tmm3:= unk_7c2(mm5, tmm3) 

U7138: tmm2:= unk_6e1(tmm2, tmm3) 
U7139: tmm2:= unk_7c2( , tmm2) 
U713a: tmm1:= unk_68c(tmm1, tmm2) 

U713c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U713d) SEQW GOTO U7148
U713d: tmp3:= SHL_DSZ64(tmp3, 0x00000035) 
U713e: tmm5:= unk_744(mm3) 

U7140: tmp11:= unk_6a0() 
U7141: tmm5:= unk_7c2(mm5, tmm5) 
U7142: tmm3:= unk_7c2(mm5, tmm3) 

U7144: tmm2:= unk_6e1(tmm5, tmm3) 
U7145: tmm2:= unk_7c2( , tmm2) 
U7146: tmm1:= unk_688(tmm1, tmm2) 

U7148: tmp5:= ZEROEXT_DSZ32(0x0001003e) 
U7149: tmm1:= unk_7c2(mm5, tmm1) 
U714a: tmp3:= SHR_DSZ32(tmp6, 0x0000000f) 

U714c: tmm1:= unk_702(mm3, tmm1) 
U714d: tmm1:= unk_69d( , tmm1) 
U714e: mm7:= FMOV( , tmm1) !m0 SEQW GOTO U1bd0

U7150: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000001c0) 
U7151: SAVEUIP_REGOVR(0x01, U7152, 0x0008) !m0 SEQW GOTO U32cd
U7152: MOVETOCREG_DSZ64(tmp2, 0x383, 32) !m1 

U7154: tmp2:= MOVETOCREG_SHR_DSZ64(tmp2, 0x00000008, 0x384) !m1 
U7155: tmp2:= MOVETOCREG_SHR_DSZ64(tmp2, 0x00000008, 0x10c) 
U7156: tmp8:= AND_DSZ64(0x00000100, tmp2) 

U7158: tmp7:= MOVEFROMCREG_DSZ64( , 0x692) 
U7159: tmp7:= NOTAND_DSZ64(0x00000100, tmp7) 
U715a: tmp7:= MOVETOCREG_OR_DSZ64(tmp7, 0x692, tmp8) 

U715c: MOVETOCREG_SHR_DSZ64(tmp2, 0x00000010, 0x7f6) 
U715d: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000200) 
U715e: MOVETOCREG_DSZ64(tmp8, 0x3f0, 32) !m1 

U7160: MOVETOCREG_SHR_DSZ64(tmp8, 0x00000008, 0x3f1) !m1 
U7161: MOVETOCREG_SHR_DSZ64(tmp8, 0x00000010, 0x3f2) !m1 
U7162: MOVETOCREG_SHR_DSZ64(tmp8, 0x00000018, 0x3f3) !m1 

U7164: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000080) 
U7165: MOVETOCREG_DSZ64(tmp1, 0x574) 
U7166: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000a0) 

U7168: MOVETOCREG_DSZ64(tmp1, 0x575) 
U7169: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000c0) 
U716a: MOVETOCREG_DSZ64(tmp1, 0x562) 

U716c: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000e0) 
U716d: MOVETOCREG_DSZ64(tmp1, 0x563) 
U716e: SAVEUIP_REGOVR(0x01, U7170, 0x0008) !m0 SEQW GOTO U2b0d

U7170: tmp0:= ZEROEXT_DSZ32(0x00000080) 
U7171: tmp1:= ZEROEXT_DSZ32(0x000002df) 
U7172: SAVEUIP( , 0x00, U027a) SEQW SAVEUIP1 U7174SEQW GOTO U18b6

U7174: MOVETOCREG_SHR_DSZ64(tmp8, 0x00000020, 0x39e) !m1 
U7175: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000001e0) 
U7176: MOVETOCREG_DSZ64(tmp8, 0x104) 

U7178: MOVETOCREG_BTS_DSZ64( , 0x0000001f, 0x29d) !m0,m1 
U7179: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
U717a: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x000) 

U717c: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000001a0) 
U717d: unk_13f(tmp8) !m2 
U717e: MOVETOCREG_DSZ64(tmp8, 0x7fe) 

U7180: tmp8:= MOVEFROMCREG_DSZ64( , 0x51b) 
U7181: MOVETOCREG_BTR_DSZ64(tmp8, 0x51b) 
U7182: tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 

U7184: tmp2:= AND_DSZ32(0x00070000, tmp2) 
U7185: tmp0:= READURAM( , 0x005c, 64) 
U7186: tmp0:= BT_DSZ64(tmp0, 0x00000010) 

U7188: tmp2:= SELECTCC_DSZ32_CONDB(tmp0, tmp2) 
U7189: tmp0:= ZEROEXT_DSZ32(0x00000012) 
U718a: tmp0:= CONCAT_DSZ16(0x00000100, tmp0) 

U718c: SYNCFULL-> CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000000, U3d0c) !m1,m2 
U718d: tmp12:= READURAM( , 0x0047, 64) 
U718e: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U30da

U7190: tmp8:= READURAM( , 0x005c, 64) 
U7191: tmp8:= BT_DSZ32(tmp8, 0x00000007) 
U7192: tmp8:= MOVEMERGEFLGS_DSZ32(0x000000b1, tmp8) 

U7194: tmp12:= CMOVCC_DSZ32_CONDB(tmp8, tmp12) SEQW GOTO U3c11
U7195: tmm0:= unk_72f(tmm1) 
U7196: tmp15:= AND_DSZ32(0x7ffff000, tmp8) 

U7198: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U3380) 
U7199: tmp9:= AND_DSZ32(0x000007ff, tmp8) 
U719a: tmp15:= unk_3e5(0x00000001, tmp9) 

U719c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U3380) 
U719d: tmp15:= unk_3e5(0x00000004, tmp9) 
U719e: tmp15:= unk_3e5(0x00000002, tmp15) 

U71a0: tmp8:= MOVEMERGEFLGS_DSZ64(tmp8, tmp15) 
U71a1: tmp15:= unk_3e5(0x00000002, tmp9) 
U71a2: tmp0:= SUB_DSZ8(tmp9, 0x00000002) 

U71a4: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, tmp0) 
U71a5: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000000, U3380) !m1,m2 
U71a6: tmp0:= ZEROEXT_DSZ8(tmp9) 

U71a8: tmp15:= unk_3e5(0x00000007, tmp9) 
U71a9: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U71ac
U71aa: tmp0:= OR_DSZ32(0x00000001, tmp0) 

U71ac: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, tmp0) 
U71ad: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000000, U3380) !m1,m2 
U71ae: tmp0:= SUB_DSZ8(0x00000008, tmp9) 

U71b0: tmp5:= SETCC_CONDZ(tmp0) 
U71b1: tmp0:= SUB_DSZ8(0x0000000a, tmp9) 
U71b2: tmp0:= SUB_DSZ8(0x00000004, tmp0) 

U71b4: tmp0:= SETCC_CONDBE(tmp0) 
U71b5: tmp5:= OR_DSZ32(tmp0, tmp5) 
U71b6: tmp0:= SUB_DSZ8(0x00000011, tmp9) 

U71b8: tmp0:= SETCC_CONDZ(tmp0) 
U71b9: tmp5:= OR_DSZ32(tmp0, tmp5) 
U71ba: tmp15:= unk_3e5(0x00000003, tmp9) 

U71bc: tmp0:= SELECTCC_DSZ32_CONDNZ(tmp15, tmp9) 
U71bd: tmp0:= AND_DSZ8(0xffffffffffffffe0, tmp0) 
U71be: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U3380) 

U71c0: tmp5:= SELECTCC_DSZ32_CONDNZ(tmp15, tmp5) 
U71c1: tmp9:= AND_DSZ32(0x00000800, tmp8) 
U71c2: tmp9:= SHR_DSZ32(tmp9, 0x0000000b) 

U71c4: tmp0:= SELECTCC_DSZ32_CONDZ(tmp15, tmp9) 
U71c5: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U3380) !m1,m2 
U71c6: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U71cd

U71c8: tmp15:= NOTAND_DSZ32(tmp10, 0x00000001) 
U71c9: tmp3:= BT_DSZ64(tmp3, 0x00000027) 
U71ca: tmp15:= SELECTCC_DSZ64_CONDNB(tmp3, tmp15) 

U71cc: tmp5:= NOTAND_DSZ32(tmp15, tmp5) 
U71cd: CMPUJNZ_DIRECT_NOTTAKEN(tmp5, U3380, tmp9) !m1,m2 
U71ce: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000100, tmp12) 

U71d0: tmp5:= SELECTCC_DSZ32_CONDZ(tmp9, tmp5) 
U71d1: tmp15:= AND_DSZ32(0xffff0000, tmp5) 
U71d2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U3380) 

U71d4: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000002c8, tmp12) 
U71d5: tmp15:= SUB_DSZ32(0x0000000f, tmp0) 
U71d6: tmp15:= SETCC_CONDNBE(tmp15) 

U71d8: tmp15:= SELECTCC_DSZ32_CONDNBE(tmp8, tmp15) 
U71d9: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000000, U3380) !m1,m2 
U71da: LFNCEMARK-> tmp0:= SELECTCC_DSZ32_CONDNBE(tmp8, tmp0) 

U71dc: tmp0:= CONCAT_DSZ16(tmp0, tmp5) 
U71dd: WRITEURAM(tmp0, 0x000a, 64) !m2 SEQW GOTO U728a
U71de: LFNCEMARK-> tmp4:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000020, 0x48c) !m2 

U71e0: tmp1:= AND_DSZ32(0x00000020, tmp5) 
U71e1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U71e2) SEQW GOTO U71e5
U71e2: tmp1:= OR_DSZ16(0x00008080, tmp4) 

U71e4: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x48c) 
U71e5: tmm4:= unk_496(tmm1, tmm1) 
U71e6: tmm5:= unk_496(tmm0, tmm0) 

U71e8: tmp15:= FCOM2(tmp12, tmp13) 
U71e9: tmm2:= unk_496(tmm0, tmm1) 
U71ea: tmm1:= unk_72a(tmm2) 

U71ec: mm7:= unk_76a(tmm7) 
U71ed: tmp7:= MOVEINSERTFLGS_DSZ32(tmp7) 
U71ee: tmp1:= SELECTCC_DSZ32_CONDBE(tmp7, 0x00000001) 

U71f0: tmp9:= XOR_DSZ32(tmp1, tmp9) 
U71f1: tmm4:= unk_57f(tmm7, tmm4) 
U71f2: tmm3:= unk_487(tmm4, tmm5) 

U71f4: tmm2:= unk_486(tmm4, tmm5) 
U71f5: mm0:= unk_7ea(tmm2) 
U71f6: tmp0:= ADD_DSZ32(0x00000005, tmp0) 

U71f8: tmm4:= unk_7c2(mm0, tmm2) 
U71f9: tmm4:= unk_6a7(tmm3, tmm4) 
U71fa: mm6:= unk_76a(tmm4) 

U71fc: tmm4:= unk_69d( , tmm4) 
U71fd: mm0:= unk_7ea(tmm3) 
U71fe: tmp0:= SUB_DSZ32(0x00000001, tmp0) 

U7200: tmm6:= unk_7c2(mm0, tmm3) 
U7201: tmp13:= FCOM2(tmp14, tmp12) 
U7202: tmm6:= unk_494( , tmm3) 

U7204: tmm6:= unk_6c9(tmm4, tmm6) 
U7205: mm1:= unk_76a(tmm5) 
U7206: tmm5:= unk_743(mm1, tmm4) 

U7208: tmm4:= unk_483(tmm5, tmm6) 
U7209: tmp1:= AND_DSZ32(0x00000001, tmp1) 
U720a: tmp6:= ADD_DSZ32(tmp1, tmp6) 

U720c: tmp0:= SUB_DSZ32(0x00000002, tmp6) 
U720d: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp0, U720e) SEQW GOTO U6e22
U720e: tmm4:= unk_702(tmm1) 

U7210: tmm2:= unk_496(tmm2, tmm4) 
U7211: tmm5:= unk_6e6(tmm3, tmm2) 
U7212: mm0:= unk_7ea(tmm5) 

U7214: tmp0:= SUB_DSZ32(0x0000ffd7, tmp0) 
U7215: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp0, U5c74) 
U7216: tmm2:= unk_661(tmm5, tmm5) 

U7218: tmm3:= unk_6e1(tmm2, tmm2) 
U7219: tmp15:= unk_6a0() 
U721a: tmp14:= unk_6a0() 

U721c: tmm4:= unk_6e1(tmm3, tmm7) 
U721d: tmp15:= unk_6a0() 
U721e: tmm6:= unk_6e1(tmm3, tmm6) 

U7220: tmm4:= unk_649(tmm7, tmm4) 
U7221: tmp15:= unk_6a0() 
U7222: tmm6:= unk_649(tmm7, tmm6) 

U7224: tmm4:= unk_6e1(tmm3, tmm4) 
U7225: tmp15:= unk_6a0() 
U7226: tmm6:= unk_6e1(tmm3, tmm6) 

U7228: tmm4:= unk_6c9(tmm7, tmm4) 
U7229: tmp15:= unk_6a0() 
U722a: tmm6:= unk_6c9(tmm7, tmm6) 

U722c: tmm4:= unk_6e1(tmm4, tmm2) 
U722d: tmm7:= unk_6e1(tmm5, tmm2) 
U722e: tmm4:= unk_649(tmm4, tmm6) 

U7230: tmm4:= unk_6e1(tmm7, tmm4) SEQW GOTO U6e48
U7231: tmp0:= ZEROEXT_DSZ32(0x00000000) 
U7232: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000100, mode=0x01, tmp8, 0x00000000) 

U7234: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000108, mode=0x01, tmp8, 0x00000000) 
U7235: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000110, mode=0x01, tmp8, 0x00000000) 
U7236: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000080) 

U7238: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000118, mode=0x01, tmp8, tmp0) 
U7239: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000a0) 
U723a: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000120, mode=0x01, tmp8, tmp0) 

U723c: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000c0) 
U723d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000128, mode=0x01, tmp8, tmp0) 
U723e: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000e0) 

U7240: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000130, mode=0x01, tmp8, tmp0) 
U7241: tmp0:= ZEROEXT_DSZ32(0x00000001) 
U7242: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000010, mode=0x01, tmp8, tmp0) 

U7244: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000140,  , tmp0) 
U7245: LFNCEMARK-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U7246: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 

U7248: MOVETOCREG_DSZ64( , 0x00000000, 0x7f8) !m2 
U7249: MOVETOCREG_DSZ64( , 0x00000000, 0x7f9, 32) !m1,m2 
U724a: tmp0:= CONCAT_DSZ32(tmp1, tmp0) 

U724c: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000040,  , tmp0) 
U724d: tmp0:= MOVEFROMCREG_DSZ64( , 0x20f, 32) !m1 
U724e: MOVETOCREG_DSZ64( , 0x00000000, 0x20f, 32) !m1,m2 

U7250: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000020,  , tmp0) 
U7251: tmp0:= READURAM( , 0x005c, 64) 
U7252: tmp1:= AND_DSZ32(0x00002000, tmp0) 

U7254: tmp0:= OR_DSZ32(0x00002000, tmp0) 
U7255: WRITEURAM(tmp0, 0x005c, 32) !m2 
U7256: tmp0:= MOVEFROMCREG_DSZ64( , 0x105) 

U7258: MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000f, 0x105) !m0,m2 
U7259: tmp0:= AND_DSZ32(0x00008000, tmp0) 
U725a: tmp1:= OR_DSZ32(tmp0, tmp1) 

U725c: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c6) 
U725d: tmp0:= OR_DSZ32(tmp1, tmp0) 
U725e: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f1) 

FUN_ucode_0007260:
U7260: MOVETOCREG_DSZ64( , 0x00000000, 0x7f1) !m2 
U7261: tmp0:= CONCAT_DSZ32(tmp1, tmp0) 
FUN_ucode_0007262:
U7262: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000060,  , tmp0) 

U7264: tmp0:= READURAM( , 0x001b, 64) 
U7265: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000160,  , tmp0) 
U7266: tmp13:= READURAM( , 0x0070, 64) 

U7268: STADSTGBUF_DSZ64_ASZ16_SC1( , tmp13) 
U7269: tmp13:= OR_DSZ64(0x000000e2, tmp13) SEQW SAVEUIP0 U726aSEQW GOTO U5741
U726a: tmp0:= ZEROEXT_DSZ32(0x00000000) 

U726c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(mode=0x01, tmp8, tmp0) 
U726d: tmp0:= ZEROEXT_DSZ32(0x00000001) 
U726e: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000008, mode=0x01, tmp8, tmp0) 

U7270: tmp1:= ADD_DSZ64(0x00000040, tmp8) SEQW SAVEUIP0 U7271SEQW GOTO U318e
U7271: tmp6:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000034, mode=0x01) 
U7272: tmp6:= ADD_DSZ64(tmp6, tmp2) 

U7274: tmp13:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000024, mode=0x01) 
U7275: tmp6:= ADD_DSZ64(tmp13, tmp6) 
U7276: tmp0:= ZEROEXT_DSZ32(0x00000003) 

U7278: MOVETOCREG_DSZ64(tmp0, 0x7c6) !m2 
U7279: tmp0:= READURAM( , 0x0053, 64) 
U727a: tmp0:= BTS_DSZ64(tmp0, 0x00000006) 

U727c: WRITEURAM(tmp0, 0x0053, 64) !m2 
U727d: MOVETOCREG_BTS_DSZ64( , 0x00000008, 0x007) !m2 
U727e: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x78e) 

U7280: unk_13f() !m2 
U7281: MOVETOCREG_DSZ64( , 0x00000000, 0x7fe) 
U7282: rdi:= NOTAND_DSZ64(0x000000ff, tmp8) 

U7284: rsp:= ADD_DSZ64(0x00001000, rdi) SEQW GOTO U19c6
U7285: tmp11:= ZEROEXT_DSZ64(tmp13) 
U7286: tmp3:= ZEROEXT_DSZ64(tmp0) 

U7288: tmm2:= unk_76f(tmm7) 
U7289: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U7195
U728a: LFNCEMARK-> WRITEURAM(tmp3, 0x0043, 64) !m2 

U728c: tmp15:= MOVE_DSZ32(0x00005f95) 
U728d: WRITEURAM(tmp15, 0x002c, 32) !m2 
U728e: tmp0:= ZEROEXT_DSZ64(tmp3) 

U7290: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U7294
U7291: tmp1:= READURAM( , 0x004c, 64) 
U7292: tmp0:= OR_DSZ64(tmp1, tmp3) 

U7294: WRITEURAM(tmp12, 0x000b, 64) !m2 
U7295: tmp15:= SHR_DSZ32(tmp0, 0x00000001) 
U7296: tmp9:= AND_DSZ32(0x00000002, tmp15) 

U7298: tmp15:= READURAM( , 0x004a, 64) !m2 
U7299: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 
U729a: tmp9:= OR_DSZ32(tmp15, tmp9) 

U729c: tmp15:= SHR_DSZ32(tmp0, 0x00000018) 
U729d: tmp15:= AND_DSZ32(0x00000008, tmp15) 
U729e: tmp9:= OR_DSZ32(tmp15, tmp9) 

U72a0: tmp5:= SHR_DSZ64(tmp0, 0x00000037) 
U72a1: tmp15:= AND_DSZ32(0x00000001, tmp5) 
U72a2: tmp9:= OR_DSZ32(tmp15, tmp9) 

U72a4: tmp15:= SHR_DSZ32(tmp0, 0x00000014) 
U72a5: tmp15:= AND_DSZ32(0x00000004, tmp15) 
U72a6: tmp9:= OR_DSZ32(tmp15, tmp9) 

U72a8: WRITEURAM(tmp9, 0x0078, 32) !m2 
U72a9: tmp9:= READURAM( , 0x0070, 64) 
U72aa: tmp15:= AND_DSZ32(0x00000020, tmp5) 

U72ac: tmp15:= SHL_DSZ32(tmp15, 0x00000005) 
U72ad: tmp9:= NOTAND_DSZ64(tmp15, tmp9) 
U72ae: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U72c0

U72b0: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000025c, tmp11) 
U72b1: tmp15:= AND_DSZ32(0x001fffff, tmp15) 
U72b2: tmp13:= SHL_DSZ64(tmp15, 0x0000002a) 

U72b4: tmp15:= OR_DSZ64(tmp13, tmp15) 
U72b5: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U72b9
U72b6: tmp13:= READURAM( , 0x0014, 64) 

U72b8: tmp15:= OR_DSZ64(tmp15, tmp13) 
U72b9: LFNCEWAIT-> WRITEURAM(tmp15, 0x0014, 64) 
U72ba: tmp15:= BT_DSZ64(tmp6, 0x0000000a) 

U72bc: tmp15:= SELECTCC_DSZ32_CONDB(tmp15, 0x00001000) 
U72bd: ROVR<- tmp9:= NOTAND_DSZ64(tmp15, tmp9) SEQW SAVEUIP1 U72beSEQW GOTO U5751
U72be: tmp14:= READURAM( , 0x0010, 64) 

U72c0: tmp13:= ZEROEXT_DSZ32(0x00000037) 
U72c1: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp13, 0x00b) 
U72c2: tmp13:= AND_DSZ32(0x00000200, tmp6) 

U72c4: WRITEURAM(tmp9, 0x004f, 64) 
U72c5: tmp1:= READURAM( , 0x0057, 64) 
U72c6: WRITEURAM(tmp11, 0x0057, 64) !m2 

U72c8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b8, tmp12, tmp1) 
U72c9: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000218, tmp12) 
U72ca: WRITEURAM(tmp0, 0x0046, 64) !m2 

U72cc: tmp10:= BT_DSZ64(tmp10, 0x0000001f) 
U72cd: tmp1:= SETCC_CONDNB(tmp10) 
U72ce: tmp2:= SELECTCC_DSZ64_CONDNZ(tmp13, tmp3) 

U72d0: tmp2:= SHR_DSZ64(tmp2, 0x00000027) 
U72d1: tmp1:= AND_DSZ32(tmp2, tmp1) 
U72d2: tmp2:= ZEROEXT_DSZ32(0x80000021) 

U72d4: tmp2:= CONCAT_DSZ32(0xffffffffffffffff, tmp2) 
U72d5: tmp2:= NOTAND_DSZ64(tmp1, tmp2) 
U72d6: tmp1:= MOVEMERGEFLGS_DSZ32(0x00000020, tmp1) 

U72d8: tmp1:= CMOVCC_DSZ32_CONDNZ(tmp1, 0x80000021) 
U72d9: tmp2:= AND_DSZ64(tmp10, tmp2) 
U72da: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U5f95, tmp1) !m2 

U72dc: LFNCEMARK-> tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000a8, tmp12) 
U72dd: MOVETOCREG_DSZ64(tmp5, 0x529) 
U72de: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U6c59

U72e0: SAVEUIP_REGOVR(0x01, U72e1, 0x0721) !m0 
U72e1: tmp7:= SAVEUIP(tmp5, 0x00, U66e1) 
U72e2: SAVEUIP( , 0x01, U6018) !m0 SEQW GOTO U5d54

U72e4: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U72e5: PORTOUT_DSZ32_ASZ16_SC1(0x005c,  , tmp15) !m2 
U72e6: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x005c) !m2 

U72e8: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U72e6) !m1,m2 
U72e9: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U72ea: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U72ec) !m0,m1,m2 SEQW GOTO U72e9

U72ec: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U72ed: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U72ee: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U72f0: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U72f1: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U72f2: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U72f4: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U72f5) !m0,m1,m2 SEQW GOTO U72f2
U72f5: tmp15:= SHR_DSZ64(tmpv0, 0x00000030) 
U72f6: tmp15:= CONCAT_DSZ8(0x00000006, tmp15) 

U72f8: tmp15:= CONCAT_DSZ16(0x000000c0, tmp15) 
U72f9: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U72fa: tmp15:= ZEROEXT_DSZ32(0x00000007) 

U72fc: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U72fd: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U72fe: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U7300: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7301) !m0,m1,m2 SEQW GOTO U72fe
U7301: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U7302: tmp15:= ADD_DSZ32(0x00000004, tmp15) 

U7304: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U7305: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U7306: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 

U7308: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U7309: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U730a: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U730c) !m0,m1,m2 SEQW GOTO U7309

U730c: tmp15:= ZEROEXT_DSZ64(tmpv0) 
U730d: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 
U730e: tmp15:= ROR_DSZ32(tmp15, 0x00000010) 

U7310: tmp15:= NOTAND_DSZ32(0x000000ff, tmp15) 
U7311: tmp15:= OR_DSZ32(0x0000000f, tmp15) 
U7312: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U7314: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U7315: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U7316: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U7318: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U7319: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U731a) !m0,m1,m2 SEQW GOTO U7318
U731a: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 

U731c: tmp15:= ADD_DSZ32(0x00000008, tmp15) 
U731d: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U731e: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U7320: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U7321: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U7322: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U7324: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7325) !m0,m1,m2 SEQW GOTO U7322
U7325: tmp15:= ZEROEXT_DSZ32(tmpv0) 
U7326: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U7328: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U7329: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U732a: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U732c: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U732d: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U732e) !m0,m1,m2 SEQW GOTO U732c
U732e: tmp15:= ZEROEXT_DSZ32() 

U7330: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U7331: tmp15:= ZEROEXT_DSZ32(0x00000019) 
U7332: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 

U7334: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U7335: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U7336: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7338) !m0,m1,m2 SEQW GOTO U7335

U7338: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U7339: tmp15:= ADD_DSZ32(0x0000000c, tmp15) 
U733a: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U733c: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U733d: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U733e: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U7340: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U7341: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7342) !m0,m1,m2 SEQW GOTO U7340
U7342: tmpv1:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 SEQW URET1

U7344: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U7345: PORTOUT_DSZ32_ASZ16_SC1(0x005c,  , tmp15) !m2 
U7346: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x005c) !m2 

U7348: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U7346) !m1,m2 
U7349: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U734a: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U734c) !m0,m1,m2 SEQW GOTO U7349

U734c: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U734d: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U734e: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U7350: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U7351: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U7352: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U7354: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7355) !m0,m1,m2 SEQW GOTO U7352
U7355: tmp15:= SHR_DSZ64(tmpv0, 0x00000030) 
U7356: tmp15:= CONCAT_DSZ8(0x00000007, tmp15) 

U7358: tmp15:= CONCAT_DSZ16(0x000040c0, tmp15) 
U7359: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U735a: tmp15:= ZEROEXT_DSZ32(0x00000007) 

rsa_decrypt_modular_multiplication:
U735c: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U735d: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U735e: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U7360: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7361) !m0,m1,m2 SEQW GOTO U735e
U7361: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U7362: tmp15:= ADD_DSZ32(0x00000004, tmp15) 

U7364: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U7365: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U7366: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 

U7368: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U7369: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U736a: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U736c) !m0,m1,m2 SEQW GOTO U7369

U736c: tmp15:= ZEROEXT_DSZ64(tmpv0) 
U736d: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 
U736e: tmp15:= ROR_DSZ32(tmp15, 0x00000010) 

U7370: tmp15:= NOTAND_DSZ32(0x000000ff, tmp15) 
U7371: tmp15:= OR_DSZ32(0x0000000f, tmp15) 
U7372: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U7374: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U7375: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U7376: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U7378: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U7379: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U737a) !m0,m1,m2 SEQW GOTO U7378
U737a: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 

U737c: tmp15:= ADD_DSZ32(0x00000008, tmp15) 
U737d: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U737e: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U7380: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U7381: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U7382: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U7384: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7385) !m0,m1,m2 SEQW GOTO U7382
U7385: tmp15:= ZEROEXT_DSZ32(tmpv0) 
U7386: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U7388: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U7389: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U738a: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U738c: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U738d: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U738e) !m0,m1,m2 SEQW GOTO U738c
U738e: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 

U7390: tmp15:= ADD_DSZ32(0x0000000c, tmp15) 
U7391: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U7392: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U7394: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U7395: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U7396: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U7398: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7399) !m0,m1,m2 SEQW GOTO U7396
U7399: tmp15:= ZEROEXT_DSZ32(tmpv1) 
U739a: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U739c: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U739d: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U739e: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U73a0: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U73a1: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U73a2) !m0,m1,m2 SEQW GOTO U73a0
U73a2: tmp15:= ZEROEXT_DSZ32() 

U73a4: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U73a5: tmp15:= ZEROEXT_DSZ32(0x00000019) 
U73a6: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 

U73a8: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U73a9: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U73aa: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U068e) !m0 SEQW GOTO U73a9

U73ac: tmp1:= ZEROEXT_DSZ32() 
U73ad: tmp10:= ZEROEXT_DSZ32() 
U73ae: tmp5:= ZEROEXT_DSZ32(0x000073b1) 

U73b0: tmp8:= TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U04cc
U73b1: LFNCEWTMRK-> MOVE_DSZ32() 
U73b2: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 

U73b4: tmp14:= READURAM( , 0x005c, 64) 
U73b5: tmp9:= READURAM( , 0x0011, 64) 
U73b6: BTUJB_DIRECT_NOTTAKEN(tmp14, 0x0000000a, U3851) !m0,m1,m2 

U73b8: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000d8, mode=0x01, tmp9) 
U73b9: LDHINT_CACHEALL_ASZ64_SC1(tmp8) 
U73ba: tmp9:= ZEROEXT_DSZ64(tmp9, tmp8) 

U73bc: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000c8, mode=0x01, tmp9) 
U73bd: LDHINT_CACHEALL_ASZ64_SC1(tmp7) 
U73be: tmp15:= AND_DSZ32(0x00000400, tmp0) 

U73c0: tmp15:= MOVEMERGEFLGS_DSZ64(IMM_MACRO_ALIAS_INSTRUCTION, tmp15) !m0 
U73c1: tmp3:= CMOVCC_DSZ64_CONDZ(tmp15, tmp3) 
U73c2: tmp0:= OR_DSZ32(0x00000400, tmp0) 

U73c4: tmp5:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U73c9
U73c5: tmp11:= READURAM( , 0x0057, 64) 
U73c6: tmp5:= ZEROEXT_DSZ32(0x00000001) 

U73c8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004b8, mode=0x01, tmp9, tmp11) 
U73c9: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004b4, mode=0x01, tmp9, tmp5) 
U73ca: ROVR<-LFNCEWAIT-> NOP SEQW SAVEUIP1 U73ccSEQW GOTO U741e

U73cc: tmp15:= ZEROEXT_DSZ32(0x000001e5) 
U73cd: MOVETOCREG_DSZ64(tmp15, 0x00b) 
U73ce: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000508, mode=0x01, tmp9, tmp1) 

U73d0: tmp15:= AND_DSZ32(0x00000100, tmp4) 
U73d1: tmp15:= SHL_DSZ32(tmp15, 0x00000014) 
U73d2: tmp0:= OR_DSZ32(tmp15, tmp0) 

U73d4: LFNCEMARK-> tmp4:= MOVEFROMCREG_DSZ64( , 0x513) 
U73d5: tmp14:= MOVEFROMCREG_DSZ64( , 0x281, 32) !m1 
U73d6: MOVETOCREG_DSZ64( , 0x00000000, 0x7fe) 

U73d8: tmp1:= TESTUSTATE( , UCODE, 0x2000) ? SEQW GOTO U73de
U73d9: tmp15:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U73da: tmp15:= NOTAND_DSZ32(0x00000020, tmp15) 

U73dc: MOVETOCREG_DSZ64(tmp15, 0x6c3) !m2 
U73dd: tmp1:= ZEROEXT_DSZ32(0x00000001) 
U73de: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004f0, mode=0x01, tmp9, tmp1) 

U73e0: tmp1:= MOVEFROMCREG_DSZ64( , 0x088) 
U73e1: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000bf00,  , tmp1) !m2 
U73e2: tmp2:= MOVEFROMCREG_DSZ64( , 0x20f, 32) !m1 

U73e4: tmp1:= ADD_DSZ64(0x00000400, tmp9) SEQW SAVEUIP0 U73e5SEQW GOTO U318e
U73e5: MOVETOCREG_DSZ64( , 0x00000000, 0x7f8) 
U73e6: tmp12:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U73e8: rsp:= ZEROEXT_DSZ64(tmp7) 
U73e9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000320, mode=0x01, tmp9, tmp2) 
U73ea: MOVETOCREG_DSZ64( , 0x00000000, 0x6c0) 

U73ec: MOVETOCREG_DSZ64( , 0x00000000, 0x78e) 
U73ed: tmp13:= READURAM( , 0x0070, 64) 
U73ee: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x7c6) !m0 

U73f0: tmp1:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U73f1SEQW GOTO U6b31
U73f1: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 
U73f2: WRITEURAM( , 0x00000000, 0x0014, 32) 

U73f4: MOVETOCREG_BTS_DSZ64( , 0x00000008, 0x007) 
U73f5: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001cc, mode=0x01, tmp9, tmp1) SEQW SAVEUIP1 U73f6SEQW GOTO U1ac0
U73f6: WRITEURAM(tmp4, 0x004c, 64) 

U73f8: MOVETOCREG_DSZ64( , 0x00000000, 0x513) 
U73f9: tmp4:= unk_a6f() !m0 
U73fa: SYNCMARK-> tmp11:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_IMMEDIATE) !m0 

U73fc: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004a0, mode=0x01, tmp9, tmp14) 
U73fd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000498, mode=0x01, tmp9, tmp13) 
U73fe: tmp6:= NOTAND_DSZ64(0x00000007, tmp6) 

U7400: tmp15:= CONCAT_DSZ32(0x00000018) 
U7401: tmp6:= NOTAND_DSZ64(tmp15, tmp6) 
U7402: WRITEURAM(tmp6, 0x001f, 64) 

U7404: tmp3:= READURAM( , 0x005c, 64) 
U7405: tmp5:= AND_DSZ32(0x00001800, tmp5) 
U7406: MOVETOCREG_DSZ64(tmp5, 0x7f9, 32) !m1 

U7408: LFNCEWAIT-> FETCHFROMEIP1_ASZ64( , tmp8) 
U7409: MOVETOCREG_DSZ64(tmp8, 0x067) 
U740a: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 

U740c: tmp3:= BT_DSZ32(tmp3, 0x00000008) 
U740d: tmp3:= SELECTCC_DSZ32_CONDB(tmp3, 0x00000002) 
U740e: tmp13:= OR_DSZ64(tmp3, tmp13) SEQW SAVEUIP0 U7410SEQW GOTO U5741

U7410: LFNCEMARK-> unk_13f() !m2 
U7411: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000488, mode=0x01, tmp9, tmp4) 
U7412: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000490, mode=0x01, tmp9, tmp11) 

U7414: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000480, mode=0x01, tmp9, tmp1) 
U7415: tmp1:= AND_DSZ32(0xfff101ff, tmp0) 
U7416: tmp1:= NOTAND_DSZ32(0x00300000, tmp1) 

U7418: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000023c, mode=0x01, tmp9, tmp1) 
U7419: WRITEURAM(tmp1, 0x0013, 32) 
U741a: SYNCWAIT-> BTUJB_DIRECT_NOTTAKEN(tmp12, 0x0000003a, U3bf0) !m0,m1,m2 SEQW GOTO U008e

U741c: tmp14:= READUIP_REGOVR(0x01) !m0 
U741d: SYNCWAIT-> TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U7425
U741e: tmp14:= READUIP_REGOVR(0x01) !m0 

U7420: tmp5:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U7421: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000080, mode=0x1c, tmp9, tmp5) 
U7422: tmp5:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 

U7424: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002e8, mode=0x1c, tmp9, tmp5) 
U7425: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000280, mode=0x1c, tmp9, tmp1) 
U7426: tmp6:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U7428: tmp15:= AND_DSZ32(0x00001000, tmp0) 
U7429: tmp2:= CONCAT_DSZ32(tmp4, tmp2) 
U742a: tmp2:= SELECTCC_DSZ64_CONDZ(tmp15, tmp2) 

U742c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000240, mode=0x1c, tmp9, tmp2) 
U742d: tmp4:= MOVEFROMCREG_DSZ64( , 0x070) 
U742e: LFNCEMARK-> tmp11:= MOVEFROMCREG_DSZ64( , 0x004) 

U7430: tmp1:= READURAM( , 0x0046, 64) 
U7431: tmp1:= BTS_DSZ64(tmp1, 0x0000001f) 
U7432: tmp15:= BT_DSZ32(tmp10, 0x00000015) 

U7434: tmp1:= SELECTCC_DSZ64_CONDNB(tmp15, tmp1) 
U7435: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000248, mode=0x1c, tmp9, tmp1) 
U7436: tmp1:= BT_DSZ64(tmp1, 0x0000000a) 

U7438: tmp2:= READURAM( , 0x0009, 64) 
U7439: tmp15:= BT_DSZ32(tmp0, 0x00000015) 
U743a: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, tmp2) 

U743c: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp1) 
U743d: tmp1:= MOVEFROMCREG_DSZ64( , 0x065) 
U743e: tmp2:= CMOVCC_DSZ64_CONDB(tmp2, tmp1) 

U7440: tmp2:= CMOVCC_DSZ64_CONDNZ(tmp15, tmp2) 
U7441: tmp15:= SHR_DSZ64(tmp3, 0x0000002b) 
U7442: tmp15:= AND_DSZ32(0x00001f80, tmp15) 

U7444: tmp3:= NOTAND_DSZ32(0x00007f84, tmp3) 
U7445: tmp3:= OR_DSZ32(tmp15, tmp3) 
U7446: tmp15:= CONCAT_DSZ16(0x00000840) 

U7448: tmp3:= XOR_DSZ32(tmp15, tmp3) 
U7449: tmp15:= AND_DSZ32(0x00000400, tmp0) 
U744a: tmp3:= SELECTCC_DSZ32_CONDZ(tmp15, tmp3) 

U744c: tmp3:= CONCAT_DSZ32(tmp3, tmp2) 
U744d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000250, mode=0x1c, tmp9, tmp3) 
U744e: tmp2:= READURAM( , 0x0056, 64) 

U7450: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000218, mode=0x1c, tmp9, tmp2) 
U7451: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000fc, mode=0x1c, tmp9) 
U7452: tmp2:= NOTAND_DSZ32(0x80000000, tmp2) 

U7454: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000fc, mode=0x1c, tmp9, tmp2) 
U7455: tmp2:= READURAM( , 0x003e, 64) 
U7456: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002a8, mode=0x1c, tmp9, tmp2) 

U7458: tmp2:= READURAM( , 0x000a, 64) 
U7459: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000288, mode=0x1c, tmp9, tmp2) 
U745a: tmp2:= READURAM( , 0x0009, 64) 

U745c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000290, mode=0x1c, tmp9, tmp2) 
U745d: tmp2:= READURAM( , 0x000b, 64) 
U745e: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000298, mode=0x1c, tmp9, tmp2) 

U7460: tmp2:= READURAM( , 0x006e, 64) 
U7461: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002a0, mode=0x1c, tmp9, tmp2) 
U7462: tmp3:= AND_DSZ32(0x00000001, tmp4) 

U7464: tmp3:= SHL_DSZ32(tmp3, 0x0000000e) 
U7465: tmp15:= AND_DSZ32(0x00000004, tmp4) 
U7466: tmp15:= SHL_DSZ32(tmp15, 0x0000000a) 

U7468: tmp3:= OR_DSZ32(tmp15, tmp3) 
U7469: tmp15:= MOVEFROMCREG_DSZ64( , 0x01c) 
U746a: tmp3:= OR_DSZ32(tmp15, tmp3) 

U746c: tmp2:= BT_DSZ32(tmp0, 0x0000000b) 
U746d: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0xffffffffffffffff) 
U746e: tmp15:= BT_DSZ32(tmp11, 0x00000002) 

U7470: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0xffffffffffffffff) 
U7471: tmp2:= OR_DSZ32(tmp15, tmp2) 
U7472: tmp2:= AND_DSZ32(tmp2, tmp3) 

U7474: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b0, mode=0x1c, tmp9, tmp3) 
U7475: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002d0, mode=0x1c, tmp9, tmp2) 
U7476: tmp6:= READAFLAGS( , tmp6) !m2 

U7478: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000270, mode=0x1c, tmp9, tmp6) 
U7479: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000278, mode=0x1c, tmp9, tmp6) 
U747a: tmp6:= READURAM( , 0x001f, 64) 

U747c: tmp2:= AND_DSZ32(0x00000007, tmp6) 
U747d: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d4, mode=0x1c, tmp9, tmp2) 
U747e: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000260, mode=0x1c, tmp9, rsp) 

U7480: tmp3:= MOVEFROMCREG_DSZ64( , 0x01a) 
U7481: tmp2:= MOVEFROMCREG_DSZ64( , 0x067) 
U7482: tmp1:= OR_DSZ64(0x00000000, tmp1) 

U7484: tmp3:= MOVEMERGEFLGS_DSZ64(tmp3, tmp1) 
U7485: tmp3:= CMOVCC_DSZ64_CONDNZ(tmp3, tmp2) 
U7486: tmp1:= SUB_DSZN(tmp1, tmp3) !m1 

U7488: tmp15:= AND_DSZ32(0x00002000, tmp0) 
U7489: tmp2:= MOVEMERGEFLGS_DSZ64(tmp2, tmp15) 
U748a: tmp2:= CMOVCC_DSZ64_CONDNZ(tmp2, tmp1) 

U748c: tmp15:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U748d: tmp3:= SUB_DSZN(tmp15, tmp2) !m1 
U748e: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000268, mode=0x1c, tmp9, tmp3) 

U7490: tmp15:= NOTAND_DSZ32(0x0000000c, tmp11) 
U7491: tmp11:= MOVEMERGEFLGS_DSZ32(tmp11, tmp10) 
U7492: tmp15:= CMOVCC_DSZ32_CONDNB(tmp11, tmp15) 

U7494: tmp15:= NOTAND_DSZ32(0x00000013, tmp15) 
U7495: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp15, 0x004) SEQW URET1
U7496: tmp15:= AND_DSZ32(0x00000310, tmp1) 

U7498: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 
U7499: tmp3:= ZEROEXT_DSZ64(tmp0) 
U749a: tmp11:= ZEROEXT_DSZ64(tmp13) 

U749c: tmp13:= ZEROEXT_DSZ64(tmp8) 
U749d: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001c4, tmp11) 
U749e: tmp15:= SUB_DSZ32(0x00000004, tmp0) 

U74a0: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp15, U2969) 
U74a1: tmp0:= CONCAT_DSZ32(tmp0) 
U74a2: SAVEUIP_REGOVR( , 0x01, U74a4, 0x80b0) !m0 SEQW GOTO U5e6d

U74a4: tmp15:= SHR_DSZ64(tmp7, 0x00000020) 
U74a5: tmp15:= AND_DSZ32(0x00008000, tmp15) 
U74a6: tmp15:= SHL_DSZ32(tmp15, 0x00000010) 

U74a8: tmp2:= SHL_DSZ32(tmp13, 0x00000017) 
U74a9: tmp15:= OR_DSZ32(tmp2, tmp15) 
U74aa: tmp1:= BTC_DSZ32(tmp1, 0x00000003) 

U74ac: tmp15:= OR_DSZ32(tmp1, tmp15) 
U74ad: tmp3:= CONCAT_DSZ32(tmp15, tmp3) 
U74ae: tmp15:= AND_DSZ32(0xffffffffffffff16, tmp13) 

U74b0: tmp15:= SUB_DSZ32(0x00000016, tmp15) 
U74b1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 
U74b2: tmp15:= SELECTCC_DSZ32_CONDNP(tmp7, tmp13) 

U74b4: tmp0:= BT_DSZ64(tmp3, 0x0000003f) 
U74b5: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, tmp13) 
U74b6: tmp15:= OR_DSZ32(tmp0, tmp15) 

U74b8: TESTUSTATE( , VMX, !0x0020) !m0,m2 ? SEQW GOTO U74ba
U74b9: tmp15:= OR_DSZ32(tmp13, tmp15) 
U74ba: tmp15:= AND_DSZ32(0x00000080, tmp15) 

U74bc: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 
U74bd: tmp0:= AND_DSZ32(0x00000080, tmp13) 
U74be: tmp15:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x0000039c, tmp11) 

U74c0: tmp15:= SELECTCC_DSZ32_CONDZ(tmp0, tmp15) 
U74c1: tmp15:= NOTAND_DSZ16(0x000000ff, tmp15) 
U74c2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 

U74c4: tmp15:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000390, tmp11) 
U74c5: tmp15:= SELECTCC_DSZ64_CONDZ(tmp0, tmp15) 
U74c6: tmp14:= READURAM( , 0x0010, 64) 

U74c8: tmp0:= NOTAND_DSZ64(0x00000fc0, tmp14) 
U74c9: tmp15:= AND_DSZ64(tmp0, tmp15) 
U74ca: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 

U74cc: tmp2:= AND_DSZ32(0x00000028, tmp13) 
U74cd: tmp15:= SUB_DSZ32(0x00000020, tmp2) 
U74ce: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U2969) 

U74d0: tmp2:= SUB_DSZ32(0x00000028, tmp2) 
U74d1: tmp15:= BT_DSZ32(tmp3, 0x00000016) 
U74d2: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, tmp2) 

U74d4: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000000, U2969) !m1 
U74d5: tmp1:= BT_DSZ32(tmp1, 0x00000012) 
U74d6: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000003c0, tmp11) 

U74d8: WRITEURAM(tmp9, 0x0025, 64) 
U74d9: tmp9:= SELECTCC_DSZ64_CONDNB(tmp1, tmp9) 
U74da: tmp1:= AND_DSZ32(0x00004000, tmp1) 

U74dc: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000380, tmp11) 
U74dd: WRITEURAM(tmp0, 0x002d, 64) 
U74de: tmp0:= SELECTCC_DSZ64_CONDZ(tmp1, tmp0) 

U74e0: tmp0:= OR_DSZ64(tmp9, tmp0) 
U74e1: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000388, tmp11) 
U74e2: WRITEURAM(tmp9, 0x002e, 64) 

U74e4: tmp9:= SELECTCC_DSZ64_CONDZ(tmp1, tmp9) 
U74e5: tmp4:= OR_DSZ64(tmp9, tmp0) 
U74e6: tmp3:= BT_DSZ64(tmp3, 0x00000019) 

U74e8: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000018, tmp11) 
U74e9: WRITEURAM(tmp0, 0x0015, 64) 
U74ea: tmp0:= SELECTCC_DSZ64_CONDNB(tmp3, tmp0) 

U74ec: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000020, tmp11) 
U74ed: WRITEURAM(tmp9, 0x0016, 64) 
U74ee: tmp9:= SELECTCC_DSZ64_CONDNB(tmp3, tmp9) 

U74f0: tmp3:= BT_DSZ64(tmp3, 0x0000001c) 
U74f1: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002c0, tmp11) 
U74f2: WRITEURAM(tmp2, 0x004d, 64) 

U74f4: tmp2:= SELECTCC_DSZ64_CONDNB(tmp3, tmp2) 
U74f5: tmp15:= OR_DSZ64(tmp0, tmp4) 
U74f6: tmp15:= OR_DSZ64(tmp9, tmp15) 

U74f8: tmp15:= OR_DSZ64(tmp2, tmp15) 
U74f9: tmp15:= AND_DSZ64(tmp14, tmp15) 
U74fa: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 

U74fc: tmp2:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x00000366, tmp11) 
U74fd: tmm4:= unk_707(mm2) 
U74fe: tmp3:= BT_DSZ64(tmp3, 0x00000025) 

U7500: tmp15:= SETCC_CONDNB(tmp3) 
U7501: tmp15:= OR_DSZ32(tmp15, tmp2) 
U7502: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U2969) 

U7504: tmp4:= TESTUSTATE( , VMX, 0x0100) !m2 ? SEQW GOTO U7512
U7505: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000300, tmp11) 
U7506: tmp15:= NOTAND_DSZ64(0x00000fff, tmp4) 

U7508: tmp15:= AND_DSZ64(tmp14, tmp15) 
U7509: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2969) 
U750a: tmp9:= SELECTCC_DSZ32_CONDNB(tmp6, 0x00000040) 

U750c: tmp9:= AND_DSZ32(tmp9, tmp4) 
U750d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U2969) 
U750e: tmp15:= AND_DSZ32(0x00000fbf, tmp4) 

U7510: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x0000001e, U7511) !m0,m1,m2 SEQW GOTO U7512
U7511: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000018, U2969) !m1 
U7512: tmp15:= SELECTCC_DSZ32_CONDZ(tmp12, tmp7) 

U7514: tmp15:= SHR_DSZ32(tmp15, 0x00000010) 
U7515: tmp15:= NOTAND_DSZ32(tmp13, tmp15) 
U7516: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000006, U2969) !m0,m1 SEQW GOTO U7288

U7518: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1c64
U7519: MOVETOCREG_BTS_DSZ64( , 0x0000001c, 0x3ff) !m1 
U751a: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 

U751c: tmp2:= ZEROEXT_DSZ32(0x00001012) 
U751d: tmp0:= CONCAT_DSZ16(0x00005432, tmp2) 
U751e: tmp2:= ZEROEXT_DSZ16(0x0000fedc) 

U7520: tmp1:= CONCAT_DSZ16(0x0000bcde, tmp2) 
U7521: tmp10:= CONCAT_DSZ32(tmp1, tmp0) 
U7522: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 

U7524: tmp2:= ZEROEXT_DSZ16(0x00009876) 
U7525: tmp0:= CONCAT_DSZ16(0x0000dcba, tmp2) 
U7526: tmp2:= ZEROEXT_DSZ16(0x0000789a) 

U7528: tmp1:= CONCAT_DSZ16(0x00003456, tmp2) 
U7529: tmp11:= CONCAT_DSZ32(tmp1, tmp0) 
U752a: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 

U752c: tmp2:= ZEROEXT_DSZ16(0x00003210) 
U752d: tmp0:= CONCAT_DSZ16(0x00007654, tmp2) 
U752e: tmp2:= ZEROEXT_DSZ16(0x0000defe) 

U7530: tmp1:= CONCAT_DSZ16(0x00009abc, tmp2) 
U7531: tmp12:= CONCAT_DSZ32(tmp1, tmp0) 
U7532: MOVETOCREG_DSZ64(tmp12, 0x3c6, 32) !m1,m2 

U7534: tmp2:= ZEROEXT_DSZ16(0x0000ba98) 
U7535: tmp0:= CONCAT_DSZ16(0x0000fedc, tmp2) 
U7536: tmp2:= ZEROEXT_DSZ16(0x00005678) 

U7538: tmp1:= CONCAT_DSZ16(0x00001234, tmp2) 
U7539: tmp13:= CONCAT_DSZ32(tmp1, tmp0) 
U753a: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 

U753c: tmp2:= ZEROEXT_DSZ16(0x00000012) 
U753d: tmp0:= CONCAT_DSZ16(0x00000040, tmp2) 
U753e: tmp1:= ZEROEXT_DSZ32(0x00000012) 

U7540: tmp14:= CONCAT_DSZ32(tmp1, tmp0) 
U7541: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 
U7542: tmp15:= ZEROEXT_DSZ32(0x00004b27) 

U7544: MOVETOCREG_DSZ64(tmp15, 0x3c9, 32) !m1,m2 
U7545: tmp0:= CONCAT_DSZ16(0x00000005) 
U7546: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 

U7548: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U7549: tmp0:= CONCAT_DSZ16(0x0000000d) 
U754a: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 

U754c: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U754d: tmp0:= CONCAT_DSZ16(0x00000009) 
U754e: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 

U7550: tmp0:= CONCAT_DSZ16(0x000000c0) 
U7551: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 
U7552: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 

U7554: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U7555: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U7556: tmp9:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U7558: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 
U7559: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U755a: tmp0:= AND_DSZ32(0x0000000f, tmp0) 

U755c: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U755d: tmp9:= OR_DSZ32(tmp0, tmp9) 
U755e: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 

U7560: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 
U7561: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 
U7562: MOVETOCREG_OR_DSZ64(tmp12, 0x00000001, 0x3c6) !m1,m2 

U7564: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 
U7565: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 
U7566: MOVETOCREG_DSZ64(tmp15, 0x3c9, 32) !m1,m2 

U7568: tmp0:= CONCAT_DSZ16(0x00000005) 
U7569: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 
U756a: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 

U756c: tmp0:= CONCAT_DSZ16(0x0000000d) 
U756d: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 
U756e: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 

U7570: tmp0:= CONCAT_DSZ16(0x00000009) 
U7571: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 
U7572: tmp0:= CONCAT_DSZ16(0x000000c0) 

U7574: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 
U7575: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 
U7576: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 

U7578: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U7579: tmp0:= SUB_DSZ32(0x0000000f, tmp0) 
U757a: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U757c: tmp9:= OR_DSZ32(tmp0, tmp9) 
U757d: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 
U757e: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 

U7580: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U7581: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U7582: tmp9:= OR_DSZ32(tmp0, tmp9) 

U7584: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 
FUN_ucode_0007585:
U7585: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 
U7586: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 

U7588: MOVETOCREG_OR_DSZ64(tmp12, 0x00000003, 0x3c6) !m0,m1,m2 
U7589: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 
U758a: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 

U758c: MOVETOCREG_DSZ64(tmp15, 0x3c9, 32) !m1,m2 
U758d: tmp0:= CONCAT_DSZ16(0x00000005) 
U758e: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 

U7590: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U7591: tmp0:= CONCAT_DSZ16(0x0000000d) 
U7592: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 

U7594: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U7595: tmp0:= CONCAT_DSZ16(0x00000009) 
U7596: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 

U7598: tmp0:= CONCAT_DSZ16(0x000000c0) 
U7599: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 
U759a: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 

U759c: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U759d: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U759e: tmp0:= SUB_DSZ32(0x0000000c, tmp0) 

U75a0: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U75a1: tmp9:= OR_DSZ32(tmp0, tmp9) 
U75a2: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 

U75a4: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U75a5: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U75a6: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U75a8: tmp9:= OR_DSZ32(tmp0, tmp9) 
U75a9: tmp0:= MOVEFROMCREG_DSZ64( , 0x39e, 32) !m1 
U75aa: tmp0:= AND_DSZ32(0x000000ff, tmp0) 

U75ac: tmp0:= unk_222(tmp0) 
U75ad: tmp0:= SHL_DSZ32(tmp0, 0x00000001) 
U75ae: tmp0:= SUB_DSZ32(0x00000001, tmp0) 

U75b0: tmp1:= UFLOWCTRL( , tmp0, MSLOOPCTR) 
U75b1: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 
U75b2: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 

U75b4: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 
U75b5: MOVETOCREG_DSZ64(tmp12, 0x3c6, 32) !m1,m2 
U75b6: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 

U75b8: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 
U75b9: MOVETOCREG_BTS_DSZ64(tmp15, 0x00000007, 0x3c9) !m0,m1,m2 
U75ba: tmp0:= CONCAT_DSZ16(0x00000005) 

U75bc: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U75bd: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U75be: tmp0:= CONCAT_DSZ16(0x0000000d) 

U75c0: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U75c1: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U75c2: tmp0:= CONCAT_DSZ16(0x00000009) 

U75c4: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U75c5: tmp0:= CONCAT_DSZ16(0x000000c0) 
enclu_impl:
U75c6: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 

U75c8: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 
U75c9: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U75ca: tmp0:= AND_DSZ32(0x0000000f, tmp0) 

U75cc: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U75cd: tmp9:= OR_DSZ32(tmp0, tmp9) 
U75ce: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 

U75d0: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U75d1: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U75d2: tmp0:= SUB_DSZ32(0x00000008, tmp0) 

U75d4: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U75d5: tmp9:= OR_DSZ32(tmp0, tmp9) 
U75d6: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 

U75d8: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 
U75d9: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 
U75da: MOVETOCREG_DSZ64(tmp12, 0x3c6, 32) !m1,m2 

U75dc: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 
U75dd: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 
U75de: tmp0:= ZEROEXT_DSZ32(0x000000e0) 

U75e0: MOVETOCREG_OR_DSZ64(tmp15, 0x3c9, tmp0) !m1,m2 
U75e1: tmp0:= CONCAT_DSZ16(0x00000005) 
U75e2: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U75e4: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U75e5: tmp0:= CONCAT_DSZ16(0x0000000d) 
U75e6: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U75e8: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U75e9: tmp0:= CONCAT_DSZ16(0x00000009) 
U75ea: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U75ec: tmp0:= CONCAT_DSZ16(0x000000c0) 
U75ed: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 
U75ee: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 

U75f0: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U75f1: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U75f2: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U75f4: tmp9:= OR_DSZ32(tmp0, tmp9) 
U75f5: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 
U75f6: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 

U75f8: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U75f9: tmp0:= SUB_DSZ32(0x00000004, tmp0) 
U75fa: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U75fc: tmp9:= OR_DSZ32(tmp0, tmp9) 
U75fd: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 
U75fe: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 

U7600: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 
U7601: MOVETOCREG_DSZ64(tmp12, 0x3c6, 32) !m1,m2 
U7602: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 

U7604: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 
U7605: unk_b22(tmp15, IMM_MACRO_c9) !m0,m1,m2 
U7606: tmp0:= CONCAT_DSZ16(0x00000005) 

U7608: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U7609: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U760a: tmp0:= CONCAT_DSZ16(0x0000000d) 

U760c: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U760d: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U760e: tmp0:= CONCAT_DSZ16(0x00000009) 

U7610: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U7611: tmp0:= CONCAT_DSZ16(0x000000c0) 
U7612: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 

U7614: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 
FUN_ucode_0007615:
U7615: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U7616: tmp0:= AND_DSZ32(0x0000000f, tmp0) 

U7618: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U7619: tmp9:= OR_DSZ32(tmp0, tmp9) 
U761a: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 

U761c: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U761d: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U761e: tmp0:= SUB_DSZ32(0x00000002, tmp0) 

U7620: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U7621: tmp9:= OR_DSZ32(tmp0, tmp9) 
U7622: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 

U7624: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 
U7625: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 
U7626: MOVETOCREG_DSZ64(tmp12, 0x3c6, 32) !m1,m2 

U7628: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 
U7629: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 
U762a: tmp0:= ZEROEXT_DSZ32(0x00004b28) 

U762c: MOVETOCREG_DSZ64(tmp0, 0x3c9, 32) !m1,m2 
U762d: tmp0:= CONCAT_DSZ16(0x00000005) 
U762e: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U7630: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U7631: tmp0:= CONCAT_DSZ16(0x0000000d) 
U7632: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U7634: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U7635: tmp0:= CONCAT_DSZ16(0x00000009) 
U7636: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U7638: tmp0:= CONCAT_DSZ16(0x000000c0) 
U7639: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 
U763a: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 

U763c: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U763d: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U763e: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U7640: tmp9:= OR_DSZ32(tmp0, tmp9) 
U7641: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 
U7642: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 

U7644: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U7645: tmp0:= SUB_DSZ32(0x00000001, tmp0) 
U7646: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U7648: tmp9:= OR_DSZ32(tmp0, tmp9) 
U7649: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 
U764a: MOVETOCREG_DSZ64( , 0x00000000, 0x3c4, 32) !m1,m2 

U764c: MOVETOCREG_DSZ64( , 0x00000000, 0x3c5, 32) !m1,m2 
U764d: MOVETOCREG_DSZ64( , 0x00000000, 0x3c6, 32) !m1,m2 
U764e: MOVETOCREG_DSZ64( , 0x00000000, 0x3c7, 32) !m1,m2 

U7650: MOVETOCREG_DSZ64( , 0x00000000, 0x3c8, 32) !m1,m2 
U7651: MOVETOCREG_DSZ64( , 0x00000000, 0x3c9, 32) !m1,m2 
U7652: tmp0:= CONCAT_DSZ16(0x00000005) 

U7654: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U7655: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U7656: tmp0:= CONCAT_DSZ16(0x0000000d) 

U7658: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U7659: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U765a: tmp0:= CONCAT_DSZ16(0x00000009) 

U765c: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U765d: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x3c1, 32) !m1,m2 
U765e: tmp1:= ADD_DSZ32(0x00000001, tmp1) 

U7660: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U75b1
FUN_ucode_0007661:
U7661: MOVETOCREG_DSZ64( , 0x00000000, 0x3ff, 32) !m1 
U7662: tmp2:= READURAM( , 0x0020, 64) 

U7664: tmp2:= SHR_DSZ32(tmp2, 0x00000002) 
U7665: tmp2:= SHL_DSZ32(tmp2, 0x00000001) 
U7666: ROVR<- tmp1:= SHL_DSZ32(tmp9, tmp2) SEQW SAVEUIP1 U7668SEQW GOTO U02ba

U7668: tmp0:= ZEROEXT_DSZ32(0x00000070) 
U7669: tmp0:= CONCAT_DSZ16(0x0000800c, tmp0) 
U766a: tmp2:= PORTIN_DSZ32_ASZ16_SC1(tmp0) 

U766c: tmp2:= OR_DSZ32(tmp1, tmp2) 
U766d: PORTOUT_DSZ32_ASZ16_SC1(tmp0,  , tmp2) SEQW GOTO U1c65
U766e: NOP 

U7670: NOP 
U7671: LFNCEWAIT-> tmp1:= READURAM( , 0x000f, 64) SEQW SAVEUIP0 U7672SEQW GOTO U0504
U7672: tmp1:= AND_DSZ32(0x00000070, tmp1) 

U7674: tmp9:= MOVEFROMCREG_DSZ64( , 0x2f1, 32) !m1 
U7675: WRITEURAM(tmp9, 0x001c, 32) !m2 
U7676: tmp9:= NOTAND_DSZ32(0x00000207, tmp9) 

U7678: MOVETOCREG_OR_DSZ64(tmp9, 0x2f1, tmp1) !m1,m2 
U7679: tmp9:= SUB_DSZ32(0x00000030, tmp1) 
U767a: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U767c) SEQW GOTO U3d18

U767c: tmp14:= ZEROEXT_DSZ32(0x00003d16) SEQW GOTO U0434
U767d: NOP 
U767e: NOP 

U7680: NOP 
U7681: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000004, 0x2cf) !m1 
U7682: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x06d) !m0,m2 SEQW SAVEUIP0 U7684SEQW GOTO U23d1

U7684: tmp4:= SAVEUIP_REGOVR( , 0x00, U7685, 0x2401) SEQW GOTO U0cf9
U7685: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d3, 32) !m1,m2 
U7686: NOP 

U7688: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000c, U7689) !m1,m2 SEQW GOTO U7685
U7689: tmp0:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
U768a: NOP 

U768c: MOVETOCREG_OR_DSZ64(tmp0, 0x00000011, 0x223) !m1 SEQW SAVEUIP1 U768dSEQW GOTO U208d
U768d: SIGEVENT( , 0x00000063) 
U768e: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x2f1) !m1 

U7690: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2f2) !m0,m1 
U7691: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U7692: tmp0:= NOTAND_DSZ32(0x00000060, tmp0) 

U7694: MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1 SEQW GOTO U2ac5
U7695: NOP 
U7696: NOP 

U7698: NOP 
U7699: WRITEURAM( , 0x00000000, 0x0007, 32) 
U769a: LFNCEMARK-> tmp0:= MOVE_DSZ32(0x00010011) SEQW SAVEUIP0 U769cSEQW GOTO U65c6

U769c: TESTUSTATE( , SYS, UST_8086_MODE) !m1 ? SEQW GOTO U2769
U769d: tmp15:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U769e: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000003, U2771) !m0,m1 

U76a0: tmp15:= MOVEFROMCREG_DSZ64( , 0x79e) 
U76a1: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000003, U2769) !m0,m1 
U76a2: LFNCEWAIT-> tmp1:= READURAM( , 0x001f, 64) 

U76a4: tmp15:= NOTAND_DSZ32(0x00000001, rax) 
U76a5: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00000400) 
U76a6: tmp1:= OR_DSZ64(tmp15, tmp1) 

U76a8: WRITEURAM(tmp1, 0x001f, 64) !m2 
U76a9: tmp10:= ZEROEXT_DSZ32() 
U76aa: tmp1:= TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW GOTO U73b1

U76ac: tmp0:= ZEROEXT_DSZ32(0x00000022) 
U76ad: tmp7:= ZEROEXT_DSZ32(0x00000004) SEQW GOTO U4501
U76ae: NOP 

U76b0: NOP 
U76b1: tmp12:= ZEROEXT_DSZ32(0x00007700) 
U76b2: WRMSLOOPCTRFBR( , 0x00002803) SEQW SAVEUIP0 U76b4SEQW GOTO U2031

U76b4: WRMSLOOPCTRFBR( , 0x00001014) SEQW SAVEUIP0 U76b5SEQW GOTO U3399
U76b5: tmp12:= ZEROEXT_DSZ32(0x000076c0) 
U76b6: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U76b8: LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 
U76b9: tmp6:= NOTAND_DSZ32(0x00000003, tmp8) 
U76ba: tmp6:= MOVETOCREG_DSZ64(tmp6, 0x389, 32) !m1 

U76bc: tmp8:= ZEROEXT_DSZ32(tmp8, tmp6) 
U76bd: MOVETOCREG_DSZ64(tmp8, 0x389, 32) !m1 
U76be: tmp0:= MOVEFROMCREG_DSZ64( , 0x3cf, 32) !m1 

U76c0: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U76be) !m1,m2 
U76c1: tmp0:= ZEROEXT_DSZ32(0x00000080) 
U76c2: tmp1:= ZEROEXT_DSZ32(0x00000002) 

U76c4: SAVEUIP( , 0x00, U027a) SEQW SAVEUIP1 U76c5SEQW GOTO U18b6
U76c5: tmp6:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 
U76c6: tmp6:= OR_DSZ32(0x00000300, tmp6) 

U76c8: MOVETOCREG_DSZ64(tmp6, 0x238, 32) !m1 
U76c9: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x208) !m0,m1 
U76ca: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 SEQW GOTO U61b0

U76cc: NOP 
U76cd: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2db) !m0,m1,m2 
U76ce: tmp5:= ZEROEXT_DSZ32() SEQW SAVEUIP0 U76d0SEQW GOTO U5f64

U76d0: tmp15:= READURAM( , 0x0053, 64) 
U76d1: tmp15:= BTR_DSZ32(tmp15, 0x00000003) 
U76d2: WRITEURAM(tmp15, 0x0053, 32) 

U76d4: WRITEURAM( , 0x00000000, 0x0007, 32) 
U76d5: tmp12:= ZEROEXT_DSZ32(0x00000c52) 
U76d6: tmp5:= TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U76da

FUN_ucode_00076d8:
U76d8: MOVETOCREG_BTS_DSZ64( , 0x00000004, 0x0b4) 
U76d9: tmp5:= ZEROEXT_DSZ64(0x00000001) SEQW SAVEUIP0 U76daSEQW GOTO U29a0
U76da: tmp0:= READURAM( , 0x005c, 64) 

U76dc: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U76e5) !m1,m2 
U76dd: tmp1:= MOVEFROMCREG_DSZ64( , 0x516) 
U76de: LFNCEMARK-> tmp2:= MOVEFROMCREG_DSZ64( , 0x517) 

U76e0: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp1, 0x0000000b, 0x516) !m0 
U76e1: MOVETOCREG_BTR_DSZ64(tmp2, 0x0000000b, 0x517) !m0 
FUN_ucode_00076e2:
U76e2: tmp5:= OR_DSZ32(tmp5, tmp1) 

U76e4: tmp5:= CONCAT_DSZ32(tmp2, tmp5) 
U76e5: WRITEURAM(tmp5, 0x004f, 64) 
U76e6: UJMP( , tmp12) 

U76e8: NOP 
U76e9: tmp11:= ZEROEXT_DSZ32(0x00000425) SEQW SAVEUIP0 U76eaSEQW GOTO U2c59
U76ea: tmp9:= SHL_DSZ32(tmp9, 0x00000003) 

U76ec: tmp9:= ADD_DSZ32(tmp9, 0x00002141) 
U76ed: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, tmp9) 
U76ee: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp2, tmp1) 

U76f0: tmp15:= XOR_DSZ32(0x00000cf8, tmp15) 
U76f1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U042c) 
U76f2: tmp15:= READURAM( , 0x008a, 64) 

U76f4: tmp15:= XOR_DSZ16(tmp1, tmp15) 
U76f5: tmp15:= SELECTCC_DSZ64_CONDNZ(tmp15, tmp15) 
U76f6: tmp15:= SELECTCC_DSZ64_CONDNZ(tmp2, tmp15) 

U76f8: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000010, U01fa) 
U76f9: tmp15:= XOR_DSZ32(0x00000003, tmp2) 
U76fa: tmp15:= SELECTCC_DSZ64_CONDNZ(tmp15, tmp1) 

U76fc: tmp10:= READURAM( , 0x005c, 64) 
U76fd: tmp10:= BT_DSZ64(tmp10, 0x0000002d) 
U76fe: tmp15:= SELECTCC_DSZ64_CONDNB(tmp10, tmp15) 

U7700: tmp15:= XOR_DSZ32(0x00000061, tmp15) 
U7701: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U2929) 
U7702: tmp10:= ZEROEXT_DSZ16(tmp1) 

U7704: tmp15:= NOTAND_DSZ32(0x00000003, tmp1) 
U7705: tmp15:= XOR_DSZ32(0x00000cfc, tmp15) 
U7706: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U5989) SEQW SAVEUIP0 U7708

U7708: LFNCEMARK-> tmp0:= PORTIN_DSZ32_ASZ16_SC1(tmp10) !m1 SEQW GOTO U5b88
U7709: NOP 
U770a: NOP 

U770c: NOP 
U770d: tmp11:= MOVEFROMCREG_DSZ64( , 0x510) SEQW SAVEUIP1 U770eSEQW GOTO U2ea9
U770e: tmp12:= MOVEFROMCREG_DSZ64( , 0x511) 

U7710: tmp12:= NOTAND_DSZ32(0xfffffffffffff000, tmp12) 
U7711: tmp14:= ZEROEXT_DSZ32(tmp9) SEQW SAVEUIP1 U7712SEQW GOTO U080e
U7712: tmp2:= AND_DSZ32(tmp11, 0x00000002) 

U7714: tmp3:= BT_DSZ32(tmp11, 0x00000010) 
U7715: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp3) 
U7716: tmp2:= CMOVCC_DSZ32_CONDB(tmp2, 0x0000001e) 

U7718: tmp3:= SELECTCC_DSZ32_CONDB(tmp3, 0x00007000) 
U7719: tmp2:= SHL_DSZ32(tmp2, 0x0000000b) 
U771a: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x005) 

U771c: tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U771d: tmp10:= BTS_DSZ32(tmp0, 0x00000010) 
U771e: BTUJB_DIRECT_NOTTAKEN(tmp13, 0x00000015, U7720) !m1,m2 SEQW GOTO U7724

U7720: tmp2:= ADD_DSZ32(0x00003000, tmp3) 
U7721: tmp10:= READURAM( , 0x0009, 64) 
U7722: tmp10:= SHR_DSZ64(tmp10, 0x00000020) 

U7724: tmp15:= AND_DSZ32(0x0000003f, tmp13) 
U7725: tmp15:= SUB_DSZ32(0x0000001e, tmp15) 
U7726: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U7728) SEQW GOTO U772a

U7728: tmp2:= ADD_DSZ32(0x00004000, tmp3) 
U7729: tmp10:= ZEROEXT_DSZ32(tmp0) 
U772a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x7fe) !m2 

U772c: tmp1:= OR_DSZ64(tmp12, tmp2) 
U772d: tmp0:= ZEROEXT_DSZ32(0x0000002c) 
U772e: tmp10:= TESTUSTATE(tmp13, SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U4f60

U7730: tmp0:= CONCAT_DSZ32(tmp1, 0x00000703) SEQW GOTO U407c
U7731: NOP 
U7732: NOP 

U7734: NOP 
U7735: tmm0:= XORPD(tmm0, tmm1) 
U7736: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7738SEQW GOTO U46b9

U7738: tmm0:= unk_7c8(tmm0, tmm1) 
U7739: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U773aSEQW GOTO U46b9
U773a: tmm0:= unk_7c8(tmm0, tmm1) 

U773c: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U773dSEQW GOTO U46b9
U773d: tmm0:= unk_7c8(tmm0, tmm1) 
U773e: NOP 

U7740: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7741SEQW GOTO U46b9
U7741: tmm0:= unk_7c8(tmm0, tmm1) 
U7742: NOP 

U7744: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7745SEQW GOTO U46b9
U7745: tmm0:= unk_7c8(tmm0, tmm1) 
U7746: NOP 

U7748: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7749SEQW GOTO U46b9
U7749: tmm0:= unk_7c8(tmm0, tmm1) 
U774a: NOP 

U774c: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U774dSEQW GOTO U46b9
U774d: tmm0:= unk_7c8(tmm0, tmm1) 
U774e: NOP 

U7750: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7751SEQW GOTO U46b9
U7751: tmm0:= unk_7c8(tmm0, tmm1) 
U7752: NOP 

U7754: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7755SEQW GOTO U46b9
U7755: tmm0:= unk_7c8(tmm0, tmm1) 
U7756: NOP 

U7758: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7759SEQW GOTO U46b9
U7759: NOP 
U775a: NOP 

U775c: tmm1:= unk_7c9(tmm0, tmm1) SEQW URET0
U775d: NOP 
U775e: NOP 

U7760: NOP 
U7761: tmp0:= ZEROEXT_DSZ32(0x00000007) SEQW SAVEUIP0 U7762SEQW GOTO U60e5
U7762: WRITEURAM( , 0x00000000, 0x0053, 64) !m2 

U7764: SAVEUIP( , 0x00, U6b8c) SEQW GOTO U2d28
U7765: NOP 
U7766: NOP 

U7768: NOP 
U7769: unk_c02(rdi) !m1 SEQW SAVEUIP1 U776aSEQW GOTO U76e9
U776a: LFNCEWAIT-> STAD_DSZN_ASZ32_SC1(rdi, mode=0x08,  , tmp0) !m1 

U776c: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 SEQW UEND0
U776d: NOP 
U776e: NOP 

U7770: NOP 
U7771: tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 SEQW SAVEUIP1 U7772SEQW GOTO U6231
U7772: rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 

U7774: LFNCEWAIT-> unk_256() !m1 SEQW UEND0
U7775: NOP 
U7776: NOP 

U7778: NOP 
U7779: tmp14:= ZEROEXT_DSZ32(0x00000004) SEQW SAVEUIP0 U777aSEQW GOTO U238a
U777a: tmp14:= AND_DSZ32(0x000000fc, tmp14) 

U777c: SYNCWAIT-> r64dst:= SHR_DSZ32(tmp14, 0x00000002) SEQW GOTO U04b6
U777d: NOP 
U777e: NOP 

U7780: NOP 
U7781: tmp9:= ZEROEXT_DSZ32(tmp10) SEQW SAVEUIP0 U7782SEQW GOTO U62f5
U7782: MOVE_DSZ32() 

U7784: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp7, U4e35, tmp5) SEQW GOTO U0d18
U7785: NOP 
U7786: NOP 

U7788: NOP 
U7789: NOP 
U778a: ROVR<- NOP SEQW SAVEUIP0 U778cSEQW GOTO U5eea

U778c: tmp3:= ZEROEXT_DSZ32(0x00000001) 
U778d: tmm2:= unk_743(mm3) 
U778e: tmp8:= AND_DSZ32(0x00000018, tmp0) 

U7790: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U7794) 
U7791: tmp10:= unk_6a0() 
U7792: tmp10:= FCOM2(tmp8, tmp10) 

U7794: tmm6:= unk_704(mm2) 
U7795: tmm6:= unk_620(tmm6) 
U7796: tmp8:= PINTMOVDTMM2I_DSZ32(tmm6) 

U7798: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 
U7799: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U779a: UJMP( , tmp8) 

U779c: NOP 
U779d: NOP 
U779e: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 SEQW SAVEUIP1 U77a0SEQW GOTO U215d

U77a0: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x0000000b, 0x00b) !m0,m2 
U77a1: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U18f8
U77a2: tmp1:= MOVEFROMCREG_DSZ64( , 0x088) 

U77a4: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000e, U18f8) !m0,m2 
U77a5: tmp1:= ZEROEXT_DSZ32(0x00000009) 
U77a6: ROVR<- tmp0:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U77a8SEQW GOTO U66f9

U77a8: tmp8:= SAVEUIP_REGOVR( , 0x01, U77a9, 0x8321) !m0 SEQW GOTO U5eaa
U77a9: SAVEUIP( , 0x00, U5732) 
U77aa: tmpv2:= SAVEUIP( , 0x01, U18f2) !m0 

U77ac: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x088) 
U77ad: tmpv0:= AND_DSZ32(0x00100000, tmpv0) 
U77ae: tmpv1:= MOVEFROMCREG_DSZ64( , 0x0b1) 

U77b0: tmpv1:= NOTAND_DSZ32(tmpv1, 0x00000006) 
U77b1: tmpv1:= OR_DSZ32(tmpv0, tmpv1) 
U77b2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv1, U1db2) SEQW URET0

U77b4: NOP 
U77b5: NOP 
U77b6: UPDATEUSTATE( , 0xfc) SEQW SAVEUIP1 U77b8SEQW GOTO U0c62

U77b8: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U77b9: tmp0:= ZEROEXT_DSZ32(0x0000001c) 
U77ba: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U77bc: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U60ba
U77bd: tmp5:= ZEROEXT_DSZ32() 
U77be: tmp3:= ZEROEXT_DSZ32() 

U77c0: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U77ce
U77c1: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U77c2: tmp6:= READURAM( , 0x0011, 64) 

U77c4: tmp13:= READUIP_REGOVR(0x00) 
U77c5: LFNCEWAIT-> tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, mode=0x01, tmp2) 
U77c6: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, 0x00000010, mode=0x01, tmp2) 

U77c8: tmp6:= AND_DSZ64(tmp4, tmp6) 
U77c9: tmp6:= NOTAND_DSZ64(tmp5, tmp6) 
U77ca: tmp6:= OR_DSZ64(tmp6, tmp3) 

U77cc: tmp5:= OR_DSZ64(tmp4, tmp5) 
U77cd: tmp0:= ZEROEXT_DSZ32(0x0002001c) SEQW SAVEUIP1 U77ceSEQW GOTO U60bc
U77ce: tmp4:= AND_DSZ64(tmp11, tmp5) 

U77d0: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U77d2
U77d1: tmp10:= OR_DSZ64(tmp9, tmp10) 
U77d2: tmp3:= NOTAND_DSZ64(tmp5, tmp10) 

U77d4: tmp10:= OR_DSZ64(tmp3, tmp4) SEQW URET0
U77d5: NOP 
U77d6: NOP 

U77d8: NOP 
U77d9: NOP 
U77da: tmpv0:= MOVEFROMCREG_DSZ64( , 0x2d7, 32) !m1 SEQW SAVEUIP0 U77dcSEQW GOTO U334d

U77dc: tmpv0:= READURAM( , 0x008c, 64) 
U77dd: BTUJNB_DIRECT_NOTTAKEN(tmpv0, U77f5, tmpv2) !m1,m2 
U77de: tmpv0:= MOVEFROMCREG_DSZ64( , 0x009) SEQW SAVEUIP0 U77e0SEQW GOTO U334d

U77e0: WRMSLOOPCTRFBR( , 0x0000001f) 
U77e1: tmpv3:= ZEROEXT_DSZ32(0x00000020) 
U77e2: tmpv0:= MOVEFROMCREG_DSZ64( , tmpv3) 

U77e4: tmpv1:= SHR_DSZ64(tmpv0, 0x00000030) 
U77e5: tmpv1:= AND_DSZ32(0x0000000f, tmpv1) 
U77e6: tmpv2:= SHL_DSZ64(tmpv0, 0x00000010) 

U77e8: tmpv2:= SAR_DSZ64(tmpv2, 0x00000010) 
U77e9: tmpv2:= SUB_DSZ64(tmpv1, tmpv2) 
U77ea: tmpv1:= SUB_DSZ32(tmpv1, tmpv0) 

U77ec: tmpv0:= BT_DSZ64(tmpv0, 0x00000034) 
U77ed: tmpv2:= MOVEMERGEFLGS_DSZ64(tmpv2, tmpv0) 
U77ee: tmpv0:= CMOVCC_DSZ64_CONDB(tmpv2, tmpv1) SEQW SAVEUIP0 U77f0SEQW GOTO U334d

U77f0: tmpv2:= ADD_DSZ32(0x00000020, tmpv3) 
U77f1: tmpv0:= MOVEFROMCREG_DSZ64( , tmpv2) SEQW SAVEUIP0 U77f2SEQW GOTO U334d
U77f2: tmpv3:= ADD_DSZ32(0x00000001, tmpv3) 

U77f4: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U77e2
U77f5: tmpv1:= READURAM( , 0x008c, 64) 
U77f6: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x0000001c, U06c6) 

U77f8: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000021, U06c6) 
U77f9: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x067) 
U77fa: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000020, U77fe) !m1,m2 

U77fc: tmpv1:= MOVEFROMCREG_DSZ64( , 0x065) 
U77fd: tmpv0:= SUB_DSZN(tmpv1, tmpv0) !m1 
U77fe: SAVEUIP( , 0x00, U06c6) SEQW GOTO U334d

U7800: NOP 
U7801: NOP 
U7802: NOP SEQW SAVEUIP1 U7804SEQW GOTO U4406

U7804: TESTUSTATE( , UCODE, 0x0044) ? SEQW GOTO U4be0
U7805: NOP 
U7806: NOP 

U7808: SAVEUIP_REGOVR(0x01, U7809, 0x0004) !m0 SEQW GOTO U32cd
U7809: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x387, 32) !m1 
U780a: tmp12:= ZEROEXT_DSZ32(0x00007600) 

U780c: tmp4:= BTS_DSZ64(0x00000000, 0x0000003f) 
U780d: LFNCEWAIT-> tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U780e: tmp2:= NOTAND_DSZ32(tmp0, 0x00000002) 

U7810: tmp2:= SHL_DSZ64(tmp2, 0x0000003b) 
U7811: tmp0:= BT_DSZ64(tmp0, 0x00000030) 
U7812: LFNCEMARK-> tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U7814: tmp4:= AND_DSZ64(tmp4, tmp1) 
U7815: LFNCEWAIT-> tmp3:= MOVEFROMCREG_DSZ64( , 0x387, 32) !m1 
U7816: tmp3:= SELECTCC_DSZ64_CONDNB(tmp0, tmp3) 

U7818: MOVETOCREG_DSZ64(tmp0, 0x383, 32) !m1 
U7819: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x388) !m1 
U781a: tmp4:= AND_DSZ64(tmp4, tmp3) 

U781c: tmp4:= SHR_DSZ64(tmp4, 0x00000001) 
U781d: tmp3:= NOTAND_DSZ64(tmp2, tmp3) 
U781e: tmp1:= OR_DSZ64(tmp4, tmp1) 

U7820: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp1, 0x387, tmp3) !m1 
U7821: tmp12:= ZEROEXT_DSZ32(0x00007640) 
U7822: NOP 

U7824: LFNCEWAIT-> tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U7825: MOVETOCREG_DSZ64(tmp1, 0x386, 32) !m1 
U7826: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U7828: MOVETOCREG_DSZ64(tmp2, 0x385, 32) !m1 
U7829: tmp12:= ZEROEXT_DSZ32(0x00007680) 
U782a: LFNCEWAIT-> tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U782c: MOVETOCREG_DSZ64(tmp6, 0x2e9, 32) !m1 
U782d: MOVETOCREG_SHR_DSZ64(tmp6, 0x00000020, 0x392) !m1 
U782e: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U7830: MOVETOCREG_DSZ64(tmp8, 0x20c, 32) !m1 
U7831: tmp10:= SHR_DSZ64(tmp8, 0x00000020) 
U7832: tmp10:= MOVETOCREG_BTS_DSZ64(tmp10, 0x00000009, 0x238) !m1,m2 SEQW GOTO U4be2

U7834: NOP 
U7835: NOP 
U7836: BTUJB_DIRECT_NOTTAKEN(tmp12, 0x0000001e, U03dc) !m0 SEQW SAVEUIP1 U7838SEQW GOTO U3c38

U7838: tmp11:= ZEROEXT_DSZ32(0x00000007) 
U7839: WRITEURAM(tmp11, 0x0073, 32) 
U783a: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U7841

U783c: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U7840
U783d: tmp0:= MOVEFROMCREG_DSZ64( , 0x387, 32) !m1 
U783e: STADSTGBUF_DSZ64_ASZ16_SC1(0x00007620,  , tmp0) 

U7840: MOVETOCREG_DSZ64( , 0x00000000, 0x387, 32) !m1,m2 
U7841: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U784a
U7842: tmp1:= MOVEFROMCREG_DSZ64( , 0x21d, 32) !m1 

U7844: tmp1:= BT_DSZ32(tmp1, 0x00000008) 
U7845: tmp1:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00003b00) 
U7846: tmp1:= ADD_DSZ32(0x000000c0, tmp1) 

U7848: tmp5:= MOVEFROMCREG_DSZ64( , 0x693) 
U7849: STADSTGBUF_DSZ64_ASZ16_SC1(tmp1,  , tmp5) 
U784a: MOVETOCREG_DSZ64( , 0x00000000, 0x693) !m2 

U784c: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U784d: tmp0:= MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000b, 0x285) !m0,m1 
U784e: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x4740) !m2 

U7850: tmp3:= unk_222(tmp1) 
U7851: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x4744) !m2 
U7852: tmp2:= unk_222(tmp2) 

U7854: tmp0:= CONCAT_DSZ8(tmp2, tmp3) 
U7855: tmp0:= CONCAT_DSZ16(tmp1, tmp0) 
U7856: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x0060) !m2 

U7858: tmp0:= CONCAT_DSZ32(tmp0, tmp2) 
U7859: tmp2:= SHR_DSZ32(tmp2, 0x00000001) 
U785a: tmp2:= XOR_DSZ32(0x00000001, tmp2) 

U785c: tmp2:= BT_DSZ16(tmp1, tmp2) 
U785d: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000001) 
U785e: tmp2:= SHL_DSZ64(tmp2, 0x0000002f) 

U7860: tmp0:= OR_DSZ64(tmp2, tmp0) 
U7861: WRITEURAM(tmp0, 0x0020, 64) 
U7862: tmp0:= AND_DSZ32(0x00000002, tmp0) 

U7864: tmp0:= SHL_DSZ64(tmp0, 0x00000027) 
U7865: tmp1:= MOVEFROMCREG_DSZ64( , 0x701) 
U7866: MOVETOCREG_OR_DSZ64(tmp1, 0x701, tmp0) 

U7868: tmp5:= READURAM( , 0x0035, 64) 
U7869: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000003, U7872) !m0,m1,m2 
U786a: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x9700) !m2 

U786c: LFNCEMARK-> tmp2:= AND_DSZ32(0x0000000c, tmp2) 
U786d: tmp2:= SHL_DSZ64(tmp2, 0x00000024) 
U786e: tmp5:= READURAM( , 0x005c, 64) 

U7870: tmp5:= OR_DSZ64(tmp2, tmp5) 
U7871: WRITEURAM(tmp5, 0x015c, 64) !m2 
U7872: tmp3:= READURAM( , 0x0020, 64) !m2 

U7874: tmp3:= AND_DSZ32(0x000000ff, tmp3) 
U7875: MOVETOCREG_DSZ64(tmp3, 0x2b9, 32) !m1,m2 
U7876: LFNCEWAIT-> tmp6:= MOVEFROMCREG_DSZ64( , 0x231, 32) !m1 SEQW SAVEUIP0 U7878SEQW GOTO U5e81

U7878: tmp6:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
U7879: tmp6:= OR_DSZ32(0x00000097, tmp6) 
U787a: MOVETOCREG_DSZ64(tmp6, 0x223, 32) !m1,m2 

U787c: NOP 
U787d: NOP 
U787e: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x2a1) !m1,m2 

U7880: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U789a
U7881: NOP 
U7882: NOP 

U7884: SYNCWAIT-> SAVEUIP_REGOVR(0x01, U7885, 0x0001) !m0 SEQW GOTO U32cd
U7885: tmp0:= MOVEFROMCREG_DSZ64( , 0x39c, 32) !m1 
U7886: tmp1:= ZEROEXT_DSZ32(0x00000003) 

U7888: tmp1:= SHL_DSZ64(tmp1, 0x00000013) 
U7889: tmp0:= NOTAND_DSZ64(tmp1, tmp0) 
U788a: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000013, 0x39c) !m0,m1 

U788c: tmp0:= ZEROEXT_DSZ32(0x00000080) 
U788d: tmp1:= ZEROEXT_DSZ32(0x00000002) 
U788e: SAVEUIP( , 0x00, U027a) SEQW SAVEUIP1 U7890SEQW GOTO U18b6

U7890: tmp3:= MOVEFROMCREG_DSZ64( , 0x2e6, 32) !m1 
U7891: tmp1:= CONCAT_DSZ16(0x0000004b) 
U7892: MOVETOCREG_OR_DSZ64(tmp3, 0x2e6, tmp1) !m1 SEQW SAVEUIP1 U7894SEQW GOTO U6d95

U7894: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
U7895: tmp1:= MOVEFROMCREG_DSZ64( , 0x22a, 32) !m1 
U7896: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000013, 0x22a) !m0,m1 

U7898: tmp1:= MOVEFROMCREG_DSZ64( , 0x213, 32) !m1 
U7899: MOVETOCREG_BTS_DSZ64(tmp1, 0x0000001f, 0x213) !m0,m1 
U789a: LFNCEWAIT-> unk_eff() 

U789c: tmp0:= READURAM( , 0x0020, 64) !m2 
U789d: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000001f, U5f84) !m0,m2 
U789e: SAVEUIP_REGOVR(0x00, U78a0, 0x0000) SEQW GOTO U0725

U78a0: tmp15:= ZEROEXT_DSZ32(0x00000009) SEQW SAVEUIP0 U78a1
U78a1: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x00c0) !m2 
U78a2: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000003, U0082) !m0 

U78a4: tmp11:= ZEROEXT_DSZ32(0x0000000a) 
U78a5: WRITEURAM(tmp11, 0x0073, 32) 
U78a6: tmp5:= SAVEUIP( , 0x00, U0c52) SEQW GOTO U5f64

U78a8: NOP 
U78a9: NOP 
U78aa: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2f3) !m0,m1,m2 SEQW SAVEUIP0 U78acSEQW GOTO U0504

U78ac: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U37b2
U78ad: NOP 
U78ae: NOP 

U78b0: tmp11:= READURAM( , 0x000f, 64) SEQW SAVEUIP0 U78b1SEQW GOTO U3048
U78b1: tmp2:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U78b2: tmp2:= OR_DSZ32(0x00000060, tmp2) 

U78b4: MOVETOCREG_DSZ64(tmp2, 0x2c4, 32) !m1,m2 
U78b5: tmp0:= OR_DSZ32(0x00000040) 
U78b6: tmp9:= MOVETOCREG_DSZ64(tmp0, 0x2d5, 32) !m1 

U78b8: tmp0:= MOVEFROMCREG_DSZ64(tmp9, 0x2d4, 32) !m1,m2 
U78b9: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U78b8) !m1,m2 
U78ba: LFNCEMARK-> tmp10:= MOVEFROMCREG_DSZ64( , 0x2d9, 32) !m1 

U78bc: tmp0:= AND_DSZ32(0x00000100, tmp0) 
U78bd: tmp10:= MOVEMERGEFLGS_DSZ64(tmp10, tmp0) 
U78be: tmp10:= CMOVCC_DSZ64_CONDNZ(tmp10, 0xffffffffffffffff) 

U78c0: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 
U78c1: tmp0:= SUB_DSZ64(tmp0, tmp10) 
U78c2: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, U7689) 

U78c4: tmp9:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b740) 
U78c5: tmp9:= SUB_DSZ64(tmp9, tmp0) 
U78c6: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp9, U7689) 

U78c8: PORTOUT_DSZ64_ASZ16_SC1(0x4658,  , tmp10) !m2 
U78c9: SAVEUIP_REGOVR(0x01, U78ca, 0x0008) !m0 SEQW GOTO U2b0d
U78ca: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x63a) 

U78cc: WRMSLOOPCTRFBR( , 0x0000017f) 
U78cd: tmp8:= ZEROEXT_DSZ32(0x00000006) 
U78ce: NOP 

U78d0: unk_def(tmp8) 
U78d1: tmp8:= ADD_DSZ32(0x00000040, tmp8) 
U78d2: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U78d0

U78d4: LBSYNC(0x00000001) 
U78d5: LFNCEMARK-> LBSYNC(0x00000001) 
U78d6: tmp8:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 

U78d8: tmp8:= NOTAND_DSZ32(0x00000011, tmp8) 
U78d9: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U29b9
U78da: MOVETOCREG_BTS_DSZ64(tmp8, 0x00000004, 0x223) !m1,m2 

U78dc: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d2, 32) !m1 
U78dd: tmp0:= BTR_DSZ64(tmp0, 0x0000003f) 
U78de: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, U78e0) SEQW GOTO U78e6

U78e0: PORTOUT_DSZ32_ASZ16_SC1(0x5140,  , tmp0) !m2 
U78e1: tmp1:= SHR_DSZ64(tmp0, 0x00000020) 
U78e2: PORTOUT_DSZ32_ASZ16_SC1(0x5144,  , tmp1) !m2 

U78e4: MOVETOCREG_DSZ64( , 0x00000000, 0x2d2, 32) !m1 
U78e5: SAVEUIP_REGOVR(0x01, U78e6, 0x0000) !m0 SEQW GOTO U2b0d
U78e6: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x072) !m0,m2 

U78e8: MOVETOCREG_DSZ64( , 0x00000000, 0x2d3, 32) !m1,m2 
U78e9: tmp4:= ZEROEXT_DSZ32(0x01000000) 
U78ea: ROVR<- ADD_DSZ32(0x00000000, 0x00002401) SEQW SAVEUIP0 U78ecSEQW GOTO U0cf9

U78ec: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cf, 32) !m1,m2 
U78ed: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U7681) !m1,m2 
U78ee: tmp0:= BTR_DSZ32(tmp0, 0x00000003) 

U78f0: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, U78f1) SEQW GOTO U78ec
U78f1: MOVETOCREG_DSZ64(tmp0, 0x2cf, 32) !m1 
U78f2: MSLOOP-> NOP 

U78f4: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x2ce) !m1,m2 
U78f5: tmp0:= MOVEFROMCREG_DSZ64( , 0x2ce, 32) !m1,m2 
U78f6: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U78f8) !m1,m2 SEQW GOTO U78f5

U78f8: LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(0x0000ffff) 
U78f9: NOP 
U78fa: NOP 

U78fc: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1 
U78fd: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cf, 32) !m1 
U78fe: MOVETOCREG_OR_DSZ64(tmp0, 0x00000002, 0x2cf) !m0,m1 

U7900: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U2c92
U7901: tmp10:= ZEROEXT_DSZ32(0x0000bd40) 
U7902: tmp0:= READURAM( , 0x000f, 64) 

U7904: tmp0:= NOTAND_DSZ32(0x000f0000, tmp0) 
U7905: tmp0:= BTS_DSZ32(tmp0, 0x00000018) 
U7906: PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , tmp0) !m2 

U7908: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U5e92
U7909: NOP 
U790a: NOP 

U790c: MOVE_DSZ32() SEQW SAVEUIP1 U790dSEQW GOTO U2ac8
U790d: LBSYNC(0x00000001) 
U790e: SYNCFULL-> LBSYNC(0x00000007) 

U7910: tmp0:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U7911: tmp0:= AND_DSZ32(0x0000c000, tmp0) 
U7912: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U7914) SEQW GOTO U5e94

U7914: tmp0:= ZEROEXT_DSZ32(0x00000020) 
U7915: tmp0:= BTS_DSZ32(tmp0, 0x0000001f) 
U7916: tmp1:= READURAM( , 0x000e, 64) 

U7918: tmp1:= SHR_DSZ64(tmp1, 0x00000030) 
U7919: tmp1:= CONCAT_DSZ16(tmp1, 0x00007914) 
U791a: tmp1:= CONCAT_DSZ32(tmp1, tmp0) 

U791c: WRITEURAM(tmp1, 0x000e, 64) !m2 
U791d: SAVEUIP_REGOVR( , 0x00, U791e, 0x4201) SEQW GOTO U6149
U791e: tmp2:= AND_DSZ32(0x00000007, tmp2) 

U7920: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U791d) 
U7921: tmp2:= ZEROEXT_DSZ32(0x01000000) 
U7922: ROVR<- ADD_DSZ32(0x00000000, 0x00004201) SEQW SAVEUIP0 U7924SEQW GOTO U0cf9

U7924: SAVEUIP_REGOVR( , 0x00, U7925, 0x4201) SEQW GOTO U6149
U7925: tmp2:= AND_DSZ32(0x00000007, tmp2) 
U7926: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U7924) 

U7928: LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(0x00000021) SEQW GOTO U079e
U7929: NOP 
U792a: NOP 

U792c: NOP 
U792d: NOP 
U792e: NOP SEQW SAVEUIP1 U7930SEQW GOTO U20bd

U7930: tmp5:= ZEROEXT_DSZ32(0x00007932) 
U7931: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4840
U7932: SYNCFULL-> tmp1:= READURAM( , 0x0070, 64) 

U7934: WRITEURAM(tmp1, 0x0038, 64) 
U7935: tmp0:= MOVEFROMCREG_DSZ64( , 0x01d) 
U7936: tmp7:= SHL_DSZ32(tmp0, 0x00000008) 

U7938: tmp0:= MOVEFROMCREG_DSZ64( , 0x20f, 32) !m1 
U7939: WRITEURAM(tmp0, 0x006f, 64) 
U793a: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f1) 

U793c: WRITEURAM(tmp0, 0x006d, 32) !m2 
U793d: tmp1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U793e: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000006, U7942) !m0,m1,m2 

U7940: tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 
U7941: WRITEURAM(tmp0, 0x0067, 64) !m2 
U7942: SYNCFULL-> tmp0:= MOVEFROMCREG_DSZ64( , 0x065) 

U7944: tmp0:= SHL_DSZ64(tmp0, 0x00000020) 
U7945: WRITEURAM(tmp0, 0x016d, 64) !m2 
U7946: MOVETOCREG_DSZ64( , 0x00000000, 0x01d) !m2 

U7948: MOVETOCREG_DSZ64( , 0x00000000, 0x7f1) !m2 
U7949: MOVETOCREG_DSZ64( , 0x00000000, 0x20f, 32) !m1,m2 
U794a: tmp0:= MOVEFROMCREG_DSZ64( , 0x51e) 

U794c: MOVETOCREG_BTR_DSZ64(tmp0, 0x51e) !m2 
U794d: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U794e: tmp0:= SHL_DSZ32(tmp0, 0x0000000f) 

U7950: tmp7:= OR_DSZ32(tmp0, tmp7) 
U7951: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c5) 
U7952: tmp7:= OR_DSZ32(tmp0, tmp7) 

U7954: MOVETOCREG_DSZ64( , 0x00000000, 0x6c5) !m2 
U7955: MOVETOCREG_DSZ64(rcx, 0x2c0, 32) !m1 
U7956: WRITEURAM(rdx, 0x0063, 64) 

U7958: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U7959: tmp2:= NOTAND_DSZ64(0x00000018, tmp2) 
U795a: MOVETOCREG_DSZ64(tmp2, 0x2df, 32) !m1 

U795c: tmp0:= RDSEGFLD(UNK_SEG_09, FLGS) 
U795d: tmp1:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U795e: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U7961

U7960: tmp1:= BTS_DSZ32(tmp1, 0x0000001f) 
U7961: tmp1:= CONCAT_DSZ32(tmp0, tmp1) 
U7962: MOVETOCREG_DSZ64(tmp1, 0x2c1, 32) !m1 

U7964: WRITEURAM(rax, 0x0068, 64) 
U7965: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U7966: WRITEURAM(tmp2, 0x0069, 64) 

U7968: tmp0:= READURAM( , 0x0043, 64) 
U7969: WRITEURAM(tmp0, 0x0064, 64) 
U796a: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U796c: tmp1:= AND_DSZ32(0x00000100, tmp0) 
U796d: tmp1:= SHR_DSZ32(tmp1, 0x00000008) 
U796e: WRITEURAM(tmp1, 0x0065, 32) 

U7970: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000008, 0x6c3) 
U7971: tmp0:= SHL_DSZ32(tmp0, 0x00000010) 
U7972: tmp7:= OR_DSZ32(tmp0, tmp7) 

U7974: WRITEURAM(tmp7, 0x0026, 32) 
U7975: tmp0:= ZEROEXT_DSZ32(0x00000002) 
U7976: MOVETOCREG_DSZ64(tmp0, 0x2f3, 32) !m1 

U7978: WRITEURAM( , 0x00000000, 0x0007, 32) 
U7979: tmp1:= READURAM( , 0x005c, 64) 
U797a: LFNCEMARK-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7c6) 

U797c: tmp0:= AND_DSZ32(0x00000003, tmp0) 
U797d: tmp0:= SHL_DSZ32(tmp0, 0x0000001b) 
U797e: tmp1:= NOTAND_DSZ32(0x18000000, tmp1) 

U7980: tmp1:= OR_DSZ32(tmp0, tmp1) 
U7981: WRITEURAM(tmp1, 0x005c, 32) 
U7982: MOVETOCREG_OR_DSZ64( , 0x00000008, 0x0b4) 

U7984: tmp0:= READURAM( , 0x0050, 64) 
U7985: tmp0:= SHR_DSZ32(tmp0, 0x00000010) 
U7986: tmp0:= SUB_DSZ32(0x00000083, tmp0) 

U7988: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U798d) 
U7989: tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 
U798a: AETTRACE( , tmp0, 0x0c) 

U798c: AETTRACE(0x0e) 
U798d: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U7998
U798e: NOP 

U7990: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U7994
U7991: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U403c) 
U7992: NOP 

U7994: LFNCEMARK-> SAVEUIP_REGOVR(0x01, U7995, 0x0000) !m0 SEQW GOTO U3a26
U7995: NOP 
U7996: NOP 

U7998: SYNCFULL-> NOP 
U7999: SAVEUIP_REGOVR(0x01, U799a, 0x0000) !m0 SEQW GOTO U2b0d
U799a: MOVETOCREG_BTS_DSZ64( , 0x7e1) 

U799c: tmp1:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U799d: MOVETOCREG_BTR_DSZ64(tmp1, 0x00000004, 0x6c3) 
U799e: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 

U79a0: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp0, 0x00000012, 0x2cd) !m0,m1,m2 
U79a1: tmp1:= ZEROEXT_DSZ32(0x00013fff) 
U79a2: MOVETOCREG_DSZ64(tmp1, 0x2c4, 32) !m1 

U79a4: tmp1:= ZEROEXT_DSZ32(0x007fcfcc) 
U79a5: SYNCFULL-> MOVETOCREG_DSZ64(tmp1, 0x008) 
U79a6: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 

U79a8: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U79a9: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000002, U384d) !m0,m1,m2 
U79aa: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000003, U20dc) !m0,m1 

U79ac: tmp2:= READURAM( , 0x005c, 64) 
U79ad: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U79a8) !m1,m2 
U79ae: tmp2:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 

U79b0: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000005, U08c4) SEQW GOTO U79a8
U79b1: NOP 
U79b2: NOP 

U79b4: NOP 
U79b5: NOP 
U79b6: NOP 

U79b8: NOP 
U79b9: NOP 
U79ba: NOP 

U79bc: NOP 
U79bd: NOP 
U79be: NOP 

U79c0: NOP 
U79c1: NOP 
U79c2: NOP 

U79c4: NOP 
U79c5: NOP 
U79c6: NOP 

U79c8: NOP 
U79c9: NOP 
U79ca: NOP 

U79cc: NOP 
U79cd: NOP 
U79ce: NOP 

U79d0: NOP 
U79d1: NOP 
U79d2: NOP 

U79d4: NOP 
U79d5: NOP 
U79d6: NOP 

U79d8: NOP 
U79d9: NOP 
U79da: NOP 

U79dc: NOP 
U79dd: NOP 
U79de: NOP 

U79e0: NOP 
U79e1: NOP 
U79e2: NOP 

U79e4: NOP 
U79e5: NOP 
U79e6: NOP 

U79e8: NOP 
U79e9: NOP 
U79ea: NOP 

U79ec: NOP 
U79ed: NOP 
U79ee: NOP 

U79f0: NOP 
U79f1: NOP 
U79f2: NOP 

U79f4: NOP 
U79f5: NOP 
U79f6: NOP 

U79f8: NOP 
U79f9: NOP 
U79fa: NOP 

U79fc: NOP 
U79fd: NOP 
U79fe: NOP 

U7a00: NOP 
U7a01: NOP 
U7a02: NOP 

U7a04: NOP 
U7a05: NOP 
U7a06: NOP 

U7a08: NOP 
U7a09: NOP 
U7a0a: NOP 

U7a0c: NOP 
U7a0d: NOP 
U7a0e: NOP 

U7a10: NOP 
U7a11: NOP 
U7a12: NOP 

U7a14: NOP 
U7a15: NOP 
U7a16: NOP 

U7a18: NOP 
U7a19: NOP 
U7a1a: NOP 

U7a1c: NOP 
U7a1d: NOP 
U7a1e: NOP 

U7a20: NOP 
U7a21: NOP 
U7a22: NOP 

U7a24: NOP 
U7a25: NOP 
U7a26: NOP 

U7a28: NOP 
U7a29: NOP 
U7a2a: NOP 

U7a2c: NOP 
U7a2d: NOP 
U7a2e: NOP 

U7a30: NOP 
U7a31: NOP 
U7a32: NOP 

U7a34: NOP 
U7a35: NOP 
U7a36: NOP 

U7a38: NOP 
U7a39: NOP 
U7a3a: NOP 

U7a3c: NOP 
U7a3d: NOP 
U7a3e: NOP 

U7a40: NOP 
U7a41: NOP 
U7a42: NOP 

U7a44: NOP 
U7a45: NOP 
U7a46: NOP 

U7a48: NOP 
U7a49: NOP 
U7a4a: NOP 

U7a4c: NOP 
U7a4d: NOP 
U7a4e: NOP 

U7a50: NOP 
U7a51: NOP 
U7a52: NOP 

U7a54: NOP 
U7a55: NOP 
U7a56: NOP 

U7a58: NOP 
U7a59: NOP 
U7a5a: NOP 

U7a5c: NOP 
U7a5d: NOP 
U7a5e: NOP 

U7a60: NOP 
U7a61: NOP 
U7a62: NOP 

U7a64: NOP 
U7a65: NOP 
U7a66: NOP 

U7a68: NOP 
U7a69: NOP 
U7a6a: NOP 

U7a6c: NOP 
U7a6d: NOP 
U7a6e: NOP 

U7a70: NOP 
U7a71: NOP 
U7a72: NOP 

U7a74: NOP 
U7a75: NOP 
U7a76: NOP 

U7a78: NOP 
U7a79: NOP 
U7a7a: NOP 

U7a7c: NOP 
U7a7d: NOP 
U7a7e: NOP 

U7a80: NOP 
U7a81: NOP 
U7a82: NOP 

U7a84: NOP 
U7a85: NOP 
U7a86: NOP 

U7a88: NOP 
U7a89: NOP 
U7a8a: NOP 

U7a8c: NOP 
U7a8d: NOP 
U7a8e: NOP 

U7a90: NOP 
U7a91: NOP 
U7a92: NOP 

U7a94: NOP 
U7a95: NOP 
U7a96: NOP 

U7a98: NOP 
U7a99: NOP 
U7a9a: NOP 

U7a9c: NOP 
U7a9d: NOP 
U7a9e: NOP 

U7aa0: NOP 
U7aa1: NOP 
U7aa2: NOP 

U7aa4: NOP 
U7aa5: NOP 
U7aa6: NOP 

U7aa8: NOP 
U7aa9: NOP 
U7aaa: NOP 

U7aac: NOP 
U7aad: NOP 
U7aae: NOP 

U7ab0: NOP 
U7ab1: NOP 
U7ab2: NOP 

U7ab4: NOP 
U7ab5: NOP 
U7ab6: NOP 

U7ab8: NOP 
U7ab9: NOP 
U7aba: NOP 

U7abc: NOP 
U7abd: NOP 
U7abe: NOP 

U7ac0: NOP 
U7ac1: NOP 
U7ac2: NOP 

U7ac4: NOP 
U7ac5: NOP 
U7ac6: NOP 

U7ac8: NOP 
U7ac9: NOP 
U7aca: NOP 

U7acc: NOP 
U7acd: NOP 
U7ace: NOP 

U7ad0: NOP 
U7ad1: NOP 
U7ad2: NOP 

U7ad4: NOP 
U7ad5: NOP 
U7ad6: NOP 

U7ad8: NOP 
U7ad9: NOP 
U7ada: NOP 

U7adc: NOP 
U7add: NOP 
U7ade: NOP 

U7ae0: NOP 
U7ae1: NOP 
U7ae2: NOP 

U7ae4: NOP 
U7ae5: NOP 
U7ae6: NOP 

U7ae8: NOP 
U7ae9: NOP 
U7aea: NOP 

U7aec: NOP 
U7aed: NOP 
U7aee: NOP 

U7af0: NOP 
U7af1: NOP 
U7af2: NOP 

U7af4: NOP 
U7af5: NOP 
U7af6: NOP 

U7af8: NOP 
U7af9: NOP 
U7afa: NOP 

U7afc: NOP 
U7afd: NOP 
U7afe: NOP 

U7b00: NOP 
U7b01: NOP 
U7b02: NOP 

U7b04: NOP 
U7b05: NOP 
U7b06: NOP 

U7b08: NOP 
U7b09: NOP 
U7b0a: NOP 

U7b0c: NOP 
U7b0d: NOP 
U7b0e: NOP 

U7b10: NOP 
U7b11: NOP 
U7b12: NOP 

U7b14: NOP 
U7b15: NOP 
U7b16: NOP 

U7b18: NOP 
U7b19: NOP 
U7b1a: NOP 

U7b1c: NOP 
U7b1d: NOP 
U7b1e: NOP 

U7b20: NOP 
U7b21: NOP 
U7b22: NOP 

U7b24: NOP 
U7b25: NOP 
U7b26: NOP 

U7b28: NOP 
U7b29: NOP 
U7b2a: NOP 

U7b2c: NOP 
U7b2d: NOP 
U7b2e: NOP 

U7b30: NOP 
U7b31: NOP 
U7b32: NOP 

U7b34: NOP 
U7b35: NOP 
U7b36: NOP 

U7b38: NOP 
U7b39: NOP 
U7b3a: NOP 

U7b3c: NOP 
U7b3d: NOP 
U7b3e: NOP 

U7b40: NOP 
U7b41: NOP 
U7b42: NOP 

U7b44: NOP 
U7b45: NOP 
U7b46: NOP 

U7b48: NOP 
U7b49: NOP 
U7b4a: NOP 

U7b4c: NOP 
U7b4d: NOP 
U7b4e: NOP 

U7b50: NOP 
U7b51: NOP 
U7b52: NOP 

U7b54: NOP 
U7b55: NOP 
U7b56: NOP 

U7b58: NOP 
U7b59: NOP 
U7b5a: NOP 

U7b5c: NOP 
U7b5d: NOP 
U7b5e: NOP 

U7b60: NOP 
U7b61: NOP 
U7b62: NOP 

U7b64: NOP 
U7b65: NOP 
U7b66: NOP 

U7b68: NOP 
U7b69: NOP 
U7b6a: NOP 

U7b6c: NOP 
U7b6d: NOP 
U7b6e: NOP 

U7b70: NOP 
U7b71: NOP 
U7b72: NOP 

U7b74: NOP 
U7b75: NOP 
U7b76: NOP 

U7b78: NOP 
U7b79: NOP 
U7b7a: NOP 

U7b7c: NOP 
U7b7d: NOP 
U7b7e: NOP 

U7b80: NOP 
U7b81: NOP 
U7b82: NOP 

U7b84: NOP 
U7b85: NOP 
U7b86: NOP 

U7b88: NOP 
U7b89: NOP 
U7b8a: NOP 

U7b8c: NOP 
U7b8d: NOP 
U7b8e: NOP 

U7b90: NOP 
U7b91: NOP 
U7b92: NOP 

U7b94: NOP 
U7b95: NOP 
U7b96: NOP 

U7b98: NOP 
U7b99: NOP 
U7b9a: NOP 

U7b9c: NOP 
U7b9d: NOP 
U7b9e: NOP 

U7ba0: NOP 
U7ba1: NOP 
U7ba2: NOP 

U7ba4: NOP 
U7ba5: NOP 
U7ba6: NOP 

U7ba8: NOP 
U7ba9: NOP 
U7baa: NOP 

U7bac: NOP 
U7bad: NOP 
U7bae: NOP 

U7bb0: NOP 
U7bb1: NOP 
U7bb2: NOP 

U7bb4: NOP 
U7bb5: NOP 
U7bb6: NOP 

U7bb8: NOP 
U7bb9: NOP 
U7bba: NOP 

U7bbc: NOP 
U7bbd: NOP 
U7bbe: NOP 

U7bc0: NOP 
U7bc1: NOP 
U7bc2: NOP 

U7bc4: NOP 
U7bc5: NOP 
U7bc6: NOP 

U7bc8: NOP 
U7bc9: NOP 
U7bca: NOP 

U7bcc: NOP 
U7bcd: NOP 
U7bce: NOP 

U7bd0: NOP 
U7bd1: NOP 
U7bd2: NOP 

U7bd4: NOP 
U7bd5: NOP 
U7bd6: NOP 

U7bd8: NOP 
U7bd9: NOP 
U7bda: NOP 

U7bdc: NOP 
U7bdd: NOP 
U7bde: NOP 

U7be0: NOP 
U7be1: NOP 
U7be2: NOP 

U7be4: NOP 
U7be5: NOP 
U7be6: NOP 

U7be8: NOP 
U7be9: NOP 
U7bea: NOP 

U7bec: NOP 
U7bed: NOP 
U7bee: NOP 

U7bf0: NOP 
U7bf1: NOP 
U7bf2: NOP 

U7bf4: NOP 
U7bf5: NOP 
U7bf6: NOP 

U7bf8: NOP 
U7bf9: NOP 
U7bfa: NOP 

U7bfc: NOP 
U7bfd: NOP 
U7bfe: r11:= ADD_DSZ32(tmp15, tmp7) !m0 
