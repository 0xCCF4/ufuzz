U0000: tmp15:= MOVEFROMCREG_DSZ64( , 0x068) 
U0001: tmp0:= ZEROEXT_DSZ32(0x00000001) SEQW GOTO U0e5e
U0002: tmp7:= ZEROEXT_DSZ64() 

U0004: mm7:= unk_5b9() 
U0005: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U0002
U0006: SYNCWAIT-> URET(0x00) 

U0008: tmp14:= SAVEUIP(0x01, U056c) !m0 SEQW GOTO U0909
U0009: tmp13:= SUB_DSZ32(0x000001a4, tmp8) 
U000a: tmp13:= SELECTCC_DSZ32_CONDNZ(tmp13, 0x00000800) 

U000c: tmp13:= NOTAND_DSZ64(tmp13, tmp1) 
U000d: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp13, U3701) 
U000e: NOP SEQW GOTO U2711

U0010: tmp14:= SAVEUIP(0x01, U056c) !m0 SEQW GOTO U07e1
sha256_ret:
U0011: tmp13:= READURAM( , 0x008e, 64) 
U0012: tmp14:= SHR_DSZ64(tmp13, 0x00000020) 

U0014: tmp13:= MOVEINSERTFLGS_DSZ32(tmp14, tmp13) 
U0015: tmp14:= READURAM( , 0x008d, 64) 
U0016: UJMP( , tmp11) 

U0018: tmp14:= SAVEUIP(0x01, U0352) !m0 SEQW GOTO U0911
U0019: tmp13:= RDSEGFLD(TSS, SEL) 
U001a: LFNCEMARK-> unk_e7b(tmp0, tmp2) 

U001c: tmp2:= ZEROEXT_DSZ32(tmp13) 
U001d: LFNCEWAIT-> unk_da8( , tmp2) 
U001e: tmp5:= BTS_DSZ64(0x00000000, 0x0000000e) SEQW GOTO U11b2

U0020: tmp4:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 SEQW GOTO U0919
FUN_ucode_0000021:
U0021: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U0022: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U0024: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040) 
U0025: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000060) 
U0026: tmp12:= ADD_DSZ32(0x00000080, tmp12) SEQW URET0

U0028: tmp0:= RCXBTCNTMSK_DSZ8(rcx) SEQW GOTO U0969
U0029: tmp8:= ZEROEXT_DSZ32N(tmp1, r64dst) !m1 
U002a: tmp1:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 

U002c: GENARITHFLAGS(tmp1, tmp2) !m2 
U002d: tmp8:= OR_DSZN(tmp2, tmp8) !m1 
U002e: r64dst:= CMOVCC_DSZ64_CONDZ(r64dst, tmp8) !m2 SEQW UEND0

U0030: tmp0:= RCXBTCNTMSK_DSZ8(rcx) SEQW GOTO U0801
U0031: tmp1:= SUB_DSZN(tmp0, IMM_MACRO_43) !m0,m1 
U0032: tmp2:= unk_12f(tmp2, tmp1) !m1 

U0034: tmp2:= SELECTCC_DSZ64_CONDZ(tmp4, tmp2) 
U0035: tmp4:= SELECTCC_DSZ32_CONDZ(tmp4, 0x00000021) 
U0036: tmp3:= unk_10f(tmp3, tmp2) !m1 SEQW URET1

U0038: tmp0:= OR_DSZ64(rcx) SEQW GOTO U0809
U0039: tmp0:= unk_08f(0x00000106) 
U003a: tmp0:= CMOVCC_DSZ16_CONDZ(tmp3, tmp0) 

U003c: tmp7:= CMOVCC_DSZ16_CONDZ(tmp3, 0x00000005) 
U003d: rax:= ADD_DSZ16(tmp0, rax) 
U003e: rax:= AND_DSZ8(0x0000000f, rax) !m2 SEQW GOTO U6049

U0040: tmp0:= OR_DSZ64(rcx) SEQW GOTO U0981
U0041: tmp14:= ZEROEXT_DSZ16(0x00005962) 
U0042: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 

U0044: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000006, U5df2) !m0,m2 
U0045: SYNCFULL-> NOP 
U0046: NOP SEQW GOTO U0045

U0048: tmp0:= CMOVCC_DSZ64_CONDZ(0x00000001) !m2 SEQW GOTO U09c1
U0049: tmp11:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
U004a: tmp11:= OR_DSZ32(0x00000101, tmp11) 

U004c: MOVETOCREG_DSZ64(tmp11, 0x2cd, 32) !m1,m2 
U004d: tmp4:= ZEROEXT_DSZ32(0xffffffffffffffff) 
U004e: MOVETOCREG_DSZ64(tmp4, 0x281, 32) !m1,m2 SEQW GOTO U638d

U0050: tmp0:= CMOVCC_DSZ64_CONDNZ(0x00000001) !m2 SEQW GOTO U09c1
FUN_ucode_0000051:
U0051: tmp13:= ZEROEXT_DSZ64(tmp7) 
U0052: SYNCFULL-> UJMP( , U39f5) SEQW SAVEUIP1 U0054

U0054: tmp12:= SUB_DSZ64(0x00000008, tmp12) 
U0055: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U0051
U0056: NOP SEQW URET0

U0058: SAVEUIP( , 0x01, U0c79) !m0 SEQW GOTO U06f1
compute_ucode_sha_start:
U0059: tmp7:= SUB_DSZ64(0x00000200, tmp7) 
U005a: tmp5:= ZEROEXT_DSZ64(tmp14) 

U005c: tmp6:= ZEROEXT_DSZ32(0x00000002) 
U005d: tmp11:= ZEROEXT_DSZ16(0x00002a99) 
U005e: WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U50c4

U0060: SAVEUIP( , 0x01, U4120) !m0 SEQW GOTO U0841
caseD_61:
U0061: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000001) 
U0062: tmp4:= ADD_DSZ64(0x00000005, tmp4) 

U0064: tmp0:= AND_DSZ8(tmp0, tmp10) 
U0065: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp0, tmp1) 
U0066: tmp4:= ADD_DSZ64(tmp1, tmp4) SEQW GOTO U1ea6

U0068: SAVEUIP( , 0x01, U426a) !m0 SEQW GOTO U0841
U0069: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0xfffffffffffffffc) 
U006a: tmp4:= ADD_DSZ64(tmp1, tmp4) 

U006c: tmp0:= READURAM( , 0x0053, 64) 
U006d: tmp0:= OR_DSZ32(0x00000001, tmp0) 
U006e: WRITEURAM(tmp0, 0x0053, 32) !m2 SEQW GOTO U1ea6

U0070: NOP SEQW GOTO U221e
U0071: NOP 
U0072: SAVEUIP( , 0x00, U2769) 

U0074: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U2c1d
U0075: TESTUSTATE( , SYS, UST_VMX_DIS | UST_VMX_OP_DIS) !m1 ? SEQW URET0
U0076: UJMP( , U2711) 

U0078: tmp13:= SAVEUIP(0x00, U221e) SEQW GOTO U2656
U0079: tmp14:= READUIP_REGOVR(0x01) !m0 
U007a: tmp0:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 

U007c: tmp4:= ADD_DSZ64(0x00000002, tmp4) 
U007d: tmp12:= SUB_DSZ32(0x00000001, tmp0) 
U007e: SYNCFULL-> UFLOWCTRL( , tmp12, MSLOOPCTR) SEQW URET1

U0080: tmp8:= unk_6a0() !m2 SEQW GOTO U02c9
U0081: NOP 
U0082: UFLOWCTRL( , tmp15, MSLOOPCTR) 

U0084: SYNCFULL-> NOP 
U0085: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U0084
U0086: URET(0x00) 

U0088: tmp8:= unk_6a0() !m2 SEQW GOTO U02c9
U0089: NOP 
U008a: LFNCEMARK-> unk_e7b(tmp0, tmp2) !m0 

U008c: NOP 
U008d: NOP 
U008e: LFNCEWAIT-> NOP SEQW UEND0

U0090: tmp8:= unk_6a0() !m2 SEQW GOTO U02c9
U0091: NOP 
U0092: LFNCEMARK-> tmp1:= unk_e7b(tmp0, tmp2) !m1,m2 

U0094: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp1, tmp1) 
U0095: tmp14:= SAVEUIP(0x01, U39a4) !m0 
U0096: tmp1:= MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x7f5) !m2 SEQW GOTO U3994

U0098: tmp8:= unk_6a0() !m2 SEQW GOTO U02c9
U0099: NOP 
U009a: SYNCFULL-> MOVETOCREG_OR_DSZ64( , 0x00000001, 0x201) !m1,m2 

U009c: SYNCFULL-> MOVETOCREG_OR_DSZ64( , 0x00000001, 0x204) !m1,m2 
U009d: MOVETOCREG_DSZ64( , 0x00000000, 0x201, 32) !m1,m2 
U009e: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW URET0

U00a0: SAVEUIP( , 0x01, U0372) !m0 SEQW GOTO U0a49
patch_handle_get_value:
U00a1: tmp14:= READUIP_REGOVR(0x01) !m0 
U00a2: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 

U00a4: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x00000004) 
U00a5: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x0000000c) 
U00a6: tmp4:= ADD_DSZ64(0x00000014, tmp4) SEQW URET1

U00a8: tmp8:= OR_DSZ32(0x00000004) SEQW GOTO U0a62
U00a9: tmp0:= CONCAT_DSZ16(0x00000100, tmp0) 
U00aa: WRITEURAM(tmp0, 0x000e, 32) !m2 

U00ac: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U00ad: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U2091) !m0,m1 
U00ae: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x29d) !m1,m2 SEQW GOTO U37aa

U00b0: SAVEUIP( , 0x01, U4291) !m0 SEQW GOTO U0841
FUN_ucode_00000b1:
U00b1: tmpv1:= OR_DSZ32(tmp3, tmpv1) 
U00b2: tmpv2:= CONCAT_DSZ16(tmpv2, tmpv1) 

U00b4: tmpv2:= CONCAT_DSZ32(0xffffffffffffffff, tmpv2) 
U00b5: WRSEGFLD(0x00000000) !m0 
U00b6: WRSEGFLD(tmpv2) !m0 SEQW URET1

U00b8: tmp15:= ADD_DSZ32(0x00000001) SEQW GOTO U0a59
U00b9: tmp2:= RDSEGFLD(UNK_SEG_04, SEL) 
U00ba: unk_da2() 

U00bc: tmp8:= NOTAND_DSZ32(0x00000007, tmp2) 
U00bd: unk_d62(tmp8) 
U00be: tmp13:= ZEROEXT_DSZ16(0x00000019) SEQW GOTO U46f9

U00c0: SAVEUIP( , 0x01, U4195) !m0 SEQW GOTO U0841
FUN_ucode_00000c1:
U00c1: tmp14:= READUIP_REGOVR(0x01) !m0 
U00c2: LFNCEWAIT-> tmp2:= RDSEGFLD(SEG_V0, SEL) 

U00c4: tmp0:= unk_d61(tmp2) 
U00c5: tmp1:= unk_d61(tmp2) 
U00c6: tmp0:= CMOVCC_DSZ64_CONDNB(tmp1, tmp0) SEQW URET1

U00c8: SAVEUIP( , 0x01, U41ad) !m0 SEQW GOTO U0841
U00c9: tmp1:= AND_DSZ32(0x000000fc, tmp6) 
U00ca: tmp1:= SUB_DSZ32(0x00000030, tmp1) 

U00cc: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U0414) 
U00cd: tmp6:= NOTAND_DSZ32(0x00000003, tmp6) 
U00ce: tmp6:= OR_DSZ32(0x00000001, tmp6) SEQW GOTO U0414

U00d0: NOP 
U00d1: LFNCEMARK-> NOP SEQW GOTO U008e
U00d2: WRMSLOOPCTRFBR(0x00000007) 

U00d4: SYNCWAIT-> xmm7:= unk_5b9() 
U00d5: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U00d4
U00d6: NOP SEQW URET1

U00d8: LBSYNC(0x00000000) 
U00d9: LFNCEMARK-> NOP SEQW GOTO U008e
U00da: tmp15:= SELECTCC_DSZ32_CONDNB(tmp4, 0x00002000) 

U00dc: SYNCFULL-> MOVETOCREG_DSZ64(tmp15, 0x7f5) 
U00dd: MOVETOCREG_DSZ64(tmp1, 0x71a) 
U00de: UJMP( , tmp11) 

U00e0: SAVEUIP_REGOVR(0x01, U00e1, 0x000e) !m0 SEQW GOTO U0b91
U00e1: tmp2:= ZEROEXT_DSZ32(0x00000004) 
U00e2: tmp2:= SUB_DSZ32(0x00000001, tmp2) 

U00e4: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp2, U17ec) 
U00e5: tmp1:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U00e6: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U00e2) SEQW GOTO U17ec

U00e8: tmp2:= SAVEUIP(r64src, 0x01, U072c) !m0 SEQW GOTO U0561
FUN_ucode_00000e9:
U00e9: tmp0:= ZEROEXT_DSZ32(0x0002001c) 
U00ea: TESTUSTATE( , VMX, !0x4000) !m0,m2 ? SEQW URET1

U00ec: TESTUSTATE( , VMX, 0x8000) !m2 ? SEQW GOTO U0c72
U00ed: tmp12:= READURAM( , 0x0011, 64) 
U00ee: SAVEUIP_REGOVR(0x01, U00f0, 0x0001) !m0 SEQW URET0

U00f0: tmp2:= RDSEGFLD(TSS, SEL) SEQW GOTO U0a69
U00f1: tmp13:= ZEROEXT_DSZ32(tmp0) 
U00f2: MOVETOCREG_SHR_DSZ64(tmp2, 0x00000010, 0x6c5) 

U00f4: tmp12:= SHR_DSZ64(tmp2, 0x00000020) 
U00f5: tmp15:= SUB_DSZ16(tmp4) 
U00f6: tmp12:= ADDSUB_DSZ16_CONDD(tmp15, tmp12) SEQW GOTO U2dc4

U00f8: tmp14:= SAVEUIP(0x01, U4055) !m0 SEQW GOTO U0861
U00f9: tmp2:= SUB_DSZN(0x000006e0, rcx) !m1 
U00fa: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U00fd) 

U00fc: LBSYNC(0x00000002) 
U00fd: tmp10:= OR_DSZ32(0x00004000, tmp8) 
U00fe: tmp10:= NOTAND_DSZ32(0x00018000, tmp10) SEQW GOTO U0ae5

U0100: tmp14:= SAVEUIP(0x01, U4055) !m0 SEQW GOTO U0569
U0101: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3300) 
U0102: tmp1:= READURAM( , 0x005c, 64) 

U0104: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U2711) !m1 
U0105: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U2711
U0106: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNO(tmp8, U2711) SEQW URET1

U0108: tmp14:= SAVEUIP(0x01, U390a) !m0 SEQW GOTO U0569
U0109: tmp1:= READURAM( , 0x0042, 64) 
U010a: tmp1:= BT_DSZ32(tmp1, 0x0000000f) 

U010c: tmp1:= CMOVCC_DSZ16_CONDB(tmp1, tmp5) 
U010d: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, U2711, tmp5) !m1 
U010e: PORTOUT_DSZ32_ASZ16_SC1(0x00c4,  , tmp5) !m2 SEQW GOTO U3204

U0110: tmp14:= SAVEUIP(0x01, U07ee) !m0 SEQW GOTO U0861
U0111: tmp1:= unk_226(0x00000064, tmp1) 
U0112: unk_114( , tmp1) 

U0114: tmp1:= ADD_DSZ32(0x00000800, tmp1) 
U0115: tmp1:= SHL_DSZ64(tmp1, 0x00000020) 
U0116: tmp5:= AND_DSZ32(0x0000ff00, tmp5) SEQW GOTO U3056

U0118: tmp14:= SAVEUIP(0x01, U07f6) !m0 SEQW GOTO U0861
U0119: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U011a: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U2711) !m1 

U011c: LFNCEMARK-> tmp2:= READURAM( , 0x003a, 64) 
U011d: tmp2:= BTR_DSZ64(tmp2, 0x00000020) 
U011e: WRITEURAM(tmp2, 0x003a, 64) !m2 SEQW URET1

U0120: tmp14:= SAVEUIP(0x01, U07f6) !m0 SEQW GOTO U0569
U0121: tmp2:= OR_DSZ32(0x00000100, tmp2) 
U0122: FETCHFROMEIP0_ASZ64( , tmp6) 

U0124: tmp0:= READURAM( , 0x001f, 64) !m2 
U0125: tmp0:= BTS_DSZ64(tmp0, 0x00000024) 
U0126: LFNCEMARK-> WRITEURAM(tmp0, 0x011f, 64) !m2 SEQW GOTO U4e6a

U0128: SAVEUIP( , 0x00, U2849) SEQW GOTO U0862
FUN_ucode_0000129:
U0129: tmp1:= MOVEFROMCREG_DSZ64( , 0x513) 
U012a: tmp15:= ZEROEXT_DSZ32(0x000000ff) 

U012c: tmp15:= CONCAT_DSZ32(tmp15, 0xfffffffffffff000) 
U012d: tmp4:= AND_DSZ64(tmp15, tmp1) 
U012e: tmp1:= SHR_DSZ64(tmp1, 0x00000032) SEQW URET0

U0130: tmp2:= SAVEUIP(r64src, 0x01, U008a) !m0 SEQW GOTO U2bd8
U0131: tmp3:= ZEROEXT_DSZ32(0x00000003) 
U0132: tmp0:= READURAM( , 0x0058, 64) 

U0134: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000c00, mode=0x01, tmp0) 
U0135: tmp15:= ZEROEXT_DSZ32() 
U0136: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U2769) !m1 SEQW GOTO U04c6

U0138: tmp2:= LDZX_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 SEQW GOTO U0c91
FUN_ucode_0000139:
U0139: tmp15:= READURAM( , 0x0020, 64) 
U013a: tmp15:= BT_DSZ32(tmp15, 0x00000001) 

U013c: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00003b00) 
U013d: tmp15:= ADD_DSZ32(0x000020c0, tmp15) 
U013e: WRMSLOOPCTRFBR( , 0x0000000f) SEQW URET0

U0140: tmp8:= UPDATEUSTATE(!0x04) !m0 
U0141: LFNCEMARK-> tmp14:= SAVEUIP(0x01, U43ec) !m0 SEQW GOTO U0752
U0142: tmp2:= unk_16f(r64dst, tmp2) 

U0144: tmp2:= SELECTCC_DSZ64_CONDZ(tmp4, tmp2) 
U0145: tmp4:= SELECTCC_DSZ32_CONDZ(tmp4, 0x0000003f) 
U0146: tmp3:= unk_34f(tmp3, tmp2) SEQW URET1

U0148: tmp4:= SAVEUIP(r64dst, 0x00, U2d95) SEQW GOTO U0631
U0149: MOVETOCREG_DSZ64(tmp6, 0x7fe) !m2 
U014a: tmp14:= SHL_DSZ32(tmp2, 0x00000005) 

U014c: tmp15:= ADD_DSZ32(0x00004414, tmp14) 
U014d: SAVEUIP( , 0x00, U0686) 
U014e: UFLOWCTRL( , tmp15, URET0) SEQW GOTO U251e

U0150: tmp12:= READURAM( , 0x0011, 64) SEQW GOTO U147e
U0151: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xffffffffffffffe8, mode=0x01,  , tmp12) 
U0152: tmp0:= MOVEFROMCREG_DSZ64( , 0x510) 

U0154: tmp0:= AND_DSZ32(0x0000001f, tmp0) 
U0155: tmp0:= CONCAT_DSZ32(tmp0, 0x00000b0e) 
U0156: tmp3:= ZEROEXT_DSZ32(0x00000018) SEQW GOTO U31ec

U0158: tmp12:= READURAM( , 0x0011, 64) SEQW GOTO U147e
U0159: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x47f0) !m2 
U015a: tmp0:= SHR_DSZ64(tmp0, 0x0000000d) 

U015c: tmp0:= AND_DSZ32(0x00000008, tmp0) 
U015d: rcx:= OR_DSZ32(0x00000001, tmp0) 
U015e: rbx:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U17ec

U0160: tmp1:= LDTICKLE_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m2 
U0161: tmp1:= unk_3af(r64dst, tmp1) !m2 SEQW GOTO U03aa
U0162: SYNCFULL-> UFLOWCTRL( , tmp11, URET1) 

FUN_ucode_0000164:
U0164: unk_dff() 
U0165: LFNCEWAIT-> MOVETOCREG_OR_DSZ64( , 0x00000008, 0x63a) 
U0166: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x63e) !m0 SEQW GOTO U27ae

U0168: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0169: tmp1:= ADC(r64dst, tmp1) !m1,m2 SEQW GOTO U03aa
U016a: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_d3, mode=0x0a, rbp) !m0,m1 

U016c: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_cb, mode=0x0a, rsi) !m0,m1 
U016d: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_c3, mode=0x0a, rdi) !m0,m1 
U016e: rsp:= ADD_DSZN(IMM_MACRO_c3, rsp) !m0,m1 SEQW UEND0

U0170: tmp1:= LDTICKLE_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m2 
U0171: tmp1:= unk_3a8(r64dst, tmp1) !m2 SEQW GOTO U03aa
U0172: rax:= SELECTCC_DSZ64_CONDNZ(tmp5, rax) 

U0174: unk_eff() 
U0175: SYNCFULL-> NOP 
U0176: unk_256() !m1 SEQW UEND0

U0178: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0179: tmp1:= SBB(r64dst, tmp1) !m1,m2 SEQW GOTO U03aa
U017a: tmp0:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

U017c: tmp4:= SUB_DSZN(tmp0, tmp3) !m1 
U017d: tmp5:= ZEROEXT_DSZ16(0x00000025) 
U017e: SAVEUIP( , 0x01, U34c5) !m0 SEQW GOTO U268c

U0180: tmp1:= LDTICKLE_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m2 
U0181: tmp1:= unk_3a9(r64dst, tmp1) !m2 SEQW GOTO U03aa
U0182: WRITEURAM( , 0x00000000, 0x0007, 32) 

U0184: tmp15:= ZEROEXT_DSZ32(0x00000120) 
U0185: MOVETOCREG_DSZ64(tmp15, 0x00b) 
U0186: tmp3:= ZEROEXT_DSZ32(0x00002048) SEQW GOTO U27fc

U0188: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0189: tmp1:= unk_00f(IMM_MACRO_ALIAS_IMMEDIATE, tmp1) !m0,m1,m2 SEQW GOTO U03aa
U018a: tmp10:= unk_6ed(tmp9, tmp11) !m2 

U018c: tmp9:= unk_52b(tmp10) 
U018d: tmp11:= unk_52b(tmp10) 
U018e: r64dst:= unk_6ed(tmp11, tmp9) !m0,m2 SEQW UEND0

U0190: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0191: tmp1:= ADC(IMM_MACRO_ALIAS_IMMEDIATE, tmp1) !m0,m1,m2 SEQW GOTO U03aa
U0192: tmp0:= OR_DSZ16(0x0000003f, tmp0) 

U0194: MOVETOCREG_DSZ64(tmp0, 0x486) !m2 
U0195: tmp10:= NOTAND_DSZ16(0x00008080, tmp10) 
U0196: SYNCFULL-> MOVETOCREG_DSZ64(tmp10, 0x48c) !m2 SEQW GOTO U221e

U0198: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0199: tmp1:= SBB(IMM_MACRO_ALIAS_IMMEDIATE, tmp1) !m0,m1,m2 SEQW GOTO U03aa
U019a: tmp7:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 

U019c: tmp7:= BT_DSZ64(tmp7, 0x0000003f) 
U019d: LFNCEWAIT-> unk_cc2(tmp11, 0x000038ff) 
U019e: SAVEUIP( , 0x00, U573d) SEQW GOTO U6dac

U01a0: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U01a1: tmp1:= XOR_DSZN(0xffffffffffffffff, tmp1) !m1 SEQW GOTO U03aa
U01a2: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U01a4: tmp7:= AND_DSZ32(0x00000020, tmp5) 
U01a5: tmp8:= MOVEFROMCREG_DSZ64( , 0x48c) 
U01a6: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U453e) SEQW GOTO U0404

U01a8: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U01a9: tmp1:= SUB_DSZ32(tmp1) !m1,m2 SEQW GOTO U03aa
U01aa: WRSEGFLD(tmp7, LDT, SEL+FLGS+LIM) 

U01ac: tmp7:= RDSEGFLD(UNK_SEG_04, BASE) 
U01ad: tmp3:= CONCAT_DSZ32(tmp0, tmp7) 
U01ae: LFNCEMARK-> WRSEGFLD(tmp3, LDT, BASE) SEQW GOTO U17ec

U01b0: tmp0:= LA2LIN_DSZ64(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0 
U01b1: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0
U01b2: LFNCEWAIT-> tmp11:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) 

U01b4: WRSEGFLD(tmp11, LDT, SEL+FLGS+LIM) 
U01b5: tmp11:= RDSEGFLD(UNK_SEG_04, BASE) 
U01b6: LFNCEMARK-> WRSEGFLD(tmp11, LDT, BASE) SEQW GOTO U17ec

U01b8: tmp0:= unk_2a2(r64src) !m2 
U01b9: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0
U01ba: tmp3:= unk_d61(tmp2) 

U01bc: tmp1:= unk_d61(tmp2) 
U01bd: tmp3:= CMOVCC_DSZ64_CONDNB(tmp1, tmp3) 
U01be: LFNCEMARK-> unk_e6b(tmp3) !m1,m2 SEQW URET0

U01c0: tmp0:= unk_0bc(r64src) 
U01c1: r64dst:= unk_2e3(tmp0, r64dst) SEQW UEND0
U01c2: WRSEGFLD(0x00000000, DS, SEL) 

U01c4: WRSEGFLD(0x00000000, ES, SEL) 
U01c5: WRSEGFLD(0x00000000, FS, SEL) 
U01c6: LFNCEMARK-> WRSEGFLD(0x00000000, GS, SEL) SEQW GOTO U1cf1

U01c8: tmp0:= unk_2a5(r64src, r64dst) !m2 
U01c9: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0
U01ca: LFNCEWAIT-> r11:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U01cc: r11:= READAFLAGS( , r11) !m2 
U01cd: tmp6:= NOTAND_DSZ32(tmp4, r11) 
U01ce: tmp5:= MOVE_DSZ64(tmp0) SEQW GOTO U1891

U01d0: tmp0:= unk_2a5(IMM_MACRO_ALIAS_IMMEDIATE, r64src) !m0,m2 
U01d1: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0
U01d2: tmp2:= SHR_DSZ32(tmp0, 0x00000010) 

U01d4: tmp2:= ZEROEXT_DSZ16(tmp2) 
U01d5: tmp0:= unk_d61(tmp2) 
U01d6: LFNCEMARK-> unk_e7b(tmp0, tmp2) !m1 SEQW GOTO U3801

U01d8: tmp0:= unk_2ef(r64src, rax) !m2 
U01d9: rax:= ZEROEXT_DSZ16(tmp0, rax) SEQW UEND0
U01da: tmp2:= RDSEGFLD(TSS, SEL) 

U01dc: tmp7:= NOTAND_DSZ32(0x00000007, tmp2) 
U01dd: unk_d62(tmp7) 
U01de: NOP SEQW GOTO U3cd4

U01e0: tmp3:= LDTICKLE_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U01e1: SAVEUIP( , 0x01, U0574) !m0 SEQW GOTO U0462
U01e2: LFNCEWAIT-> tmp0:= RDSEGFLD(CS, BASE) 

U01e4: WRSEGFLD(tmp0, UNK_SEG_09, BASE) 
U01e5: tmp0:= RDSEGFLD(CS, SEL+FLGS+LIM) 
U01e6: SYNCFULL-> WRSEGFLD(tmp0, UNK_SEG_09, FLGS) SEQW GOTO U2d30

U01e8: tmp3:= LDTICKLE_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U01e9: SAVEUIP( , 0x01, U0574) !m0 SEQW GOTO U046a
U01ea: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 

U01ec: tmp10:= RDSEGFLD(SS_KERNM, UNK_FLD_0c) 
U01ed: tmp15:= OR_DSZN(rsi) !m1 
U01ee: tmp10:= ADD_DSZN(tmp15, tmp10) !m1 SEQW GOTO U343c

U01f0: tmp3:= LDTICKLE_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U01f1: SAVEUIP( , 0x01, U0574) !m0 SEQW GOTO U0962
U01f2: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 

U01f4: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 
U01f5: tmp0:= IMUL64L_DSZ64(tmp15, tmp0) 
U01f6: tmp0:= SHR_DSZ64(tmp0, 0x00000020) SEQW GOTO U5aca

U01f8: tmp3:= LDTICKLE_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U01f9: SAVEUIP( , 0x01, U0574) !m0 SEQW GOTO U0972
U01fa: tmp14:= SHL_DSZ32(tmp1, 0x00000003) 

U01fc: PORTOUT_DSZ64_ASZ16_SC1(0x4730, tmp14, tmp5) !m2 
U01fd: tmp1:= ADD_DSZ32(tmp1, 0x00002205) 
U01fe: MOVETOCREG_DSZ64(tmp5, tmp1) !m1,m2 SEQW GOTO U3398

U0200: tmp3:= LDTICKLE_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0201: tmp0:= OR_DSZ64(rcx) SEQW GOTO U097a
U0202: tmp1:= AND_DSZ32(0x00007f00, tmp1) 

U0204: tmp1:= MOVEMERGEFLGS_DSZ32(tmp1, tmp2) 
U0205: tmp1:= CMOVCC_DSZ32_CONDNZ(tmp1, tmp5) 
U0206: tmp5:= NOTAND_DSZ64(0x00007f00, tmp5) SEQW GOTO U3056

U0208: tmp3:= CONCAT_DSZ32(r64dst, r64src) 
U0209: r64src:= unk_12f(tmp3, rcx) !m2 SEQW UEND0
U020a: tmp1:= unk_d9b(0x000000c0) !m2 

U020c: tmp1:= NOTAND_DSZ32(0x00400001, tmp1) 
U020d: tmp5:= OR_DSZ32(tmp5, tmp1) 
U020e: tmp5:= unk_d9f(0x000000c0) !m2 SEQW GOTO U56f8

U0210: tmp3:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0211: tmp0:= OR_DSZ64(rcx) SEQW GOTO U098a
U0212: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x46bc) !m2 

U0214: tmp1:= NOTAND_DSZ32(0x0003c000, tmp1) 
U0215: tmp1:= OR_DSZ32(tmp5, tmp1) 
U0216: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(0x46bc,  , tmp1) !m2 SEQW GOTO U60d2

U0218: tmp0:= SAVEUIP(rcx, 0x01, U080a) !m0 
U0219: tmp3:= OR_DSZ64(r64src) SEQW GOTO U0994
U021a: tmp2:= AND_DSZ32(0x003ff000, tmp5) 

U021c: tmp2:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000800) 
U021d: tmp1:= OR_DSZ64(tmp2, tmp1) 
U021e: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, tmp3) SEQW GOTO U3200

U0220: tmp3:= LDTICKLE_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0221: SAVEUIP( , 0x01, U0574) !m0 SEQW GOTO U0992
U0222: tmp5:= OR_DSZ8(tmp5, tmp1) 

U0224: tmp1:= READURAM( , 0x005c, 64) 
U0225: tmp1:= SHR_DSZ64(tmp1, 0x00000013) 
U0226: tmp1:= AND_DSZ32(0x00200000, tmp1) SEQW GOTO U3056

U0228: tmp3:= LDTICKLE_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0229: tmp0:= SAVEUIP(rcx, 0x01, U0574) !m0 SEQW GOTO U0994
U022a: tmp1:= NOTAND_DSZ32(0x00000001, tmp1) 

U022c: tmp1:= OR_DSZ8(tmp5, tmp1) 
U022d: PORTOUT_DSZ32_ASZ16_SC1(0x4c18,  , tmp1) !m2 
U022e: tmp12:= ZEROEXT_DSZ32(0x00001001) SEQW GOTO U3234

U0230: tmp0:= unk_02f(r64src, 0x00000008) !m1 
U0231: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0
U0232: LFNCEMARK-> tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000278) 

U0234: tmp9:= AND_DSZ32(0x00004000, tmp9) 
U0235: tmp8:= MOVEFROMCREG_DSZ64( , 0x105) 
U0236: LFNCEWAIT-> MOVETOCREG_OR_DSZ64(tmp8, 0x105, tmp9) SEQW GOTO U13b1

U0238: rdx:= ZEROEXT_DSZ32N(rax, rdx) !m1 
U0239: rdx:= SAR_DSZN(rdx, 0x0000000f) !m1 SEQW UEND0
U023a: tmp7:= MOVEMERGEFLGS_DSZ32(0x00000005, tmp7) 

U023c: tmp7:= CMOVCC_DSZ32_CONDNZ(tmp7, 0x00000006) 
U023d: tmp13:= MOVEMERGEFLGS_DSZ32(tmp7, tmp8) 
U023e: tmp13:= CMOVCC_DSZ32_CONDNZ(tmp13, 0x00000004) SEQW GOTO U2d69

U0240: tmp0:= MOVSX_DSZ8(rax) 
U0241: rax:= ZEROEXT_DSZ16(tmp0, rax) SEQW UEND0
U0242: tmp7:= LDZX_DSZN_ASZ32_SC1(tmp5, mode=0x18) !m1 

U0244: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, U0d14) 
U0245: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x0000000d, U0d14) 
U0246: tmp7:= unk_07e(tmp7, tmp2) !m2 SEQW URET0

U0248: tmp0:= CMOVCC_DSZ16_CONDB(0x000000ff) !m2 
U0249: rax:= ZEROEXT_DSZ8(tmp0, rax) SEQW UEND0
FUN_ucode_000024a:
U024a: SYNCWAIT-> tmp14:= READUIP_REGOVR(0x01) !m0 

U024c: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U2285
U024d: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, mode=0x01) 
U024e: LFNCEMARK-> tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000008, mode=0x01) SEQW URET1

U0250: tmp0:= SUB_DSZN(0x00000000, rcx) !m1 
U0251: unk_118(tmp0, IMM_MACRO_0a) !m0,m1 SEQW UEND0
FUN_ucode_0000252:
U0252: tmp14:= READUIP_REGOVR(0x01) !m0 

U0254: tmp0:= READURAM( , 0x0058, 64) 
U0255: tmp1:= ADD_DSZ64(0x00000c00, tmp0) 
U0256: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000008, mode=0x01, tmp1) SEQW URET1

U0258: tmp1:= SUB_DSZ8(0x00000006, rax) 
U0259: tmp1:= MOVEMERGEFLGS_DSZ32(0xfffffffffffffffa, tmp1) SEQW GOTO U09d1
FUN_ucode_000025a:
U025a: tmp15:= READURAM( , 0x0020, 64) 

U025c: tmp15:= BT_DSZ32(tmp15, 0x00000001) 
U025d: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00003b00) 
U025e: tmp15:= ADD_DSZ32(tmp14, tmp15) SEQW URET0

U0260: MOVE_DSZ32() 
U0261: SAVEUIP( , 0x01, U1f72) !m0 SEQW GOTO U09fa
U0262: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0264: LFNCEMARK-> tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0265: tmp14:= XOR_DSZ32(0xc0000000, r64dst) 
U0266: tmp14:= ZEROEXT_DSZ16(0x000043f5, tmp14) SEQW URET0

U0268: tmm1:= PSHUFD(mm0) 
U0269: tmm0:= PSHUFD(mm2) SEQW GOTO U0a04
FUN_ucode_000026a:
U026a: tmp9:= MOVEINSERTFLGS_DSZ64(tmp4, 0x00000020) 

U026c: tmp4:= SELECTCC_DSZ32_CONDNB(tmp9, 0x00000004) 
U026d: tmp9:= CMOVCC_DSZ32_CONDP(tmp9, tmp4) 
U026e: unk_25e( , tmp9) SEQW URET1

U0270: tmm7:= unk_511(xmmdst, xmm0) !m1 
U0271: xmm2:= unk_510(xmmsrc, tmm7) !m1 SEQW UEND0
U0272: STADPPHYS_DSZ32_ASZ64_SC1(tmp2, mode=0x01,  , 0x00000000) 

U0274: unk_a63(tmp14, 0x00008253) 
U0275: WRITEURAM(tmp6, 0x002c, 64) !m2 
U0276: tmp14:= ZEROEXT_DSZ32(0x00005ec0) SEQW GOTO U3dc2

U0278: tmp10:= unk_dc6(r64base, r64idx) !m0 
U0279: tmm0:= unk_526(xmmdst, tmm2) !m0 SEQW GOTO U0a21
U027a: tmp7:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 

U027c: tmp7:= NOTAND_DSZ32(tmp1, tmp7) 
U027d: SYNCFULL-> tmp7:= MOVETOCREG_OR_DSZ64(tmp7, 0x38f, tmp0) !m1 
U027e: tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x00000008, 0x38f) !m1,m2 SEQW URET1

U0280: tmp10:= unk_dc6(r64base, r64idx) !m0 
U0281: SAVEUIP( , 0x01, U0716) !m0 SEQW GOTO U06f1
U0282: tmp0:= SHL_DSZ32(tmp7, 0x0000000b) 

U0284: tmp0:= NOTAND_DSZ32(tmp0, 0x04000000) 
U0285: rdx:= OR_DSZ32(tmp0, rdx) 
U0286: rcx:= ZEROEXT_DSZ32(0x00000101) SEQW GOTO U17ec

U0288: tmp10:= unk_dc6(r64base, r64idx) !m0 
U0289: SAVEUIP( , 0x01, U07d6) !m0 SEQW GOTO U06f1
U028a: tmp3:= MOVEFROMCREG_DSZ64( , 0x2e6, 32) !m1 

U028c: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000009, U2769) !m1 
U028d: tmp3:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U028e: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000000a, U2769) !m0,m1 SEQW GOTO U27c9

U0290: NOP 
U0291: LFNCEMARK->WRTAGW-> tmm0:= unk_6a8(IMM_MACRO_ALIAS_STi) !m0 SEQW GOTO U4261
U0292: tmp9:= ADD_DSZ32() 

U0294: tmp1:= ZEROEXT_DSZ32(0x00000018) 
U0295: tmp2:= ZEROEXT_DSZ32(0x00002382) 
U0296: tmp14:= SAVEUIP(0x01, U2ce2) !m0 SEQW GOTO U6586

U0298: tmp1:= ZEROEXT_DSZ32(0x0000004f) 
U0299: LFNCEMARK-> tmp13:= SAVEUIP(0x00, U1b2c) SEQW GOTO U0a32
U029a: tmp5:= SUB_DSZ32(0x00000006, rax) 

U029c: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp5, U2711) 
U029d: tmp5:= SHL_DSZ32(rax, 0x00000010) 
U029e: SYNCMARK-> UFLOWCTRL( , tmp5, URET0) SEQW URET1

U02a0: tmp1:= ZEROEXT_DSZ32(0x0000004f) 
U02a1: LFNCEMARK-> tmp13:= SAVEUIP(0x00, U1b4c) SEQW GOTO U0a3a
U02a2: tmm2:= unk_76f(tmm0) 

U02a4: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp10, 0x2c1, 32) !m1 
U02a5: tmp10:= MOVEFROMCREG_DSZ64( , 0x480) 
U02a6: WRITEURAM(tmp10, 0x0062, 64) SEQW GOTO U1012

U02a8: mm0:= unk_73a() 
U02a9: rax:= ZEROEXT_DSZ16(tmp0, rax) SEQW UEND0
U02aa: tmm1:= unk_747(tmm2) 

U02ac: xmm0:= MOVHLPS(tmm1, tmm0) 
U02ad: tmp10:= READURAM( , 0x0062, 64) 
U02ae: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x480) !m2 SEQW GOTO U60d2

U02b0: tmm1:= FMOV( , 0x00004081) !m0 
U02b1: tmm6:= FMOV( , 0x00000091) !m0,m2 SEQW UEND1
FUN_ucode_00002b2:
U02b2: tmpv0:= ZEROEXT_DSZ32(0x00000002) 

U02b4: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , tmpv0) !m2 
U02b5: tmpv0:= PORTIN_DSZ32_ASZ16_SC1(0x0040) !m2 
U02b6: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U02b5) SEQW URET0

U02b8: tmp14:= SAVEUIP(0x01, U02b9) !m0 SEQW GOTO U0a41
U02b9: tmm1:= FMOV( , 0x00000091) !m0 SEQW UEND0
FUN_ucode_00002ba:
U02ba: tmpv0:= ZEROEXT_DSZ32(0x00000002) 

U02bc: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , tmpv0) !m2 
U02bd: tmpv0:= PORTIN_DSZ32_ASZ16_SC1(0x0040) !m2 
U02be: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U02bd) SEQW URET1

U02c0: tmp8:= unk_6a0() !m2 
U02c1: mm7:= FMOV( , tmm0) !m0 SEQW UEND1
FUN_ucode_00002c2:
U02c2: LFNCEWAIT-> tmpv1:= MOVEFROMCREG_DSZ64( , 0x00c) 

U02c4: tmpv1:= AND_DSZ32(0x00000400, tmpv1) 
U02c5: tmpv0:= MOVEFROMCREG_DSZ64( , 0x065) 
U02c6: tmpv0:= SELECTCC_DSZ32_CONDNZ(tmpv1, tmpv0) SEQW GOTO U050d

U02c8: tmp8:= unk_6a0() !m2 
U02c9: mm7:= unk_6dc( , tmm0) !m0 SEQW UEND1
FUN_ucode_00002ca:
U02ca: tmpv0:= MOVEFROMCREG_DSZ64( , 0x067) 

U02cc: tmpv1:= MOVEFROMCREG_DSZ64( , 0x065) 
U02cd: tmpv0:= SUB_DSZN(tmpv1, tmpv0) !m1 
U02ce: MOVETOCREG_DSZ64(tmpv0, 0x067) !m2 SEQW URET1

U02d0: NOP 
U02d1: NOP SEQW GOTO U2769
FUN_ucode_00002d2:
U02d2: tmpv0:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 

U02d4: WRSEGFLD(tmpv0, CS, SEL+FLGS+LIM) 
U02d5: tmpv0:= RDSEGFLD(UNK_SEG_09, BASE) 
U02d6: WRSEGFLD(tmpv0, CS, BASE) SEQW URET1

sidt_xlat:
U02d8: tmp1:= RDSEGFLD(IDT, LIMIT) 
U02d9: tmp3:= RDSEGFLD(IDT, BASE) SEQW GOTO U0c12
FUN_ucode_00002da:
U02da: tmpv0:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U02dc: WRSEGFLD(tmpv0, SS, SEL+FLGS+LIM) 
U02dd: tmpv0:= RDSEGFLD(SS_USERM, BASE) 
U02de: WRSEGFLD(tmpv0, SS, BASE) SEQW URET1

U02e0: tmp3:= UPDATEUSTATE( , !0x04) !m0 
U02e1: LFNCEMARK-> tmp4:= READURAM( , 0x0084, 64) 
U02e2: tmp1:= READURAM( , 0x0082, 64) SEQW SAVEUIP1 U02e4SEQW GOTO U0bb2

U02e4: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U02e5: tmp0:= NOTAND_DSZ16(0x00000003, tmp0) 
U02e6: rcx:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_RIP) !m0 SEQW GOTO U01ca

U02e8: tmp2:= LDZX_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U02e9: SAVEUIP( , 0x01, U008a) !m0 SEQW GOTO U2bd8
FUN_ucode_00002ea:
U02ea: tmpv0:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 

U02ec: WRSEGFLD(tmpv0, CS, SEL+FLGS+LIM) 
U02ed: tmpv0:= RDSEGFLD(UNK_SEG_09, BASE) 
U02ee: WRSEGFLD(tmpv0, CS, BASE) SEQW URET0

U02f0: tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, mode=0x0a) 
U02f1: SAVEUIP( , 0x01, U3362) !m0 SEQW GOTO U2bd8
FUN_ucode_00002f2:
U02f2: tmpv0:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U02f4: WRSEGFLD(tmpv0, SS, SEL+FLGS+LIM) 
U02f5: tmpv0:= RDSEGFLD(SS_USERM, BASE) 
U02f6: WRSEGFLD(tmpv0, SS, BASE) SEQW URET1

U02f8: tmp13:= SAVEUIP(0x00, U4004) 
U02f9: tmp14:= SAVEUIP(0x01, U0c94) !m0 SEQW GOTO U0869
FUN_ucode_00002fa:
U02fa: LFNCEWAIT-> tmpv0:= RDSEGFLD(CS, SEL+FLGS+LIM) 

U02fc: WRSEGFLD(tmpv0, UNK_SEG_09, SEL+FLGS+LIM) 
U02fd: tmpv0:= RDSEGFLD(CS, BASE) 
U02fe: WRSEGFLD(tmpv0, UNK_SEG_09, BASE) SEQW URET0

U0300: tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, mode=0x0a) 
U0301: tmp3:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 SEQW GOTO U0c92
U0302: MOVETOCREG_DSZ64(tmp1, 0x3ff, 32) !m1,m2 

U0304: MOVETOCREG_DSZ64(tmp0, 0x3ff, 32) !m1,m2 
U0305: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1,m2 
U0306: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000005, U304e) !m1,m2 SEQW GOTO U0305

U0308: tmp3:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0309: LFNCEMARK-> tmp8:= UPDATEUSTATE(!0x0c) !m0 
U030a: tmp14:= SAVEUIP(0x01, U43ec) !m0 SEQW GOTO U0595

U030c: rcx:= ZEROEXT_DSZ32(tmp5) 
U030d: rdx:= SHR_DSZ64(tmpv1, 0x00000020) 
U030e: rax:= ZEROEXT_DSZ32(tmpv1) SEQW UEND0

U0310: SAVEUIP( , 0x00, U08de) 
U0311: SAVEUIP( , 0x01, U1d2e) !m0 SEQW GOTO U2c24
FUN_ucode_0000312:
U0312: tmp2:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 

U0314: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bd80) !m2 
U0315: tmp1:= ADD_DSZ64(tmp2, tmp1) 
U0316: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000bd80,  , tmp1) !m2 SEQW URET1

U0318: STAD_DSZN_ASZ32_SC1(rdi, mode=0x08,  , rax) !m1 
U0319: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 SEQW UEND0
U031a: tmm6:= unk_620(tmm5) 

U031c: tmp8:= PINTMOVDTMM2I_DSZ32(tmm6) 
U031d: tmp4:= XOR_DSZ16(0x0000411e, tmp8) 
U031e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, tmp8) SEQW GOTO U36b8

vmresume_xlat:
U0320: tmp8:= ADD_DSZ32(0x00000001) 
U0321: LFNCEMARK-> tmp0:= MOVE_DSZ32(0x00000018) SEQW GOTO U3d1c
U0322: mm3:= unk_72a(0x00000000) 

U0324: tmp4:= SHL_DSZ8(tmp3, 0x00000001) 
U0325: tmp4:= OR_DSZ8(0x00000009, tmp4) 
U0326: tmm6:= unk_741(mm4) !m2 SEQW GOTO U17ec

vmlaunch_xlat:
U0328: tmp8:= ADD_DSZ32() 
U0329: LFNCEMARK-> tmp0:= MOVE_DSZ32(0x00000014) SEQW GOTO U3d1c
U032a: tmp12:= OR_DSZ16(0x00000002, tmp12) 

U032c: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U032d: tmp3:= AND_DSZ16(0x00000002, tmp2) 
U032e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1948) SEQW GOTO U17fd

vmwrite_r64_mem_xlat:
U0330: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0331: tmp14:= SAVEUIP(0x01, U0242) !m0 SEQW GOTO U0cda
U0332: tmm6:= unk_620(tmm5) 

U0334: tmp2:= PINTMOVDTMM2I_DSZ32(tmm6) 
U0335: tmp4:= XOR_DSZ16(0x0000411e, tmp2) 
U0336: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, tmp2) SEQW GOTO U36f8

U0338: tmp8:= ZEROEXT_DSZ32(0x80000301) 
U0339: tmp5:= ZEROEXT_DSZ32(0x00000c41) 
U033a: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U0131

U033c: SYNCFULL-> UJMP( , U2e3d) 
U033d: WRITEURAM(tmp1, 0x005c, 64) 
U033e: NOP SEQW GOTO U3780

U0340: tmp8:= ZEROEXT_DSZ32(0x80000603) 
U0341: tmp5:= ZEROEXT_DSZ32(0x000005d4) SEQW GOTO U0131
U0342: tmp11:= ZEROEXT_DSZ32(0x000022e2) 

U0344: tmp12:= WRMSLOOPCTRFBR(0x00000001) 
U0345: tmp14:= SAVEUIP(0x01, U0ca1) !m0 
U0346: tmp8:= ZEROEXT_DSZ16(0x0000fc01) SEQW GOTO U39a6

U0348: SAVEUIP_REGOVR(0x00, U0349, 0x0000) SEQW GOTO U251d
U0349: r64dst:= ADD_DSZ32(r64src) !m1,m2 SEQW UEND0
U034a: tmp9:= ZEROEXT_DSZ64(tmp10) 

U034c: tmm7:= SHUFPD(tmm7, tmm7) 
U034d: tmp9:= unk_52b(tmp15) 
U034e: tmp11:= unk_52b(tmp15) SEQW GOTO U2362

U0350: NOP 
U0351: NOP SEQW GOTO U008e
U0352: tmp4:= LDTICKLE_DSZ32_ASZ32_SC1(tmp2, mode=0x18, tmp1) !m1,m2 

U0354: unk_01f(tmp4, r64dst) !m1,m2 
U0355: tmp4:= unk_01f(tmp4, r64dst) !m1 
U0356: STAD_DSZ32_ASZ32_SC1(tmp2, mode=0x18, tmp1, tmp4) !m1,m2 SEQW UEND0

U0358: NOP 
U0359: NOP SEQW GOTO U008e
U035a: tmp2:= ZEROEXT_DSZ32(0x0000fff0) 

U035c: tmp1:= MOVEFROMCREG_DSZ64( , 0x78e) 
U035d: tmp1:= ADD_DSZ32(tmp2, tmp1) 
U035e: MOVETOCREG_DSZ64(tmp1, 0x067) !m2 SEQW GOTO U43ae

U0360: tmp4:= LDZX_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0361: tmp8:= ADD_DSZ32(0x00000001) SEQW GOTO U08fa
U0362: tmp2:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 

U0364: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U0365: tmp5:= BTS_DSZ32(0x00000000, 0x00000010) 
U0366: tmp5:= SELECTCC_DSZ32_CONDNZ(tmp2, tmp5) SEQW GOTO U2814

U0368: tmp4:= LDZX_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0369: tmp8:= ADD_DSZ32(0x00000001) SEQW GOTO U0b2a
U036a: tmp2:= AND_DSZ32(0x00000014, tmp2) 

U036c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U63c6) 
U036d: tmp2:= SUB_DSZ32(0x00000040, tmp5) 
U036e: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp2, U517d) SEQW URET1

U0370: tmp4:= LDZX_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0371: tmp8:= ADD_DSZ32(0x00000001) SEQW GOTO U0b32
U0372: unk_cc1(tmp11, 0x000038ff) 

U0374: tmp0:= LDZX_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0375: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0376: tmp13:= SAVEUIP(0x00, U1b61) SEQW GOTO U6316

U0378: tmp4:= LDZX_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0379: tmp8:= ADD_DSZ32(0x00000001) SEQW GOTO U0b3a
U037a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp8, 0x48c) 

U037c: tmp5:= ZEROEXT_DSZ32(0x0000c001) 
U037d: mm0:= unk_7c2(mm5, 0x00000000) 
U037e: LFNCEWAIT-> mm7:= FMOV( , tmm1) !m0 SEQW GOTO U21fe

U0380: MOVE_DSZ64() 
U0381: tmp12:= ZEROEXT_DSZ16(IMM_MACRO_ALIAS_IMMEDIATE) !m0 SEQW GOTO U07c1
U0382: tmp13:= ADD_DSZ32() 

U0384: tmp11:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 
U0385: GENARITHFLAGS(tmp11, tmp13) !m2 
U0386: r64dst:= ZEROEXT_DSZ32N(tmp12, r64dst) !m1 SEQW UEND0

U0388: NOP 
U0389: NOP SEQW GOTO U2769
U038a: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 

U038c: tmp13:= ADD_DSZ32() 
U038d: tmp11:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 
U038e: GENARITHFLAGS(tmp11, tmp13) !m2 SEQW UEND0

U0390: tmp12:= unk_dd6(r64base, r64idx) !m0 
U0391: xmm2:= unk_7cf(xmmdst, tmm4) SEQW UEND0
U0392: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp6, U0394) SEQW GOTO U1948

U0394: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000b, U5954) !m0,m2 
U0395: tmp2:= ZEROEXT_DSZ32(0x0000000d) 
U0396: LFNCEMARK-> tmm6:= unk_701(mm2) !m2 SEQW GOTO U1948

U0398: tmp12:= unk_dd6(r64base, r64idx) !m0 
U0399: xmm2:= unk_7cf(xmmdst, tmm4) SEQW UEND0
U039a: SAVEUIP_REGOVR(0x01, U039c, 0x0000) !m0 SEQW GOTO U32cd

U039c: tmp6:= READURAM( , 0x0073, 64) 
U039d: MOVETOCREG_DSZ64(tmp6, 0x39e, 32) !m1,m2 
U039e: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW GOTO U1b0a

U03a0: tmp0:= ZEROEXT_DSZ32(0x0001000e) 
U03a1: LFNCEMARK-> tmp1:= ZEROEXT_DSZ32(0x0000000e) SEQW GOTO U0b72
U03a2: tmp2:= CONCAT_DSZ8(tmp2, tmp1) 

U03a4: tmp1:= ZEROEXT_DSZ16(tmp2, tmp1) 
U03a5: tmp1:= BTS_DSZ32(tmp1, 0x00000010) 
U03a6: PORTOUT_DSZ32_ASZ16_SC1(0x50d8,  , tmp1) !m2 SEQW GOTO U56f8

U03a8: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U03a9: tmp1:= unk_00f(r64dst, tmp1) !m1,m2 
U03aa: STAD_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, tmp1) !m0,m1,m2 SEQW UEND0

U03ac: MSSTOP-> NOP 
U03ad: unk_25e( , 0x000000ff) 
U03ae: tmp4:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 SEQW GOTO U1f24

U03b0: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U03b1: unk_308(0x00000001, tmp1) !m1,m2 
U03b2: tmp1:= unk_308(0x00000001, tmp1) !m1 SEQW GOTO U03aa

U03b4: tmm0:= FMOV( , tmm2) 
U03b5: tmm1:= FMOV( , tmm3) 
U03b6: UJMP( , tmp2) 

U03b8: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U03b9: unk_30a(0xffffffffffffffff, tmp1) !m1,m2 
U03ba: tmp1:= unk_30a(0xffffffffffffffff, tmp1) !m1 SEQW GOTO U03aa

U03bc: SAVEUIP( , 0x00, U38d0) 
U03bd: tmpv0:= READURAM( , 0x001e, 64) SEQW SAVEUIP1 U03beSEQW GOTO U334d
U03be: UJMP( , tmp15) 

U03c0: tmp0:= unk_14b(tmp2, r64src) !m1 
U03c1: tmp0:= SELECTCC_DSZ32_CONDBE(tmp0, 0x00000015) 
U03c2: SIGEVENT( , tmp0) SEQW UEND0

U03c4: r15:= ZEROEXT_DSZ32() 
U03c5: tmp0:= ZEROEXT_DSZ32(0x000006c0) 
U03c6: tmp0:= CONCAT_DSZ16(0x00000005, tmp0) SEQW GOTO U4fd0

U03c8: tmp0:= OR_DSZ64(r64dst) 
U03c9: r64dst:= ZEROEXT_DSZ32N(r64src, r64dst) !m1 
U03ca: r64src:= ZEROEXT_DSZ32N(tmp0, r64src) !m1 SEQW UEND0

U03cc: tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 
U03cd: tmp1:= SUB_DSZ32(0x0000019c, tmp8) 
U03ce: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U138d) SEQW GOTO U2e2a

U03d0: tmp0:= OR_DSZ64(r64dst) 
U03d1: r64dst:= unk_07c(r64src, r64dst) 
U03d2: r64src:= unk_07c(tmp0, r64src) SEQW UEND0

U03d4: tmp2:= LDZX_DSZN_ASZ32_SC4( , 0x00000000, mode=0x12, tmp1) !m1 
U03d5: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U4b91) 
U03d6: tmp2:= AND_DSZ8(tmp3, tmp2) SEQW URET1

U03d8: tmp0:= OR_DSZ64(r64dst) 
U03d9: r64dst:= unk_0bc(r64src, r64dst) 
U03da: r64src:= unk_0fc(tmp0, r64src) SEQW UEND0

U03dc: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x06c) !m2 
U03dd: tmp2:= MOVEFROMCREG_DSZ64( , 0x2bc, 32) !m1 
U03de: tmp2:= MOVETOCREG_BTS_DSZ64(tmp2, 0x00000001, 0x2bc) !m1,m2 SEQW UEND0

U03e0: tmp0:= OR_DSZ64(r64dst) 
U03e1: r64dst:= unk_0fc(r64src, r64dst) 
U03e2: r64src:= unk_0bc(tmp0, r64src) SEQW UEND0

U03e4: tmp10:= ZEROEXT_DSZ64(0x00000001) 
U03e5: PORTOUT_DSZ32_ASZ16_SC1(0x00d4,  , tmp10) !m2 
U03e6: NOP SEQW GOTO U3a76

U03e8: tmp0:= OR_DSZN(rdx) !m1 
U03e9: rdx:= ZEROEXT_DSZ32N(rax, rdx) !m1 
U03ea: rax:= ZEROEXT_DSZ32N(tmp0, rax) !m1 SEQW UEND0

U03ec: NOP 
U03ed: NOP 
U03ee: tmp5:= SAVEUIP( , 0x00, U0c52) SEQW GOTO U5ee8

U03f0: tmp0:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U03f1: STAD_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, r64dst) !m0,m1,m2 
U03f2: r64dst:= ZEROEXT_DSZ32N(tmp0, r64dst) !m1 SEQW UEND0

U03f4: tmm0:= unk_525(tmm0, xmmsrc) !m0 
U03f5: tmm1:= unk_565(xmmdst, tmm0) !m0 
U03f6: xmm1:= unk_72f(tmm1) !m1 SEQW GOTO U0a24

U03f8: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U03f9: unk_01f(tmp1, IMM_MACRO_ALIAS_IMMEDIATE) !m0,m1,m2 
U03fa: tmp1:= unk_01f(tmp1, IMM_MACRO_ALIAS_IMMEDIATE) !m0,m1 SEQW GOTO U03aa

U03fc: unk_c64(tmp10) 
U03fd: WRITEURAM(tmp10, 0x000b, 64) !m2 
U03fe: tmp0:= SAVEUIP(tmp10, 0x00, U4b44) SEQW GOTO U17c5

U0400: tmp0:= OR_DSZ64(r64dst) 
U0401: r64dst:= ZEROEXT_DSZ32N(r64src, r64dst) !m1 
U0402: r64src:= ADD_DSZ32(tmp0, r64src) !m1,m2 SEQW UEND0

U0404: LFNCEWAIT-> tmm0:= FMOV( , 0x00000011) !m0 
U0405: mm0:= FMOV( , tmm7) !m0 
U0406: tmm0:= FMOV( , 0x00000091) !m0 SEQW GOTO U17ec

U0408: tmp0:= OR_DSZ64(r64dst) 
U0409: r64dst:= unk_0bc(r64src, r64dst) 
U040a: r64src:= unk_3e0(tmp0, r64src) !m2 SEQW UEND0

U040c: tmp13:= MOVEFROMCREG_DSZ64( , 0x000) 
U040d: tmp9:= BT_DSZ32(tmp13, 0x00000011) 
U040e: tmp9:= SELECTCC_DSZ32_CONDB(tmp9, 0x00010000) SEQW GOTO U18d6

U0410: tmp0:= OR_DSZ64(r64dst) 
U0411: r64dst:= unk_0fc(r64src, r64dst) 
U0412: r64src:= unk_3a0(tmp0, r64src) !m2 SEQW UEND0

U0414: tmp13:= MOVEFROMCREG_DSZ64( , 0x000) !m2 
U0415: tmp13:= SIGEVENT(tmp13, 0x00000003) 
U0416: SYNCFULL-> UJMP( , tmp14) 

U0418: tmp0:= OR_DSZ64(r64dst) 
U0419: r64dst:= unk_07c(r64src, r64dst) 
U041a: r64src:= unk_360(tmp0, r64src) !m2 SEQW UEND0

U041c: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000015, U2121) !m1 
U041d: tmp15:= MOVEFROMCREG_DSZ64( , 0x701) 
U041e: MOVETOCREG_BTS_DSZ64(tmp15, 0x00000012, 0x701) !m0,m2 SEQW GOTO U2121

U0420: tmp0:= LDZX_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0421: tmp0:= unk_2a2(tmp0, r64dst) !m2 
U0422: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0

U0424: tmp10:= RDSEGFLD(ES, UNK_FLD_0c) 
U0425: tmp15:= OR_DSZN(rdi) !m1 
U0426: tmp10:= ADD_DSZN(tmp15, tmp10) !m1 SEQW GOTO U343c

rdrand_xlat:
U0428: tmp4:= ZEROEXT_DSZ32(0x0000002b) 
U0429: tmp2:= ZEROEXT_DSZ32(0x40004e00) 
U042a: tmp0:= ZEROEXT_DSZ32(0x00000439) SEQW GOTO U1861

U042c: tmp0:= READURAM( , 0x0024, 64) 
U042d: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U042e: tmp0:= AND_DSZ32(0x80fffffc, tmp0) SEQW GOTO U5aca

rdseed_xlat:
U0430: tmp4:= ZEROEXT_DSZ32(0x00000030) 
U0431: tmp2:= ZEROEXT_DSZ32(0x40004e80) 
U0432: tmp0:= ZEROEXT_DSZ32(0x0000043d) SEQW GOTO U1861

U0434: tmp12:= STC(0x00001b04) 
U0435: tmp1:= ZEROEXT_DSZ32(0x70000000) 
U0436: tmp2:= MOVE_DSZ32(0x00000006) SEQW GOTO U1aca

U0438: tmp0:= LDZX_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0439: tmp0:= unk_2a5(tmp0, r64dst) !m2 
U043a: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0

FUN_ucode_000043c:
U043c: LFNCEWAIT-> unk_dff() 
U043d: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x63a) !m0 
U043e: MOVETOCREG_OR_DSZ64( , 0x00000007, 0x63e) !m0 SEQW GOTO U27ae

U0440: tmp0:= LDZX_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0441: tmp0:= unk_2a5(IMM_MACRO_ALIAS_IMMEDIATE, tmp0) !m0,m2 
U0442: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0

FUN_ucode_0000444:
U0444: unk_dff() 
U0445: LFNCEWAIT-> MOVETOCREG_OR_DSZ64( , 0x00000001, 0x63a) 
U0446: MOVETOCREG_OR_DSZ64( , 0x0000000f, 0x63e) !m0 SEQW GOTO U27ae

U0448: tmp0:= unk_0bc(r64src) 
U0449: tmp0:= unk_2ef(tmp0, rax) !m2 
U044a: rax:= ZEROEXT_DSZ16(tmp0, rax) SEQW UEND0

U044c: tmp3:= AND_DSZ64(tmp6, tmp5) 
U044d: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U076d
U044e: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000003, U5914) !m0,m2 SEQW URET1

U0450: tmp0:= LDZX_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0451: tmp0:= unk_2ef(tmp0, rax) !m2 
U0452: rax:= ZEROEXT_DSZ16(tmp0, rax) SEQW UEND0

U0454: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U05ac
U0455: tmp7:= READURAM( , tmp1) 
U0456: r64src:= ZEROEXT_DSZ64N(tmp7) !m1 SEQW UEND0

U0458: tmp3:= LDTICKLE_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0459: tmp3:= ROR_DSZN(tmp3, 0x00000001) !m1 
U045a: SAVEUIP( , 0x01, U0574) !m0 SEQW GOTO U0952

U045c: rsi:= ZEROEXT_DSZ16N(rsi, rsi) !m1 
U045d: rdi:= ZEROEXT_DSZ16N(rdi, rdi) !m1 
U045e: rcx:= ZEROEXT_DSZ16N(rcx, rcx) !m1 SEQW UEND0

U0460: tmp3:= OR_DSZ64(r64src) 
U0461: SAVEUIP( , 0x01, U080a) !m0 
U0462: tmp0:= RCXBTCNTMSK_DSZ32(rcx) !m1 SEQW GOTO U0964

U0464: GENARITHFLAGS(0x0000003f, tmp10) !m2 
U0465: rcx:= ZEROEXT_DSZ16N(tmp4, rcx) !m1 
U0466: SYNCWAIT-> SFENCE() SEQW UEND0

U0468: tmp3:= OR_DSZ64(r64src) 
U0469: SAVEUIP( , 0x01, U080a) !m0 
U046a: tmp0:= RCXBTCNTMSK_DSZ32(rcx) !m1 SEQW GOTO U0974

U046c: tmp2:= OR_DSZ32(0x00100000, tmp2) 
U046d: tmp2:= OR_DSZ32(tmp1, tmp2) 
U046e: tmp5:= CONCAT_DSZ32(tmp2, tmp5) SEQW GOTO U37c8

U0470: tmp3:= LDTICKLE_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0471: tmp0:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0472: SAVEUIP( , 0x01, U0574) !m0 SEQW GOTO U0982

FUN_ucode_0000474:
U0474: TESTUSTATE( , VMX, !0x0024) !m0,m2 ? SEQW GOTO U57ad
U0475: tmp3:= MOVEFROMCREG_DSZ64( , 0x7bb) 
U0476: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000000a, U2711) !m0,m1 SEQW URET1

U0478: tmp3:= LDTICKLE_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0479: tmp0:= OR_DSZ64(rcx) 
U047a: SAVEUIP( , 0x01, U0574) !m0 SEQW GOTO U0982

U047c: tmp1:= SHL_DSZ32(tmp1, 0x00000006) 
U047d: tmp1:= NOTAND_DSZ32(tmp1, 0x00000c04) 
U047e: tmp5:= ADD_DSZ64(tmp1, tmp5) SEQW GOTO U2e2a

U0480: tmp0:= LDZX_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0481: tmp0:= unk_0ef(tmp0) 
U0482: r64dst:= ZEROEXT_DSZ16(tmp0, r64dst) SEQW UEND0

FUN_ucode_0000484:
U0484: tmp13:= unk_222(tmp1) 
U0485: tmp13:= SUB_DSZ32(tmp13, 0x00000020) 
U0486: tmp13:= SHL_DSZ64(0xffffffffffffffff, tmp13) SEQW GOTO U078d

U0488: tmp5:= MOVEFROMCREG_DSZ64( , 0x7fe) !m2 
U0489: tmp5:= OR_DSZ32(0x00000400, tmp5) 
U048a: SYNCFULL-> MOVETOCREG_BTR_DSZ64(tmp5, 0x00000010, 0x7fe) !m2 SEQW GOTO U221e

U048c: tmp1:= AND_DSZ32(0x00000007, tmp5) 
U048d: tmp1:= CMOVCC_DSZ32_CONDNZ(tmp1, 0x00000006) 
U048e: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000006, U2711) !m0,m1 SEQW GOTO U3200

U0490: tmp0:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0491: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0492: tmp0:= unk_f3f(rsp) !m0,m1 SEQW UEND0

U0494: tmp1:= AND_DSZ32(0x00000005, tmp1) 
U0495: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000005, U2711) !m1 
U0496: tmp5:= AND_DSZ32(0x00000001, tmp5) SEQW GOTO U3398

U0498: tmp0:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0499: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U049a: tmp0:= unk_f0f(rsp) !m1 SEQW UEND0

U049c: tmp2:= ADD_DSZ32(tmp2, tmp1) 
U049d: tmp2:= SHR_DSZ32(tmp5, tmp2) 
U049e: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2711) SEQW GOTO U321c

U04a0: tmp0:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, mode=0x1a) 
U04a1: rsp:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U04a2: rdx:= ZEROEXT_DSZ16(tmp0, rdx) SEQW UEND0

FUN_ucode_00004a4:
U04a4: tmp9:= ZEROEXT_DSZ32(0x00000002) 
U04a5: tmp2:= ZEROEXT_DSZ32(0x00000008) 
U04a6: tmp0:= ZEROEXT_DSZ32(0x00000003) SEQW URET1

U04a8: tmp0:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, mode=0x1a) 
U04a9: rsp:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U04aa: r64src:= ZEROEXT_DSZ16(tmp0, r64src) SEQW UEND0

U04ac: tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 
U04ad: AETTRACE( , tmp3, 0x0d) 
set_carry_uend:
U04ae: MOVEINSERTFLGS_DSZ32(0x00000001) !m2 SEQW GOTO U17ec

U04b0: tmm2:= unk_51b(mm2, mm0) 
U04b1: tmm3:= unk_51b(mm2, mm0) 
U04b2: mm2:= unk_44f(tmm3, tmm2) SEQW UEND0

U04b4: tmp2:= ZEROEXT_DSZ32(0x00000002) 
U04b5: SAVEUIP_REGOVR(0x01, U04b6, 0x0032) !m0 
U04b6: SAVEUIP( , 0x01, U079d) !m0 SEQW GOTO U1d8e

U04b8: tmp8:= unk_d76(r64base, r64idx) !m0 
U04b9: tmm2:= unk_51b(mm2, tmm0) 
U04ba: tmm3:= unk_51b(mm2, tmm0) SEQW GOTO U04b2

U04bc: MOVETOCREG_BTS_DSZ64( , 0x00000002, 0x29e) !m0,m1,m2 
U04bd: tmp0:= ZEROEXT_DSZ32(0x00002034) 
U04be: SAVEUIP( , 0x01, U079d) !m0 SEQW GOTO U0b99

U04c0: tmp12:= unk_dd6(r64base, r64idx) !m0 
U04c1: tmm0:= unk_5ab(tmm4) 
U04c2: tmm4:= unk_5ab(tmm4) SEQW GOTO U0a0a

U04c4: tmp15:= AND_DSZ32(0x00002000, tmp0) 
U04c5: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000400) 
U04c6: MOVETOCREG_DSZ64(tmp15, 0x00c) !m2 SEQW GOTO U4799

U04c8: tmm1:= SHUFPD(xmmsrc, xmmdst) 
U04c9: tmm2:= SHUFPD(xmmsrc, xmmdst) 
U04ca: xmm2:= unk_4cf(tmm2, tmm1) SEQW UEND0

U04cc: TESTUSTATE( , UCODE, !UST_MSLOOPCTR_NONZERO) !m0 ? SEQW URET1
U04cd: STADSTGBUF_DSZ64_ASZ16_SC1(tmp15,  , tmp7) 
U04ce: tmp15:= ADD_DSZ32(0x00000020, tmp15) SEQW GOTO U04cc

U04d0: tmp8:= unk_dd6(r64base, r64idx) !m0 
U04d1: tmm1:= SHUFPD(tmm0, xmmdst) 
U04d2: tmm2:= SHUFPD(tmm0, xmmdst) SEQW GOTO U04ca

U04d4: TESTUSTATE( , UCODE, !UST_MSLOOPCTR_NONZERO) !m0 ? SEQW URET1
U04d5: tmp7:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp15) 
U04d6: tmp15:= ADD_DSZ32(0x00000020, tmp15) SEQW GOTO U04d4

U04d8: tmp9:= unk_dd6(r64base, r64idx) !m0 
U04d9: tmm7:= unk_511(xmmdst, xmm0) !m1 
U04da: xmm2:= unk_510(tmm1, tmm7) !m1 SEQW UEND0

FUN_ucode_00004dc:
U04dc: TESTUSTATE( , UCODE, !UST_MSLOOPCTR_NONZERO) !m0 ? SEQW URET1
U04dd: STADSTGBUF_DSZ64_ASZ16_SC1(tmp15,  , 0x00000000) 
U04de: tmp15:= ADD_DSZ32(0x00000020, tmp15) SEQW GOTO U04dc

U04e0: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U04e1: tmp1:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U04e2: tmm3:= unk_6f0(xmmsrc, xmmdst) !m0,m2 SEQW GOTO U0a1d

FUN_ucode_00004e4:
U04e4: tmp1:= unk_208(0x00000001) !m1 
U04e5: tmp4:= unk_207(0x00080000) !m1 
U04e6: tmp4:= ADD_DSZN(tmp4, tmp1) !m1 SEQW URET0

U04e8: tmp9:= unk_d16(r64base, r64idx) !m0 
U04e9: tmm1:= SHUFPD(tmm1, tmm1) 
U04ea: xmm2:= unk_5f8(xmmdst, tmm1) !m0 SEQW UEND0

U04ec: tmp15:= unk_205() !m1 
U04ed: tmp4:= MOVEMERGEFLGS_DSZ64(tmp4, tmp15) 
U04ee: r64dst:= CMOVCC_DSZ64_CONDZ(tmp4, r64dst) SEQW UEND0

U04f0: tmm1:= unk_4b2( , xmmsrc) !m0 
U04f1: tmm2:= unk_4b3( , xmmdst) !m0 
U04f2: xmm2:= unk_690(tmm1, tmm2) SEQW UEND0

U04f4: tmp0:= ZEROEXT_DSZ32(0x00000700) 
U04f5: tmp3:= ZEROEXT_DSZ32(0x00000018) 
U04f6: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xffffffffffffffe8, mode=0x01,  , tmp2) SEQW GOTO U31f1

U04f8: tmp10:= unk_dc6(r64base, r64idx) !m0 
U04f9: tmm0:= unk_526(xmmdst, tmm2) !m0 
U04fa: xmm0:= unk_5a6(xmmdst, tmm0) !m0 SEQW GOTO U082a

FUN_ucode_00004fc:
U04fc: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x0b4) !m2 
U04fd: TESTUSTATE( , UCODE, 0x0400) ? SEQW URET0
U04fe: SAVEUIP( , 0x01, U05e4) !m0 SEQW GOTO U2712

U0500: tmm3:= SHUFPD(xmmsrc, xmmsrc) 
U0501: tmm3:= unk_6f7(tmm3) !m2 
U0502: tmm2:= unk_6f7(xmmsrc) !m2 SEQW GOTO U0a2d

U0504: CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000010, U28fd) !m1 
U0505: CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000011, U28fd) !m1 
U0506: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000012, U28fd) !m0,m1 SEQW GOTO U60d2

U0508: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0509: tmm4:= SHUFPD(xmmsrc, xmmdst) 
U050a: tmm1:= SHUFPD(xmmsrc, xmmdst) SEQW GOTO U083d

FUN_ucode_000050c:
U050c: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x065) 
U050d: tmpv1:= MOVEFROMCREG_DSZ64( , 0x067) 
U050e: tmpv0:= SUB_DSZN(tmpv0, tmpv1) !m1 SEQW URET1

U0510: tmp8:= unk_d27(r64base, r64idx) !m0,m1 
U0511: tmm0:= unk_604(tmm0) !m1 
U0512: mm0:= unk_60f(tmm0, IMM_MACRO_ALIAS_STi) !m0,m2 SEQW UEND1

FUN_ucode_0000514:
U0514: tmpv1:= MOVEFROMCREG_DSZ64( , 0x01a) 
U0515: tmpv0:= MOVEFROMCREG_DSZ64( , 0x065) 
U0516: tmpv0:= SUB_DSZN(tmpv0, tmpv1) !m1 SEQW URET1

U0518: tmp8:= unk_d27(r64base, r64idx) !m0,m1 
U0519: tmm0:= unk_604(tmm0) !m1 
U051a: mm0:= unk_60f(IMM_MACRO_ALIAS_STi, tmm0) !m0,m2 SEQW UEND1

U051c: tmpv2:= MOVEFROMCREG_DSZ64( , 0x009) 
U051d: tmpv2:= ADD_DSZ32(tmpv2, 0x00000020) 
U051e: SYNCFULL-> MOVETOCREG_DSZ64(tmpv0, tmpv2) !m2 SEQW URET0

U0520: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0521: LFNCEMARK-> tmp10:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0522: unk_ca4(tmp10) SEQW GOTO U03fc

U0524: tmpv2:= MOVEFROMCREG_DSZ64( , 0x009) 
U0525: tmpv2:= ADD_DSZ32(0x00000001, tmpv2) 
U0526: tmpv2:= MOVETOCREG_AND_DSZ64(tmpv2, 0x0000001f, 0x009) !m0,m2 SEQW GOTO U051d

U0528: unk_25e( , 0x000000ff) 
U0529: tmm0:= unk_623() 
U052a: tmp8:= unk_d9e(r64base, r64idx) !m0 SEQW UEND0

U052c: tmpv2:= MOVEFROMCREG_DSZ64( , 0x009) 
U052d: tmpv2:= ADD_DSZ32(tmpv2, 0x00000040) 
U052e: SYNCFULL-> MOVETOCREG_DSZ64(tmpv1, tmpv2) !m2 SEQW URET1

U0530: mm0:= unk_73a() 
U0531: tmp0:= AND_DSZ16(0x00007f00, tmp0) 
U0532: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x48c) !m2 SEQW GOTO U008e

U0534: tmpv2:= MOVEFROMCREG_DSZ64( , 0x009) 
U0535: tmpv2:= ADD_DSZ32(0x00000001, tmpv2) 
U0536: tmpv2:= MOVETOCREG_AND_DSZ64(tmpv2, 0x0000001f, 0x009) !m0,m2 SEQW GOTO U052d

U0538: unk_25e( , 0x000000ff) 
U0539: mm0:= unk_73a() 
U053a: STAD_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, tmp0) !m0 SEQW UEND0

U053c: tmpv2:= SHL_DSZ64(tmpv2, 0x00000008) 
U053d: tmpv3:= SHR_DSZ64(tmpv0, 0x00000038) 
U053e: MOVETOCREG_OR_DSZ64(tmpv3, 0x08b, tmpv2) !m2 SEQW GOTO U65b9

U0540: tmp8:= unk_d27(r64base, r64idx) !m0,m1 
U0541: tmm0:= unk_604(tmm0) !m1 
U0542: tmp15:= FCOM2(IMM_MACRO_ALIAS_STi, tmp8) !m0,m2 SEQW UEND1

U0544: tmp1:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 
U0545: MOVETOCREG_BTR_DSZ64(tmp1, 0x238, tmp0) !m1 
U0546: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW URET0

U0548: tmp8:= unk_d27(r64base, r64idx) !m0,m1 
U0549: tmm0:= unk_604(tmm0) !m1 
U054a: tmm7:= unk_60a(tmm0, IMM_MACRO_95) !m0,m2 SEQW UEND1

U054c: UJMPCC_DIRECT_NOTTAKEN_CONDP(tmp6, U0614) 
U054d: tmm0:= unk_5b9(tmm7) 
U054e: LFNCEMARK-> tmm6:= unk_5ff(tmm0) !m2 SEQW GOTO U0616

U0550: r64dst:= unk_c4e(r64src, rdi) 
U0551: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0552: r64dst:= unk_c6e(r64src, rdi) SEQW UEND0

U0554: mm3:= unk_76b(tmm7) 
U0555: tmm6:= unk_743(mm3, tmm6) 
U0556: tmm0:= unk_485(tmm6, tmm7) SEQW GOTO U6e72

U0558: unk_25e( , 0x000000ff) 
U0559: tmm0:= unk_692() 
U055a: tmp8:= unk_d1e(r64base, r64idx) !m0 SEQW UEND0

U055c: rdx:= ZEROEXT_DSZ32() 
U055d: tmp0:= SHR_DSZ64(tmp0, 0x00000038) 
U055e: rax:= OR_DSZ64(0x00000001, tmp0) SEQW UEND0

U0560: tmp2:= SAVEUIP(r64src, 0x01, U0c24) !m0 
U0561: MOVE_DSZ32() 
U0562: LFNCEMARK-> LBSYNC(0x00000002) SEQW GOTO U4556

U0564: tmm7:= SHUFPD(tmm7, tmm7) 
U0565: tmm7:= unk_7d0(mm1, tmm7) 
U0566: xmm2:= unk_5b9(tmm7) SEQW UEND0

U0568: tmp14:= SAVEUIP(0x01, U07ee) !m0 
U0569: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U056a: SAVEUIP( , 0x00, U2bd5) SEQW GOTO U0862

U056c: STAD_DSZN_ASZ32_SC4(tmp2, IMM_MACRO_13, mode=0x0b, tmp4, rax) !m0,m1 
U056d: r64dst:= STADTICKLE_DSZN_ASZ32_SC4(tmp2, mode=0x0b, tmp4) !m1 
U056e: tmp2:= STADTICKLE_DSZN_ASZ32_SC4(tmp2, IMM_MACRO_ALIAS_DATASIZE, mode=0x0b, tmp4) !m0,m1 SEQW UEND0

U0570: tmp2:= AND_DSZ16(0x00000003, r64src) 
U0571: SAVEUIP( , 0x01, U0c7d) !m0 
U0572: SAVEUIP( , 0x00, U05a4) SEQW GOTO U0864

U0574: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0575: tmp8:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0576: STAD_DSZN_ASZ32_SC1(tmp8, mode=0x18,  , tmp3) !m1 SEQW GOTO U080c

U0578: unk_25e( , 0x000000ff) 
U0579: tmp0:= RDSEGFLD(DS_KERNM, SEL) 
U057a: STAD_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, tmp0) !m0 SEQW UEND0

U057c: tmp2:= MOVEFROMCREG_DSZ64( , 0x287, 32) !m1,m2 
U057d: tmp0:= ZEROEXT_DSZ32(0x00002004) 
U057e: tmp1:= SHR_DSZ32(tmp2, 0x0000000c) SEQW GOTO U1452

U0580: tmp0:= RDSEGFLD(DS_KERNM, SEL) 
U0581: STAD_DSZ16_ASZ32_SC1(rsp, SS,  , 0xfffffffffffffffc, mode=0x0a, tmp0) 
U0582: rsp:= SUB_DSZN(0x00000004, rsp) !m1 SEQW UEND0

U0584: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x29d) !m1,m2 
U0585: tmp0:= ZEROEXT_DSZ32(0x00000006) 
U0586: tmp5:= SAVEUIP( , 0x00, U00a9) SEQW GOTO U5ee8

U0588: tmp0:= RDSEGFLD(DS_KERNM, SEL) 
U0589: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U058a: tmp0:= unk_f0f(rsp) !m1 SEQW UEND0

U058c: WRITEURAM( , 0x00000000, 0x0053, 64) !m2 
U058d: SAVEUIP_REGOVR(0x01, U058e, 0x0280) !m0 
U058e: SAVEUIP( , 0x01, U6a82) !m0 SEQW GOTO U1ab6

U0590: tmp3:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0591: LFNCEMARK-> tmp8:= UPDATEUSTATE( , 0x14) 
U0592: tmp14:= SAVEUIP(0x01, U1441) !m0 

U0594: UPDATEUSTATE( , !0x08) !m0 
U0595: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0596: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U59f2

U0598: tmp1:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0599: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000048) 
U059a: tmp0:= ZEROEXT_DSZ32(0x00006646) SEQW GOTO U343a

U059c: tmm5:= unk_496(tmm5, 0x00000000) 
U059d: tmm6:= unk_494( , tmm6) 
U059e: mm0:= unk_6a6(tmm5, tmm6) !m0,m2 SEQW GOTO U17ec

U05a0: tmp1:= ZEROEXT_DSZ16(rdx) 
U05a1: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000008) 
U05a2: tmp0:= ZEROEXT_DSZ32(0x00006646) SEQW GOTO U343a

FUN_ucode_00005a4:
U05a4: tmp3:= AND_DSZ16(0x00000003, r64dst) 
U05a5: tmp5:= SUB_DSZ16(tmp3, tmp2) 
U05a6: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp5, U2220) SEQW URET1

U05a8: tmp1:= ZEROEXT_DSZ16(rdx) 
U05a9: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000018) 
U05aa: tmp0:= ZEROEXT_DSZ32(0x00007695) SEQW GOTO U0424

U05ac: r64src:= READURAM( , 0x003d, 64) 
U05ad: r64src:= TESTUSTATE(r64src, UCODE, 0x0004) ? SEQW GOTO U221e
U05ae: r64src:= MOVEFROMCREG_DSZ64( , 0x7f8) SEQW UEND0

U05b0: tmp1:= ZEROEXT_DSZ16(rdx) 
U05b1: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000038) 
U05b2: tmp0:= ZEROEXT_DSZ32(0x00001c01) SEQW GOTO U0424

U05b4: tmp1:= READURAM( , 0x005c, 64) 
U05b5: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000011, U3398) !m1,m2 
U05b6: SYNCFULL-> PORTOUT_DSZ32_ASZ16_SC1(0x1e68,  , tmp5) !m1,m2 SEQW GOTO U3398

U05b8: tmp1:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U05b9: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000040) 
U05ba: tmp0:= ZEROEXT_DSZ32(0x00004485) SEQW GOTO U3439

U05bc: tmp2:= MOVEFROMCREG_DSZ64( , 0x51b) 
U05bd: tmp2:= AND_DSZ32(0xffff0000, tmp2) 
U05be: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp2, 0x00000003, 0x513) !m0 SEQW GOTO U60d2

U05c0: tmp1:= ZEROEXT_DSZ16(rdx) 
U05c1: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000000) 
U05c2: tmp0:= ZEROEXT_DSZ32(0x00004485) SEQW GOTO U3439

FUN_ucode_00005c4:
U05c4: tmp2:= MOVEFROMCREG_DSZ64( , 0x572) 
U05c5: tmp3:= MOVEFROMCREG_DSZ64( , 0x573) 
U05c6: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000000b, U304e) !m0,m1,m2 SEQW URET1

U05c8: tmp1:= ZEROEXT_DSZ16(rdx) 
U05c9: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000010) 
U05ca: tmp0:= ZEROEXT_DSZ32(0x0000769d) SEQW GOTO U01ea

U05cc: SAVEUIP( , 0x00, U4e82) 
U05cd: tmp11:= READURAM( , 0x0073, 64) !m2 
U05ce: SYNCFULL-> tmp3:= MOVETOCREG_DSZ64(tmp6, 0x752) !m2 SEQW GOTO U614d

U05d0: tmp1:= ZEROEXT_DSZ16(rdx) 
U05d1: LFNCEMARK-> tmp11:= ZEROEXT_DSZ32(0x00000030) 
U05d2: tmp0:= ZEROEXT_DSZ32(0x00002be9) SEQW GOTO U01ea

U05d4: tmp2:= ZEROEXT_DSZ32(0x00000003) 
U05d5: tmp8:= ZEROEXT_DSZ32() 
U05d6: tmp4:= ZEROEXT_DSZ64N(IMM_MACRO_ALIAS_RIP) !m0,m1 SEQW GOTO U0a7d

U05d8: tmp2:= MOVEMERGEFLGS_DSZ32(0x00000004) !m2 
U05d9: tmp4:= ZEROEXT_DSZ32(IMM_MACRO_ALIAS_RIP) !m0 
U05da: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp2, U0a7a) SEQW GOTO U221e

U05dc: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000014, U4ad8) 
U05dd: SAVEUIP( , 0x01, U4ad8) !m0 
U05de: tmpv2:= READURAM( , 0x0057, 64) SEQW GOTO U5f4a

U05e0: tmp11:= READURAM( , 0x001e, 64) !m2 
U05e1: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U05e2: r64src:= ZEROEXT_DSZ64N(tmp11) !m1 SEQW UEND0

U05e4: tmp15:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U05e5: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000008, U065c) 
U05e6: tmp13:= SAVEUIP(0x00, U065c) SEQW GOTO U5db6

U05e8: tmp11:= MOVEFROMCREG_DSZ64( , 0x529) 
U05e9: TESTUSTATE( , SYS, UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW GOTO U283c
U05ea: r64src:= ZEROEXT_DSZ64N(tmp11) !m1 SEQW UEND0

U05ec: tmp0:= BTS_DSZ64(0x00000000, 0x0000003e) 
U05ed: MOVETOCREG_DSZ64(tmp0, 0x211, 32) !m1 
U05ee: SYNCFULL-> MOVETOCREG_DSZ64(tmp10, 0x7f8) !m2 SEQW GOTO U670e

U05f0: tmp8:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U05f1: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U05f2: SAVEUIP( , 0x00, U0876) SEQW GOTO U0311

U05f4: tmp0:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U05f5: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000006, 0x2df) !m0,m1,m2 
U05f6: SIGEVENT( , 0x00000032) SEQW GOTO U079d

U05f8: tmp1:= UPDATEUSTATE(!0x40) !m0 
U05f9: LFNCEMARK-> tmp15:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U05fa: TESTUSTATE( , SYS, UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW GOTO U5e16

U05fc: tmp12:= ZEROEXT_DSZ64N(IMM_MACRO_ALIAS_RIP) !m0,m1 
U05fd: tmp0:= SHR_DSZ32(tmp15, 0x0000001c) 
U05fe: tmp13:= OR_DSZ32(tmp1, tmp0) SEQW GOTO U28a1

U0600: tmp1:= LDZX_DSZN_ASZ32_SC1(rdi, mode=0x08) !m1 
U0601: SUB_DSZ32(tmp1, rax) !m1,m2 
U0602: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 SEQW UEND0

U0604: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x630) !m2 
U0605: MOVETOCREG_DSZ64( , 0x00000000, 0x631) !m2 
U0606: SAVEUIP( , 0x00, U2999) SEQW GOTO U4be6

U0608: tmp1:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 
U0609: rax:= ZEROEXT_DSZ32N(tmp1, rax) !m1 
U060a: rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 SEQW UEND0

U060c: tmp11:= AND_DSZ32(0x00000007, tmp11) 
U060d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, U3c60) 
U060e: tmp15:= READURAM( , 0x0007, 64) SEQW GOTO U5e94

U0610: tmp4:= OR_DSZN(rcx) !m1 
U0611: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U0466) 
U0612: SIGEVENT( , 0x0000003f) SEQW GOTO U33f6

U0614: LFNCEMARK-> tmm0:= unk_62e(0x00000000) !m1,m2 
U0615: tmm0:= unk_53c( , tmm0) !m1 
U0616: tmp9:= BTS_DSZ16(tmp9, 0x0000000f) SEQW GOTO U1236

U0618: SAVEUIP_REGOVR(0x01, U0619, 0x0000) !m0 SEQW GOTO U266a
U0619: tmp7:= unk_07f(tmp7, tmp2) !m2 
U061a: r64src:= ZEROEXT_DSZ64N(tmp7) !m1 SEQW UEND0

U061c: tmm4:= unk_7c2(mm4, tmm2) 
U061d: mm7:= unk_69d( , tmm4) !m0 
U061e: LFNCEMARK-> tmm6:= unk_743() !m2 SEQW GOTO U1948

U0620: tmp10:= SAVEUIP( , 0x00, U1f95) 
U0621: tmp1:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U2769
U0622: tmp0:= ZEROEXT_DSZ32(0x00010003) SEQW URET0

U0624: tmm4:= unk_7c2(tmm2) 
U0625: tmm0:= FMOV( , 0x00000000) 
U0626: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000002, U2af5) !m0,m1 SEQW GOTO U635c

U0628: SAVEUIP_REGOVR(0x00, U0629, 0x0000) SEQW GOTO U251d
U0629: tmp0:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U062a: r64dst:= ZEROEXT_DSZ32N(tmp0, r64dst) !m1 SEQW UEND0

U062c: LFNCEMARK-> tmm7:= unk_62e(0x00000000) !m1,m2 
U062d: tmm7:= unk_53c( , tmm7) !m1 
U062e: UJMPCC_DIRECT_NOTTAKEN_CONDP(tmp6, U0ed4) SEQW GOTO U1236

U0630: tmp4:= SAVEUIP(r64dst, 0x00, U441d) 
U0631: tmp15:= MOVE_DSZ32(0x00000012) 
U0632: MOVETOCREG_BTS_DSZ64(tmp15, 0x00000010, 0x000) !m2 SEQW GOTO U0262

U0634: tmm4:= unk_790(mm2, xmmdst) 
U0635: tmm7:= unk_790(mm2, tmm7) 
U0636: tmp13:= ZEROEXT_DSZ64(0x000043d4) SEQW GOTO U0344

U0638: NOP 
U0639: NOP 
U063a: NOP SEQW UEND0

FUN_ucode_000063c:
U063c: SAVEUIP_REGOVR(0x01, U063d, 0x0002) !m0 SEQW GOTO U2b15
U063d: tmp2:= CONCAT_DSZ16(0x00005000) 
U063e: tmp2:= unk_cdb(tmp2) SEQW URET0

U0640: NOP 
U0641: NOP 
U0642: NOP SEQW UEND0

U0644: tmp2:= NOTAND_DSZ32(0x00000fff, tmp2) 
U0645: tmp1:= ADD_DSZ32(0x00000004, tmp1) 
U0646: PORTOUT_DSZ32_ASZ16_SC1(0x4910,  , tmp1) !m2 SEQW GOTO U2ba2

U0648: NOP 
U0649: NOP 
U064a: NOP SEQW GOTO U2769

U064c: tmp15:= ZEROEXT_DSZ32(0x000000f0) 
U064d: tmp15:= CONCAT_DSZ16(tmp15, 0x0000182d) 
U064e: WRITEURAM(tmp15, 0x0007, 32) !m2 SEQW GOTO U20a8

U0650: NOP 
U0651: NOP 
U0652: NOP SEQW GOTO U2769

U0654: tmp5:= ZEROEXT_DSZ32(0x0000c001) 
U0655: mm0:= unk_7c2(mm5, 0x00000000) 
U0656: MOVETOCREG_DSZ64(tmp8, 0x48c) SEQW GOTO U21fe

U0658: NOP 
U0659: NOP 
U065a: NOP SEQW UEND0

U065c: tmp15:= MOVETOCREG_BTS_DSZ64( , 0x089) !m2 
U065d: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000001, U5b44) !m2 
U065e: tmp15:= MOVEFROMCREG_DSZ64( , 0x089) SEQW GOTO U065d

udbgwr_xlat:
U0660: tmp2:= CONCAT_DSZ32(rbx, rdx) 
U0661: tmp1:= MOVE_DSZ64(0x00000001) 
U0662: tmp3:= MOVEFROMCREG_DSZ64( , 0x38c, 32) !m1 SEQW GOTO U0b5a

U0664: NOP 
U0665: NOP 
U0666: NOP SEQW UEND0

U0668: tmm2:= unk_429(xmmsrc) !m0 
U0669: tmm3:= unk_469(xmmdst) !m0 
U066a: xmm2:= unk_693(tmm3, tmm2) SEQW UEND0

U066c: tmm7:= FMOV( , tmm0) 
U066d: tmp3:= ZEROEXT_DSZ32(0x00000010) 
U066e: LFNCEMARK-> tmm4:= unk_700(mm3) !m2 SEQW GOTO U01a2

U0670: tmm0:= unk_5b9(xmmsrc, xmm0) 
U0671: tmm0:= unk_5d2(tmm0, xmmdst) 
U0672: xmm2:= unk_5e6(xmm0, tmm0) SEQW UEND0

U0674: tmpv1:= ZEROEXT_DSZ8(tmpv2) 
U0675: tmpv0:= SHL_DSZ64(tmpv2, 0x00000004) 
U0676: tmpv0:= ZEROEXT_DSZ16(0x0000c802, tmpv0) SEQW GOTO U65b9

U0678: tmp0:= ZEROEXT_DSZ32(0x0001000d) 
U0679: LFNCEMARK-> tmp1:= ZEROEXT_DSZ32(0x0000000d) 
U067a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U698e

U067c: tmp6:= ZEROEXT_DSZ32(0x00000004) 
U067d: LFNCEMARK-> MOVETOCREG_DSZ64(0x00000000, 0x000) !m2 
U067e: SAVEUIP( , 0x00, U0826) SEQW GOTO U2b3e

U0680: tmp0:= unk_95f(r64base, r64idx) !m0,m1 
U0681: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0682: r64dst:= unk_f45(tmp0) !m1 

U0684: tmp2:= unk_f45(tmp0) !m0,m1 SEQW UEND0
U0685: NOP 
U0686: URET(0x00) 

U0688: r64dst:= STADTICKLE_DSZN_ASZ32_SC4(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0689: tmp0:= unk_95f(r64base, r64idx) !m0,m1 
U068a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U068c: tmp2:= STADTICKLE_DSZ64_ASZ32_SC1(tmp0) !m0,m1 SEQW UEND0
U068d: NOP 
U068e: URET(0x01) !m0 

U0690: tmp0:= unk_95f(r64base, r64idx) !m0,m1 
U0691: tmp0:= unk_14b(tmp2, tmp0) !m1 
U0692: tmp0:= SELECTCC_DSZ32_CONDBE(tmp0, 0x00000015) 

U0694: SIGEVENT( , tmp0) SEQW UEND0
U0695: NOP 
U0696: SYNCFULL-> WRMSLOOPCTRFBR(0x00000080) SEQW GOTO U3210

U0698: tmp0:= LDTICKLE_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m2 
U0699: tmp1:= unk_0bc(r64dst) 
U069a: STAD_DSZ8_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, tmp1) !m0,m2 

U069c: r64dst:= unk_0fc(tmp0, r64dst) SEQW UEND0
U069d: NOP 
U069e: UJMP( , U0414) 

U06a0: unk_3a5(r64src, rax) !m2 
U06a1: tmp0:= unk_0fc(r64dst, r64src) 
U06a2: r64src:= CMOVCC_DSZ64_CONDNZ(r64src, tmp0) !m2 

U06a4: tmp1:= unk_0bc(r64src, rax) SEQW GOTO U07ed
U06a5: tmp0:= SHR_DSZ32(tmp3, 0x00000010) 
U06a6: UJMP( , tmp3) 

U06a8: SUB_DSZ8(r64src, rax) !m2 
U06a9: tmp0:= unk_0bc(r64dst, r64src) 
U06aa: r64src:= CMOVCC_DSZ64_CONDNZ(r64src, tmp0) !m2 

U06ac: tmp1:= ZEROEXT_DSZ8(r64src, rax) SEQW GOTO U07ed
U06ad: MOVETOCREG_BTS_DSZ64( , 0x0000000b, 0x070) !m0,m2 
U06ae: UJMP( , tmp14) 

U06b0: unk_3a5(r64src, rax) !m2 
U06b1: tmp0:= unk_07c(r64dst, r64src) 
U06b2: r64src:= CMOVCC_DSZ64_CONDNZ(r64src, tmp0) !m2 

U06b4: tmp1:= unk_0bc(r64src, rax) SEQW GOTO U07ed
U06b5: tmp0:= READURAM( , 0x0022, 64) !m2 
U06b6: UJMP( , tmp0) 

U06b8: tmp0:= unk_0eb(rax) 
U06b9: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U06ba: tmp1:= LDZX_DSZ8_ASZ32_SC1(rbx, mode=0x18, tmp0) 

U06bc: rax:= ZEROEXT_DSZ8(tmp1, rax) SEQW UEND0
U06bd: NOP 
jump_tmp3:
U06be: UJMP( , tmp3) 

U06c0: tmp0:= unk_2af(r64src, rax) !m2 
U06c1: tmp1:= SHR_DSZ32(tmp0, 0x00000010) 
U06c2: rax:= ZEROEXT_DSZ16(tmp0, rax) 

U06c4: rdx:= ZEROEXT_DSZ16(tmp1, rdx) SEQW UEND0
U06c5: NOP 
uret1:
U06c6: SYNCFULL-> URET(0x01) !m0 

U06c8: tmp6:= MOVEMERGEFLGS_DSZ64(rax, r64src) 
U06c9: tmp5:= unk_11f(rdx, tmp6) !m1 
U06ca: rax:= unk_22f(r64src, tmp5) !m1 

U06cc: rdx:= unk_114(rdx, rax) !m1 SEQW UEND0
U06cd: NOP 
U06ce: SAVEUIP( , 0x00, U6726) SEQW GOTO U2051

U06d0: tmp1:= unk_109(0x00000001) 
U06d1: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, U06d2) SEQW GOTO U221e
U06d2: tmp5:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U06d4: MOVETOCREG_BTR_DSZ64(tmp5, 0x0000000a, 0x7fe) !m0 SEQW GOTO U21fe
U06d5: tmp4:= LDZX_DSZN_ASZ32_SC1(tmp2, mode=0x18, tmp1) !m1 
U06d6: BT_DSZ32(tmp4, r64dst) !m1,m2 SEQW UEND0

U06d8: tmp0:= unk_0bc(rax) 
U06d9: rax:= unk_07c( , rax) 
U06da: tmp0:= unk_2e4(tmp0, IMM_MACRO_ALIAS_IMMEDIATE) !m0 

U06dc: rax:= ADD_DSZ8(tmp0, rax) !m2 SEQW UEND0
U06dd: NOP 
U06de: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x63e) SEQW GOTO U2aac

U06e0: tmp1:= LDZX_DSZN_ASZ32_SC1(rbp, SS, mode=0x1a) !m1 
U06e1: tmp0:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rbp) !m0,m1 
U06e2: rsp:= ZEROEXT_DSZ8N(tmp0, rsp) !m1 

U06e4: rbp:= ZEROEXT_DSZ32N(tmp1, rbp) !m1 SEQW UEND0
U06e5: NOP 
U06e6: MOVETOCREG_DSZ64( , 0x00000000, 0x065) SEQW GOTO U2711

U06e8: tmp9:= unk_dd6(r64base, r64idx) !m0 
U06e9: tmm1:= unk_4b2( , tmm1) !m0 
U06ea: tmm2:= unk_4b3( , xmmdst) !m0 

U06ec: xmm2:= unk_690(tmm1, tmm2) SEQW UEND0
U06ed: NOP 
U06ee: tmp5:= SAVEUIP( , 0x00, U0c52) SEQW GOTO U5ee8

U06f0: SAVEUIP( , 0x01, U03f4) !m0 
U06f1: tmm0:= unk_747(xmm0) 
U06f2: tmm0:= unk_787(xmm2, tmm0) 

U06f4: tmm0:= unk_524(tmm0, xmmdst) !m0,m1 SEQW URET1
U06f5: unk_13f(tmp5) !m2 
U06f6: MOVETOCREG_DSZ64(tmp5, 0x7fe) SEQW GOTO U2711

U06f8: tmm1:= MOVHLPS(xmmdst, xmmsrc) 
U06f9: tmm4:= MOVHLPS(xmmdst, xmmsrc) 
U06fa: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U06fc: xmm2:= unk_6b7(tmm1, tmm4) !m2 SEQW UEND0
U06fd: NOP 
caseD_6fe:
U06fe: PORTOUT_DSZ32_ASZ16_SC1(0x4900,  , tmp0) !m2 SEQW GOTO U1ea6

U0700: NOP 
U0701: LFNCEMARK->WRTAGW-> tmm0:= FMOV( , 0x00000005) !m0 
U0702: mm7:= FMOV( , 0x0000200d) !m0 

U0704: tmm7:= unk_6a8(0x00000000) SEQW GOTO U4281
U0705: NOP 
U0706: LFNCEWAIT-> FETCHFROMEIP0_ASZ64( , tmp14) !m1 SEQW UEND3

U0708: tmp8:= unk_d87(r64base, r64idx) !m0 
U0709: LFNCEMARK-> tmm6:= unk_663(tmm0) 
U070a: NOP 

U070c: LFNCEWAIT-> NOP SEQW UEND0
U070d: NOP 
caseD_70e:
U070e: SAVEUIP( , 0x01, U2b8e) !m0 SEQW GOTO U0079

U0710: tmp12:= READAFLAGS() !m2 
U0711: WRTAGW-> tmm0:= unk_742(tmm4, IMM_MACRO_ALIAS_STi) !m0 
U0712: NOP 

U0714: mm0:= unk_48f(tmm0, IMM_MACRO_ALIAS_STi) !m0 SEQW UEND0
U0715: NOP 
U0716: tmm0:= unk_525(tmm0, tmm2) !m0 SEQW GOTO U03f5

U0718: tmp1:= READURAM( , 0x0077, 64) 
U0719: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000036, U2769) !m0,m1 
U071a: unk_25e( , 0x000000ff) 

U071c: unk_ddd(r64base, r64idx) !m0 SEQW UEND0
U071d: unk_257( , tmp4) !m1 
U071e: rcx:= ZEROEXT_DSZ16N(tmp1, rcx) !m1 SEQW GOTO U0251

sldt_m16_xlat:
U0720: SAVEUIP_REGOVR(0x01, U0721, 0x0007) !m0 SEQW GOTO U0ba2
U0721: unk_25e( , 0x000000ff) 
U0722: tmp2:= RDSEGFLD(SEG_V0, SEL) 

U0724: STAD_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, tmp2) !m0 SEQW UEND0
FUN_ucode_0000725:
U0725: SYNCFULL-> tmp0:= MOVEFROMCREG_DSZ64( , 0x2eb, 32) !m1 
U0726: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U304e) !m1,m2 SEQW GOTO U0725

U0728: SAVEUIP_REGOVR(0x01, U0729, 0x000f) !m0 SEQW GOTO U5a1a
U0729: LFNCEWAIT-> tmp2:= LDZX_DSZ16_ASZ32_SC1(tmp2, mode=0x18) 
U072a: NOP 

U072c: tmp13:= ZEROEXT_DSZ32(0x00002562) SEQW GOTO U46f9
FUN_ucode_000072d:
U072d: SYNCMARK-> BTUJB_DIRECT_NOTTAKEN(tmp12, 0x00000019, U67b8) !m1 
U072e: BTUJB_DIRECT_NOTTAKEN(tmp12, 0x00000018, U30d4) !m1,m2 SEQW URET1

U0730: tmp3:= UPDATEUSTATE(0x0c) SEQW GOTO U0bb1
U0731: tmp0:= READURAM( , 0x0020, 64) 
U0732: tmp0:= SHR_DSZ64(tmp0, 0x00000028) 

U0734: tmp0:= AND_DSZ32(0x0000001f, tmp0) 
U0735: tmp0:= MOVEMERGEFLGS_DSZ32(tmp0, tmp8) 
U0736: rbx:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x00000001) SEQW GOTO U17ec

sysexit_xlat:
U0738: tmp3:= UPDATEUSTATE(0x0c) 
U0739: LFNCEMARK-> tmp0:= READURAM( , 0x0074, 64) 
U073a: tmp1:= NOTAND_DSZ16(0x00000003, tmp0) 

U073c: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2711) 
U073d: ROVR<- tmp1:= MOVE_DSZ64(rdx, rdx) SEQW SAVEUIP1 U073e
U073e: tmp2:= OR_DSZ64(rcx) SEQW GOTO U1d68

U0740: unk_25c(rdx, rdx) 
U0741: LFNCEMARK-> unk_25c(rcx, rcx) 
U0742: tmp3:= UPDATEUSTATE(!0x0c) !m0 SEQW GOTO U0739

U0744: mm0:= FMOV( , tmm4) 
U0745: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U1948) 
U0746: tmm6:= FMOV( , 0x00000091) !m0 SEQW GOTO U1948

U0748: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0749: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U2769) !m1 
U074a: tmp2:= RDSEGFLD(DS_KERNM, BASE) 

U074c: r64src:= ZEROEXT_DSZ32N(tmp2) !m1 SEQW UEND0
U074d: tmp0:= ZEROEXT_DSZ32(0x00000009) 
U074e: tmp7:= ZEROEXT_DSZ32(0x00000006) SEQW GOTO U0e59

U0750: tmp8:= UPDATEUSTATE( , 0x1c) 
U0751: LFNCEMARK-> tmp14:= SAVEUIP(0x01, U1441) !m0 
U0752: tmp2:= ZEROEXT_DSZ16(IMM_MACRO_ALIAS_IMMEDIATE) !m0 

U0754: tmp3:= unk_a2f() !m0,m1 
U0755: tmp3:= ZEROEXT_DSZ32N(tmp3) !m1 
U0756: UPDATEUSTATE( , 0x18) SEQW GOTO U48a8

U0758: tmp0:= MOVE_DSZ64(0x00000432) 
U0759: tmp4:= ZEROEXT_DSZ32(0x00000007) 
U075a: tmp10:= ZEROEXT_DSZ32(0x00000006) SEQW SAVEUIP1 U075cSEQW GOTO U474a

U075c: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000001, U1c0c) !m2 
U075d: LFNCEMARK-> SAVEUIP( , 0x01, U17ec) !m0 SEQW GOTO U0164
U075e: xmm2:= unk_4cf(tmm3, tmm2) SEQW UEND0

U0760: tmp0:= MOVE_DSZ64(0x00000435) 
U0761: tmp4:= ZEROEXT_DSZ32(0x00000008) 
U0762: tmp10:= ZEROEXT_DSZ32(0x0000000f) SEQW SAVEUIP1 U0764SEQW GOTO U474a

U0764: tmp5:= SHR_DSZ64(tmp4, 0x00000010) 
U0765: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U082e) 
U0766: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, 0x00000002, U56e1) !m0,m2 SEQW GOTO U075d

U0768: tmp10:= MOVE_DSZ64(r64src, r64src) !m1 
U0769: LFNCEMARK-> LBSYNC(0x00000002) 
U076a: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U076c: WRITEURAM(tmp10, 0x001e, 64) !m2 SEQW GOTO U17ec
U076d: tmp4:= AND_DSZ64(tmp10, tmp5) 
U076e: CMPUJNZ_DIRECT_NOTTAKEN(tmp4, U44a6, tmp3) SEQW URET1

U0770: tmp11:= MOVE_DSZ64(r64src, r64src) !m1 
U0771: LFNCEMARK-> LBSYNC(0x00000002) 
U0772: TESTUSTATE( , SYS, !UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U17ce

U0774: tmp6:= READURAM( , 0x001f, 64) !m2 
U0775: tmp6:= SHR_DSZ64(tmp6, 0x0000001d) 
U0776: tmp6:= AND_DSZ32(0x00000038, tmp6) SEQW GOTO U1f52

U0778: tmp7:= NOTAND_DSZ64(0x0000000f, r64src) 
U0779: LFNCEMARK-> tmp8:= MOVEFROMCREG_DSZ64( , 0x2a1, 32) !m1 
U077a: TESTUSTATE( , SYS, UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW SAVEUIP1 U077c? SEQW GOTO U5882

U077c: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U2711) 
U077d: tmp3:= SHR_DSZ64(tmp8, 0x0000000c) 
U077e: tmp3:= AND_DSZ32(0x0000000f, tmp3) SEQW GOTO U2c35

U0780: tmp7:= MOVE_DSZ64(r64src, r64src) !m1 
U0781: LFNCEMARK-> LBSYNC(0x00000002) 
U0782: tmp1:= UPDATEUSTATE( , 0xfc) SEQW GOTO U05f9

U0784: tmp2:= READURAM( , 0x001f, 64) 
U0785: tmp2:= NOTAND_DSZ32(0x00000007, tmp2) 
U0786: WRITEURAM(tmp2, 0x001f, 32) SEQW GOTO U3a81

rdtscp_xlat:
U0788: tmp3:= ZEROEXT_DSZ32(0x00000033) 
U0789: LFNCEMARK-> tmp5:= READURAM( , 0x0003, 64) 
U078a: TESTUSTATE( , VMX, !0x0200) !m0,m2 ? SEQW GOTO U2769

U078c: SAVEUIP( , 0x00, U030c) SEQW GOTO U0caa
U078d: tmp13:= SUB_DSZ32(tmp13, tmp1) 
U078e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp13, U2711) SEQW URET1

U0790: SAVEUIP_REGOVR(0x01, U0791, 0x0000) !m0 SEQW GOTO U2669
U0791: tmp7:= unk_07f(tmp7, tmp2) 
U0792: STAD_DSZN_ASZ32_SC1(tmp5, mode=0x18,  , tmp7) !m1 

clear_aflags_uend0:
U0794: LFNCEWAIT-> MOVEINSERTFLGS_DSZ32() !m2 SEQW UEND0
caseD_795:
U0795: SAVEUIP_REGOVR(0x01, U0796, 0x0310) !m0 
U0796: SAVEUIP( , 0x01, U1ea6) !m0 SEQW GOTO U5c62

U0798: SAVEUIP_REGOVR(0x00, U0799, 0x0000) SEQW GOTO U251d
U0799: tmp0:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U079a: r64dst:= LDZX_DSZN_ASZ32_SC1(tmp0, mode=0x18) !m1 

U079c: ADD_DSZ32(r64dst) !m1,m2 SEQW UEND0
FUN_ucode_000079d:
U079d: tmp0:= ZEROEXT_DSZ32(0x00000000) 
U079e: LFNCEWAIT-> tmp15:= MOVEFROMCREG_DSZ64( , 0x068) SEQW GOTO U0e5e

U07a0: SAVEUIP_REGOVR(0x00, U07a1, 0x0000) SEQW GOTO U251d
U07a1: tmp0:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U07a2: STAD_DSZN_ASZ32_SC1(tmp0, mode=0x18,  , r64dst) !m1 

U07a4: ADD_DSZ32(r64dst) !m1,m2 SEQW UEND0
U07a5: LFNCEWTMRK-> WRITEURAM(tmp15, 0x0007, 32) 
U07a6: NOP SEQW GOTO U5e94

U07a8: SAVEUIP_REGOVR(0x00, U07a9, 0x0000) SEQW GOTO U251d
U07a9: tmp0:= unk_a5f(r64base, r64idx) !m0 
U07aa: r64dst:= LDPPHYSTICKLE_DSZN_ASZ64_SC1(tmp0) !m1 

U07ac: ADD_DSZ32(r64dst) !m1,m2 SEQW UEND0
caseD_7ad:
U07ad: tmp0:= ZEROEXT_DSZ32(0x0000000a) 
U07ae: CMPUJNZ_DIRECT_NOTTAKEN(tmp5, 0x00000001, U27b4) !m1 SEQW GOTO U1ea6

U07b0: SAVEUIP_REGOVR(0x00, U07b1, 0x0000) SEQW GOTO U251d
U07b1: tmp0:= unk_a5f(r64base, r64idx) !m0 
U07b2: STADPPHYSTICKLE_DSZN_ASZ64_SC1(tmp0,  , r64dst) !m1 

U07b4: ADD_DSZ32(r64dst) !m1,m2 SEQW UEND0
send_op_pcu_mailbox:
U07b5: tmpv1:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U07b6: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmpv1, 0x0000001f, U5c66) !m0,m2 SEQW GOTO U07b5

U07b8: tmp0:= MOVE_DSZ32(0x00008000) 
U07b9: tmp0:= OR_DSZ16(rax, tmp0) 
U07ba: CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000001, U6012) !m1 

U07bc: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000002, U600c) !m0,m1 SEQW GOTO U66d2
U07bd: tmp1:= AND_DSZ32(0x00000007, tmp5) 
U07be: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000007, U2711) !m0,m1 SEQW URET1

U07c0: tmp12:= MOVE_DSZ32() 
U07c1: LFNCEMARK-> UPDATEUSTATE( , 0xfc) 
U07c2: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U1ee1

rc4_decrypt_ucode_second:
U07c4: tmp5:= ADD_DSZ64(0x00000080, tmp14) 
U07c5: tmp6:= ZEROEXT_DSZ32(tmp13) 
U07c6: tmp8:= ZEROEXT_DSZ32(0x00002b55) SEQW GOTO U5ed5

U07c8: tmp4:= MOVE_DSZ32(IMM_MACRO_ALIAS_RIP) !m0 
U07c9: LFNCEMARK-> AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U07ca: tmp10:= READAFLAGS() !m2 

U07cc: tmp1:= ZEROEXT_DSZ32(0x00000301) SEQW GOTO U5f8a
U07cd: rax:= ZEROEXT_DSZ32() 
U07ce: rdx:= ZEROEXT_DSZ32() SEQW UEND0

U07d0: tmp10:= unk_dd6(r64base, r64idx) !m0 
U07d1: tmm2:= unk_429(tmm2) !m0 
U07d2: tmm3:= unk_469(xmmdst) !m0 

U07d4: xmm2:= unk_693(tmm3, tmm2) SEQW UEND0
U07d5: NOP 
U07d6: tmm0:= unk_525(tmm0, tmm2) !m0 SEQW GOTO U0c7a

U07d8: tmp8:= unk_dd6(r64base, r64idx) !m0 
U07d9: tmm0:= unk_5b9(tmm0, xmm0) 
U07da: tmm0:= unk_5d2(tmm0, xmmdst) 

U07dc: xmm2:= unk_5e6(xmm0, tmm0) SEQW UEND0
U07dd: NOP 
U07de: SAVEUIP( , 0x00, U1f91) SEQW GOTO U6149

U07e0: tmp14:= SAVEUIP(0x01, U2991) !m0 
U07e1: tmp0:= unk_f54(r64base) !m0 
U07e2: tmp1:= SHR_DSZ64(tmp0, 0x00000013) 

U07e4: tmp1:= NOTAND_DSZ32(0xe0000001, tmp1) 
U07e5: tmp3:= ZEROEXT_DSZ32(0x000ffff8) SEQW GOTO U090d
U07e6: tmp3:= unk_105(tmp2, tmp3) !m1 SEQW URET1

U07e8: SUB_DSZ32(r64src, rax) !m1,m2 
U07e9: tmp0:= ZEROEXT_DSZ32N(r64dst, r64src) !m1 
U07ea: r64src:= CMOVCC_DSZ64_CONDNZ(r64src, tmp0) !m2 

U07ec: tmp1:= ZEROEXT_DSZ32N(r64src, rax) !m1 
U07ed: rax:= CMOVCC_DSZ64_CONDZ(rax, tmp1) !m2 SEQW UEND0
U07ee: tmp11:= unk_e6b(tmp0, tmp2) !m2 SEQW GOTO U038a

U07f0: tmp0:= LDZX_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U07f1: tmp0:= unk_2af(tmp0, rax) !m2 
U07f2: tmp1:= SHR_DSZ32(tmp0, 0x00000010) 

U07f4: rax:= ZEROEXT_DSZ16(tmp0, rax) 
U07f5: rdx:= ZEROEXT_DSZ16(tmp1, rdx) SEQW UEND0
U07f6: tmp11:= unk_e6b(tmp0, tmp2) !m2 SEQW GOTO U038a

U07f8: tmp7:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U07f9: tmp6:= MOVEMERGEFLGS_DSZ64(rax, tmp7) 
U07fa: tmp5:= unk_11f(rdx, tmp6) !m1 

U07fc: rax:= unk_22f(tmp7, tmp5) !m1 
U07fd: rdx:= unk_114(rdx, rax) !m1 SEQW UEND0
U07fe: SIGEVENT( , 0x000000b5) SEQW GOTO U079d

U0800: tmp0:= RCXBTCNTMSK_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0801: tmp1:= SUB_DSZ8(tmp0, 0x00000008) 
U0802: tmp3:= unk_169(r64src, tmp0) 

U0804: tmp2:= unk_36a(r64src, 0x00000001) 
U0805: tmp2:= unk_168(tmp2, tmp1) SEQW GOTO U278a
U0806: tmp3:= unk_38f(tmp3) SEQW URET1

U0808: tmp0:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0809: tmp3:= CONCAT_DSZ16(r64dst, r64src) SEQW SAVEUIP1 U080aSEQW GOTO U097d
U080a: r64src:= ZEROEXT_DSZ32N(tmp3, r64src) !m1 

U080c: tmp4:= MOVEMERGEFLGS_DSZ32(tmp4) !m2 
U080d: GENARITHFLAGS(tmp4, tmp3) !m2 SEQW UEND0
FUN_ucode_000080e:
U080e: tmp6:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U040c

U0810: tmp2:= ZEROEXT_DSZ8(rax) 
U0811: tmp0:= unk_2e6(IMM_MACRO_ALIAS_IMMEDIATE, tmp2) !m0 
U0812: rax:= unk_0fc(tmp0, rax) 

U0814: unk_360( , tmp0) !m2 
U0815: rax:= unk_0bc(tmp0, rax) SEQW UEND0
U0816: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U61c5) SEQW GOTO U58e4

hlt_xlat:
U0818: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U0819: LFNCEMARK-> tmp0:= MOVE_DSZ32(0x0000000c) 
U081a: tmp3:= ZEROEXT_DSZ32(0x00000007) 

U081c: SAVEUIP_REGOVR(0x01, U081d, 0x0043) !m0 
U081d: SAVEUIP( , 0x01, U688d) !m0 SEQW GOTO U1d8e
U081e: LFNCEMARK-> unk_25e( , tmp2) SEQW UEND0

U0820: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0821: tmp1:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0822: tmm3:= unk_6b0(xmmsrc, xmmdst) !m0,m2 

U0824: tmm4:= MOVHLPS(tmm3) 
U0825: xmm2:= unk_6ad(tmm4, tmm3) !m0,m2 SEQW UEND0
U0826: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U2011) SEQW GOTO U2019

U0828: tmm0:= unk_526(xmmdst, xmmsrc) !m0 
U0829: xmm0:= unk_5a6(xmmdst, tmm0) !m0 
U082a: tmm3:= unk_5a3( , xmm0) 

U082c: mm0:= unk_76b(tmm3) 
U082d: MOVEINSERTFLGS_DSZ32(tmp0) !m2 SEQW UEND0
U082e: tmp13:= ZEROEXT_DSZ32(0x0000001c) SEQW GOTO U2c1d

U0830: tmp10:= unk_dd6(r64base, r64idx) !m0 
U0831: tmm1:= MOVHLPS(xmmdst, tmm2) 
U0832: tmm4:= MOVHLPS(xmmdst, tmm2) 

U0834: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0835: xmm2:= unk_6b7(tmm1, tmm4) !m2 SEQW UEND0
U0836: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp10, tmp9) SEQW GOTO U17ec

U0838: tmp8:= unk_dd6(r64base, r64idx) !m0 
U0839: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U083a: tmm4:= SHUFPD(tmm0, xmmdst) 

U083c: tmm1:= SHUFPD(tmm0, xmmdst) 
U083d: xmm2:= unk_6f7(tmm1, tmm4) !m2 SEQW UEND0
U083e: unk_dff() SEQW GOTO U2711

U0840: SAVEUIP( , 0x01, U4259) !m0 
U0841: tmm7:= FMOV( , 0x00000011) !m0 
U0842: LFNCEMARK->WRTAGW-> tmm0:= FMOV( , 0x00002005) !m0,m2 

U0844: LFNCEMARK-> tmm1:= FMOV( , 0x00000035) !m0 
U0845: tmp15:= FCOM2(tmp9, tmp8) !m0 SEQW URET1
U0846: tmp0:= ZEROEXT_DSZ32(0x0002001c) SEQW GOTO U44a6

U0848: tmp0:= LDZX_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0849: tmp1:= AND_DSZ32(0xffffffffffff0000, tmp0) 
U084a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 

U084c: tmm0:= unk_707(mm0) 
U084d: LFNCEMARK-> tmm6:= unk_691(tmm0) SEQW GOTO U008e
U084e: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U2769) !m0,m1 SEQW URET1

U0850: unk_432( , tmm0) 
U0851: WRMSLOOPCTRFBR( , 0x00000007) 
U0852: tmm0:= FMOV( , 0x00000091) !m0 

U0854: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U0852
U0855: NOP SEQW UEND0
U0856: LFNCEWAIT-> URET(0x01) !m0 

U0858: tmp0:= READURAM( , 0x003a, 64) 
U0859: tmp0:= NOTAND_DSZ32(tmp0, 0x00080001) 
U085a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2769) 

U085c: tmp4:= ZEROEXT_DSZ32(0x00000035) 
U085d: tmp0:= ZEROEXT_DSZ32(0x00000041) SEQW GOTO U2214
U085e: LFNCEWAIT-> unk_256() !m1 SEQW UEND3

U0860: tmp14:= SAVEUIP(0x01, U390a) !m0 
U0861: tmp2:= SAVEUIP(r64src, 0x00, U2bd6) 
U0862: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0864: TESTUSTATE( , SYS, UST_8086_MODE) !m1 ? SEQW GOTO U2769
U0865: tmp9:= ZEROEXT_DSZ64N(IMM_MACRO_ALIAS_RIP) !m0,m1 SEQW URET0
U0866: NOP 

U0868: tmp14:= SAVEUIP(0x01, U4002) !m0 
U0869: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U086a: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 

U086c: tmp3:= LDZX_DSZN_ASZ32_SC1(tmp2, mode=0x18) !m1 
U086d: tmp2:= LDZX_DSZ16_ASZ32_SC1(tmp2, IMM_MACRO_ALIAS_DATASIZE, mode=0x18) !m0 SEQW GOTO U2bd9
U086e: r64src:= ZEROEXT_DSZ32N(tmp2, r64src) !m1 SEQW UEND0

U0870: tmp3:= READURAM( , 0x0002, 64) 
U0871: tmp2:= RDSEGFLD(GS, BASE) 
U0872: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U0874: WRSEGFLD(tmp3, GS, BASE) 
U0875: LFNCEMARK-> WRITEURAM(tmp2, 0x0002, 64) !m2 SEQW GOTO U008e
U0876: STAD_DSZ16_ASZ32_SC1(tmp8, mode=0x18,  , tmp11) SEQW UEND0

U0878: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0879: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U2769) !m1 
U087a: tmp2:= OR_DSZN(r64src) !m1 

U087c: unk_25c( , tmp2) 
U087d: LFNCEMARK-> WRSEGFLD(tmp2) !m0 SEQW GOTO U008e
U087e: mm0:= FMOV( , tmm0) !m0 SEQW URET0

U0880: tmp0:= MOVE_DSZ32(0x0000000d) 
U0881: tmp1:= SAVEUIP( , 0x01, U205a) !m0 
U0882: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U0884: tmp15:= MOVEFROMCREG_DSZ64( , 0x575) 
U0885: tmp14:= ZEROEXT_DSZ16(0x00000cf6) SEQW GOTO U0b9a
U0886: LFNCEMARK-> rsp:= unk_25e(tmp3, 0x00000020) !m1 SEQW UEND0

U0888: tmp6:= ZEROEXT_DSZ32(0x00000026) 
U0889: ROVR<- tmp0:= MOVE_DSZ32(0x00000036) SEQW SAVEUIP1 U088a
U088a: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U088c: SAVEUIP( , 0x01, U1ac2) !m0 
U088d: tmp14:= ZEROEXT_DSZ16(0x00000cf6) SEQW GOTO U1d8e
U088e: xmm2:= MOVUPD(tmm7) SEQW UEND0

mov_cr0_r64_xlat:
U0890: tmp10:= MOVE_DSZ64(r64src, r64src) !m1 
U0891: tmp7:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0892: UPDATEUSTATE( , 0xfc) SEQW SAVEUIP0 U0894SEQW GOTO U2c21

U0894: tmp2:= XOR_DSZ32(tmp10, tmp11) 
U0895: tmp4:= AND_DSZ32(0x60000000, tmp2) 
U0896: tmp4:= SELECTCC_DSZ32_CONDZ(tmp4, 0x00000008) SEQW GOTO U4674

U0898: tmp10:= MOVE_DSZ64(r64src, r64src) !m1 
U0899: LFNCEMARK-> LBSYNC(0x00000002) 
U089a: TESTUSTATE( , SYS, UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW SAVEUIP0 U089c? SEQW GOTO U76e2

U089c: tmp11:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U089d: tmp8:= XOR_DSZ32(tmp10, tmp11) 
U089e: tmp8:= AND_DSZ32(0x001000b0, tmp8) SEQW GOTO U1eec

U08a0: tmp1:= CONCAT_DSZ16(r64src, 0x00000030) 
U08a1: tmp10:= MOVE_DSZ64(r64src, r64src) !m1 SEQW GOTO U25ee
U08a2: tmpv1:= ZEROEXT_DSZ32() 

FUN_ucode_00008a4:
U08a4: tmpv0:= READURAM( , 0x0014, 64) 
U08a5: tmpv0:= NOTAND_DSZ64(tmpv1, tmpv0) 
U08a6: tmpv1:= SHR_DSZ64(tmpv0, 0x00000015) SEQW GOTO U1c9e

U08a8: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U08a9: tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 
U08aa: STAD_DSZN_ASZ32_SC1(rdi, mode=0x08,  , tmp0) !m1 

U08ac: rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 
U08ad: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 SEQW UEND0
U08ae: SYNCWAIT-> tmp5:= SELECTCC_DSZ64_CONDNZ(tmp1, tmp5) SEQW GOTO U2e2a

U08b0: tmp4:= OR_DSZN(rcx) !m1 
U08b1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U045e) 
U08b2: SIGEVENT( , 0x0000003b) 

U08b4: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U08b5: tmp10:= MOVEMERGEFLGS_DSZ32() !m2 SEQW GOTO U3cc8
U08b6: xmm2:= SHUFPD(tmm7, tmm7) SEQW UEND0

U08b8: tmp4:= OR_DSZN(rcx) !m1 
U08b9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U045e) 
U08ba: SIGEVENT( , 0x0000003b) 

U08bc: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U08bd: tmp10:= MOVEMERGEFLGS_DSZ32() !m2 SEQW GOTO U2020
U08be: xmm2:= unk_5ba(tmm7, tmm7) SEQW UEND0

rsm_xlat:
U08c0: tmp9:= MOVEFROMCREG_DSZ64( , 0x105) 
U08c1: BTUJNB_DIRECT_NOTTAKEN(tmp9, 0x00000002, U2769) !m0,m1 
U08c2: LFNCEMARK-> tmp9:= READURAM( , 0x005c, 64) SEQW GOTO U30b8

rc4_decrypt_ucode_first:
U08c4: tmp5:= ADD_DSZ64(0x00000284, tmp14) 
U08c5: tmp6:= SUB_DSZ32(0x00000284, tmp13) 
U08c6: tmp8:= ZEROEXT_DSZ32(0x00000059) SEQW GOTO U5ed5

vmxoff_xlat:
U08c8: tmp0:= ZEROEXT_DSZ32(0x0000001a) 
U08c9: LFNCEMARK-> tmp4:= ZEROEXT_DSZ32(0x00000011) 
U08ca: tmp7:= READURAM( , 0x0057, 64) 

U08cc: tmp13:= ZEROEXT_DSZ32(0x00000017) 
U08cd: LFNCEWAIT-> tmp5:= READURAM( , 0x001f, 64) SEQW GOTO U2e9a
U08ce: xmm2:= unk_430(tmm7, xmmdst) !m1 SEQW UEND0

encls_xlat:
U08d0: tmp0:= MOVE_DSZ32(0x0000003c) 
U08d1: LFNCEMARK-> SAVEUIP( , 0x00, U12ce) 
U08d2: TESTUSTATE( , UCODE, !0x1000) !m0 ? SEQW GOTO U6486

U08d4: tmp15:= NOTAND_DSZ32(0x00000001, rax) 
U08d5: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000004, U2769) !m1 SEQW GOTO U6486
U08d6: xmm2:= SHUFPD(tmm7, tmm7) SEQW UEND0

U08d8: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U08d9: MOVE_DSZ32() SEQW SAVEUIP0 U08daSEQW GOTO U251d
U08da: LFNCEMARK-> unk_dff() 

U08dc: tmp0:= unk_a5f(r64base, r64idx) !m0 
U08dd: LFNCEWTMRK-> r64dst:= unk_d2b(tmp0) !m1 SEQW GOTO U4501
U08de: r64src:= ZEROEXT_DSZ32N(tmp11, r64src) !m1 SEQW UEND0

U08e0: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U08e1: MOVE_DSZ32() SEQW SAVEUIP0 U08e2SEQW GOTO U251d
U08e2: LFNCEMARK-> unk_dff() 

U08e4: tmp0:= unk_a5f(r64base, r64idx) !m0 
U08e5: LFNCEWTMRK-> r64dst:= unk_d2f(tmp0) !m1 SEQW GOTO U4501
U08e6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000008,  , tmp5) SEQW URET0

U08e8: tmp0:= RDSEGFLD(SS_KERNM, BASE) 
U08e9: tmp1:= RDSEGFLD(SS_KERNM, SEL+FLGS+LIM) 
U08ea: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 

U08ec: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp5, mode=0x01,  , tmp0) 
U08ed: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp5, 0x00000008, mode=0x01,  , tmp1) SEQW UEND0
U08ee: tmp5:= BTS_DSZ64(tmp5, 0x0000003b) SEQW GOTO U2e2a

U08f0: tmp8:= unk_a6f(r64base) !m0 
U08f1: LFNCEMARK-> tmp2:= MOVE_DSZ32(0x00020003) 
U08f2: tmp2:= CONCAT_DSZ32(tmp2, 0x00038003) SEQW SAVEUIP0 U08f4SEQW GOTO U4550

U08f4: tmp1:= LEA_DSZ8_ASZ32_SC1(tmp8, DS, r64idx, mode=0x18) 
U08f5: LFNCEMARK-> unk_d04(tmp8, r64idx) !m1 
U08f6: tmp3:= MOVEFROMCREG_DSZ64( , 0x51e) SEQW GOTO U5a95

U08f8: tmp4:= OR_DSZ64(r64src) 
U08f9: tmp8:= ADD_DSZ32() 
U08fa: tmp3:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U08fc: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U08fd: CMPUJNZ_DIRECT_NOTTAKEN(rcx, 0x00000005, U5d25) !m2 SEQW GOTO U04ec
U08fe: LFNCEWAIT-> rax:= ZEROEXT_DSZ32N(tmp0, rax) !m1 SEQW UEND0

U0900: tmp1:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U0901: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2769) !m0,m1 
U0902: tmp0:= READURAM( , 0x005c, 64) 

U0904: tmp0:= BT_DSZ64(tmp0, 0x0000002e) 
U0905: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp0, U2769) SEQW GOTO U54f2
U0906: SYNCWAIT-> rdx:= SHR_DSZ64(tmp5, 0x00000020) SEQW UEND0

U0908: tmp14:= SAVEUIP(0x01, U2991) !m0 
U0909: tmp0:= unk_f14(r64base) !m0 
U090a: tmp1:= SHR_DSZ32(tmp0, 0x0000000c) 

U090c: tmp3:= ZEROEXT_DSZ32(0x00000ffc) 
U090d: tmp4:= AND_DSZ32(tmp3, tmp0) 
U090e: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U03d4

U0910: tmp14:= SAVEUIP(0x01, U06d5) !m0 
U0911: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0912: tmp0:= MOVSX_SSZ32_DSZ64(r64dst) !m1 

U0914: tmp1:= SAR_DSZ64(tmp0, 0x00000003) 
U0915: tmp1:= AND_DSZ64(IMM_MACRO_fb, tmp1) !m0 
U0916: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW URET1

U0918: tmp4:= OR_DSZN(r64src) !m1 
U0919: tmp0:= unk_21f(tmp4) !m1 
U091a: tmp0:= unk_1df(tmp0) 

U091c: tmp1:= SHL_DSZ8(tmp0, 0x00000003) 
U091d: tmp2:= SHR_DSZN(tmp4, tmp1) !m1 
U091e: tmp2:= unk_1df(tmp2) SEQW GOTO U0029

U0920: tmp0:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0921: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0922: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0924: tmp1:= unk_3a0(r64dst, tmp0) !m2 
U0925: STAD_DSZ32_ASZ32_SC1(tmp2, mode=0x18,  , tmp1) !m1,m2 
U0926: r64dst:= unk_0fc(tmp0, r64dst) SEQW UEND0

U0928: tmp0:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0929: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U092a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U092c: tmp1:= ADD_DSZ32(tmp0, r64dst) !m1,m2 
U092d: STAD_DSZ32_ASZ32_SC1(tmp2, mode=0x18,  , tmp1) !m1,m2 
U092e: r64dst:= ZEROEXT_DSZ32N(tmp0, r64dst) !m1 SEQW UEND0

U0930: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0931: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0932: SUB_DSZ32(tmp1, rax) !m1,m2 

U0934: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0935: tmp3:= ZEROEXT_DSZ32N(tmp1, rax) !m1 
U0936: tmp4:= CMOVCC_DSZ64_CONDZ(r64dst, tmp1) !m2 SEQW GOTO U2164

U0938: tmp1:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0939: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U093a: SUB_DSZ8(tmp1, rax) !m2 

U093c: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U093d: tmp8:= unk_0bc(r64dst) 
U093e: tmp4:= CMOVCC_DSZ8_CONDZ(tmp8, tmp1) !m2 SEQW GOTO U2168

U0940: tmp4:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1,m2 
U0941: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0942: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0944: tmp6:= ZEROEXT_DSZ32(tmp4) 
U0945: tmp0:= CONCAT_DSZ32(rdx, rax) 
U0946: tmp1:= CONCAT_DSZ32(rcx, rbx) SEQW GOTO U19b9

U0948: tmp8:= unk_d46(r64base, r64idx) !m0,m1,m2 
U0949: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U094a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U094c: tmp0:= PINTMOVDTMM2I_DSZ64(tmm0) 
U094d: tmp4:= SUB_DSZ64(tmp0, rax) 
U094e: tmm1:= MOVHLPS( , tmm0) SEQW GOTO U5d95

U0950: tmp3:= ROR_DSZN(r64src, 0x00000001) !m1 
U0951: SAVEUIP( , 0x01, U080a) !m0 
U0952: tmp3:= RCL_DSZ32(tmp3, 0x00000001) !m1 

U0954: tmp2:= MOVEMERGEFLGS_DSZ64( , tmp3) 
U0955: tmp3:= ROR_DSZN(tmp3, 0x00000001) !m1 
U0956: tmp4:= ZEROEXT_DSZ32(0x00000021) SEQW GOTO U07e6

U0958: tmp3:= ROR_DSZ16(r64src, 0x00000009) 
U0959: tmp3:= RCL_DSZ16(tmp3, 0x00000001) 
U095a: tmp2:= MOVEMERGEFLGS_DSZ64( , tmp3) 

U095c: tmp3:= ROR_DSZ8(tmp3, 0x00000001) 
U095d: r64src:= unk_0fc(tmp3, r64src) 
U095e: SAVEUIP( , 0x01, U080c) !m0 SEQW GOTO U0956

U0960: tmp3:= OR_DSZ64(r64src) 
U0961: SAVEUIP( , 0x01, U080a) !m0 
U0962: tmp0:= RCXBTCNTMSK_DSZ32(IMM_MACRO_ALIAS_IMMEDIATE) !m0,m1 

U0964: tmp2:= ROR_DSZN(tmp3, 0x00000001) !m1 
U0965: tmp2:= RCL_DSZ32(tmp2, 0x00000001) !m1 
U0966: tmp2:= ROR_DSZN(tmp2, 0x00000001) !m1 SEQW GOTO U0975

U0968: tmp0:= RCXBTCNTMSK_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0969: tmp2:= unk_16b(r64src, 0x00000001) 
U096a: tmp2:= unk_36a(tmp2, 0x00000001) 

U096c: tmp2:= unk_16b(tmp2, 0x00000001) 
U096d: tmp1:= SUB_DSZ8(tmp0, 0x00000008) 
U096e: tmp2:= unk_169(tmp2, tmp1) SEQW GOTO U2789

U0970: tmp3:= OR_DSZ64(r64src) 
U0971: SAVEUIP( , 0x01, U080a) !m0 
U0972: tmp0:= RCXBTCNTMSK_DSZ32(IMM_MACRO_ALIAS_IMMEDIATE) !m0,m1 

U0974: tmp2:= RCL_DSZ32(tmp3, 0x00000001) !m1 
U0975: tmp4:= OR_DSZ64(0x00000000, tmp0) 
U0976: tmp3:= unk_02f(tmp3, tmp0) !m1 SEQW GOTO U0031

U0978: tmp3:= LDTICKLE_DSZ16_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0979: tmp0:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U097a: SAVEUIP( , 0x01, U0574) !m0 

U097c: tmp3:= CONCAT_DSZ16(r64dst, tmp3) 
FUN_ucode_000097d:
U097d: tmp3:= ROL_DSZ32(tmp3, tmp0) 
U097e: tmp3:= BT_DSZ32(tmp3, 0x00000010) SEQW GOTO U0985

U0980: tmp0:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0981: tmp3:= SAVEUIP(r64src, 0x01, U080a) !m0 
U0982: tmp3:= CONCAT_DSZ16(r64dst, tmp3) 

U0984: tmp3:= ROR_DSZ32(tmp3, tmp0) 
U0985: tmp4:= AND_DSZ32(0x0000001f, tmp0) 
U0986: tmp4:= SELECTCC_DSZ32_CONDZ(tmp4, 0x0000003f) SEQW GOTO U0806

U0988: tmp3:= LDTICKLE_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0989: tmp0:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U098a: tmp2:= CONCAT_DSZ32(r64dst, tmp3) 

U098c: tmp3:= unk_12f(tmp2, tmp0) 
U098d: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U098e: tmp8:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 SEQW GOTO U216c

U0990: SAVEUIP( , 0x01, U080a) !m0 
U0991: tmp3:= OR_DSZ64(r64src) 
U0992: tmp0:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 

U0994: tmp4:= AND_DSZ32(0x0000003f, tmp0) 
U0995: tmp3:= unk_06f(tmp3, tmp0) 
U0996: tmp2:= SUB_DSZ8(tmp0, 0x00000040) SEQW GOTO U0142

U0998: tmp3:= unk_208(0x00000001) 
U0999: LFNCEMARK-> tmp4:= unk_207(0x00080000) 
U099a: tmp4:= ADD_DSZN(tmp4, tmp3) !m1 

U099c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U2711) 
U099d: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U099e: tmp0:= READAFLAGS( , tmp0) !m2 SEQW GOTO U585d

U09a0: tmp2:= unk_207(0x000000f5) 
U09a1: tmp3:= ZEROEXT_DSZ32(0xffffffffffffffff) 
U09a2: tmp2:= unk_208(0x000000f5, tmp2) 

U09a4: tmp3:= unk_20d(0xfffffffffffffdff, tmp3) 
U09a5: SIGEVENT( , tmp2) 
U09a6: tmp3:= unk_201(0xffffffffffffcdff, tmp3) SEQW GOTO U315c

U09a8: tmp2:= unk_208(0x000000f5) 
U09a9: LFNCEMARK-> tmp3:= SIGEVENT(0xffffffffffffffff, tmp2) 
U09aa: tmp3:= unk_20d(0xfffffffffffffdff, tmp3) 

U09ac: tmp3:= unk_201(0xffffffffffffcdff, tmp3) 
U09ad: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U09ae: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x1a) !m1 SEQW GOTO U65d6

U09b0: tmp2:= unk_00f(0x00000008) 
U09b1: tmp1:= unk_20c( , 0x00000001) 
U09b2: tmp3:= unk_20d( , tmp1) 

U09b4: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000001, U2711) !m1 
U09b5: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2791) 
U09b6: tmp2:= OR_DSZ32(0x00000010, tmp2) SEQW GOTO U081e

U09b8: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U09b9: tmp2:= unk_00f(0x00040000, tmp2) 
U09ba: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2769

U09bc: tmp3:= READURAM( , 0x0035, 64) 
U09bd: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000029, U2769) !m1 
U09be: LFNCEMARK-> MOVETOCREG_BTR_DSZ64(tmp2, 0x00000010, 0x7fe) !m2 SEQW GOTO U008e

U09c0: tmp0:= ZEROEXT_DSZ32(0x00000001) 
U09c1: tmp2:= ZEROEXT_DSZ32N(IMM_MACRO_02) !m0,m1 
U09c2: tmp1:= SUB_DSZN(0x00000001, rcx) !m1 

U09c4: tmp0:= SELECTCC_DSZ32_CONDZ(tmp1, tmp0) 
U09c5: tmp0:= SUB_DSZ32(0x00000001, tmp0) 
U09c6: tmp4:= SELECTCC_DSZ64_CONDNZ(tmp0, tmp2) SEQW GOTO U071d

U09c8: tmp2:= AND_DSZ8(rax, 0x0000000f) 
U09c9: tmp1:= LAHF() !m2 
U09ca: tmp4:= SUB_DSZ8(0x0000000a, tmp2) 

U09cc: tmp5:= SETCC_CONDNB(tmp4) 
U09cd: tmp1:= AND_DSZ16(0x00001000, tmp1) 
U09ce: tmp3:= OR_DSZ16(tmp5, tmp1) SEQW GOTO U0039

U09d0: tmp1:= MOVEINSERTFLGS_DSZ32( , 0x00000006) 
U09d1: tmp0:= READAFLAGS() !m2 
U09d2: tmp2:= ADD_DSZ8(0x00000066, rax) 

U09d4: tmp3:= READAFLAGS(tmp2) 
U09d5: tmp3:= OR_DSZ16(tmp0, tmp3) 
U09d6: tmp4:= AND_DSZ16(0x00000010, tmp3) SEQW GOTO U6039

U09d8: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x1a) !m1 
U09d9: tmp10:= unk_25e(rsp, 0x00000007) !m1 
U09da: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U09dc: rsp:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U09dd: tmp1:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U09de: STAD_DSZN_ASZ32_SC1(tmp1, mode=0x18,  , tmp0) !m1 SEQW UEND0

U09e0: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, rax) !m0,m1 
U09e1: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U09e2: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, rcx) !m0,m1 

U09e4: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_eb, mode=0x0a, rdx) !m0,m1 
U09e5: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_e3, mode=0x0a, rbx) !m0,m1 
U09e6: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_db, mode=0x0a, rsp) !m0,m1 SEQW GOTO U016a

U09e8: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 
U09e9: rdi:= ZEROEXT_DSZ32N(tmp0, rdi) !m1 
U09ea: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U09ec: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0,m1 
U09ed: rsi:= ZEROEXT_DSZ32N(tmp0, rsi) !m1 
U09ee: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_13, mode=0x0a) !m0,m1 SEQW GOTO U5a35

U09f0: tmp1:= unk_8bf(SS, IMM_MACRO_ALIAS_DISPLACEMENT) !m0 
U09f1: tmp1:= OR_DSZ16(tmp1) 
U09f2: tmp1:= SUB_DSZN(tmp1) !m1 

U09f4: tmp0:= ZEROEXT_DSZ32(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U09f5: tmp0:= AND_DSZ32(0x0000001f, tmp0) 
U09f6: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U67d5

U09f8: MOVE_DSZ32() 
U09f9: SAVEUIP( , 0x01, U1b8c) !m0 
U09fa: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2769

U09fc: tmp0:= READURAM( , 0x005c, 64) 
U09fd: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000018, U2769) !m1 
U09fe: tmp1:= READURAM( , 0x0041, 64) SEQW GOTO U084e

U0a00: tmp9:= unk_d76(r64base, r64idx) !m0 
U0a01: tmm1:= PSHUFD(tmm1) 
U0a02: tmm0:= PSHUFD(mm2) 

U0a04: tmm2:= unk_51b(tmm0, tmm1) 
U0a05: tmm3:= unk_51b(tmm0, tmm1) 
U0a06: mm2:= unk_44f(tmm3, tmm2) SEQW UEND0

U0a08: tmm0:= unk_5ab(xmmsrc) 
U0a09: tmm4:= unk_5ab(xmmsrc) 
U0a0a: tmm1:= unk_5ab(xmmdst) 

U0a0c: tmm2:= SHUFPD(tmm4, tmm1) 
U0a0d: tmm1:= unk_5ab(xmmdst) 
U0a0e: tmm3:= SHUFPD(tmm0, tmm1) SEQW GOTO U075e

U0a10: tmp9:= unk_dd6(r64base, r64idx) !m0 
U0a11: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a12: tmp1:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_IMMEDIATE) !m0 

U0a14: tmm3:= unk_6b0(tmm1, xmmdst) !m0,m2 
U0a15: tmm4:= MOVHLPS(tmm3) 
U0a16: xmm2:= unk_6ad(tmm4, tmm3) !m0,m2 SEQW UEND0

U0a18: tmp9:= unk_dd6(r64base, r64idx) !m0 
U0a19: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a1a: tmp1:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_IMMEDIATE) !m0 

U0a1c: tmm3:= unk_6f0(tmm1, xmmdst) !m0,m2 
U0a1d: tmp9:= unk_52b(tmp11) 
U0a1e: tmm1:= unk_57a(tmm1) SEQW GOTO U018a

U0a20: tmm0:= unk_526(xmmdst, xmmsrc) !m0 
U0a21: tmm1:= unk_566(xmmdst, tmm0) !m0 
U0a22: xmm1:= unk_72f(tmm1) !m1 

U0a24: tmm3:= unk_5a3( , tmm1) 
U0a25: mm0:= unk_76b(tmm3) 
U0a26: MOVEINSERTFLGS_DSZ32(tmp0) !m2 SEQW UEND0

U0a28: tmp9:= unk_dd6(r64base, r64idx) !m0 
U0a29: tmm3:= SHUFPD(tmm1, tmm1) 
U0a2a: tmm3:= unk_6f7(tmm3) !m2 

U0a2c: tmm2:= unk_6f7(tmm1) !m2 
U0a2d: tmm3:= SHUFPD(tmm3, tmm3) 
U0a2e: xmm2:= ORPD(tmm3, tmm2) SEQW UEND0

U0a30: tmp1:= SUB_DSZ64(0x00000001) 
U0a31: LFNCEMARK-> tmp13:= SAVEUIP(0x00, U0192) 
U0a32: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0a34: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0a35: unk_c12(r64base, r64idx) !m0,m1 
U0a36: tmp0:= unk_88f(tmp11) !m0,m1 SEQW GOTO U6c29

U0a38: tmp1:= SUB_DSZ64(0x00000001) 
U0a39: LFNCEMARK-> tmp13:= SAVEUIP(0x00, U2ba5) 
U0a3a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0a3c: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0a3d: tmp2:= unk_88f(tmp11) !m0,m1 
U0a3e: tmp0:= LDZX_DSZN_ASZ32_SC1(tmp11, mode=0x18) !m1 SEQW GOTO U6a16

U0a40: tmp14:= SAVEUIP(0x01, U221e) !m0 
FUN_ucode_0000a41:
U0a41: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a42: tmp0:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 

U0a44: unk_c24(tmp0) !m1 
U0a45: WRTAGW-> tmm1:= unk_60f( , IMM_MACRO_ALIAS_STi) !m0,m1,m2 
U0a46: tmp9:= unk_c3c(tmp0) !m1 SEQW GOTO U1cbe

U0a48: SAVEUIP( , 0x01, U019a) !m0 
U0a49: LFNCEMARK-> AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a4a: tmp1:= LEA_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 

U0a4c: tmp0:= AND_DSZ8(0x0000000f, tmp1) 
U0a4d: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0a4e: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) SEQW URET1

U0a50: NOP 
U0a51: WRTAGW-> tmm5:= unk_6a8(IMM_MACRO_ALIAS_STi) !m0 
U0a52: LFNCEMARK-> tmp15:= unk_6a0() !m2 

U0a54: mm0:= unk_7ea(0x00000000) 
U0a55: tmm3:= unk_624(0x00000000) 
U0a56: tmp2:= PINTMOVDTMM2I_DSZ32(tmm3) SEQW GOTO U1b6c

U0a58: tmp15:= ADD_DSZ32() 
U0a59: LFNCEMARK-> tmm7:= unk_4b5() !m2 
U0a5a: WRTAGW-> tmm6:= FMOV( , 0x00000005) !m0 

U0a5c: mm7:= FMOV( , 0x0000200d) !m0 
U0a5d: tmm7:= unk_6a8(0x00000000) 
U0a5e: mm0:= unk_72a(0x00000000) SEQW GOTO U3e41

U0a60: mm0:= unk_72a(0x00000000) 
U0a61: tmp8:= SHL_DSZ32(tmp0, 0x00000003) 
U0a62: LFNCEMARK-> tmm2:= unk_4b5() !m2 

U0a64: WRTAGW-> tmm7:= FMOV( , 0x00000005) !m0 
U0a65: tmm2:= unk_6a8(0x00000000) 
U0a66: tmm0:= unk_496(0x00000000) SEQW GOTO U3c99

sldt_r16_xlat:
U0a68: tmp2:= RDSEGFLD(LDT, SEL) 
U0a69: SAVEUIP( , 0x01, U086e) !m0 
U0a6a: SAVEUIP( , 0x00, U6144) 

U0a6c: TESTUSTATE( , SYS, !UST_8086_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW URET1
U0a6d: TESTUSTATE( , SYS, UST_8086_MODE) !m1 ? SEQW GOTO U2769
U0a6e: tmp0:= URET(0x0000042f, 0x00) 

U0a70: tmp0:= LDZX_DSZN_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0,m1 
U0a71: tmp1:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0a72: tmp0:= SUB_DSZN(tmp0, r64dst) !m1 

U0a74: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp0, U5d56) 
U0a75: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a76: tmp0:= LDZX_DSZN_ASZ32_SC1(tmp1, IMM_MACRO_ALIAS_DATASIZE, mode=0x18) !m0,m1 SEQW GOTO U4499

U0a78: tmp2:= ZEROEXT_DSZ32(0x00000003) 
U0a79: tmp4:= ZEROEXT_DSZ64N(IMM_MACRO_ALIAS_RIP) !m0,m1 
U0a7a: tmp3:= ZEROEXT_DSZ32(0x00000006) 

U0a7c: tmp8:= MOVEFROMCREG_DSZ64( , 0x79e) 
U0a7d: LFNCEMARK-> tmp6:= MOVE_DSZ32(0x00000000) 
U0a7e: tmp10:= unk_203( , 0x00000001) SEQW GOTO U2415

U0a80: tmp0:= MOVE_DSZ32(0x0000000e) 
U0a81: LFNCEMARK-> LBSYNC(0x00000002) 
U0a82: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U0a84: tmp6:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0a85: tmp6:= ZEROEXT_DSZ16N(tmp6) !m1 
U0a86: tmp8:= RDSEGFLD(SS_KERNM, UNK_FLD_0c) SEQW GOTO U27a1

U0a88: tmp4:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0a89: tmp5:= RDSEGFLD(SS_KERNM, UNK_FLD_0c) 
U0a8a: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U0a8c: tmp4:= ZEROEXT_DSZ16N(tmp4, 0x00000002) !m1 
U0a8d: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a8e: tmp5:= ADD_DSZN(tmp4, tmp5) !m1 SEQW GOTO U25e9

U0a90: tmp1:= MOVE_DSZ32(0x00000020) 
U0a91: LFNCEMARK-> tmp11:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U0a92: UPDATEUSTATE( , !0x04) !m0 SEQW SAVEUIP0 U0a94SEQW GOTO U449d

U0a94: MOVETOCREG_DSZ64(tmp10, 0x7f6) !m2 SEQW GOTO U17ea
FUN_ucode_0000a95:
U0a95: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U0a96: PORTOUT_DSZ32_ASZ16_SC1(0x5114,  , tmp15) !m2 SEQW URET1

U0a98: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0a99: tmp1:= LDZX_DSZN_ASZ32_SC1(rdi, mode=0x08) !m1 
U0a9a: tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 

U0a9c: SUB_DSZ32(tmp1, tmp0) !m1,m2 
U0a9d: rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 
U0a9e: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 SEQW UEND0

U0aa0: tmp15:= SHR_DSZN(rcx, 0x00000001) !m1 
U0aa1: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00003803) 
U0aa2: tmp14:= AND_DSZN(0x00000001, rcx) !m1 

U0aa4: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0aa5: tmp0:= MOVEMERGEFLGS_DSZ32(0x00001a58, tmp15) 
U0aa6: tmp9:= SHL_DSZN(rcx, 0x00000003) !m1 SEQW GOTO U46c4

U0aa8: tmp15:= SHR_DSZN(rcx, 0x00000002) !m1 
U0aa9: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00003002) 
U0aaa: tmp14:= AND_DSZN(0x00000003, rcx) !m1 

U0aac: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0aad: tmp0:= MOVEMERGEFLGS_DSZ32(0x00001a58, tmp15) 
U0aae: tmp9:= SHL_DSZN(rcx, 0x00000002) !m1 SEQW GOTO U46c4

U0ab0: tmp15:= SHR_DSZN(rcx, 0x00000003) !m1 
U0ab1: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00002801) 
U0ab2: tmp14:= AND_DSZN(0x00000007, rcx) !m1 

U0ab4: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0ab5: tmp0:= MOVEMERGEFLGS_DSZ32(0x00001a58, tmp15) 
U0ab6: tmp9:= SHL_DSZN(rcx, 0x00000001) !m1 SEQW GOTO U46c4

U0ab8: tmp15:= SHR_DSZN(rcx, 0x00000004) !m1 
U0ab9: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00002000) 
U0aba: tmp14:= AND_DSZN(0x0000000f, rcx) !m1 

U0abc: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0abd: tmp0:= MOVEMERGEFLGS_DSZ32(0x00001a58, tmp15) 
U0abe: tmp9:= SHL_DSZN(rcx, 0x00000000) !m1 SEQW GOTO U46c4

U0ac0: tmp15:= SHR_DSZN(rcx, 0x00000001) !m1 
U0ac1: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00003803) 
U0ac2: tmp14:= AND_DSZN(0x00000001, rcx) !m1 

U0ac4: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0ac5: tmp0:= MOVEMERGEFLGS_DSZ32(0x00003a25, tmp15) 
U0ac6: tmp9:= SHL_DSZN(rcx, 0x00000003) !m1 SEQW GOTO U47d0

U0ac8: tmp15:= SHR_DSZN(rcx, 0x00000002) !m1 
U0ac9: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00003002) 
U0aca: tmp14:= AND_DSZN(0x00000003, rcx) !m1 

U0acc: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0acd: tmp0:= MOVEMERGEFLGS_DSZ32(0x00003a25, tmp15) 
U0ace: tmp9:= SHL_DSZN(rcx, 0x00000002) !m1 SEQW GOTO U47d0

U0ad0: tmp15:= SHR_DSZN(rcx, 0x00000003) !m1 
U0ad1: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00002801) 
U0ad2: tmp14:= AND_DSZN(0x00000007, rcx) !m1 

U0ad4: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0ad5: tmp0:= MOVEMERGEFLGS_DSZ32(0x00003a25, tmp15) 
U0ad6: tmp9:= SHL_DSZN(rcx, 0x00000001) !m1 SEQW GOTO U47d0

U0ad8: tmp15:= SHR_DSZN(rcx, 0x00000004) !m1 
U0ad9: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00002000) 
U0ada: tmp14:= AND_DSZN(0x0000000f, rcx) !m1 

U0adc: tmp1:= SUB_DSZ16(tmp15, 0x00018000) 
U0add: tmp0:= MOVEMERGEFLGS_DSZ32(0x00003a25, tmp15) 
U0ade: tmp9:= SHL_DSZN(rcx, 0x00000000) !m1 SEQW GOTO U47d0

rdmsr_xlat:
U0ae0: tmp8:= MOVEINSERTFLGS_DSZ64(0x00000031, rcx) !m1 
U0ae1: LFNCEMARK-> tmp1:= ZEROEXT_DSZ32() 
U0ae2: tmp5:= TESTUSTATE(tmp1, SYS, UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW SAVEUIP0 U0ae4? SEQW GOTO U677d

U0ae4: tmp10:= NOTAND_DSZ32(0x0001c000, tmp8) 
U0ae5: tmp10:= MSR2CR( , tmp10) 
U0ae6: SAVEUIP( , 0x00, U0686) SEQW GOTO U3ce1

vmxon_xlat:
U0ae8: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0ae9: LFNCEMARK-> tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0aea: tmp1:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U0aec: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U2769) !m1 
U0aed: tmp3:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U0aee: tmp3:= NOTAND_DSZ32(tmp3, 0x80000021) SEQW GOTO U18de

vmptrld_xlat:
U0af0: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0af1: LFNCEMARK-> tmp6:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0af2: TESTUSTATE( , SYS, !UST_VMX_DIS | UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U2869

U0af4: SAVEUIP( , 0x00, U2869) 
U0af5: tmp4:= ZEROEXT_DSZ32(0x00000000) 
U0af6: tmp0:= ZEROEXT_DSZ32(0x00000415) SEQW GOTO U6662

vmclear_xlat:
U0af8: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0af9: LFNCEMARK-> tmp6:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0afa: TESTUSTATE( , SYS, !UST_VMX_DIS | UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U5db9

U0afc: SAVEUIP( , 0x00, U5db9) 
U0afd: tmp4:= ZEROEXT_DSZ32(0x00000002) 
U0afe: tmp0:= ZEROEXT_DSZ32(0x00000413) SEQW GOTO U6662

U0b00: tmp3:= READURAM( , 0x0043, 64) 
U0b01: LFNCEMARK-> tmp1:= READURAM( , 0x0054, 64) 
U0b02: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U2769

U0b04: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000002d, U2769) !m1 
U0b05: tmp14:= READURAM( , 0x0010, 64) 
U0b06: tmp2:= OR_DSZ32(rax) SEQW GOTO U4820

vmcall_xlat:
U0b08: tmp2:= MOVE_DSZ32(0x00000012) 
U0b09: ROVR<-LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(tmp2) SEQW SAVEUIP1 U0b0aSEQW GOTO U1d01
U0b0a: SAVEUIP( , 0x00, U2939) 

U0b0c: tmp13:= ZEROEXT_DSZ32(0x00000001) 
U0b0d: TESTUSTATE( , SYS, UST_VMX_DIS | UST_USER_MODE | UST_SMM | UST_VMX_OP_DIS) !m1 ? SEQW GOTO U0072
U0b0e: tmp9:= READURAM( , 0x0056, 64) SEQW URET0

enclu_xlat:
U0b10: TESTUSTATE( , SYS, !0x2000) !m0,m1 ? SEQW GOTO U75c6
U0b11: tmp14:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U0b12: tmp14:= BT_DSZ64(tmp14, 0x0000002e) 

U0b14: tmp15:= NOTAND_DSZ32(0x00000001, rax) 
U0b15: tmp15:= SELECTCC_DSZ32_CONDNB(tmp14, tmp15) 
U0b16: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000002, U44f9) !m0 SEQW GOTO U75c6

U0b18: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U0b19: tmp0:= ZEROEXT_DSZ32(0x0000000d) 
U0b1a: tmp7:= ZEROEXT_DSZ32(0x00000002) 

U0b1c: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U3365) !m1,m2 
U0b1d: tmp15:= READURAM( , 0x001f, 64) !m2 
U0b1e: tmp15:= BTR_DSZ64(tmp15, 0x0000000a) SEQW GOTO U0e0d

U0b20: tmp2:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0b21: LFNCEWTMRK-> tmp0:= NOTAND_DSZ32(0x00000003, tmp2) 
U0b22: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 

U0b24: tmp5:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U0b25: tmp6:= READURAM( , 0x0011, 64) 
U0b26: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000270, mode=0x01, tmp6) SEQW GOTO U0149

U0b28: tmp4:= OR_DSZ64(r64src) 
U0b29: tmp8:= ADD_DSZ32() 
U0b2a: tmp0:= NOTAND_DSZ64(0x0000001f, r64dst) 

U0b2c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 
U0b2d: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0b2e: SIGEVENT( , 0x00000047) SEQW GOTO U38ed

U0b30: tmp4:= OR_DSZ64(r64src) 
U0b31: tmp8:= ADD_DSZ32() 
U0b32: BTUJNB_DIRECT_NOTTAKEN(r64dst, 0x00000010, U62a0) !m1 

U0b34: LFNCEMARK-> tmp0:= SHL_DSZ64(r64dst, 0x0000001d) 
U0b35: tmp1:= MOVEFROMCREG_DSZ64( , 0x51c) 
U0b36: tmp3:= SHR_DSZ64(tmp1, 0x0000003f) SEQW GOTO U6295

U0b38: tmp4:= OR_DSZ64(r64src) 
U0b39: tmp8:= ADD_DSZ32() 
U0b3a: MOVE_DSZ32() 

U0b3c: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U0b3d: tmp0:= BTR_DSZ64(r64dst, 0x0000003f) 
U0b3e: tmp1:= SUB_DSZ64(0x00000005, tmp0) SEQW GOTO U0d9c

U0b40: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U0b41: tmp6:= ZEROEXT_DSZ64N(IMM_MACRO_ALIAS_RIP) !m0,m1 
U0b42: tmp14:= MOVE_DSZ32(IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0b44: tmp14:= SHL_DSZ32(tmp14, 0x00000001) 
U0b45: tmp14:= BTS_DSZ32(tmp14, 0x00000013) 
U0b46: tmp14:= ZEROEXT_DSZ16(0x0000192e, tmp14) SEQW GOTO U2e91

U0b48: tmp12:= LDZX_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U0b49: TESTUSTATE( , SYS, !UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U0b4e
U0b4a: tmp15:= SUB_DSZ64(0x00000001) 

U0b4c: WRITEURAM(tmp15, 0x0057, 64) !m2 
U0b4d: WRITEURAM(tmp15, 0x0056, 64) !m2 
U0b4e: LFNCEMARK-> WRITEURAM(tmp12, 0x0011, 64) !m2 SEQW GOTO U0794

U0b50: tmp15:= READURAM( , 0x0053, 64) 
U0b51: tmp0:= ZEROEXT_DSZ32(0x00000004) 
U0b52: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000006, U079e) !m0 

U0b54: tmp4:= MOVEFROMCREG_DSZ64( , 0x562) 
U0b55: tmp4:= NOTAND_DSZ64(0x00000fff, tmp4) 
U0b56: tmp0:= ADD_DSZ64(0x00000040, tmp4) SEQW GOTO U6b4c

udbgrd_xlat:
U0b58: tmp1:= MOVE_DSZ64() 
U0b59: tmp3:= MOVEFROMCREG_DSZ64( , 0x38c, 32) !m1 
U0b5a: tmp3:= NOTAND_DSZ32(tmp3, 0xa0000000) 

U0b5c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U028d) 
U0b5d: tmp3:= READURAM( , 0x005c, 64) 
U0b5e: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000002, U028d) !m0 SEQW GOTO U028a

U0b60: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U0b64
U0b61: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0b62: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000012, U2769) !m0,m1 

U0b64: tmp0:= SHR_DSZ32(rcx, 0x00000001) 
U0b65: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 
U0b66: tmp0:= READURAM( , 0x005b, 64) !m2 SEQW GOTO U055c

U0b68: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U0b6c
U0b69: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0b6a: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000012, U2769) !m0,m1 

U0b6c: LFNCEMARK-> tmp2:= ZEROEXT_DSZ32(0x00000016) 
U0b6d: TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW GOTO U686e
U0b6e: UJMP( , U2711) 

U0b70: tmp0:= ZEROEXT_DSZ32(0x0001000d) 
U0b71: LFNCEMARK-> tmp1:= ZEROEXT_DSZ32(0x0000000d) 
U0b72: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0b74: tmp6:= READURAM( , 0x005b, 64) !m2 
U0b75: tmp6:= SHR_DSZ64(tmp6, 0x00000038) 
U0b76: tmp4:= AND_DSZ32(rax, tmp6) SEQW GOTO U4cd0

U0b78: tmp1:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0b79: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U2769) !m0,m1 
U0b7a: LFNCEMARK-> TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U0b7e

U0b7c: tmp1:= READURAM( , 0x0043, 64) 
U0b7d: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000034, U2769) !m1 
U0b7e: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U2b6e

U0b80: tmp0:= READURAM( , 0x005b, 64) !m2 
U0b81: tmp6:= SHR_DSZ64(tmp0, 0x00000038) 
U0b82: tmp2:= READURAM( , 0x0023, 64) 

U0b84: tmp2:= AND_DSZ64(0x00000100, tmp2) 
U0b85: tmp6:= OR_DSZ64(tmp2, tmp6) 
U0b86: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW GOTO U33c1

U0b88: tmp0:= READURAM( , 0x005b, 64) !m2 
U0b89: tmp6:= SHR_DSZ64(tmp0, 0x00000038) 
U0b8a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U0b8c: tmp11:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U0b8d: tmp0:= ZEROEXT_DSZ32(0x0001000f) 
U0b8e: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) SEQW GOTO U4c70

lidt_xlat:
U0b90: SAVEUIP_REGOVR(0x01, U0b91, 0x0006) !m0 
FUN_ucode_0000b91:
U0b91: SAVEUIP( , 0x00, U613e) 
U0b92: MOVE_DSZ32() 

U0b94: LFNCEMARK-> LBSYNC(0x00000002) 
U0b95: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0b96: tmp14:= READUIP_REGOVR(0x01) !m0 

U0b98: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW URET0
U0b99: tmp1:= ZEROEXT_DSZ32() 
U0b9a: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4e82

U0b9c: TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW GOTO U1f91
U0b9d: NOP 
U0b9e: URET(0x01) !m0 

str_m16_xlat:
U0ba0: SAVEUIP_REGOVR(0x01, U0ba1, 0x000f) !m0 
U0ba1: SAVEUIP( , 0x01, U0721) !m0 
FUN_ucode_0000ba2:
U0ba2: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U0a6a

U0ba4: tmp0:= OR_DSZN(0x00010000) !m1 
U0ba5: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U0a6a) 
U0ba6: tmp0:= RDSEGFLD(SEG_V0, BASE) 

U0ba8: tmp1:= RDSEGFLD(SEG_V0, SEL+FLGS+LIM) SEQW GOTO U08ea
FUN_ucode_0000ba9:
U0ba9: tmpv0:= PORTIN_DSZ32_ASZ16_SC1(0x483c) !m2 
U0baa: tmpv0:= ADD_DSZ32(0x00000000, tmpv0) 

U0bac: tmpv1:= MOVEFROMCREG_DSZ64( , 0x286, 32) !m1 
U0bad: tmpv1:= OR_DSZ32(tmpv1, 0x000506c0) 
U0bae: tmpv0:= CMOVCC_DSZ32_CONDNZ(tmpv0, tmpv1) SEQW URET1

U0bb0: tmp3:= UPDATEUSTATE(!0x0c) !m0 
U0bb1: LFNCEMARK-> SAVEUIP( , 0x01, U1888) !m0 
FUN_ucode_0000bb2:
U0bb2: tmp2:= MOVEFROMCREG_DSZ64( , 0x7ff) 

U0bb4: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U2769) !m1 
U0bb5: tmp2:= unk_04d(rsp, rsp) 
U0bb6: tmp0:= READURAM( , 0x0081, 64) SEQW URET1

U0bb8: TESTUSTATE( , SYS, UST_SMM | 0x4000) !m1 ? SEQW GOTO U17ea
U0bb9: SAVEUIP( , 0x00, U043c) 
FUN_ucode_0000bba:
U0bba: SAVEUIP( , 0x01, U17ec) !m0 

FUN_ucode_0000bbc:
U0bbc: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW URET0
U0bbd: tmp9:= READURAM( , 0x0079, 64) 
U0bbe: tmp4:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U1c1c

U0bc0: tmp2:= ZEROEXT_DSZ8(IMM_MACRO_ALIAS_IMMEDIATE) !m0 
U0bc1: LFNCEMARK-> tmp4:= ZEROEXT_DSZ64N(IMM_MACRO_ALIAS_RIP) !m0,m1 
U0bc2: tmp6:= ZEROEXT_DSZ16(0x00000000) 

U0bc4: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U3e34
U0bc5: NOP 
U0bc6: NOP 

U0bc8: tmp0:= unk_206( , 0x00000001) SEQW GOTO U5551
write_port_4c:
U0bc9: tmp7:= ZEROEXT_DSZ32(0x4000004c) 
U0bca: tmp8:= ZEROEXT_DSZ32(0x00000002) 

U0bcc: PORTOUT_DSZ32_ASZ16_SC1(tmp7,  , tmp8) 
U0bcd: tmp8:= PORTIN_DSZ32_ASZ16_SC1(tmp7) 
U0bce: BTUJNB_DIRECT_NOTTAKEN(tmp8, 0x00000000, U0bcd) SEQW GOTO U06c6

wmptrst_xlat:
U0bd0: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0bd1: tmp6:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0bd2: TESTUSTATE( , SYS, !UST_VMX_DIS | UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U0bd6

U0bd4: tmp0:= ZEROEXT_DSZ32(0x00000416) 
U0bd5: tmp4:= ZEROEXT_DSZ32(0x00000001) SEQW SAVEUIP0 U0bd6SEQW GOTO U6662
U0bd6: tmp3:= READURAM( , 0x0056, 64) 

U0bd8: STAD_DSZ64_ASZ32_SC1(tmp5, mode=0x18,  , tmp3) SEQW GOTO U0794
FUN_ucode_0000bd9:
U0bd9: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp3) 
U0bda: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020,  , tmp4) 

U0bdc: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040,  , tmp5) 
U0bdd: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000060,  , tmp6) 
U0bde: tmp12:= ADD_DSZ32(0x00000080, tmp12) SEQW URET0

cpuid_xlat:
U0be0: tmp0:= MOVE_DSZ32(0x0000000a) 
U0be1: LFNCEMARK-> TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW GOTO U4760
U0be2: tmp2:= READURAM( , 0x0023, 64) 

U0be4: tmp1:= MOVEFROMCREG_DSZ64( , 0x105) 
U0be5: tmp2:= SHR_DSZ32(tmp2, 0x0000000d) 
U0be6: tmp2:= NOTAND_DSZ32(tmp1, tmp2) 

U0be8: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000002, U2711) !m0,m1 SEQW GOTO U4760
U0be9: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U0bea: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000008, U1236) !m2 

U0bec: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000009, U377a) !m1,m2 
U0bed: tmp9:= unk_6a0() 
U0bee: tmm0:= unk_495(tmm0, tmm1) SEQW GOTO U1236

U0bf0: tmp1:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U0696
U0bf1: SYNCMARK-> tmp8:= ZEROEXT_DSZ32(0x0000001e) 
U0bf2: SAVEUIP( , 0x00, U3210) 

U0bf4: tmp0:= SAVEUIP_REGOVR(0x01, U0bf5, 0x0028) !m0 SEQW GOTO U1d90
U0bf5: tmp2:= TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW URET0
U0bf6: tmp4:= READURAM( , 0x0043, 64) 

U0bf8: SYNCMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp4, 0x0000002a, U3210) !m0,m1,m2 
U0bf9: tmp7:= READURAM( , 0x002f, 64) SEQW GOTO U1ba1
U0bfa: tmpv0:= READURAM( , 0x008c, 64) 

U0bfc: BTUJB_DIRECT_NOTTAKEN(tmpv0, 0x0000001d, U7706) !m1,m2 
U0bfd: tmpv0:= MOVEFROMCREG_DSZ64( , 0x261, 32) !m1 
U0bfe: SAVEUIP( , 0x00, U7706) SEQW GOTO U334d

U0c00: tmp0:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U0c01: LFNCEMARK-> AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0c02: tmp9:= unk_ce7(tmp0) 

U0c04: tmp13:= unk_52b(tmp9) 
U0c05: tmm1:= unk_5ba( , tmm1) 
U0c06: mm6:= unk_7aa(tmm5) 

U0c08: WRTAGW-> tmm5:= FMOV() !m2 
U0c09: tmp0:= AND_DSZ32(0x000000ff, tmp6) SEQW GOTO U7002
U0c0a: tmp2:= BT_DSZ16(tmp9, 0x0000000b) 

U0c0c: tmp3:= SELECTCC_DSZ32_CONDB(tmp2, tmp0) 
U0c0d: LFNCEMARK-> tmm6:= unk_743(mm3) !m2 
U0c0e: MOVEINSERTFLGS_DSZ32(0x0000000b) !m2 SEQW GOTO U392e

sgdt_xlat:
U0c10: tmp1:= RDSEGFLD(GDT, LIMIT) 
U0c11: tmp3:= RDSEGFLD(GDT, BASE) 
U0c12: tmp2:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 

U0c14: tmp0:= ZEROEXT_DSZ32(0x0000042e) 
U0c15: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0c16: TESTUSTATE( , VMX, !0x0040) !m0,m2 ? SEQW GOTO U6145

U0c18: STAD_DSZ16_ASZ32_SC1(tmp2, mode=0x18,  , tmp1) 
U0c19: STAD_DSZN_ASZ32_SC1(tmp2, 0x00000002, mode=0x18,  , tmp3) !m1 SEQW UEND0
U0c1a: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp6, U2b19) 

U0c1c: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U0c1d: tmp3:= AND_DSZ16(tmp2, 0x00000001) 
U0c1e: LFNCEWAIT-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1948) SEQW GOTO U1235

U0c20: SAVEUIP_REGOVR(0x01, U0c21, 0x0007) !m0 SEQW GOTO U5a1a
U0c21: LFNCEWAIT-> tmp2:= LDZX_DSZ16_ASZ32_SC1(tmp2, mode=0x18) 
U0c22: NOP 

U0c24: LFNCEWAIT-> tmp0:= unk_d61(tmp2) 
U0c25: NOP 
U0c26: NOP 

U0c28: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) !m1 
U0c29: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) SEQW GOTO U01b2
U0c2a: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1 

U0c2c: tmp1:= OR_DSZ32(0x28000000, tmp0) 
U0c2d: tmp0:= OR_DSZ32(0xa8000040, tmp0) 
U0c2e: SAVEUIP( , 0x00, U1820) SEQW GOTO U2971

U0c30: tmp3:= UPDATEUSTATE( , 0xfc) 
U0c31: LFNCEMARK-> tmp0:= READURAM( , 0x0074, 64) 
U0c32: tmp0:= NOTAND_DSZ16(0x00000003, tmp0) 

U0c34: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U2711) 
U0c35: tmp1:= READURAM( , 0x0076, 64) 
U0c36: tmp5:= TESTUSTATE(tmp0, SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U0c39

U0c38: UPDATEUSTATE( , !0x04) !m0 
U0c39: tmp2:= READURAM( , 0x0075, 64) 
U0c3a: TESTUSTATE( , SYS, UST_8086_MODE) !m1 ? SEQW GOTO U207d

U0c3c: tmp6:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U0c3d: tmp6:= NOTAND_DSZ32(0x00030200, tmp6) 
U0c3e: ROVR<- MOVE_DSZ32() SEQW SAVEUIP1 U0c40SEQW GOTO U1894

U0c40: tmp3:= ZEROEXT_DSZ32(0x00000005) 
U0c41: LFNCEMARK-> tmp4:= MOVE_DSZ64(IMM_MACRO_ALIAS_RIP) !m0,m1 
U0c42: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U2e3d

U0c44: tmp2:= ZEROEXT_DSZ32(0x00000001) 
U0c45: tmp6:= ZEROEXT_DSZ16(0x00000404) 
U0c46: LFNCEWAIT-> SAVEUIP( , 0x00, U0816) 

U0c48: tmp7:= MOVEFROMCREG_DSZ64( , 0x01c) 
U0c49: tmp7:= NOTAND_DSZ64(0x00004000, tmp7) 
U0c4a: MOVETOCREG_DSZ64( , 0x00000000, 0x086) SEQW GOTO U6538

U0c4c: tmp1:= READURAM( , 0x005c, 64) 
U0c4d: tmp1:= BTS_DSZ64(tmp1, 0x00000017) 
U0c4e: LFNCEMARK-> WRITEURAM(tmp1, 0x005c, 64) SEQW GOTO U60d2

U0c50: SAVEUIP( , 0x00, U05ea) 
U0c51: SAVEUIP( , 0x01, U1d2d) !m0 SEQW GOTO U2c24
U0c52: tmp0:= MOVEFROMCREG_DSZ64( , 0x2dc, 32) !m1 

U0c54: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U0c52) 
U0c55: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2db) !m0,m1 
U0c56: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x0018) !m2 

U0c58: tmp0:= unk_0bc(tmp0) 
U0c59: tmp1:= SHL_DSZ32(tmp0, 0x00000003) 
U0c5a: tmp2:= SUB_DSZ32(0x00000014, tmp0) 

U0c5c: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp2, U0584) 
U0c5d: tmp2:= ADD_DSZ32(tmp1, 0x00004504) 
U0c5e: UJMP( , tmp2) 

U0c60: SAVEUIP( , 0x00, U05ea) 
U0c61: SAVEUIP( , 0x01, U1d2d) !m0 
FUN_ucode_0000c62:
U0c62: LFNCEMARK-> tmp11:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U0c64: TESTUSTATE( , SYS, !UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW URET0
U0c65: tmp5:= READURAM( , 0x001a, 64) 
U0c66: tmp6:= READURAM( , 0x0019, 64) 

U0c68: tmp2:= ZEROEXT_DSZ32(0x00000068) SEQW URET1
U0c69: tmp1:= ZEROEXT_DSZ32() 
U0c6a: TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW GOTO U1f91

U0c6c: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4e82
U0c6d: NOP 
U0c6e: URET(0x01) !m0 

mov_r64_cr8_xlat:
U0c70: LFNCEWAIT-> tmp3:= MOVEFROMCREG_DSZ64( , 0x288, 32) !m1 
U0c71: TESTUSTATE( , SYS, UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW GOTO U5904
U0c72: r64src:= SHR_DSZ32(tmp3, 0x00000004) SEQW UEND0

U0c74: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp12, tmp9, tmp7) SEQW UEND0
U0c75: tmp14:= READURAM( , 0x0047, 64) 
U0c76: tmp3:= ZEROEXT_DSZ32() SEQW GOTO U4bf5

U0c78: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp12, tmp9, tmp7) SEQW UEND0
U0c79: tmm0:= unk_525(tmm0, xmmsrc) !m0 
U0c7a: xmm0:= unk_5a5(xmmdst, tmm0) !m0 SEQW GOTO U082a

U0c7c: LFNCEWAIT-> STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp12, tmp9, tmp7) SEQW UEND0
U0c7d: r64src:= AND_DSZ16(0xfffffffffffffffc, r64src) 
U0c7e: r64src:= OR_DSZ16(tmp3, r64src) SEQW GOTO U038c

wrmsr_xlat:
U0c80: MOVE_DSZ32() 
U0c81: LFNCEMARK-> tmp8:= MOVEINSERTFLGS_DSZ64(0x00000030, rcx) !m1 
U0c82: tmp5:= CONCAT_DSZ32(rdx, rax) 

U0c84: NOP 
U0c85: NOP 
U0c86: tmp1:= TESTUSTATE( , SYS, UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW SAVEUIP0 U0c88? SEQW GOTO U677d

U0c88: tmp2:= AND_DSZ32(0xc0000f80, rcx) 
U0c89: tmp2:= SUB_DSZ32(0x00000800, tmp2) 
U0c8a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U00fd) SEQW GOTO U00f9

U0c8c: tmp0:= ZEROEXT_DSZ32(0x60000000) 
U0c8d: MOVETOCREG_DSZ64(tmp0, 0x7f6) !m2 
U0c8e: tmp14:= ZEROEXT_DSZ16(0x00003126) SEQW GOTO U4f24

U0c90: tmp2:= ZEROEXT_DSZ16(r64src) 
U0c91: tmp3:= OR_DSZN(rsp) !m1 
U0c92: tmp13:= SAVEUIP(0x00, U0886) SEQW SAVEUIP1 U0c94SEQW GOTO U2bd8

U0c94: LFNCEMARK-> unk_e7b(tmp0, tmp2) !m1,m2 
U0c95: ZEROEXT_DSZ32(rsp) 
U0c96: NOP 

U0c98: LFNCEWAIT-> tmp0:= RDSEGFLD(SS_USERM, FLGS) 
U0c99: MOVETOCREG_DSZ64(tmp0, 0x73c) 
U0c9a: NOP 

U0c9c: SYNCMARK-> tmp0:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 
U0c9d: WRSEGFLD(tmp0, SS, SEL+FLGS+LIM) 
U0c9e: tmp0:= RDSEGFLD(SS_USERM, BASE) 

U0ca0: SYNCWAIT-> WRSEGFLD(tmp0, SS, BASE) SEQW URET0
U0ca1: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2d3d
U0ca2: tmp14:= SAVEUIP(0x01, U2e7c) !m0 

U0ca4: NOP 
U0ca5: NOP 
U0ca6: UJMP( , tmp11) 

rdtsc_xlat:
U0ca8: tmp3:= ZEROEXT_DSZ32(0x00000010) 
U0ca9: SAVEUIP( , 0x00, U030d) 
U0caa: ROVR<- TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW SAVEUIP1 U0cac? SEQW GOTO U0cae

U0cac: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0cad: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000002, U2711) !m0,m1 
FUN_ucode_0000cae:
U0cae: tmp0:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3041

U0cb0: tmp2:= ZEROEXT_DSZ32(0x0000000c) 
U0cb1: tmp0:= TESTUSTATE(tmp3, VMX, !0x0100) !m0,m2 ? SEQW GOTO U3f25
FUN_ucode_0000cb2:
U0cb2: tmp14:= READUIP_REGOVR(0x01) !m0 

U0cb4: tmp13:= READUIP_REGOVR(0x00) 
U0cb5: tmpv1:= TESTUSTATE( , VMX, 0x0080) !m2 ? SEQW GOTO U3041
U0cb6: tmpv0:= READURAM( , 0x0057, 64) 

U0cb8: SYNCMARK-> tmpv1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000060, tmpv0) SEQW GOTO U3041
U0cb9: mm2:= unk_7ea(tmm0) 
U0cba: tmp2:= SUB_DSZ32(0x00006000, tmp2) 

U0cbc: tmm0:= unk_7c2(mm2, tmm0) 
U0cbd: UJMPCC_DIRECT_NOTTAKEN_CONDP(tmp6, U062c) 
U0cbe: LFNCEMARK-> tmm6:= unk_5ff(tmm7) !m2 SEQW GOTO U062e

rdpmc_xlat:
U0cc0: tmp3:= ROL_DSZ32(rcx, 0x00000002) 
U0cc1: tmp1:= ADD_DSZ8(tmp3, 0x00002260) 
U0cc2: tmp7:= MOVEFROMCREG_DSZ64( , tmp1) !m1 

U0cc4: tmp1:= NOTAND_DSZ32(0x40000003, rcx) 
U0cc5: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U0cc6: TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW GOTO U0cca

U0cc8: tmp2:= AND_DSZ32(0x00000100, tmp2) 
U0cc9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U2711) 
U0cca: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U0cd0

U0ccc: tmp0:= ZEROEXT_DSZ32(0x0000000f) 
U0ccd: tmp2:= ZEROEXT_DSZ32(0x0000000b) 
U0cce: TESTUSTATE( , VMX, !0x0010) !m0,m2 ? SEQW GOTO U3f25

U0cd0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 
U0cd1: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x0000000d, U2711) !m1 
U0cd2: rax:= TESTUSTATE(tmp7, UCODE, 0x0200) ? SEQW GOTO U07cd

U0cd4: rdx:= SHR_DSZ64(tmp7, 0x00000020) SEQW UEND0
U0cd5: SIGEVENT( , 0x00000017) 
U0cd6: tmp13:= SAVEUIP(0x00, U0382) SEQW GOTO U01ba

vmwrite_r64_r64_xlat:
U0cd8: tmp14:= SAVEUIP(0x01, U0244) !m0 
U0cd9: tmp7:= OR_DSZN(r64src) !m1 
U0cda: tmp2:= RDVMCSPLA( , r64dst) 

U0cdc: tmp10:= AND_DSZ32(0x00000c00, tmp2) 
U0cdd: tmp10:= SHR_DSZ32(tmp10, 0x00000008) 
U0cde: tmp8:= ADD_DSZ32(0x00000c74, tmp10) 

U0ce0: SAVEUIP( , 0x00, U0686) 
U0ce1: tmp13:= ZEROEXT_DSZ32(tmp8) 
U0ce2: SYNCMARK-> UFLOWCTRL( , tmp13, URET0) 

U0ce4: tmp6:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U0ce5: tmp12:= READURAM( , 0x0056, 64) 
U0ce6: tmp1:= ADD_DSZ64(0x00000001, tmp12) 

U0ce8: tmp11:= SHR_DSZN(r64dst, 0x0000000f) !m1 
U0ce9: tmp9:= AND_DSZ32(0x000003fe, tmp2) 
U0cea: TESTUSTATE( , SYS, !UST_VMX_DIS | UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U0cf5

U0cec: TESTUSTATE( , UCODE, 0x1000) ? SEQW GOTO U0cf5
U0ced: tmp0:= MOVEINSERTFLGS_DSZ32(0x00000419) 
U0cee: NOP 

U0cf0: SYNCWAIT-> tmp4:= ZEROEXT_DSZ32(0x00000006) SEQW SAVEUIP0 U0cf1SEQW GOTO U6662
U0cf1: SAVEUIP( , 0x00, U0686) 
U0cf2: tmp13:= ZEROEXT_DSZ32(tmp8) 

U0cf4: UFLOWCTRL( , tmp13, URET0) 
U0cf5: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, U04ae) SEQW URET1
U0cf6: SAVEUIP_REGOVR( , 0x01, U0cf8, 0xc935) !m0 SEQW GOTO U0d76

U0cf8: SAVEUIP( , 0x01, U21fe) !m0 SEQW GOTO U208d
U0cf9: tmp4:= RDSEGFLD(UNK_SEG_09, SEL) 
U0cfa: LFNCEMARK-> WRSEGFLD(tmp4, UNK_SEG_09, UNK_FLD_0c) 

U0cfc: ROVR<-LFNCEWAIT-> NOP SEQW SAVEUIP1 U0cfdSEQW GOTO U0d04
U0cfd: NOP 
U0cfe: NOP 

U0d00: SAVEUIP_REGOVR(0x01, U0d01, 0x0008) !m0 SEQW GOTO U0d04
U0d01: ROVR<- rsp:= ADD_DSZN(tmp12, rsp) !m1 SEQW SAVEUIP1 U0d02
U0d02: SAVEUIP( , 0x01, U186d) !m0 

FUN_ucode_0000d04:
U0d04: tmp11:= RDSEGFLD(SEG_V0, SEL+FLGS+LIM) 
U0d05: tmp4:= SHR_DSZ64(tmp11, 0x00000010) 
U0d06: tmp11:= BTR_DSZ32(tmp11, 0x0000001b) 

U0d08: tmp1:= SHL_DSZ64(tmp4, 0x00000028) 
U0d09: tmp4:= AND_DSZ64(0x00000800, tmp4) 
U0d0a: tmp11:= BTS_DSZ32(tmp11, 0x00000011) 

U0d0c: tmp11:= BTR_DSZ32(tmp11, 0x00000010) 
U0d0d: tmp4:= SHL_DSZ32(tmp4, 0x00000005) 
U0d0e: tmp11:= OR_DSZ32(tmp4, tmp11) 

U0d10: tmp1:= unk_e6b(tmp1, tmp11) !m2 
U0d11: tmp11:= SELECTCC_DSZ32_CONDO(tmp1, tmp11) 
U0d12: WRSEGFLD(tmp11) !m0 SEQW URET1

U0d14: tmp0:= ZEROEXT_DSZ32(0x00010007) 
U0d15: tmp4:= ZEROEXT_DSZ32(0x00000011) 
U0d16: ROVR<- tmp1:= OR_DSZ64(r64dst) SEQW SAVEUIP1 U0d18SEQW GOTO U1d05

U0d18: tmp13:= ZEROEXT_DSZ32(0x0000000c) SEQW GOTO U2d6e
U0d19: PORTOUT_DSZ32_ASZ16_SC1(0x50c8,  , tmp1) !m2 
U0d1a: tmp4:= PORTIN_DSZ32_ASZ16_SC1(0x50d0) !m2 

U0d1c: LFNCEWAIT-> tmp6:= PORTIN_DSZ32_ASZ16_SC1(0x50cc) !m2 
U0d1d: tmp5:= SUB_DSZ32(0xffffffff, tmp4) 
U0d1e: tmp6:= MOVEMERGEFLGS_DSZ64(tmp6, tmp5) 

U0d20: tmp6:= CMOVCC_DSZ32_CONDZ(tmp6, tmp4) 
U0d21: PORTOUT_DSZ32_ASZ16_SC1(0x50d0,  , tmp6) !m2 
U0d22: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 

U0d24: tmp13:= SAVEUIP(0x00, U0d30) 
U0d25: tmp8:= PORTIN_DSZ32_ASZ16_SC1(0x50d0) !m2 
U0d26: tmp6:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp8, 0x0000001e) 

U0d28: LFNCEWAIT-> tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8) 
U0d29: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000008) 
U0d2a: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000003, U3b11) !m0,m1,m2 

U0d2c: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000c, U19e6) !m2 
U0d2d: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000008, U215d) !m1 
U0d2e: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000005, U228d) !m1 

U0d30: tmp8:= ADD_DSZ32(0x00000020, tmp8) 
U0d31: LFNCEMARK-> tmp6:= AND_DSZ32(0x0000c000, tmp6) 
U0d32: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U0d34) SEQW GOTO U0d26

U0d34: NOP SEQW GOTO U4a9c
U0d35: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp8, U0d49) 
U0d36: tmp15:= RDSEGFLD(CS, BASE) 

U0d38: WRSEGFLD(tmp15, UNK_SEG_09, BASE) 
U0d39: tmp15:= RDSEGFLD(CS, SEL+FLGS+LIM) 
U0d3a: LFNCEMARK-> WRSEGFLD(tmp15, UNK_SEG_09, FLGS) 

U0d3c: LFNCEWAIT-> tmp15:= RDSEGFLD(UNK_SEG_09, FLGS) 
U0d3d: MOVETOCREG_DSZ64(tmp15, 0x7f5) 
U0d3e: tmp15:= RDSEGFLD(UNK_SEG_09, LIMIT) 

U0d40: LFNCEMARK-> MOVETOCREG_DSZ64(tmp15, 0x410) 
U0d41: tmp15:= ADD_DSZ32(0x00000001, tmp15) 
U0d42: MOVETOCREG_DSZ64(tmp15, 0x700) 

U0d44: LFNCEWAIT-> tmp15:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U0d45: NOP 
U0d46: NOP 

U0d48: SYNCMARK-> MOVETOCREG_DSZ64(tmp15, 0x78e) 
U0d49: tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 
U0d4a: tmp10:= MOVEFROMCREG_DSZ64( , 0x067) 

U0d4c: tmp6:= SUB_DSZ64(tmp15, tmp10) 
U0d4d: tmp6:= MOVEMERGEFLGS_DSZ64(tmp6, tmp4) 
U0d4e: tmp10:= SUB_DSZ32(tmp15, tmp10) 

U0d50: tmp15:= CMOVCC_DSZ64_CONDB(tmp6, tmp10) 
U0d51: SYNCWAIT-> MOVETOCREG_DSZ64(tmp15, 0x71a) SEQW GOTO U2d66
FUN_ucode_0000d52:
U0d52: TESTUSTATE( , UCODE, 0x3000) ? SEQW URET1

U0d54: tmpv0:= READURAM( , 0x0012, 64) 
U0d55: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000007, U1ac5) !m0,m2 
U0d56: tmpv1:= ZEROEXT_DSZ32(0x00000307) SEQW SAVEUIP1 U0d58SEQW GOTO U6bfd

U0d58: SAVEUIP( , 0x01, U1ac5) !m0 SEQW GOTO U38d0
FUN_ucode_0000d59:
U0d59: tmp11:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(rax, 0x0000000c) 
U0d5a: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000000, U0856) 

U0d5c: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x50c0) !m2 
U0d5d: tmp9:= SUB_DSZ32(0xffffffff, tmp11) 
U0d5e: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U1cbe) 

U0d60: LFNCEWAIT-> tmp11:= SHL_DSZ64(tmp11, 0x00000008) 
U0d61: tmp9:= ZEROEXT_DSZ32(0x0000a18c) 
U0d62: tmp2:= AND_DSZ32(0x000001f0, tmp9) 

U0d64: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp2) 
U0d65: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000005, U3bb4) !m1,m2 
U0d66: tmp2:= SUB_DSZ32(0x00000004, tmp9) 

U0d68: tmp10:= ZEROEXT_DSZ32(0x0000000f) 
U0d69: tmp7:= SHL_DSZ32(tmp7, tmp10) 
U0d6a: tmp9:= SHL_DSZ32(0x00000010, tmp10) 

U0d6c: tmp9:= OR_DSZ32(tmp7, tmp9) 
U0d6d: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp2, tmp9) 
U0d6e: tmp10:= OR_DSZ32(0x00000001, tmp10) 

U0d70: tmp9:= ZEROEXT_DSZ32(0x00000044) 
U0d71: tmp9:= CONCAT_DSZ16(0x00000013, tmp9) 
U0d72: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp9) 

U0d74: tmp2:= AND_DSZ32(tmp10, tmp2) 
U0d75: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U0d72, tmp7) SEQW GOTO U0856
FUN_ucode_0000d76:
U0d76: TESTUSTATE( , UCODE, 0x3000) ? SEQW URET1

U0d78: tmpv0:= READURAM( , 0x0012, 64) 
U0d79: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000007, U0cf8) !m0 
U0d7a: tmpv1:= ZEROEXT_DSZ32(0x00000327) SEQW SAVEUIP1 U0d7cSEQW GOTO U6bfd

U0d7c: SAVEUIP( , 0x01, U0cf8) !m0 SEQW GOTO U38d0
U0d7d: SAVEUIP( , 0x00, U4396) 
U0d7e: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U0d80: tmp10:= READAFLAGS( , tmp10) !m2 
U0d81: tmp14:= SAVEUIP(0x01, U4f19) !m0 
FUN_ucode_0000d82:
U0d82: tmp2:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U0d85

U0d84: tmp2:= READURAM( , 0x0043, 64) 
U0d85: tmp9:= AND_DSZ32(0x00000200, tmp10) 
U0d86: tmp0:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U0d89

U0d88: tmp0:= READURAM( , 0x004c, 64) 
U0d89: tmp2:= OR_DSZ32(tmp0, tmp2) 
U0d8a: tmp2:= SHL_DSZ32(tmp2, 0x00000007) 

U0d8c: tmp9:= AND_DSZ32(tmp2, tmp9) 
U0d8d: tmp0:= ZEROEXT_DSZ32(0x00002007) 
U0d8e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U04b4) 

U0d90: TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U0d98
U0d91: tmp9:= MOVEFROMCREG_DSZ64( , 0x01d) 
U0d92: tmp9:= AND_DSZ32(0x00000002, tmp9) 

U0d94: tmp9:= SHL_DSZ32(tmp9, 0x00000008) 
U0d95: tmp9:= AND_DSZ32(tmp10, tmp9) 
U0d96: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U0d98) SEQW GOTO U626e

U0d98: SAVEUIP_REGOVR(0x01, U0d99, 0x0002) !m0 SEQW GOTO U2b15
U0d99: tmp2:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U0d9a: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U0784) SEQW URET0

U0d9c: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp1, U2711) 
U0d9d: tmp3:= SHL_DSZ32(tmp0, 0x00000003) 
U0d9e: tmp3:= ADD_DSZ32(tmp3, 0x000031c0) SEQW SAVEUIP0 U0da0SEQW GOTO U06be

U0da0: unk_fcf(tmp4) SEQW GOTO U2b12
U0da1: UPDATEUSTATE( , !0x04) !m0 
U0da2: CMPUJZ_DIRECT_NOTTAKEN(tmp3, U24d2, tmp5) !m1 

U0da4: tmp2:= AND_DSZ32(tmp5, tmp3) 
U0da5: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U2711) !m1 
U0da6: tmp1:= AND_DSZ64(0x0003c000, tmp5) 

U0da8: tmp1:= SHR_DSZ64(tmp1, 0x0000000e) 
U0da9: tmp1:= BT_DSZ64(0x00000249, tmp1) 
U0daa: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp1, U2711) 

U0dac: tmp1:= AND_DSZ64(0x0f000000, tmp5) 
U0dad: tmp1:= SHR_DSZ64(tmp1, 0x00000018) 
U0dae: tmp1:= BT_DSZ64(0x0000003f, tmp1) 

U0db0: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp1, U2711) 
U0db1: tmp1:= SHR_DSZ64(tmp5, 0x00000020) 
U0db2: tmp1:= AND_DSZ32(0x0000000f, tmp1) 

U0db4: tmp1:= BT_DSZ64(0x00000007, tmp1) 
U0db5: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp1, U2711) 
U0db6: tmp1:= SHR_DSZ64(tmp5, 0x00000024) 

U0db8: tmp1:= AND_DSZ32(0x0000000f, tmp1) 
U0db9: tmp1:= BT_DSZ64(0x00000007, tmp1) 
U0dba: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp1, U2711) 

U0dbc: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x0000000c, U2711) !m1 
U0dbd: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000000, U38b9) !m1,m2 
U0dbe: tmp14:= ZEROEXT_DSZ32(0x00002bd1) SEQW GOTO U5b26

U0dc0: NOP 
U0dc1: WRITEURAM(tmp0, 0x0000, 64) !m2 
U0dc2: tmp0:= READAFLAGS(tmp0) 

U0dc4: tmp0:= CONCAT_DSZ16(0x00000000, tmp0) SEQW GOTO U52cd
caseD_dc5:
U0dc5: tmp4:= CONCAT_DSZ32(rdx, rax) 
U0dc6: tmp4:= ZEROEXT_DSZ64N(tmp4) !m1 

U0dc8: tmp1:= READURAM( , 0x005c, 64) 
U0dc9: tmp1:= BT_DSZ32(tmp1, 0x00000010) 
U0dca: tmp1:= MOVEMERGEFLGS_DSZ32(tmp4, tmp1) 

U0dcc: tmp14:= CMOVCC_DSZ64_CONDB(tmp1, tmp14) 
U0dcd: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x0000000c) 
U0dce: tmp15:= READURAM( , 0x0053, 64) 

U0dd0: tmp14:= AND_DSZ32(0x00000001, tmp15) 
U0dd1: tmp5:= SUB_DSZ32(tmp14, tmp5) 
U0dd2: tmp15:= NOTAND_DSZ64(0x00000001, tmp15) 

U0dd4: WRITEURAM(tmp15, 0x0053, 32) !m2 
U0dd5: tmp5:= SHL_DSZ64(tmp5, 0x00000020) 
U0dd6: WRITEURAM(tmp5, 0x0106, 64) 

U0dd8: tmp0:= READURAM( , 0x000d, 64) 
U0dd9: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U0dda: tmp0:= unk_0bc(tmp0, tmp0) 

U0ddc: tmp0:= SHL_DSZ64(tmp0, 0x00000020) 
U0ddd: WRITEURAM(tmp0, 0x010d, 64) 
U0dde: SAVEUIP_REGOVR(0x01, U0de0, 0x0010) !m0 SEQW GOTO U5dea

U0de0: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U54c5
U0de1: tmp9:= ZEROEXT_DSZ32(0x0000aee0) 
U0de2: tmp5:= BTS_DSZ32(0x00000000, 0x00000000) 

U0de4: STADSTGBUF_DSZ64_ASZ16_SC1(tmp9,  , tmp5) SEQW GOTO U2c2a
FUN_ucode_0000de5:
U0de5: LFNCEWAIT-> tmpv1:= MOVEFROMCREG_DSZ64( , 0x004) 
U0de6: tmpv1:= NOTAND_DSZ32(0x00000200, tmpv1) 

U0de8: tmpv2:= AND_DSZ32(0x00000010, tmpv0) 
U0de9: tmpv2:= SHL_DSZ32(tmpv2, 0x00000005) 
U0dea: MOVETOCREG_OR_DSZ64(tmpv2, 0x004, tmpv1) 

U0dec: tmpv1:= TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U0df6
U0ded: tmpv1:= AND_DSZ32(0x00000700, tmp11) 
U0dee: tmpv1:= SUB_DSZ32(0x00000700, tmpv1) 

U0df0: tmpv1:= SETCC_CONDZ(tmpv1) 
U0df1: tmpv2:= READURAM( , 0x0043, 64) 
U0df2: tmpv2:= BT_DSZ64(tmpv2, 0x0000001b) 

U0df4: tmpv2:= SETCC_CONDB(tmpv2) 
U0df5: tmpv1:= OR_DSZ32(tmpv1, tmpv2) 
U0df6: tmpv2:= TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U0dfa

U0df8: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U0dfa
U0df9: tmpv2:= AND_DSZ32(0x00005000, tmp7) 
U0dfa: tmpv1:= OR_DSZ32(tmpv2, tmpv1) 

U0dfc: tmpv2:= AND_DSZ32(0x00000010, tmpv0) 
U0dfd: tmpv2:= SHL_DSZ32(tmpv2, 0x00000005) 
U0dfe: tmpv2:= SELECTCC_DSZ64_CONDZ(tmpv1, tmpv2) 

U0e00: LFNCEWAIT-> tmpv1:= READURAM( , 0x001f, 64) 
U0e01: tmpv1:= NOTAND_DSZ64(0x00000200, tmpv1) 
U0e02: tmpv1:= OR_DSZ64(tmpv2, tmpv1) 

U0e04: WRITEURAM(tmpv1, 0x001f, 64) SEQW URET1
U0e05: tmp6:= PINTMOVDTMM2I_DSZ64(tmm0) 
U0e06: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U3dfe

U0e08: tmp13:= SAVEUIP(0x00, U3dfe) 
U0e09: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U38b2
U0e0a: tmp8:= AND_DSZ64(0x00000fff, tmp6) 

U0e0c: tmp8:= ADD_DSZN(tmp11, tmp8) !m1 SEQW GOTO U4639
U0e0d: tmp0:= ZEROEXT_DSZ32(0x0000000e) 
U0e0e: tmp7:= ZEROEXT_DSZ32(0x00000001) 

U0e10: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp15, U3365) 
U0e11: WRITEURAM(tmp15, 0x001f, 64) !m2 
U0e12: tmp0:= SUB_DSZ8(r64src, tmp1) 

U0e14: tmp2:= SHR_DSZ64(r64src, 0x00000008) 
U0e15: rax:= ZEROEXT_DSZ32() 
U0e16: rdx:= ZEROEXT_DSZ32() 

U0e18: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, U2d71) 
U0e19: tmp1:= SHR_DSZ32(tmp1, 0x00000008) 
U0e1a: tmp15:= SUB_DSZ8(tmp2, tmp1) 

U0e1c: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp15, U2d71) 
U0e1d: tmp15:= NOTAND_DSZ64(0x000000ff, tmp2) 
U0e1e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2d71) 

U0e20: tmp15:= MOVEFROMCREG_DSZ64( , 0x205, 32) !m1 
U0e21: tmm1:= unk_747(tmm7) 
U0e22: tmp15:= MOVEFROMCREG_DSZ64( , 0x206, 32) !m1 

U0e24: tmm1:= unk_746(tmm7, tmm1) 
U0e25: SAVEUIP( , 0x00, U0e26) 
U0e26: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U0e28) SEQW GOTO U6740

U0e28: tmm0:= unk_747(mm2) SEQW SAVEUIP0 U0e29SEQW GOTO U7661
U0e29: xmm0:= unk_76f(tmm1) 
U0e2a: tmm1:= unk_477(tmm1) 

U0e2c: xmm2:= unk_76f(tmm1) 
U0e2d: MOVEINSERTFLGS_DSZ32() !m2 SEQW UEND0
U0e2e: tmp5:= MOVEFROMCREG_DSZ64( , tmp8) SEQW GOTO U4809

U0e30: tmp5:= MOVEFROMCREG_DSZ64( , tmp8) !m1 SEQW GOTO U4809
U0e31: SIGEVENT( , 0x00000087) 
U0e32: STAD_DSZ64_ASZ32_SC1(tmp7, mode=0x18,  , tmp4) 

U0e34: tmp0:= MOVEFROMCREG_DSZ64( , 0x101) 
U0e35: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000008, mode=0x18, tmp0) 
U0e36: tmp0:= MOVEFROMCREG_DSZ64( , 0x102) 

U0e38: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000010, mode=0x18, tmp0) 
U0e39: tmp0:= MOVEFROMCREG_DSZ64( , 0x0b1) 
U0e3a: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000018, mode=0x18, tmp0) 

U0e3c: tmp0:= READURAM( , 0x0052, 64) 
U0e3d: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000020, mode=0x18, tmp0) 
U0e3e: tmp0:= MOVEFROMCREG_DSZ64( , 0x080) 

U0e40: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000028, mode=0x18, tmp0) 
U0e41: tmp0:= MOVEFROMCREG_DSZ64( , 0x081) 
U0e42: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000030, mode=0x18, tmp0) 

U0e44: tmp0:= MOVEFROMCREG_DSZ64( , 0x082) 
U0e45: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000038, mode=0x18, tmp0) 
U0e46: tmp0:= MOVEFROMCREG_DSZ64( , 0x083) 

U0e48: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000040, mode=0x18, tmp0) 
U0e49: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000048, mode=0x18, 0x00000000) 
U0e4a: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000050, mode=0x18, 0x00000000) 

U0e4c: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000058, mode=0x18, 0x00000000) 
U0e4d: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000060, mode=0x18, 0x00000000) 
U0e4e: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000068, mode=0x18, 0x00000000) 

U0e50: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000070, mode=0x18, 0x00000000) 
U0e51: STAD_DSZ64_ASZ32_SC1(tmp7, 0x00000078, mode=0x18, 0x00000000) 
U0e52: UJMP( , U1439) 

U0e54: LFNCEWAIT-> PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , tmp1) !m2 
U0e55: SAVEUIP_REGOVR(0x01, U0e56, 0x0000) !m0 SEQW GOTO U2b15
U0e56: tmp0:= CONCAT_DSZ16(0x00008001) 

U0e58: tmp0:= PORTIN_DSZ32_ASZ16_SC1(tmp0) SEQW GOTO U3c60
U0e59: LFNCEWAIT-> tmp15:= MOVEFROMCREG_DSZ64( , 0x068) 
U0e5a: tmp7:= CONCAT_DSZ16(tmp7, 0x00000403) 

U0e5c: tmp5:= ZEROEXT_DSZ64(tmp15) SEQW SAVEUIP0 U0e5dSEQW GOTO U6ba1
U0e5d: tmp15:= ZEROEXT_DSZ64(tmp5) 
U0e5e: tmp0:= BTS_DSZ32(tmp0, 0x0000001f) 

U0e60: tmp1:= READURAM( , 0x000e, 64) 
U0e61: SYNCFULL-> tmp1:= SHR_DSZ64(tmp1, 0x00000030) 
U0e62: tmp1:= CONCAT_DSZ16(tmp1, tmp15) 

U0e64: tmp1:= CONCAT_DSZ32(tmp1, tmp0) 
U0e65: WRITEURAM(tmp1, 0x000e, 64) !m2 
U0e66: tmp0:= ZEROEXT_DSZ32(0x00000e66) 

U0e68: tmp0:= CONCAT_DSZ16(0x0000008a, tmp0) 
U0e69: WRITEURAM(tmp0, 0x0007, 64) !m2 
U0e6a: MOVETOCREG_OR_DSZ64( , 0x0000001f, 0x000) !m0,m2 

U0e6c: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x0b4) !m2 
U0e6d: tmp0:= READURAM( , 0x005c, 64) 
U0e6e: tmp0:= BT_DSZ32(tmp0, 0x00000008) 

U0e70: tmp15:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000002) 
U0e71: tmp0:= SUB_DSZ64(0x00000001) 
U0e72: tmp0:= NOTAND_DSZ64(tmp15, tmp0) 

U0e74: WRITEURAM(tmp0, 0x0070, 64) !m2 
U0e75: MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1,m2 
U0e76: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x008) !m2 

U0e78: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c2, 32) !m1 
U0e79: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000005, 0x2c2) !m1,m2 
U0e7a: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cf, 32) !m1,m2 

U0e7c: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp0, 0x00000002, 0x2cf) !m0,m1,m2 SEQW GOTO U5d55
U0e7d: tmp5:= OR_DSZ32(rsp) 
U0e7e: MOVETOCREG_DSZ64(0x00000017, 0x000) 

U0e80: rsp:= unk_8ff(rsp, SS, tmp9) !m1 
U0e81: rsp:= ZEROEXT_DSZ8N(rsp) !m1 
U0e82: tmp4:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 

U0e84: tmp8:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0 
U0e85: tmp1:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_13, mode=0x0a) !m0,m1 
U0e86: tmp1:= ZEROEXT_DSZ16(tmp1) 

U0e88: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_1b, mode=0x0a) !m0,m1 
U0e89: tmp0:= ZEROEXT_DSZ16(tmp0) 
U0e8a: tmp9:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_23, mode=0x0a) !m0,m1 

U0e8c: tmp9:= ZEROEXT_DSZ16(tmp9) 
U0e8d: tmp6:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_2b, mode=0x0a) !m0,m1 
U0e8e: tmp6:= ZEROEXT_DSZ16(tmp6) 

U0e90: unk_e7b( , tmp2) 
U0e91: unk_e7b( , tmp1) 
U0e92: unk_e7b( , tmp0) 

U0e94: unk_e7b( , tmp9) 
U0e95: unk_e7b( , tmp6) 
U0e96: tmp3:= ZEROEXT_DSZ16(tmp3) 

U0e98: rsp:= ZEROEXT_DSZ32N(tmp4) !m1 
U0e99: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x79e) !m0,m2 
U0e9a: LFNCEMARK-> unk_e7b( , tmp8) 

U0e9c: LFNCEWAIT-> tmp1:= RDSEGFLD(SS_USERM, FLGS) 
U0e9d: MOVETOCREG_DSZ64(tmp1, 0x73c) 
U0e9e: tmp1:= RDSEGFLD(UNK_SEG_09, FLGS) 

U0ea0: SYNCFULL-> MOVETOCREG_DSZ64(tmp1, 0x7f5) !m2 
U0ea1: SAVEUIP( , 0x01, U3dea) !m0 SEQW GOTO U1871
U0ea2: MOVETOCREG_DSZ64(tmp6, 0x000) !m2 

U0ea4: tmp14:= SAVEUIP(0x01, U3006) !m0 
U0ea5: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U184d
U0ea6: LFNCEWTMRK-> unk_e7b(tmp0, tmp2) !m1,m2 

U0ea8: LFNCEWAIT-> tmp1:= RDSEGFLD(SS_USERM, FLGS) SEQW GOTO U1850
U0ea9: tmp2:= READURAM( , 0x005c, 64) 
U0eaa: tmp2:= AND_DSZ32(0x00000100, tmp2) 

U0eac: tmp13:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U0ead: tmp9:= SELECTCC_DSZ64_CONDZ(tmp2, tmp13) 
U0eae: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000e, U0eb8) !m0 

U0eb0: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000080, mode=0x01, tmp12) 
U0eb1: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp9, 0x7f8) 
U0eb2: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002e8, mode=0x01, tmp12) 

U0eb4: LFNCEMARK-> MOVETOCREG_DSZ64(tmp9, 0x7f9, 32) !m1 
U0eb5: NOP 
U0eb6: NOP 

U0eb8: LFNCEWAIT-> tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000270, mode=0x01, tmp12) 
U0eb9: NOP 
U0eba: NOP 

U0ebc: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp13, 0x0000000e, U0ec4) !m0 
U0ebd: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000278, mode=0x01, tmp12) 
U0ebe: tmp10:= AND_DSZ32(0x00000100, tmp10) 

U0ec0: tmp9:= NOTAND_DSZ32(0x00000100, tmp9) 
U0ec1: tmp9:= OR_DSZ32(tmp10, tmp9) 
U0ec2: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b0, mode=0x01, tmp12) 

U0ec4: unk_13f(tmp9) !m2 
U0ec5: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp9, 0x7fe) 
U0ec6: tmp9:= SELECTCC_DSZ64_CONDZ(tmp2, tmp13) 

U0ec8: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000003e, U0ec9) !m0 SEQW GOTO U4618
U0ec9: WRITEURAM(tmp11, 0x006b, 64) !m2 
U0eca: tmp9:= CONCAT_DSZ8(tmp4, tmp5) 

U0ecc: tmp9:= CONCAT_DSZ16(tmp7, tmp9) 
U0ecd: tmp9:= CONCAT_DSZ32(tmp6, tmp9) 
U0ece: WRITEURAM(tmp9, 0x002c, 64) !m2 

U0ed0: tmp0:= MOVE_DSZ32(0x00005965) 
U0ed1: WRITEURAM(tmp3, 0x006c, 64) !m2 
U0ed2: tmp0:= CONCAT_DSZ16(0x000000db, tmp0) SEQW GOTO U242e

U0ed4: tmp5:= MOVEFROMCREG_DSZ64( , 0x48c) 
U0ed5: tmp5:= NOTAND_DSZ16(0x00000220, tmp5) 
U0ed6: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, 0x48c) 

U0ed8: LFNCEWAIT-> NOP SEQW GOTO U1948
U0ed9: tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 
U0eda: tmp14:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

U0edc: ROVR<- tmp0:= SUB_DSZN(tmp14, tmp0) !m1 SEQW SAVEUIP1 U0eddSEQW GOTO U2178
U0edd: unk_d68(0x00000000, tmp5, tmp1) 
U0ede: unk_d68(0x00000008, tmp5, tmp0) 

U0ee0: unk_d68(0x00000010, tmp5, rax) 
U0ee1: unk_d68(0x00000018, tmp5, rbx) 
U0ee2: unk_d68(0x00000020, tmp5, rcx) 

U0ee4: unk_d68(0x00000028, tmp5, rdx) 
U0ee5: unk_d68(0x00000030, tmp5, rsi) 
U0ee6: unk_d68(0x00000038, tmp5, rdi) 

U0ee8: unk_d68(0x00000040, tmp5, rbp) 
U0ee9: unk_d68(0x00000048, tmp5, rsp) 
U0eea: unk_d68(0x00000050, tmp5, r8) 

U0eec: unk_d68(0x00000058, tmp5, r9) 
U0eed: unk_d68(0x00000060, tmp5, r10) 
U0eee: unk_d68(0x00000068, tmp5, r11) 

U0ef0: unk_d68(0x00000070, tmp5, r12) 
U0ef1: unk_d68(0x00000078, tmp5, r13) 
U0ef2: unk_d68(0x00000080, tmp5, r14) 

U0ef4: unk_d68(0x00000088, tmp5, r15) 
U0ef5: tmp0:= ZEROEXT_DSZ32(0x00000001) 
U0ef6: unk_d68(0x00000090, tmp5, tmp0) 

U0ef8: SAVEUIP_REGOVR(0x01, U0ef9, 0x00f1) !m0 SEQW GOTO U0514
U0ef9: tmp0:= SUB_DSZN(tmp14, tmp1) !m1 
U0efa: unk_d68(0x000000b0, tmp5, tmp0) 

U0efc: tmp0:= MOVEFROMCREG_DSZ64( , 0x063) 
U0efd: unk_d68(0x00000098, tmp5, tmp0) 
U0efe: unk_d68(0x000000a0, tmp5, 0x00000000) 

U0f00: unk_d68(0x000000a8, tmp5, 0x00000000) 
U0f01: unk_d68(0x000000b8, tmp5, 0x00000000) 
U0f02: SAVEUIP_REGOVR(0x00, U0f04, 0x0001) SEQW GOTO U0cb2

U0f04: unk_d68(0x000000c0, tmp5, tmp0) 
U0f05: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U200a
U0f06: tmp0:= ADD_DSZ32(0x000000c8, tmp5) 

U0f08: unk_d28(tmp4, tmp9, tmp0) SEQW GOTO U200d
U0f09: tmp1:= SHR_DSZ32(tmp0, 0x00000008) 
U0f0a: LFNCEWAIT-> MOVETOCREG_AND_DSZ64(tmp1, 0x0000001f, 0x6a0) !m0,m2 

U0f0c: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a4) !m2 
U0f0d: NOP 
U0f0e: NOP 

U0f10: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 
U0f11: tmp1:= SHR_DSZ32(tmp0, 0x00000010) 
U0f12: tmp0:= SHR_DSZ32(tmp0, 0x00000004) 

U0f14: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U0f15: tmp0:= CONCAT_DSZ32(tmp1, tmp0) 
U0f16: WRITEURAM(tmp0, 0x0022, 64) !m2 

U0f18: tmp0:= READURAM( , 0x0008, 64) 
U0f19: tmp0:= SHR_DSZ32(tmp0, 0x00000010) 
U0f1a: tmp0:= unk_13f(tmp0) 

U0f1c: tmp1:= READURAM( , 0x0001, 64) 
U0f1d: tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp0) 
U0f1e: tmp0:= READURAM( , 0x0022, 64) !m2 

U0f20: tmp0:= ZEROEXT_DSZ32(tmp0) 
U0f21: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U06b5) 
U0f22: SYNCFULL-> UFLOWCTRL( , tmp0, MSLOOPCTR) 

U0f24: tmp0:= READURAM( , 0x0008, 64) 
U0f25: tmp7:= READURAM( , 0x0000, 64) 
U0f26: tmp0:= unk_13f(tmp0) 

U0f28: tmp0:= MOVEMERGEFLGS_DSZ64(tmp7, tmp0) 
U0f29: tmp7:= READURAM( , 0x0022, 64) !m2 
U0f2a: tmp7:= SHR_DSZ64(tmp7, 0x00000020) 

U0f2c: NOP 
U0f2d: NOP 
U0f2e: UJMP( , tmp7) 

U0f30: tmp9:= READURAM( , 0x000f, 64) 
U0f31: LFNCEWAIT-> tmp9:= CONCAT_DSZ32(tmp9, tmp8) 
U0f32: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000b780,  , tmp9) !m2 SEQW SAVEUIP1 U0f34SEQW GOTO U18d0

U0f34: tmp12:= ZEROEXT_DSZ32(0x00000001) SEQW GOTO U1a3d
U0f35: tmp5:= ZEROEXT_DSZ32(0x00030400) 
U0f36: SYNCFULL-> MOVETOCREG_DSZ64(tmp5, 0x6a1) !m2 

U0f38: tmp6:= ZEROEXT_DSZ32(tmp4) 
U0f39: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 
U0f3a: tmp4:= ADD_DSZ64(0x00000008, tmp4) 

U0f3c: MOVETOCREG_DSZ64(tmp5, 0x6a4) !m2 
U0f3d: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U0f41
U0f3e: STADSTGBUF_DSZ64_ASZ16_SC1(tmp3,  , tmp5) 

U0f40: tmp3:= ADD_DSZ32(0x00000020, tmp3) 
U0f41: MOVETOCREG_SHR_DSZ64(tmp5, 0x00000020, 0x6a5) !m2 
U0f42: SYNCWAIT-> tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U0f39

U0f44: tmp12:= SUB_DSZ32(0x00000001, tmp0) 
U0f45: SYNCFULL-> UFLOWCTRL( , tmp12, MSLOOPCTR) 
U0f46: tmp10:= ZEROEXT_DSZ32(0x00030200) 

U0f48: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x6a1) 
U0f49: tmp9:= SUB_DSZ16(0x00007c00, tmp1) 
U0f4a: tmp9:= SHR_DSZ32(tmp9, 0x00000002) 

U0f4c: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp9, 0x6a0) 
U0f4d: tmp4:= ZEROEXT_DSZ32(tmp6) 
U0f4e: tmp7:= ZEROEXT_DSZ32() 

U0f50: tmp1:= ZEROEXT_DSZ32() 
U0f51: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 
U0f52: tmp4:= ADD_DSZ64(0x00000008, tmp4) 

U0f54: tmp5:= SHR_DSZ64(tmp5, 0x00000030) 
U0f55: tmp5:= AND_DSZ32(0x000003ff, tmp5) 
U0f56: tmp5:= SHL_DSZ32(tmp5, tmp7) 

U0f58: tmp1:= OR_DSZ32(tmp5, tmp1) 
U0f59: tmp7:= ADD_DSZ32(0x0000000a, tmp7) 
U0f5a: tmp5:= SUB_DSZ32(0x0000001e, tmp7) 

U0f5c: tmp0:= MOVEMERGEFLGS_DSZ32(0x000006a4, tmp5) 
U0f5d: tmp0:= CMOVCC_DSZ32_CONDZ(tmp0, 0x00000400) 
U0f5e: MOVETOCREG_DSZ64(tmp1, tmp0) !m2 

U0f60: tmp7:= SELECTCC_DSZ32_CONDZ(tmp5, tmp7) 
U0f61: tmp1:= SELECTCC_DSZ32_CONDZ(tmp5, tmp1) 
U0f62: SYNCWAIT-> tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U0f51

U0f64: MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 SEQW GOTO U1ea6
U0f65: WRMSLOOPCTRFBR( , 0x0000000f) 
U0f66: tmp1:= ZEROEXT_DSZ32(0x40000000) 

U0f68: PORTOUT_DSZ32_ASZ16_SC1(tmp1,  , 0x00000000) 
U0f69: tmp1:= ADD_DSZ32(0x00000004, tmp1) 
U0f6a: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U0f68

U0f6c: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U0f74
U0f6d: WRMSLOOPCTRFBR( , 0x0000000f) 
U0f6e: tmp1:= ZEROEXT_DSZ32(0x400050a0) 

U0f70: PORTOUT_DSZ32_ASZ16_SC1(tmp1,  , 0x00000000) 
U0f71: tmp1:= ADD_DSZ32(0x00000004, tmp1) 
U0f72: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U0f70

U0f74: tmp11:= ZEROEXT_DSZ32(0x00000008) 
U0f75: WRITEURAM(tmp11, 0x0073, 64) !m2 
U0f76: tmp1:= READURAM( , 0x0020, 64) 

U0f78: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 
U0f79: tmp1:= ZEROEXT_DSZ8(tmp1) 
U0f7a: tmp1:= SUB_DSZ32(0x00000001, tmp1) 

U0f7c: PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , tmp1) !m2 
U0f7d: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x00c0) !m2 
U0f7e: tmp1:= BTS_DSZ32(tmp1, 0x00000003) 

U0f80: PORTOUT_DSZ8_ASZ16_SC1(0x00c0,  , tmp1) !m2 
U0f81: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x0008) !m2 
U0f82: tmp1:= READURAM( , 0x0035, 64) 

U0f84: tmp1:= BT_DSZ64(tmp1, 0x00000030) 
U0f85: tmp1:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00000010) 
U0f86: tmp2:= OR_DSZ32(tmp1, tmp2) 

U0f88: PORTOUT_DSZ32_ASZ16_SC1(0x0008,  , tmp2) !m2 
U0f89: tmp1:= READURAM( , 0x0077, 64) 
U0f8a: tmp1:= SHR_DSZ64(tmp1, 0x0000002b) 

U0f8c: tmp1:= SHL_DSZ32(tmp1, 0x0000001f) 
U0f8d: PORTOUT_DSZ32_ASZ16_SC1(0x003c,  , tmp1) !m2 
U0f8e: tmp0:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U0f90SEQW GOTO U21a1

U0f90: tmp1:= READURAM( , 0x0035, 64) 
U0f91: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000028, U2b5d) !m1 
U0f92: tmp11:= ZEROEXT_DSZ32(0x00000009) 

U0f94: WRITEURAM(tmp11, 0x0073, 32) !m2 SEQW GOTO U6e16
U0f95: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x06d) !m0,m2 
U0f96: tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x0000000c, 0x01c) !m2 

U0f98: tmp7:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00000004) 
U0f99: MOVETOCREG_DSZ64(tmp7, 0x070) !m2 
U0f9a: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000248, mode=0x01, tmp12) 

U0f9c: WRITEURAM(tmp2, 0x0046, 64) 
U0f9d: tmp2:= BT_DSZ32(tmp2, 0x0000001f) 
U0f9e: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x000) 

U0fa0: tmp2:= SELECTCC_DSZ64_CONDNB(tmp2, 0x00200000) 
U0fa1: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp10, 0x000, tmp2) !m2 
U0fa2: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000500, mode=0x01, tmp12) 

U0fa4: SYNCWTMRK-> UFLOWCTRL( , tmp2, USTATE) 
U0fa5: tmp2:= MOVEINSERTFLGS_DSZ32(tmp2, tmp2) 
U0fa6: tmp10:= READURAM( , 0x0057, 64) 

U0fa8: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d4, mode=0x01, tmp12) 
U0fa9: tmp0:= AND_DSZ32(0x00000007, tmp0) 
U0faa: tmp15:= READURAM( , 0x001f, 64) !m2 

U0fac: tmp15:= NOTAND_DSZ64(0x00000007, tmp15) 
U0fad: tmp15:= OR_DSZ64(tmp0, tmp15) 
U0fae: WRITEURAM(tmp15, 0x001f, 64) !m2 

U0fb0: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001cc, mode=0x01, tmp12) SEQW SAVEUIP1 U0fb1SEQW GOTO U026a
U0fb1: NOP 
U0fb2: NOP 

U0fb4: SYNCWAIT-> TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U0fb8
U0fb5: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002a8, mode=0x01, tmp12) 
U0fb6: WRITEURAM(tmp0, 0x003e, 64) 

U0fb8: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U0fbc
U0fb9: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000308, mode=0x01, tmp12) 
U0fba: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000308, tmp10, tmp0) 

U0fbc: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000250, mode=0x01, tmp12) 
U0fbd: tmp0:= SELECTCC_DSZ32_CONDNO(tmp2, tmp0) 
U0fbe: WRITEURAM(tmp0, 0x0009, 64) 

U0fc0: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000280, mode=0x01, tmp12) 
U0fc1: tmp1:= SELECTCC_DSZ64_CONDNP(tmp2, tmp1) 
U0fc2: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000023c, mode=0x01, tmp12) 

U0fc4: tmp0:= OR_DSZ32(0x00200000, tmp0) 
U0fc5: tmp15:= SELECTCC_DSZ32_CONDNS(tmp2, 0x00000800) 
U0fc6: tmp0:= OR_DSZ32(tmp15, tmp0) 

U0fc8: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x000) SEQW GOTO U4e84
U0fc9: tmp8:= MOVEFROMCREG_DSZ64( , 0x51b) 
U0fca: tmp8:= ZEROEXT_DSZ16(0x00000120, tmp8) 

U0fcc: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, mode=0x01) 
U0fcd: tmp8:= ZEROEXT_DSZ16(0x00000118, tmp8) 
U0fce: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, mode=0x01) 

U0fd0: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000a0) 
U0fd1: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000080) 
U0fd2: tmp7:= BTR_DSZ64(tmp9, 0x0000000b) 

U0fd4: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp7, U273a) 
U0fd5: tmp0:= ZEROEXT_DSZ32(0x0000000e) 
U0fd6: CMPUJNZ_DIRECT_NOTTAKEN(tmp7, U27b4, tmp1) !m1 

U0fd8: tmp0:= ZEROEXT_DSZ32(0x0000000f) 
U0fd9: SYNCFULL-> CMPUJNZ_DIRECT_NOTTAKEN(tmp8, U27b4, tmp2) !m1 
U0fda: tmp8:= NOTAND_DSZ64(0x00000007, tmp8) 

U0fdc: MOVETOCREG_DSZ64(tmp8, 0x574) 
U0fdd: MOVETOCREG_DSZ64(tmp9, 0x575) 
U0fde: tmp2:= AND_DSZ64(tmp9, tmp8) 

U0fe0: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000a0,  , tmp9) 
U0fe1: tmp8:= MOVEFROMCREG_DSZ64( , 0x51b) 
U0fe2: tmp8:= ZEROEXT_DSZ16(0x00000130, tmp8) 

U0fe4: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, mode=0x01) 
U0fe5: tmp8:= ZEROEXT_DSZ16(0x00000128, tmp8) 
U0fe6: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, mode=0x01) 

U0fe8: tmp0:= ZEROEXT_DSZ32(0x00000010) 
U0fe9: tmp1:= AND_DSZ64(tmp7, tmp8) 
U0fea: tmp1:= AND_DSZ64(tmp9, tmp1) 

U0fec: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, U27b4, tmp2) !m1 
U0fed: tmp1:= XOR_DSZ64(0xffffffffffffffff, tmp7) 
U0fee: tmp1:= OR_DSZ64(tmp1, tmp8) 

U0ff0: tmp1:= AND_DSZ64(tmp9, tmp1) 
U0ff1: SYNCFULL-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, U27b4, tmp2) !m1 
U0ff2: MOVETOCREG_DSZ64(tmp8, 0x562) 

U0ff4: MOVETOCREG_DSZ64(tmp7, 0x563) SEQW SAVEUIP1 U0ff5SEQW GOTO U0164
U0ff5: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000c0,  , tmp8) 
U0ff6: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000e0,  , tmp7) 

U0ff8: PORTOUT_DSZ64_ASZ16_SC1(0x0010,  , tmp8) !m2 
U0ff9: tmp0:= ZEROEXT_DSZ32(0x00000004) SEQW SAVEUIP0 U0ffaSEQW GOTO U60aa
U0ffa: tmp0:= MOVEFROMCREG_DSZ64( , 0x563) 

U0ffc: PORTOUT_DSZ64_ASZ16_SC1(0x0010,  , tmp0) !m2 
U0ffd: tmp0:= ZEROEXT_DSZ32(0x00000005) 
U0ffe: SAVEUIP( , 0x00, U192a) SEQW GOTO U60aa

U1000: tmp2:= SHR_DSZ32(tmp5, 0x00000009) 
U1001: tmp2:= AND_DSZ32(0x00001800, tmp2) 
U1002: tmp7:= SELECTCC_DSZ32_CONDNZ(tmp2, tmp7) 

U1004: tmp7:= OR_DSZ32(tmp2, tmp7) 
U1005: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U4a2c) 
U1006: BTUJB_DIRECT_NOTTAKEN(tmp7, 0x00000010, U1008) !m2 SEQW GOTO U4a2c

U1008: LFNCEWAIT-> mm3:= unk_72f(tmm0, tmm0) 
U1009: NOP 
U100a: NOP 

U100c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp3, 0x486) SEQW GOTO U194d
U100d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp10, U1012) 
U100e: CMPUJNZ_DIRECT_NOTTAKEN(tmp10, 0x00000001, U1011) !m2 

U1010: tmp5:= MOVEFROMCREG_DSZ64( , 0x2c1, 32) !m1 
U1011: MOVETOCREG_DSZ64(tmp5, 0x2c0, 32) !m1,m2 
U1012: tmp10:= READURAM( , 0x005c, 64) 

U1014: tmp10:= BTS_DSZ64(tmp10, 0x00000017) 
U1015: SYNCMARK-> WRITEURAM(tmp10, 0x005c, 64) !m2 SEQW GOTO U5da6
U1016: tmp9:= AND_DSZ64(0x00000003, tmp11) 

U1018: tmp8:= MOVEFROMCREG_DSZ64( , 0x7c6) 
U1019: tmp8:= NOTAND_DSZ64(0x00000003, tmp8) 
U101a: tmp8:= OR_DSZ64(tmp9, tmp8) 

U101c: MOVETOCREG_DSZ64(tmp8, 0x7c6) 
U101d: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, 0x00000002, U1021) !m0,m2 
U101e: LFNCEMARK-> tmp9:= READURAM( , 0x0011, 64) 

U1020: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp9) 
U1021: SYNCWTMRK-> SAVEUIP_REGOVR(0x01, U1022, 0x0a89) !m0 SEQW GOTO U5955
U1022: tmp8:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U1024: tmp9:= AND_DSZ32(0x00000008, tmp11) 
U1025: tmp9:= SHL_DSZ32(tmp9, 0x00000005) 
U1026: MOVETOCREG_OR_DSZ64(tmp8, 0x6c3, tmp9) 

U1028: tmp10:= READURAM( , 0x0043, 64) 
U1029: tmp10:= BT_DSZ64(tmp10, 0x00000021) 
U102a: tmp5:= MOVEMERGEFLGS_DSZ64(tmp5, tmp10) 

U102c: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000001, U1035) !m2 
U102d: BTUJNB_DIRECT_NOTTAKEN(tmp11, 0x00000003, U1035) !m0,m2 
U102e: tmp9:= READURAM( , 0x0043, 64) 

U1030: tmp6:= OR_DSZ32(0x00000020, tmp6) 
U1031: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000027, U1035) !m0,m2 
U1032: tmp6:= OR_DSZ32(0x00000001, tmp6) 

U1034: tmp6:= BTS_DSZ32(tmp6, 0x0000001f) 
U1035: tmp8:= READURAM( , 0x0077, 64) 
U1036: tmp8:= BT_DSZ64(tmp8, 0x0000002b) 

U1038: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp8, U1039) SEQW GOTO U1045
U1039: tmp8:= ZEROEXT_DSZ32(tmp0) 
U103a: tmp8:= AND_DSZ32(0x00000105, tmp8) 

U103c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U103d) SEQW GOTO U1045
U103d: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002e0) 
U103e: tmp8:= AND_DSZ16(0x00000002, tmp8) 

U1040: tmp8:= SHL_DSZ32(tmp8, 0x00000008) 
U1041: tmp9:= READURAM( , 0x001f, 64) 
U1042: tmp9:= OR_DSZ64(tmp9, tmp8) 

U1044: WRITEURAM(tmp9, 0x001f, 64) !m2 
U1045: tmp9:= READURAM( , 0x005c, 64) 
U1046: tmp10:= AND_DSZ32(0x00000020, tmp9) 

U1048: tmp9:= NOTAND_DSZ32(tmp12, tmp9) 
U1049: WRITEURAM(tmp9, 0x005c, 32) !m2 
U104a: tmp9:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp2, 0x00000234) 

U104c: tmp13:= ZEROEXT_DSZ32(0x00002e50) 
U104d: CMPUJZ_DIRECT_NOTTAKEN(tmp9, 0x00000001, U1396) !m2 
U104e: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U1058

U1050: tmp13:= ZEROEXT_DSZ32(0x00001b0c) 
U1051: tmp15:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b780) !m2 
U1052: WRITEURAM(tmp15, 0x0078, 64) !m2 

U1054: tmp9:= SHR_DSZ32(tmp15, 0x00000010) 
U1055: tmp9:= SUB_DSZ32(0x0000008b, tmp9) 
U1056: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U1396) 

U1058: tmp13:= ZEROEXT_DSZ32(0x00005c49) 
U1059: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x00000302) 
U105a: CMPUJZ_DIRECT_NOTTAKEN(tmp9, 0x00000001, U1396) !m2 

U105c: tmp13:= ZEROEXT_DSZ32(0x0000142a) 
U105d: LFNCEMARK-> tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x00000300) 
U105e: tmp9:= SUB_DSZ32(0x000000ff, tmp9) 

U1060: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U1061) SEQW GOTO U1396
U1061: tmp14:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001e8) 
U1062: tmp7:= BTS_DSZ32(tmp7, 0x00000010) 

U1064: rsi:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001f8) 
U1065: rcx:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001f0) 
U1066: rdi:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001e0) 

U1068: tmp0:= NOTAND_DSZ32(0x00000025, tmp0) SEQW GOTO U1399
U1069: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U106a: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U106c: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U106d) !m2 SEQW GOTO U106a
U106d: MOVETOCREG_DSZ64(tmpv0, 0x22b, 32) !m1 
U106e: MOVETOCREG_DSZ64(tmpv1, 0x22c, 32) !m1 

U1070: tmp15:= ZEROEXT_DSZ32(0x0000070f) 
U1071: tmp15:= CONCAT_DSZ16(tmp15, 0x00000007) SEQW GOTO U599e
U1072: LFNCEMARK-> tmp9:= READURAM( , 0x008b, 64) 

U1074: tmp9:= AND_DSZ32(0xfffffffffffff000, tmp9) 
U1075: tmp4:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U1076: tmp4:= NOTAND_DSZ32(0x000000f0, tmp4) 

U1078: tmp4:= BTS_DSZ32(tmp4, 0x00000005) 
U1079: tmp5:= BT_DSZ32(tmp0, 0x00000013) 
U107a: tmp15:= SELECTCC_DSZ32_CONDB(tmp5, 0x00000030) 

U107c: tmp4:= XOR_DSZ32(tmp15, tmp4) 
U107d: tmp13:= SELECTCC_DSZ32_CONDNB(tmp5, 0x00000200) 
U107e: tmp13:= OR_DSZ32(tmp13) 

U1080: tmp15:= SELECTCC_DSZ32_CONDNB(tmp5, 0x00000500) 
U1081: tmp7:= AND_DSZ32(0x00000801, tmp7) 
U1082: LFNCEWAIT-> MOVETOCREG_OR_DSZ64(tmp7, 0x7ff, tmp15) 

U1084: tmp3:= MOVEFROMCREG_DSZ64( , 0x6c5) 
U1085: tmp3:= NOTAND_DSZ32(0x00000028, tmp3) 
U1086: tmp15:= SELECTCC_DSZ32_CONDB(tmp5, 0x00000008) 

U1088: MOVETOCREG_OR_DSZ64(tmp3, 0x6c5, tmp15) 
U1089: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9, 0x0000001c) 
U108a: tmp7:= ADD_DSZ32(tmp9, tmp7) 

U108c: tmp7:= NOTAND_DSZ32(0x00000fe7, tmp7) 
U108d: unk_dff(tmp8) 
U108e: SYNCFULL-> tmp1:= ZEROEXT_DSZ32(0x80000033) SEQW SAVEUIP1 U1090SEQW GOTO U6efe

U1090: LFNCEWAIT-> tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp9, 0x00000010) 
U1091: tmp1:= NOTAND_DSZ16(0x00000007, tmp1) 
U1092: tmp1:= CMOVCC_DSZ32_CONDNZ(tmp1, 0x00000008) 

U1094: WRMSLOOPCTRFBR( , 0x00000005) 
U1095: tmp4:= ADD_DSZ16(0x00000008, tmp1) 
U1096: tmp4:= CMOVCC_DSZ32_CONDNZ(tmp4, 0x00000008) 

U1098: tmp4:= CONCAT_DSZ16(0x0000c093, tmp4) 
U1099: tmp4:= CONCAT_DSZ32(0xffffffffffffffff, tmp4) 
U109a: MOVETOCREG_BTS_DSZ64( , 0x0000000e, 0x73c) !m0 

U109c: WRSEGFLD(tmp4) !m0 
U109d: WRSEGFLD(0x00000000) !m0 
U109e: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U109c

U10a0: WRSEGFLD(tmp4, SS, SEL+FLGS+LIM) 
U10a1: WRSEGFLD(0x00000000, SS, BASE) 
U10a2: LFNCEMARK-> WRSEGFLD(0x00000000, IDT, LIMIT) 

U10a4: WRSEGFLD(0x00000000, LDT, SEL) 
U10a5: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9, 0x0000000c) 
U10a6: tmp4:= ADD_DSZ32(tmp9, tmp4) 

U10a8: WRSEGFLD(tmp4, GDT, BASE) 
U10a9: tmp4:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp9, 0x00000008) 
U10aa: LFNCEWAIT-> WRSEGFLD(tmp4, GDT, LIMIT) 

U10ac: tmp15:= SHL_DSZ32(tmp13, 0x00000004) 
U10ad: tmp15:= SUB_DSZ16(tmp15, 0x0000c09b) 
U10ae: SYNCWTMRK-> MOVETOCREG_DSZ64(tmp15, 0x7f5) 

U10b0: tmp15:= CONCAT_DSZ16(tmp15, tmp1) 
U10b1: tmp15:= CONCAT_DSZ32(0xffffffffffffffff, tmp15) 
U10b2: WRSEGFLD(0x00000000, UNK_SEG_09, BASE) 

U10b4: WRSEGFLD(tmp15, UNK_SEG_09, FLGS) 
U10b5: WRSEGFLD(0x00000000, CS, BASE) 
U10b6: WRSEGFLD(tmp15, CS, FLGS) 

U10b8: tmp15:= SUB_DSZ32(0x00000001) 
U10b9: MOVETOCREG_DSZ64( , 0x00000000, 0x78e) 
U10ba: MOVETOCREG_DSZ64( , 0x00000000, 0x700) 

U10bc: MOVETOCREG_DSZ64(tmp15, 0x410) 
U10bd: rsp:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9, 0x00000018) 
U10be: rsp:= ADD_DSZ32(tmp9, rsp) 

U10c0: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9, 0x00000014) 
U10c1: tmp5:= ADD_DSZ32(tmp9, tmp5) 
U10c2: tmp9:= READURAM( , 0x0056, 64) 

U10c4: SYNCFULL-> tmp6:= READURAM( , 0x004a, 64) SEQW GOTO U355e
U10c5: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U10c6: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U10c8: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U10c9) !m2 SEQW GOTO U10c6
U10c9: MOVETOCREG_DSZ64(tmpv0, 0x22b, 32) !m1 
U10ca: MOVETOCREG_DSZ64(tmpv1, 0x22c, 32) !m1 

U10cc: tmp15:= ZEROEXT_DSZ32(0x000007ff) 
U10cd: tmp15:= CONCAT_DSZ16(tmp15, 0x0000000d) SEQW GOTO U599e
lots_of_crbus_writes:
U10ce: WRMSLOOPCTRFBR( , 0x0000005f) 

U10d0: unk_a44() !m0 
U10d1: unk_a54() !m0 
U10d2: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U10d0

U10d4: SYNCFULL-> MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x003) !m2 
U10d5: WRMSLOOPCTRFBR( , 0x0000000f) 
U10d6: NOP 

U10d8: rdi:= ZEROEXT_DSZ64() !m2 
U10d9: tmp7:= ZEROEXT_DSZ64() 
U10da: mm7:= unk_5b9() 

U10dc: xmm7:= unk_5b9() 
U10dd: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U10d8
U10de: WRMSLOOPCTRFBR( , 0x00000003) 

U10e0: rdi:= unk_17c() 
U10e1: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U10e0
U10e2: WRMSLOOPCTRFBR( , 0x0000003f) 

U10e4: SYNCFULL-> MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x003) !m0,m2 
U10e5: tmp0:= ZEROEXT_DSZ32() 
U10e6: xmm0:= unk_5b9() 

U10e8: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U10e5
U10e9: NOP 
U10ea: rax:= ZEROEXT_DSZ32(0x0fffffff) 

U10ec: tmp11:= CONCAT_DSZ32(0x0000000a) 
U10ed: WRITEURAM(tmp11, 0x0073, 64) 
U10ee: MOVETOCREG_BTS_DSZ64( , 0x0000000f, 0x06c) !m0 

U10f0: tmp0:= MOVEFROMCREG_DSZ64( , 0x21d, 32) !m1 
U10f1: tmp8:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
U10f2: tmp8:= AND_DSZ32(tmp8, 0x00000080) 

U10f4: tmp4:= AND_DSZ32(0x0000000c, tmp0) 
U10f5: tmp4:= SUB_DSZ32(0x00000004, tmp4) 
U10f6: tmp0:= OR_DSZ32(tmp8, tmp0) 

U10f8: tmp1:= SELECTCC_DSZ32_CONDZ(tmp4, 0x00000f00) 
U10f9: tmp1:= OR_DSZ32(tmp1, 0x00830c00) 
U10fa: tmp2:= SELECTCC_DSZ32_CONDZ(tmp4, 0x0000017f) 

U10fc: tmp2:= OR_DSZ32(tmp2, 0x0003003f) SEQW SAVEUIP0 U10fdSEQW GOTO U27c1
U10fd: tmp1:= AND_DSZ32(0x00000080, tmp0) 
U10fe: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x00000010) 

U1100: tmp0:= NOTAND_DSZ32(0x00000010, tmp0) 
U1101: tmp0:= XOR_DSZ32(0x00000008, tmp0) 
U1102: MOVETOCREG_OR_DSZ64(tmp1, 0x6c5, tmp0) 

U1104: SYNCFULL-> tmm1:= FMOV() 
U1105: NOP 
U1106: NOP 

U1108: SYNCFULL-> tmm2:= FMOV() 
U1109: unk_53c(tmm1, tmm2) 
U110a: unk_57a(tmm1, tmm2) 

U110c: tmm1:= FMOV() 
U110d: tmm2:= FMOV() 
U110e: unk_53c(tmm1, tmm2) 

U1110: unk_57a(tmm1, tmm2) 
U1111: unk_53c(tmm1, tmm2) 
U1112: unk_57a(tmm1, tmm2) 

U1114: unk_53c(tmm1, tmm2) 
U1115: unk_57a(tmm1, tmm2) 
U1116: tmp0:= MOVEFROMCREG_DSZ64( , 0x3a5, 32) !m1 

U1118: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U1119) !m2 SEQW GOTO U1c26
U1119: tmp1:= SUB_DSZ64(0x00000001) 
U111a: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 

U111c: MOVETOCREG_OR_DSZ64(tmp0, 0x00000003, 0x285) !m0,m1 
U111d: MOVETOCREG_DSZ64(tmp1, 0x20c, 32) !m1 
U111e: MOVETOCREG_DSZ64(tmp1, 0x2e9, 32) !m1 

U1120: MOVETOCREG_DSZ64(tmp1, 0x38b, 32) !m1 
U1121: MOVETOCREG_DSZ64(tmp1, 0x392, 32) !m1 
U1122: MOVETOCREG_DSZ64(tmp1, 0x411) 

U1124: MOVETOCREG_DSZ64(tmp1, 0x064) 
U1125: MOVETOCREG_DSZ64(tmp1, 0x106) 
U1126: MOVETOCREG_DSZ64(tmp1, 0x488) 

U1128: MOVETOCREG_DSZ64(tmp1, 0x680) 
U1129: MOVETOCREG_DSZ64(tmp1, 0x74d) 
U112a: MOVETOCREG_DSZ64(tmp1, 0x63c) 

U112c: tmp0:= MOVEFROMCREG_DSZ64( , 0x2bc, 32) !m1 
U112d: MOVETOCREG_OR_DSZ64(tmp0, 0x00000001, 0x2bc) !m1 SEQW GOTO U1c3e
U112e: tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U1130: tmp0:= READAFLAGS( , tmp0) !m2 
U1131: STADSTGBUF_DSZ64_ASZ16_SC1(0x000001a0,  , tmp0) 
U1132: tmp12:= ZEROEXT_DSZ32(0x00001135) 

U1134: TESTUSTATE( , SYS, !0xc000) !m0,m1 ? SEQW GOTO U7602
U1135: tmp8:= READURAM( , 0x005c, 64) 
U1136: BTUJB_DIRECT_NOTTAKEN(tmp8, 0x00000010, U4995) 

U1138: SAVEUIP_REGOVR(0x01, U1139, 0x0000) !m0 SEQW GOTO U32cd
U1139: tmp0:= MOVEFROMCREG_DSZ64( , 0x383, 32) !m1 
U113a: tmp1:= MOVEFROMCREG_DSZ64( , 0x384, 32) !m1 

U113c: tmp0:= CONCAT_DSZ8(tmp1, tmp0) 
U113d: tmp1:= MOVEFROMCREG_DSZ64( , 0x10c) 
U113e: tmp6:= MOVEFROMCREG_DSZ64( , 0x692) 

U1140: tmp1:= ZEROEXT_DSZ8(tmp1, tmp6) 
U1141: tmp1:= CONCAT_DSZ16(tmp1, tmp0) 
U1142: tmp5:= MOVEFROMCREG_DSZ64( , 0x7f6) 

U1144: tmp8:= CONCAT_DSZ32(tmp5, tmp1) 
U1145: STADSTGBUF_DSZ64_ASZ16_SC1(0x000001c0,  , tmp8) 
U1146: tmp5:= NOTAND_DSZ32(0x60000000, tmp5) 

U1148: MOVETOCREG_DSZ64(tmp5, 0x7f6) 
U1149: SAVEUIP_REGOVR(0x01, U114a, 0x0008) !m0 SEQW GOTO U2b15
U114a: tmp8:= MOVEFROMCREG_DSZ64( , 0x3f3, 32) !m1 

U114c: tmp1:= MOVEFROMCREG_DSZ64( , 0x3f2, 32) !m1 
U114d: tmp1:= CONCAT_DSZ8(tmp8, tmp1) 
U114e: tmp8:= MOVEFROMCREG_DSZ64( , 0x3f1, 32) !m1 

U1150: tmp1:= SHL_DSZ32(tmp1, 0x00000008) 
U1151: tmp1:= ZEROEXT_DSZ8(tmp8, tmp1) 
U1152: LFNCEMARK-> tmp8:= MOVEFROMCREG_DSZ64( , 0x3f0, 32) !m1 

U1154: tmp1:= SHL_DSZ32(tmp1, 0x00000008) 
U1155: tmp1:= ZEROEXT_DSZ8(tmp8, tmp1) 
U1156: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000200,  , tmp1) 

U1158: tmp15:= ZEROEXT_DSZ32(0x000000ff) 
U1159: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp15, 0x3f3, 32) !m1 
U115a: MOVETOCREG_DSZ64(tmp15, 0x3f2, 32) !m1 

U115c: MOVETOCREG_DSZ64(tmp15, 0x3f1, 32) !m1 
U115d: MOVETOCREG_DSZ64(tmp15, 0x3f0, 32) !m1 
U115e: tmp0:= ZEROEXT_DSZ32(0x0000008e) 

U1160: tmp1:= SUB_DSZ32(0x00000200) 
U1161: SAVEUIP( , 0x00, U027a) SEQW SAVEUIP1 U1162SEQW GOTO U17f6
U1162: tmp0:= MOVEFROMCREG_DSZ64( , 0x104) 

U1164: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000015, 0x104) 
U1165: STADSTGBUF_DSZ64_ASZ16_SC1(0x000001e0,  , tmp0) 
U1166: tmp0:= MOVEFROMCREG_DSZ64( , 0x39e, 32) !m1 

U1168: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp0, 0x00000008, 0x39e) !m1 
U1169: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000200) 
U116a: tmp0:= CONCAT_DSZ32(tmp0, tmp1) 

U116c: LFNCEWAIT-> STADSTGBUF_DSZ64_ASZ16_SC1(0x00000200,  , tmp0) 
U116d: tmp0:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U116e: MOVETOCREG_BTS_DSZ64(tmp0, 0x29d) !m1 

U1170: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x10c) !m0 
U1171: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x383) !m0,m1 
U1172: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x384) !m0,m1 

U1174: tmp6:= MOVEFROMCREG_DSZ64( , 0x692) 
U1175: MOVETOCREG_BTS_DSZ64(tmp6, 0x00000008, 0x692) 
U1176: MOVETOCREG_BTS_DSZ64( , 0x00000013, 0x2dd) !m0,m1 

U1178: tmp1:= MOVEFROMCREG_DSZ64( , 0x574) 
U1179: tmp0:= NOTAND_DSZ64(0x00000007, tmp1) 
U117a: MOVETOCREG_DSZ64(tmp0, 0x574) 

U117c: tmp2:= MOVEFROMCREG_DSZ64( , 0x562) 
U117d: tmp0:= NOTAND_DSZ64(0x00000007, tmp2) 
U117e: MOVETOCREG_DSZ64(tmp0, 0x562) 

U1180: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000080,  , tmp1) 
U1181: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 
U1182: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000a0,  , tmp1) 

U1184: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000c0,  , tmp2) 
U1185: tmp2:= MOVEFROMCREG_DSZ64( , 0x563) 
U1186: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000e0,  , tmp2) 

U1188: tmp8:= MOVEFROMCREG_DSZ64( , 0x51b) 
U1189: MOVETOCREG_OR_DSZ64(tmp8, 0x00000001, 0x51b) 
U118a: LFNCEMARK-> MOVETOCREG_DSZ64(0x00000015, 0x000) SEQW SAVEUIP1 U118cSEQW GOTO U043c

U118c: LFNCEWAIT-> tmp0:= BTS_DSZ32(0x00000000, 0x00000012) 
U118d: NOP 
U118e: NOP 

U1190: tmp0:= SUB_DSZ32(0x00000040, tmp0) 
U1191: LFNCEWTMRK-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, tmp0, 0x00000000) 
U1192: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U1194) SEQW GOTO U1190

U1194: LBSYNC(0x00000001) 
U1195: LFNCEMARK-> LBSYNC(0x00000001) 
U1196: NOP 

U1198: LFNCEWAIT-> tmp7:= MOVETOCREG_OR_DSZ64(tmp7, 0x00000011, 0x38f) !m1 
U1199: MOVETOCREG_BTS_DSZ64( , 0x00000012, 0x2dd) !m0,m1 
U119a: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 

U119c: tmp13:= READURAM( , 0x008e, 64) 
U119d: tmp8:= ADD_DSZN(0x00001000, tmp8) !m1 
U119e: tmp5:= ZEROEXT_DSZ32(tmp13) 

U11a0: tmp6:= PORTIN_DSZ64_ASZ16_SC1(0x4648) !m2 
U11a1: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000010, U38fd) !m1,m2 
U11a2: tmp14:= SAVEUIP(0x01, U2321) !m0 

U11a4: tmp6:= TESTUSTATE( , SYS, !UST_SMM | 0xc000) !m0,m1 ? SEQW GOTO U2321
U11a5: tmp14:= SAVEUIP(0x01, U11a8) !m0 
U11a6: NOP 

U11a8: LFNCEWAIT-> tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, mode=0x01, tmp6) SEQW GOTO U2322
U11a9: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U11aa: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U11ac: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U11ad) !m2 SEQW GOTO U11aa
U11ad: MOVETOCREG_DSZ64(tmpv0, 0x22b, 32) !m1 
U11ae: MOVETOCREG_DSZ64(tmpv1, 0x22c, 32) !m1 

U11b0: tmp15:= ZEROEXT_DSZ32(0x000007ff) 
U11b1: tmp15:= CONCAT_DSZ16(tmp15, 0x0000000f) SEQW GOTO U599e
U11b2: tmp12:= MOVEFROMCREG_DSZ64( , 0x000) 

U11b4: tmp12:= MOVETOCREG_BTS_DSZ64(tmp12, 0x00000013, 0x000) !m0,m2 
U11b5: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp12, U11bd) 
U11b6: tmp12:= MOVEFROMCREG_DSZ64( , 0x067) 

U11b8: tmp13:= MOVEFROMCREG_DSZ64( , 0x065) 
U11b9: tmp13:= AND_DSZ32(0x0000000f, tmp13) 
U11ba: tmp12:= SUB_DSZN(tmp13, tmp12) !m1 

U11bc: WRITEURAM(tmp12, 0x006e, 64) !m2 
U11bd: tmp12:= RDSEGFLD(UNK_SEG_04, FLGS) 
U11be: tmp7:= NOTAND_DSZ32(tmp12, 0x00000008) 

U11c0: tmp13:= SELECTCC_DSZ32_CONDNZ(tmp7, 0x00004000) 
U11c1: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp13, 0x73c) 
U11c2: tmp7:= SHL_DSZ64(tmp7, 0x00000021) 

U11c4: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x752) 
U11c5: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U11c6: tmp12:= BT_DSZ32(tmp12, 0x00000003) 

U11c8: tmp7:= MOVEMERGEFLGS_DSZ32(0x00000020, tmp12) 
U11c9: tmp7:= CMOVCC_DSZ32_CONDB(tmp7, 0x0000000e) 
U11ca: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp12, U11cd) 

U11cc: tmp8:= LDPPHYS_DSZ32_ASZ32_SC1(0x0000001c, mode=0x04) 
U11cd: tmp3:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, mode=0x04) !m1 
U11ce: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_ALIAS_DATASIZE, mode=0x04) !m0,m1 

U11d0: tmp5:= OR_DSZN(tmp4, tmp5) !m1 
U11d1: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_13, mode=0x04) !m0,m1 
U11d2: rax:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 

U11d4: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_1b, mode=0x04) !m0,m1 
U11d5: rcx:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 
U11d6: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_23, mode=0x04) !m0,m1 

U11d8: rdx:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 
U11d9: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_2b, mode=0x04) !m0,m1 
U11da: rbx:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 

U11dc: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_33, mode=0x04) !m0,m1 
U11dd: rsp:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 
U11de: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_3b, mode=0x04) !m0,m1 

U11e0: rbp:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 
U11e1: tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_43, mode=0x04) !m0,m1 
U11e2: rsi:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 

U11e4: LFNCEMARK-> tmp4:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_4b, mode=0x04) !m0,m1 
U11e5: rdi:= ZEROEXT_DSZ8N(tmp4, 0xffffffffffffffff) !m1 
U11e6: rax:= MOVE_DSZ32(rax) 

U11e8: rbx:= ZEROEXT_DSZ32(rbx) 
U11e9: rcx:= ZEROEXT_DSZ32(rcx) 
U11ea: rdx:= ZEROEXT_DSZ32(rdx) 

U11ec: rsp:= ZEROEXT_DSZ32(rsp) 
U11ed: rbp:= ZEROEXT_DSZ32(rbp) 
U11ee: rsi:= ZEROEXT_DSZ32(rsi) 

U11f0: rdi:= ZEROEXT_DSZ32(rdi) 
U11f1: unk_13f(tmp5) !m2 
U11f2: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp5, 0x00000011, 0x7fe) 

U11f4: tmp4:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U11f5: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp4, 0x00000003, 0x7f6) !m0,m2 
U11f6: NOP 

U11f8: LFNCEWAIT-> tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_53, mode=0x04) !m0,m1 
U11f9: NOP 
U11fa: NOP 

U11fc: LFNCEMARK-> unk_e7b() 
U11fd: NOP 
U11fe: NOP 

U1200: LFNCEWAIT-> WRSEGFLD(tmp2, ES, UNK_FLD_0c) 
U1201: tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_5b, mode=0x04) !m0,m1 
U1202: NOP 

U1204: LFNCEMARK-> MOVETOCREG_AND_DSZ64(tmp2, 0x00000003, 0x79e) !m0,m2 
U1205: NOP 
U1206: NOP 

U1208: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x78e) 
U1209: NOP 
U120a: NOP 

U120c: LFNCEMARK-> unk_e6b() 
U120d: NOP 
U120e: NOP 

U1210: LFNCEWAIT-> WRSEGFLD(tmp2, UNK_SEG_09, UNK_FLD_0c) 
U1211: tmp4:= MOVEFROMCREG_DSZ64( , 0x78e) 
U1212: tmp4:= ADD_DSZN(tmp3, tmp4) !m1 

U1214: MOVETOCREG_DSZ64(tmp4, 0x067) 
U1215: tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_63, mode=0x04) !m0,m1 
U1216: LFNCEMARK-> unk_e7b() 

U1218: LFNCEWAIT-> WRSEGFLD(tmp2, SS_USERM, UNK_FLD_0c) 
U1219: NOP 
U121a: NOP 

U121c: LFNCEMARK-> tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_6b, mode=0x04) !m0,m1 
U121d: NOP 
U121e: NOP 

U1220: LFNCEMARK-> unk_e7b() 
U1221: NOP 
U1222: NOP 

U1224: LFNCEWAIT-> WRSEGFLD(tmp2, DS, UNK_FLD_0c) 
U1225: BTUJNB_DIRECT_NOTTAKEN(tmp12, 0x00000003, U12ee) !m0,m2 
U1226: tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_73, mode=0x04) !m0,m1 

U1228: LFNCEMARK-> unk_e7b() 
U1229: NOP 
U122a: NOP 

U122c: LFNCEWAIT-> WRSEGFLD(tmp2, FS, UNK_FLD_0c) 
U122d: tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_7b, mode=0x04) !m0,m1 
U122e: tmp7:= ADD_DSZ32(IMM_MACRO_13, tmp7) !m0 

U1230: LFNCEMARK-> unk_e7b() 
U1231: NOP 
U1232: NOP 

U1234: LFNCEWAIT-> WRSEGFLD(tmp2, GS, UNK_FLD_0c) SEQW GOTO U12f9
U1235: tmp8:= unk_6a0() 
U1236: tmm5:= unk_704(tmm1) 

U1238: tmm6:= unk_620(tmm5) 
U1239: tmp2:= PINTMOVDTMM2I_DSZ32(tmm6) 
U123a: tmp4:= XOR_DSZ16(0x0000411e, tmp2) 

U123c: SAVEUIP( , 0x00, U1948) 
U123d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, tmp2) SEQW GOTO U087e
U123e: tmp5:= READURAM( , 0x005c, 64) 

U1240: tmp5:= BTS_DSZ64(tmp5, 0x0000001e) 
U1241: WRITEURAM(tmp5, 0x005c, 64) !m2 
U1242: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp5, U1244) SEQW GOTO U124d

U1244: SAVEUIP_REGOVR(0x01, U1245, 0x0005) !m0 SEQW GOTO U02ba
U1245: tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x8404) !m2 
U1246: NOP 

U1248: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x0000001e, U1249) !m0,m2 SEQW GOTO U124c
U1249: tmp5:= BTS_DSZ32(tmp5, 0x0000001e) 
U124a: PORTOUT_DSZ32_ASZ16_SC1(0x8404,  , tmp5) !m2 

U124c: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
U124d: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1252
U124e: tmp5:= READURAM( , 0x0011, 64) 

U1250: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp5) 
U1251: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000014, U46a6) 
U1252: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U46a6) 

U1254: tmp7:= READURAM( , 0x000a, 64) 
U1255: tmp5:= READURAM( , 0x0009, 64) 
U1256: tmp3:= READURAM( , 0x000b, 64) 

U1258: tmp9:= MOVEFROMCREG_DSZ64( , 0x20f, 32) !m1 
U1259: WRITEURAM(tmp9, 0x0073, 64) !m2 
U125a: tmp13:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U125c: tmp9:= MOVEFROMCREG_DSZ64( , 0x51c) 
U125d: tmp9:= BTR_DSZ64(tmp9, 0x0000003f) 
U125e: tmp13:= MOVEMERGEFLGS_DSZ64(tmp13, tmp9) 

U1260: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1264
U1261: tmp10:= READURAM( , 0x005c, 64) 
U1262: BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000004, U1275) !m2 

U1264: tmp9:= MOVEFROMCREG_DSZ64( , 0x008) 
U1265: tmp10:= SHL_DSZ64(tmp9, 0x0000000c) 
U1266: tmp9:= MOVEFROMCREG_DSZ64( , 0x070) 

U1268: tmp9:= NOTAND_DSZ32(0xfffffffffffff000, tmp9) 
U1269: tmp10:= OR_DSZ64(tmp9, tmp10) 
U126a: tmp10:= SHL_DSZ64(tmp10, 0x00000017) 

U126c: tmp9:= MOVEFROMCREG_DSZ64( , 0x281, 32) !m1 
U126d: MOVETOCREG_OR_DSZ64(tmp9, 0x00000001, 0x281) !m1,m2 
U126e: tmp9:= AND_DSZ32(0x00000001, tmp9) 

U1270: tmp9:= NOTAND_DSZ32(0x1ff00000, tmp9) 
U1271: tmp9:= ROL_DSZ32(tmp9, 0x00000003) 
U1272: tmp10:= OR_DSZ64(tmp9, tmp10) 

U1274: WRITEURAM(tmp10, 0x0018, 64) !m2 
U1275: tmp10:= MOVEFROMCREG_DSZ64( , 0x79e) 
U1276: tmp10:= SHL_DSZ32(tmp10, 0x0000000e) 

U1278: tmp9:= MOVEFROMCREG_DSZ64( , 0x51e) 
U1279: MOVETOCREG_BTR_DSZ64(tmp9, 0x51e) !m2 
U127a: tmp9:= AND_DSZ32(0x00000001, tmp9) 

U127c: tmp9:= SHL_DSZ32(tmp9, 0x00000006) 
U127d: tmp10:= OR_DSZ32(tmp9, tmp10) 
U127e: tmp9:= MOVEFROMCREG_DSZ64( , 0x01d) 

U1280: MOVETOCREG_DSZ64( , 0x00000000, 0x01d) !m2 
U1281: tmp9:= AND_DSZ32(0x0000000f, tmp9) 
U1282: tmp9:= SHL_DSZ16(tmp9, 0x00000008) 

U1284: tmp10:= OR_DSZ16(tmp10, tmp9) 
U1285: tmp9:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1286: tmp9:= SHR_DSZ32(tmp9, 0x00000005) 

U1288: tmp9:= AND_DSZ32(0x00001000, tmp9) 
U1289: tmp10:= OR_DSZ32(tmp9, tmp10) 
U128a: tmp9:= READURAM( , 0x001f, 64) 

U128c: WRITEURAM( , 0x00000000, 0x001f, 64) !m2 
U128d: tmp11:= AND_DSZ32(0x00000200, tmp9) 
U128e: tmp11:= SHR_DSZ32(tmp11, 0x00000002) 

U1290: tmp0:= MOVEFROMCREG_DSZ64( , 0x004) 
U1291: tmp0:= AND_DSZ32(0x00000200, tmp0) 
U1292: tmp0:= SHR_DSZ32(tmp0, 0x00000002) 

U1294: tmp0:= OR_DSZ32(tmp11, tmp0) 
U1295: tmp10:= OR_DSZ64(tmp0, tmp10) 
U1296: tmp11:= AND_DSZ32(0x00000100, tmp9) 

U1298: tmp11:= SHR_DSZ32(tmp11, 0x00000003) 
U1299: tmp9:= ZEROEXT_DSZ16(tmp11, tmp9) 
U129a: tmp10:= OR_DSZ64(tmp9, tmp10) 

U129c: tmp9:= AND_DSZ32(0x00002000, tmp13) 
U129d: tmp10:= OR_DSZ64(tmp9, tmp10) 
U129e: tmp9:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U12a1

U12a0: tmp9:= ZEROEXT_DSZ32(0x00000004) 
U12a1: tmp10:= OR_DSZ64(tmp9, tmp10) 
U12a2: tmp9:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U12a4: tmp9:= MOVETOCREG_BTR_DSZ64(tmp9, 0x00000008, 0x6c3) !m2 
U12a5: tmp9:= SELECTCC_DSZ64_CONDNB(tmp9, 0x00000008) 
U12a6: tmp10:= OR_DSZ64(tmp9, tmp10) 

U12a8: tmp11:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U12a9: tmp10:= OR_DSZ64(tmp9, tmp10) 
U12aa: tmp9:= AND_DSZ32(tmp11, 0x00010000) 

U12ac: tmp9:= SHL_DSZ64(tmp9, 0x00000020) 
U12ad: tmp10:= OR_DSZ64(tmp9, tmp10) 
U12ae: tmp11:= ZEROEXT_DSZ16(tmp11) 

U12b0: tmp11:= SHL_DSZ32(tmp11, 0x00000010) 
U12b1: ROVR<- tmp10:= OR_DSZ64(tmp11, tmp10) SEQW SAVEUIP1 U12b2
U12b2: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U1686

U12b4: tmp6:= CONCAT_DSZ32(0x7ffffc00) 
U12b5: LFNCEMARK-> tmp9:= READURAM( , 0x0014, 64) 
U12b6: tmp11:= ZEROEXT_DSZ64(tmp9) 

U12b8: tmp11:= NOTAND_DSZ64(tmp6, tmp11) 
U12b9: tmp9:= AND_DSZ64(tmp6, tmp9) 
U12ba: WRITEURAM(tmp9, 0x0089, 64) !m2 

U12bc: tmp6:= SHR_DSZ64(tmp11, 0x00000015) 
U12bd: tmp11:= NOTAND_DSZ64(0x001fffff, tmp11) 
U12be: tmp6:= AND_DSZ32(0x001fffff, tmp6) 

U12c0: tmp11:= OR_DSZ64(tmp6, tmp11) 
U12c1: WRITEURAM(tmp11, 0x0014, 64) !m2 
U12c2: ROVR<- NOP SEQW SAVEUIP1 U12c4SEQW GOTO U5b34

U12c4: WRITEURAM(tmp10, 0x0059, 64) !m2 SEQW GOTO U168c
FUN_ucode_00012c5:
U12c5: tmp13:= READUIP_REGOVR(0x00) 
U12c6: tmp14:= READUIP_REGOVR(0x01) !m0 

U12c8: tmp10:= MOVEFROMCREG_DSZ64( , 0x480) 
U12c9: tmp10:= AND_DSZ32(0x0000ffff, tmp10) 
U12ca: tmp7:= ZEROEXT_DSZ32(0x0000ffff) 

U12cc: STAD_DSZ32_ASZ32_SC1(tmp11, 0x00000018, mode=0x18,  , tmp10) 
U12cd: STAD_DSZ32_ASZ32_SC1(tmp11, 0x0000001c, mode=0x18,  , tmp7) SEQW URET0
U12ce: TESTUSTATE( , SYS, UST_USER_MODE | UST_8086_MODE) !m1 ? SEQW GOTO U2769

U12d0: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U12da
U12d1: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x0000002f, U12da) !m0,m2 
U12d2: tmp1:= READURAM( , 0x0057, 64) 

U12d4: SYNCMARK-> tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000003d0, tmp1) 
U12d5: tmp15:= NOTAND_DSZ32(0x0000003f, rax) 
U12d6: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x0000003f) 

U12d8: tmp15:= OR_DSZ32(tmp15, rax) 
U12d9: SYNCWAIT-> BTUJB_DIRECT_NOTTAKEN(tmp1, U4e81, tmp15) 
U12da: tmp1:= READURAM( , 0x001f, 64) !m2 

U12dc: tmp15:= SUB_DSZ32(0x00000002, rax) 
U12dd: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00000400) 
U12de: tmp1:= OR_DSZ64(tmp15, tmp1) 

U12e0: WRITEURAM(tmp1, 0x001f, 64) !m2 
U12e1: TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW GOTO U1f90
U12e2: tmp0:= ZEROEXT_DSZ32(0x00000023) 

U12e4: tmp7:= ZEROEXT_DSZ32(0x00000003) SEQW GOTO U3365
U12e5: tmm5:= unk_7c2(tmm0) 
U12e6: tmm1:= unk_6aa(tmm3, tmm5) 

U12e8: tmm3:= unk_62f(tmm3) !m1 
U12e9: tmm1:= unk_62f(tmm1) !m1 
U12ea: tmm5:= unk_637(tmm1, tmm3) !m1 

U12ec: tmp4:= PINTMOVDTMM2I_DSZ32(tmm5) 
U12ed: tmp10:= OR_DSZ32(tmp4, tmp10) SEQW GOTO U2281
U12ee: LFNCEMARK-> unk_e7b() 

U12f0: LFNCEWAIT-> WRSEGFLD(0x00000000, FS, SEL) 
U12f1: NOP 
U12f2: NOP 

U12f4: LFNCEMARK-> unk_e7b() 
U12f5: NOP 
U12f6: NOP 

U12f8: LFNCEWAIT-> WRSEGFLD(0x00000000, GS, SEL) 
U12f9: tmp2:= LDPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_73, mode=0x04) !m0,m1 
U12fa: NOP 

U12fc: LFNCEMARK-> unk_e7b() 
U12fd: NOP 
U12fe: NOP 

U1300: LFNCEWAIT-> WRSEGFLD(tmp2, LDT, UNK_FLD_0c) 
U1301: tmp9:= ZEROEXT_DSZ32() 
U1302: BTUJNB_DIRECT_NOTTAKEN(tmp12, 0x00000003, U1308) !m0,m2 

U1304: tmp9:= LDPPHYS_DSZ16_ASZ32_SC1(0x00000064, mode=0x0f) 
U1305: tmp9:= AND_DSZ32(0x00000001, tmp9) 
U1306: tmp9:= SHL_DSZ32(tmp9, 0x0000000f) 

U1308: tmp6:= MOVEFROMCREG_DSZ64( , 0x000) 
U1309: tmp6:= BTR_DSZ32(tmp6, 0x0000000a) 
U130a: tmp6:= NOTAND_DSZ32(0x0000003f, tmp6) 

U130c: tmp6:= OR_DSZ32(0x00000007, tmp6) 
U130d: LFNCEMARK-> tmp6:= MOVETOCREG_BTS_DSZ64(tmp6, 0x00000009, 0x000) !m2 
U130e: SAVEUIP( , 0x00, U02f2) 

U1310: LFNCEWAIT-> SAVEUIP_REGOVR(0x01, U1311, 0x0004) !m0 SEQW GOTO U02ea
U1311: BTUJNB_DIRECT_NOTTAKEN(tmp12, 0x00000003, U1329) !m0,m2 
U1312: tmp4:= MOVEFROMCREG_DSZ64( , 0x7f6) 

U1314: BTUJB_DIRECT_NOTTAKEN(tmp4, 0x0000001f, U1315) !m0,m2 SEQW GOTO U1329
U1315: tmp4:= MOVEFROMCREG_DSZ64( , 0x529) 
U1316: NOP 

U1318: CMPUJNZ_DIRECT_NOTTAKEN(tmp8, U1319, tmp4) !m2 SEQW GOTO U1329
U1319: LFNCEMARK-> MOVETOCREG_DSZ64(tmp8, 0x529) 
U131a: NOP 

U131c: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x540) 
U131d: MOVETOCREG_DSZ64( , 0x00000000, 0x541) 
U131e: MOVETOCREG_DSZ64( , 0x00000000, 0x542) 

U1320: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x543) SEQW SAVEUIP1 U1321SEQW GOTO U043c
U1321: NOP 
U1322: NOP 

U1324: tmp10:= unk_04b(tmp3, 0x00000080) SEQW SAVEUIP1 U1325SEQW GOTO U17d8
U1325: SYNCFULL-> tmp12:= RDSEGFLD(UNK_SEG_04, FLGS) 
U1326: unk_dff() 

U1328: LFNCEMARK-> tmp12:= BT_DSZ32(tmp12, 0x00000003) 
U1329: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x072) !m0,m2 
U132a: tmp2:= RDSEGFLD(LDT, SEL) 

U132c: LFNCEWAIT-> tmp0:= unk_d61(tmp2) 
U132d: tmp11:= unk_e7b(tmp0, tmp2) !m1 
U132e: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 

U1330: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x06d) !m0,m2 
U1331: ROVR<- unk_13f(tmp5) !m2 SEQW SAVEUIP1 U1332
U1332: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, 0x7fe) !m2 

U1334: LFNCEWAIT-> tmp2:= RDSEGFLD(UNK_SEG_09, SEL) 
U1335: tmp4:= AND_DSZ32(0x00000003, tmp2) 
U1336: tmp8:= BT_DSZ32(tmp5, 0x00000011) 

U1338: tmp8:= SELECTCC_DSZ32_CONDNB(tmp8, 0x00000003) 
U1339: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp8, 0x79e, tmp4) SEQW SAVEUIP1 U133aSEQW GOTO U00c1
U133a: NOP 

U133c: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) 
U133d: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
U133e: NOP 

U1340: LFNCEWAIT-> SAVEUIP_REGOVR(0x01, U1341, 0x0004) !m0 SEQW GOTO U02f2
U1341: MOVETOCREG_BTS_DSZ64( , 0x00000009, 0x06d) !m2 
U1342: NOP 

U1344: SAVEUIP_REGOVR(0x01, U1345, 0x000b) !m0 SEQW GOTO U00c1
U1345: tmp11:= unk_e7b(tmp0, tmp2) 
U1346: NOP 

U1348: ROVR<- UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) SEQW SAVEUIP1 U1349SEQW GOTO U00c1
U1349: tmp11:= unk_e7b(tmp0, tmp2) 
U134a: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 

U134c: BTUJNB_DIRECT_NOTTAKEN(tmp12, 0x00000003, U1354) !m0,m2 
U134d: SAVEUIP_REGOVR(0x01, U134e, 0x000c) !m0 SEQW GOTO U00c1
U134e: tmp11:= unk_e7b(tmp0, tmp2) 

U1350: ROVR<- UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) SEQW SAVEUIP1 U1351SEQW GOTO U00c1
U1351: tmp11:= unk_e7b(tmp0, tmp2) 
U1352: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 

U1354: SAVEUIP_REGOVR(0x01, U1355, 0x0009) !m0 SEQW GOTO U00c1
U1355: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) 
U1356: NOP 

U1358: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
U1359: NOP 
U135a: NOP 

U135c: LFNCEWAIT-> SAVEUIP_REGOVR(0x00, U135d, 0x0004) SEQW GOTO U02ea
U135d: NOP 
U135e: NOP 

U1360: MOVE_DSZ32() SEQW SAVEUIP1 U1361SEQW GOTO U2d30
U1361: tmp4:= ADD_DSZN(tmp3, tmp0) !m1 
U1362: MOVETOCREG_DSZ64(tmp4, 0x067) 

U1364: MOVETOCREG_BTS_DSZ64( , 0x0000000b, 0x072) !m0 
U1365: unk_fe3(tmp3) 
U1366: MOVETOCREG_BTS_DSZ64( , 0x0000000b, 0x06d) !m0,m2 

U1368: tmp0:= RDSEGFLD(SS_USERM, FLGS) 
U1369: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x73c) !m2 
U136a: tmp0:= READURAM( , 0x006f, 64) 

U136c: tmp4:= AND_DSZ32(0x00000003, tmp0) 
U136d: CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U136e) !m2 SEQW GOTO U1372
U136e: tmp0:= SHR_DSZ32(tmp0, 0x00000010) 

U1370: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp0) !m0,m1 
U1371: rsp:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U1372: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f8) 

U1374: tmp0:= NOTAND_DSZ32(0x00000155, tmp0) 
U1375: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x7f8) !m2 
U1376: NOP 

U1378: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x01c) 
U1379: tmp0:= OR_DSZ32(tmp9, tmp0) 
U137a: MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000e, 0x01c) !m0 

U137c: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
U137d: tmp0:= ZEROEXT_DSZ32(0x00000021) 
U137e: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x00b) 

U1380: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U138a
U1381: NOP 
U1382: NOP 

U1384: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U1388
U1385: tmp1:= READURAM( , 0x003f, 64) 
U1386: AETTRACE( , tmp1, 0x0c) 

U1388: SAVEUIP( , 0x00, U5fa8) 
U1389: SAVEUIP_REGOVR(0x01, U138a, 0x0410) !m0 SEQW GOTO U5c9e
U138a: tmp0:= MOVEFROMCREG_DSZ64( , 0x000) 

U138c: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000014, U3dea) !m1,m2 SEQW GOTO U3dec
U138d: tmp1:= AND_DSZ32(0x007f0000, tmp5) 
U138e: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x482c) !m2 

U1390: tmp2:= AND_DSZ32(0x007f0000, tmp2) 
U1391: tmp2:= SUB_DSZ32(tmp1, tmp2) 
U1392: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00000100) 

U1394: tmp5:= OR_DSZ32(tmp2, tmp5) 
U1395: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x00000001) SEQW GOTO U3056
U1396: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000238) 

U1398: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp9, 0x01c) 
U1399: tmp9:= READURAM( , 0x0035, 64) 
U139a: tmp9:= BT_DSZ64(tmp9, 0x0000003c) 

U139c: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp9, U139d) SEQW GOTO U13aa
U139d: tmp11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000002d0) 
U139e: tmp11:= SHL_DSZ64(tmp11, 0x00000010) 

U13a0: tmp11:= SAR_DSZ64(tmp11, 0x00000010) 
U13a1: tmp11:= NOTAND_DSZ64(0x00000ffc, tmp11) 
U13a2: LFNCEMARK-> tmp12:= AND_DSZ64(0xfffffffffffff000, tmp11) 

U13a4: tmp11:= SHL_DSZ32(tmp11, 0x0000001e) 
U13a5: tmp15:= MOVEFROMCREG_DSZ64( , 0x701) 
U13a6: tmp15:= NOTAND_DSZ64(0xc0000000, tmp15) 

U13a8: LFNCEWAIT-> WRSEGFLD(tmp12) 
U13a9: MOVETOCREG_OR_DSZ64(tmp15, 0x701, tmp11) 
U13aa: tmp11:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp2, 0x0000023c) 

U13ac: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002e8) 
U13ad: tmm7:= unk_747(mm1) 
U13ae: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000308) 

U13b0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U0232) 
U13b1: tmp8:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003ac) 
U13b2: LFNCEMARK-> tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003c8) 

U13b4: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000310) 
U13b5: SYNCWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U13b6) SEQW SAVEUIP0 U13b6SEQW GOTO U5cda
U13b6: NOP 

U13b8: SYNCMARK-> UFLOWCTRL( , tmp13, URET0) 
U13b9: NOP 
U13ba: NOP 

U13bc: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp1, 0x7f1) 
U13bd: MOVETOCREG_DSZ64(tmp4, 0x79e) 
U13be: tmp1:= MOVEFROMCREG_DSZ64( , 0x51c) 

U13c0: tmp4:= SELECTCC_DSZ32_CONDNB(tmp5, 0x80000000) 
U13c1: tmp4:= SHL_DSZ64(tmp4, 0x00000020) 
U13c2: MOVETOCREG_OR_DSZ64(tmp1, 0x51c, tmp4) 

U13c4: mm4:= unk_76f(tmm7) 
U13c5: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U13cc
U13c6: BTUJB_DIRECT_NOTTAKEN(tmp4, 0x0000000e, U13cc) !m0,m2 

U13c8: tmp1:= MOVEFROMCREG_DSZ64( , 0x6c5) 
U13c9: MOVETOCREG_OR_DSZ64(tmp1, 0x00000008, 0x6c5) !m2 
U13ca: MOVETOCREG_DSZ64(tmp4, 0x7f9, 32) !m1,m2 

U13cc: MOVETOCREG_DSZ64(tmp7, 0x7fe) 
U13cd: MOVETOCREG_DSZ64(tmp9, 0x7f8) 
U13ce: unk_13f(tmp7) !m2 

U13d0: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp3, 0x7c5) 
U13d1: tmp9:= READURAM( , 0x0041, 64) 
U13d2: tmp9:= SHR_DSZ64(tmp9, 0x00000017) 

U13d4: tmp9:= AND_DSZ32(0x00000800, tmp9) 
U13d5: tmp5:= NOTAND_DSZ32(tmp9, tmp5) 
U13d6: MOVETOCREG_DSZ64(tmp5, 0x7ff) 

U13d8: tmp9:= SUB_DSZ32(0x00000001) 
U13d9: MOVETOCREG_DSZ64(tmp9, 0x00b) 
U13da: MOVETOCREG_DSZ64(tmp6, 0x7f6) 

U13dc: SYNCWAIT-> SAVEUIP_REGOVR(0x01, U13dd, 0x0009) !m0 SEQW GOTO U2075
U13dd: NOP 
U13de: NOP 

U13e0: SYNCFULL-> WRSEGFLD(tmp8, UNK_SEG_09, UNK_FLD_0c) 
U13e1: tmp9:= RDSEGFLD(UNK_SEG_09, BASE) 
U13e2: NOP 

U13e4: LFNCEMARK-> WRSEGFLD(tmp9, CS, BASE) 
U13e5: NOP 
U13e6: NOP 

U13e8: LFNCEWAIT-> tmp9:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U13e9: WRSEGFLD(tmp9, CS, SEL+FLGS+LIM) 
U13ea: tmp9:= RDSEGFLD(SS_USERM, BASE) 

U13ec: WRSEGFLD(tmp9, SS, BASE) 
U13ed: tmp9:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 
U13ee: WRSEGFLD(tmp9, SS, SEL+FLGS+LIM) 

U13f0: tmp9:= RDSEGFLD(UNK_SEG_09, LIMIT) 
U13f1: MOVETOCREG_DSZ64(tmp9, 0x410) 
U13f2: tmp9:= ADD_DSZ32(0x00000001, tmp9) 

U13f4: MOVETOCREG_DSZ64(tmp9, 0x700) 
U13f5: tmp9:= RDSEGFLD(UNK_SEG_09, FLGS) 
U13f6: MOVETOCREG_DSZ64(tmp9, 0x7f5) 

U13f8: tmp9:= RDSEGFLD(SS_USERM, FLGS) 
U13f9: MOVETOCREG_DSZ64(tmp9, 0x73c) 
U13fa: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x070) 

U13fc: tmp9:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U13fd: MOVETOCREG_DSZ64(tmp9, 0x78e) 
U13fe: tmp14:= ZEROEXT_DSZ64N(tmp14) !m1 

U1400: tmp9:= ADD_DSZN(tmp9, tmp14) !m1 
U1401: MOVETOCREG_DSZ64(tmp9, 0x067) 
U1402: SYNCFULL-> MOVETOCREG_DSZ64(tmp9, 0x71a) 

U1404: tmp9:= unk_205(0x00000004) 
U1405: tmp0:= MOVEFROMCREG_DSZ64( , 0x069) 
U1406: tmp0:= NOTAND_DSZ32(0x00000004, tmp0) 

U1408: MOVETOCREG_OR_DSZ64(tmp0, 0x069, tmp9) 
U1409: rsp:= ZEROEXT_DSZ64N(rsp) !m1 
U140a: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1418

U140c: tmp9:= READURAM( , 0x0057, 64) 
U140d: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000058, tmp9) 
U140e: WRITEURAM(tmp10, 0x0017, 64) !m2 

U1410: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000078, tmp9) 
U1411: WRITEURAM(tmp10, 0x0019, 64) !m2 
U1412: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000048, tmp9) 

U1414: WRITEURAM(tmp10, 0x0018, 64) !m2 
U1415: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000068, tmp9) 
U1416: WRITEURAM(tmp10, 0x001a, 64) !m2 

U1418: tmp3:= ZEROEXT_DSZ64N(tmp14) !m1 
U1419: tmp9:= READURAM( , 0x0077, 64) 
U141a: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000002e, U1426) !m0,m2 

U141c: BTUJNB_DIRECT_NOTTAKEN(tmp11, 0x00000000, U1426) !m2 
U141d: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U1422
U141e: tmp11:= MOVEFROMCREG_DSZ64( , 0x088) 

U1420: tmp11:= AND_DSZ32(0x00000100, tmp11) 
U1421: MOVETOCREG_SHR_DSZ64(tmp11, 0x00000002, 0x0b4) !m0,m2 
U1422: tmp11:= MOVEFROMCREG_DSZ64( , 0x7f0) 

U1424: SYNCFULL-> tmp11:= BTS_DSZ64(tmp11, 0x00000000) 
U1425: SAVEUIP_REGOVR(0x00, U1426, 0x000b) SEQW GOTO U4084
U1426: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 

U1428: tmp9:= SUB_DSZ32(0x0000142a, tmp13) 
U1429: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U2600) 
U142a: tmp9:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U142c: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000b, U4fd6) !m0 
U142d: SAVEUIP_REGOVR(0x01, U142e, 0x000e) !m0 SEQW GOTO U2b15
U142e: NOP 

U1430: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U3aae
U1431: SAVEUIP( , 0x01, U25f9) !m0 
FUN_ucode_0001432:
U1432: tmp14:= MOVE_DSZ32(0x00000004) 

U1434: tmp15:= READURAM( , 0x005c, 64) 
U1435: tmp15:= BTR_DSZ64(tmp15, 0x0000002b) 
U1436: WRITEURAM(tmp15, 0x005c, 64) !m2 

U1438: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(0x50e4,  , tmp14) !m2 SEQW URET1
U1439: SAVEUIP( , 0x01, U1440) !m0 
U143a: TESTUSTATE( , SYS, 0x0800) !m1 ? SEQW GOTO U3f35

U143c: tmp7:= OR_DSZ64(tmp6, tmp5) 
U143d: TESTUSTATE( , UCODE, 0x0010) ? SEQW URET1
U143e: STAD_DSZ64_ASZ32_SC1(tmp11, 0x00000208, mode=0x18, tmp7) 

U1440: STAD_DSZ64_ASZ32_SC1(tmp11, 0x00000200, mode=0x18, tmp5) SEQW UEND0
U1441: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U2bf2
U1442: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) !m1,m2 

U1444: tmp14:= SAVEUIP(0x01, U2bf8) !m0 
U1445: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
U1446: tmp8:= MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x7f5) !m2 

U1448: tmp11:= XOR_DSZ32(tmp8, tmp6) SEQW GOTO U3996
U1449: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U144a: tmp10:= READAFLAGS( , tmp10) !m2 

U144c: tmp13:= TESTUSTATE(tmp3, SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW URET0
U144d: tmp3:= READURAM( , 0x0014, 64) 
U144e: tmp3:= BTR_DSZ32(tmp3, 0x0000000e) 

U1450: tmp3:= BT_DSZ32(tmp3, tmp2) 
U1451: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp3, U6931) SEQW URET0
U1452: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1456

U1454: tmp15:= READURAM( , 0x004c, 64) 
U1455: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000003b, U1f91) !m0,m2 
U1456: LFNCEMARK-> TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4e82

U1458: SAVEUIP_REGOVR(0x01, U1459, 0x0003) !m0 SEQW GOTO U2931
U1459: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U145a: tmp0:= AND_DSZ32(0x60000000, tmp0) 

U145c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x7f6) 
U145d: tmp0:= ZEROEXT_DSZ32(0x00000093) 
U145e: tmp0:= SHL_DSZ32(tmp0, 0x00000010) 

U1460: tmp0:= CONCAT_DSZ32(0x0000ffff, tmp0) 
U1461: LFNCEWTMRK-> WRSEGFLD(tmp0, UNK_SEG_09, SEL+FLGS+LIM) 
U1462: tmp1:= SHR_DSZ32(tmp2, 0x00000004) 

U1464: LFNCEWTMRK-> unk_e6b( , tmp1) 
U1465: tmp0:= SUB_DSZ16(0x00000001) 
U1466: tmp1:= ADD_DSZ32(0x00000001, tmp0) 

U1468: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x7f5) 
U1469: MOVETOCREG_DSZ64(tmp0, 0x410) 
U146a: MOVETOCREG_DSZ64(tmp1, 0x700) 

U146c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp2, 0x78e) 
U146d: NOP 
U146e: NOP 

U1470: LFNCEWAIT-> tmp2:= RDSEGFLD(UNK_SEG_09, BASE) 
U1471: WRSEGFLD(tmp2, CS, BASE) 
U1472: tmp1:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 

U1474: WRSEGFLD(tmp1, CS, SEL+FLGS+LIM) SEQW GOTO U17ed
U1475: tmp14:= READUIP_REGOVR(0x01) !m0 
U1476: tmpv0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp9) 

U1478: tmpv1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U1479: tmpv1:= BT_DSZ64(tmpv1, 0x0000000d) 
U147a: tmpv1:= SELECTCC_DSZ64_CONDB(tmpv1, tmpv0) 

U147c: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000018, U4ad8) 
U147d: tmpv0:= ZEROEXT_DSZ32() SEQW GOTO U65aa
U147e: LFNCEMARK-> MOVE_DSZ32() 

U1480: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U1481: tmp6:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004d0, mode=0x01, tmp12) 
U1482: tmp2:= AND_DSZ32(0x00000060, tmp6) 

U1484: tmp2:= SHL_DSZ32(tmp2, 0x00000001) 
U1485: tmp1:= AND_DSZ32(0x0000000e, tmp6) 
U1486: tmp1:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000001) 

U1488: tmp1:= OR_DSZ32(tmp2, tmp1) 
U1489: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U148a: tmp2:= AND_DSZ32(0x00004000, tmp2) 

U148c: tmp2:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000001) 
U148d: tmp1:= OR_DSZ32(tmp2, tmp1) 
U148e: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004b4, mode=0x01, tmp12) 

U1490: tmp3:= AND_DSZ32(0x00000002, tmp6) 
U1491: tmp4:= AND_DSZ32(0x00000001, tmp4) 
U1492: tmp4:= SHL_DSZ32(tmp4, 0x00000003) 

U1494: tmp4:= SELECTCC_DSZ32_CONDNZ(tmp3, tmp4) 
U1495: tmp1:= OR_DSZ32(tmp4, tmp1) 
U1496: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000fc, mode=0x01, tmp12) 

U1498: tmp3:= AND_DSZ32(0x80000000, tmp3) 
U1499: tmp3:= SELECTCC_DSZ32_CONDZ(tmp3, 0x00000002) 
U149a: tmp1:= OR_DSZ32(tmp3, tmp1) 

U149c: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d4, mode=0x01, tmp12) 
U149d: tmp5:= OR_DSZ32(0x00000000, tmp5) 
U149e: tmp4:= SELECTCC_DSZ32_CONDZ(tmp5, 0x00000004) 

U14a0: tmp1:= OR_DSZ32(tmp4, tmp1) 
U14a1: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000500, mode=0x01, tmp12) 
U14a2: tmp3:= AND_DSZ32(0x00000001, tmp3) 

U14a4: tmp3:= SHL_DSZ32(tmp3, 0x00000004) 
U14a5: tmp1:= OR_DSZ32(0x00000020, tmp1) 
U14a6: tmp1:= OR_DSZ32(tmp3, tmp1) 

U14a8: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, 0x6c5) 
U14a9: WRITEURAM(tmp1, 0x003f, 64) 
U14aa: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x072) !m0,m2 

U14ac: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004f0, mode=0x01, tmp12) 
U14ad: tmp1:= AND_DSZ32(0x00000001, tmp1) 
U14ae: tmp1:= SHL_DSZ64(tmp1, 0x00000005) 

U14b0: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp12) 
U14b1: tmp3:= AND_DSZ32(0x00800000, tmp3) 
U14b2: tmp3:= SELECTCC_DSZ32_CONDZ(tmp3, 0x00001000) 

U14b4: tmp4:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U14b5: tmp4:= NOTAND_DSZ32(0x00001000, tmp4) 
U14b6: tmp4:= OR_DSZ32(tmp3, tmp4) 

U14b8: MOVETOCREG_OR_DSZ64(tmp4, 0x6c3, tmp1) 
U14b9: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001b4, mode=0x01, tmp12) 
U14ba: tmp4:= AND_DSZ32(0x00380000, tmp1) 

U14bc: SYNCMARK-> MOVETOCREG_OR_DSZ64(tmp4, 0x00000002, 0x7c6) !m0 
U14bd: tmp0:= ADD_DSZ64(0x00000400, tmp12) SEQW SAVEUIP1 U14beSEQW GOTO U319a
U14be: tmp12:= READURAM( , 0x0011, 64) 

U14c0: tmp4:= MOVEFROMCREG_DSZ64( , 0x105) 
U14c1: tmp4:= BT_DSZ32(tmp4, 0x00000002) 
U14c2: tmp12:= MOVEMERGEFLGS_DSZ64(tmp12, tmp4) 

U14c4: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000498, mode=0x01, tmp12) 
U14c5: tmp8:= ZEROEXT_DSZ32(0x00003605) 
U14c6: tmp9:= ZEROEXT_DSZ32(0x00060000) 

U14c8: tmp8:= CONCAT_DSZ32(tmp9, tmp8) 
U14c9: tmp7:= AND_DSZ64(tmp8, tmp7) 
U14ca: tmp7:= OR_DSZ64(0x00000010, tmp7) 

U14cc: tmp8:= MOVEFROMCREG_DSZ64( , 0x7ee) 
U14cd: tmp8:= AND_DSZ32(0x00000001, tmp8) 
U14ce: tmp8:= SELECTCC_DSZ32_CONDZ(tmp8, 0x000000c0) 

U14d0: tmp4:= SELECTCC_DSZ32_CONDNB(tmp4, 0x00000080) 
U14d1: tmp8:= OR_DSZ32(tmp4, tmp8) 
U14d2: tmp8:= SHL_DSZ64(tmp8, 0x00000020) 

U14d4: tmp7:= OR_DSZ64(tmp8, tmp7) 
U14d5: tmp8:= READURAM( , 0x005c, 64) 
U14d6: tmp8:= AND_DSZ64(0x00000040, tmp8) 

U14d8: tmp8:= SELECTCC_DSZ32_CONDNZ(tmp8, 0x00000800) 
U14d9: tmp7:= OR_DSZ64(tmp8, tmp7) 
U14da: tmp8:= SUB_DSZ32(0x00000002, tmp5) 

U14dc: tmp9:= SELECTCC_DSZ32_CONDNZ(tmp8, tmp6) 
U14dd: tmp8:= AND_DSZ32(0x00000080, tmp9) 
U14de: tmp9:= SELECTCC_DSZ32_CONDZ(tmp8, 0x00020800) 

U14e0: tmp8:= SELECTCC_DSZ32_CONDZ(tmp8, 0x0000f615) 
U14e1: tmp8:= CONCAT_DSZ32(tmp9, tmp8) 
U14e2: tmp7:= OR_DSZ64(tmp7, tmp8) 

U14e4: MOVETOCREG_DSZ64( , 0x00000000, 0x2da, 32) !m1 
U14e5: MOVETOCREG_DSZ64(tmp7, 0x2c4, 32) !m1 
U14e6: MOVETOCREG_SHR_DSZ64(tmp7, 0x00000020, 0x008) 

U14e8: WRITEURAM(tmp7, 0x0070, 64) 
U14e9: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004a0, mode=0x01, tmp12) 
U14ea: tmp8:= MOVEFROMCREG_DSZ64( , 0x281, 32) !m1 

U14ec: tmp8:= NOTAND_DSZ32(0x00000fe0, tmp8) 
U14ed: tmp7:= AND_DSZ32(0x00000fe0, tmp7) 
U14ee: tmp7:= OR_DSZ32(0xa00f001e, tmp7) 

U14f0: tmp7:= OR_DSZ16(tmp8, tmp7) 
U14f1: tmp8:= SELECTCC_DSZ32_CONDNB(tmp12, 0x0000001f) 
U14f2: MOVETOCREG_OR_DSZ64(tmp7, 0x281, tmp8) !m1 

U14f4: tmp1:= BTR_DSZ32(tmp1, 0x0000001f) 
U14f5: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000002cc, mode=0x01, tmp12) 
U14f6: tmp7:= SELECTCC_DSZ32_CONDNB(tmp1, tmp7) 

U14f8: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001ac, mode=0x01, tmp12) 
U14f9: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000025c, mode=0x01, tmp12) 
U14fa: tmp8:= AND_DSZ32(0x001fffff, tmp8) 

U14fc: tmp10:= SHL_DSZ64(tmp8, 0x00000015) 
U14fd: tmp8:= OR_DSZ64(tmp8, tmp10) 
U14fe: tmp10:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001bc, mode=0x01, tmp12) 

U1500: tmp11:= AND_DSZ32(0x00008000, tmp10) 
U1501: tmp11:= SHL_DSZ32(tmp11, 0x00000010) 
U1502: tmp10:= SHL_DSZ32(tmp9, 0x00000017) 

U1504: tmp11:= OR_DSZ32(tmp10, tmp11) 
U1505: tmp11:= OR_DSZ32(tmp7, tmp11) 
U1506: tmp11:= CONCAT_DSZ32(tmp11, tmp1) 

U1508: tmp1:= NOTAND_DSZ32(0x00380000, tmp1) 
U1509: tmp10:= READURAM( , 0x004c, 64) 
U150a: WRITEURAM(tmp11, 0x004c, 64) !m2 

U150c: tmp15:= SHL_DSZ64(tmp10, 0x00000010) 
U150d: tmp15:= SHR_DSZ64(tmp15, 0x00000010) 
U150e: tmp11:= NOTAND_DSZ32(tmp15, 0x00000001) SEQW SAVEUIP1 U1510SEQW GOTO U68ed

U1510: TESTUSTATE( , SYS, 0x2000) !m1 ? SEQW GOTO U1514
U1511: tmp10:= BTR_DSZ64(tmp10, 0x00000030) 
U1512: tmp10:= BTR_DSZ64(tmp10, 0x00000031) 

U1514: tmp4:= SHR_DSZ64(tmp10, 0x00000030) 
U1515: tmp4:= SHL_DSZ64(tmp4, 0x00000010) 
U1516: tmp4:= CONCAT_DSZ32(tmp4, tmp3) 

U1518: tmp4:= MOVEMERGEFLGS_DSZ64(tmp4, tmp3) 
U1519: tmp10:= CMOVCC_DSZ64_CONDNZ(tmp4, tmp10) 
U151a: MOVETOCREG_DSZ64(tmp10, 0x513) 

U151c: tmp13:= READURAM( , 0x0049, 64) 
U151d: SYNCWAIT-> tmp3:= TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U153e
U151e: tmp13:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004b8, mode=0x01, tmp12) 

U1520: LFNCEMARK-> tmp4:= READURAM( , 0x0043, 64) 
U1521: tmp15:= CONCAT_DSZ32(0x00000200) 
U1522: tmp15:= AND_DSZ64(tmp15, tmp4) 

U1524: SYNCMARK-> MOVETOCREG_DSZ64(tmp15, 0x6c0) 
U1525: tmp1:= OR_DSZ32(tmp4, tmp1) 
U1526: tmp15:= SHR_DSZ64(tmp4, 0x00000020) 

U1528: tmp15:= AND_DSZ32(0x007fffff, tmp15) 
U1529: tmp7:= OR_DSZ32(tmp15, tmp7) 
U152a: tmp15:= SHR_DSZ64(tmp4, 0x00000037) 

U152c: tmp15:= AND_DSZ32(0x000000ff, tmp15) 
U152d: tmp9:= OR_DSZ32(tmp15, tmp9) 
U152e: SYNCWAIT-> TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U1536

U1530: tmp15:= READURAM( , 0x0010, 64) 
U1531: LFNCEWAIT-> tmp11:= MOVEFROMCREG_DSZ64( , 0x513) 
U1532: ROVR<- tmp11:= NOTAND_DSZ64(tmp15, tmp11) SEQW SAVEUIP1 U1534

U1534: tmp4:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp11, 0x00000080) SEQW SAVEUIP1 U1535SEQW GOTO U5aa5
U1535: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, 0x000000a0, tmp2) 
U1536: tmp4:= READURAM( , 0x0014, 64) 

U1538: tmp4:= SHR_DSZ64(tmp4, 0x0000002a) 
U1539: tmp4:= AND_DSZ32(0x001fffff, tmp4) 
U153a: tmp8:= OR_DSZ64(tmp8, tmp4) 

U153c: tmp4:= SHL_DSZ64(tmp4, 0x0000002a) 
U153d: tmp8:= OR_DSZ64(tmp4, tmp8) 
U153e: MOVETOCREG_BTS_DSZ64( , 0x00000008, 0x005) 

U1540: tmp2:= ZEROEXT_DSZ32(0x00000123) 
U1541: LFNCEMARK-> MOVETOCREG_DSZ64(tmp2, 0x00b) 
U1542: tmp11:= SHL_DSZ32(tmp9, 0x00000017) 

U1544: tmp11:= OR_DSZ32(tmp7, tmp11) 
U1545: tmp11:= CONCAT_DSZ32(tmp11, tmp1) 
U1546: MOVETOCREG_DSZ64(tmp11, 0x6c0) 

U1548: WRITEURAM(tmp8, 0x0014, 64) 
U1549: tmp4:= AND_DSZ32(0x00000004, tmp1) 
U154a: tmp4:= SHR_DSZ32(tmp4, 0x00000001) 

U154c: tmp4:= OR_DSZ32(tmp3, tmp4) 
U154d: tmp10:= SHR_DSZ32(tmp1, 0x00000018) 
U154e: tmp10:= AND_DSZ32(0x00000008, tmp10) 

U1550: tmp4:= OR_DSZ32(tmp10, tmp4) 
U1551: tmp10:= SHR_DSZ32(tmp1, 0x00000014) 
U1552: tmp10:= AND_DSZ32(0x00000004, tmp10) 

U1554: tmp4:= OR_DSZ32(tmp10, tmp4) 
U1555: tmp10:= AND_DSZ32(0x00000001, tmp9) 
U1556: MOVETOCREG_OR_DSZ64(tmp4, 0x01d, tmp10) 

U1558: TESTUSTATE( , SYS, UST_VMX_OP_DIS) !m1 ? SEQW GOTO U155d
U1559: WRITEURAM(tmp13, 0x0057, 64) 
U155a: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000218, mode=0x01, tmp12) 

U155c: WRITEURAM(tmp1, 0x0056, 64) 
U155d: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U1568
U155e: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000080, mode=0x01, tmp12) 

U1560: MOVETOCREG_DSZ64(tmp1, 0x7f8) 
U1561: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002e8, mode=0x01, tmp12) 
U1562: MOVETOCREG_DSZ64(tmp1, 0x7f9, 32) !m1 

U1564: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000270, mode=0x01, tmp12) 
U1565: unk_13f(tmp1) !m2 
U1566: MOVETOCREG_DSZ64(tmp1, 0x7fe) 

U1568: tmp1:= READURAM( , 0x001f, 64) 
U1569: tmp1:= NOTAND_DSZ64(0x00000400, tmp1) 
U156a: WRITEURAM(tmp1, 0x001f, 64) 

U156c: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000268, mode=0x01, tmp12) 
U156d: tmp1:= ZEROEXT_DSZ32(0x00000001) 
U156e: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, mode=0x01, tmp12, tmp1) 

U1570: tmp11:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000fc, mode=0x01, tmp12) 
U1571: tmp1:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U1572: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x78e) 

U1574: tmp1:= ADD_DSZN(tmp3, tmp1) !m1 
U1575: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000508, mode=0x01, tmp12) 
U1576: WRITEURAM(tmp4, 0x004a, 64) 

U1578: TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U460c
U1579: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000008, U157c) !m2 
U157a: AETTRACE( , tmp4, 0x0c) 

U157c: MOVETOCREG_DSZ64(tmp4, 0x067) !m2 
U157d: SYNCFULL-> MOVETOCREG_DSZ64(tmp4, 0x71a) !m2 SEQW GOTO U460d
U157e: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 

U1580: TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U1586
U1581: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000278, tmp12) 
U1582: tmp1:= AND_DSZ32(0x00000100, tmp1) 

U1584: tmp0:= NOTAND_DSZ64(0x00000100, tmp0) 
U1585: tmp0:= OR_DSZ64(tmp1, tmp0) 
U1586: tmp2:= BT_DSZ32(tmp2, 0x00000001) 

U1588: tmp0:= MOVEMERGEFLGS_DSZ64(tmp0, tmp2) 
U1589: tmp15:= ZEROEXT_DSZ32(0xffc0802a) 
U158a: tmp15:= CONCAT_DSZ32(0xffffffffffffffff, tmp15) 

U158c: tmp15:= AND_DSZ64(tmp0, tmp15) 
U158d: tmp15:= XOR_DSZ64(0x00000002, tmp15) 
U158e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 

U1590: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp13, tmp10) 
U1591: tmp15:= NOTAND_DSZ32(tmp15, 0x00000001) 
U1592: tmp15:= SHL_DSZ32(tmp15, 0x00000011) 

U1594: tmp15:= AND_DSZ32(tmp0, tmp15) 
U1595: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 
U1596: rsp:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000260, tmp12) 

U1598: tmp10:= MOVEMERGEFLGS_DSZ32(tmp10, tmp6) 
U1599: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000198, tmp12) 
U159a: LFNCEWAIT-> WRSEGFLD(tmp7, GDT, LIMIT) 

U159c: tmp6:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001a0, tmp12) 
U159d: WRSEGFLD(tmp6, IDT, LIMIT) 
U159e: tmp15:= OR_DSZ32(tmp6, tmp7) 

U15a0: tmp15:= AND_DSZ32(0xffff0000, tmp15) 
U15a1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 
U15a2: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000148, tmp12) 

U15a4: unk_25c( , tmp7) 
U15a5: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000150, tmp12) 
U15a6: unk_25c( , tmp6) 

U15a8: tmp4:= ADD_DSZ64(0x00000140, tmp12) 
U15a9: WRSEGFLD(tmp7, GDT, BASE) 
U15aa: WRSEGFLD(tmp6, IDT, BASE) SEQW SAVEUIP1 U15acSEQW GOTO U5705

U15ac: WRSEGFLD(tmp9) !m1 
U15ad: tmp9:= SHR_DSZ32(tmp9, 0x00000010) 
U15ae: tmp9:= XOR_DSZ32(0x00000008, tmp9) 

U15b0: tmp9:= SELECTCC_DSZ32_CONDZ(tmp13, tmp9) 
U15b1: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000003, U5f15) !m0,m2 
U15b2: WRSEGFLD(tmp7, TSS, BASE) 

U15b4: tmp4:= ADD_DSZ64(0x00000138, tmp12) SEQW SAVEUIP1 U15b5SEQW GOTO U5705
U15b5: WRSEGFLD(tmp9) !m1 
U15b6: WRSEGFLD(tmp7, LDT, BASE) 

U15b8: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U2c6e) !m1 
U15b9: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000168, tmp12) 
U15ba: tmp8:= BTR_DSZ64(tmp8, 0x0000001a) 

U15bc: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp8, 0x00000015, 0x79e) 
U15bd: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000160, tmp12) 
U15be: tmp9:= BTR_DSZ64(tmp9, 0x0000001a) 

U15c0: tmp4:= ADD_DSZ64(0x00000110, tmp12) 
U15c1: tmp6:= CLC(tmp9) SEQW SAVEUIP1 U15c2SEQW GOTO U570a
U15c2: tmp3:= BT_DSZ64(tmp3, 0x00000027) 

U15c4: tmp11:= SETCC_CONDB(tmp3) 
U15c5: tmp11:= SHL_DSZ64(tmp11, 0x0000001a) 
U15c6: tmp9:= OR_DSZ64(tmp11, tmp9) 

U15c8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 
U15c9: tmp5:= SHR_DSZ32(tmp9, 0x00000010) 
U15ca: tmp1:= AND_DSZ32(0x00000060, tmp5) 

U15cc: tmp2:= AND_DSZ32(0x0000000f, tmp5) 
U15cd: tmp1:= SELECTCC_DSZ32_CONDNB(tmp3, tmp1) 
U15ce: tmp2:= SUB_DSZ32(0x00000003, tmp2) 

U15d0: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp2, tmp1) 
U15d1: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U5f15) !m2 
U15d2: LFNCEWAIT-> WRSEGFLD(tmp9) !m2 

U15d4: WRSEGFLD(tmp7, UNK_SEG_09, BASE) 
U15d5: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp9, 0x00000010, 0x7f5) 
U15d6: tmp2:= AND_DSZ64(0x00000003, tmp9) 

U15d8: tmp9:= ZEROEXT_DSZ64(tmp8) 
U15d9: tmp6:= BT_DSZ32(tmp9, 0x0000001b) 
U15da: tmp4:= ADD_DSZ64(0x00000118, tmp12) SEQW SAVEUIP1 U15dcSEQW GOTO U570a

U15dc: tmp9:= OR_DSZ64(tmp11, tmp9) 
U15dd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 
U15de: WRSEGFLD(tmp9) !m2 

U15e0: tmp5:= SHR_DSZ32(tmp9, 0x00000010) 
U15e1: tmp15:= SELECTCC_DSZ32_CONDNB(tmp3, tmp5) 
U15e2: tmp13:= AND_DSZ32(0x00000001, tmp10) 

U15e4: tmp13:= SELECTCC_DSZ32_CONDNZ(tmp13, 0x00000060) 
U15e5: tmp13:= AND_DSZ32(tmp13, tmp15) 
U15e6: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp13, U5f15) 

U15e8: tmp1:= AND_DSZ32(0x00000003, tmp9) 
U15e9: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp3) 
U15ea: tmp2:= CMOVCC_DSZ32_CONDNB(tmp2, tmp1) 

U15ec: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U5f15, tmp1) !m2 
U15ed: LFNCEMARK-> WRSEGFLD(tmp7, SS_USERM, BASE) 
U15ee: tmp4:= ADD_DSZ64(0x00000120, tmp12) SEQW SAVEUIP1 U15f0SEQW GOTO U5705

U15f0: tmp9:= OR_DSZ64(tmp11, tmp9) 
U15f1: WRSEGFLD(tmp9) !m2 
U15f2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 

U15f4: WRSEGFLD(tmp7, DS, BASE) 
U15f5: tmp4:= ADD_DSZ64(0x00000108, tmp12) SEQW SAVEUIP1 U15f6SEQW GOTO U5705
U15f6: tmp9:= OR_DSZ64(tmp11, tmp9) 

U15f8: WRSEGFLD(tmp9) !m2 
U15f9: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 
U15fa: WRSEGFLD(tmp7, ES, BASE) 

U15fc: tmp4:= ADD_DSZ64(0x00000128, tmp12) SEQW SAVEUIP1 U15fdSEQW GOTO U5705
U15fd: tmp9:= OR_DSZ64(tmp11, tmp9) 
U15fe: WRSEGFLD(tmp9) !m2 

U1600: unk_25c( , tmp7) 
U1601: WRSEGFLD(tmp7, FS, BASE) 
U1602: tmp4:= ADD_DSZ64(0x00000130, tmp12) SEQW SAVEUIP1 U1604SEQW GOTO U5705

U1604: tmp9:= OR_DSZ64(tmp11, tmp9) 
U1605: WRSEGFLD(tmp9) !m2 
U1606: unk_25c( , tmp7) 

U1608: WRSEGFLD(tmp7, GS, BASE) 
U1609: unk_13f(tmp0) !m2 
U160a: MOVETOCREG_DSZ64(tmp0, 0x7fe) 

U160c: tmp1:= NOTAND_DSZ32(0x60000000, tmp10) 
U160d: tmp7:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U160e: tmp7:= AND_DSZ32(0x60000000, tmp7) 

U1610: MOVETOCREG_OR_DSZ64(tmp1, 0x7f6, tmp7) !m2 
U1611: tmp1:= READURAM( , 0x0046, 64) 
U1612: tmp15:= ADD_DSZ64(0x00000001, tmp1) 

U1614: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U1615) SEQW GOTO U1628
U1615: tmp2:= READURAM( , 0x0057, 64) 
U1616: CMPUJZ_DIRECT_NOTTAKEN(tmp2, U33b8, tmp1) !m1,m2 

U1618: tmp15:= READURAM( , 0x0010, 64) 
U1619: tmp15:= AND_DSZ64(tmp15, tmp1) 
U161a: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U33b8) 

U161c: LFNCEWAIT-> tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp1) 
U161d: tmp15:= BTR_DSZ32(tmp15, 0x0000001f) 
U161e: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000011, U33b8) !m1,m2 

U1620: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U1628
U1621: tmp8:= READURAM( , 0x0043, 64) 
U1622: tmp8:= SHR_DSZ64(tmp8, 0x00000020) 

U1624: tmp8:= AND_DSZ64(0x00004000, tmp8) 
U1625: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00004000) 
U1626: CMPUJNZ_DIRECT_NOTTAKEN(tmp8, U33b8, tmp15) !m1,m2 

U1628: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001cc, tmp12) 
U1629: tmp15:= SHR_DSZ32(tmp8, 0x00000005) 
U162a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 

U162c: tmp3:= AND_DSZ32(0x00000003, tmp8) 
U162d: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000003, U5f15) !m0,m2 
U162e: tmp15:= AND_DSZ32(0x00000012, tmp8) 

U1630: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000012, U5f15) !m0,m2 
U1631: tmp15:= SELECTCC_DSZ32_CONDNP(tmp10, tmp8) 
U1632: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000004, U5f15) !m2 

U1634: tmp10:= READURAM( , 0x004f, 64) 
U1635: mm5:= unk_72f(tmm2) 
U1636: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U5c6d

U1638: tmp15:= SELECTCC_DSZ32_CONDNB(tmp12, 0x00000004) 
U1639: tmp15:= XOR_DSZ32(tmp15, tmp8) 
U163a: tmp15:= SELECTCC_DSZ32_CONDZ(tmp12, tmp15) 

U163c: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000002, U5f15) !m0,m2 
U163d: WRITEURAM(tmp1, 0x0056, 64) 
U163e: tmm3:= unk_72f(tmm1) 

U1640: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U40cc
U1641: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002d0, tmp12) 
U1642: NOP 

U1644: TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U1646
U1645: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b0, tmp12) 
U1646: tmp15:= NOTAND_DSZ64(0x0000500f, tmp7) 

U1648: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 
U1649: tmp13:= SELECTCC_DSZ32_CONDB(tmp0, tmp0) 
U164a: tmp15:= SHR_DSZ32(tmp7, 0x00000006) 

U164c: tmp13:= XOR_DSZ32(tmp13, tmp15) 
U164d: tmp15:= CMOVCC_DSZ32_CONDZ(tmp3, 0x00000100) 
U164e: tmp15:= AND_DSZ32(tmp15, tmp13) 

U1650: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 
U1651: tmp15:= SHR_DSZ32(tmp0, 0x00000009) 
U1652: tmp15:= NOTAND_DSZ32(tmp15, tmp8) 

U1654: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U5f15) !m2 
U1655: tmp15:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002d8, tmp12) 
U1656: unk_25c( , tmp15) 

U1658: WRITEURAM(tmp15, 0x0075, 64) 
U1659: tmp15:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002e0, tmp12) 
U165a: unk_25c( , tmp15) 

U165c: WRITEURAM(tmp15, 0x0076, 64) 
U165d: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000019c, tmp12) 
U165e: WRITEURAM(tmp15, 0x0074, 32) 

U1660: tmp15:= SELECTCC_DSZ32_CONDNS(tmp12, 0x00000004) 
U1661: tmp8:= NOTAND_DSZ32(tmp15, tmp8) 
U1662: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000268, tmp12) 

U1664: LFNCEWAIT-> tmp15:= unk_205( , 0xffffffffffffffff) 
U1665: tmp13:= SHR_DSZ64(tmp3, 0x00000020) 
U1666: tmp15:= AND_DSZ32(tmp13, tmp15) 

U1668: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 
U1669: tmp15:= SAR_DSZ64(tmp3, 0x00000001) 
U166a: unk_25c( , tmp15) 

U166c: LFNCEWAIT-> tmp15:= RDSEGFLD(UNK_SEG_09, LIMIT) 
U166d: MOVETOCREG_DSZ64(tmp15, 0x410) 
U166e: tmp15:= ADD_DSZ32(0x00000001, tmp15) 

U1670: MOVETOCREG_DSZ64(tmp15, 0x700) 
U1671: LFNCEWAIT-> tmp15:= RDSEGFLD(SS_USERM, FLGS) 
U1672: MOVETOCREG_DSZ64(tmp15, 0x73c) 

U1674: TESTUSTATE( , VMX, 0x0040) !m2 ? SEQW GOTO U4de8
U1675: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000360, tmp12) 
U1676: tmp0:= READURAM( , 0x0087, 64) 

U1678: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U1679: tmp15:= IMUL64L_DSZ64(tmp15, tmp0) 
U167a: tmp15:= SHR_DSZ64(tmp15, 0x00000010) 

U167c: tmp15:= OR_DSZ32(0x00000000, tmp15) 
U167d: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00000001) 
U167e: tmp1:= ADD_DSZ32(0x0000229e, tmp1) 

U1680: tmp1:= MOVETOCREG_DSZ64(0x00000004, tmp1) !m1 
U1681: MOVETOCREG_DSZ64(tmp15, 0x2f7, 32) !m1,m2 
U1682: tmp10:= NOTAND_DSZ64(0x00000004, tmp10) 

U1684: tmp2:= ZEROEXT_DSZ32(0x00000001) 
U1685: MOVETOCREG_DSZ64(tmp2, 0x2f8, 32) !m1,m2 SEQW GOTO U4dea
U1686: LFNCEMARK-> tmp9:= MOVEFROMCREG_DSZ64( , 0x7c6) 

U1688: tmp9:= AND_DSZ32(0x00000003, tmp9) 
U1689: ROVR<- tmp10:= OR_DSZ64(tmp9, tmp10) SEQW SAVEUIP1 U168aSEQW GOTO U38c2
U168a: WRITEURAM(tmp10, 0x0080, 64) !m2 

U168c: tmp9:= MOVEFROMCREG_DSZ64( , 0x51c) 
U168d: MOVETOCREG_BTR_DSZ64(tmp9, 0x0000003f, 0x51c) !m0,m2 
U168e: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f6) 

U1690: tmp11:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U1691: tmp14:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U1692: tmp12:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 

U1694: tmp1:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1695: tmp1:= READAFLAGS( , tmp1) !m2 
U1696: LFNCEMARK-> tmp9:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

U1698: tmp6:= MOVEFROMCREG_DSZ64( , 0x067) 
U1699: tmp6:= SUB_DSZN(tmp9, tmp6) !m1 
U169a: SIGEVENT( , 0x0000000b) 

U169c: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x7c5) 
U169d: MOVETOCREG_DSZ64( , 0x00000000, 0x7ff) 
U169e: tmp9:= NOTAND_DSZ32(0x8000000d, tmp0) 

U16a0: MOVETOCREG_DSZ64(tmp9, 0x7f6) 
U16a1: MOVETOCREG_DSZ64( , 0x00000000, 0x7fe) 
U16a2: unk_13f() !m2 SEQW SAVEUIP0 U16a4SEQW GOTO U5cae

U16a4: MOVETOCREG_DSZ64( , 0x00000000, 0x7f8) 
U16a5: tmp2:= AND_DSZ32(0x00005800, tmp12) 
U16a6: LFNCEMARK-> MOVETOCREG_DSZ64(tmp2, 0x7f9, 32) !m1 

U16a8: tmp2:= ZEROEXT_DSZ32(0x0000fc00) 
U16a9: tmp9:= READURAM( , 0x0071, 64) 
U16aa: tmp10:= READURAM( , 0x0034, 64) 

U16ac: tmp4:= ZEROEXT_DSZ32(tmp9) 
U16ad: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U16b0
U16ae: tmp4:= ZEROEXT_DSZ32(tmp10) 

U16b0: tmp2:= ADD_DSZ64(tmp2, tmp4) 
U16b1: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002ec, tmp10) 
U16b2: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002f8, tmp9) 

U16b4: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002e4, tmp4) 
U16b5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003c8, tmp14) 
U16b6: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002e8, tmp12) 

U16b8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003e0, tmp11) 
U16b9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003f8, tmp0) 
U16ba: tmp9:= MOVEFROMCREG_DSZ64( , 0x529) 

U16bc: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003f0, tmp9) 
U16bd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000248, tmp9) 
U16be: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003e8, tmp1) 

U16c0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000250, tmp1) 
U16c1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003d8, tmp6) 
U16c2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000394, rdi) 

U16c4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000038c, rsi) 
U16c5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000384, rbp) 
U16c6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000037c, rsp) 

U16c8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000374, rbx) 
U16c9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000036c, rdx) 
U16ca: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000364, rcx) 

U16cc: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000035c, rax) 
U16cd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000354, r8) 
U16ce: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000034c, r9) 

U16d0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000344, r10) 
U16d1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000033c, r11) 
U16d2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000334, r12) 

U16d4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000032c, r13) 
U16d5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000324, r14) 
U16d6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000031c, r15) 

U16d8: tmp9:= READURAM( , 0x003d, 64) 
U16d9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003d0, tmp9) 
U16da: tmp9:= READURAM( , 0x0073, 64) 

U16dc: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000310, tmp9) 
U16dd: tmp9:= RDSEGFLD(GDT, BASE) 
U16de: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000180, tmp9) 

U16e0: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x0000028c, tmp9) 
U16e1: tmp9:= SHR_DSZ64(tmp9, 0x00000020) 
U16e2: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001d0, tmp9) 

U16e4: tmp9:= RDSEGFLD(GDT, SEL+FLGS+LIM) 
U16e5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000188, tmp9) 
U16e6: tmp9:= RDSEGFLD(LDT, BASE) 

U16e8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000190, tmp9) 
U16e9: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x0000029c, tmp9) 
U16ea: tmp9:= SHR_DSZ64(tmp9, 0x00000020) 

U16ec: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001d4, tmp9) 
U16ed: tmp9:= RDSEGFLD(LDT, SEL+FLGS+LIM) 
U16ee: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000198, tmp9) 

U16f0: tmp9:= RDSEGFLD(LDT, SEL) 
U16f1: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003c0, tmp9) 
U16f2: tmp9:= RDSEGFLD(IDT, BASE) 

U16f4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000160, tmp9) 
U16f5: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000294, tmp9) 
U16f6: tmp9:= SHR_DSZ64(tmp9, 0x00000020) 

U16f8: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001d8, tmp9) 
U16f9: tmp9:= RDSEGFLD(IDT, SEL+FLGS+LIM) 
U16fa: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000168, tmp9) 

U16fc: tmp9:= RDSEGFLD(ES, BASE) 
U16fd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001a0, tmp9) 
U16fe: tmp10:= RDSEGFLD(ES, SEL+FLGS+LIM) 

U1700: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001a8, tmp10) 
U1701: tmp9:= RDSEGFLD(ES, SEL) 
U1702: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003a8, tmp9) 

U1704: tmp9:= RDSEGFLD(UNK_SEG_09, BASE) 
U1705: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001b0, tmp9) 
U1706: tmp10:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 

U1708: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001b8, tmp10) 
U1709: tmp9:= RDSEGFLD(UNK_SEG_09, SEL) 
U170a: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003ac, tmp9) 

U170c: tmp9:= RDSEGFLD(SS_USERM, BASE) 
U170d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001c0, tmp9) 
U170e: tmp10:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U1710: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001c8, tmp10) 
U1711: tmp9:= RDSEGFLD(SS_USERM, SEL) 
U1712: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003b0, tmp9) 

U1714: tmp9:= RDSEGFLD(DS, BASE) 
U1715: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000130, tmp9) 
U1716: tmp10:= RDSEGFLD(DS, SEL+FLGS+LIM) 

U1718: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000138, tmp10) 
U1719: tmp9:= RDSEGFLD(DS, SEL) 
U171a: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003b4, tmp9) 

U171c: tmp9:= RDSEGFLD(FS, BASE) 
U171d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000140, tmp9) 
U171e: tmp10:= RDSEGFLD(FS, SEL+FLGS+LIM) 

U1720: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000148, tmp10) 
U1721: tmp9:= RDSEGFLD(FS, SEL) 
U1722: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003b8, tmp9) 

U1724: tmp9:= RDSEGFLD(GS, BASE) 
U1725: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000150, tmp9) 
U1726: tmp10:= RDSEGFLD(GS, SEL+FLGS+LIM) 

U1728: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000158, tmp10) 
U1729: tmp9:= RDSEGFLD(GS, SEL) 
U172a: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003bc, tmp9) 

U172c: tmp9:= RDSEGFLD(TSS, BASE) 
U172d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000170, tmp9) 
U172e: tmp10:= RDSEGFLD(TSS, SEL+FLGS+LIM) 

U1730: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000178, tmp10) 
U1731: tmp9:= RDSEGFLD(TSS, SEL) 
U1732: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003c4, tmp9) 

U1734: tmp9:= MOVEFROMCREG_DSZ64( , 0x51c) 
U1735: tmp9:= BTR_DSZ64(tmp9, 0x0000003f) 
U1736: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000002d8, tmp9) 

U1738: tmp10:= READURAM( , 0x0059, 64) 
U1739: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U173c
U173a: tmp10:= READURAM( , 0x0080, 64) 

U173c: tmp10:= AND_DSZ32(0x00000080, tmp10) 
U173d: tmp10:= SHR_DSZ32(tmp10, 0x00000006) 
U173e: tmp9:= SETCC_CONDB(tmp13) 

U1740: tmp9:= OR_DSZ8(tmp10, tmp9) 
U1741: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002e0, tmp9) 
U1742: tmp13:= NOTAND_DSZ32(0x00002000, tmp13) 

U1744: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000240, tmp13) 
U1745: tmp9:= READURAM( , 0x003e, 64) 
U1746: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000039c, tmp9) 

U1748: tmp10:= MOVEFROMCREG_DSZ64( , 0x004) 
U1749: tmp10:= AND_DSZ32(0x00000020, tmp10) 
U174a: tmp10:= SHR_DSZ32(tmp10, 0x00000005) 

U174c: tmp9:= READURAM( , 0x0039, 64) 
U174d: tmp9:= NOTAND_DSZ32(0x00000001, tmp9) 
U174e: tmp9:= OR_DSZ32(tmp10, tmp9) 

U1750: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003a4, tmp9) 
U1751: tmp9:= MOVEFROMCREG_DSZ64( , 0x7f1) 
U1752: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000308, tmp9) 

U1754: MOVETOCREG_DSZ64( , 0x00000000, 0x7f1) !m2 
U1755: tmp11:= ADD_DSZ64(tmp2, 0x00000208) 
U1756: tmp9:= ZEROEXT_DSZ32(0x00000004) 

U1758: tmp9:= SUB_DSZ32(0x00000001, tmp9) 
U1759: tmp10:= ADD_DSZ64(tmp9, 0x00000540) 
U175a: tmp10:= MOVEFROMCREG_DSZ64( , tmp10) 

U175c: unk_f6d(tmp11, tmp9, tmp10) 
U175d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U175e) SEQW GOTO U1758
U175e: tmp9:= MOVEFROMCREG_DSZ64( , 0x01c) 

U1760: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000238, tmp9) 
U1761: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 
U1762: tmp9:= TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U176e

U1764: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1769
U1765: tmp9:= MOVEFROMCREG_DSZ64( , 0x088) 
U1766: tmp9:= AND_DSZ32(0x00000100, tmp9) 

U1768: MOVETOCREG_SHR_DSZ64(tmp9, 0x00000002, 0x0b4) !m0,m2 
U1769: tmp9:= MOVEFROMCREG_DSZ64( , 0x067) 
U176a: AETTRACE( , tmp9, 0x0c) SEQW SAVEUIP0 U176cSEQW GOTO U28ec

U176c: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x0b5) !m0,m2 
U176d: tmp9:= BTS_DSZ64(0x00000000, 0x00000000) 
U176e: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp2, 0x0000023c, tmp9) 

U1770: tmp9:= READURAM( , 0x0035, 64) 
U1771: tmp9:= BT_DSZ64(tmp9, 0x0000003c) 
U1772: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp9, U1774) SEQW GOTO U1780

U1774: LFNCEMARK-> tmp9:= RDSEGFLD(UNK_SEG_10, BASE) 
U1775: tmp10:= MOVEFROMCREG_DSZ64( , 0x701) 
U1776: tmp10:= SHR_DSZ32(tmp10, 0x0000001e) 

U1778: tmp9:= OR_DSZ64(tmp10, tmp9) 
U1779: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000002d0, tmp9) 
U177a: LFNCEWAIT-> WRSEGFLD(0x00000000) 

U177c: tmp10:= MOVEFROMCREG_DSZ64( , 0x701) 
U177d: tmp10:= NOTAND_DSZ64(0xc0000000, tmp10) 
U177e: MOVETOCREG_DSZ64(tmp10, 0x701) !m2 

U1780: tmp9:= READURAM( , 0x006e, 64) 
U1781: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001e8, tmp9) 
U1782: tmp9:= READURAM( , 0x0024, 64) 

U1784: tmp9:= SHR_DSZ64(tmp9, 0x00000020) 
U1785: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001dc, tmp9) 
U1786: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001f8, tmp5) 

U1788: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001f0, tmp7) 
U1789: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001e0, tmp3) 
U178a: LFNCEWAIT-> tmp10:= SHR_DSZ64(tmp8, 0x00000010) 

U178c: tmp9:= SUB_DSZ16(0x00000088, tmp10) 
U178d: tmp9:= SELECTCC_DSZ32_CONDNZ(tmp9, 0x00000001) 
U178e: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x00000302, tmp9) 

U1790: tmp10:= SUB_DSZ16(0x0000008a, tmp10) 
U1791: tmp10:= SELECTCC_DSZ32_CONDNZ(tmp10, 0x00000001) 
U1792: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000234, tmp10) 

U1794: LFNCEMARK-> tmp9:= MOVEFROMCREG_DSZ64( , 0x79e) 
U1795: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000230, tmp9) 
U1796: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x00000300, 0x00000000) 

U1798: tmp9:= ZEROEXT_DSZ32(0x00030101) 
U1799: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002fc, tmp9) 
U179a: tmp11:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 

U179c: tmp10:= READURAM( , 0x005c, 64) 
U179d: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U6fc0
U179e: tmp9:= PORTIN_DSZ32_ASZ16_SC1(0x50d4) !m2 

U17a0: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000002, U17a1) !m0,m2 SEQW GOTO U17a9
U17a1: tmp6:= MOVEFROMCREG_DSZ64( , 0x573) 
U17a2: tmp6:= AND_DSZ32(tmp6, 0x00000800) 

U17a4: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U17a5) SEQW GOTO U17a9
U17a5: SYNCMARK-> tmp9:= MOVEFROMCREG_DSZ64( , 0x105) 
U17a6: tmp9:= OR_DSZ32(0x00004000, tmp9) 

U17a8: SYNCWAIT-> MOVETOCREG_DSZ64(tmp9, 0x105) 
U17a9: tmp10:= OR_DSZ32(0x00000010, tmp10) 
U17aa: WRITEURAM(tmp10, 0x005c, 32) !m2 

U17ac: tmp9:= READURAM( , 0x0036, 64) 
U17ad: tmp9:= ADD_DSZ32(0x00000001, tmp9) 
U17ae: WRITEURAM(tmp9, 0x0036, 32) !m2 

U17b0: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp12, 0x0000000e, U6fce) !m0,m1 SEQW GOTO U6fcd
U17b1: tmp6:= AND_DSZ32() 
U17b2: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000f, U4d3a) !m0 

U17b4: tmp7:= PINTMOVDTMM2I_DSZ64(tmm0) 
U17b5: tmp11:= BT_DSZ16(tmp9, 0x0000000d) 
U17b6: tmp3:= MOVEMERGEFLGS_DSZ64(tmp3, tmp11) 

U17b8: tmp7:= CMOVCC_DSZ64_CONDNB(tmp3, tmp7) 
U17b9: tmm0:= unk_744(mm7) SEQW GOTO U4d3a
U17ba: tmp10:= ZEROEXT_DSZ32(0x00003380) 

U17bc: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000038, tmp12) 
U17bd: tmp3:= unk_04d(tmp13) SEQW GOTO U5935
U17be: WRITEURAM(tmp5, 0x0009, 64) !m2 

U17c0: tmp13:= ZEROEXT_DSZ64(tmp3) SEQW GOTO U5420
U17c1: tmp3:= MOVEFROMCREG_DSZ64( , 0x01b) 
U17c2: SYNCFULL-> MOVETOCREG_DSZ64(tmp3, 0x752) 

U17c4: SAVEUIP( , 0x00, U1000) 
U17c5: tmp2:= RDSEGFLD(SS_KERNM, UNK_FLD_0c) 
U17c6: tmp0:= ZEROEXT_DSZ16N(tmp0) !m1 

U17c8: tmp3:= ADD_DSZN(tmp0, tmp2) !m1 
U17c9: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp3, 0x00e) !m2 SEQW URET0
U17ca: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U17ce

U17cc: tmp1:= READURAM( , 0x004c, 64) 
U17cd: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000f, U0846) !m0 
U17ce: LFNCEMARK-> UPDATEUSTATE( , !0x00) !m0 

U17d0: tmp1:= READURAM( , 0x0010, 64) 
U17d1: tmp1:= ZEROEXT_DSZ16( , tmp1) 
U17d2: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U17e0

U17d4: tmp1:= AND_DSZ64(tmp1, tmp11) 
U17d5: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 
U17d6: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U17e0

FUN_ucode_00017d8:
U17d8: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U17d9: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U17da: tmp0:= SHL_DSZ32(tmp0, 0x0000001a) 

U17dc: tmp0:= AND_DSZ32(tmp0, tmp1) 
U17dd: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp0, U5a65) 
U17de: tmp3:= TESTUSTATE(tmp10, SYS, 0x8000) !m1 ? SEQW URET1

U17e0: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp11, 0x529) 
U17e1: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U17e8
U17e2: tmp1:= SAVEUIP(tmp11, 0x00, U5fa8) 

U17e4: SAVEUIP_REGOVR(0x01, U17e5, 0x0120) !m0 SEQW GOTO U5ca0
U17e5: tmp1:= MOVEFROMCREG_DSZ64( , 0x067) 
U17e6: AETTRACE( , tmp1, 0x0e) 

U17e8: SAVEUIP( , 0x00, U0444) 
U17e9: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U0bba
U17ea: LFNCEMARK-> NOP 

uend:
U17ec: LFNCEWAIT-> unk_256() !m1 SEQW UEND0
U17ed: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U2a91
U17ee: tmp3:= ZEROEXT_DSZ32(0x0000048d) 

U17f0: tmp1:= READURAM( , 0x0012, 64) 
U17f1: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U2a91) !m1 
U17f2: SAVEUIP_REGOVR( , 0x01, U17f4, 0x4031) !m0 SEQW GOTO U6bfd

U17f4: SAVEUIP( , 0x01, U2a91) !m0 
U17f5: tmpv0:= SAVEUIP(tmp2, 0x00, U38d0) SEQW GOTO U334d
FUN_ucode_00017f6:
U17f6: tmp7:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 

U17f8: tmp7:= NOTAND_DSZ32(0x00000200, tmp7) 
U17f9: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp7, 0x00000008, 0x38f) !m1 
U17fa: tmp7:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 

U17fc: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp7, 0x00000009, U304e) !m1,m2 SEQW GOTO U17fa
U17fd: tmm6:= unk_624(tmm2, tmm2) 
U17fe: tmp4:= PINTMOVDTMM2I_DSZ32(tmm6) 

U1800: tmp5:= AND_DSZ8(0x00000010, tmp4) 
U1801: tmp9:= unk_6a0() 
U1802: tmp5:= CMOVCC_DSZ16_CONDZ(tmp5, 0x00000001) 

U1804: tmm1:= unk_743(mm5, tmm1) 
U1805: tmm0:= unk_483(tmm1) SEQW GOTO U4378
U1806: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 

U1808: tmp3:= AND_DSZ16(0x00000010, tmp2) 
U1809: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U180a) SEQW GOTO U6355
U180a: LFNCEMARK-> tmm6:= unk_743() !m2 

U180c: tmp12:= OR_DSZ16(0x00000010, tmp12) SEQW GOTO U1948
U180d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U03b4) 
U180e: tmm6:= unk_624(tmm2, tmm2) 

U1810: tmp4:= PINTMOVDTMM2I_DSZ32(tmm6) 
U1811: tmp5:= AND_DSZ8(0x00000004, tmp4) 
U1812: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U387c) 

U1814: tmp3:= AND_DSZ8(0x00000010, tmp4) 
U1815: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U03b4) SEQW GOTO U36b8
U1816: tmp13:= AND_DSZ32(0x00000080, tmp6) 

U1818: tmp13:= SHL_DSZ64(tmp13, 0x00000028) 
U1819: LFNCEWAIT-> tmp2:= READURAM( , 0x001f, 64) !m2 
U181a: tmp2:= OR_DSZ64(tmp13, tmp2) 

U181c: LFNCEMARK-> WRITEURAM(tmp2, 0x011f, 64) !m2 SEQW GOTO U2e50
U181d: tmp0:= MOVEFROMCREG_DSZ64( , 0x3df, 32) !m1 
U181e: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000005, 0x3df) !m1 

U1820: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U5b95
U1821: LFNCEWAIT-> tmp0:= MOVETOCREG_DSZ64( , 0x00000000, 0x382, 32) !m1 
U1822: MOVETOCREG_DSZ64(tmp0, 0x381, 32) !m1 

U1824: tmp0:= MOVETOCREG_DSZ64( , 0x00000000, 0x386, 32) !m1 
U1825: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000035, 0x385) !m1 SEQW GOTO U5b98
U1826: tmp2:= READURAM( , 0x0004, 64) 

U1828: tmp0:= READURAM( , 0x0005, 64) 
U1829: BTUJB_DIRECT_NOTTAKEN(tmp2, U182a, tmp0) !m2 SEQW GOTO U17ec
U182a: tmp0:= CONCAT_DSZ16(0x0000005c) 

U182c: tmp1:= MOVE_DSZ64(tmp5) SEQW GOTO U2431
U182d: tmp3:= READURAM( , 0x0053, 64) 
U182e: WRITEURAM( , 0x00000000, 0x0007, 32) 

U1830: tmp3:= AND_DSZ32(0x00008000, tmp3) 
U1831: tmp3:= SHR_DSZ32(tmp3, 0x0000000f) 
U1832: tmp14:= READURAM( , 0x0047, 64) 

U1834: tmp14:= MOVEMERGEFLGS_DSZ32(tmp14, tmp3) 
U1835: tmp14:= CMOVCC_DSZ32_CONDZ(tmp14, 0x00001842) SEQW GOTO U4c09
U1836: tmp0:= ZEROEXT_DSZ32(0x00000120) 

U1838: WRITEURAM(tmp0, 0x0035, 64) 
U1839: tmp1:= ZEROEXT_DSZ32(0x00004800) 
U183a: tmp1:= CONCAT_DSZ16(0x0000c060, tmp1) 

U183c: tmp0:= CONCAT_DSZ16(0x00007200) 
U183d: tmp1:= CONCAT_DSZ32(tmp1, tmp0) 
U183e: WRITEURAM(tmp1, 0x0077, 64) SEQW GOTO U4d7c

U1840: tmp3:= READURAM( , 0x005c, 64) 
U1841: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000007, U4bf2) !m0 
U1842: MOVETOCREG_OR_DSZ64( , 0x00000018, 0x29d) !m1 

U1844: tmp0:= READURAM( , 0x0053, 64) 
U1845: tmp0:= OR_DSZ64(0x00000008, tmp0) 
U1846: WRITEURAM(tmp0, 0x0053, 32) 

U1848: tmp0:= BT_DSZ64(tmp0, 0x00000002) 
U1849: tmp0:= MOVEMERGEFLGS_DSZ32(0x0000000e, tmp0) 
U184a: tmp0:= CMOVCC_DSZ32_CONDB(tmp0, 0x00000000) SEQW SAVEUIP0 U184cSEQW GOTO U58c1

U184c: tmp15:= ZEROEXT_DSZ32(0x000000ed) SEQW GOTO U621d
U184d: LFNCEWAIT-> unk_e6b(tmp0, tmp2) 
U184e: tmp1:= SHR_DSZ64(tmp0, 0x00000028) 

U1850: LEA_DSZ8_ASZ32_SC1(tmp3) 
U1851: MOVETOCREG_DSZ64(tmp1, 0x73c) !m2 
U1852: tmp11:= RDSEGFLD(SS, FLGS) 

U1854: tmp11:= XOR_DSZ32(tmp11, tmp1) 
U1855: tmp11:= AND_DSZ32(0x00004000, tmp11) SEQW GOTO U3998
FUN_ucode_0001856:
U1856: tmp14:= READUIP_REGOVR(0x01) !m0 

U1858: LFNCEWTMRK-> tmp12:= LDZX_DSZ64_ASZ32_SC1(tmp5, mode=0x18) 
U1859: tmpv0:= READURAM( , 0x0057, 64) 
U185a: tmpv1:= READURAM( , 0x0010, 64) 

U185c: tmpv1:= AND_DSZ64(tmp12, tmpv1) 
U185d: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv1, U2c1d) 
U185e: tmp13:= ADD_DSZ32(0x00000001, tmp13) 

U1860: LFNCEWTMRK-> CMPUJZ_DIRECT_NOTTAKEN(tmpv0, U2c1d, tmp12) !m1 SEQW URET1
rdrand_impl:
U1861: tmp1:= READURAM( , 0x0035, 64) 
U1862: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U1866

U1864: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000037, U2769) !m0,m1 
U1865: SAVEUIP_REGOVR(0x01, U1866, 0x00c4) !m0 SEQW GOTO U1d8d
U1866: tmp1:= PORTIN_DSZ64_ASZ16_SC1(tmp2) 

U1868: tmp1:= OR_DSZ64(0x00000000, tmp1) 
U1869: tmp2:= SELECTCC_DSZ64_CONDZ(tmp1, 0x00000001) 
U186a: r64src:= ZEROEXT_DSZ32N(tmp1, r64src) !m1 

U186c: MOVEINSERTFLGS_DSZ32(tmp2) !m2 SEQW UEND0
U186d: SAVEUIP_REGOVR(0x01, U186e, 0x000d) !m0 SEQW GOTO U0d04
U186e: SAVEUIP( , 0x01, U3dec) !m0 

U1870: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U0ea1
U1871: LFNCEWAIT-> tmp11:= RDSEGFLD(UNK_SEG_09, LIMIT) 
U1872: MOVETOCREG_DSZ64(tmp11, 0x410) 

U1874: tmp11:= ADD_DSZ32(0x00000001, tmp11) 
U1875: MOVETOCREG_DSZ64(tmp11, 0x700) 
U1876: tmp11:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

U1878: LFNCEMARK-> MOVETOCREG_DSZ64(tmp11, 0x78e) SEQW URET1
U1879: tmp5:= ZEROEXT_DSZ32(0x0000187c) 
U187a: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4798

U187c: LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(0x00002803) 
U187d: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1881
U187e: tmp15:= READURAM( , 0x004c, 64) 

U1880: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000039, U1f90) !m2 
U1881: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4e81
U1882: tmp1:= READURAM( , 0x001f, 64) 

U1884: tmp1:= NOTAND_DSZ32(0x00000007, tmp1) 
U1885: WRITEURAM(tmp1, 0x001f, 32) !m2 
U1886: SAVEUIP( , 0x01, U2609) !m0 SEQW GOTO U2d5d

U1888: tmp1:= MOVE_DSZ64(rcx, rcx) 
U1889: tmp0:= SHR_DSZ64(tmp0, 0x00000030) 
U188a: tmp5:= TESTUSTATE(tmp0, UCODE, 0x0004) ? SEQW GOTO U188e

U188c: LFNCEMARK-> unk_25c(tmp1, tmp1) 
U188d: tmp0:= ADD_DSZ16(0x00000010, tmp5) 
U188e: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U1890: tmp6:= NOTAND_DSZ32(0x00030000, r11) 
U1891: unk_13f(tmp6) !m2 
U1892: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00b) 

FUN_ucode_0001894:
U1894: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp6, 0x7fe) 
U1895: tmp6:= SHL_DSZ32(tmp3, 0x00000005) SEQW GOTO U1d70
U1896: tmp0:= ZEROEXT_DSZ32(0x00002825) 

U1898: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U4e81
U1899: tmp1:= READURAM( , 0x001f, 64) 
U189a: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000024, U4e81) 

U189c: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000023, U1f90) !m0,m2 
U189d: tmp1:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1f91
U189e: tmp2:= READURAM( , 0x0043, 64) 

U18a0: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000001b, U4e82) !m0 SEQW GOTO U1f91
U18a1: tmp14:= AND_DSZ32(0x00000002, tmp14) 
U18a2: tmp15:= BTS_DSZ64(0x00000000, 0x0000003f) 

U18a4: tmp14:= SELECTCC_DSZ64_CONDZ(tmp14, tmp15) 
U18a5: tmp15:= PORTIN_DSZ64_ASZ16_SC1(0x5220) !m2 
U18a6: tmp15:= BTR_DSZ64(tmp15, 0x0000003f) 

U18a8: tmp15:= OR_DSZ64(tmp14, tmp15) 
U18a9: LFNCEMARK-> PORTOUT_DSZ64_ASZ16_SC1(0x5220,  , tmp15) !m2 SEQW URET1
U18aa: TESTUSTATE( , VMX, 0x1000) !m2 ? SEQW GOTO U7639

U18ac: WRITEURAM(tmp14, 0x0061, 64) 
U18ad: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000010, U7639) !m1,m2 
U18ae: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U7639

U18b0: TESTUSTATE( , SYS, !0x2000) !m0,m1 ? SEQW GOTO U7639
U18b1: tmp14:= MOVEFROMCREG_DSZ64( , 0x511) 
U18b2: tmp14:= NOTAND_DSZ32(0xfffffffffffff000, tmp14) 

U18b4: tmp15:= BT_DSZ32(tmp15, 0x00000001) 
U18b5: tmp14:= MOVEMERGEFLGS_DSZ32(tmp14, tmp15) 
U18b6: tmp15:= SHR_DSZ32(tmp15, 0x0000000b) 

U18b8: tmp15:= AND_DSZ32(0x0000001f, tmp15) 
U18b9: tmp15:= SUB_DSZ32(0x00000004, tmp15) 
U18ba: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp15, U7639) 

U18bc: tmp15:= unk_b2f(tmp14, tmp15) 
U18bd: tmp15:= OR_DSZ32(tmp15, tmp14) 
U18be: tmp15:= AND_DSZ32(0x0000000c, tmp15) 

U18c0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U7639) 
U18c1: tmp15:= SUB_DSZ32(0x00000080, tmp14) 
U18c2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U66ee) 

U18c4: tmp14:= SHL_DSZ32(tmp14, 0x00000002) 
U18c5: tmp15:= ZEROEXT_DSZ32(0x00000003) 
U18c6: LFNCEMARK-> tmp14:= OR_DSZ32(tmp15, tmp14) 

U18c8: tmp14:= SHL_DSZ64(tmp14, 0x00000030) 
U18c9: tmp15:= MOVEFROMCREG_DSZ64( , 0x513) 
U18ca: tmp15:= SHL_DSZ64(tmp15, 0x00000010) 

U18cc: tmp15:= SHR_DSZ64(tmp15, 0x00000010) 
U18cd: LFNCEWAIT-> MOVETOCREG_OR_DSZ64(tmp15, 0x513, tmp14) 
U18ce: tmp14:= READURAM( , 0x0061, 64) SEQW GOTO U2041

FUN_ucode_00018d0:
U18d0: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U18d1: tmp6:= NOTAND_DSZ64(0x01c00000, tmp6) 
U18d2: LFNCEMARK-> MOVETOCREG_DSZ64(tmp6, 0x00c) !m2 

U18d4: tmp6:= ZEROEXT_DSZ32(0x00000400) 
U18d5: tmp13:= MOVEFROMCREG_DSZ64( , 0x000) 
U18d6: tmp15:= READUIP_REGOVR(0x01) !m0 

U18d8: tmp14:= CONCAT_DSZ32(tmp14, tmp15) 
U18d9: tmp15:= AND_DSZ32(0x0000003f, tmp13) 
U18da: tmp15:= SUB_DSZ32(0x00000001, tmp15) 

U18dc: tmp15:= SUB_DSZ32(0x0000003d, tmp15) 
U18dd: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp15, U37f4) SEQW URET1
U18de: TESTUSTATE( , SYS, UST_VMX_DIS) !m1 ? SEQW GOTO U2769

U18e0: tmp0:= ZEROEXT_DSZ32(0x0000041b) 
U18e1: tmp4:= ZEROEXT_DSZ32(0x00000010) 
U18e2: TESTUSTATE( , SYS, !UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U2c16

U18e4: tmp5:= READURAM( , 0x003a, 64) 
U18e5: tmp5:= NOTAND_DSZ32(tmp5, 0x00000005) 
U18e6: TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW SAVEUIP0 U18e8? SEQW GOTO U5f29

U18e8: tmp4:= OR_DSZ32(tmp3, tmp5) 
U18e9: tmp1:= READURAM( , 0x0010, 64) 
U18ea: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U18ec: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U2711) 
U18ed: NOP 
U18ee: NOP 

U18f0: LFNCEMARK-> tmp2:= LDZX_DSZ64_ASZ32_SC1(tmp2, mode=0x18) 
U18f1: tmp3:= NOTAND_DSZ64(tmp1, tmp2) 
U18f2: NOP 

U18f4: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U04ae, tmp3) 
U18f5: NOP 
U18f6: NOP 

U18f8: LFNCEWAIT-> tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp3) 
U18f9: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U18fa: tmp4:= READURAM( , 0x0070, 64) 

U18fc: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000011, U04ae) 
U18fd: tmp4:= OR_DSZ32(0x00001000, tmp4) 
U18fe: tmp1:= SUB_DSZ64(0x00000001) 

U1900: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64(tmp0, 0x00000008, 0x6c3) 
U1901: WRITEURAM(tmp4, 0x0070, 32) 
U1902: MOVETOCREG_DSZ64(tmp4, 0x2c4, 32) !m1 

U1904: WRITEURAM(tmp3, 0x0049, 64) 
U1905: WRITEURAM(tmp3, 0x0057, 64) 
U1906: WRITEURAM(tmp1, 0x0056, 64) 

U1908: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b8, tmp3, tmp1) 
U1909: tmp1:= ZEROEXT_DSZ32(0x00000001) 
U190a: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp3, tmp1) SEQW GOTO U2eaa

U190c: tmp3:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U190d: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U190e: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U3200

U1910: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000b, U2711) !m0,m1 
U1911: tmp1:= XOR_DSZ32(tmp5, tmp3) 
U1912: tmp2:= SHR_DSZ32(tmp2, 0x00000017) 

U1914: tmp1:= AND_DSZ32(tmp2, tmp1) 
U1915: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U2711) !m1 
U1916: tmp1:= AND_DSZ32(0x00000400, tmp3) 

U1918: tmp5:= NOTAND_DSZ32(0x00000400, tmp5) 
U1919: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp5, 0x7ff, tmp1) !m2 SEQW GOTO U60d2
rsa_call_decypt:
U191a: tmp10:= ZEROEXT_DSZ64(tmp7) 

U191c: tmp5:= ZEROEXT_DSZ64(tmp7) 
U191d: tmp7:= ADD_DSZ64(tmp8, tmp7) 
U191e: tmp8:= SUB_DSZ64(tmp8) 

U1920: tmp9:= SUB_DSZ32(0x00000001, tmp9) 
U1921: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U1922) SEQW GOTO U69d0
U1922: tmp10:= ADD_DSZ64(0x00000104, tmp6) 

U1924: SAVEUIP( , 0x00, U2d72) SEQW GOTO U735c
U1925: tmp0:= READURAM( , 0x0053, 64) 
U1926: tmp0:= OR_DSZ32(0x00000001, tmp0) 

U1928: WRITEURAM(tmp0, 0x0053, 32) !m2 
U1929: tmp0:= ZEROEXT_DSZ32(0x00000009) SEQW SAVEUIP0 U192aSEQW GOTO U60aa
U192a: LFNCEWAIT-> tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 

U192c: tmp4:= ADD_DSZN(0x00000004, tmp4) !m1 
U192d: tmp4:= ADD_DSZN(tmp0, tmp4) !m1 SEQW GOTO U1ea6
U192e: SAVEUIP( , 0x00, U02f2) 

U1930: SAVEUIP_REGOVR(0x01, U1931, 0x0000) !m0 SEQW SAVEUIP1 U1931SEQW GOTO U02ea
U1931: tmp0:= RDSEGFLD(SS_USERM, FLGS) 
U1932: MOVETOCREG_DSZ64(tmp0, 0x73c) 

U1934: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000005, 0x79e) 
U1935: ZEROEXT_DSZ32( , rsp) SEQW SAVEUIP1 U1936SEQW GOTO U2d30
U1936: SYNCFULL-> MOVETOCREG_DSZ64(tmp6, 0x067) 

U1938: FETCHFROMEIP1_ASZ64( , tmp6) !m1 SEQW UEND0
U1939: tmp15:= SUB_DSZ32(0x00000492, tmp15) 
U193a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U193c) SEQW GOTO U2041

U193c: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 
U193d: MOVETOCREG_DSZ64(tmp15, 0x752) 
U193e: unk_256() !m1 

U1940: tmp14:= MOVEFROMCREG_DSZ64( , 0x067) 
U1941: tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 
U1942: tmp14:= SUB_DSZN(tmp15, tmp14) !m1 

U1944: MOVETOCREG_DSZ64(tmp14, 0x71a) 
U1945: SYNCFULL-> MOVETOCREG_DSZ64(tmp15, 0x71c) !m2 
U1946: tmp0:= unk_f3f(rsp) !m0,m1 SEQW UEND0

U1948: tmm0:= unk_73a() 
U1949: tmp1:= AND_DSZ16(0x00000020, tmp8) 
U194a: tmp4:= OR_DSZ8(tmp1, tmp12) 

U194c: tmp8:= OR_DSZ8(tmp4, tmp8) 
U194d: LFNCEWAIT-> tmp7:= MOVEFROMCREG_DSZ64( , 0x486) 
U194e: tmp5:= NOTAND_DSZ32(tmp7, tmp8) 

U1950: tmp5:= AND_DSZ32(0x0000003f, tmp5) 
U1951: tmp8:= NOTAND_DSZ16(0x00008080, tmp8) 
U1952: tmp10:= CMOVCC_DSZ16_CONDZ(tmp5, 0x00008080) 

U1954: tmp8:= OR_DSZ16(tmp8, tmp10) 
U1955: MOVETOCREG_DSZ64(tmp8, 0x48c) !m2 SEQW GOTO U21fe
FUN_ucode_0001956:
U1956: tmpv1:= ZEROEXT_DSZ32(0x00000502) 

U1958: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U1cbe
U1959: tmpv0:= READURAM( , 0x0012, 64) 
U195a: tmpv0:= BT_DSZ32(tmpv0, 0x00000002) 

U195c: tmp15:= READUIP_REGOVR(0x01) !m0 
U195d: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmpv0, tmp15) SEQW SAVEUIP1 U195eSEQW GOTO U6bfd
U195e: tmpv0:= ZEROEXT_DSZ8(tmp2) 

U1960: SAVEUIP( , 0x00, U03bc) SEQW GOTO U334d
U1961: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U1962: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U1964: tmp4:= NOTAND_DSZ16(0x00000600, tmp4) 
U1965: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000001, 0x48c) 
U1966: tmp6:= AND_DSZ32(0x00000001, tmp5) 

U1968: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U56de) 
U1969: tmp0:= unk_6a0() SEQW GOTO U17ec
U196a: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U196c: MOVETOCREG_BTS_DSZ64(tmp0, 0x0000000b, 0x6c3) !m0,m2 
U196d: SAVEUIP( , 0x00, U04d4) SEQW SAVEUIP1 U196eSEQW GOTO U0139
U196e: tmp15:= SUB_DSZ64(0x000001e0, tmp15) 

U1970: WRMSLOOPCTRFBR( , 0x00000017) SEQW SAVEUIP1 U1971SEQW GOTO U04dc
U1971: tmp9:= UFLOWCTRL( , tmp13, URET0) 
U1972: UFLOWCTRL(tmp9, tmp14, URET1) 

U1974: SYNCFULL-> UJMP( , tmp5) 
U1975: tmp1:= AND_DSZ32(0x00000007, tmp11) 
U1976: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U1978) SEQW SAVEUIP1 U1978SEQW GOTO U18d0

U1978: SAVEUIP( , 0x01, U060c) !m0 SEQW GOTO U6de0
patch_match_and_patch:
U1979: tmp1:= SHR_DSZ64(tmp0, 0x00000010) 
U197a: tmp0:= SHR_DSZ64(tmp0, 0x00000008) 

U197c: tmp1:= AND_DSZ32(0x0000ffff, tmp1) 
U197d: LFNCEWAIT-> MOVETOCREG_AND_DSZ64(tmp0, 0x0000001f, 0x6a0) !m0,m2 
U197e: tmp0:= READURAM( , 0x0021, 64) 

U1980: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U2539) !m1 
U1981: tmp0:= SHR_DSZ64(tmp0, 0x00000030) SEQW GOTO U253c
U1982: LFNCEWTMRK-> tmp14:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U1984: BTUJNB_DIRECT_NOTTAKEN(tmp14, 0x0000001f, U1985) !m0,m2 SEQW GOTO U1982
U1985: tmp4:= BTS_DSZ32(tmp4, 0x0000001f) 
U1986: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp10) !m2 

U1988: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp4) !m2 
U1989: LFNCEWTMRK-> tmp14:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U198a: BTUJNB_DIRECT_NOTTAKEN(tmp14, 0x0000001f, U198c) !m0,m2 SEQW GOTO U1989

U198c: SYNCFULL-> UJMP( , tmp13) 
U198d: SAVEUIP( , 0x00, U04d4) SEQW SAVEUIP1 U198eSEQW GOTO U0139
U198e: tmp15:= SHR_DSZ64(tmp13, 0x00000020) 

U1990: tmp15:= UFLOWCTRL( , tmp15, URET0) 
U1991: tmp14:= SHR_DSZ64(tmp14, 0x00000020) 
U1992: UFLOWCTRL(tmp15, tmp14, URET1) 

U1994: tmp15:= ZEROEXT_DSZ64(tmp13) 
U1995: tmp13:= SHR_DSZ64(tmp13, 0x00000020) 
U1996: UJMP( , tmp15) 

U1998: tmm4:= unk_624(tmm0, tmm0) 
U1999: tmm5:= unk_624(tmm1, tmm1) 
U199a: tmp0:= PINTMOVDTMM2I_DSZ32(tmm4) 

U199c: tmp1:= PINTMOVDTMM2I_DSZ32(tmm5) 
U199d: tmp0:= SHR_DSZ32(tmp0, 0x00000002) 
U199e: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 

U19a0: tmp2:= OR_DSZ32(tmp1, tmp0) 
U19a1: tmp2:= AND_DSZ32(0x0000000f, tmp2) 
U19a2: tmm6:= unk_704(mm2) 

U19a4: tmm6:= unk_620(tmm6) 
U19a5: tmp2:= PINTMOVDTMM2I_DSZ32(tmm6) 
U19a6: UJMP( , tmp2) 

patch_handle_0x3_m_and_p:
U19a8: tmp9:= ZEROEXT_DSZ32(0x00030300) 
U19a9: MOVETOCREG_DSZ64(tmp9, 0x6a1) !m2 
U19aa: LFNCEMARK-> tmp8:= MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) !m2 

U19ac: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U572d
U19ad: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 
U19ae: tmp4:= ADD_DSZN(0x00000008, tmp4) !m1 

U19b0: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U19b4
U19b1: STADSTGBUF_DSZ64_ASZ16_SC1(tmp3,  , tmp5) 
U19b2: tmp3:= ADD_DSZ32(0x00000020, tmp3) 

U19b4: MOVETOCREG_DSZ64(tmp5, 0x6a4) !m2 
U19b5: MOVETOCREG_SHR_DSZ64(tmp5, 0x0000001f, 0x6a4) !m0,m2 
U19b6: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U19ad

U19b8: MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 SEQW GOTO U1ea6
U19b9: tmp3:= SUB_DSZ64(tmp4, tmp0) 
U19ba: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 

U19bc: GENARITHFLAGS(tmp0, tmp3) !m2 
U19bd: tmp7:= SHR_DSZ64(tmp4, 0x00000020) 
U19be: tmp5:= CMOVCC_DSZ64_CONDZ(tmp1, tmp4) !m2 

U19c0: STAD_DSZ32_ASZ32_SC1(tmp2, mode=0x18,  , tmp5) !m1,m2 
U19c1: rax:= CMOVCC_DSZ64_CONDZ(rax, tmp6) !m2 
U19c2: rdx:= CMOVCC_DSZ64_CONDZ(rdx, tmp7) !m2 SEQW UEND0

FUN_ucode_00019c4:
U19c4: tmp1:= ZEROEXT_DSZ32(IMM_MACRO_12) !m0 
U19c5: tmp15:= SHL_DSZ32(tmp1, 0x00000011) 
U19c6: tmp3:= SELECTCC_DSZ32_CONDNB(tmp15, 0x0000000f) 

U19c8: tmp2:= SELECTCC_DSZ32_CONDNS(tmp15, 0x0000000f) 
U19c9: tmp3:= OR_DSZ32(tmp2, tmp3) 
U19ca: tmp2:= SELECTCC_DSZ32_CONDNS(tmp15, 0x00000002) 

U19cc: tmp2:= ADD_DSZ32(0x00000038, tmp2) 
U19cd: tmp2:= SELECTCC_DSZ32_CONDNB(tmp15, tmp2) 
U19ce: tmp15:= AND_DSZ32(tmp1, 0x000007ff) 

U19d0: tmp3:= CONCAT_DSZ8(tmp3, tmp2) 
U19d1: tmp3:= CONCAT_DSZ16(tmp15, tmp3) 
U19d2: tmp1:= CONCAT_DSZ32(tmp3, tmp1) 

U19d4: tmp1:= ZEROEXT_DSZ16( , tmp1) SEQW URET1
U19d5: SAVEUIP_REGOVR(0x01, U19d6, 0x0000) !m0 SEQW GOTO U00a1
patch_handle_0x6_crbus_write:
U19d6: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U19dc) !m2 

U19d8: tmp7:= MOVEFROMCREG_DSZ64( , tmp3) 
U19d9: tmp7:= AND_DSZ64(tmp5, tmp7) 
U19da: tmp6:= OR_DSZ64(tmp6, tmp7) 

U19dc: MOVETOCREG_DSZ64(tmp6, tmp3) !m2 
U19dd: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U19d5
U19de: tmp1:= ZEROEXT_DSZ32(0x0000aec0) 

U19e0: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U1ea6
U19e1: tmp6:= MOVEFROMCREG_DSZ64( , 0x707) 
U19e2: tmp7:= MOVEFROMCREG_DSZ64( , 0x706) 

U19e4: tmp6:= CONCAT_DSZ32(tmp6, tmp7) 
U19e5: STADSTGBUF_DSZ64_ASZ16_SC1(tmp1,  , tmp6) SEQW GOTO U1ea6
U19e6: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x50c0) !m2 

U19e8: tmp11:= SUB_DSZ32(0xffffffff, tmp11) 
U19e9: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp11, U0d30) 
U19ea: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x50c0) !m2 

U19ec: LFNCEWAIT-> tmp11:= SHL_DSZ64(tmp11, 0x00000008) 
U19ed: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp4, tmp5) 
U19ee: tmp5:= SHR_DSZ64(tmp5, 0x00000020) 

U19f0: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, 0x00000004, tmp4, tmp5) SEQW GOTO U0d30
U19f1: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x000) !m2 
U19f2: tmp0:= BTS_DSZ32(tmp0, 0x0000000c) 

U19f4: tmp0:= NOTAND_DSZ32(0x00000c00, tmp0) 
U19f5: WRITEURAM(tmp0, 0x0023, 32) !m2 
U19f6: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 

U19f8: tmp6:= OR_DSZ32(0x00000048) 
U19f9: tmp2:= unk_203( , 0x00000001) 
U19fa: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U2011) SEQW GOTO U2019

U19fc: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U19fd: tmp13:= NOTAND_DSZ64(0x01c00000, tmp6) 
U19fe: LFNCEMARK-> MOVETOCREG_DSZ64(tmp13, 0x00c) !m2 

U1a00: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U1a0c
U1a01: tmp14:= READUIP_REGOVR(0x01) !m0 
U1a02: NOP 

U1a04: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000016, U1a05) !m0,m2 SEQW GOTO U1a0c
U1a05: NOP 
U1a06: NOP 

U1a08: tmp7:= unk_04d( , IMM_MACRO_30) !m0 SEQW GOTO U5e06
U1a09: tmp14:= SHR_DSZ64(tmp14, 0x00000020) 
U1a0a: SYNCFULL-> UFLOWCTRL( , tmp14, URET1) 

U1a0c: NOP SEQW GOTO U18d4
U1a0d: tmp1:= SHR_DSZ32(tmp1, 0x0000000f) 
U1a0e: tmp1:= AND_DSZ32(0x00000010, tmp1) 

U1a10: tmp0:= OR_DSZ32(tmp1, tmp0) 
U1a11: tmp1:= MOVEFROMCREG_DSZ64( , 0x79e) 
U1a12: tmp1:= NOTAND_DSZ32(tmp1, 0x00000003) 

U1a14: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x00000004) 
U1a15: tmp0:= OR_DSZ32(tmp1, tmp0) 
U1a16: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp0, 0x00000001, 0x510) !m2 SEQW GOTO U2730

U1a18: SAVEUIP( , 0x00, U3bc4) 
U1a19: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000012, U4481) !m0 
U1a1a: LFNCEMARK-> tmp11:= AND_DSZ32(0x0000001f, tmp11) 

U1a1c: LFNCEWAIT-> TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U0151
U1a1d: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW URET0
U1a1e: tmp3:= READURAM( , 0x0011, 64) 

U1a20: tmp13:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000e8, mode=0x01, tmp3) 
U1a21: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000f0, mode=0x01, tmp3) 
U1a22: SAVEUIP( , 0x00, U3bbd) 

FUN_ucode_0001a24:
U1a24: tmp13:= AND_DSZ32(tmp13, tmp11) 
U1a25: tmp3:= XOR_DSZ32(tmp3, tmp13) 
U1a26: tmp13:= READURAM( , 0x0014, 64) 

U1a28: tmp3:= SELECTCC_DSZ32_CONDZ(tmp3, 0x00000001) SEQW URET0
U1a29: tmp5:= ZEROEXT_DSZ32(0x00001a2c) 
U1a2a: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4798

U1a2c: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1a2d: tmp14:= SAVEUIP(0x01, U1a32) !m0 
U1a2e: tmp10:= READAFLAGS( , tmp10) !m2 SEQW SAVEUIP0 U1a30SEQW GOTO U0d82

U1a30: SAVEUIP( , 0x01, U063c) !m0 
U1a31: SAVEUIP_REGOVR(0x00, U1a32, 0x0000) SEQW GOTO U5c7d
U1a32: tmp2:= ZEROEXT_DSZ8(tmp2) 

U1a34: tmp1:= CONCAT_DSZ8(0x00000000, tmp2) 
U1a35: SAVEUIP_REGOVR( , 0x01, U1a36, 0xc935) !m0 SEQW GOTO U3881
U1a36: tmp9:= ZEROEXT_DSZ32(tmp10) 

U1a38: tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 
U1a39: LFNCEWAIT-> tmp14:= MOVETOCREG_DSZ64(0x00000009, 0x000) 
U1a3a: tmp12:= MOVETOCREG_DSZ64( , 0x00000000, 0x065) SEQW GOTO U2685

U1a3c: tmp12:= ZEROEXT_DSZ32() 
U1a3d: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U1a3e: tmp5:= ZEROEXT_DSZ32(0x00001a41) 

U1a40: tmp3:= TESTUSTATE(tmp8, SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4798
U1a41: tmp8:= ZEROEXT_DSZ64(tmp3) 
U1a42: SYNCFULL-> MOVETOCREG_DSZ64(tmp12, 0x6c5) 

U1a44: tmp9:= READURAM( , 0x001f, 64) 
U1a45: tmp9:= AND_DSZ32(0x00000100, tmp9) 
U1a46: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U1254

U1a48: SAVEUIP_REGOVR(0x01, U1a49, 0x0000) !m0 SEQW GOTO U2931
U1a49: NOP 
U1a4a: NOP 

U1a4c: NOP SEQW GOTO U3a64
U1a4d: tmp8:= ZEROEXT_DSZ32(0x00000401) 
U1a4e: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000000, U0e2e) 

U1a50: tmp8:= ZEROEXT_DSZ32(0x00000403) 
U1a51: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000001, U0e2e) 
U1a52: tmp8:= ZEROEXT_DSZ32(0x00000703) 

U1a54: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000002, U0e2e) !m0 
U1a55: tmp8:= ZEROEXT_DSZ32(0x00002389) 
U1a56: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000003, U0e30) !m0 SEQW GOTO U03e4

U1a58: SYNCWAIT-> tmp8:= unk_cc6(rsi, tmp1) !m0 
U1a59: tmp8:= unk_cce(rdi, tmp1) !m0 
U1a5a: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, IMM_MACRO_01) !m0 

U1a5c: tmp8:= unk_cc6(rsi, tmp1) !m0 
U1a5d: tmp8:= unk_cce(rdi, tmp1) !m0 
U1a5e: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U1a58

U1a60: tmp15:= SUB_DSZN(tmp4) !m1 
U1a61: tmp15:= SHL_DSZ32(tmp15, 0x00000004) 
U1a62: rsi:= ADDSUB_DSZ16_CONDD(tmp15, rsi) !m1 

U1a64: rdi:= ADDSUB_DSZ16_CONDD(tmp15, rdi) !m1 
U1a65: tmp15:= SHR_DSZ32(tmp15, tmp2) 
U1a66: rcx:= SUB_DSZN(tmp15, rcx) !m1 

U1a68: tmp1:= ZEROEXT_DSZ32() 
U1a69: tmp4:= ZEROEXT_DSZ32() SEQW URET1
caseD_1a6a:
U1a6a: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U38e4

U1a6c: tmp2:= MOVEFROMCREG_DSZ64( , 0x562) 
U1a6d: tmp2:= NOTAND_DSZ64(0x00000fff, tmp2) 
U1a6e: TESTUSTATE( , UCODE, 0x1000) ? SEQW GOTO U38de

U1a70: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U1aa4
U1a71: tmp0:= READURAM( , 0x0077, 64) 
U1a72: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000022, U38de) !m0,m1,m2 

U1a74: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x50dc) !m2 
U1a75: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U38de) !m1,m2 
U1a76: TESTUSTATE( , SYS, !UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U38de

U1a78: tmp0:= MOVEFROMCREG_DSZ64( , 0x563) 
U1a79: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000000b, U38de) !m0,m1,m2 
U1a7a: tmp0:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 

U1a7c: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U38de) !m1,m2 
U1a7d: tmp3:= MOVEFROMCREG_DSZ64( , 0x105) 
U1a7e: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000002, U38de) !m0,m1,m2 

U1a80: tmp0:= ZEROEXT_DSZ32(0x00000008) SEQW SAVEUIP0 U1a81SEQW GOTO U60aa
U1a81: tmp7:= AND_DSZ32(0x00ff0000, tmp7) 
U1a82: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U38de) 

U1a84: SAVEUIP_REGOVR(0x01, U1a85, 0x0f20) !m0 SEQW GOTO U1ab6
U1a85: tmp3:= ADD_DSZ64(0x00001000, tmp2) 
U1a86: tmp0:= CONCAT_DSZ32(rdx, rax) 

U1a88: tmp0:= ZEROEXT_DSZ64N(tmp0) !m1 
U1a89: tmp7:= MOVEFROMCREG_DSZ64( , 0x563) 
U1a8a: tmp7:= NOTAND_DSZ64(0x00000fff, tmp7) 

U1a8c: tmp15:= ADD_DSZ64(tmp5, tmp3) 
U1a8d: tmp15:= AND_DSZ64(tmp7, tmp15) 
U1a8e: tmp7:= AND_DSZ64(tmp7, tmp2) 

U1a90: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, U38d9, tmp7) !m1,m2 
U1a91: tmp15:= ADD_DSZN(tmp5, tmp0) !m1 
U1a92: tmp15:= TEST_DSZ64(tmp15, tmp15) 

U1a94: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U38d9) 
U1a95: LFNCEMARK-> MOVETOCREG_DSZ64(0x00000015, 0x000) !m2 
U1a96: tmp1:= LDZX_DSZ32_ASZ32_SC1(tmp0) 

U1a98: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp3, mode=0x01,  , tmp1) 
U1a99: tmp6:= ZEROEXT_DSZ32(0x00000004) 
U1a9a: LFNCEWAIT-> tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp0, tmp6) 

U1a9c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp3, mode=0x01, tmp6, tmp1) 
U1a9d: tmp6:= ADD_DSZ32(0x00000008, tmp6) 
U1a9e: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, U1aa0, tmp6) !m2 SEQW GOTO U1a9a

U1aa0: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 
U1aa1: LBSYNC(0x00000001) 
U1aa2: LFNCEMARK-> LBSYNC(0x00000001) 

U1aa4: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2dd) !m1,m2 
U1aa5: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000018, mode=0x01,  , tmp3) 
U1aa6: tmp3:= ADD_DSZ64(tmp5, tmp3) 

U1aa8: WRITEURAM(tmp3, 0x0015, 64) !m2 
U1aa9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000020, mode=0x01,  , 0x00000000) SEQW GOTO U1ea6
U1aaa: tmp1:= ZEROEXT_DSZ32(0x0000000f) 

U1aac: tmp3:= unk_222(tmp1) 
U1aad: tmp2:= ZEROEXT_DSZ32(0x0000000f) 
U1aae: tmp2:= unk_222(tmp2) 

U1ab0: tmp0:= CONCAT_DSZ8(tmp2, tmp3) 
U1ab1: tmp0:= CONCAT_DSZ16(tmp1, tmp0) 
U1ab2: tmp2:= MOVEFROMCREG_DSZ64( , 0x7e0, 32) !m1 

U1ab4: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U1ab5: tmp2:= SHL_DSZ64(tmp2, 0x00000001) SEQW GOTO U7784
FUN_ucode_0001ab6:
U1ab6: tmp14:= READUIP_REGOVR(0x01) !m0 

U1ab8: tmpv1:= MOVEFROMCREG_DSZ64( , 0x562) 
U1ab9: tmpv1:= NOTAND_DSZ64(0x00000fff, tmpv1) 
U1aba: tmpv0:= LDPPHYS_DSZ32_ASZ64_SC1(tmpv1, mode=0x01) !m2 

U1abc: tmpv2:= ZEROEXT_DSZ32(0x00000001) 
U1abd: STADPPHYS_DSZ32_ASZ64_SC1(tmpv1, mode=0x01,  , tmpv2) !m2 
U1abe: SYNCFULL-> CMPUJNZ_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U1aba) !m2 

U1ac0: tmpv2:= READURAM( , 0x0053, 64) 
U1ac1: unk_963(tmpv2, 0x00008253) SEQW URET1
U1ac2: SAVEUIP_REGOVR(0x01, U1ac4, 0x0000) !m0 SEQW GOTO U0a95

U1ac4: SAVEUIP_REGOVR( , 0x01, U1ac5, 0xc935) !m0 SEQW GOTO U0d52
U1ac5: tmp2:= ZEROEXT_DSZ32(0x00000006) 
U1ac6: tmp1:= ZEROEXT_DSZ32(0x70000000) 

U1ac8: tmp3:= ZEROEXT_DSZ32(0x00000080) 
U1ac9: tmp12:= ZEROEXT_DSZ32() 
U1aca: SAVEUIP_REGOVR(0x01, U1acc, 0x0008) !m0 SEQW GOTO U2b15

U1acc: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x63a) 
U1acd: WRMSLOOPCTRFBR( , 0x0000017f) 
U1ace: NOP 

U1ad0: LFNCEWAIT-> unk_def(tmp2) 
U1ad1: tmp2:= ADD_DSZ32(0x00000040, tmp2) 
U1ad2: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1ad0

U1ad4: ROVR<- UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp12, tmp12) SEQW SAVEUIP1 U1ad5SEQW GOTO U32cd
U1ad5: tmp6:= MOVEFROMCREG_DSZ64( , 0x39e, 32) !m1 
U1ad6: tmp5:= MOVEFROMCREG_DSZ64( , 0x6c5) 

U1ad8: tmp5:= NOTAND_DSZ32(0x00000008, tmp5) 
U1ad9: tmp15:= AND_DSZ32(0x00400000, tmp6) 
U1ada: tmp15:= SHR_DSZ32(tmp15, 0x00000013) 

U1adc: SYNCMARK-> MOVETOCREG_OR_DSZ64(tmp5, 0x6c5, tmp15) !m2 
U1add: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
U1ade: BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x00000008, U1ae0) !m2 SEQW GOTO U1ae9

U1ae0: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000001c, U1ae4) !m2 
U1ae1: tmp7:= SUB_DSZ32(0x0000112e, tmp14) 
U1ae2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U1b04) 

U1ae4: WRITEURAM(tmp6, 0x0073, 64) !m2 
U1ae5: ROVR<- tmp3:= STC(tmp3) SEQW SAVEUIP1 U1ae6SEQW GOTO U32cd
U1ae6: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp6, 0x00000008, 0x39e) !m1,m2 

U1ae8: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
U1ae9: tmp6:= AND_DSZ32(0x000000ff, tmp6) 
U1aea: tmp6:= unk_222(tmp6) 

U1aec: tmp6:= ADD_DSZ32(tmp6, tmp6) 
U1aed: tmp8:= ZEROEXT_DSZ32(tmp1) 
U1aee: tmp1:= ZEROEXT_DSZ32(tmp8) 

U1af0: tmp8:= ADD_DSZ32(0x00040000, tmp8) 
U1af1: tmp6:= SUB_DSZ32(0x00000001, tmp6) 
U1af2: WRMSLOOPCTRFBR( , 0x000003ff) 

U1af4: unk_fdf(tmp1) 
U1af5: tmp1:= ADD_DSZ32(0x00000040, tmp1) 
U1af6: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1af4

U1af8: SYNCWAIT-> TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U1b00
U1af9: WRMSLOOPCTRFBR( , 0x000003ff) 
U1afa: NOP 

U1afc: unk_fdf(tmp1) 
U1afd: tmp1:= ADD_DSZ32(0x00000040, tmp1) 
U1afe: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1afc

U1b00: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U1b01) SEQW GOTO U1aee
U1b01: NOP 
U1b02: NOP 

U1b04: SAVEUIP_REGOVR(0x01, U1b05, 0x0006) !m0 SEQW GOTO U2b15
U1b05: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp12, tmp14) 
U1b06: SYNCFULL-> unk_fcf(tmp3) 

U1b08: SAVEUIP_REGOVR(0x01, U1b09, 0x0006) !m0 SEQW GOTO U2b15
U1b09: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp3, U039a) 
U1b0a: UJMP( , tmp14) 

U1b0c: tmp1:= MOVE_DSZ32(0x0000008b) 
U1b0d: tmp1:= CONCAT_DSZ16(tmp1, 0x00001b0c) 
U1b0e: WRITEURAM(tmp1, 0x0007, 32) !m2 SEQW SAVEUIP0 U1b10SEQW GOTO U04fc

U1b10: tmp1:= READURAM( , 0x001f, 64) 
U1b11: tmp1:= OR_DSZ32(0x00000003, tmp1) 
U1b12: WRITEURAM(tmp1, 0x001f, 32) !m2 SEQW SAVEUIP1 U1b14SEQW GOTO U2170

U1b14: tmp2:= ZEROEXT_DSZ32(0x00000600) 
U1b15: MOVETOCREG_DSZ64(tmp2, 0x2f1, 32) !m1,m2 
U1b16: SIGEVENT( , 0x0000000b) 

U1b18: tmp7:= ZEROEXT_DSZ32() 
U1b19: tmp9:= ZEROEXT_DSZ32(0x007dafdf) 
U1b1a: tmp9:= CONCAT_DSZ32(tmp9, 0x00001615) 

U1b1c: SYNCFULL-> MOVETOCREG_BTS_DSZ64( , 0x0000000c, 0x29e) !m1,m2 
U1b1d: tmp8:= ZEROEXT_DSZ32(0x00000008) 
U1b1e: tmp11:= ZEROEXT_DSZ32(0x00061101) 

U1b20: SAVEUIP( , 0x00, U40ac) SEQW GOTO U669c
U1b21: tmp0:= NOTAND_DSZ64(0x00000fff, tmp0) 
U1b22: tmp7:= AND_DSZ64(tmp0, tmp6) 

U1b24: tmp13:= MOVEFROMCREG_DSZ64( , 0x574) 
U1b25: tmp13:= AND_DSZ64(tmp0, tmp13) 
U1b26: CMPUJNZ_DIRECT_NOTTAKEN(tmp7, U1b2a, tmp13) !m2 

U1b28: tmp6:= MOVEFROMCREG_DSZ64( , 0x51b) 
U1b29: MOVETOCREG_OR_DSZ64(tmp6, 0x00000003, 0x513) !m0,m2 
U1b2a: tmp5:= SAVEUIP( , 0x00, U0c52) SEQW GOTO U5ee8

U1b2c: tmp2:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1b2d: tmp3:= BTR_DSZ32(tmp2, 0x00000012) 
U1b2e: tmp1:= MOVEFROMCREG_DSZ64( , 0x79e) 

U1b30: tmp1:= SUB_DSZ64(0x00000003, tmp1) 
U1b31: tmp3:= MOVEMERGEFLGS_DSZ64(tmp3, tmp1) 
U1b32: tmp3:= CMOVCC_DSZ64_CONDZ(tmp3, tmp2) 

U1b34: LFNCEMARK-> MOVETOCREG_DSZ64(tmp3, 0x7fe) !m2 
U1b35: tmp10:= ZEROEXT_DSZ16(tmp10) 
U1b36: SIGEVENT( , 0x00000013) 

U1b38: tmp0:= unk_88f(tmp11) !m0,m1 
U1b39: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U1b3a: LFNCEWAIT-> tmp0:= unk_ccc(tmp0) 

U1b3c: tmm7:= FMOV(0x00000011) !m0 
U1b3d: tmp0:= ADD_DSZN(tmp0, 0x0000000a) !m1 
U1b3e: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U1b3a

U1b40: MOVETOCREG_DSZ64(tmp2, 0x7fe) !m2 SEQW GOTO U0078
U1b41: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000003, 0x29d) !m0,m1 
U1b42: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 

U1b44: SAVEUIP_REGOVR(0x01, U1b45, 0x0210) !m0 SEQW GOTO U281d
U1b45: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000001) 
U1b46: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000006, 0x6c5) !m0,m2 

U1b48: tmp13:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x0000001c, mode=0x01) 
U1b49: tmp14:= ZEROEXT_DSZ32(0x0000112e) 
U1b4a: SAVEUIP( , 0x01, U1ac5) !m0 SEQW GOTO U5b56

U1b4c: tmp2:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1b4d: tmp3:= BTR_DSZ32(tmp2, 0x00000012) 
U1b4e: tmp1:= MOVEFROMCREG_DSZ64( , 0x79e) 

U1b50: tmp1:= SUB_DSZ64(0x00000003, tmp1) 
U1b51: tmp3:= MOVEMERGEFLGS_DSZ64(tmp3, tmp1) 
U1b52: tmp3:= CMOVCC_DSZ64_CONDZ(tmp3, tmp2) 

U1b54: LFNCEMARK-> MOVETOCREG_DSZ64(tmp3, 0x7fe) !m2 
U1b55: tmm2:= unk_73a() 
U1b56: SIGEVENT( , 0x00000013) 

U1b58: tmp5:= unk_88f(tmp11) !m0,m1 
U1b59: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U1b5a: LFNCEWAIT-> tmp0:= unk_cf7(tmp5) 

U1b5c: tmm7:= FMOV(0x00000011) !m0 
U1b5d: tmp5:= ADD_DSZN(tmp5, 0x0000000a) !m1 
U1b5e: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U1b5a

U1b60: MOVETOCREG_DSZ64(tmp2, 0x7fe) !m2 SEQW GOTO U2ba5
U1b61: LFNCEMARK-> tmp4:= LDZX_DSZ32_ASZ32_SC1(tmp11, 0x00000018, mode=0x18) 
U1b62: tmp9:= SHR_DSZ32(tmp0, 0x00000010) 

U1b64: LDHINT_BUFFER_ASZ32_SC1(tmp11) 
U1b65: tmp2:= NOTAND_DSZ32(tmp2, 0x00000200) 
U1b66: tmp3:= AND_DSZ32(0xffff0000, tmp4) 

U1b68: tmm5:= unk_707(mm4) 
U1b69: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U2711) 
U1b6a: tmp13:= SAVEUIP(0x00, U405e) SEQW GOTO U6d48

U1b6c: tmp1:= AND_DSZ32(0x00000004, tmp2) 
U1b6d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U17ec) 
U1b6e: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U1b70: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U1b71: LFNCEMARK-> tmp4:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000020, 0x48c) !m2 
U1b72: tmp1:= AND_DSZ32(0x00000020, tmp5) 

U1b74: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U1b75) SEQW GOTO U1b78
U1b75: tmp1:= OR_DSZ16(0x00008080, tmp4) 
U1b76: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x48c) 

U1b78: tmp1:= SUB_DSZ32(0x0000fffd, tmp0) 
U1b79: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U1b7a) SEQW GOTO U6ad2
U1b7a: tmp1:= SUB_DSZ32(0x0000ffbb, tmp0) 

U1b7c: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U1b7d) SEQW GOTO U3fcd
U1b7d: NOP 
U1b7e: NOP 

U1b80: mm0:= unk_6a1(tmm7, 0x00000000) !m2 SEQW GOTO U17ec
U1b81: tmp2:= RDSEGFLD(UNK_SEG_04, SEL) 
U1b82: tmp7:= NOTAND_DSZ32(0x00000007, tmp2) 

U1b84: unk_d62(tmp7) 
U1b85: tmp2:= RDSEGFLD(TSS, SEL) 
U1b86: tmp7:= NOTAND_DSZ32(0x00000007, tmp2) 

U1b88: unk_d62(tmp7) 
U1b89: tmp2:= RDSEGFLD(UNK_SEG_04, SEL) 
U1b8a: tmp13:= ZEROEXT_DSZ16(0x00003cd2) SEQW GOTO U46f9

U1b8c: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U1b8d: unk_eff() 
U1b8e: SAVEUIP_REGOVR(0x01, U1b90, 0x0008) !m0 SEQW GOTO U2b15

U1b90: tmp0:= BTR_DSZ64(tmp0, 0x0000002b) 
U1b91: WRITEURAM(tmp0, 0x005c, 64) 
U1b92: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1b98

U1b94: tmp0:= ZEROEXT_DSZ32(0x00000027) 
U1b95: tmp3:= ZEROEXT_DSZ32(0x0000001d) 
U1b96: SAVEUIP_REGOVR(0x01, U1b98, 0x00f3) !m0 SEQW GOTO U1d8e

U1b98: TESTUSTATE( , UCODE, !0x3000) !m0 ? SEQW GOTO U2ebd
U1b99: tmp0:= OR_DSZN(rcx) !m1 
U1b9a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 

U1b9c: unk_cfd(rax) 
U1b9d: MOVE_DSZ32() 
U1b9e: LFNCEMARK-> LBSYNC(0x00000002) 

U1ba0: LFNCEWAIT-> unk_256() !m1 SEQW UEND0
U1ba1: tmp9:= SHR_DSZ64(tmp7, 0x00000020) 
U1ba2: tmp7:= TESTUSTATE(tmp7, SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3210

U1ba4: tmp5:= READURAM( , 0x0085, 64) 
U1ba5: tmp6:= READURAM( , 0x0086, 64) SEQW SAVEUIP0 U1ba6SEQW GOTO U3044
U1ba6: tmp4:= SUB_DSZ64(tmp6, tmp2) 

U1ba8: tmp4:= SUB_DSZ64(tmp7, tmp4) 
U1ba9: tmp8:= SUB_DSZ64(tmp5, tmp2) 
U1baa: tmp8:= SUB_DSZ64(tmp9, tmp8) 

U1bac: tmp10:= MOVEMERGEFLGS_DSZ64(tmp5, tmp4) 
U1bad: tmp10:= CMOVCC_DSZ64_CONDBE(tmp10, tmp2) 
U1bae: tmp4:= SUB_DSZ64(tmp5, tmp10) 

U1bb0: tmp4:= MOVEMERGEFLGS_DSZ64(tmp4, tmp8) 
U1bb1: tmp4:= CMOVCC_DSZ64_CONDNBE(tmp4, 0x00000001) 
U1bb2: tmp4:= OR_DSZ64(tmp4, tmp4) 

U1bb4: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U4e82) 
U1bb5: WRITEURAM(tmp10, 0x0085, 64) !m2 
U1bb6: SYNCMARK-> WRITEURAM(tmp2, 0x0086, 64) !m2 SEQW GOTO U3210

U1bb8: LFNCEWAIT-> unk_256() !m1 
U1bb9: tmp6:= SHR_DSZ64(tmp6, 0x0000001c) 
U1bba: tmp6:= AND_DSZ64(0x00000fff, tmp6) 

U1bbc: tmp8:= ADD_DSZN(tmp11, tmp6) !m1 
U1bbd: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000008, U1bbe) !m2 SEQW GOTO U008e
U1bbe: unk_256() !m1 

U1bc0: tmp0:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U1bc1: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000d, U17ec) !m2 
U1bc2: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f0) 

U1bc4: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U2711) !m1 
U1bc5: tmp0:= READURAM( , 0x003a, 64) 
U1bc6: tmp0:= SHR_DSZ64(tmp0, 0x00000018) 

U1bc8: tmp0:= AND_DSZ64(0x00000100, tmp0) 
U1bc9: tmp0:= NOTAND_DSZ64(tmp4, tmp0) 
U1bca: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U1bcc) SEQW GOTO U008e

U1bcc: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp4, 0x00000008, U45b1) 
U1bcd: SAVEUIP( , 0x01, U008e) !m0 SEQW GOTO U5f31
U1bce: tmp0:= BTR_DSZ32(tmp11, 0x0000001f) 

U1bd0: tmp0:= SUB_DSZ32(0x00000008, tmp0) 
U1bd1: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp0) 
U1bd2: tmp11:= CMOVCC_DSZ32_CONDNBE(tmp2, tmp11) 

U1bd4: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp0, U478e) 
U1bd5: LFNCEMARK-> tmp0:= SHL_DSZ32(tmp11, 0x00000003) 
U1bd6: tmp1:= ADD_DSZ32(tmp0, 0x000021a4) 

U1bd8: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, tmp1) 
U1bd9: rax:= ZEROEXT_DSZ16(0x00000008, tmp11) SEQW GOTO U17ec
U1bda: tmpv0:= SUB_DSZ32(0x00000001) 

U1bdc: tmpv0:= NOTAND_DSZ32(0x00000020, tmpv0) 
U1bdd: MOVETOCREG_DSZ64(tmpv0, 0x2c4, 32) !m1,m2 
U1bde: tmpv0:= READURAM( , 0x0020, 64) 

U1be0: tmpv0:= BT_DSZ64(tmpv0, 0x00000001) 
U1be1: tmpv0:= SELECTCC_DSZ64_CONDNB(tmpv0, 0x00003b00) 
U1be2: STADSTGBUF_DSZ64_ASZ16_SC1(tmpv0, 0x00000020,  , tmp14) 

U1be4: tmpv0:= ZEROEXT_DSZ32(0x00005d15) 
U1be5: tmpv0:= CONCAT_DSZ16(0x000000ee, tmpv0) 
U1be6: WRITEURAM(tmpv0, 0x0007, 32) !m2 SEQW GOTO U5d1e

U1be8: tmp4:= WRMSLOOPCTRFBR() !m0 
U1be9: tmp2:= CONCAT_DSZ32(0x00010000, tmp2) 
U1bea: tmp0:= ADDSUB_DSZ16_CONDD(0x00000001) 

U1bec: tmp0:= SELECTCC_DSZ32_CONDNS(tmp0, 0x00000001) 
U1bed: tmp0:= SUB_DSZN(tmp0, rcx) !m1 
U1bee: tmp0:= SUB_DSZN(0x00008000, tmp0) !m1 

U1bf0: tmp14:= SUB_DSZN(0x00008001, tmp0) !m1 
U1bf1: tmp14:= MOVEMERGEFLGS_DSZ32(0x00001be8, tmp14) 
U1bf2: tmp14:= CMOVCC_DSZ32_CONDNB(tmp14, 0x00006858) 

U1bf4: tmp15:= MOVEMERGEFLGS_DSZ32(0x0000045e, tmp0) 
U1bf5: tmp14:= CMOVCC_DSZ32_CONDZ(tmp15, tmp14) 
U1bf6: tmp1:= SAVEUIP( , 0x01, U068e) !m0 

U1bf8: UFLOWCTRL( , tmp14, URET1) 
U1bf9: SYNCWAIT-> STAD_DSZN_ASZ32_SC1(rdi, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x08, tmp1, rax) !m0,m1 
U1bfa: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, IMM_MACRO_01) !m0 

U1bfc: STAD_DSZN_ASZ32_SC1(rdi, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x08, tmp1, rax) !m0,m1 
U1bfd: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U1bf9
U1bfe: tmp15:= SUB_DSZN(tmp4) !m1 

U1c00: tmp15:= SHL_DSZ32(tmp15, tmp2) SEQW GOTO U1a64
U1c01: tmp4:= OR_DSZN(rcx) !m1 
U1c02: SIGEVENT( , 0x0000002f) 

U1c04: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U0466) 
U1c05: unk_c02(rdi) !m1 SEQW SAVEUIP1 U1c06SEQW GOTO U7615
U1c06: LFNCEWAIT-> STAD_DSZN_ASZ32_SC1(rdi, mode=0x08,  , tmp0) !m1 

U1c08: tmp4:= SUB_DSZN(0x00000001, tmp4) !m1 
U1c09: rcx:= ZEROEXT_DSZ16N(tmp4, rcx) !m1 
U1c0a: MSLOOP-> rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 SEQW GOTO U1c04

U1c0c: tmp9:= AND_DSZ64(0x00000fbf, tmp4) 
U1c0d: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, 0x0000001e, U1c0e) !m0,m2 SEQW GOTO U1c10
U1c0e: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, 0x00000018, U082e) 

U1c10: tmp9:= READURAM( , 0x0010, 64) 
U1c11: tmp10:= ZEROEXT_DSZ16( , tmp9) 
U1c12: tmp10:= AND_DSZ64(tmp4, tmp10) 

U1c14: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U082e) 
U1c15: tmp9:= SHR_DSZ64(tmp4, 0x0000000b) 
U1c16: tmp9:= OR_DSZ32(0x00000001, tmp9) 

U1c18: tmp4:= ZEROEXT_DSZ32(0x00000003) 
U1c19: SAVEUIP( , 0x00, U043c) 
U1c1a: SAVEUIP( , 0x01, U17ec) !m0 

U1c1c: tmp9:= unk_163(tmp4, tmp9) 
U1c1d: tmp14:= READUIP_REGOVR(0x01) !m0 
U1c1e: LFNCEMARK-> tmp4:= MOVEFROMCREG_DSZ64( , 0x79d) SEQW SAVEUIP1 U1c20

U1c20: tmp9:= AND_DSZ32(0x0000000f, tmp9) 
U1c21: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U5775) 
U1c22: tmp7:= unk_1d7(tmp9) 

U1c24: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp7, 0x79d) 
U1c25: tmp9:= BTR_DSZ32(tmp9, tmp7) SEQW URET0
U1c26: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U1c29

U1c28: TESTUSTATE( , UCODE, 0x0044) ? SEQW GOTO U1c32
U1c29: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U1c2a: tmp0:= NOTAND_DSZ32(0x00000003, tmp0) 

U1c2c: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x285, 32) !m1 
U1c2d: MOVETOCREG_DSZ64( , 0x00000000, 0x20c, 32) !m1 
U1c2e: MOVETOCREG_BTS_DSZ64( , 0x0000000a, 0x2e9) !m0,m1 

U1c30: MOVETOCREG_DSZ64( , 0x00000000, 0x38b, 32) !m1 
U1c31: MOVETOCREG_DSZ64( , 0x00000000, 0x392, 32) !m1 
U1c32: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x411) 

U1c34: MOVETOCREG_DSZ64( , 0x00000000, 0x064) 
U1c35: MOVETOCREG_DSZ64( , 0x00000000, 0x106) 
U1c36: MOVETOCREG_DSZ64( , 0x00000000, 0x488) 

U1c38: MOVETOCREG_DSZ64( , 0x00000000, 0x680) 
U1c39: MOVETOCREG_DSZ64( , 0x00000000, 0x74d) 
U1c3a: MOVETOCREG_DSZ64( , 0x00000000, 0x63c) 

U1c3c: tmp0:= MOVEFROMCREG_DSZ64( , 0x2bc, 32) !m1 
U1c3d: MOVETOCREG_BTR_DSZ64(tmp0, 0x2bc) !m1 
U1c3e: tmp1:= MOVEFROMCREG_DSZ64( , 0x63b) 

U1c40: tmp1:= MOVETOCREG_BTS_DSZ64(tmp1, 0x0000001c, 0x63b) 
U1c41: TESTUSTATE( , UCODE, !0x0030) !m0 ? SEQW GOTO U4ab6
U1c42: tmp1:= MOVEFROMCREG_DSZ64( , 0x236, 32) !m1 

U1c44: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000002, U1c42) !m0,m2 
U1c45: tmp11:= ZEROEXT_DSZ32(0x00000001) 
U1c46: WRITEURAM(tmp11, 0x0073, 32) !m2 

U1c48: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c2, 32) !m1 
U1c49: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000005, 0x2c2) !m1,m2 
U1c4a: NOP SEQW SAVEUIP1 U1c4cSEQW GOTO U4406

U1c4c: tmp0:= ZEROEXT_DSZ32(0x00011000) 
U1c4d: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x631) !m2 
U1c4e: NOP 

U1c50: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x634) 
U1c51: MOVETOCREG_DSZ64( , 0x00000000, 0x635) 
U1c52: MOVETOCREG_DSZ64( , 0x00000000, 0x636) 

U1c54: MOVETOCREG_DSZ64( , 0x00000000, 0x637) 
U1c55: MOVETOCREG_DSZ64( , 0x00000000, 0x638) 
U1c56: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x630) !m2 

U1c58: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U4abd
U1c59: tmp11:= ZEROEXT_DSZ32(0x00000002) 
U1c5a: WRITEURAM(tmp11, 0x0073, 32) 

U1c5c: NOP 
U1c5d: NOP 
U1c5e: tmp6:= PORTIN_DSZ32_ASZ16_SC1(0x4638) !m2 

U1c60: tmp7:= SHR_DSZ32(tmp6, 0x00000016) 
U1c61: tmp9:= SHR_DSZ32(tmp6, 0x00000010) 
U1c62: tmp9:= AND_DSZ32(0x0000003f, tmp9) 

U1c64: tmp9:= CMOVCC_DSZ32_CONDNZ(tmp9, 0x00000003) 
U1c65: tmp7:= MOVEMERGEFLGS_DSZ32(tmp7, tmp9) 
U1c66: tmp7:= unk_116( , tmp7) 

U1c68: tmp7:= unk_226(tmp9, tmp7) 
U1c69: unk_114( , tmp7) 
U1c6a: tmp8:= MOVEFROMCREG_DSZ64( , 0x22a, 32) !m1 

U1c6c: tmp9:= MOVEFROMCREG_DSZ64( , 0x38c, 32) !m1 
U1c6d: tmp12:= MOVEFROMCREG_DSZ64( , 0x38e, 32) !m1 
U1c6e: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U5b98

U1c70: MOVETOCREG_DSZ64(tmp7, 0x2c3, 32) !m1 
U1c71: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d8, 32) !m1 
U1c72: tmp0:= NOTAND_DSZ64(0x003f0000, tmp0) 

U1c74: tmp6:= SHL_DSZ32(tmp6, 0x00000008) 
U1c75: tmp6:= AND_DSZ32(0x003f0000, tmp6) 
U1c76: MOVETOCREG_OR_DSZ64(tmp0, 0x2d8, tmp6) !m1 

U1c78: tmp0:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 
U1c79: tmp0:= OR_DSZ32(0x00000300, tmp0) 
U1c7a: MOVETOCREG_DSZ64(tmp0, 0x238, 32) !m1 

U1c7c: tmp0:= MOVEFROMCREG_DSZ64( , 0x394, 32) !m1 
U1c7d: tmp0:= BTS_DSZ32(tmp0, 0x00000016) 
U1c7e: MOVETOCREG_DSZ64(tmp0, 0x394, 32) !m1 

U1c80: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000001d, U181d) !m2 
U1c81: tmp11:= ZEROEXT_DSZ32(0x00000003) 
U1c82: WRITEURAM(tmp11, 0x0073, 32) !m2 

U1c84: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp8, 0x00000009, U0c2a) 
U1c85: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1 
U1c86: tmp1:= OR_DSZ32(tmp0, 0x38000000) 

U1c88: tmp0:= OR_DSZ32(tmp1, 0xc0000040) 
U1c89: SAVEUIP( , 0x00, U1820) SEQW GOTO U0302
U1c8a: tmp7:= unk_d6b(tmp6) 

U1c8c: tmp8:= AND_DSZ32(0x00000001, tmp7) 
U1c8d: tmp8:= SELECTCC_DSZ64_CONDZ(tmp8, tmp4) 
U1c8e: tmp8:= AND_DSZ64(tmp8, tmp7) 

U1c90: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U083e) 
U1c91: LFNCEMARK-> tmp6:= ADD_DSZ32(0x00000008, tmp6) 
U1c92: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U1c8a

U1c94: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp3, 0x540) 
U1c95: MOVETOCREG_DSZ64(tmp2, 0x541) 
U1c96: MOVETOCREG_DSZ64(tmp1, 0x542) 

U1c98: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x543) SEQW GOTO U17de
U1c99: tmpv0:= READURAM( , 0x0014, 64) 
FUN_ucode_0001c9a:
U1c9a: tmpv1:= SHR_DSZ64(tmpv0, 0x00000015) 

U1c9c: tmpv2:= SHR_DSZ64(tmpv0, 0x0000002a) 
U1c9d: tmpv1:= OR_DSZ64(tmpv2, tmpv1) 
U1c9e: tmpv0:= NOTAND_DSZ64(0x001fffff, tmpv0) 

U1ca0: tmpv1:= AND_DSZ32(0x001fffff, tmpv1) 
U1ca1: tmpv0:= OR_DSZ64(tmpv1, tmpv0) 
U1ca2: WRITEURAM(tmpv0, 0x0014, 64) SEQW URET1

U1ca4: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000010, U0c4c) 
U1ca5: CMPUJNZ_DIRECT_NOTTAKEN(tmp5, 0x00000004, U2711) !m1 SEQW SAVEUIP1 U1ca6SEQW GOTO U02ba
U1ca6: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 

U1ca8: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U56f8) !m2 
U1ca9: tmp2:= ZEROEXT_DSZ32(0x000000ff) 
U1caa: tmp3:= READURAM( , 0x0020, 64) 

U1cac: tmp3:= SHR_DSZ64(tmp3, 0x00000030) 
U1cad: tmp5:= PORTIN_DSZ64_ASZ16_SC1(0x50b0) !m2 SEQW SAVEUIP1 U1caeSEQW GOTO U1cb1
U1cae: tmp5:= PORTIN_DSZ64_ASZ16_SC1(0x50b8) !m2 

U1cb0: SAVEUIP( , 0x01, U03a2) !m0 
FUN_ucode_0001cb1:
U1cb1: WRMSLOOPCTRFBR( , 0x00000007) 
U1cb2: tmp10:= AND_DSZ32(0x00000001, tmp3) 

U1cb4: tmp10:= SELECTCC_DSZ32_CONDNZ(tmp10, 0x000000ff) 
U1cb5: tmp5:= OR_DSZ64(tmp10, tmp5) 
U1cb6: tmp10:= SUB_DSZ8(tmp5, tmp2) 

U1cb8: tmp5:= MOVEMERGEFLGS_DSZ64(tmp5, tmp10) 
U1cb9: tmp2:= CMOVCC_DSZ32_CONDNB(tmp5, tmp2) 
U1cba: tmp3:= SHR_DSZ32(tmp3, 0x00000001) 

U1cbc: tmp5:= SHR_DSZ64(tmp5, 0x00000008) 
U1cbd: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1cb2
uret1:
U1cbe: URET(0x01) !m0 

U1cc0: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp0, tmp9) 
U1cc1: tmp8:= BT_DSZ64(tmp8, 0x00000000) 
U1cc2: tmp15:= SELECTCC_DSZ64_CONDNB(tmp8, tmp8) 

U1cc4: tmp15:= AND_DSZ64(tmp7, tmp15) 
U1cc5: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U3734) 
U1cc6: tmp15:= ADD_DSZ64(tmp9, tmp2) 

U1cc8: tmp9:= ADD_DSZ32(0x00000001, tmp9) 
U1cc9: MOVETOCREG_DSZ64(tmp8, tmp15) 
U1cca: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U1cc0

U1ccc: tmp12:= ZEROEXT_DSZ64(tmp1) 
U1ccd: NOP SEQW SAVEUIP1 U1cceSEQW GOTO U27ae
U1cce: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000270, tmp12) 

U1cd0: TESTUSTATE( , VMX, 0x0080) !m2 ? SEQW GOTO U157e
U1cd1: NOP 
U1cd2: NOP 

U1cd4: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U157e
U1cd5: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000080, tmp12) 
U1cd6: MOVETOCREG_DSZ64(tmp2, 0x7f8) 

U1cd8: tmp15:= SHR_DSZ64(tmp2, 0x00000020) 
U1cd9: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 
U1cda: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002e8, tmp12) 

U1cdc: MOVETOCREG_DSZ64(tmp2, 0x7f9, 32) !m1 
U1cdd: tmp15:= NOTAND_DSZ64(0x00005fc3, tmp2) 
U1cde: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) SEQW GOTO U1580

U1ce0: BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U07fe) 
U1ce1: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U2ee5
U1ce2: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp9) !m0,m1 

U1ce4: tmp1:= RDSEGFLD(CS, SEL) 
U1ce5: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, tmp1) !m0,m1 
U1ce6: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_eb, mode=0x0a, tmp4) !m0,m1 

U1ce8: rsp:= SUB_DSZN(IMM_MACRO_1b, rsp) !m0,m1 
U1ce9: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1cee
U1cea: tmp1:= SHR_DSZ32(tmp6, 0x00000010) 

U1cec: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp1) !m0,m1 
U1ced: rsp:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U1cee: LFNCEMARK-> unk_de3(tmp3) 

U1cf0: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U01c2) 
U1cf1: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1cf5
U1cf2: tmp1:= READURAM( , 0x0011, 64) 

U1cf4: LFNCEMARK-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004a8, mode=0x01, tmp1, 0x00000000) 
U1cf5: tmp1:= READURAM( , 0x0070, 64) 
U1cf6: tmp1:= BTR_DSZ64(tmp1, 0x0000002e) 

U1cf8: LFNCEWAIT-> MOVETOCREG_SHR_DSZ64(tmp1, 0x00000020, 0x008) 
U1cf9: WRITEURAM(tmp1, 0x0170, 64) 
U1cfa: NOP 

U1cfc: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
U1cfd: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U3dec
U1cfe: tmp0:= READURAM( , 0x003f, 64) 

U1d00: AETTRACE( , tmp0, 0x0c) SEQW GOTO U3dec
FUN_ucode_0001d01:
U1d01: tmp3:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_INSTRUCTION) !m0 
FUN_ucode_0001d02:
U1d02: tmp1:= ZEROEXT_DSZ32() 

U1d04: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4e82
FUN_ucode_0001d05:
U1d05: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW URET1
U1d06: tmp14:= READUIP_REGOVR(0x01) !m0 

U1d08: tmpv1:= READURAM( , 0x0011, 64) 
U1d09: tmpv1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmpv1) 
U1d0a: BTUJB_DIRECT_NOTTAKEN(tmpv1, U1f91, tmpv0) !m2 SEQW URET1

U1d0c: tmp10:= ZEROEXT_DSZ32(0x00000001) 
U1d0d: SYNCWAIT-> MOVETOCREG_DSZ64(tmp11, 0x2c4, 32) !m1 
U1d0e: tmp9:= MOVEFROMCREG_DSZ64( , 0x2da, 32) !m1 

U1d10: tmp9:= MOVETOCREG_OR_DSZ64(tmp9, 0x2da, tmp10) !m1 
U1d11: tmp9:= SHL_DSZ32(tmp9, 0x00000018) 
U1d12: tmp11:= OR_DSZ32(tmp11, tmp9) 

U1d14: tmp9:= MOVEFROMCREG_DSZ64( , 0x008) 
U1d15: tmp9:= OR_DSZ32(0x00000080, tmp9) 
U1d16: MOVETOCREG_DSZ64(tmp9, 0x008) 

U1d18: tmp9:= CONCAT_DSZ32(tmp9, tmp11) 
U1d19: WRITEURAM(tmp9, 0x0070, 64) !m2 
U1d1a: tmp9:= SUB_DSZ32(0x00000001) 

U1d1c: MOVETOCREG_DSZ64(tmp9, 0x00b) 
U1d1d: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 
U1d1e: WRSEGFLD(0x00000000, IDT, LIMIT) 

U1d20: tmp10:= ZEROEXT_DSZ32(0x00008000) 
U1d21: rsp:= ZEROEXT_DSZ32(rsp) 
U1d22: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1d25

U1d24: tmp10:= ZEROEXT_DSZ32(0x0000fe58) 
U1d25: tmp10:= ADD_DSZ32(tmp4, tmp10) 
U1d26: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x067) 

U1d28: tmp9:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U1d29: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000a, U5c01) !m0,m2 
U1d2a: NOP 

U1d2c: LFNCEWAIT-> FETCHFROMEIP0_ASZ32( , tmp10) SEQW UEND0
U1d2d: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U1d2e: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U1d30: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U1d34
U1d31: tmp5:= ZEROEXT_DSZ32() 
U1d32: tmp6:= ZEROEXT_DSZ32() 

U1d34: tmp6:= AND_DSZ64(tmp6, tmp5) 
U1d35: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1d41
U1d36: tmp13:= READUIP_REGOVR(0x00) 

U1d38: tmp3:= READURAM( , 0x0011, 64) 
U1d39: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp3, mode=0x01, tmp2) 
U1d3a: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp3, 0x00000010, mode=0x01, tmp2) 

U1d3c: tmp3:= AND_DSZ64(tmp4, tmp3) 
U1d3d: tmp3:= NOTAND_DSZ64(tmp5, tmp3) 
U1d3e: tmp6:= OR_DSZ64(tmp3, tmp6) 

U1d40: tmp5:= OR_DSZ64(tmp4, tmp5) 
U1d41: tmp11:= NOTAND_DSZ64(tmp5, tmp11) 
U1d42: tmp11:= OR_DSZ64(tmp6, tmp11) SEQW URET0

U1d44: tmp7:= MOVEFROMCREG_DSZ64( , 0x004) 
U1d45: tmp14:= ZEROEXT_DSZ32(tmp13) 
U1d46: tmp0:= ZEROEXT_DSZ32(tmp11) 

U1d48: tmp13:= MOVEFROMCREG_DSZ64( , 0x701) 
U1d49: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp13, 0x0000000e, 0x701) !m0 
U1d4a: MOVETOCREG_BTR_DSZ64(tmp7, 0x00000005, 0x004) 

U1d4c: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1d4d: tmp10:= READAFLAGS( , tmp10) !m2 SEQW SAVEUIP0 U1d4eSEQW GOTO U694e
U1d4e: LFNCEMARK-> tmp8:= NOTAND_DSZ32(tmp7, 0x00000003) 

U1d50: SAVEUIP_REGOVR( , 0x01, U1d51, 0x540c) !m0 SEQW GOTO U1956
U1d51: tmp13:= CMOVCC_DSZ32_CONDZ(tmp8, tmp13) 
U1d52: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp8) 

U1d54: tmp2:= CMOVCC_DSZ32_CONDNZ(tmp2, 0x00000008) 
U1d55: tmp1:= ZEROEXT_DSZ8(tmp2, tmp1) 
U1d56: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U31e9

U1d58: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1d5a
U1d59: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp3, U37dc, tmp2) !m1,m2 
U1d5a: tmp4:= ZEROEXT_DSZ32(0x002c6000) 

U1d5c: tmp4:= BTS_DSZ32(tmp4, 0x00000018) 
U1d5d: tmp14:= AND_DSZ32(tmp4, tmp14) 
U1d5e: tmp14:= OR_DSZ32(0x00016809, tmp14) 

U1d60: tmp6:= CONCAT_DSZ16(tmp13, tmp6) 
U1d61: tmp9:= OR_DSZ32(tmp9, tmp10) 
U1d62: tmp4:= MOVEFROMCREG_DSZ64( , 0x067) 

U1d64: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 
U1d65: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp14, 0x000) 
U1d66: tmp3:= SUB_DSZN(tmp12, tmp4) !m1 SEQW GOTO U2685

U1d68: tmp6:= ZEROEXT_DSZ32(0x00000060) 
U1d69: tmp0:= ADD_DSZ16(0x00000010, tmp0) 
U1d6a: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1d6e

U1d6c: LFNCEMARK-> unk_25c(tmp1, tmp1) 
U1d6d: tmp0:= ADD_DSZ16(0x00000010, tmp0) 
U1d6e: tmp5:= TESTUSTATE(tmp0, SYS, UST_USER_MODE | UST_8086_MODE) !m1 ? SEQW GOTO U2711

U1d70: tmp4:= SUB_DSZ32(0x00000001) 
U1d71: tmp9:= OR_DSZ32(0x0000a09b, tmp6) 
U1d72: rsp:= TESTUSTATE(tmp2, UCODE, !0x0004) !m0 ? SEQW GOTO U1d76

U1d74: tmp9:= OR_DSZ32(0x0000c09b, tmp6) 
U1d75: rsp:= ZEROEXT_DSZ32(tmp2) 
U1d76: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp4, 0x410) 

U1d78: tmp4:= ZEROEXT_DSZ32(0x00004000) 
U1d79: MOVETOCREG_DSZ64(tmp4, 0x73c) 
U1d7a: MOVETOCREG_DSZ64(tmp3, 0x79e) 

U1d7c: MOVETOCREG_DSZ64(tmp9, 0x7f5) 
U1d7d: MOVETOCREG_DSZ64( , 0x00000000, 0x700) 
U1d7e: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x78e) SEQW SAVEUIP1 U1d80SEQW GOTO U00b1

U1d80: tmp6:= OR_DSZ32(0x0000c093, tmp6) 
U1d81: tmp4:= ADD_DSZ16(0x00000008, tmp5) 
U1d82: SAVEUIP_REGOVR(0x01, U1d84, 0x064a) !m0 SEQW GOTO U00b1

U1d84: WRSEGFLD(0x00000000, SS, BASE) 
U1d85: WRSEGFLD(tmp6, SS, SEL+FLGS+LIM) 
U1d86: WRSEGFLD(tmp9, CS, SEL+FLGS+LIM) 

U1d88: WRSEGFLD(0x00000000, CS, BASE) 
U1d89: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U2156
U1d8a: LFNCEWTMRK->MSSTOP-> FETCHFROMEIP1_ASZ64( , tmp1) 

U1d8c: MSSTOP-> MJMPTARGET_INDIRECT_ASZ64( , tmp1) SEQW GOTO U3dfa
check_rdrand_vmexits:
U1d8d: tmp3:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_INSTRUCTION) !m0 
FUN_ucode_0001d8e:
U1d8e: tmp1:= ZEROEXT_DSZ32() 

FUN_ucode_0001d90:
U1d90: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1d94
U1d91: tmpv1:= READURAM( , 0x0043, 64) 
U1d92: BTUJB_DIRECT_NOTTAKEN(tmpv1, U4e82, tmpv0) 

U1d94: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U1cbe
U1d95: tmpv1:= READURAM( , 0x004c, 64) 
U1d96: BTUJB_DIRECT_NOTTAKEN(tmpv1, U1f91, tmpv0) !m2 SEQW URET1

U1d98: tmp14:= ZEROEXT_DSZ32(tmp13) 
U1d99: tmp7:= MOVEFROMCREG_DSZ64( , 0x004) 
U1d9a: LFNCEWAIT-> tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x00000005, 0x004) 

U1d9c: LFNCEMARK-> tmp11:= MOVEFROMCREG_DSZ64( , 0x701) 
U1d9d: MOVETOCREG_BTR_DSZ64(tmp11, 0x0000000e, 0x701) !m0 
U1d9e: tmp1:= ZEROEXT_DSZ32(0x00000003) 

U1da0: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U1da1: tmp10:= READAFLAGS( , tmp10) !m2 SEQW SAVEUIP0 U1da2SEQW GOTO U6960
U1da2: tmp8:= NOTAND_DSZ32(tmp7, 0x00000003) 

U1da4: tmp2:= MOVEMERGEFLGS_DSZ64(tmp2, tmp8) 
U1da5: tmp2:= CMOVCC_DSZ32_CONDNZ(tmp2, 0x00000008) 
U1da6: tmp1:= ZEROEXT_DSZ8(tmp2, tmp1) 

U1da8: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U31e9
U1da9: NOP 
U1daa: NOP 

U1dac: SAVEUIP_REGOVR( , 0x01, U1dad, 0x840c) !m0 SEQW GOTO U1956
U1dad: NOP 
U1dae: NOP 

U1db0: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1db2
U1db1: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp3, U37dc, tmp2) !m1,m2 
U1db2: tmp9:= OR_DSZ32(tmp9, tmp10) 

U1db4: tmp4:= MOVEFROMCREG_DSZ64( , 0x067) 
U1db5: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 
U1db6: tmp3:= SUB_DSZN(tmp12, tmp4) !m1 

U1db8: tmp4:= ZEROEXT_DSZ32(0x002c6000) 
U1db9: tmp4:= BTS_DSZ32(tmp4, 0x00000018) 
U1dba: tmp14:= AND_DSZ32(tmp4, tmp14) 

U1dbc: tmp14:= OR_DSZ32(0x00016809, tmp14) 
U1dbd: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp14, 0x000) SEQW GOTO U017a
U1dbe: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x50c0) !m2 

U1dc0: tmp11:= SUB_DSZ32(0xffffffff, tmp11) 
U1dc1: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp11, U63a2) 
U1dc2: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x50c0) !m2 

U1dc4: LFNCEWAIT-> tmp11:= SHL_DSZ64(tmp11, 0x00000008) 
U1dc5: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp4) 
U1dc6: tmp11:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, 0x00000004, tmp4) 

U1dc8: tmp5:= CONCAT_DSZ32(tmp11, tmp5) 
U1dc9: tmp11:= ZEROEXT_DSZ32(0xffffffff) 
U1dca: tmp11:= CONCAT_DSZ32(0x00000fff, tmp11) 

U1dcc: tmp5:= AND_DSZ64(tmp11, tmp5) SEQW GOTO U639a
U1dcd: tmp12:= READURAM( , 0x0011, 64) 
U1dce: tmp14:= MOVEFROMCREG_DSZ64( , 0x6c0) 

U1dd0: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004b4, mode=0x01, tmp12) 
U1dd1: tmp15:= SHL_DSZ32(tmp15, 0x0000001f) 
U1dd2: MOVETOCREG_OR_DSZ64(tmp14, 0x6c0, tmp15) 

U1dd4: tmp15:= READURAM( , 0x005c, 64) 
U1dd5: tmp15:= BTR_DSZ64(tmp15, 0x0000000a) 
U1dd6: SYNCFULL-> WRITEURAM(tmp15, 0x005c, 64) SEQW GOTO U1f91

U1dd8: LFNCEWTMRK-> MOVETOCREG_DSZ64( , 0x00000000, 0x065) !m2 
U1dd9: tmp14:= SAVEUIP(0x01, U5942) !m0 
U1dda: tmp13:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U1ddc: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp13, 0x00000010, U06ae) 
U1ddd: tmp7:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U1dde: tmp12:= AND_DSZ32(0x000000ff, tmp7) 

U1de0: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp12, U06ae) 
U1de1: tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 
U1de2: tmp11:= SHL_DSZ64(tmp3, 0x0000000f) 

U1de4: tmp11:= SHR_DSZ64(tmp11, 0x0000000f) 
U1de5: tmp9:= ZEROEXT_DSZ32() 
U1de6: tmp8:= ZEROEXT_DSZ32(0x00000003) 

U1de8: tmp7:= SHR_DSZ32(tmp7, 0x00000010) 
U1de9: tmp12:= ADD_DSZ32(tmp8, 0x000007a8) 
U1dea: tmp12:= ADD_DSZ32(tmp8, tmp12) 

U1dec: tmp12:= MOVEFROMCREG_DSZ64( , tmp12) 
U1ded: tmp12:= BTR_DSZ64(tmp12, 0x0000003f) 
U1dee: tmp5:= SUB_DSZ64(tmp11, tmp12) 

U1df0: tmp10:= SHL_DSZ32(0x00000001, tmp8) 
U1df1: tmp10:= SELECTCC_DSZ32_CONDNZ(tmp5, tmp10) 
U1df2: tmp10:= SELECTCC_DSZ32_CONDNB(tmp12, tmp10) 

U1df4: tmp12:= SHL_DSZ32(tmp8, 0x00000002) 
U1df5: tmp12:= SHL_DSZ32(0x00000003, tmp12) 
U1df6: tmp5:= AND_DSZ32(tmp12, tmp7) 

U1df8: tmp10:= SELECTCC_DSZ32_CONDNZ(tmp5, tmp10) 
U1df9: tmp9:= OR_DSZ32(tmp10, tmp9) 
U1dfa: tmp8:= SUB_DSZ32(0x00000001, tmp8) 

U1dfc: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp8, U1dfd) SEQW GOTO U1de9
U1dfd: tmp10:= MOVEFROMCREG_DSZ64( , 0x01c) 
U1dfe: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp9, 0x01c, tmp10) SEQW URET1

U1e00: tmp5:= MOVEFROMCREG_DSZ64( , 0x2c1, 32) !m1 
U1e01: tmp10:= CONCAT_DSZ32(tmp5, tmp10) 
U1e02: tmp5:= READURAM( , 0x0064, 64) 

U1e04: tmp5:= SHL_DSZ32(tmp5, 0x0000001b) 
U1e05: tmp10:= OR_DSZ64(tmp5, tmp10) SEQW SAVEUIP1 U1e06SEQW GOTO U3065
U1e06: SYNCWAIT-> WRSEGFLD(tmp10) !m0 

U1e08: tmp10:= MOVEFROMCREG_DSZ64( , 0x2c0, 32) !m1 
U1e09: LFNCEMARK-> WRSEGFLD(tmp10) !m0 
U1e0a: SAVEUIP( , 0x00, U60d2) 

U1e0c: LFNCEWAIT-> tmp5:= RDSEGFLD(UNK_SEG_09, FLGS) 
U1e0d: MOVETOCREG_DSZ64(tmp5, 0x7f5) 
U1e0e: tmp5:= RDSEGFLD(SS_USERM, FLGS) 

U1e10: MOVETOCREG_DSZ64(tmp5, 0x73c) 
U1e11: SYNCFULL-> MOVETOCREG_SHR_DSZ64(tmp5, 0x00000005, 0x79e) 
U1e12: tmp10:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

U1e14: MOVETOCREG_DSZ64(tmp10, 0x78e) 
U1e15: tmp5:= RDSEGFLD(UNK_SEG_09, LIMIT) 
U1e16: MOVETOCREG_DSZ64(tmp5, 0x410) 

U1e18: tmp5:= ADD_DSZ32(0x00000001, tmp5) 
U1e19: MOVETOCREG_DSZ64(tmp5, 0x700) 
U1e1a: tmp5:= RDSEGFLD(UNK_SEG_09, SEL) 

U1e1c: LFNCEMARK-> WRSEGFLD(tmp5, UNK_SEG_09, SEL) 
U1e1d: tmp10:= RDSEGFLD(UNK_SEG_09, BASE) 
U1e1e: NOP 

U1e20: LFNCEWAIT-> WRSEGFLD(tmp10, CS, BASE) 
U1e21: tmp10:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U1e22: WRSEGFLD(tmp10, CS, SEL+FLGS+LIM) 

U1e24: tmp10:= RDSEGFLD(SS_USERM, BASE) 
U1e25: WRSEGFLD(tmp10, SS, BASE) 
U1e26: tmp10:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U1e28: LFNCEMARK-> WRSEGFLD(tmp10, SS, SEL+FLGS+LIM) SEQW URET0
U1e29: tmp11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000518, mode=0x01, tmp0) 
U1e2a: TESTUSTATE( , SYS, 0x2000) !m1 ? SEQW GOTO U1e2d

U1e2c: tmp11:= NOTAND_DSZ64(0x00000fff, tmp11) 
U1e2d: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U1e42
U1e2e: tmp8:= READURAM( , 0x001f, 64) !m2 

U1e30: tmp8:= SHR_DSZ64(tmp8, 0x00000025) 
U1e31: tmp8:= AND_DSZ32(0x000003ff, tmp8) 
U1e32: tmp9:= SHR_DSZ32(tmp6, 0x00000010) 

U1e34: tmp5:= AND_DSZ32(0x0000001f, tmp8) 
U1e35: tmp9:= AND_DSZ32(tmp5, tmp9) 
U1e36: tmp8:= SHR_DSZ32(tmp8, 0x00000005) 

U1e38: tmp8:= XOR_DSZ32(tmp9, tmp8) 
U1e39: tmp9:= BTS_DSZ64(0x00000000, 0x00000038) 
U1e3a: tmp8:= SELECTCC_DSZ64_CONDZ(tmp8, tmp9) 

U1e3c: tmp5:= ADD_DSZ64(0x0000002a, tmp2) 
U1e3d: tmp9:= READURAM( , 0x0014, 64) 
U1e3e: tmp9:= XOR_DSZ64(tmp8, tmp9) 

U1e40: tmp9:= SELECTCC_DSZ64_CONDB(tmp2, tmp9) 
U1e41: BTUJB_DIRECT_NOTTAKEN(tmp9, U656c, tmp5) !m1 
U1e42: CMPUJZ_DIRECT_NOTTAKEN(tmp2, 0x0000000e, U58e2) !m0,m2 SEQW GOTO U26d0

U1e44: tmp10:= NOTAND_DSZ64(tmp6, tmp4) 
U1e45: tmp7:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000208, mode=0x18) 
U1e46: tmp7:= OR_DSZ64(tmp10, tmp7) 

U1e48: tmp10:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000210, mode=0x18) 
U1e49: tmp7:= OR_DSZ64(tmp10, tmp7) 
U1e4a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U2711) 

U1e4c: tmp5:= BT_DSZ64(tmp5, 0x00000003) 
U1e4d: tmp15:= MOVEMERGEFLGS_DSZ64(0x000003ff, tmp5) 
U1e4e: tmp8:= CMOVCC_DSZ64_CONDB(tmp15, 0x0000023f) 

U1e50: tmp5:= BT_DSZ64(tmp5, 0x00000004) 
U1e51: tmp15:= MOVEMERGEFLGS_DSZ64(0x0000043f, tmp5) 
U1e52: tmp8:= CMOVCC_DSZ64_CONDB(tmp15, tmp8) 

U1e54: tmp8:= ADD_DSZN(tmp8, tmp11) !m1 
U1e55: tmp3:= ZEROEXT_DSZ64(tmp5) 
U1e56: tmp6:= OR_DSZ64(0x00000400) 

U1e58: tmp6:= SHL_DSZ64(tmp6, 0x00000010) 
U1e59: tmp6:= OR_DSZ64(0x000003c0, tmp6) 
U1e5a: tmm0:= unk_744(mm6) 

U1e5c: tmp4:= MOVEINSERTFLGS_DSZ64( , tmp4) 
U1e5d: tmp7:= AND_DSZ32(tmp3, 0x00000006) 
U1e5e: tmp7:= MOVEMERGEFLGS_DSZ64(0x00000018, tmp7) 

U1e60: tmp7:= CMOVCC_DSZ32_CONDNZ(tmp7, 0x00000200) 
U1e61: tmp12:= AND_DSZ32(0x00000001, tmp3) 
U1e62: tmp12:= SELECTCC_DSZ64_CONDNZ(tmp12, tmp7) 

U1e64: tmp7:= ADD_DSZN(tmp12, tmp11) !m1 
U1e65: unk_cc1(tmp7) 
U1e66: LFNCEMARK-> unk_cc1(tmp8) 

U1e68: NOP 
U1e69: NOP 
U1e6a: SYNCWAIT-> TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U3c6a

U1e6c: tmp13:= SAVEUIP(0x00, U6d44) 
U1e6d: tmp14:= SAVEUIP(0x01, U3c6a) !m0 SEQW GOTO U6314
U1e6e: tmp3:= PORTIN_DSZ16_ASZ16_SC1(0x4680) !m2 

U1e70: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000b740,  , tmp3) 
U1e71: PORTOUT_DSZ32_ASZ16_SC1(0x50d4,  , 0x00000000) !m2 
U1e72: tmp2:= ZEROEXT_DSZ32(0x0000fff0) 

U1e74: tmp1:= MOVEFROMCREG_DSZ64( , 0x78e) 
U1e75: tmp1:= ADD_DSZ32(tmp2, tmp1) 
U1e76: MOVETOCREG_DSZ64(tmp1, 0x067) !m2 

U1e78: tmp3:= PORTIN_DSZ32_ASZ16_SC1(0x4800) !m2 
U1e79: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000018, U1e7a) !m2 SEQW GOTO U43ae
U1e7a: WRITEURAM(tmp1, 0x0067, 64) !m2 

U1e7c: tmp0:= ZEROEXT_DSZ64() SEQW GOTO U3a44
U1e7d: TESTUSTATE( , UCODE, 0x3000) ? SEQW URET1
U1e7e: tmp9:= READURAM( , 0x0012, 64) 

U1e80: BTUJNB_DIRECT_NOTTAKEN(tmp9, 0x00000009, U06ae) 
U1e81: tmp5:= ZEROEXT_DSZ32(0x00000409) 
U1e82: SAVEUIP_REGOVR( , 0x01, U1e84, 0xca59) !m0 SEQW GOTO U6bfd

U1e84: tmpv0:= MOVEFROMCREG_DSZ64( , 0x01c) 
U1e85: SAVEUIP( , 0x01, U3741) !m0 
U1e86: SAVEUIP( , 0x00, U38d0) SEQW GOTO U334d

U1e88: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000048) 
U1e89: tmp1:= READURAM( , 0x000d, 64) 
U1e8a: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 

U1e8c: tmp1:= CONCAT_DSZ8(tmp0, tmp1) 
U1e8d: tmp1:= CONCAT_DSZ32(tmp1, 0x00002bc6) 
U1e8e: WRITEURAM(tmp1, 0x000d, 64) !m2 

U1e90: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U1ea6
U1e91: tmp11:= ZEROEXT_DSZ32(0x0000000d) 
U1e92: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp10, U27dc) 

U1e94: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U1ea6
U1e95: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U1e96: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000005, 0x6c3) !m2 

U1e98: tmp0:= READURAM( , 0x0053, 64) !m2 
U1e99: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000005, U1ea6) !m2 
U1e9a: SAVEUIP_REGOVR(0x01, U1e9c, 0x0001) !m0 SEQW GOTO U5e4e

U1e9c: SAVEUIP_REGOVR(0x01, U1e9d, 0x0000) !m0 SEQW GOTO U02ba
U1e9d: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U1e9e: tmp0:= BTS_DSZ32(tmp0, 0x00000012) 

U1ea0: PORTOUT_DSZ32_ASZ16_SC1(0x50d8,  , tmp0) !m2 
U1ea1: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U1ea2: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000012, U1ea1) !m0,m2 

U1ea4: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
U1ea5: tmp0:= ZEROEXT_DSZ32(0x0000000a) SEQW SAVEUIP0 U1ea6SEQW GOTO U60aa
patch_runs_load_loop:
U1ea6: SYNCFULL-> tmp0:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp4) 

U1ea8: tmp1:= SHL_DSZ32(tmp0, 0x00000002) 
U1ea9: tmp1:= ADD_DSZ32(tmp1, 0x0000226c) 
U1eaa: tmp4:= ADD_DSZ64(0x00000001, tmp4) 

U1eac: tmp2:= SUB_DSZ8(0x0000001e, tmp0) 
U1ead: tmp0:= ZEROEXT_DSZ32(0x00000009) 
U1eae: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp2, U27b4) 

U1eb0: NOP 
U1eb1: NOP 
switchD:
U1eb2: UJMP( , tmp1) 

patch_handle_0x1_zero_out:
U1eb4: WRITEURAM( , 0x00000000, 0x0106, 64) !m2 
U1eb5: MOVETOCREG_DSZ64( , 0x00000000, 0x707) 
U1eb6: MOVETOCREG_DSZ64( , 0x00000000, 0x706) 

U1eb8: tmp0:= MOVEFROMCREG_DSZ64( , 0x702) 
U1eb9: tmp0:= NOTAND_DSZ32(0x00000023, tmp0) 
U1eba: MOVETOCREG_DSZ64(tmp0, 0x702) 

U1ebc: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U4dca
U1ebd: tmp9:= ZEROEXT_DSZ32(0x00030400) 
U1ebe: LFNCEMARK-> MOVETOCREG_DSZ64(tmp9, 0x6a1) 

U1ec0: LFNCEWTMRK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) 
U1ec1: WRMSLOOPCTRFBR( , 0x0000017f) 
U1ec2: NOP 

U1ec4: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a4) !m2 
U1ec5: MOVETOCREG_DSZ64( , 0x00000000, 0x6a5) !m2 
U1ec6: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1ec4

U1ec8: tmp9:= ZEROEXT_DSZ32(0x00030200) 
U1ec9: LFNCEMARK-> MOVETOCREG_DSZ64(tmp9, 0x6a1) !m2 
U1eca: NOP 

U1ecc: LFNCEWTMRK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) 
U1ecd: WRMSLOOPCTRFBR( , 0x0000003f) 
U1ece: NOP 

U1ed0: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a4) 
U1ed1: MOVETOCREG_DSZ64( , 0x00000000, 0x6a4) 
U1ed2: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1ed0

U1ed4: tmp9:= ZEROEXT_DSZ32(0x00030300) 
U1ed5: MOVETOCREG_DSZ64(tmp9, 0x6a1) !m2 
U1ed6: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) !m2 

U1ed8: WRMSLOOPCTRFBR( , 0x0000001f) 
U1ed9: NOP 
U1eda: NOP 

U1edc: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a4) 
U1edd: MOVETOCREG_DSZ64( , 0x00000000, 0x6a4) 
U1ede: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U1edc

U1ee0: MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 SEQW GOTO U4de0
U1ee1: tmp9:= ADD_DSZN(IMM_MACRO_13, tmp12) !m0,m1 
U1ee2: tmp8:= UPDATEUSTATE(!0x10) !m0 

U1ee4: tmp4:= TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT | 0x0200) !m0,m1 ? SEQW GOTO U48ac
U1ee5: MOVETOCREG_DSZ64(0x00000009, 0x000) !m2 
U1ee6: tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0 

U1ee8: tmp3:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 
U1ee9: tmp13:= SAVEUIP(0x00, U2bf9) 
U1eea: tmp14:= SAVEUIP(0x01, U3999) !m0 SEQW GOTO U2bd9

U1eec: tmp4:= SELECTCC_DSZ32_CONDZ(tmp8, 0x00000040) 
U1eed: tmp0:= SHL_DSZ32(tmp10, 0x0000001a) 
U1eee: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U1ef5

U1ef0: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U1ef1: tmp1:= AND_DSZ32(tmp0, tmp1) 
U1ef2: tmp1:= SELECTCC_DSZ32_CONDNS(tmp1, 0x00000060) 

U1ef4: tmp4:= OR_DSZ32(tmp1, tmp4) 
U1ef5: UFLOWCTRL( , tmp4, USTATE) 
U1ef6: tmp9:= ZEROEXT_DSZ32(0x000007c5) 

U1ef8: tmp0:= ZEROEXT_DSZ32(0xffffffffffffffff) 
U1ef9: tmp0:= CONCAT_DSZ32(tmp0, 0xffead800) 
U1efa: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U0836

U1efc: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U1f00
U1efd: tmp1:= NOTAND_DSZ32(tmp10, tmp11) 
U1efe: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000005, U2711) !m1 

U1f00: tmp0:= AND_DSZ64(tmp0, tmp10) 
U1f01: tmp1:= TESTUSTATE(tmp10, SYS, UST_VMX_OP_DIS) !m1 ? SEQW GOTO U1f05
U1f02: BTUJNB_DIRECT_NOTTAKEN(tmp10, 0x0000000d, U2711) !m1 

U1f04: tmp1:= ZEROEXT_DSZ32() 
U1f05: TESTUSTATE( , UCODE, !0x0800) !m0 ? SEQW GOTO U1f08
U1f06: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U2711) !m1 

U1f08: LFNCEMARK-> tmp1:= READURAM( , 0x0035, 64) 
U1f09: tmp1:= SHR_DSZ64(tmp1, 0x00000014) 
U1f0a: tmp1:= AND_DSZ32(0x00200000, tmp1) 

U1f0c: tmp0:= NOTAND_DSZ64(tmp1, tmp0) 
U1f0d: tmp1:= READURAM( , 0x0077, 64) 
U1f0e: tmp1:= SHR_DSZ64(tmp1, 0x0000001c) 

U1f10: tmp2:= READURAM( , 0x005c, 64) 
U1f11: tmp2:= SHR_DSZ64(tmp2, 0x0000000b) 
U1f12: tmp1:= NOTAND_DSZ32(tmp1, tmp2) 

U1f14: tmp1:= AND_DSZ32(tmp1, 0x00008000) 
U1f15: tmp0:= NOTAND_DSZ64(tmp1, tmp0) 
U1f16: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 

U1f18: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U2d56) SEQW GOTO U0836
U1f19: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U1f1a: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U1f1c: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U1f1d) !m2 SEQW GOTO U1f1a
U1f1d: MOVETOCREG_DSZ64(tmpv2, 0x22c, 32) !m1 
U1f1e: MOVETOCREG_DSZ64(tmpv1, 0x22b, 32) !m1 

U1f20: MOVETOCREG_DSZ64(tmpv0, 0x229, 32) !m1,m2 
U1f21: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1,m2 
U1f22: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U068e) SEQW GOTO U1f21

U1f24: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U1f25: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U1f26: tmp0:= NOTAND_DSZ32(tmp0, 0x00001001) 

U1f28: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U1f29) SEQW GOTO U008e
U1f29: tmp0:= MOVEFROMCREG_DSZ64( , 0x01b) 
U1f2a: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x752) 

U1f2c: tmp0:= MOVEFROMCREG_DSZ64( , 0x0b1) 
U1f2d: tmp0:= NOTAND_DSZ32(tmp0, 0x00000007) 
U1f2e: tmp1:= MOVEFROMCREG_DSZ64( , 0x088) 

U1f30: tmp1:= AND_DSZ32(0x00100000, tmp1) 
U1f31: tmp0:= OR_DSZ32(tmp1, tmp0) 
U1f32: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U17ec) 

U1f34: tmp1:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 
U1f35: tmp1:= BT_DSZ64(tmp1, 0x0000003f) 
U1f36: tmp0:= SELECTCC_DSZ64_CONDNB(tmp1, 0x00000040) 

U1f38: tmp3:= ZEROEXT_DSZ32(0x00000063) 
U1f39: tmp1:= MOVEMERGEFLGS_DSZ32(0x000000a3, tmp1) 
U1f3a: tmp3:= CMOVCC_DSZ32_CONDB(tmp1, tmp3) 

U1f3c: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U1f3d: tmp1:= BT_DSZ64(tmp1, 0x0000000d) 
U1f3e: tmp2:= SELECTCC_DSZ64_CONDB(tmp1, 0x00000020) 

U1f40: tmp0:= OR_DSZ32(tmp2, tmp0) 
U1f41: tmp0:= SHL_DSZ32(tmp0, 0x00000008) 
U1f42: tmp0:= OR_DSZ32(0x00001202, tmp0) 

U1f44: tmp2:= ZEROEXT_DSZ32N(tmp4) !m1 
U1f45: tmp2:= SHL_DSZ64(tmp2, 0x00000010) 
U1f46: ROVR<- tmp0:= OR_DSZ64(tmp2, tmp0) SEQW SAVEUIP1 U1f48SEQW GOTO U65b8

U1f48: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, U1f50) 
U1f49: SAVEUIP_REGOVR(0x01, U1f4a, 0x0010) !m0 SEQW GOTO U050c
U1f4a: tmpv0:= SHL_DSZ64(tmpv0, 0x00000008) 

U1f4c: tmpv0:= ZEROEXT_DSZ8(0x0000007d, tmpv0) 
U1f4d: tmpv1:= ZEROEXT_DSZ32(0x00000071) SEQW SAVEUIP1 U1f4eSEQW GOTO U65b8
U1f4e: NOP 

U1f50: LFNCEWAIT-> unk_256() !m1 SEQW UEND0
U1f51: unk_eff() SEQW GOTO U2711
U1f52: tmp1:= READURAM( , 0x0043, 64) 

U1f54: tmp4:= READURAM( , 0x0057, 64) 
U1f55: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U1f56: tmp4:= ADD_DSZ64(0x000001e8, tmp4) 

U1f58: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U17ca
U1f59: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U1f5a: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000f, U17ca) !m0,m2 

U1f5c: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 
U1f5d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U44a5) 
U1f5e: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0xfffffffffffffff8, mode=0x01, tmp6) 

U1f60: CMPUJZ_DIRECT_NOTTAKEN(tmp1, U17ca, tmp11) !m2 
U1f61: tmp6:= SUB_DSZ32(0x00000008, tmp6) SEQW GOTO U1f5d
U1f62: tmp9:= ZEROEXT_DSZ8N(IMM_MACRO_1b) !m0,m1 

U1f64: LFNCEWAIT-> tmp0:= READURAM( , 0x0070, 64) 
U1f65: tmp7:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U6284
U1f66: tmp7:= READURAM( , 0x004c, 64) 

U1f68: tmp1:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1f6a
U1f69: tmp1:= READURAM( , 0x0043, 64) 
U1f6a: tmp1:= OR_DSZ64(tmp7, tmp1) 

U1f6c: tmp1:= SHR_DSZ64(tmp1, 0x00000037) 
U1f6d: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000005, U6284) !m1 
U1f6e: tmp1:= BTR_DSZ64(tmp0, 0x00000032) 

U1f70: LFNCEWAIT-> MOVETOCREG_SHR_DSZ64(tmp1, 0x00000020, 0x008) 
U1f71: tmp0:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00000400) SEQW GOTO U6286
U1f72: tmp1:= ZEROEXT_DSZ32(0x00000110) 

U1f74: MOVETOCREG_DSZ64(tmp1, 0x29e, 32) !m1,m2 
U1f75: SAVEUIP_REGOVR(0x01, U1f76, 0x0001) !m0 SEQW GOTO U2b15
U1f76: unk_eef() 

U1f78: SAVEUIP_REGOVR(0x01, U1f79, 0x0001) !m0 SEQW GOTO U2b15
U1f79: tmp1:= MOVEFROMCREG_DSZ64( , 0x224, 32) !m1 
U1f7a: tmp1:= AND_DSZ32(0x00000001, tmp1) 

U1f7c: tmp0:= BT_DSZ64(tmp0, 0x0000002b) 
U1f7d: tmp1:= SELECTCC_DSZ32_CONDB(tmp0, tmp1) 
U1f7e: TESTUSTATE( , VMX, 0x0008) !m2 ? SEQW GOTO U48e2

U1f80: tmp0:= ZEROEXT_DSZ32(0x00000024) 
U1f81: ROVR<- tmp1:= ZEROEXT_DSZ64(tmp1) SEQW SAVEUIP1 U1f82
U1f82: SAVEUIP( , 0x01, U079d) !m0 

U1f84: tmp3:= ZEROEXT_DSZ32(0x0000000a) SEQW GOTO U1d90
U1f85: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp2) 
U1f86: tmp12:= ADD_DSZ32(0x00000020, tmp12) 

FUN_ucode_0001f88:
U1f88: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp3) 
U1f89: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
FUN_ucode_0001f8a:
U1f8a: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp4) 

U1f8c: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U1f8d: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp5) 
U1f8e: tmp12:= ADD_DSZ32(0x00000020, tmp12) SEQW URET0

do_smm_vmexit:
U1f90: tmp1:= ZEROEXT_DSZ32() 
do_smm_vmexit_ovr_enter_rip:
U1f91: tmp10:= ZEROEXT_DSZ32() 
U1f92: tmp5:= ZEROEXT_DSZ32(0x00001f95) 

U1f94: tmp8:= TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U04c4
U1f95: LFNCEWTMRK-> MOVE_DSZ32() 
U1f96: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 

U1f98: tmp14:= READURAM( , 0x005c, 64) 
U1f99: tmp9:= READURAM( , 0x0011, 64) 
U1f9a: BTUJB_DIRECT_NOTTAKEN(tmp14, 0x0000000a, U35a9) !m0,m1,m2 

U1f9c: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000d8, mode=0x01, tmp9) 
U1f9d: LDHINT_CACHEALL_ASZ64_SC1(tmp8) 
U1f9e: tmp9:= ZEROEXT_DSZ64(tmp9, tmp8) 

U1fa0: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000c8, mode=0x01, tmp9) 
U1fa1: LDHINT_CACHEALL_ASZ64_SC1(tmp7) 
U1fa2: tmp15:= AND_DSZ32(0x00000400, tmp0) 

U1fa4: tmp15:= MOVEMERGEFLGS_DSZ64(IMM_MACRO_ALIAS_INSTRUCTION, tmp15) !m0 
U1fa5: tmp3:= CMOVCC_DSZ64_CONDZ(tmp15, tmp3) 
U1fa6: tmp0:= OR_DSZ32(0x00000400, tmp0) 

U1fa8: tmp5:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1fad
U1fa9: tmp11:= READURAM( , 0x0057, 64) 
U1faa: tmp5:= ZEROEXT_DSZ32(0x00000001) 

U1fac: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004b8, mode=0x01, tmp9, tmp11) 
U1fad: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004b4, mode=0x01, tmp9, tmp5) 
U1fae: ROVR<-LFNCEWAIT-> NOP SEQW SAVEUIP1 U1fb0SEQW GOTO U7262

U1fb0: tmp15:= ZEROEXT_DSZ32(0x000001e5) 
U1fb1: MOVETOCREG_DSZ64(tmp15, 0x00b) 
U1fb2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000508, mode=0x01, tmp9, tmp1) 

U1fb4: tmp15:= AND_DSZ32(0x00000100, tmp4) 
U1fb5: tmp15:= SHL_DSZ32(tmp15, 0x00000014) 
U1fb6: tmp0:= OR_DSZ32(tmp15, tmp0) 

U1fb8: LFNCEMARK-> tmp4:= MOVEFROMCREG_DSZ64( , 0x513) 
U1fb9: tmp14:= MOVEFROMCREG_DSZ64( , 0x281, 32) !m1 
U1fba: MOVETOCREG_DSZ64( , 0x00000000, 0x7fe) 

U1fbc: tmp1:= TESTUSTATE( , UCODE, 0x2000) ? SEQW GOTO U1fc2
U1fbd: tmp15:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U1fbe: tmp15:= NOTAND_DSZ32(0x00000020, tmp15) 

U1fc0: MOVETOCREG_DSZ64(tmp15, 0x6c3) !m2 
U1fc1: tmp1:= ZEROEXT_DSZ32(0x00000001) 
U1fc2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004f0, mode=0x01, tmp9, tmp1) 

U1fc4: tmp1:= MOVEFROMCREG_DSZ64( , 0x088) 
U1fc5: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000bf00,  , tmp1) !m2 
U1fc6: tmp2:= MOVEFROMCREG_DSZ64( , 0x20f, 32) !m1 

U1fc8: tmp1:= ADD_DSZ64(0x00000400, tmp9) SEQW SAVEUIP0 U1fc9SEQW GOTO U318e
U1fc9: MOVETOCREG_DSZ64( , 0x00000000, 0x7f8) 
U1fca: tmp12:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U1fcc: rsp:= ZEROEXT_DSZ64(tmp7) 
U1fcd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000320, mode=0x01, tmp9, tmp2) 
U1fce: MOVETOCREG_DSZ64( , 0x00000000, 0x6c0) 

U1fd0: MOVETOCREG_DSZ64( , 0x00000000, 0x78e) 
U1fd1: tmp13:= READURAM( , 0x0070, 64) 
U1fd2: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x7c6) !m0 

U1fd4: tmp1:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U1fd5SEQW GOTO U6a4c
U1fd5: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 
U1fd6: WRITEURAM( , 0x00000000, 0x0014, 32) 

U1fd8: MOVETOCREG_BTS_DSZ64( , 0x00000008, 0x007) 
U1fd9: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001cc, mode=0x01, tmp9, tmp1) SEQW SAVEUIP1 U1fdaSEQW GOTO U19c4
U1fda: WRITEURAM(tmp4, 0x004c, 64) 

U1fdc: MOVETOCREG_DSZ64( , 0x00000000, 0x513) 
U1fdd: tmp4:= unk_a6f() !m0 
U1fde: SYNCMARK-> tmp11:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_IMMEDIATE) !m0 

U1fe0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004a0, mode=0x01, tmp9, tmp14) 
U1fe1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000498, mode=0x01, tmp9, tmp13) 
U1fe2: tmp6:= NOTAND_DSZ64(0x00000007, tmp6) 

U1fe4: tmp15:= CONCAT_DSZ32(0x00000018) 
U1fe5: tmp6:= NOTAND_DSZ64(tmp15, tmp6) 
U1fe6: WRITEURAM(tmp6, 0x001f, 64) 

U1fe8: tmp3:= READURAM( , 0x005c, 64) 
U1fe9: tmp5:= AND_DSZ32(0x00001800, tmp5) 
U1fea: MOVETOCREG_DSZ64(tmp5, 0x7f9, 32) !m1 

U1fec: LFNCEWAIT-> FETCHFROMEIP1_ASZ64( , tmp8) 
U1fed: MOVETOCREG_DSZ64(tmp8, 0x067) 
U1fee: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 

U1ff0: tmp3:= BT_DSZ32(tmp3, 0x00000008) 
U1ff1: tmp3:= SELECTCC_DSZ32_CONDB(tmp3, 0x00000002) 
U1ff2: tmp13:= OR_DSZ64(tmp3, tmp13) SEQW SAVEUIP0 U1ff4SEQW GOTO U5721

U1ff4: LFNCEMARK-> unk_13f() !m2 
U1ff5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000488, mode=0x01, tmp9, tmp4) 
U1ff6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000490, mode=0x01, tmp9, tmp11) 

U1ff8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000480, mode=0x01, tmp9, tmp1) 
U1ff9: tmp1:= AND_DSZ32(0xfff101ff, tmp0) 
U1ffa: tmp1:= NOTAND_DSZ32(0x00300000, tmp1) 

U1ffc: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000023c, mode=0x01, tmp9, tmp1) 
U1ffd: WRITEURAM(tmp1, 0x0013, 32) 
U1ffe: SYNCWAIT-> BTUJB_DIRECT_NOTTAKEN(tmp12, 0x0000003a, U3ae0) !m0,m1,m2 SEQW GOTO U008e

U2000: tmp15:= MOVEFROMCREG_DSZ64( , 0x068) 
U2001: tmp15:= AND_DSZ32(0x0000ffff, tmp15) 
U2002: tmp15:= SHL_DSZ64(tmp15, 0x00000030) 

U2004: WRITEURAM(tmp15, 0x010e, 64) 
U2005: tmp15:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
U2006: tmp15:= BTR_DSZ32(tmp15, 0x00000005) SEQW GOTO U347d

U2008: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U2009: SAVEUIP( , 0x01, U2e46) !m0 SEQW GOTO U040c
U200a: tmp0:= ADD_DSZ64(0x000000c8, tmp5) 

U200c: unk_d68(tmp4, tmp9, tmp0) 
U200d: tmp0:= unk_d60(tmp4, tmp9) 
U200e: MOVETOCREG_DSZ64(tmp0, 0x7e0, 32) !m1,m2 SEQW GOTO U3a2d

U2010: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U2011: tmp14:= SAVEUIP(0x01, U1d98) !m0 SEQW GOTO U201a
FUN_ucode_0002012:
U2012: tmp13:= MOVEFROMCREG_DSZ64( , 0x070) 

U2014: tmp13:= AND_DSZ32(0x00000002, tmp13) 
U2015: tmp13:= SHL_DSZ32(tmp13, 0x00000003) 
U2016: SYNCFULL-> MOVETOCREG_DSZ64(tmp13, 0x63a) !m2 SEQW URET1

U2018: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U2019: tmp14:= SAVEUIP(0x01, U1d44) !m0 
U201a: tmp13:= AND_DSZ32(0x000000fc, tmp6) 

U201c: tmp13:= SUB_DSZ32(0x00000014, tmp13) 
U201d: tmp15:= MOVEFROMCREG_DSZ64( , 0x701) 
U201e: tmp15:= NOTAND_DSZ32(tmp15, 0x00010000) SEQW GOTO U5e5a

U2020: tmp1:= LDZX_DSZN_ASZ32_SC1(rdi, mode=0x08) !m1 
U2021: tmp10:= SUB_DSZN(tmp1, rax) !m1 
U2022: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 

U2024: MSLOOP-> tmp4:= SUB_DSZN(0x00000001, tmp4) !m1 
U2025: UJMPCC_DIRECT_TAKEN_CONDZ(tmp10, U0464) 
U2026: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U0464) SEQW GOTO U2020

U2028: SAVEUIP( , 0x01, U5db4) !m0 SEQW GOTO U18d0
U2029: tmp3:= SELECTCC_DSZ32_CONDNB(tmp11, 0x00000001) 
U202a: tmp3:= AND_DSZ32(tmp6, tmp3) 

U202c: tmm3:= unk_702(mm3) 
U202d: tmm1:= unk_496(tmm1, tmm3) 
U202e: tmm3:= FMOV( , tmm1) SEQW GOTO U2281

U2030: SAVEUIP( , 0x01, U76ca) !m0 SEQW GOTO U18d0
FUN_ucode_0002031:
U2031: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U2032: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U2034: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 
U2035: tmp12:= ADD_DSZ32(0x00000040, tmp12) 
U2036: tmp8:= ZEROEXT_DSZ32(tmp8, tmp5) 

U2038: tmp9:= SHR_DSZ32(tmp8, 0x00000010) 
U2039: LFNCEWAIT-> tmp5:= MOVETOCREG_DSZ64(tmp6, tmp8) !m1 
U203a: tmp9:= ZEROEXT_DSZ32(tmp9, tmp5) 

U203c: tmp5:= MOVETOCREG_DSZ64(tmp2, tmp9) !m1 
U203d: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2031
U203e: URET(0x00) 

U2040: WRITEURAM(tmp15, 0x000c, 64) 
U2041: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U2042: tmp15:= AND_DSZ32(0x0000003e, tmp15) 

U2044: tmp15:= SUB_DSZ32(0x0000000c, tmp15) 
U2045: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U3211) 
U2046: tmp15:= MOVEFROMCREG_DSZ64( , 0x00c) SEQW GOTO U2dc2

U2048: tmp15:= MOVEFROMCREG_DSZ64( , 0x701) 
U2049: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp15, 0x0000000e, 0x701) !m0 
U204a: tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 

U204c: tmp14:= MOVEFROMCREG_DSZ64( , 0x067) 
U204d: tmp14:= SUB_DSZN(tmp15, tmp14) !m1 
U204e: MOVETOCREG_DSZ64(tmp14, 0x067) SEQW GOTO U0705

U2050: SAVEUIP( , 0x01, U04bc) !m0 SEQW GOTO U18d0
U2051: tmp0:= ZEROEXT_DSZ32(0x00006ec3) 
U2052: tmp0:= CONCAT_DSZ16(tmp0, 0x000043a7) 

U2054: tmp15:= ZEROEXT_DSZ32(0x00003b6d) 
U2055: tmp15:= CONCAT_DSZ16(tmp15, 0x00003210) 
U2056: tmp0:= CONCAT_DSZ32(tmp0, tmp15) SEQW GOTO U23a1

U2058: NOP 
U2059: SYNCFULL-> UJMP( , tmp15) 
U205a: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000b, U2711) !m0,m1 SEQW SAVEUIP1 U205cSEQW GOTO U0a95

U205c: tmp1:= ZEROEXT_DSZ32(0x60000000) 
U205d: tmp2:= ZEROEXT_DSZ32(0x00000005) 
U205e: tmp3:= ZEROEXT_DSZ32(0x00000040) SEQW GOTO U1ac9

U2060: tmp15:= MOVEFROMCREG_DSZ64( , 0x7e1) 
U2061: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U5975) !m2 
U2062: tmp0:= READURAM( , 0x005c, 64) 

U2064: tmp0:= NOTAND_DSZ64(0x00e00000, tmp0) 
U2065: WRITEURAM(tmp0, 0x005c, 64) !m2 
U2066: tmp15:= READURAM( , 0x0007, 64) 

U2068: WRITEURAM(tmp15, 0x0050, 32) !m2 
U2069: tmp15:= SHR_DSZ32(tmp15, 0x00000014) 
U206a: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000002, U57ed) !m0,m2 

U206c: SAVEUIP( , 0x01, U57ed) !m0 SEQW GOTO U28f5
U206d: SYNCFULL-> UFLOWCTRL( , tmp4, USTATE) 
U206e: tmp9:= ZEROEXT_DSZ32(0x000007f6) 

U2070: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp10, tmp9) 
U2071: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U0bb8
U2072: SAVEUIP( , 0x01, U17ec) !m0 

FUN_ucode_0002074:
U2074: MOVE_DSZ32() 
FUN_ucode_0002075:
U2075: LBSYNC(0x00000001) 
U2076: SYNCFULL-> LBSYNC(0x00000007) SEQW GOTO U0164

U2078: NOP 
U2079: NOP 
U207a: NOP 

U207c: NOP 
U207d: tmp6:= unk_203( , 0x00000001) 
U207e: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U2711) SEQW GOTO U0c3c

U2080: SAVEUIP( , 0x01, U670c) !m0 SEQW GOTO U18d0
U2081: tmp0:= SHR_DSZ32(tmp0, 0x00000007) 
U2082: MOVETOCREG_DSZ64(tmp0, 0x6c5) !m2 

U2084: WRITEURAM( , 0x00000000, 0x0053, 64) !m2 
U2085: tmp1:= READURAM( , 0x0020, 64) 
U2086: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000001f, U65f2) !m0,m1 SEQW GOTO U0c52

U2088: tmp9:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U2089: tmp6:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U208a: tmp9:= NOTAND_DSZ64(tmp6, tmp9) 

U208c: tmp9:= AND_DSZ64(0x00000800, tmp9) SEQW GOTO U4b22
U208d: tmp15:= ZEROEXT_DSZ32(0x00000001) 
U208e: PORTOUT_DSZ32_ASZ16_SC1(0x5114,  , tmp15) !m2 SEQW URET1

U2090: SAVEUIP( , 0x01, U3130) !m0 SEQW GOTO U18d0
U2091: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U2092: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U2091) !m1 

U2094: tmp1:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 
U2095: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U3bea) !m0,m1,m2 
U2096: tmp14:= ZEROEXT_DSZ32(0x000037aa) SEQW GOTO U3dc2

U2098: tmp0:= READURAM( , 0x0007, 64) 
U2099: WRITEURAM(tmp0, 0x0078, 32) 
U209a: tmp9:= MOVEFROMCREG_DSZ64( , 0x2dc, 32) !m1 

U209c: tmp0:= AND_DSZ32(0x00600000, tmp0) 
U209d: tmp0:= SUB_DSZ32(0x00200000, tmp0) 
U209e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2804) SEQW GOTO U2801

U20a0: SAVEUIP( , 0x01, U057c) !m0 SEQW GOTO U18d0
U20a1: tmp2:= SUB_DSZ32(0x00000001, tmp1) 
U20a2: tmm4:= unk_7c2(mm2, tmm1) 

U20a4: tmm4:= unk_496(tmm4, tmm4) 
U20a5: tmm2:= unk_6a7(tmm1, tmm0) 
U20a6: mm6:= unk_76a(tmm2) SEQW GOTO U410d

U20a8: tmp0:= MOVEFROMCREG_DSZ64( , 0x068) 
U20a9: tmp0:= SUB_DSZ16(0x00003a94, tmp0) 
U20aa: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U3a96) 

U20ac: tmp11:= READURAM( , 0x000f, 64) 
U20ad: tmp1:= AND_DSZ32(0x00000070, tmp11) 
U20ae: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2128) SEQW GOTO U3c8a

U20b0: tmp15:= READURAM( , 0x0007, 64) 
U20b1: WRITEURAM(tmp15, 0x0078, 32) SEQW SAVEUIP1 U20b2SEQW GOTO U18d0
U20b2: tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 

U20b4: tmp3:= MOVEFROMCREG_DSZ64( , 0x281, 32) !m1 
U20b5: tmp2:= NOTAND_DSZ32(tmp3, tmp2) SEQW GOTO U636c
U20b6: tmp13:= SAVEUIP(0x00, U08b6) SEQW URET1

U20b8: MOVETOCREG_BTS_DSZ64( , 0x0000000c, 0x29e) !m1 
U20b9: SAVEUIP_REGOVR(0x01, U20ba, 0x000e) !m0 SEQW GOTO U2b15
U20ba: NOP 

U20bc: SAVEUIP( , 0x01, U1879) !m0 SEQW GOTO U18d0
FUN_ucode_00020bd:
U20bd: SYNCFULL-> tmp1:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U20be: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x8404) !m2 

U20c0: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U20c6) !m0,m1 
U20c1: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U20c2) !m1 SEQW GOTO U5d65
U20c2: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000009, U20c6) !m1 

U20c4: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x9700) !m2 
U20c5: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U20c6) !m1 SEQW GOTO U5d65
U20c6: URET(0x01) !m0 

U20c8: SAVEUIP( , 0x01, U3f15) !m0 SEQW GOTO U18d0
U20c9: tmm2:= unk_704(mm0) 
U20ca: mm0:= unk_644(tmm2) 

U20cc: tmp1:= ZEROEXT_DSZ32(0x0000ffff) 
U20cd: tmm0:= unk_7c2(mm1, tmm0) 
U20ce: mm7:= FMOV( , tmm0) !m0,m2 SEQW GOTO U17ec

U20d0: tmp11:= READURAM( , 0x000f, 64) 
U20d1: WRITEURAM(tmp11, 0x0048, 64) 
U20d2: SAVEUIP( , 0x01, U0d7d) !m0 SEQW GOTO U18d0

U20d4: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U5cb8) !m2 
U20d5: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U5cd9) !m2 
U20d6: WRITEURAM(tmp7, 0x0022, 64) !m2 SEQW GOTO U217c

U20d8: tmp11:= READURAM( , 0x000f, 64) 
U20d9: WRITEURAM(tmp11, 0x0048, 64) 
U20da: SAVEUIP( , 0x01, U1a29) !m0 SEQW GOTO U18d0

U20dc: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U4012) 
U20dd: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U4022) 
U20de: tmp7:= READURAM( , 0x0022, 64) !m2 SEQW GOTO U217c

U20e0: SAVEUIP( , 0x01, U3a81) !m0 SEQW GOTO U18d0
U20e1: mm2:= unk_72a(tmm0) 
U20e2: tmm6:= unk_743(mm2, tmm6) 

U20e4: tmm5:= unk_483(tmm6, tmm4) 
U20e5: tmm5:= unk_53f(tmm1, tmm5) 
U20e6: LFNCEMARK-> tmm7:= unk_6ee(tmm5) !m2 SEQW GOTO U01a2

U20e8: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x00b) 
U20e9: MOVETOCREG_BTS_DSZ64( , 0x00000004, 0x63a) 
U20ea: tmp0:= MOVEFROMCREG_DSZ64( , 0x63e) 

U20ec: tmp1:= SHR_DSZ32(tmp0, 0x00000008) 
U20ed: tmp0:= NOTAND_DSZ32(tmp1, tmp0) 
U20ee: tmp0:= AND_DSZ32(0x00000ff0, tmp0) SEQW GOTO U06de

U20f0: tmp3:= PINTMOVDTMM2I_DSZ32(tmm4) 
U20f1: tmp3:= AND_DSZ32(0x0000003f, tmp3) 
U20f2: tmm6:= unk_624(tmm3, tmm3) 

U20f4: tmp4:= PINTMOVDTMM2I_DSZ32(tmm6) 
U20f5: tmp4:= AND_DSZ32(0x0000003f, tmp4) 
U20f6: tmp5:= SHL_DSZ32(tmp4, 0x00000006) 

U20f8: tmp5:= OR_DSZ32(tmp3, tmp5) 
U20f9: tmm6:= unk_704(mm5) 
U20fa: tmm6:= unk_620(tmm6) 

U20fc: tmp2:= PINTMOVDTMM2I_DSZ32(tmm6) 
U20fd: tmp5:= AND_DSZ32(0x00000002, tmp7) 
U20fe: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U2100) SEQW GOTO U2105

U2100: tmp12:= OR_DSZ16(0x00000001, tmp12) 
U2101: tmp3:= MOVEFROMCREG_DSZ64( , 0x486) 
U2102: tmp4:= AND_DSZ8(0x00000001, tmp3) 

U2104: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U1948) 
U2105: SAVEUIP( , 0x01, U1236) !m0 
U2106: UJMP( , tmp2) 

U2108: unk_dff() 
U2109: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x63a) !m2 
U210a: MOVETOCREG_OR_DSZ64( , 0x00000007, 0x63e) !m0 

U210c: unk_eff() 
U210d: WRITEURAM(tmp15, 0x000c, 64) 
U210e: tmp15:= MOVEFROMCREG_DSZ64( , 0x510) SEQW GOTO U041c

U2110: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U76a5
U2111: tmp15:= MOVEFROMCREG_DSZ64( , 0x527) 
U2112: MOVETOCREG_OR_DSZ64(tmp15, 0x00000003, 0x527) !m0 

U2114: tmp15:= MOVEFROMCREG_DSZ64( , 0x001) 
U2115: WRITEURAM(tmp15, 0x000c, 32) 
U2116: LBSYNC(0x00000001) SEQW GOTO U3d26

U2118: WRITEURAM(tmp15, 0x000c, 64) 
U2119: tmp15:= MOVEFROMCREG_DSZ64( , 0x510) 
U211a: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000013, U074d) !m0 

U211c: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000009, U22e6) !m1 
U211d: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000a, U22e6) !m0,m1 
U211e: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000005, U18aa) !m2 SEQW GOTO U32a9

U2120: WRITEURAM(tmp15, 0x000c, 64) 
U2121: tmp15:= MOVEFROMCREG_DSZ64( , 0x527) 
U2122: MOVETOCREG_BTS_DSZ64(tmp15, 0x527) !m2 

U2124: tmp15:= MOVEFROMCREG_DSZ64( , 0x00c) 
U2125: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000013, U5b94) !m0,m2 
U2126: tmp15:= MOVEFROMCREG_DSZ64( , 0x001) SEQW GOTO U1939

U2128: tmp12:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
U2129: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp12, 0x00000007, U6dde) !m0,m1 
U212a: tmp0:= READURAM( , 0x001c, 64) 

U212c: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x2f1, 32) !m1 
U212d: PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , 0x00000000) !m2 
U212e: tmp0:= MOVEFROMCREG_DSZ64( , 0x2eb, 32) !m1 

U2130: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U212e) !m1 
U2131: tmp0:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U2132: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000005, 0x29d) !m1 

U2134: tmp11:= READURAM( , 0x000f, 64) 
U2135: tmp11:= NOTAND_DSZ32(0x00000070, tmp11) 
U2136: WRITEURAM(tmp11, 0x000f, 32) 

U2138: tmp13:= SHR_DSZ32(tmp11, 0x00000010) 
U2139: tmp13:= AND_DSZ32(0x0000000f, tmp13) 
U213a: CMPUJZ_DIRECT_NOTTAKEN(tmp13, 0x00000006, U5f4d) !m0,m2 

U213c: tmp13:= AND_DSZ32(0x00000007, tmp11) 
U213d: CMPUJZ_DIRECT_NOTTAKEN(tmp13, 0x00000003, U5f4d) !m0,m2 
U213e: LFNCEMARK-> SAVEUIP( , 0x01, U5f4d) !m0 SEQW GOTO U208d

U2140: SAVEUIP(rsp, 0x01, U2aa9) !m0 SEQW GOTO U18d0
U2141: tmp0:= PORTIN_DSZ8_ASZ16_SC1(tmp1) 
U2142: LFNCEMARK-> tmp10:= PORTIN_DSZ8_ASZ16_SC1(tmp1) 

U2144: tmp0:= CONCAT_DSZ8(tmp10, tmp0) SEQW GOTO U5ac8
U2145: tmp15:= MOVEFROMCREG_DSZ64( , 0x001) 
U2146: SYNCFULL-> UFLOWCTRL( , tmp15, URET0) 

U2148: tmp15:= READURAM( , 0x000c, 64) SEQW URET0
U2149: tmp0:= unk_d9b(tmp1) 
U214a: LFNCEMARK-> tmp10:= PORTIN_DSZ8_ASZ16_SC1(tmp1) 

U214c: tmp0:= NOTAND_DSZ32(0xff000000, tmp0) 
U214d: tmp10:= SHL_DSZ32(tmp10, 0x00000018) 
U214e: tmp0:= OR_DSZ32(tmp0, tmp10) SEQW GOTO U5ac8

U2150: MSSTOP-> tmp4:= ZEROEXT_DSZ32N(r64dst) !m1 SEQW GOTO U1f24
U2151: tmp0:= PORTIN_DSZ16_ASZ16_SC1(tmp1) 
U2152: LFNCEMARK-> tmp10:= PORTIN_DSZ16_ASZ16_SC1(tmp1) 

U2154: tmp0:= CONCAT_DSZ16(tmp10, tmp0) SEQW GOTO U5ac8
U2155: NOP 
U2156: LFNCEWTMRK->MSSTOP-> FETCHFROMEIP1_ASZ32( , tmp1) 

U2158: MSSTOP-> MJMPTARGET_INDIRECT_ASZ32( , tmp1) SEQW GOTO U3dfa
U2159: tmp0:= PORTIN_DSZ8_ASZ16_SC1(tmp1) 
U215a: LFNCEMARK-> tmp10:= unk_d9b(tmp1) 

U215c: tmp10:= SHL_DSZ32(tmp10, 0x00000008) SEQW GOTO U214e
U215d: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x50c0) !m2 
U215e: tmp11:= SHL_DSZ64(tmp11, 0x00000008) 

U2160: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x0000000a, U5c6c) !m0,m2 
U2161: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp4, tmp5) SEQW URET0
U2162: PORTOUT_DSZ32_ASZ16_SC1(0x00d4,  , 0x00000000) !m2 SEQW GOTO U03e6

U2164: STAD_DSZ32_ASZ32_SC1(tmp2, mode=0x18,  , tmp4) !m1,m2 
U2165: rax:= CMOVCC_DSZ64_CONDZ(rax, tmp3) !m2 SEQW UEND0
U2166: NOP SEQW GOTO U395d

U2168: STAD_DSZ32_ASZ32_SC1(tmp2, mode=0x18,  , tmp4) !m1,m2 
U2169: rax:= CMOVCC_DSZ8_CONDNZ(tmp1, rax) !m2 SEQW UEND0
U216a: NOP SEQW GOTO U1a4d

U216c: STAD_DSZ32_ASZ32_SC1(tmp8, mode=0x18,  , tmp3) 
U216d: unk_12f(tmp2, tmp0) !m2 SEQW UEND0
U216e: NOP SEQW GOTO U2b65

FUN_ucode_0002170:
U2170: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U2171: PORTOUT_DSZ32_ASZ16_SC1(0x5110,  , tmp15) !m2 SEQW URET1
U2172: NOP SEQW GOTO U03e4

U2174: tmp15:= ZEROEXT_DSZ32(0x00000001) 
U2175: PORTOUT_DSZ32_ASZ16_SC1(0x5110,  , tmp15) !m2 SEQW URET1
U2176: NOP SEQW GOTO U03e4

FUN_ucode_0002178:
U2178: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U2179: tmpv0:= READAFLAGS( , tmpv0) !m2 SEQW URET1
U217a: PORTOUT_DSZ32_ASZ16_SC1(0x00d4,  , 0x00000000) !m2 SEQW GOTO U662a

U217c: tmp0:= READURAM( , 0x0008, 64) !m2 
U217d: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U217e: SYNCFULL-> UFLOWCTRL( , tmp0, MSLOOPCTR) SEQW GOTO U5992

U2180: tmp7:= MOVEFROMCREG_DSZ64( , 0x48f) 
U2181: LFNCEMARK-> tmm7:= unk_698( , xmm0) 
U2182: tmp5:= MOVEFROMCREG_DSZ64( , 0x00c) 

U2184: tmp2:= AND_DSZ32(0x00000400, tmp5) 
U2185: tmp8:= MOVEFROMCREG_DSZ64( , 0x48c) 
U2186: tmp2:= SHR_DSZ32(tmp2, 0x00000003) SEQW GOTO U59a5

U2188: tmp4:= MOVEFROMCREG_DSZ64( , 0x48f) 
U2189: tmp5:= MOVEFROMCREG_DSZ64( , 0x013) SEQW GOTO U351d
U218a: tmp0:= MOVEFROMCREG_DSZ64( , 0x513) 

U218c: tmp15:= CONCAT_DSZ32(0x00030000) 
U218d: tmp0:= NOTAND_DSZ64(tmp15, tmp0) 
U218e: MOVETOCREG_DSZ64(tmp0, 0x513) !m2 

U2190: tmp2:= CONCAT_DSZ32(tmp2, 0x00038003) SEQW SAVEUIP0 U2191SEQW GOTO U2521
U2191: tmp1:= LEA_DSZ8_ASZ32_SC1(tmp8, DS, r64idx, mode=0x18) 
U2192: LFNCEMARK-> unk_d04(tmp8, r64idx) !m1 

U2194: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x525) 
U2195: tmp0:= NOTAND_DSZ64(0x00000fff, tmp2) 
U2196: tmp15:= MOVEFROMCREG_DSZ64( , 0x51e) 

U2198: tmp15:= XOR_DSZ64(tmp0, tmp15) 
U2199: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000001, U7639) !m1,m2 
U219a: tmp15:= AND_DSZ32(0x00000fff, tmp1) 

U219c: rax:= OR_DSZ64(tmp15, tmp0) 
U219d: rbx:= ZEROEXT_DSZ64(tmp1) 
U219e: rcx:= AND_DSZ32(0x00000078, tmp2) SEQW GOTO U17ec

U21a0: tmp7:= ZEROEXT_DSZ32(0x00000001) SEQW GOTO U2181
FUN_ucode_00021a1:
U21a1: PORTOUT_DSZ32_ASZ16_SC1(0x00c8,  , tmp0) !m2 
U21a2: NOP SEQW URET1

U21a4: NOP 
U21a5: tmp1:= XOR_DSZ32(0x40000000, tmp1) 
U21a6: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000001e, U21a8) !m0,m1 SEQW GOTO U21a9

U21a8: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U21a9: tmp0:= ZEROEXT_DSZ32(tmp0) 
U21aa: UJMP( , tmp1) 

U21ac: rdx:= CONCAT_DSZ16(0x00002800, rdx) 
U21ad: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U21b0
U21ae: rdx:= OR_DSZ32(0x00000800, rdx) 

U21b0: tmp0:= SHR_DSZ64(tmp10, 0x0000000e) 
U21b1: tmp0:= NOTAND_DSZ32(tmp0, 0x00100000) 
U21b2: rdx:= OR_DSZ32(tmp0, rdx) SEQW GOTO U0282

U21b4: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x4840) !m2 
U21b5: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x4848) !m2 
U21b6: rax:= ZEROEXT_DSZ32(tmp0) SEQW GOTO U21c8

U21b8: tmp0:= ZEROEXT_DSZ32(0x00000007) 
U21b9: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000004, 0x2db) !m1,m2 SEQW GOTO U079e
U21ba: NOP 

U21bc: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x4850) !m2 
U21bd: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x4858) !m2 
U21be: rax:= ZEROEXT_DSZ32(tmp0) SEQW GOTO U21c8

U21c0: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000000, U38b9) !m1,m2 
U21c1: tmp14:= ZEROEXT_DSZ32(0x00002bd1) SEQW GOTO U5b26
U21c2: NOP 

U21c4: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x4860) !m2 
U21c5: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x4868) !m2 
U21c6: rax:= ZEROEXT_DSZ32(tmp0) 

U21c8: rbx:= SHR_DSZ64(tmp0, 0x00000020) 
U21c9: rcx:= ZEROEXT_DSZ32(tmp1) 
U21ca: rdx:= SHR_DSZ64(tmp1, 0x00000020) SEQW GOTO U17ec

U21cc: NOP SEQW GOTO U17ec
U21cd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U0654) 
U21ce: tmp8:= OR_DSZ16(0x00000010, tmp8) 

U21d0: tmp2:= AND_DSZ16(0x00000010, tmp1) 
U21d1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U4fd9) 
U21d2: MOVETOCREG_DSZ64(tmp8, 0x48c) !m2 SEQW GOTO U21fe

U21d4: SAVEUIP_REGOVR(0x01, U21d5, 0x0023) !m0 SEQW GOTO U3c72
U21d5: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp3, U17ec) 
U21d6: tmp1:= unk_222(tmp3) 

U21d8: tmp0:= SHL_DSZ32(tmp1, 0x00000008) 
U21d9: tmp3:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000001) 
U21da: tmp0:= SHR_DSZ32(tmp0, tmp3) SEQW GOTO U28ed

U21dc: rdx:= OR_DSZ32(0x00000100, rdx) SEQW GOTO U17ec
U21dd: tmp2:= AND_DSZ32(tmp3, tmp2) 
U21de: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U56de) 

U21e0: tmm4:= unk_494( , tmm1) 
U21e1: tmm4:= unk_57f(tmm2, tmm4) 
U21e2: LFNCEWAIT-> tmm7:= unk_482(tmm4, tmm1) !m2 SEQW GOTO U0404

U21e4: tmp0:= READURAM( , 0x0010, 64) 
U21e5: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U21e6: tmp0:= unk_222(tmp0) 

U21e8: tmp0:= SUB_DSZ32(tmp0, 0x00000020) 
U21e9: rax:= ADD_DSZ8(tmp0, 0x00003020) SEQW GOTO U17ec
U21ea: tmm0:= unk_7c2(mm5, 0x00000000) 

U21ec: tmm0:= unk_69d( , tmm0) 
U21ed: tmp9:= unk_6a0() 
U21ee: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp8, 0x00000020, 0x48c) !m2 

U21f0: LFNCEWAIT-> mm0:= unk_6a1(tmm1, tmm0) !m2 
U21f1: NOP 
U21f2: NOP 

U21f4: LFNCEMARK-> tmp7:= AND_DSZ16(0x00000020, tmp1) 
U21f5: NOP 
U21f6: NOP 

U21f8: LFNCEWAIT-> tmp8:= MOVEFROMCREG_DSZ64( , 0x48c) 
U21f9: tmp9:= OR_DSZ32(0x00008080, tmp8) 
U21fa: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp7) 

U21fc: tmp9:= CMOVCC_DSZ16_CONDZ(tmp9, tmp8) 
U21fd: MOVETOCREG_DSZ64(tmp9, 0x48c) !m2 
U21fe: SYNCFULL-> NOP SEQW GOTO U17ec

U2200: tmp0:= unk_d61(tmp2) 
U2201: unk_e6b(tmp0) !m1,m2 
U2202: tmp6:= CONCAT_DSZ32(tmp0) 

U2204: tmp6:= TEST_DSZ64(tmp6, tmp6) 
U2205: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U07fe) 
U2206: tmp7:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) SEQW GOTO U01aa

U2208: tmp12:= SHR_DSZ64(tmp0, 0x00000020) 
U2209: tmp14:= SAVEUIP(0x01, U23e2) !m0 
U220a: tmp7:= TESTUSTATE(tmp0, SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U574d

U220c: tmp14:= SAVEUIP(0x01, U245d) !m0 
U220d: tmp13:= SAVEUIP(0x00, U574d) SEQW GOTO U01ba
U220e: tmp13:= SAVEUIP(0x00, U08ce) SEQW URET1

U2210: tmp7:= MOVEFROMCREG_DSZ64( , 0x000) 
U2211: tmp7:= AND_DSZ32(tmp7, 0x002c6800) 
U2212: tmp7:= OR_DSZ32(tmp7, 0x00008008) SEQW GOTO U5a55

U2214: SAVEUIP_REGOVR(0x01, U2215, 0x0024) !m0 SEQW GOTO U1d8e
U2215: tmp2:= WRMSLOOPCTRFBR( , 0x00000003) 
U2216: tmp2:= SHL_DSZ32(tmp2, 0x00000006) 

U2218: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bc00, tmp2) !m2 
U2219: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U17ec) !m2 
U221a: unk_edf(tmp0) 

U221c: tmp2:= ADD_DSZ32(0x00000040, tmp2) 
U221d: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2218
U221e: NOP SEQW UEND0

U2220: FETCHFROMEIP1_ASZ64( , tmp9) !m1 
U2221: tmp13:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 
U2222: GENARITHFLAGS(tmp13) !m2 SEQW UEND0

U2224: tmp2:= NOTAND_DSZ32(0x0000003f, tmp2) 
U2225: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2769) SEQW GOTO U4e81
U2226: NOP 

U2228: FETCHFROMEIP1_ASZ64( , tmp9) !m1 
U2229: tmp14:= MOVEFROMCREG_DSZ64( , 0x01b) 
U222a: SYNCFULL-> MOVETOCREG_DSZ64(tmp14, 0x752) !m2 SEQW GOTO U0cd5

U222c: tmp6:= ZEROEXT_DSZ32(0x00000c0c) 
U222d: tmp6:= CONCAT_DSZ16(0x00002e83, tmp6) SEQW GOTO U1c60
U222e: NOP 

U2230: tmp11:= AND_DSZ32(0x00000003, tmp2) 
U2231: tmp13:= SAVEUIP(0x00, U0cf9) 
U2232: MOVETOCREG_DSZ64(0x00000008, 0x000) SEQW GOTO U3d48

U2234: tmp10:= ZEROEXT_DSZ32(tmp6) 
U2235: LFNCEMARK-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U2236: tmp1:= AND_DSZ32(0x00030000, tmp9) 

U2238: MOVETOCREG_OR_DSZ64(tmp0, 0x7fe, tmp1) !m2 
U2239: tmp0:= ZEROEXT_DSZ32(0x00000009) 
U223a: tmp1:= RDSEGFLD(UNK_SEG_04, SEL) 

U223c: tmp13:= SHL_DSZ32(tmp13, 0x0000000e) 
U223d: tmp1:= CONCAT_DSZ16(tmp13, tmp1) 
U223e: SAVEUIP( , 0x00, U1f92) 

U2240: LFNCEWAIT-> tmp15:= RDSEGFLD(CS, SEL+FLGS+LIM) 
U2241: WRSEGFLD(tmp15, UNK_SEG_09, FLGS) 
U2242: tmp15:= RDSEGFLD(CS, BASE) 

U2244: LFNCEMARK-> WRSEGFLD(tmp15, UNK_SEG_09, BASE) 
U2245: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4e84
U2246: URET(0x00) 

U2248: MOVETOCREG_DSZ64(tmp14, 0x000) 
U2249: tmp12:= ZEROEXT_DSZ16(0x000000b9) 
U224a: tmp5:= TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U224d

U224c: tmp5:= ZEROEXT_DSZ32(0x00000010) 
U224d: WRITEURAM(tmp6, 0x006f, 64) 
U224e: tmp13:= ZEROEXT_DSZ32(0x00000003) SEQW GOTO U01d2

U2250: tmp12:= ZEROEXT_DSZ16(0x00001b81) 
U2251: tmp9:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U2252: tmp9:= READAFLAGS( , tmp9) !m2 

U2254: tmp10:= ZEROEXT_DSZ32(tmp9) 
U2255: tmp13:= ZEROEXT_DSZ32(0x00000002) 
U2256: tmp5:= WRITEURAM( , 0x00000000, 0x006f, 64) SEQW GOTO U01d2

U2258: tmp12:= ZEROEXT_DSZ16(0x000000b9) 
U2259: tmp9:= ZEROEXT_DSZ32(tmp10) 
U225a: tmp13:= ZEROEXT_DSZ32(0x00000000) SEQW GOTO U2256

U225c: WRITEURAM(tmp1, 0x001f, 32) !m2 
U225d: NOP SEQW GOTO U1b14
U225e: NOP 

U2260: tmp12:= ZEROEXT_DSZ16(0x00001b81) 
U2261: tmp9:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U2262: tmp9:= READAFLAGS( , tmp9) !m2 

U2264: tmp10:= ZEROEXT_DSZ32(tmp9) 
U2265: tmp13:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U3385
U2266: tmp13:= SAVEUIP(0x00, U37ca) SEQW URET1

U2268: tmp12:= ZEROEXT_DSZ16(0x000000b9) 
U2269: tmp9:= ZEROEXT_DSZ32(tmp10) 
U226a: tmp13:= ZEROEXT_DSZ32(0x00000000) SEQW GOTO U3385

FUN_ucode_000226c:
U226c: MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) 
U226d: tmp14:= MOVEFROMCREG_DSZ64( , 0x51b) 
U226e: tmp14:= ZEROEXT_DSZ16(0x00001000, tmp14) SEQW GOTO U0dc5

caseD_2270:
U2270: tmp0:= MOVEFROMCREG_DSZ64( , 0x692) 
U2271: tmp0:= NOTAND_DSZ32(0x00000006, tmp0) 
U2272: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp0, 0x00000001, 0x692) SEQW GOTO U1eb4

caseD_2274:
U2274: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 
U2275: tmp0:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4, 0x00000002) 
U2276: tmp4:= ADD_DSZ64(0x00000004, tmp4) SEQW GOTO U2772

caseD_2278:
U2278: tmp3:= ZEROEXT_DSZ32(0x0000aac0) 
U2279: SAVEUIP( , 0x01, U19a8) !m0 SEQW GOTO U0079
U227a: tmp13:= SAVEUIP(0x00, U034a) SEQW URET1

caseD_227c:
U227c: tmp2:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 
U227d: tmp4:= ADD_DSZ64(0x00000002, tmp4) 
U227e: SAVEUIP( , 0x01, U45a9) !m0 SEQW GOTO U0079

caseD_2280:
U2280: SAVEUIP( , 0x01, U3bee) !m0 SEQW GOTO U0079
U2281: tmm1:= unk_535(tmm3, tmm1) !m1 
U2282: SYNCWAIT-> tmm7:= unk_430(tmm1, tmm7) !m1 SEQW URET1

caseD_2284:
U2284: SAVEUIP( , 0x01, U19d5) !m0 SEQW GOTO U0079
U2285: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7) 
U2286: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000008) SEQW URET1

caseD_2288:
U2288: SAVEUIP( , 0x01, U2bde) !m0 SEQW GOTO U0079
U2289: tmp1:= ZEROEXT_DSZ32(tmp2) 
U228a: SYNCFULL-> UJMP( , tmp14) 

caseD_228c:
U228c: SAVEUIP( , 0x01, U2dfa) !m0 SEQW GOTO U0079
U228d: BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x00000007, U6399) !m0,m1 
U228e: PORTOUT_DSZ32_ASZ16_SC1(tmp4,  , tmp5) SEQW URET0

U2290: tmp10:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000001a0) 
U2291: tmp10:= SHR_DSZ64(tmp10, 0x00000020) 
U2292: tmp0:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp4) SEQW GOTO U0061

caseD_2294:
U2294: tmp0:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 
U2295: tmp4:= ADD_DSZ64(0x00000002, tmp4) 
U2296: UJMP( , tmp0) 

caseD_2298:
U2298: SAVEUIP_REGOVR(0x01, U2299, 0x0018) !m0 
U2299: SAVEUIP( , 0x00, U25c9) 
U229a: SAVEUIP( , 0x01, U02b2) !m0 SEQW GOTO U0079

caseD_229c:
U229c: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U229d: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000004) 
U229e: tmp4:= ADD_DSZ64(0x00000008, tmp4) SEQW GOTO U5c52

caseD_22a0:
U22a0: tmp2:= ZEROEXT_DSZ32(0x0000000f) 
U22a1: SAVEUIP_REGOVR(0x01, U22a2, 0x0032) !m0 
U22a2: SAVEUIP( , 0x01, U2815) !m0 SEQW GOTO U07b5

U22a4: PORTOUT_DSZ32_ASZ16_SC1(0x490c,  , 0x00000000) !m2 
U22a5: PORTOUT_DSZ32_ASZ16_SC1(0x4910,  , 0x00000000) !m2 
U22a6: tmp0:= READURAM( , 0x0009, 64) SEQW GOTO U06fe

U22a8: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 
U22a9: tmp2:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4, 0x00000002) 
U22aa: tmp4:= ADD_DSZ64(0x00000004, tmp4) SEQW GOTO U070e

caseD_22ac:
U22ac: SAVEUIP( , 0x01, U3d52) !m0 SEQW GOTO U0079
U22ad: NOP 
U22ae: NOP 

U22b0: tmp0:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp4) 
U22b1: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000001) 
U22b2: tmp4:= ADD_DSZ64(0x00000005, tmp4) SEQW GOTO U0795

caseD_22b4:
U22b4: tmp0:= READURAM( , 0x0077, 64) 
U22b5: tmp0:= SHR_DSZ64(tmp0, 0x00000022) 
U22b6: tmp0:= AND_DSZ32(0x00000003, tmp0) SEQW GOTO U5e3a

U22b8: tmp4:= ADD_DSZ64(0x00000004, tmp4) 
U22b9: tmp3:= CONCAT_DSZ32(rdx, rax) 
U22ba: tmp5:= READURAM( , 0x008e, 64) SEQW GOTO U1a6a

caseD_22bc:
U22bc: tmp4:= ADD_DSZ64(0x0000002a, tmp4) 
U22bd: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0xffffffffffffffda) 
U22be: NOP SEQW GOTO U607a

U22c0: tmp5:= READURAM( , 0x0077, 64) 
U22c1: tmp5:= SHR_DSZ64(tmp5, 0x00000022) 
U22c2: tmp5:= AND_DSZ32(0x00000003, tmp5) SEQW GOTO U07ad

caseD_22c4:
U22c4: tmp0:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 
U22c5: tmp4:= unk_97f(tmp4, tmp0) !m1 
U22c6: tmp15:= ZEROEXT_DSZ32(0x0000768d) SEQW GOTO U258c

caseD_22c8:
U22c8: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U22c9: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U3154) !m1,m2 
U22ca: tmp14:= ZEROEXT_DSZ32(0x00003866) SEQW GOTO U5f60

caseD_22cc:
U22cc: tmp0:= ZEROEXT_DSZ32(0x0000000b) SEQW GOTO U27b4
U22cd: NOP 
U22ce: NOP 

caseD_22d0:
U22d0: tmp0:= ZEROEXT_DSZ32(0x0000000c) SEQW GOTO U27b4
U22d1: NOP 
U22d2: NOP 

caseD_22d4:
U22d4: tmp0:= ZEROEXT_DSZ32(0x0000000d) SEQW GOTO U27b4
U22d5: NOP 
U22d6: NOP 

caseD_22d8:
U22d8: SAVEUIP_REGOVR(0x01, U22d9, 0x0018) !m0 
U22d9: SAVEUIP( , 0x00, U25d9) 
U22da: SAVEUIP( , 0x01, U02b2) !m0 SEQW GOTO U0079

caseD_22dc:
U22dc: tmp4:= ADD_DSZ64(0x00000004, tmp4) 
U22dd: tmp0:= READURAM( , 0x0053, 64) !m2 
U22de: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U1ea6) !m0,m2 SEQW GOTO U0069

caseD_22e0:
U22e0: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U22e1: tmp4:= ADD_DSZ64(0x00000004, tmp4) SEQW GOTO U2666
U22e2: tmp13:= SAVEUIP(0x00, U08be) SEQW URET1

caseD_22e4:
U22e4: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U22e5: tmp4:= ADD_DSZ64(0x00000004, tmp4) SEQW GOTO U2682
U22e6: WRITEURAM(tmp14, 0x0061, 64) 

U22e8: tmp15:= MOVEFROMCREG_DSZ64( , 0x524) 
U22e9: tmp15:= SHL_DSZ64(tmp15, 0x00000018) 
U22ea: WRITEURAM(tmp15, 0x0128, 64) 

U22ec: tmp15:= MOVEFROMCREG_DSZ64( , 0x511) 
U22ed: LFNCEMARK-> WRITEURAM(tmp15, 0x0027, 64) 
U22ee: unk_dff() 

U22f0: tmp15:= MOVEFROMCREG_DSZ64( , 0x070) 
U22f1: tmp15:= AND_DSZ32(0x00000200, tmp15) 
U22f2: tmp14:= READURAM( , 0x005c, 64) 

U22f4: tmp14:= OR_DSZ32(tmp15, tmp14) 
U22f5: LFNCEWAIT-> WRITEURAM(tmp14, 0x005c, 32) 
U22f6: tmp15:= MOVEFROMCREG_DSZ64( , 0x510) 

U22f8: WRITEURAM(tmp15, 0x0028, 32) 
U22f9: MOVETOCREG_BTS_DSZ64( , 0x00000009, 0x070) !m2 
U22fa: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x527) !m0 

U22fc: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp14, 0x0000000e, U2306) !m0,m1 
U22fd: tmp15:= AND_DSZ32(0x00000200, tmp15) 
U22fe: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00000020) 

caseD_:
U2300: tmp14:= READURAM( , 0x0029, 64) 
U2301: tmp14:= SHR_DSZ64(tmp14, tmp15) 
U2302: tmp14:= SHL_DSZ64(tmp14, 0x0000000c) 

U2304: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp14, 0x526) 
U2305: MOVETOCREG_OR_DSZ64( , 0x00000007, 0x527) !m0 
U2306: tmp14:= READURAM( , 0x0061, 64) SEQW GOTO U2124

caseD_1:
U2308: rsp:= ZEROEXT_DSZ64N(tmp10) !m1 SEQW GOTO U0414
U2309: tmp1:= ZEROEXT_DSZ32(0x000000ff) 
U230a: tmp1:= OR_DSZ32(0x00400000, tmp1) 

U230c: LFNCEWAIT-> tmp1:= MOVETOCREG_DSZ64(tmp1, tmp10) !m1 
U230d: tmp5:= ZEROEXT_DSZ64(tmp5, tmp1) 
U230e: MOVETOCREG_DSZ64(tmp5, tmp10) !m1 SEQW GOTO U332d

caseD_2:
U2310: SAVEUIP( , 0x00, U2174) 
U2311: SAVEUIP( , 0x01, U23f9) !m0 SEQW GOTO U23c1
U2312: tmp14:= SAVEUIP(0x01, U0ca2) !m0 

U2314: tmp12:= ZEROEXT_DSZ8() 
U2315: tmp11:= ZEROEXT_DSZ32(0x0000220e) 
U2316: tmp8:= ZEROEXT_DSZ16(0x0000fc01) SEQW GOTO U39a6

caseD_3:
U2318: tmp2:= SHR_DSZ16(tmp10, 0x0000000b) 
U2319: tmp2:= AND_DSZ8(0x00000007, tmp2) 
U231a: MOVETOCREG_DSZ64(tmp10, 0x48c) 

U231c: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, 0x073) SEQW GOTO U0414
U231d: NOP 
U231e: NOP 

caseD_4:
U2320: MOVETOCREG_DSZ64(tmp2, 0x7fe) SEQW GOTO U2318
U2321: LFNCEWAIT-> tmp1:= LDZX_DSZ32_ASZ32_SC1(tmp4, tmp6) 
U2322: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, tmp6, tmp1) 

U2324: tmp6:= ADD_DSZ32(0x00000004, tmp6) 
U2325: tmp5:= SUB_DSZ32(0x00000004, tmp5) 
U2326: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDLE(tmp5, U388d) SEQW URET1

caseD_5:
U2328: tmp1:= AND_DSZ32(0x000000fc, tmp6) 
U2329: tmp13:= SUB_DSZ32(0x00000034, tmp1) 
U232a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp13, U0414) 

U232c: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0,m2 
U232d: tmp13:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 
U232e: GENARITHFLAGS(tmp13) !m2 SEQW GOTO U17ec

caseD_6:
U2330: tmp7:= RDSEGFLD(SS, SEL+FLGS+LIM) 
U2331: WRSEGFLD(tmp7, SS_USERM, SEL+FLGS+LIM) 
U2332: tmp7:= RDSEGFLD(SS, BASE) 

U2334: WRSEGFLD(tmp7, SS_USERM, BASE) 
U2335: tmp7:= RDSEGFLD(SS, FLGS) 
U2336: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x73c) !m2 SEQW GOTO U5c5a

caseD_7:
U2338: tmp7:= RDSEGFLD(SS, SEL+FLGS+LIM) 
U2339: WRSEGFLD(tmp7, SS_USERM, SEL+FLGS+LIM) 
U233a: tmp7:= RDSEGFLD(SS, BASE) 

U233c: WRSEGFLD(tmp7, SS_USERM, BASE) 
U233d: tmp7:= RDSEGFLD(SS, FLGS) 
U233e: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x73c) !m2 SEQW GOTO U67f4

caseD_8:
U2340: SAVEUIP( , 0x01, U6425) !m0 
U2341: UJMPCC_DIRECT_NOTTAKEN_CONDNO(tmp13, U01e2) 
U2342: unk_13f(tmp10) !m2 

U2344: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x7fe) !m2 SEQW GOTO U01e2
U2345: NOP 
U2346: NOP 

caseD_9:
U2348: SAVEUIP( , 0x01, U0414) !m0 SEQW GOTO U2341
U2349: tmp1:= BTS_DSZ64(0x00000000, 0x0000003f) 
U234a: tmp11:= BT_DSZ16(tmp9, 0x0000000d) 

U234c: SYNCFULL-> tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp11) 
U234d: tmp7:= CMOVCC_DSZ64_CONDNB(tmp1, tmp7) 
U234e: tmm0:= unk_744(mm7) SEQW GOTO U4d3a

caseD_a:
U2350: tmp2:= READURAM( , 0x002c, 64) 
U2351: tmp12:= READURAM( , 0x0056, 64) 
U2352: UJMP( , tmp2) 

U2354: NOP 
U2355: NOP SEQW GOTO U3128
U2356: NOP 

caseD_b:
U2358: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U2359: BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x0000000a, U235c) !m0,m1 
U235a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U4491) 

U235c: MOVETOCREG_BTS_DSZ64(tmp10, 0x00000010, 0x7fe) !m2 
U235d: SAVEUIP_REGOVR(0x01, U235e, 0x00fa) !m0 
U235e: SAVEUIP( , 0x01, U0414) !m0 SEQW GOTO U02ca

caseD_c:
U2360: SAVEUIP( , 0x00, U59d5) 
U2361: SAVEUIP( , 0x01, U6760) !m0 SEQW GOTO U58f5
U2362: tmm7:= unk_5b9(tmm3) 

U2364: tmm4:= unk_5b9(tmm1) 
U2365: tmp11:= ZEROEXT_DSZ32(0x00002726) 
U2366: tmp13:= ZEROEXT_DSZ64(0x000043cc) SEQW GOTO U42ea

caseD_d:
U2368: SAVEUIP( , 0x00, U59d6) 
U2369: SAVEUIP( , 0x01, U6850) !m0 SEQW GOTO U58f5
U236a: NOP 

U236c: NOP 
U236d: tmp14:= SUB_DSZ64(0x00000060, tmp0) 
U236e: WRITEURAM(tmp14, 0x008d, 64) !m2 SEQW GOTO U465c

caseD_e:
U2370: tmp7:= MOVEFROMCREG_DSZ64( , 0x01b) 
U2371: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x752) !m2 
U2372: rcx:= ZEROEXT_DSZ16N(tmp4, rcx) !m1 

U2374: BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x0000000a, U2e89) !m0,m1 
U2375: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U456e) 
U2376: UJMPCC_DIRECT_TAKEN_CONDZ(tmp10, U456e) SEQW GOTO U2e8a

caseD_f:
U2378: tmp7:= MOVEFROMCREG_DSZ64( , 0x01b) 
U2379: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x752) !m2 
U237a: tmp1:= ZEROEXT_DSZ16N(tmp4, rcx) !m1 

U237c: tmp15:= SUB_DSZN(tmp4, rcx) !m1 
U237d: tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp15) 
U237e: rcx:= CMOVCC_DSZ64_CONDNZ(tmp1, rcx) SEQW GOTO U2e89

caseD_1:
U2380: SYNCFULL-> MOVETOCREG_DSZ64(tmp5, 0x6c5) !m2 
U2381: SAVEUIP( , 0x00, U0414) SEQW GOTO U2600
U2382: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 

U2384: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000008, U05ee) 
U2385: tmp5:= ZEROEXT_DSZ64(tmp3) 
U2386: tmp12:= ADD_DSZ64(0x00000018, tmp5) SEQW GOTO U2ce2

caseD_11:
U2388: tmp14:= MOVEFROMCREG_DSZ64( , 0x00c) 
U2389: SAVEUIP( , 0x00, U76a6) 
FUN_ucode_000238a:
U238a: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0,m2 

U238c: tmp0:= MOVEFROMCREG_DSZ64( , 0x01b) 
U238d: SYNCMARK-> MOVETOCREG_DSZ64(tmp0, 0x752) !m2 SEQW URET0
U238e: tmp5:= SUB_DSZ64(tmp1, tmp5) SEQW GOTO U3208

caseD_12:
U2390: tmp4:= ADD_DSZ32(0x00000001, tmp4) SEQW SAVEUIP0 U2391SEQW GOTO U238a
U2391: SYNCWAIT-> tmp14:= ZEROEXT_DSZ16(r64dst) 
U2392: tmp4:= SUB_DSZ32(tmp4, tmp14) 

U2394: SAVEUIP( , 0x01, U43f8) !m0 SEQW GOTO U0164
U2395: NOP 
U2396: NOP 

caseD_13:
U2398: tmp1:= ZEROEXT_DSZ32(0x00000001) SEQW GOTO U5e98
U2399: tmm7:= unk_5ba(tmm7, tmm7) 
U239a: tmm3:= unk_5b9(tmm7) 

U239c: tmp2:= OR_DSZ32(0x000006ad, tmp2) 
U239d: tmm2:= unk_704(mm2) 
U239e: tmm4:= MOVHLPS(tmm7) SEQW GOTO U4235

caseD_14:
U23a0: tmp1:= ZEROEXT_DSZ32(0x00000004) SEQW GOTO U5e98
U23a1: tmp1:= ZEROEXT_DSZ32(0x0000124d) 
U23a2: tmp1:= CONCAT_DSZ16(tmp1, 0x00001e93) 

U23a4: tmp15:= ZEROEXT_DSZ32(0x0000b530) 
U23a5: tmp15:= CONCAT_DSZ16(tmp15, 0x0000a4d8) 
U23a6: tmp1:= CONCAT_DSZ32(tmp1, tmp15) SEQW URET0

caseD_15:
U23a8: WRITEURAM(tmp14, 0x004e, 64) 
U23a9: tmp14:= READURAM( , 0x0053, 64) 
U23aa: BTUJB_DIRECT_NOTTAKEN(tmp14, 0x00000004, U5a84) !m2 

U23ac: tmp2:= MOVEFROMCREG_DSZ64( , 0x562) 
U23ad: tmp2:= NOTAND_DSZ64(0x00000fff, tmp2) 
U23ae: BTUJB_DIRECT_NOTTAKEN(tmp14, 0x00000010, U0272) SEQW GOTO U0275

caseD_16:
U23b0: unk_13f(tmp10) !m2 
U23b1: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x7fe) 
U23b2: SAVEUIP( , 0x01, U0414) !m0 SEQW GOTO U01e2

U23b4: NOP 
U23b5: NOP SEQW GOTO U77ac
U23b6: NOP 

caseD_17:
U23b8: unk_13f(tmp10) !m2 
U23b9: MOVETOCREG_DSZ64(tmp10, 0x7fe) 
U23ba: SAVEUIP( , 0x01, U6425) !m0 SEQW GOTO U01e2

U23bc: LFNCEWTMRK-> WRITEURAM(tmp11, 0x000f, 32) 
U23bd: NOP SEQW GOTO U304c
U23be: NOP 

caseD_18:
U23c0: SAVEUIP( , 0x00, U376a) 
FUN_ucode_00023c1:
U23c1: tmp2:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 
U23c2: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bd00) !m2 

U23c4: tmp1:= ADD_DSZ64(tmp2, tmp1) 
U23c5: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000bd00,  , tmp1) !m2 SEQW URET0
U23c6: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000c, U333e) !m1,m2 SEQW GOTO U60d2

caseD_19:
U23c8: tmp2:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 
U23c9: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bd40) !m2 
U23ca: tmp1:= ADD_DSZ64(tmp2, tmp1) 

U23cc: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000bd40,  , tmp1) !m2 
U23cd: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp13, U2611) SEQW GOTO U4042
U23ce: tmp13:= SAVEUIP(0x00, U08d6) SEQW URET1

caseD_1a:
U23d0: SAVEUIP( , 0x00, U261c) 
U23d1: SAVEUIP_REGOVR(0x01, U23d2, 0x0004) !m0 SEQW GOTO U32cd
U23d2: tmp0:= READURAM( , 0x0020, 64) 

U23d4: tmp0:= SHR_DSZ32(tmp0, 0x00000001) 
U23d5: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U23d6: tmp0:= ADD_DSZ32(tmp0, 0x00000006) SEQW GOTO U0544

caseD_1b:
U23d8: NOP SEQW SAVEUIP1 U23d9SEQW GOTO U0312
U23d9: tmp0:= READURAM( , 0x0009, 64) 
U23da: MOVETOCREG_DSZ64(tmp0, 0x20f, 32) !m1 

U23dc: SAVEUIP( , 0x00, U23cd) SEQW GOTO U23d1
U23dd: NOP 
U23de: NOP 

caseD_1c:
U23e0: NOP 
U23e1: NOP SEQW GOTO U0414
U23e2: LFNCEMARK-> unk_e6b(tmp0, tmp2) 

U23e4: tmp1:= AND_DSZ32(0x00000800, tmp12) 
U23e5: tmp12:= SELECTCC_DSZ32_CONDZ(tmp1, tmp12) 
U23e6: tmp3:= ZEROEXT_DSZ16(tmp7, tmp12) SEQW GOTO U2bf8

caseD_1d:
U23e8: NOP 
U23e9: SAVEUIP( , 0x01, U0414) !m0 SEQW GOTO U2341
U23ea: WRITEURAM( , 0x00000000, 0x0007, 32) 

U23ec: tmp1:= MOVEFROMCREG_DSZ64( , 0x78e) 
U23ed: tmp2:= MOVEFROMCREG_DSZ64( , 0x067) 
U23ee: tmp2:= SUB_DSZ32(tmp1, tmp2) SEQW GOTO U43ae

caseD_1e:
U23f0: MOVETOCREG_DSZ64( , 0x00000000, 0x065) !m2 
U23f1: MOVETOCREG_DSZ64(tmp10, 0x7f8) !m2 
U23f2: TESTUSTATE( , SYS, !0x0800) !m0,m1 ? SEQW GOTO U0414

U23f4: MOVETOCREG_SHR_DSZ64(tmp10, 0x00000020, 0x004) !m2 SEQW GOTO U670a
U23f5: NOP 
U23f6: NOP 

caseD_1f:
U23f8: NOP SEQW SAVEUIP0 U23f9SEQW GOTO U23c1
U23f9: WRITEURAM( , 0x00000000, 0x0007, 32) 
U23fa: NOP 

U23fc: NOP SEQW GOTO U2515
U23fd: NOP 
U23fe: NOP 

caseD_2:
U2400: tmp8:= RDSEGFLD(UNK_SEG_04, BASE) 
U2401: WRSEGFLD(tmp8, FS, BASE) 
U2402: tmp8:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) 

U2404: WRSEGFLD(tmp8, FS, SEL+FLGS+LIM) SEQW GOTO U0414
U2405: NOP 
U2406: NOP 

caseD_21:
U2408: MOVETOCREG_DSZ64(tmp4, 0x7f0) 
U2409: tmp7:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U240a: MOVETOCREG_BTS_DSZ64(tmp7, 0x00000002, 0x6c3) !m0,m2 

U240c: tmp4:= MOVEFROMCREG_DSZ64( , 0x067) 
U240d: tmp7:= MOVEFROMCREG_DSZ64( , 0x065) 
U240e: tmp7:= SUB_DSZN(tmp7, tmp4) !m1 SEQW GOTO U43b4

caseD_22:
U2410: SAVEUIP( , 0x01, U0414) !m0 SEQW GOTO U5f32
U2411: NOP 
U2412: NOP 

U2414: NOP 
U2415: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U241a
U2416: LFNCEWAIT-> tmp0:= READURAM( , 0x0014, 64) 

caseD_23:
U2418: tmp1:= CONCAT_DSZ8(tmp3, tmp2) 
U2419: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, U692d, tmp2) !m1 
U241a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp10, U5554) SEQW GOTO U3e36

U241c: SAVEUIP_REGOVR(0x01, U241d, 0x0034) !m0 SEQW GOTO U0ba9
U241d: rax:= ZEROEXT_DSZ32(tmp4) 
U241e: tmp0:= MOVEFROMCREG_DSZ64( , 0x2b9, 32) !m1 

caseD_24:
U2420: tmp0:= CONCAT_DSZ8(tmp0, 0x00000020) 
U2421: rbx:= CONCAT_DSZ16(tmp0, 0x00000800) 
U2422: tmp0:= READURAM( , 0x0010, 64) SEQW GOTO U6b75

U2424: tmp0:= ZEROEXT_DSZ32(0x00006164) 
U2425: rax:= CONCAT_DSZ16(tmp0, 0x0000a001) 
U2426: rbx:= ZEROEXT_DSZ32(0x0000ffc4) SEQW GOTO U17ec

caseD_25:
U2428: tmp0:= ZEROEXT_DSZ32(0x00000007) 
U2429: WRITEURAM(tmp0, 0x0042, 32) SEQW GOTO U4d6c
U242a: NOP 

U242c: tmp8:= ZEROEXT_DSZ32() 
U242d: rcx:= ZEROEXT_DSZ8(tmp8) SEQW GOTO U17ec
U242e: tmp1:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

caseD_26:
U2430: tmp1:= ADD_DSZN(tmp3, tmp1) !m1 
U2431: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 
U2432: LFNCEMARK-> WRITEURAM(tmp1, 0x0067, 64) !m2 SEQW GOTO U3a44

U2434: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp9, U17ec) 
U2435: SAVEUIP_REGOVR(0x01, U2436, 0x0023) !m0 SEQW GOTO U3c72
U2436: tmp3:= SELECTCC_DSZ32_CONDNB(tmp3, tmp3) 

caseD_27:
U2438: CMPUJZ_DIRECT_NOTTAKEN(tmp3, U17ec, tmp9) !m2 
U2439: tmp0:= ADD_DSZ32(0x00000123, tmp9) 
U243a: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp9, 0xffffffffffffc020) SEQW GOTO U62be

U243c: tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x4800) !m2 
U243d: tmp5:= AND_DSZ32(0x00000007, tmp5) 
U243e: tmp1:= ZEROEXT_DSZ32(0x11242020) 

caseD_28:
U2440: tmp0:= ADD_DSZ32(0x00000001, tmp5) 
U2441: tmp0:= SHL_DSZ32(tmp0, 0x00000002) 
U2442: tmp0:= SHL_DSZ64(0xffffffffffffffff, tmp0) SEQW GOTO U5ab5

U2444: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x00c0) !m2 
U2445: tmp0:= BT_DSZ64(tmp0, 0x00000017) 
U2446: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000002) 

caseD_29:
U2448: tmp1:= SHR_DSZ32(tmp6, 0x00000013) 
U2449: tmp0:= NOTAND_DSZ32(tmp1, tmp0) 
U244a: rax:= OR_DSZ32(0x00000005, tmp0) SEQW GOTO U0159

U244c: tmp0:= BT_DSZ64(tmp6, 0x00000029) 
U244d: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00100000) 
U244e: tmp1:= OR_DSZ32(tmp0, 0x00002283) 

caseD_2a:
U2450: tmp0:= BT_DSZ64(tmp6, 0x00000037) 
U2451: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00040000) 
U2452: tmp1:= OR_DSZ32(tmp0, tmp1) SEQW GOTO U69f4

U2454: NOP SEQW GOTO U17ec
U2455: WRITEURAM( , 0x00000000, 0x0007, 64) 
U2456: tmpv2:= READURAM( , 0x0053, 64) 

caseD_2b:
U2458: unk_963(tmpv2, 0x00008253) 
U2459: tmpv0:= READURAM( , 0x0070, 64) 
U245a: SYNCFULL-> MOVETOCREG_DSZ64(tmpv0, 0x2c4, 32) !m1 SEQW URET1

U245c: NOP SEQW GOTO U17ec
U245d: LFNCEMARK-> unk_e6b(tmp0, tmp2) !m1,m2 
U245e: tmp12:= ZEROEXT_DSZ16(tmp7, tmp12) 

caseD_2c:
U2460: tmp3:= CONCAT_DSZ32(tmp3, tmp12) 
U2461: tmp14:= SAVEUIP(0x01, U2bf8) !m0 
U2462: tmp1:= MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x7f5) !m2 SEQW GOTO U3994

U2464: TESTUSTATE( , UCODE, 0x0200) ? SEQW GOTO U17ec
U2465: tmp0:= ZEROEXT_DSZ32(0x00000404) 
U2466: rax:= CONCAT_DSZ16(0x00000730, tmp0) 

caseD_2d:
U2468: rdx:= ZEROEXT_DSZ32(0x00000603) SEQW GOTO U17ec
U2469: NOP 
U246a: NOP 

U246c: rdx:= MOVEFROMCREG_DSZ64( , 0x2b9, 32) !m1 
U246d: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp9, U242d) 
U246e: tmp0:= ADD_DSZ32(0x00000001, tmp8) 

caseD_2e:
U2470: rcx:= CONCAT_DSZ8(tmp0, tmp8) 
U2471: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000001, tmp8) 
U2472: rax:= CMOVCC_DSZ32_CONDZ(tmp0, 0x00000005) SEQW GOTO U0731

U2474: NOP SEQW GOTO U17ec
U2475: tmm4:= unk_607(tmm3, tmm2) !m2 
U2476: LFNCEMARK-> tmp2:= AND_DSZ16(0x00000440, tmp9) 

caseD_2f:
U2478: tmp2:= SUB_DSZ16(0x00000440, tmp2) 
U2479: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U0744) 
U247a: mm0:= FMOV( , tmm4) SEQW GOTO U0745

U247c: tmp0:= BT_DSZ64(tmp7, 0x0000002e) 
U247d: tmp1:= BT_DSZ64(tmp6, 0x0000003c) 
U247e: tmp2:= READURAM( , 0x005b, 64) 

caseD_3:
U2480: CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000000, U57d5) !m2 
U2481: CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000001, U5821) !m2 
U2482: CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000003, U58ae) !m0,m2 SEQW GOTO U3722

U2484: NOP SEQW GOTO U17ec
U2485: tmp2:= READURAM( , 0x005c, 64) 
U2486: tmp2:= NOTAND_DSZ32(0x00000200, tmp2) 

caseD_31:
U2488: WRITEURAM(tmp2, 0x005c, 32) 
U2489: MOVETOCREG_BTS_DSZ64( , 0x00000009, 0x00b) 
U248a: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x527) SEQW GOTO U6000

U248c: NOP SEQW GOTO U17ec
U248d: tmp1:= ZEROEXT_DSZ32(0x000038d4) 
U248e: tmp1:= CONCAT_DSZ16(tmp1, 0x00003858) 

caseD_32:
U2490: tmp0:= CONCAT_DSZ32(tmp1, tmp0) 
U2491: LFNCEMARK-> unk_963(tmp0, IMM_MACRO_21) !m0,m2 
U2492: tmp1:= ZEROEXT_DSZ32(0x000024d9) SEQW GOTO U24a5

U2494: tmp0:= BT_DSZ32(tmp7, 0x00000011) 
U2495: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp0, U17ec) 
U2496: rax:= SELECTCC_DSZ32_CONDNZ(tmp9, 0x00000007) 

caseD_33:
U2498: rbx:= SELECTCC_DSZ32_CONDNZ(tmp8, 0x00000004) 
U2499: rdx:= SELECTCC_DSZ32_CONDNZ(tmp9, 0x00000003) SEQW GOTO U17ec
U249a: tmp13:= SAVEUIP(0x00, U59b5) SEQW URET1

U249c: NOP SEQW GOTO U17ec
U249d: tmp1:= SHR_DSZ32(tmp8, 0x00000002) 
U249e: tmp1:= AND_DSZ32(0x00000001, tmp1) 

caseD_34:
U24a0: tmp12:= unk_6a0() 
U24a1: tmm4:= unk_743(mm1, tmm4) 
U24a2: mm0:= unk_482(tmm4, 0x00000000) SEQW GOTO U17ec

U24a4: NOP SEQW GOTO U17ec
U24a5: LFNCEWAIT-> tmp0:= READURAM( , 0x0021, 64) 
U24a6: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U24a9) !m1 

caseD_35:
U24a8: tmp1:= BTS_DSZ32(tmp1, 0x0000001e) 
U24a9: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U24ad) !m1 
U24aa: tmp0:= ZEROEXT_DSZ32(0x0000005f) SEQW GOTO U24ae

U24ac: NOP SEQW GOTO U17ec
U24ad: tmp0:= ZEROEXT_DSZ32(0x00000045) 
U24ae: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000014, U21aa) !m1 

caseD_36:
U24b0: tmp0:= READURAM( , tmp0) !m2 
U24b1: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U21a6) !m1 
U24b2: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000011, U21a5) !m1 SEQW GOTO U21aa

U24b4: tmp0:= SUB_DSZ64(0x00000001, tmp8) 
U24b5: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp0, U17ec) 
U24b6: tmp1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

caseD_37:
U24b8: tmp0:= SHR_DSZ64(tmp7, 0x00000021) 
U24b9: tmp0:= OR_DSZ32(tmp1, tmp0) 
U24ba: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000d, U17ec) !m2 SEQW GOTO U5ad5

U24bc: tmp0:= READURAM( , 0x0087, 64) 
U24bd: tmp1:= ADD_DSZ32(tmp0, tmp0) 
U24be: rbx:= ADD_DSZ32(tmp0, tmp1) 

caseD_38:
U24c0: rax:= ZEROEXT_DSZ32(0x00000003) SEQW GOTO U17ec
U24c1: tmp7:= MOVEFROMCREG_DSZ64( , 0x01c) 
U24c2: tmp7:= NOTAND_DSZ64(0x00004000, tmp7) 

U24c4: MOVETOCREG_DSZ64(tmp7, 0x01c) !m2 
U24c5: tmp1:= READURAM( , 0x0014, 64) 
U24c6: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U24c8) !m1 SEQW GOTO U59c5

caseD_39:
U24c8: MOVETOCREG_BTS_DSZ64(tmp7, 0x0000000d, 0x01c) !m2 SEQW GOTO U59cc
U24c9: tmp1:= READURAM( , 0x0012, 64) 
U24ca: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U3f19) !m1,m2 

U24cc: tmp0:= ZEROEXT_DSZ32(0x0000032d) 
U24cd: tmp0:= BTS_DSZ32(tmp0, 0x00000010) 
U24ce: SAVEUIP_REGOVR( , 0x01, U24d0, 0xa201) !m0 SEQW GOTO U6bfd

caseD_3a:
U24d0: SAVEUIP( , 0x01, U3f19) !m0 SEQW GOTO U38d0
U24d1: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, 0x7f0) !m2 
U24d2: tmp1:= READURAM( , 0x003a, 64) 

U24d4: tmp1:= BTR_DSZ64(tmp1, 0x00000020) 
U24d5: LFNCEMARK-> WRITEURAM(tmp1, 0x003a, 64) !m2 
U24d6: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U008e

caseD_3b:
U24d8: NOP SEQW GOTO U60d2
U24d9: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U5845) !m2 
U24da: LFNCEMARK-> tmp0:= READURAM( , 0x0021, 64) !m2 

U24dc: LFNCEWAIT-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000001f, U24dd) !m0,m1 SEQW GOTO U24da
U24dd: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000008, U276a) !m1 
U24de: tmp1:= SHR_DSZ32(tmp0, 0x0000000c) 

caseD_3c:
U24e0: tmp1:= AND_DSZ32(0x00001fff, tmp1) SEQW GOTO U5d85
U24e1: tmp0:= ZEROEXT_DSZ32(0x0000974c) 
U24e2: tmp0:= CONCAT_DSZ16(0x00004000, tmp0) 

U24e4: tmp9:= PORTIN_DSZ16_ASZ16_SC1(tmp0) 
U24e5: tmp9:= NOTAND_DSZ16(0x00000401, tmp9) 
U24e6: tmp10:= AND_DSZ32(0x00000001, rax) 

caseD_3d:
U24e8: tmp9:= OR_DSZ16(tmp10, tmp9) 
U24e9: tmp9:= OR_DSZ16(0x00000800, tmp9) 
U24ea: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U741a

U24ec: PORTOUT_DSZ16_ASZ16_SC1(tmp0,  , tmp9) SEQW GOTO U7572
U24ed: tmp1:= SHR_DSZ64(tmp3, 0x00000022) 
U24ee: tmp1:= AND_DSZ32(tmp5, tmp1) 

caseD_3e:
U24f0: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000013, U2711) !m0,m1 
U24f1: tmp1:= READURAM( , 0x003a, 64) 
U24f2: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U24f8

U24f4: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U2711) !m1 
U24f5: tmp1:= AND_DSZ32(0xfff300f8, tmp5) 
U24f6: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 

caseD_3f:
U24f8: LFNCEMARK-> WRITEURAM(tmp5, 0x003a, 32) !m2 SEQW GOTO U60d2
U24f9: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U24fa: tmp11:= ADD_DSZN(0x00000080, tmp11) !m1 

U24fc: tmp11:= SUB_DSZN(0x00000010, tmp11) !m1 
U24fd: rdi:= unk_cde(tmp11, 0x000018a0) 
U24fe: tmp12:= SUBR_DSZ64(tmp12, IMM_MACRO_01) !m0 

U2500: tmp11:= SUB_DSZN(0x00000010, tmp11) !m1 
U2501: rdi:= unk_cde(tmp11, 0x000018a0) 
U2502: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U24fc

U2504: NOP SEQW URET1
U2505: SAVEUIP( , 0x01, U2309) !m0 
U2506: TESTUSTATE( , UCODE, !0x0200) !m0 ? SEQW GOTO U3780

U2508: SYNCWTMRK-> SAVEUIP( , 0x01, U60d2) !m0 SEQW GOTO U3780
U2509: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U250a: tmp11:= ADD_DSZN(0x00000080, tmp11) !m1 

U250c: tmp11:= SUB_DSZN(0x00000010, tmp11) !m1 
U250d: rdi:= unk_cd6(tmp11, 0x000018a0) 
U250e: tmp12:= SUBR_DSZ64(tmp12, IMM_MACRO_01) !m0 

U2510: tmp11:= SUB_DSZN(0x00000010, tmp11) !m1 
U2511: rdi:= unk_cd6(tmp11, 0x000018a0) 
U2512: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U250c

U2514: NOP SEQW URET1
U2515: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U4864
U2516: tmp1:= ZEROEXT_DSZ32(0x00000324) 

U2518: tmp0:= READURAM( , 0x0012, 64) 
U2519: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U4864) 
U251a: SYNCFULL-> SAVEUIP_REGOVR( , 0x01, U251c, 0x7210) !m0 SEQW GOTO U6bfd

U251c: SAVEUIP( , 0x01, U4864) !m0 SEQW GOTO U38d0
FUN_ucode_000251d:
U251d: LFNCEMARK-> NOP 
U251e: tmp2:= ZEROEXT_DSZ32(0x0002001b) 

U2520: tmp2:= CONCAT_DSZ32(tmp2, 0x00038003) 
FUN_ucode_0002521:
U2521: tmp0:= NOTAND_DSZ64(tmp2, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U2522: tmp1:= READURAM( , 0x003c, 64) 

U2524: tmp1:= AND_DSZ64(tmp2, tmp1) 
U2525: tmp0:= OR_DSZ64(tmp1, tmp0) 
U2526: LFNCEWAIT-> tmp0:= MOVETOCREG_BTS_DSZ64(tmp0, 0x00000025, 0x752) 

U2528: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x01b) SEQW URET0
U2529: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U196a
U252a: tmp0:= READURAM( , 0x0012, 64) 

U252c: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000006, U196a) !m0,m2 
U252d: SAVEUIP_REGOVR( , 0x01, U252e, 0x3240) !m0 SEQW GOTO U6bfc
U252e: tmpv0:= SAVEUIP(tmp6, 0x01, U334d) !m0 

U2530: SAVEUIP( , 0x00, U271d) SEQW URET1
U2531: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U5188
U2532: tmp1:= ZEROEXT_DSZ32(0x0000034d) 

U2534: tmp3:= READURAM( , 0x0012, 64) 
U2535: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000000d, U5188) !m2 
U2536: SAVEUIP_REGOVR( , 0x01, U2538, 0x5413) !m0 SEQW GOTO U6bfd

U2538: SAVEUIP( , 0x01, U5188) !m0 SEQW GOTO U38d0
U2539: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U253a: tmp0:= AND_DSZ32(0x0000ffff, tmp0) 

U253c: tmp1:= OR_DSZ32(0x00000001, tmp1) 
U253d: tmp0:= SHL_DSZ32(tmp0, 0x0000000f) 
U253e: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp0, 0x6a4, tmp1) !m2 

U2540: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 
U2541: tmp0:= READURAM( , 0x0021, 64) 
U2542: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U276a) !m1 

U2544: tmp0:= READURAM( , 0x0037, 64) !m2 
U2545: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U24da) !m1 SEQW GOTO U276a
U2546: tmp4:= WRMSLOOPCTRFBR() !m0 

U2548: tmp2:= CONCAT_DSZ32(0x00010000, tmp2) 
U2549: tmp0:= ADDSUB_DSZ16_CONDD(0x00000001) 
U254a: tmp0:= SELECTCC_DSZ32_CONDNS(tmp0, 0x00000001) 

U254c: tmp0:= SUB_DSZN(tmp0, rcx) !m1 
U254d: tmp0:= SUB_DSZN(0x00008000, tmp0) !m1 
U254e: tmp14:= SUB_DSZN(0x00008001, tmp0) !m1 

U2550: tmp14:= MOVEMERGEFLGS_DSZ32(0x00002546, tmp14) 
U2551: tmp14:= CMOVCC_DSZ32_CONDNB(tmp14, 0x00006768) 
U2552: tmp15:= MOVEMERGEFLGS_DSZ32(0x0000045e, tmp0) 

U2554: tmp14:= CMOVCC_DSZ32_CONDZ(tmp15, tmp14) 
U2555: tmp1:= SAVEUIP( , 0x01, U068e) !m0 
U2556: UFLOWCTRL( , tmp14, URET1) 

U2558: SYNCWAIT-> tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x18, tmp1) !m0,m1 
U2559: STAD_DSZN_ASZ32_SC1(rdi, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x08, tmp1, tmp0) !m0,m1 
U255a: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, IMM_MACRO_01) !m0 

U255c: tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x18, tmp1) !m0,m1 
U255d: STAD_DSZN_ASZ32_SC1(rdi, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x08, tmp1, tmp0) !m0,m1 
U255e: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U2558

U2560: tmp15:= SUB_DSZN(tmp4) !m1 
U2561: tmp15:= SHL_DSZ32(tmp15, tmp2) SEQW GOTO U1a62
U2562: LFNCEMARK-> unk_e7b(tmp0, tmp2) 

U2564: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U17ec
U2565: LFNCEWAIT-> tmp7:= RDSEGFLD(TSS, BASE) 
U2566: tmp3:= CONCAT_DSZ32(tmp3, tmp7) 

U2568: LFNCEMARK-> WRSEGFLD(tmp3, TSS, BASE) SEQW GOTO U17ec
U2569: tmp1:= PORTIN_DSZ32_ASZ16_SC1(tmp4) 
U256a: tmp7:= PORTIN_DSZ32_ASZ16_SC1(tmp4) 

U256c: tmp7:= CONCAT_DSZ32(tmp1, tmp7) 
U256d: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, 0x0000000c) 
U256e: tmp7:= SHR_DSZ64(tmp7, 0x00000008) 

U2570: tmp7:= AND_DSZ32(tmp1, tmp7) 
U2571: PORTOUT_DSZ32_ASZ16_SC1(0x50c0,  , tmp7) !m2 
U2572: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000000, U2574) !m1 SEQW GOTO U2575

U2574: tmp7:= SAVEUIP_REGOVR(0x01, U2575, 0x0001) !m0 SEQW GOTO U0d59
U2575: LFNCEWAIT-> NOP SEQW URET0
U2576: tmp2:= MOVEFROMCREG_DSZ64( , 0x51b) 

U2578: MOVETOCREG_BTR_DSZ64(tmp2, 0x51b) 
U2579: tmp0:= READURAM( , 0x004a, 64) 
U257a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x7f6) SEQW SAVEUIP1 U257cSEQW GOTO U0164

U257c: tmp5:= SAVEUIP( , 0x00, U3aaa) SEQW GOTO U5ee8
lots_of_ldat_ins:
U257d: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U257e: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U2580: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040) 
U2581: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000060) 
U2582: LFNCEWAIT-> tmp10:= UFLOWCTRL(tmp10, tmp2, LDAT_IN) 

U2584: tmp10:= UFLOWCTRL(tmp10, tmp4, LDAT_IN) 
U2585: tmp10:= UFLOWCTRL(tmp10, tmp6, LDAT_IN) 
U2586: tmp10:= UFLOWCTRL(tmp10, tmp8, LDAT_IN) 

U2588: tmp12:= ADD_DSZ32(0x00000080, tmp12) 
U2589: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U257d
U258a: URET(0x01) !m0 

U258c: tmp5:= MOVEFROMCREG_DSZ64( , 0x105) 
U258d: MOVETOCREG_BTR_DSZ64(tmp5, 0x0000000f, 0x105) !m0,m2 
U258e: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U1ea6

U2590: WRITEURAM(tmp15, 0x000d, 32) !m2 SEQW GOTO U1ea6
U2591: tmp1:= AND_DSZ32(0x000000ff, tmp1) 
U2592: tmp0:= AND_DSZ32(0x000000ff, tmp2) 

U2594: tmp0:= SUB_DSZ32(tmp0, tmp1) 
U2595: tmp5:= SELECTCC_DSZ32_CONDB(tmp0, tmp5) 
U2596: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U2814

U2598: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U259c
U2599: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U259a: MOVETOCREG_BTS_DSZ64(tmp0, 0x0000000b, 0x285) !m0,m1,m2 

U259c: tmp0:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U259d: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U259e: tmp5:= SELECTCC_DSZ32_CONDNZ(tmp0, tmp5) SEQW GOTO U2814

U25a0: tmp10:= ZEROEXT_DSZ32(0x00003380) 
U25a1: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000028, tmp12) 
U25a2: tmp3:= unk_04d(tmp13) SEQW GOTO U5935

U25a4: tmp13:= ZEROEXT_DSZ64(tmp3) SEQW GOTO U5416
FUN_ucode_00025a5:
U25a5: tmpv0:= CONCAT_DSZ16(0x0000070f) 
U25a6: tmpv0:= OR_DSZ32(tmpv0, 0x00000001) 

U25a8: tmpv1:= READURAM( , 0x0020, 64) 
U25a9: tmpv1:= CONCAT_DSZ8(tmpv1, 0x00000046) 
U25aa: tmpv1:= SHL_DSZ64(tmpv1, 0x00000030) 

U25ac: tmpv1:= OR_DSZ64(0x000046b4, tmpv1) 
U25ad: tmpv3:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 
U25ae: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmpv3, 0x00000000, U25ad) !m1 

U25b0: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x22e) !m0,m1 SEQW SAVEUIP1 U25b1SEQW GOTO U3ad6
U25b1: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1 
U25b2: URET(0x00) 

U25b4: tmp10:= ZEROEXT_DSZ32(0x00003380) 
U25b5: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000030, tmp12) 
U25b6: tmp3:= unk_04d(tmp13) SEQW GOTO U5935

U25b8: tmp13:= ZEROEXT_DSZ64(tmp3) SEQW GOTO U5419
U25b9: tmp7:= ZEROEXT_DSZ32(0x00000021) 
U25ba: LFNCEMARK-> MOVETOCREG_DSZ64(tmp7, 0x00b) 

U25bc: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U25bd: tmp10:= READAFLAGS( , tmp10) !m2 
U25be: tmp9:= ZEROEXT_DSZ32(tmp10) SEQW SAVEUIP0 U25c0SEQW GOTO U610a

U25c0: tmp15:= unk_207(0x000000f5) 
U25c1: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp7, U58b8, tmp5) !m2 
U25c2: tmp14:= ZEROEXT_DSZ32(0x00014809) 

U25c4: SAVEUIP_REGOVR( , 0x01, U25c5, 0x7503) !m0 SEQW GOTO U371a
U25c5: NOP 
U25c6: NOP 

U25c8: SAVEUIP( , 0x01, U6248) !m0 SEQW GOTO U268c
U25c9: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U25ca: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000004) 

U25cc: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000008) 
U25cd: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp10, 0x00000000, U25d2) !m1 
U25ce: tmp5:= PORTIN_DSZ32_ASZ16_SC1(tmp8) 

U25d0: tmp5:= AND_DSZ32(tmp10, tmp5) 
U25d1: tmp9:= OR_DSZ32(tmp9, tmp5) 
U25d2: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(tmp8,  , tmp9) 

U25d4: LFNCEWAIT-> tmp4:= ADD_DSZ64(0x0000000c, tmp4) 
U25d5: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U25c9
U25d6: NOP 

U25d8: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 SEQW GOTO U1ea6
U25d9: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U25da: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x00000004) 

U25dc: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x0000000c) 
U25dd: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp10, 0x00000000, U25e2) !m1 
U25de: tmp5:= PORTIN_DSZ64_ASZ16_SC1(tmp8) 

U25e0: tmp5:= AND_DSZ64(tmp10, tmp5) 
U25e1: tmp9:= OR_DSZ64(tmp9, tmp5) 
U25e2: LFNCEMARK-> PORTOUT_DSZ64_ASZ16_SC1(tmp8,  , tmp9) 

U25e4: LFNCEWAIT-> tmp4:= ADD_DSZ64(0x00000014, tmp4) 
U25e5: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U25d9
U25e6: NOP 

U25e8: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 SEQW GOTO U1ea6
U25e9: tmp10:= LDZX_DSZ16_ASZ32_SC1(tmp4, mode=0x18) 
U25ea: tmp1:= CONCAT_DSZ16(tmp10, 0x00000070) 

U25ec: WRITEURAM(tmp5, 0x003e, 64) !m2 
U25ed: MOVE_DSZ32() 
U25ee: UPDATEUSTATE( , 0xfc) 

U25f0: UPDATEUSTATE( , !0x08) !m0 SEQW SAVEUIP0 U25f1SEQW GOTO U2c21
U25f1: tmp10:= AND_DSZ32(0x0000000f, tmp10) 
U25f2: tmp9:= NOTAND_DSZ32(0x0000000e, tmp11) 

U25f4: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmp10, 0x7f6, tmp9) 
U25f5: tmp9:= NOTAND_DSZ32(tmp11, tmp10) 
U25f6: NOP 

U25f8: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000000, U0bb9) SEQW GOTO U17ec
U25f9: tmp8:= READURAM( , 0x0078, 64) 
U25fa: tmp9:= AND_DSZ32(0x00600000, tmp8) 

U25fc: tmp9:= SUB_DSZ32(0x00200000, tmp9) 
U25fd: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U25fe) SEQW GOTO U3aae
U25fe: SAVEUIP( , 0x00, U5a45) 

FUN_ucode_0002600:
U2600: tmp7:= MOVEFROMCREG_DSZ64( , 0x067) 
U2601: AETTRACE( , tmp7, 0x0e) 
U2602: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x0b5) !m0,m2 

U2604: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW URET0
U2605: MOVETOCREG_DSZ64(tmp4, 0x7f9, 32) !m1 
U2606: NOP 

U2608: LFNCEMARK-> MOVETOCREG_DSZ64(tmp2, 0x20f, 32) !m1 SEQW URET0
U2609: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U606a
U260a: tmp3:= ZEROEXT_DSZ32(0x0000036d) 

U260c: tmp0:= READURAM( , 0x0012, 64) 
U260d: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000000d, U606a) !m1 
U260e: SAVEUIP_REGOVR( , 0x01, U2610, 0xe130) !m0 SEQW GOTO U6bfd

U2610: SAVEUIP( , 0x01, U606a) !m0 SEQW GOTO U38d0
U2611: tmp0:= MOVEFROMCREG_DSZ64( , 0x2eb, 32) !m1 
U2612: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U2611) !m1 

U2614: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cf, 32) !m1 
U2615: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000001, 0x2cf) !m1,m2 
U2616: SAVEUIP_REGOVR(0x01, U2618, 0x0000) !m0 SEQW GOTO U2b15

U2618: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2ce) !m0,m1 
U2619: tmp0:= MOVEFROMCREG_DSZ64( , 0x2ce, 32) !m1,m2 
U261a: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U261c) !m1 SEQW GOTO U2619

U261c: tmp4:= SAVEUIP_REGOVR( , 0x00, U261d, 0x2401) SEQW GOTO U25a5
U261d: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U261e: tmp0:= NOTAND_DSZ32(0x00000060, tmp0) 

U2620: MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1 
U2621: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d3, 32) !m1,m2 
U2622: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000c, U2624) !m1 SEQW GOTO U2621

U2624: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x06d) !m0 SEQW GOTO U4042
do_apply_ucode_patch:
U2625: tmp0:= WRITEURAM(tmp0, 0x0053, 32) !m2 
U2626: tmp0:= MOVEFROMCREG_DSZ64( , 0x39e, 32) !m1 

U2628: tmp11:= ZEROEXT_DSZ32(0x00000001) 
U2629: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U27f1) !m1 
U262a: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 

U262c: tmp11:= ZEROEXT_DSZ32(0x00000002) 
U262d: tmp2:= TEST_DSZ64(tmp4, tmp4) 
U262e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U27f1) 

U2630: tmp11:= ZEROEXT_DSZ32(0x00000003) 
U2631: tmp0:= ADD_DSZN(0x0000001f, tmp4) !m1 
U2632: tmp2:= TEST_DSZ64(tmp0, tmp0) 

U2634: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U27f1) 
U2635: tmp14:= SAVEUIP(0x01, U690d) !m0 
U2636: LFNCEWAIT-> TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U5b55

U2638: tmp13:= LDZX_DSZ32_ASZ32_SC1(tmp4) SEQW GOTO U5b56
U2639: tmp12:= READURAM( , 0x0057, 64) 
U263a: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000007, 0x00b) !m0,m2 

U263c: unk_256() !m1 SEQW SAVEUIP0 U263dSEQW GOTO U0129
U263d: LFNCEWAIT-> tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000080) 
U263e: tmp2:= ZEROEXT_DSZ8(tmp2) 

U2640: tmp15:= SUB_DSZ32(0x00000080, tmp1) 
U2641: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U604d) 
U2642: NOP 

U2644: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000080, tmp2) 
U2645: tmp14:= SAVEUIP(0x01, U008e) !m0 
U2646: TESTUSTATE( , VMX, !0x0020) !m0,m2 ? SEQW GOTO U667e

U2648: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000258, tmp12) 
U2649: tmp5:= AND_DSZ32(0x0000000f, tmp5) 
U264a: tmp2:= SHR_DSZ32(tmp2, 0x00000004) 

U264c: tmp5:= SUB_DSZ32(tmp5, tmp2) 
U264d: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp5, U58ce) SEQW URET1
U264e: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U0362

U2650: tmp3:= ZEROEXT_DSZ32(0x00000362) SEQW GOTO U06ce
U2651: tmp13:= SAVEUIP(0x00, U3c6a) 
U2652: WRMSLOOPCTRFBR( , 0x00000007) 

U2654: mm0:= FMOV() !m0 
U2655: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2654
U2656: LFNCEWTMRK-> tmp2:= ZEROEXT_DSZ32(0x0000ffff) 

U2658: tmp1:= ZEROEXT_DSZ32(0x0000037f) 
U2659: LFNCEWAIT-> tmp3:= MOVEFROMCREG_DSZ64( , 0x069) 
U265a: MOVETOCREG_DSZ64( , 0x00000000, 0x00f) 

U265c: MOVETOCREG_DSZ64(tmp2, 0x06a) 
U265d: MOVETOCREG_DSZ64( , 0x00000000, 0x00e) 
U265e: MOVETOCREG_DSZ64( , 0x00000000, 0x00a) 

U2660: MOVETOCREG_DSZ64( , 0x00000000, 0x00d) 
U2661: MOVETOCREG_OR_DSZ64(tmp3, 0x00000001, 0x069) 
U2662: MOVETOCREG_DSZ64(tmp1, 0x486) 

U2664: MOVETOCREG_DSZ64( , 0x00000000, 0x48c) 
U2665: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x073) SEQW URET0
U2666: TESTUSTATE( , SYS, !0xc000) !m0,m1 ? SEQW GOTO U1ea6

U2668: tmp4:= ADD_DSZ64(tmp1, tmp4) SEQW GOTO U1ea6
FUN_ucode_0002669:
U2669: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
FUN_ucode_000266a:
U266a: tmp14:= READUIP_REGOVR(0x01) !m0 

U266c: tmp2:= RDVMCSPLA( , r64dst) 
U266d: tmp12:= READURAM( , 0x0056, 64) 
U266e: tmp6:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U2670: tmp11:= SHR_DSZN(r64dst, 0x0000000f) !m1 
U2671: tmp1:= ADD_DSZ64(0x00000001, tmp12) 
U2672: TESTUSTATE( , SYS, !UST_VMX_DIS | UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U2679

U2674: TESTUSTATE( , UCODE, 0x1000) ? SEQW GOTO U2679
U2675: tmp0:= MOVEINSERTFLGS_DSZ32(0x00000417) 
U2676: NOP 

U2678: tmp4:= ZEROEXT_DSZ32(0x00000005) SEQW SAVEUIP0 U2679SEQW GOTO U6662
U2679: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, U04ae) 
U267a: tmp1:= AND_DSZ32(0x000003f8, tmp2) 

U267c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, U0d14) 
U267d: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x0000000d, U0d14) 
U267e: tmp11:= SHL_DSZ32(tmp2, 0x00000003) 

U2680: LFNCEWAIT-> tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp12, tmp1) 
U2681: tmp7:= SHR_DSZ64(tmp7, tmp11) SEQW URET1
U2682: TESTUSTATE( , SYS, !0x4000) !m0,m1 ? SEQW GOTO U1ea6

U2684: tmp4:= ADD_DSZ64(tmp1, tmp4) SEQW GOTO U1ea6
U2685: tmp4:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U2686: tmp4:= SUB_DSZN(tmp4, tmp3) !m1 

U2688: tmp7:= ZEROEXT_DSZ32(0x00000025) 
U2689: LFNCEMARK-> tmp8:= MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U268a: SAVEUIP( , 0x01, U3d65) !m0 

U268c: tmp15:= READUIP_REGOVR(0x01) !m0 
U268d: tmp3:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
U268e: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000000, U2690) !m1 SEQW GOTO U1cbe

U2690: tmp3:= MOVEFROMCREG_DSZ64( , 0x20e, 32) !m1 
U2691: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000003a, U2692) !m0,m1 SEQW GOTO U269e
U2692: tmp3:= MOVEFROMCREG_DSZ64( , 0x009) 

U2694: tmp11:= OR_DSZ32(0x00000020, tmp3) 
U2695: tmp11:= MOVEFROMCREG_DSZ64( , tmp11) 
U2696: WRITEURAM(tmp11, 0x005d, 64) 

U2698: tmp11:= OR_DSZ32(0x00000040, tmp3) 
U2699: tmp11:= MOVEFROMCREG_DSZ64( , tmp11) 
U269a: WRITEURAM(tmp11, 0x005e, 64) 

U269c: NOP 
U269d: NOP 
U269e: UJMP( , tmp15) 

U26a0: tmp10:= AND_DSZ32(0x00000700, tmp11) 
U26a1: tmp8:= SUB_DSZ32(0x00000700, tmp10) 
U26a2: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp8, U0121) 

U26a4: tmp12:= READURAM( , 0x000a, 64) 
U26a5: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp2, 0x070) !m2 
U26a6: tmp7:= SELECTCC_DSZ64_CONDNP(tmp14, tmp7) 

U26a8: tmp11:= BTR_DSZ32(tmp11, 0x0000001e) 
U26a9: tmp6:= AND_DSZ32(0x00000800, tmp11) 
U26aa: tmp6:= SHR_DSZ32(tmp6, 0x0000000b) 

U26ac: tmp2:= AND_DSZ32(0x000000ff, tmp11) 
U26ad: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp11) 
U26ae: tmp8:= SHL_DSZ32(tmp2, 0x00000002) 

U26b0: tmp6:= OR_DSZ32(tmp8, tmp6) 
U26b1: tmp6:= CONCAT_DSZ16(tmp12, tmp6) 
U26b2: tmp1:= ZEROEXT_DSZ32(tmp11) 

U26b4: tmp13:= ZEROEXT_DSZ16(tmp12) 
U26b5: tmp12:= SHR_DSZ32(tmp12, 0x00000010) 
U26b6: tmp15:= READURAM( , 0x0070, 64) 

U26b8: tmp8:= SUB_DSZ32(0x00000200, tmp10) 
U26b9: tmp8:= SETCC_CONDZ(tmp8) 
U26ba: tmp8:= SHL_DSZ64(tmp8, 0x00000032) 

U26bc: tmp15:= OR_DSZ64(tmp8, tmp15) 
U26bd: WRITEURAM(tmp15, 0x0170, 64) !m2 
U26be: MOVETOCREG_SHR_DSZ64(tmp15, 0x00000020, 0x008) 

U26c0: tmp9:= AND_DSZ32(0x00000500, tmp10) 
U26c1: tmp9:= SUB_DSZ32(0x00000400, tmp9) 
U26c2: tmp14:= MOVEMERGEFLGS_DSZ32(0x00014809, tmp9) 

U26c4: SYNCWAIT-> tmp14:= CMOVCC_DSZ64_CONDZ(tmp14, 0x00016809) 
U26c5: TESTUSTATE( , UCODE, 0x0080) ? SEQW GOTO U26c8
U26c6: tmp14:= BTS_DSZ64(tmp14, 0x00000018) 

U26c8: MOVETOCREG_DSZ64(tmp14, 0x000) !m2 
U26c9: tmp9:= SELECTCC_DSZ64_CONDNZ(tmp9, 0x00000004) 
U26ca: tmp7:= BT_DSZ32(tmp7, 0x0000000c) 

U26cc: tmp9:= SELECTCC_DSZ64_CONDNB(tmp7, tmp9) 
U26cd: MOVETOCREG_DSZ64(tmp9, 0x070) !m2 
U26ce: TESTUSTATE( , UCODE, !0x0080) !m0 ? SEQW GOTO U1e29

U26d0: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 
U26d1: tmp4:= SUB_DSZ32(0x00000300, tmp10) 
U26d2: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U26d4) SEQW GOTO U26ed

U26d4: tmp4:= SUB_DSZ32(0x0000000a, tmp2) 
U26d5: tmp4:= SUB_DSZ32(0x00000003, tmp4) 
U26d6: tmp15:= SETCC_CONDBE(tmp4) 

U26d8: tmp4:= SUB_DSZ32(0x00000000, tmp2) 
U26d9: tmp4:= SETCC_CONDZ(tmp4) 
U26da: tmp15:= OR_DSZ32(tmp4, tmp15) 

U26dc: tmp4:= SUB_DSZ32(0x0000000e, tmp2) 
U26dd: tmp4:= MOVEMERGEFLGS_DSZ32(0x00000002, tmp4) 
U26de: tmp15:= CMOVCC_DSZ64_CONDZ(tmp4, tmp15) 

U26e0: tmp4:= SUB_DSZ32(0x00000014, tmp2) 
U26e1: tmp4:= MOVEMERGEFLGS_DSZ32(0x00000002, tmp4) 
U26e2: tmp15:= CMOVCC_DSZ64_CONDZ(tmp4, tmp15) 

U26e4: tmp4:= SUB_DSZ32(0x00000008, tmp2) 
U26e5: tmp4:= MOVEMERGEFLGS_DSZ32(0x00000003, tmp4) 
U26e6: tmp15:= CMOVCC_DSZ64_CONDZ(tmp4, tmp15) 

U26e8: tmp4:= MOVEFROMCREG_DSZ64( , 0x004) 
U26e9: tmp4:= NOTAND_DSZ32(0x00000003, tmp4) 
U26ea: tmp15:= OR_DSZ32(tmp15, tmp4) 

U26ec: LFNCEMARK-> MOVETOCREG_DSZ64(tmp15, 0x004) 
U26ed: tmp15:= unk_205( , 0xffffffffffffffff) 
U26ee: tmp15:= CONCAT_DSZ32(tmp15) 

U26f0: tmp4:= ADD_DSZ64(tmp12, tmp3) 
U26f1: ROVR<- tmp4:= NOTAND_DSZ64(tmp15, tmp4) SEQW SAVEUIP1 U26f2SEQW GOTO U2178
U26f2: tmp8:= MOVEFROMCREG_DSZ64( , 0x79e) 

U26f4: tmp9:= AND_DSZ32(0x00000500, tmp10) 
U26f5: tmp9:= SUB_DSZ32(0x00000400, tmp9) 
U26f6: tmp8:= SELECTCC_DSZ32_CONDNZ(tmp9, tmp8) 

U26f8: tmp0:= SUB_DSZ32(0x00000400, tmp10) 
U26f9: tmp0:= SELECTCC_DSZ32_CONDNZ(tmp0, 0x00000001) 
U26fa: tmp7:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U26fc: tmp10:= ZEROEXT_DSZ64(tmp3) 
U26fd: tmp0:= unk_206(tmp0) 
U26fe: tmp7:= AND_DSZ32(tmp0, tmp7) 

U2700: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U76ad) 
U2701: SAVEUIP_REGOVR( , 0x01, U2702, 0x9075) !m0 SEQW GOTO U371a
U2702: tmp7:= ZEROEXT_DSZ32(0x0000459e) 

U2704: tmp7:= unk_203(0x00005712, tmp7) 
U2705: NOP 
U2706: UJMP( , tmp7) 

U2708: tmp0:= MOVEFROMCREG_DSZ64( , 0x004) !m2 
U2709: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U270d) !m0,m1 
U270a: tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) !m2 

U270c: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U1dd8) !m2 
U270d: tmp5:= MOVEFROMCREG_DSZ64( , 0x701) 
U270e: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp5, 0x0000000e, 0x701) !m0,m2 SEQW GOTO U085e

U2710: MOVETOCREG_DSZ64( , 0x00000000, 0x065) !m2 
generate_#GP:
U2711: LFNCEMARK-> SIGEVENT( , 0x000000f5) SEQW GOTO U079d
FUN_ucode_0002712:
U2712: tmp15:= READUIP_REGOVR(0x00) 

U2714: tmp13:= CONCAT_DSZ32(tmp13, tmp15) 
U2715: tmp14:= CONCAT_DSZ32(tmp14, 0x0000198d) 
U2716: SAVEUIP( , 0x00, U04cc) SEQW GOTO U0139

U2718: MOVETOCREG_DSZ64( , 0x00000000, 0x065) !m2 SEQW GOTO U2711
U2719: tmp0:= OR_DSZ16(0x00008080, tmp8) 
U271a: LFNCEMARK-> MOVETOCREG_BTR_DSZ64(tmp0, 0x00000009, 0x48c) 

U271c: LFNCEWAIT-> NOP SEQW UEND1
U271d: SAVEUIP( , 0x01, U196a) !m0 
U271e: tmpv0:= SAVEUIP(tmp5, 0x00, U38d0) SEQW GOTO U334d

U2720: NOP 
U2721: LFNCEMARK-> SAVEUIP_REGOVR(0x00, U2722, 0x0000) SEQW GOTO U2735
U2722: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000040) 

U2724: tmp0:= ADD_DSZ32(0x00000040, tmp0) 
U2725: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp0, 0x63a) SEQW GOTO U085e
U2726: tmp13:= SAVEUIP(0x00, U0564) SEQW URET1

U2728: tmp0:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U2729: tmp0:= AND_DSZ32(0x00000800, tmp0) 
U272a: tmp0:= SHR_DSZ32(tmp0, 0x00000007) 

U272c: tmp1:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U272d: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 
U272e: tmp0:= AND_DSZ32(tmp1, tmp0) SEQW GOTO U1a0d

U2730: tmp0:= ZEROEXT_DSZ32(0x00000008) 
U2731: tmp7:= ZEROEXT_DSZ32(0x00000005) 
U2732: LFNCEMARK-> TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U0e59

U2734: SAVEUIP( , 0x00, U489d) 
FUN_ucode_0002735:
U2735: tmp4:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U2736: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x067) SEQW GOTO U54b9

U2738: MOVETOCREG_BTS_DSZ64( , 0x00000004, 0x63a) !m2 
U2739: LFNCEMARK-> NOP SEQW GOTO U085e
U273a: tmp2:= NOTAND_DSZ64(0x00000007, tmp2) 

U273c: MOVETOCREG_DSZ64(tmp2, 0x574) 
U273d: MOVETOCREG_DSZ64(tmp1, 0x575) 
U273e: SAVEUIP( , 0x01, U1925) !m0 SEQW GOTO U0164

U2740: NOP 
U2741: LFNCEMARK-> SAVEUIP( , 0x00, U2722) SEQW GOTO U2735
U2742: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U5ce4) !m2 

U2744: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U59b2) !m2 
U2745: tmp0:= READAFLAGS(tmp7) 
U2746: WRITEURAM(tmp0, 0x0022, 64) !m2 SEQW GOTO U217c

U2748: NOP 
U2749: NOP SEQW GOTO U7c00
U274a: tmp0:= MOVEFROMCREG_DSZ64( , 0x513) 

U274c: tmp15:= CONCAT_DSZ32(0x00030000) 
U274d: tmp0:= NOTAND_DSZ64(tmp15, tmp0) 
U274e: MOVETOCREG_DSZ64(tmp0, 0x513) !m2 

U2750: MOVE_DSZ32() 
U2751: LBSYNC(0x00000002) 
U2752: tmp2:= CONCAT_DSZ32(tmp2, 0x00038003) SEQW SAVEUIP0 U2754SEQW GOTO U2521

U2754: MOVE_DSZ32() 
U2755: LFNCEMARK-> tmp1:= LEA_DSZ8_ASZ32_SC1(tmp8, DS, r64idx, mode=0x18) SEQW SAVEUIP1 U2756SEQW GOTO U043c
U2756: NOP 

U2758: LFNCEWTMRK-> unk_d04(tmp8, r64idx) !m1 SEQW SAVEUIP1 U2759SEQW GOTO U043c
U2759: NOP 
U275a: NOP 

U275c: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x525) 
U275d: tmp0:= NOTAND_DSZ64(0x00000fff, tmp2) 
U275e: tmp15:= MOVEFROMCREG_DSZ64( , 0x51e) 

U2760: tmp15:= XOR_DSZ64(tmp0, tmp15) 
U2761: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000001, U7639) !m1,m2 
U2762: tmp15:= AND_DSZ32(0x00000fff, tmp1) 

U2764: rax:= OR_DSZ64(tmp15, tmp0) 
U2765: rbx:= ZEROEXT_DSZ64(tmp1) 
U2766: rcx:= AND_DSZ32(0x00000078, tmp2) SEQW GOTO U17ec

U2768: MSSTOP-> NOP 
generate_#UD:
U2769: SIGEVENT( , 0x00000019) SEQW GOTO U079d
U276a: tmp0:= ZEROEXT_DSZ32(0x00030300) 

U276c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x6a1) !m2 
U276d: tmp1:= ZEROEXT_DSZ32(0x00000f09) 
U276e: tmp1:= BTS_DSZ32(tmp1, 0x00000010) SEQW GOTO U24a5

U2770: MSSTOP-> NOP 
generate_#NM:
U2771: SIGEVENT( , 0x0000001d) SEQW GOTO U079d
U2772: tmp7:= MOVEFROMCREG_DSZ64( , 0x692) 

U2774: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64(tmp7, 0x692) 
U2775: tmp5:= SUB_DSZ16(0x00007c00, tmp1) 
U2776: tmp5:= SHR_DSZ32(tmp5, 0x00000002) 

U2778: tmp5:= SUB_DSZ32(tmp5, tmp1) 
U2779: tmp5:= SUB_DSZ16(0x00007c00, tmp5) 
U277a: tmp5:= SHL_DSZ32(tmp5, 0x00000005) 

U277c: tmp3:= ADD_DSZ32(0x00007ac0, tmp5) 
U277d: MOVETOCREG_DSZ64(0x00000000, 0x000) 
U277e: tmp6:= ZEROEXT_DSZ32(0x00030600) 

U2780: MOVETOCREG_DSZ64(tmp6, 0x6a1) !m2 
U2781: tmp9:= SUB_DSZ16(0x00007c00, tmp1) 
U2782: LFNCEMARK-> tmp8:= MOVETOCREG_DSZ64(tmp9, 0x6a0) !m2 

U2784: tmp12:= SUB_DSZ32(0x00000001, tmp0) 
U2785: SYNCMARK-> UFLOWCTRL( , tmp12, MSLOOPCTR) 
U2786: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U0f35

U2788: SAVEUIP( , 0x01, U1ea6) !m0 SEQW GOTO U555d
U2789: tmp3:= unk_168(r64src, tmp0) 
U278a: tmp4:= OR_DSZ64(0x00000000, tmp0) 

U278c: tmp2:= SELECTCC_DSZ64_CONDZ(tmp4, tmp2) 
U278d: tmp4:= SELECTCC_DSZ32_CONDZ(tmp4, 0x00000021) 
U278e: tmp3:= unk_18f(tmp3, tmp2) 

U2790: r64src:= unk_07c(tmp3, r64src) SEQW GOTO U080c
U2791: tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U2792: tmp1:= SELECTCC_DSZ32_CONDZ(tmp2, tmp0) 

U2794: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000014, U2711) !m1 
U2795: tmp0:= NOTAND_DSZ32(0x00090000, tmp0) 
U2796: tmp2:= SHL_DSZ32(tmp2, 0x00000010) 

U2798: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp0, 0x7fe, tmp2) !m2 SEQW GOTO U17ec
FUN_ucode_0002799:
U2799: tmp0:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000005) 
U279a: tmp0:= ADD_DSZ32(0x00002200, tmp0) 

U279c: MOVETOCREG_DSZ64( , 0x00000000, tmp0) !m1,m2 
U279d: tmp0:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000006) 
U279e: tmp0:= ADD_DSZ32(0x00002200, tmp0) 

U27a0: MOVETOCREG_DSZ64( , 0x00000000, tmp0) !m1,m2 SEQW URET1
U27a1: tmp9:= ADD_DSZN(tmp6, tmp8) !m1 
U27a2: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U27a6

U27a4: tmp2:= ZEROEXT_DSZ32(0x00000009) 
U27a5: ROVR<- tmp1:= ZEROEXT_DSZ64(tmp9) SEQW SAVEUIP1 U27a6SEQW GOTO U1d90
U27a6: tmp2:= TEST_DSZ64(tmp9, tmp9) 

U27a8: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U17ec) 
U27a9: tmp5:= NOTAND_DSZN(0x00000fff, tmp9) !m1 SEQW SAVEUIP0 U27aaSEQW GOTO U0bba
U27aa: NOP 

FUN_ucode_00027ac:
U27ac: LFNCEWAIT-> unk_dff(tmp5) 
U27ad: UFLOWCTRL( , tmp5, UNK) 
FUN_ucode_00027ae:
U27ae: NOP 

U27b0: tmp15:= READURAM( , 0x005c, 64) 
U27b1: tmp15:= BTS_DSZ64(tmp15, 0x0000002b) 
U27b2: LFNCEMARK-> WRITEURAM(tmp15, 0x005c, 64) SEQW URET1

patch_load_error:
U27b4: tmp0:= CONCAT_DSZ16(0x00000100, tmp0) 
U27b5: WRITEURAM(tmp0, 0x000e, 32) !m2 
U27b6: TESTUSTATE( , SYS, !0xc000) !m0,m1 ? SEQW GOTO U5ae4

U27b8: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U5711
U27b9: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U27ba: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x29d) !m1,m2 

U27bc: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U27bd: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000009, U27c0) !m1 
U27be: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U27bc) !m1 

U27c0: tmp14:= ZEROEXT_DSZ32(0x000006ee) SEQW GOTO U3dc2
uarch_bufs_ldat_init:
U27c1: SYNCFULL-> MOVETOCREG_DSZ64(tmp1, 0x121) !m2 
U27c2: MOVETOCREG_DSZ64( , 0x00000000, 0x124) 

U27c4: MOVETOCREG_DSZ64( , 0x00000000, 0x125) 
U27c5: MOVETOCREG_DSZ64( , 0x00000000, 0x126) 
U27c6: MOVETOCREG_DSZ64( , 0x00000000, 0x127) 

U27c8: MOVETOCREG_DSZ64(tmp2, 0x120) !m2 SEQW URET0
U27c9: BTUJB_DIRECT_NOTTAKEN(rcx, 0x00000005, U6bce) !m1 
U27ca: BTUJB_DIRECT_NOTTAKEN(rcx, 0x00000002, U27cc) !m0,m1 SEQW GOTO U27cd

U27cc: SAVEUIP_REGOVR(0x01, U27cd, 0x0005) !m0 SEQW GOTO U32cd
U27cd: tmp2:= CONCAT_DSZ32(rbx, rdx) 
U27ce: tmp4:= NOTAND_DSZ32(0x00000001, rax) 

U27d0: tmp5:= AND_DSZ32(0x000000c0, rcx) 
U27d1: tmp5:= SHR_DSZ32(tmp5, 0x00000001) 
U27d2: tmp6:= AND_DSZ32(0x00000018, rcx) 

U27d4: tmp8:= OR_DSZ32(tmp6, tmp5) 
U27d5: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U27d6) !m1 SEQW GOTO U27d9
U27d6: NOP 

U27d8: tmp9:= ADD_DSZ32(tmp8, 0x00004052) SEQW GOTO U27da
U27d9: tmp9:= ADD_DSZ32(tmp8, 0x00004392) 
switch:
U27da: LFNCEWAIT-> UJMP( , tmp9) 

ucode_update_invalid:
U27dc: tmp11:= CONCAT_DSZ16(0x00000100, tmp11) 
U27dd: WRITEURAM(tmp11, 0x000e, 32) 
U27de: tmp8:= TESTUSTATE( , SYS, !0xc000) !m0,m1 ? SEQW GOTO U3de5

U27e0: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U27e8
U27e1: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U27e2: SYNCFULL-> tmp1:= MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x29d) !m1 

U27e4: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U27e5: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000009, U27e8) !m1 
U27e6: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U27e4) !m1 

U27e8: tmp14:= ZEROEXT_DSZ32(0x000006ee) SEQW GOTO U3dc2
U27e9: tmp5:= OR_DSZ32() 
U27ea: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U27ec: tmp10:= READAFLAGS( , tmp10) !m2 
U27ed: tmp12:= READURAM( , 0x005c, 64) 
U27ee: tmp12:= SHR_DSZ64(tmp12, 0x0000002c) 

U27f0: tmp12:= AND_DSZ32(0x00000008, tmp12) SEQW GOTO U492a
patch_apply_error:
U27f1: tmp11:= CONCAT_DSZ16(0x00000100, tmp11) 
U27f2: WRITEURAM(tmp11, 0x000e, 32) 

U27f4: WRITEURAM( , 0x00000000, 0x000d, 32) 
U27f5: tmp1:= READURAM( , 0x0053, 64) 
U27f6: WRITEURAM( , 0x00000000, 0x0053, 64) !m2 

U27f8: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000002, U65f2) !m0,m1 SEQW GOTO U21fe
U27f9: tmp0:= READURAM( , 0x0053, 64) 
U27fa: tmp3:= ZEROEXT_DSZ32(0x000021fe) 

U27fc: WRITEURAM( , 0x00000000, 0x000d, 32) 
U27fd: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U2081) !m0,m1 
U27fe: WRITEURAM( , 0x00000000, 0x0053, 64) !m2 

U2800: SYNCFULL-> UJMP( , tmp3) 
U2801: BTUJNB_DIRECT_NOTTAKEN(tmp9, 0x00000000, U2804) !m1 
U2802: NOP SEQW SAVEUIP1 U2804SEQW GOTO U28f5

U2804: SAVEUIP( , 0x01, U3a6d) !m0 SEQW GOTO U18d0
U2805: PORTOUT_DSZ32_ASZ16_SC1(0x0050,  , 0x00000000) !m2 
U2806: tmp0:= ZEROEXT_DSZ32(0x00000182) 

U2808: tmp0:= CONCAT_DSZ16(0x000000ee, tmp0) 
U2809: WRITEURAM(tmp0, 0x0078, 32) 
U280a: SAVEUIP_REGOVR(0x01, U280c, 0x00f2) !m0 

U280c: SAVEUIP( , 0x01, U209a) !m0 SEQW GOTO U02ca
U280d: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2814) !m0,m1 
U280e: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000b, U452e) !m0 

U2810: CMPUJNZ_DIRECT_NOTTAKEN(tmp3, U2814, tmp1) !m1 
U2811: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U2814, tmp0) !m1 
U2812: tmp5:= BTS_DSZ32(0x00000000, 0x00000010) 

U2814: SAVEUIP( , 0x00, U0c52) SEQW GOTO U5ee8
U2815: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x4900) !m2 
U2816: WRITEURAM(tmp0, 0x0009, 64) 

U2818: tmp0:= BTS_DSZ32(tmp0, 0x00000013) 
U2819: PORTOUT_DSZ32_ASZ16_SC1(0x4900,  , tmp0) !m2 
U281a: SYNCFULL-> tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x4900) !m2 

U281c: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000014, U1ea6) !m2 SEQW GOTO U281a
FUN_ucode_000281d:
U281d: tmpv0:= READURAM( , 0x0020, 64) 
U281e: tmpv1:= XOR_DSZ16(tmpv0, 0x00000002) 

U2820: tmpv2:= PORTIN_DSZ32_ASZ16_SC1(0x0004) !m2 
U2821: tmpv2:= BT_DSZ32(tmpv2, tmpv1) 
U2822: tmpv0:= SELECTCC_DSZ64_CONDB(tmpv2, tmpv0) 

U2824: tmpv0:= BT_DSZ64(tmpv0, 0x0000002f) SEQW URET1
U2825: SAVEUIP_REGOVR(0x01, U2826, 0x0008) !m0 SEQW GOTO U2b15
U2826: tmp0:= READURAM( , 0x004f, 64) 

U2828: tmp1:= MOVEFROMCREG_DSZ64( , 0x516) 
U2829: tmp2:= AND_DSZ64(0xffffffff, tmp0) 
U282a: MOVETOCREG_OR_DSZ64(tmp1, 0x516, tmp2) 

U282c: tmp1:= MOVEFROMCREG_DSZ64( , 0x517) 
U282d: tmp2:= SHR_DSZ64(tmp0, 0x00000020) 
U282e: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp1, 0x517, tmp2) SEQW SAVEUIP1 U2830SEQW GOTO U0164

U2830: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U2831) !m1 SEQW GOTO U283a
U2831: tmp13:= READUIP_REGOVR(0x00) 
U2832: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f0) 

U2834: ROVR<- tmp1:= OR_DSZ64(0x00000001, tmp1) SEQW SAVEUIP0 U2835SEQW GOTO U4084
U2835: tmp1:= MOVEFROMCREG_DSZ64( , 0x067) 
U2836: AETTRACE( , tmp1, 0x0e) 

U2838: MOVETOCREG_BTS_DSZ64( , 0x00000004, 0x0b5) !m2 
U2839: NOP 
U283a: UJMP( , tmp12) 

U283c: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U283d: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U283e: tmp0:= ZEROEXT_DSZ32(0x0000001c) 

U2840: tmp1:= READURAM( , 0x0043, 64) 
U2841: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U2844
U2842: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U5909) !m2 

U2844: tmp0:= ZEROEXT_DSZ32(0x0002001c) 
U2845: tmp1:= READURAM( , 0x004c, 64) 
U2846: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U05ea

U2848: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U5909) !m2 SEQW GOTO U05ea
U2849: tmp1:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U284a: tmp4:= LDZX_DSZ16_ASZ32_SC1(tmp1, mode=0x18) 

U284c: ROVR<- tmp2:= AND_DSZ16(0x00000003, tmp4) SEQW SAVEUIP1 U284dSEQW GOTO U05a4
U284d: tmp4:= AND_DSZ16(0xfffffffffffffffc, tmp4) 
U284e: tmp4:= OR_DSZ16(tmp3, tmp4) 

U2850: STAD_DSZ16_ASZ32_SC1(tmp1, mode=0x18,  , tmp4) SEQW GOTO U038c
U2851: tmp15:= READURAM( , 0x0047, 64) 
U2852: SYNCFULL-> MOVETOCREG_SHR_DSZ64(tmp15, 0x00000020, 0x6c5) 

U2854: tmp15:= READURAM( , 0x0048, 64) 
U2855: tmp1:= SUB_DSZ32(tmp4, tmp15) 
U2856: tmp0:= ZEROEXT_DSZ32(0x00000022) 

U2858: SAVEUIP( , 0x01, U5f18) !m0 SEQW GOTO U0164
U2859: tmp15:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 
U285a: tmp15:= SHR_DSZ32(tmp15, 0x00000006) 

U285c: tmp15:= AND_DSZ32(0x00000010, tmp15) 
U285d: LFNCEMARK-> tmp0:= PORTIN_DSZ32_ASZ16_SC1(tmp1) !m1 
U285e: tmp0:= NOTAND_DSZ32(0x00000010, tmp0) 

U2860: tmp0:= OR_DSZN(tmp15, tmp0) !m1 SEQW GOTO U5ac8
U2861: tmp13:= SHL_DSZ64(tmpv0, 0x00000008) 
U2862: tmp13:= SHR_DSZ64(tmp13, 0x00000008) 

U2864: tmpv0:= READURAM( , 0x0087, 64) 
U2865: tmpv0:= ZEROEXT_DSZ32(tmpv0) 
U2866: tmp13:= IMUL64L_DSZ64(tmpv0, tmp13) 

U2868: tmpv1:= ADD_DSZ64(tmp13, tmpv1) SEQW URET0
U2869: tmp13:= ZEROEXT_DSZ32(0x00000009) 
U286a: SAVEUIP_REGOVR(0x01, U286c, 0x0056) !m0 SEQW GOTO U1856

U286c: tmp13:= ZEROEXT_DSZ32(0x0000000b) 
U286d: LFNCEWAIT-> tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp12) 
U286e: tmp8:= BTR_DSZ32(tmp8, 0x0000001f) 

U2870: LFNCEMARK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp8, 0x00000011, U2c1d) !m1 
U2871: tmp1:= READURAM( , 0x0035, 64) 
U2872: tmp1:= SHR_DSZ64(tmp1, 0x00000025) 

U2874: tmp1:= AND_DSZ64(0x00000001, tmp1) 
U2875: tmp1:= SELECTCC_DSZ64_CONDNB(tmp8, tmp1) 
U2876: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U2c1d) !m1 

U2878: tmp8:= MOVEFROMCREG_DSZ64( , 0x402) 
U2879: LFNCEWTMRK-> WRITEURAM(tmp12, 0x0056, 64) 
U287a: MOVETOCREG_BTS_DSZ64(tmp8, 0x00000003, 0x402) !m0 

U287c: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U0794
U287d: tmp2:= ZEROEXT_DSZ8(0x00000073, tmp12) 
U287e: SAVEUIP_REGOVR(0x01, U2880, 0x0210) !m0 

U2880: SAVEUIP( , 0x01, U0794) !m0 SEQW GOTO U5f4a
U2881: tmp2:= BT_DSZ64(tmp3, 0x0000002b) 
U2882: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00008000) 

U2884: tmp1:= READURAM( , 0x005c, 64) 
U2885: tmp1:= BT_DSZ64(tmp1, 0x0000001a) 
U2886: tmp1:= SELECTCC_DSZ32_CONDB(tmp1, 0x00008000) 

U2888: tmp2:= OR_DSZ32(tmp1, tmp2) SEQW GOTO U30ed
U2889: tmp1:= SHR_DSZ32(tmp1, 0x0000001c) 
U288a: tmp1:= AND_DSZ32(0x00000001, tmp1) 

U288c: tmp5:= OR_DSZ64(tmp1, tmp5) 
U288d: tmp1:= MOVEFROMCREG_DSZ64( , 0x383, 32) !m1 
U288e: tmp1:= NOTAND_DSZ32(tmp1, 0x00000001) 

U2890: tmp1:= SHL_DSZ32(tmp1, 0x0000000b) SEQW GOTO U3056
U2891: tmp13:= ZEROEXT_DSZ32(0x00000007) 
U2892: WRITEURAM( , 0x00000000, 0x011f, 64) !m2 

U2894: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U2896
U2895: tmp13:= ZEROEXT_DSZ32(0x00000019) 
U2896: SAVEUIP_REGOVR(0x01, U2898, 0x0103) !m0 

U2898: SAVEUIP( , 0x01, U2d69) !m0 SEQW GOTO U5dca
FUN_ucode_0002899:
U2899: tmp6:= MOVEFROMCREG_DSZ64( , 0x000) 
FUN_ucode_000289a:
U289a: tmp5:= READURAM( , 0x000a, 64) 

U289c: tmp5:= AND_DSZ32(0x00000400, tmp5) 
U289d: tmp5:= SHL_DSZ32(tmp5, 0x00000002) 
U289e: tmp6:= BT_DSZ64(tmp6, 0x00000014) 

U28a0: tmp5:= SELECTCC_DSZ32_CONDNB(tmp6, tmp5) SEQW URET0
U28a1: SYNCFULL-> UFLOWCTRL( , tmp13, USTATE) 
U28a2: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U28a8

U28a4: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U28a8
U28a5: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U28a6: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000003, U2769) !m0,m1 

U28a8: TESTUSTATE( , UCODE, 0x1000) ? SEQW GOTO U28ad
U28a9: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U28aa: tmp2:= BTR_DSZ32(tmp2, 0x0000000d) 

U28ac: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp2, U24c1) 
U28ad: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U28ae: tmp1:= ADD_DSZ32(tmp0, 0x0000007b) 

U28b0: TESTUSTATE( , UCODE, !0x0040) !m0 ? SEQW GOTO U0454
U28b1: tmp4:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U28b2: BTUJB_DIRECT_NOTTAKEN(tmp4, 0x0000000e, U17ec) !m0,m2 

U28b4: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U39ec
U28b5: WRITEURAM(tmp7, tmp1) !m2 
U28b6: tmp1:= ADD_DSZ32(tmp0, 0x000007a8) 

U28b8: tmp1:= ADD_DSZ32(tmp0, tmp1) 
U28b9: tmp4:= SHR_DSZ64(tmp7, 0x00000020) 
U28ba: tmp2:= AND_DSZ32(0xffff0000, tmp4) 

U28bc: tmp2:= SELECTCC_DSZ32_CONDNZ(tmp2, 0x80000000) 
U28bd: tmp3:= NOTAND_DSZ32(tmp4, 0xffff0000) 
U28be: tmp3:= SELECTCC_DSZ32_CONDNZ(tmp3, 0x80000000) 

U28c0: tmp2:= OR_DSZ32(tmp3, tmp2) 
U28c1: tmp4:= NOTAND_DSZ32(0x80000000, tmp4) 
U28c2: tmp4:= OR_DSZ32(tmp2, tmp4) 

U28c4: tmp7:= CONCAT_DSZ32(tmp4, tmp7) 
U28c5: LFNCEMARK-> MOVETOCREG_DSZ64(tmp7, tmp1) !m2 SEQW GOTO U17ec
U28c6: tmp0:= ZEROEXT_DSZ32(0x00000083) 

U28c8: tmp0:= CONCAT_DSZ16(tmp0, 0x00000200) 
U28c9: MOVETOCREG_DSZ64(tmp0, 0x631) !m2 
U28ca: MOVETOCREG_DSZ64( , 0x00000000, 0x634) !m2 

U28cc: MOVETOCREG_DSZ64( , 0x00000000, 0x635) !m2 
U28cd: MOVETOCREG_DSZ64( , 0x00000000, 0x636) !m2 
U28ce: MOVETOCREG_DSZ64( , 0x00000000, 0x637) !m2 

U28d0: LFNCEWTMRK-> MOVETOCREG_DSZ64( , 0x00000000, 0x638) !m2 
U28d1: tmp2:= ZEROEXT_DSZ32(0x00000081) 
U28d2: tmp2:= CONCAT_DSZ16(tmp2) 

U28d4: WRMSLOOPCTRFBR( , 0x0000003f) 
U28d5: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp2, 0x630) 
U28d6: tmp2:= ADD_DSZ32(0x00000001, tmp2) 

U28d8: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U28d5
U28d9: tmp0:= ADD_DSZ32(0x00000001, tmp0) 
U28da: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000003, U0604) !m0 

U28dc: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x631) !m2 SEQW GOTO U28d1
U28dd: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x7e1) !m2 
U28de: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U28e0: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000004, 0x6c3) !m2 
U28e1: tmp0:= READURAM( , 0x005c, 64) 
U28e2: tmp0:= OR_DSZ32(0x00000400, tmp0) 

U28e4: WRITEURAM(tmp0, 0x005c, 32) !m2 SEQW GOTO U05f6
U28e5: TESTUSTATE( , UCODE, 0x0400) ? SEQW URET0
U28e6: tmp15:= MOVEFROMCREG_DSZ64( , 0x067) 

U28e8: tmp13:= MOVEFROMCREG_DSZ64( , 0x065) 
U28e9: tmp15:= SUB_DSZN(tmp13, tmp15) !m1 
U28ea: AETTRACE( , tmp15, 0x0c) 

thunk_FUN_ucode_0002712:
U28ec: SAVEUIP( , 0x01, U2ad9) !m0 SEQW GOTO U2712
U28ed: tmp3:= unk_1d6(tmp1) 
U28ee: tmp3:= SHL_DSZ32(tmp3, 0x00000001) 

U28f0: tmp3:= ADD_DSZ32(0x00000002, tmp3) 
U28f1: tmp3:= SHL_DSZ32(tmp3, 0x0000000c) 
U28f2: tmp3:= OR_DSZ32(0x00000040, tmp3) 

U28f4: rcx:= CONCAT_DSZ16(tmp0, tmp3) SEQW GOTO U17ec
FUN_ucode_00028f5:
U28f5: tmp14:= MOVE_DSZ32(0x00000002) 
U28f6: tmp15:= READURAM( , 0x005c, 64) !m2 

U28f8: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000002b, U1434) !m0,m2 
U28f9: unk_eff() 
U28fa: LBSYNC(0x00000001) 

U28fc: SYNCFULL-> LBSYNC(0x00000007) SEQW GOTO U1434
U28fd: tmp10:= READURAM( , 0x005c, 64) 
U28fe: tmp5:= AND_DSZ32(0x00000003, rax) 

U2900: tmp5:= SHL_DSZ64(tmp5, 0x00000015) 
U2901: tmp10:= NOTAND_DSZ64(0x00600000, tmp10) 
U2902: tmp10:= OR_DSZ64(tmp5, tmp10) 

U2904: LFNCEMARK-> WRITEURAM(tmp10, 0x005c, 64) !m2 SEQW URET0
U2905: MOVETOCREG_DSZ64(tmp8, 0x223, 32) !m1,m2 
U2906: SAVEUIP_REGOVR(0x01, U2908, 0x0004) !m0 SEQW GOTO U32cd

U2908: tmp10:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 
U2909: tmp8:= READURAM( , 0x0020, 64) 
U290a: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp8, 0x0000002f, U2912) !m0,m1 

U290c: tmp6:= SETCC_CONDNZ(tmp15) 
U290d: tmp6:= ADD_DSZ32(0x00000006, tmp6) 
U290e: tmp7:= AND_DSZ32(0x000000c0, tmp10) 

U2910: LFNCEWAIT-> tmp10:= MOVETOCREG_BTS_DSZ64(tmp10, 0x238, tmp6) !m1 
U2911: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U2930) 
U2912: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U2930

U2914: tmp12:= ZEROEXT_DSZ32(0x00007700) 
U2915: WRMSLOOPCTRFBR( , 0x00002803) SEQW SAVEUIP0 U2916SEQW GOTO U5779
U2916: NOP 

U2918: WRMSLOOPCTRFBR( , 0x00001014) SEQW SAVEUIP0 U2919SEQW GOTO U5769
U2919: tmp12:= ZEROEXT_DSZ32(0x00007600) 
U291a: tmp6:= MOVEFROMCREG_DSZ64( , 0x383, 32) !m1 

U291c: tmp7:= MOVEFROMCREG_DSZ64( , 0x388, 32) !m1 
U291d: tmp8:= MOVEFROMCREG_DSZ64( , 0x387, 32) !m1 
U291e: tmp9:= SHR_DSZ64(tmp8, 0x00000020) SEQW SAVEUIP0 U2920SEQW GOTO U6136

U2920: tmp4:= MOVEFROMCREG_DSZ64( , 0x386, 32) !m1 
U2921: tmp5:= MOVEFROMCREG_DSZ64( , 0x385, 32) !m1 
U2922: tmp2:= CONCAT_DSZ32(0x001fffc0) 

U2924: tmp5:= NOTAND_DSZ64(tmp2, tmp5) SEQW SAVEUIP0 U2925SEQW GOTO U1f8a
U2925: tmp7:= NOTAND_DSZ32(0x00000300, tmp10) 
U2926: tmp4:= MOVEFROMCREG_DSZ64( , 0x2e9, 32) !m1 

U2928: tmp5:= MOVEFROMCREG_DSZ64( , 0x392, 32) !m1 
U2929: tmp6:= MOVEFROMCREG_DSZ64( , 0x20c, 32) !m1 
U292a: tmp8:= MOVEFROMCREG_DSZ64( , 0x389, 32) !m1 

U292c: tmp9:= ZEROEXT_DSZ32() SEQW SAVEUIP0 U292dSEQW GOTO U6132
U292d: NOP 
U292e: NOP 

U2930: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 SEQW GOTO U7808
FUN_ucode_0002931:
U2931: tmpv0:= READURAM( , 0x005c, 64) 
U2932: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000027, U1cbe) !m0,m2 

U2934: tmp14:= PORTIN_DSZ32_ASZ16_SC1(0x9704) !m2 
U2935: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp14, 0x00000000, U5e32) !m2 
U2936: tmpv0:= BTR_DSZ64(tmpv0, 0x00000027) 

U2938: WRITEURAM(tmpv0, 0x015c, 64) !m2 SEQW URET1
U2939: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U293a: tmp12:= TESTUSTATE(tmp9, UCODE, 0x0800) ? SEQW GOTO U2c1d

U293c: tmp3:= READURAM( , 0x008b, 64) 
U293d: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000000, U2c1d) !m1 
U293e: LFNCEWAIT-> tmp15:= READURAM( , 0x001f, 64) 

U2940: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000008, U2941) !m1 SEQW GOTO U609c
U2941: tmp15:= ADD_DSZ64(0x00000001, tmp9) 
U2942: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp15, U04ae) 

U2944: LFNCEWAIT-> tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9) 
U2945: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U04ae) !m0 
U2946: tmp13:= ZEROEXT_DSZ32(0x00000013) 

U2948: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp9) 
U2949: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000000, U2d6e) !m1 
U294a: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp9) 

U294c: tmp15:= AND_DSZ32(0xfe036dfb, tmp7) 
U294d: tmp15:= SUB_DSZ32(0x00036dfb, tmp15) 
U294e: tmp13:= ZEROEXT_DSZ32(0x00000014) 

U2950: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2d6e) 
U2951: tmp15:= READURAM( , 0x0077, 64) 
U2952: tmp15:= BT_DSZ64(tmp15, 0x0000002e) 

U2954: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, tmp7) 
U2955: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000018, U2d6e) !m1 
U2956: tmp15:= READURAM( , 0x0035, 64) 

U2958: tmp15:= BT_DSZ64(tmp15, 0x0000003c) 
U2959: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, tmp7) 
U295a: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000017, U2d6e) !m0,m1 

U295c: tmp3:= AND_DSZ32(0xfffffffffffff000, tmp3) SEQW SAVEUIP0 U295dSEQW GOTO U5cae
U295d: SYNCWAIT-> tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp3) 
U295e: tmp15:= SUB_DSZ32(0x00000000, tmp7) 

U2960: tmp10:= ZEROEXT_DSZ32(0x00000016) 
U2961: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U57f9) 
U2962: tmp15:= SHR_DSZ64(tmp7, 0x00000021) 

U2964: tmp10:= ZEROEXT_DSZ32(0x00000018) 
U2965: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U57f9) 
U2966: tmp7:= BT_DSZ64(tmp7, 0x00000020) 

U2968: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U296a
U2969: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp7, U57f9) 
U296a: tmp15:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00080000) 

U296c: tmp0:= OR_DSZ32(tmp15, tmp0) 
U296d: WRITEURAM(tmp9, 0x0055, 64) !m2 
U296e: tmp0:= BTS_DSZ32(tmp0, 0x00000012) 

U2970: SAVEUIP( , 0x00, U609d) SEQW GOTO U28e5
FUN_ucode_0002971:
U2971: MOVETOCREG_DSZ64(tmp1, 0x3ff, 32) !m1,m2 
U2972: tmp1:= MOVEFROMCREG_DSZ64( , 0x30c, 32) !m1,m2 

U2974: MOVETOCREG_BTS_DSZ64(tmp1, 0x0000001c, 0x30c) !m1,m2 
U2975: MOVETOCREG_DSZ64(tmp0, 0x3ff, 32) !m1,m2 
U2976: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1,m2 

U2978: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000005, U304e) !m1,m2 SEQW GOTO U2976
U2979: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U297a: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U297c: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U297d) !m1 SEQW GOTO U297a
U297d: MOVETOCREG_DSZ64(tmpv0, 0x22b, 32) !m1 
U297e: tmp15:= ZEROEXT_DSZ32(0x000006ff) 

U2980: tmp15:= CONCAT_DSZ16(tmp15, 0x0000000f) SEQW GOTO U598d
U2981: tmp3:= MOVEFROMCREG_DSZ64( , 0x486) 
U2982: tmp9:= ZEROEXT_DSZ32(0x000001fd) 

U2984: tmm5:= unk_744(tmm1) 
U2985: tmm6:= unk_660(tmm5) 
U2986: tmp6:= PINTMOVDTMM2I_DSZ64(tmm6) 

U2988: tmm4:= unk_73a() SEQW GOTO U6818
U2989: mm2:= unk_7ea(tmm7) 
U298a: tmp2:= ADD_DSZ32(0x00006000, tmp2) 

U298c: tmm0:= unk_7c2(mm2, tmm7) 
U298d: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp6, U2990) 
U298e: LFNCEMARK-> tmm6:= unk_5ff(tmm7) !m2 

U2990: tmp12:= OR_DSZ16(0x00000010, tmp12) SEQW GOTO U062e
U2991: tmp3:= LDZX_DSZN_ASZ32_SC4(tmp2, IMM_MACRO_13, mode=0x0b, tmp4) !m0,m1 
U2992: tmp3:= SUB_DSZN(tmp3, r64idx) !m1 

U2994: tmp5:= LDZX_DSZN_ASZ32_SC4(tmp2, mode=0x0b, tmp4) !m1 
U2995: tmp6:= LDZX_DSZN_ASZ32_SC4(tmp2, IMM_MACRO_ALIAS_DATASIZE, mode=0x0b, tmp4) !m0,m1 
U2996: r64dst:= unk_17d(tmp3, tmp5) !m1 

U2998: tmp2:= unk_17d(tmp3, tmp6) !m1 SEQW UEND0
U2999: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x221, 32) !m1 
U299a: TESTUSTATE( , UCODE, !0x0044) !m0 ? SEQW GOTO U75dd

U299c: tmp3:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 
U299d: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000008, U299c) !m1 
U299e: tmp5:= OR_DSZ32(0x00004000) 

U29a0: tmp5:= MOVETOCREG_DSZ64(tmp5, 0x28c, 32) !m1 
U29a1: tmp12:= ADD_DSZ32(0x00002f80, tmp15) 
U29a2: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U29a4: tmp5:= ZEROEXT_DSZ64(tmp2, tmp5) 
U29a5: tmp5:= MOVETOCREG_DSZ64(tmp5, 0x7bb) 
U29a6: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U29b5

U29a8: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U29a9: WRMSLOOPCTRFBR( , 0x00003008) SEQW SAVEUIP0 U29aaSEQW GOTO U3399
U29aa: NOP 

U29ac: WRMSLOOPCTRFBR( , 0x00003806) SEQW SAVEUIP0 U29adSEQW GOTO U2031
U29ad: tmp12:= ADD_DSZ32(0x00003280, tmp15) 
U29ae: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U29b0: tmp2:= ZEROEXT_DSZ64(tmp2, tmp5) 
U29b1: MOVETOCREG_DSZ64(tmp2, 0x2d4, 32) !m1 
U29b2: MOVETOCREG_SHR_DSZ64(tmp2, 0x00000020, 0x2de) !m1 

U29b4: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x20f, 32) !m1 
U29b5: tmp12:= ADD_DSZ32(0x00002c80, tmp15) 
U29b6: WRMSLOOPCTRFBR( , 0x00002002) SEQW SAVEUIP0 U29b8SEQW GOTO U2031

U29b8: WRMSLOOPCTRFBR( , 0x00000807) SEQW SAVEUIP0 U29b9SEQW GOTO U3399
U29b9: tmp0:= ZEROEXT_DSZ64(0xffffffffffffffff, tmp5) 
U29ba: tmp5:= MOVETOCREG_DSZ64(tmp0, 0x210, 32) !m1 

U29bc: tmp12:= ADD_DSZ32(0x00002e60, tmp15) 
U29bd: WRMSLOOPCTRFBR( , 0x00004803) SEQW SAVEUIP0 U29beSEQW GOTO U2031
U29be: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U29c0: tmp0:= ZEROEXT_DSZ64(tmp0, tmp5) 
U29c1: MOVETOCREG_DSZ64(tmp0, 0x211, 32) !m1 
U29c2: WRMSLOOPCTRFBR( , 0x0000003f) 

U29c4: tmp2:= ZEROEXT_DSZ32(0x0000005f) 
U29c5: MOVETOCREG_DSZ64( , 0x00000000, tmp2) 
U29c6: tmp2:= SUBR_DSZ64(tmp2, 0x00000001) SEQW GOTO U29c5

U29c8: MOVETOCREG_DSZ64( , 0x00000000, 0x009) 
U29c9: tmp12:= ADD_DSZ32(0x00001ca0, tmp15) 
U29ca: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U29cc: WRITEURAM(tmp0, 0x0020, 64) 
U29cd: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U29d6
U29ce: NOP 

U29d0: SAVEUIP_REGOVR(0x01, U29d1, 0x0000) !m0 SEQW GOTO U32cd
U29d1: tmp0:= MOVEFROMCREG_DSZ64( , 0x2e9, 32) !m1 
U29d2: MOVETOCREG_BTS_DSZ64(tmp0, 0x0000000a, 0x2e9) !m0,m1,m2 

U29d4: MOVETOCREG_DSZ64(tmp0, 0x2e9, 32) !m1,m2 
U29d5: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
U29d6: LFNCEWAIT-> MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2ce) !m0,m1 

U29d8: SYNCFULL-> NOP 
U29d9: tmp0:= MOVEFROMCREG_DSZ64( , 0x2ce, 32) !m1 
U29da: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U29dc) !m1 SEQW GOTO U29d8

U29dc: tmp4:= SAVEUIP_REGOVR( , 0x00, U29dd, 0x2401) SEQW GOTO U25a5
U29dd: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cf, 32) !m1 
U29de: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000001, 0x2cf) !m1 

U29e0: tmp1:= ZEROEXT_DSZ32(0x00000fff) 
U29e1: MOVETOCREG_DSZ64(tmp1, 0x00b) 
U29e2: tmp12:= ADD_DSZ32(0x00000100, tmp15) 

U29e4: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U29e5: tmp2:= NOTAND_DSZ32(0x00000003, tmp0) 
U29e6: tmp2:= MOVETOCREG_DSZ64(tmp2, 0x403) 

U29e8: tmp0:= ZEROEXT_DSZ64(tmp0, tmp2) 
U29e9: MOVETOCREG_DSZ64(tmp0, 0x403) 
U29ea: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 

U29ec: tmp2:= NOTAND_DSZ32(0x00000003, tmp0) 
U29ed: tmp2:= MOVETOCREG_DSZ64(tmp2, 0x703) 
U29ee: tmp0:= ZEROEXT_DSZ64(tmp0, tmp2) 

U29f0: MOVETOCREG_DSZ64(tmp0, 0x703) 
U29f1: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 
U29f2: MOVETOCREG_DSZ64(tmp0, 0x223, 32) !m1 

U29f4: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x088) 
U29f5: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040) 
U29f6: MOVETOCREG_DSZ64(tmp0, 0x06b) 

U29f8: tmp12:= ADD_DSZ32(0x00000180, tmp15) 
U29f9: tmp5:= WRMSLOOPCTRFBR( , 0x00001827) 
U29fa: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U29fc: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 
U29fd: tmp12:= ADD_DSZ32(0x00000040, tmp12) 
U29fe: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 

U2a00: tmp8:= ZEROEXT_DSZ32(tmp8, tmp5) 
U2a01: tmp9:= SHR_DSZ32(tmp8, 0x00000010) 
U2a02: LFNCEWAIT-> tmp5:= MOVETOCREG_DSZ64(tmp6, tmp8) 

U2a04: tmp9:= ZEROEXT_DSZ32(tmp9, tmp5) 
U2a05: tmp5:= MOVETOCREG_DSZ64(tmp2, tmp9) 
U2a06: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U29fa

U2a08: WRMSLOOPCTRFBR( , 0x00000015) 
U2a09: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U2a0a: tmp12:= ADD_DSZ32(0x00000020, tmp12) 

U2a0c: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U2a0d: tmp8:= ZEROEXT_DSZ32(tmp8, tmp5) 
U2a0e: tmp9:= SHR_DSZ32(tmp8, 0x00000010) 

U2a10: tmp2:= SHR_DSZ64(tmp6, 0x00000020) 
U2a11: LFNCEWAIT-> tmp5:= MOVETOCREG_DSZ64(tmp6, tmp8) 
U2a12: tmp9:= ZEROEXT_DSZ32(tmp9, tmp5) 

U2a14: tmp5:= MOVETOCREG_DSZ64(tmp2, tmp9) 
U2a15: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2a09
U2a16: NOP 

U2a18: NOP SEQW SAVEUIP0 U2a19SEQW GOTO U3038
U2a19: tmp4:= ZEROEXT_DSZ64(tmp4, tmp5) 
U2a1a: MOVETOCREG_DSZ64(tmp4, 0x7f0) 

U2a1c: tmp11:= ZEROEXT_DSZ64(tmp6) 
U2a1d: MOVETOCREG_DSZ64(tmp8, 0x7fe) 
U2a1e: unk_13f(tmp8) !m2 

U2a20: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U2a21: MOVETOCREG_DSZ64(tmp2, 0x070) 
U2a22: tmp12:= ADD_DSZ32(0x00000ec0, tmp15) 

U2a24: LFNCEMARK-> WRMSLOOPCTRFBR( , 0x0000008f) 
U2a25: NOP 
U2a26: NOP 

U2a28: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U2a29: WRITEURAM(tmp1, 0x0008, 64) !m0 
U2a2a: tmp12:= ADD_DSZ32(0x00000020, tmp12) 

U2a2c: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2a28
U2a2d: tmp12:= ADD_DSZ32(0x000020c0, tmp15) 
U2a2e: SAVEUIP( , 0x01, U0021) !m0 

U2a30: WRMSLOOPCTRFBR( , 0x00000007) 
U2a31: tmp12:= unk_ea6(tmp12) 
U2a32: tmp11:= unk_ea6(tmp12) 

U2a34: tmp12:= ADD_DSZ32(0x00000040, tmp12) 
U2a35: tmm0:= MOVHLPS(tmm3, tmm4) 
U2a36: mm0:= unk_5b9(tmm0) 

U2a38: tmm5:= FMOV( , tmm4) !m0 
U2a39: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2a31
U2a3a: WRMSLOOPCTRFBR( , 0x0000000f) 

U2a3c: tmp14:= unk_ea6(tmp12) 
U2a3d: tmp15:= unk_ea6(tmp12) 
U2a3e: xmm7:= MOVHLPS(tmm7, tmm6) 

U2a40: rdi:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040) 
U2a41: tmp12:= ADD_DSZ32(0x00000060, tmp12) 
U2a42: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2a3c

U2a44: SAVEUIP_REGOVR(0x00, U2a45, 0x0000) SEQW URET1
U2a45: LFNCEWAIT-> WRSEGFLD(tmp2, SS_USERM, BASE) 
U2a46: WRSEGFLD(tmp4, SS_USERM, SEL+FLGS+LIM) 

U2a48: WRSEGFLD(tmp6, UNK_SEG_09, BASE) 
U2a49: LFNCEMARK-> WRSEGFLD(tmp8, UNK_SEG_09, FLGS) SEQW SAVEUIP0 U2a4aSEQW GOTO U0021
U2a4a: WRSEGFLD(tmp2, LDT, BASE) 

U2a4c: WRSEGFLD(tmp4, LDT, SEL+FLGS+LIM) 
U2a4d: WRSEGFLD(tmp6, GDT, BASE) 
U2a4e: WRSEGFLD(tmp8, GDT, SEL+FLGS+LIM) SEQW SAVEUIP0 U2a50SEQW GOTO U0021

U2a50: WRSEGFLD(tmp2, TSS, BASE) 
U2a51: WRSEGFLD(tmp4, TSS, SEL+FLGS+LIM) 
U2a52: WRSEGFLD(tmp6, IDT, BASE) 

U2a54: WRSEGFLD(tmp8, IDT, SEL+FLGS+LIM) SEQW SAVEUIP0 U2a55SEQW GOTO U0021
U2a55: WRSEGFLD(tmp2, GS, BASE) 
U2a56: WRSEGFLD(tmp4, GS, SEL+FLGS+LIM) 

U2a58: WRSEGFLD(tmp6, FS, BASE) 
U2a59: WRSEGFLD(tmp8, FS, SEL+FLGS+LIM) SEQW SAVEUIP0 U2a5aSEQW GOTO U0021
U2a5a: WRSEGFLD(tmp2, DS, BASE) 

U2a5c: WRSEGFLD(tmp4, DS, SEL+FLGS+LIM) 
U2a5d: WRSEGFLD(tmp6, ES, BASE) 
U2a5e: WRSEGFLD(tmp8, ES, SEL+FLGS+LIM) 

U2a60: WRMSLOOPCTRFBR( , 0x00000003) 
U2a61: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U2a62: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U2a64: rdi:= unk_14d(tmp2) 
U2a65: tmp7:= unk_14d(tmp4) 
U2a66: tmp12:= ADD_DSZ32(0x00000040, tmp12) 

U2a68: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2a61
U2a69: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U2a6a: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U2a6c: tmp0:= RDSEGFLD(DS_32bit, SEL+FLGS+LIM) 
U2a6d: WRSEGFLD(tmp0) 
U2a6e: WRSEGFLD(tmp0) 

U2a70: WRSEGFLD(tmp2) 
U2a71: WRSEGFLD(tmp4) 
U2a72: tmp0:= READURAM( , 0x005c, 64) 

U2a74: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000019, U38a5) !m1,m2 
U2a75: NOP SEQW SAVEUIP1 U2a76SEQW GOTO U2d30
U2a76: tmp2:= RDSEGFLD(SS_USERM, FLGS) 

U2a78: MOVETOCREG_DSZ64(tmp2, 0x73c) 
U2a79: WRSEGFLD(0x00000000, UNK_SEG_04, BASE) 
U2a7a: WRSEGFLD(0x00000000, DS_16bit, BASE) 

U2a7c: tmp9:= RDSEGFLD(DS_32bit, SEL+FLGS+LIM) 
U2a7d: WRSEGFLD(tmp9, UNK_SEG_04, SEL+FLGS+LIM) 
U2a7e: WRSEGFLD(tmp9, DS_16bit, SEL+FLGS+LIM) 

U2a80: MOVETOCREG_DSZ64(tmp11, 0x067) 
U2a81: SAVEUIP( , 0x00, U02f2) 
U2a82: SAVEUIP_REGOVR(0x01, U2a84, 0x0009) !m0 SEQW GOTO U02ea

U2a84: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x2a1) !m1 
U2a85: MOVETOCREG_DSZ64( , 0x00000000, 0x28c, 32) !m1 
U2a86: tmp1:= READURAM( , 0x0009, 64) 

U2a88: MOVETOCREG_DSZ64(tmp1, 0x20f, 32) !m1 
U2a89: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d3, 32) !m1,m2 
U2a8a: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000c, U2a8c) !m1 SEQW GOTO U2a89

U2a8c: tmp2:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
U2a8d: tmp2:= NOTAND_DSZ32(0x00000040, tmp2) 
U2a8e: MOVETOCREG_OR_DSZ64(tmp2, 0x00000010, 0x223) !m1,m2 

U2a90: SAVEUIP( , 0x01, U620e) !m0 SEQW GOTO U6de0
U2a91: tmp1:= READURAM( , 0x001f, 64) 
U2a92: tmp1:= NOTAND_DSZ32(0x00000007, tmp1) 

U2a94: WRITEURAM(tmp1, 0x001f, 32) 
U2a95: tmp0:= MOVEFROMCREG_DSZ64( , 0x78e) 
U2a96: MOVETOCREG_DSZ64(tmp0, 0x067) 

U2a98: tmp2:= ZEROEXT_DSZ32() SEQW GOTO U43ae
compute_ucode_sha_update:
U2a99: tmp6:= SUB_DSZ32(0x00000284, tmp13) 
U2a9a: tmp6:= SHR_DSZ32(tmp6, 0x00000006) 

U2a9c: tmp5:= ADD_DSZ64(0x00000284, tmp14) 
U2a9d: tmp11:= ZEROEXT_DSZ32(0x000069b0) 
U2a9e: tmp11:= CONCAT_DSZ16(0x00000001, tmp11) 

U2aa0: WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U50da
U2aa1: tmp1:= CONCAT_DSZ16(0xffffffffffffffff) 
U2aa2: tmp2:= CONCAT_DSZ16(tmp7) 

U2aa4: LFNCEWAIT-> STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_1b, mode=0x18,  , tmp3) !m0,m1 
U2aa5: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_23, mode=0x18,  , tmp2) !m0,m1 
U2aa6: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_2b, mode=0x18,  , tmp4) !m0,m1 

U2aa8: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_33, mode=0x18,  , tmp1) !m0,m1 SEQW URET0
U2aa9: tmp3:= SAVEUIP_REGOVR( , 0x01, U2aaa, 0x3210) !m0 SEQW GOTO U5e06
U2aaa: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 

U2aac: LFNCEWAIT-> unk_256() !m1 SEQW GOTO U3dfa
U2aad: MOVETOCREG_DSZ64(tmp13, 0x7f8) !m2 
U2aae: WRITEURAM(tmp12, 0x003d, 64) !m2 

U2ab0: tmp11:= ZEROEXT_DSZ32(0x00000025) 
U2ab1: MOVETOCREG_DSZ64(tmp11, 0x00b) !m2 
U2ab2: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 

U2ab4: tmp0:= CONCAT_DSZ16(0x00000001) SEQW GOTO U3a41
U2ab5: tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 
U2ab6: WRITEURAM(tmp3, 0x004a, 64) 

U2ab8: tmp15:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U2ab9: tmp3:= SUB_DSZN(tmp15, tmp3) !m1 
U2aba: tmp15:= READURAM( , 0x0047, 64) !m2 

U2abc: SYNCMARK-> MOVETOCREG_DSZ64(tmp15, 0x6c5) !m2 SEQW GOTO U26a5
U2abd: tmpv0:= NOTAND_DSZ64(0x0000000f, tmp3) 
U2abe: MOVETOCREG_DSZ64(tmpv0, 0x01c) 

U2ac0: tmpv0:= AND_DSZ32(0x0000c000, tmp3) 
U2ac1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv0, U06ae) 
U2ac2: tmp5:= ZEROEXT_DSZ32(0x00000025) 

U2ac4: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, 0x00b) !m2 SEQW GOTO U3a81
U2ac5: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000016, U2ac9) !m0,m1 
U2ac6: tmp15:= OR_DSZ64(rax) 

U2ac8: MOVETOCREG_DSZ64(tmp15, 0x2c0, 32) !m1,m2 
U2ac9: tmp0:= BTR_DSZ64(tmp0, 0x00000017) 
U2aca: WRITEURAM(tmp0, 0x005c, 64) !m2 

U2acc: LFNCEWAIT-> SAVEUIP( , 0x01, U78ca) !m0 SEQW GOTO U18d0
U2acd: SAVEUIP( , 0x01, U5d54) !m0 
U2ace: tmp10:= ZEROEXT_DSZ32(0x0000bd00) 

FUN_ucode_0002ad0:
U2ad0: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp10) !m2 
U2ad1: tmp2:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 
U2ad2: tmp1:= SUB_DSZ64(tmp2, tmp1) 

U2ad4: STADSTGBUF_DSZ64_ASZ16_SC1(tmp10,  , tmp1) !m2 SEQW URET1
U2ad5: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U3a11
U2ad6: LFNCEWAIT-> rsp:= LDPPHYS_DSZ16_ASZ32_SC4( , 0x00000002, mode=0x0f, tmp8) 

U2ad8: tmp2:= LDPPHYS_DSZ16_ASZ32_SC4( , 0x00000004, mode=0x0f, tmp8) SEQW GOTO U3a14
U2ad9: tmp15:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U2ada: LFNCEMARK-> MOVETOCREG_BTR_DSZ64(tmp15, 0x7f0) !m2 

U2adc: AETTRACE(0x0e) 
U2add: tmp2:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U2ade: SYNCFULL-> MOVETOCREG_BTR_DSZ64(tmp2, 0x00000002, 0x6c3) !m0,m2 

U2ae0: tmp14:= CONCAT_DSZ32(tmp14, 0x00005a74) SEQW GOTO U05e5
U2ae1: tmp7:= PINTMOVDTMM2I_DSZ64(tmm0) 
U2ae2: tmp3:= BT_DSZ16(tmp9, 0x0000000d) 

U2ae4: tmp7:= MOVEMERGEFLGS_DSZ64(tmp7, tmp3) 
U2ae5: tmp3:= BTS_DSZ32(0x00000000, 0x0000000f) 
U2ae6: tmp7:= CMOVCC_DSZ32_CONDB(tmp7, tmp3) 

U2ae8: tmm0:= unk_744(mm7) SEQW GOTO U4d3a
U2ae9: mm4:= unk_72a(tmm2) 
U2aea: tmp5:= XOR_DSZ8(0x00000001, tmp4) 

U2aec: mm4:= unk_72a(tmm3) 
U2aed: tmp5:= MOVEMERGEFLGS_DSZ64(tmp5, tmp3) 
U2aee: tmp4:= CMOVCC_DSZ32_CONDNZ(tmp5, tmp4) 

U2af0: tmm0:= unk_702(mm4, tmm0) SEQW GOTO U1236
U2af1: tmp5:= ZEROEXT_DSZ16(0x0000ff81) 
U2af2: tmp11:= SUB_DSZ32(tmp1, 0x0000ff81) 

U2af4: tmm4:= unk_7c2(tmm3) 
U2af5: tmm0:= unk_7c2( , tmm0) 
U2af6: tmm0:= unk_6aa(tmm0, tmm4) 

U2af8: LFNCEMARK-> tmm0:= unk_62e(tmm0) !m2 SEQW GOTO U6360
U2af9: tmm7:= unk_5b9() 
U2afa: tmp11:= ZEROEXT_DSZ32(0x000023ce) 

U2afc: tmp13:= ZEROEXT_DSZ64(0x000046b9) 
U2afd: tmp12:= WRMSLOOPCTRFBR(0x00000001) 
U2afe: tmp14:= SAVEUIP(0x01, U0ca1) !m0 

U2b00: tmp8:= ZEROEXT_DSZ16(0x0000ff81) SEQW GOTO U39a6
U2b01: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 
U2b02: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 

U2b04: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000030, 0x48c) 
U2b05: tmp6:= AND_DSZ32(0x00000010, tmp5) 
U2b06: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U3749) 

U2b08: LFNCEWAIT-> tmp14:= MOVEFROMCREG_DSZ64( , 0x01a) SEQW GOTO U4601
U2b09: tmp7:= SHR_DSZ32(tmp8, 0x00000004) 
U2b0a: tmm7:= unk_702(mm7) 

U2b0c: tmm2:= unk_496(tmm5, tmm7) 
U2b0d: tmm1:= unk_496(tmm3, tmm7) 
U2b0e: tmm5:= FMOV( , tmm4) 

U2b10: tmm6:= FMOV( , tmm6) SEQW GOTO U64aa
U2b11: STAD_DSZ64_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18, tmp2) !m0 
U2b12: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp0, U21fe) 

U2b14: SAVEUIP( , 0x01, U21fe) !m0 
lbsync_full:
U2b15: MOVE_DSZ32() 
U2b16: LBSYNC(0x00000001) 

U2b18: LBSYNC(0x00000007) SEQW GOTO U06c6
U2b19: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000b, U5932) !m0,m2 
U2b1a: tmp10:= ZEROEXT_DSZ32(0x0000000d) 

U2b1c: LFNCEMARK-> tmm6:= unk_701(tmm2) !m2 
U2b1d: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U2b1e: tmp3:= AND_DSZ16(tmp2, 0x00000001) 

U2b20: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1948) SEQW GOTO U392e
U2b21: tmp9:= unk_6a0() 
U2b22: tmp10:= FCOM2(tmp9, 0x00000000) 

U2b24: mm1:= unk_76a(tmm2) 
U2b25: tmp1:= MOVEINSERTFLGS_DSZ32(tmp1) 
U2b26: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U17ec) 

U2b28: tmp0:= unk_6a0() SEQW GOTO U17ec
U2b29: tmp1:= READURAM( , 0x000d, 64) 
U2b2a: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 

U2b2c: tmp2:= READURAM( , 0x0020, 64) 
U2b2d: tmp2:= AND_DSZ32(0x00007ffe, tmp2) 
U2b2e: tmp2:= SHR_DSZ32(tmp2, 0x00000001) 

U2b30: LFNCEMARK-> PORTOUT_DSZ8_ASZ16_SC1(0x50b0, tmp2, tmp1) !m2 SEQW GOTO U60d2
U2b31: tmp1:= READUIP_REGOVR(0x01) !m0 
U2b32: tmp1:= SUB_DSZ16(0x00002d1d, tmp1) 

U2b34: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3002) 
U2b35: tmp12:= BTS_DSZ64(tmp12, 0x0000003f) 
U2b36: tmp12:= BTS_DSZ64(tmp12, 0x0000003e) 

U2b38: SYNCFULL-> MOVETOCREG_DSZ64(tmp12, tmp9) !m2 SEQW URET0
U2b39: tmp1:= TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U04f4
U2b3a: tmp12:= READURAM( , 0x0057, 64) 

U2b3c: tmp0:= ZEROEXT_DSZ32(0x00000031) SEQW GOTO U2c62
U2b3d: SAVEUIP( , 0x00, U0816) 
U2b3e: tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 

U2b40: tmp4:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U2b41: MOVETOCREG_DSZ64( , 0x00000000, 0x065) !m2 
U2b42: tmp4:= SUB_DSZN(tmp4, tmp3) !m1 

U2b44: LFNCEWAIT-> tmp3:= MOVE_DSZ32(0x00000003) SEQW GOTO U6536
U2b45: tmp5:= SUB_DSZ64(0x00000200, tmp7) 
U2b46: tmp6:= ADD_DSZ32(0x00000200) 

U2b48: tmp0:= ZEROEXT_DSZ32() 
U2b49: tmp1:= ZEROEXT_DSZ32() 
U2b4a: tmp8:= MOVEMERGEFLGS_DSZ32(0x000007c4, tmp13) 

U2b4c: tmp8:= CMOVCC_DSZ32_CONDB(tmp8, 0x000008c4) SEQW GOTO U5ed5
U2b4d: tmp5:= AND_DSZ32(0x000000c0, tmp7) 
U2b4e: tmp2:= SUB_DSZ32(0x00000080, tmp5) 

U2b50: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U4205) 
U2b51: LFNCEMARK-> tmm6:= unk_7c0() !m2 
U2b52: tmp4:= XOR_DSZ16(0x0000411e, tmp3) 

U2b54: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, tmp3) SEQW GOTO U031a
U2b55: tmp13:= ADD_DSZ32(0x00000020, tmp13) 
U2b56: tmp6:= SHR_DSZ32(tmp13, 0x00000006) 

U2b58: tmp5:= ADD_DSZ64(0x00000060, tmp14) 
U2b59: tmp11:= ZEROEXT_DSZ16(0x00006831) 
U2b5a: tmp11:= CONCAT_DSZ16(0x00000001, tmp11) 

U2b5c: WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U50c4
U2b5d: tmp11:= CONCAT_DSZ16(0x00000200) 
U2b5e: tmp11:= OR_DSZ32(0x00000009, tmp11) 

U2b60: WRITEURAM(tmp11, 0x000e, 32) SEQW SAVEUIP0 U2b61SEQW GOTO U60b8
U2b61: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x00c0) !m2 
U2b62: tmp1:= BTR_DSZ32(tmp1, 0x00000003) 

U2b64: PORTOUT_DSZ8_ASZ16_SC1(0x00c0,  , tmp1) !m2 SEQW GOTO U65f2
U2b65: tmp8:= ZEROEXT_DSZ32(0x00000401) 
U2b66: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000000, U5569) !m2 

U2b68: tmp8:= ZEROEXT_DSZ32(0x00000403) 
U2b69: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000001, U4c65) 
U2b6a: tmp8:= ZEROEXT_DSZ32(0x00000703) 

U2b6c: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000002, U4c65) !m0 
U2b6d: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000003, U602c) !m0,m1 SEQW GOTO U03e4
U2b6e: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f6) 

U2b70: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U2771) !m0,m1 
U2b71: tmp2:= READURAM( , 0x0023, 64) 
U2b72: tmp2:= AND_DSZ64(0x00000100, tmp2) 

U2b74: tmp3:= AND_DSZ64(rax, tmp2) 
U2b75: tmp11:= SHR_DSZ64(tmp3, 0x00000001) 
U2b76: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U2b78: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U2b80
U2b79: tmp0:= READURAM( , 0x0057, 64) 
U2b7a: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000003c8, tmp0) 

U2b7c: tmp4:= AND_DSZ64(tmp3, tmp0) 
U2b7d: tmp0:= ZEROEXT_DSZ32(0x0000003f) 
U2b7e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U6148) 

U2b80: tmp0:= READURAM( , 0x005b, 64) !m2 
U2b81: tmp6:= SHR_DSZ64(tmp0, 0x00000038) 
U2b82: tmp6:= OR_DSZ64(tmp6, tmp2) 

U2b84: tmp13:= SAVEUIP(0x00, U4ce9) SEQW GOTO U6999
U2b85: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1 
U2b86: SYNCFULL-> tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 

U2b88: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U2b89) !m1 SEQW GOTO U2b86
U2b89: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1,m2 
U2b8a: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U3f28) !m1,m2 

U2b8c: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000009, U3aa9) !m1,m2 
U2b8d: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U0c52) SEQW GOTO U2b89
U2b8e: tmp1:= BTS_DSZ32(tmp1, 0x00000010) 

U2b90: tmp2:= BTS_DSZ32(tmp2, 0x00000017) 
U2b91: PORTOUT_DSZ32_ASZ16_SC1(0x4910,  , tmp1) !m2 
U2b92: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 

U2b94: tmp4:= ADD_DSZ64(0x00000008, tmp4) 
U2b95: PORTOUT_DSZ32_ASZ16_SC1(0x4918,  , tmp3) !m2 
U2b96: tmp3:= SHR_DSZ64(tmp3, 0x00000020) 

U2b98: PORTOUT_DSZ32_ASZ16_SC1(0x491c,  , tmp3) !m2 
U2b99: tmp1:= BTS_DSZ32(tmp1, 0x0000001d) 
U2b9a: PORTOUT_DSZ32_ASZ16_SC1(0x4910,  , tmp1) !m2 

U2b9c: PORTOUT_DSZ32_ASZ16_SC1(0x490c,  , tmp2) !m2 
U2b9d: tmp3:= AND_DSZ32(0x00000fff, tmp2) 
U2b9e: tmp3:= SUB_DSZ32(0x00000fff, tmp3) 

U2ba0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U0644) 
U2ba1: SYNCFULL-> tmp2:= ADD_DSZ32(0x00000001, tmp2) 
U2ba2: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2b92

U2ba4: NOP SEQW GOTO U1ea6
U2ba5: MOVETOCREG_DSZ64(tmp0, 0x486) !m2 
U2ba6: tmp3:= NOTAND_DSZ32(tmp0, tmp9) 

U2ba8: tmp3:= AND_DSZ32(0x0000003f, tmp3) 
U2ba9: tmp9:= NOTAND_DSZ16(0x00008080, tmp9) 
U2baa: tmp2:= CMOVCC_DSZ16_CONDZ(tmp3, 0x00008080) 

U2bac: tmp2:= OR_DSZ16(tmp9, tmp2) 
U2bad: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, 0x48c) !m2 SEQW GOTO U221e
U2bae: SAVEUIP( , 0x00, U5af4) 

FUN_ucode_0002bb0:
U2bb0: tmp15:= MOVEFROMCREG_DSZ64( , 0x6c5) 
U2bb1: tmp15:= SHL_DSZ32(tmp15, 0x00000004) 
U2bb2: tmp8:= MOVEFROMCREG_DSZ64( , 0x01c) 

U2bb4: tmp8:= OR_DSZ32(tmp15, tmp8) 
U2bb5: tmp15:= MOVEFROMCREG_DSZ64( , 0x070) 
U2bb6: tmp8:= CONCAT_DSZ16(tmp15, tmp8) 

U2bb8: tmp8:= CONCAT_DSZ32(tmp8, tmp4) 
U2bb9: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000120,  , tmp8) 
U2bba: tmp8:= MOVEFROMCREG_DSZ64( , 0x51b) 

U2bbc: tmp8:= ZEROEXT_DSZ16( , tmp8) 
U2bbd: MOVETOCREG_DSZ64(tmp8, 0x562) 
U2bbe: tmp0:= ZEROEXT_DSZ32(0x00000c00) 

U2bc0: tmp0:= CONCAT_DSZ16(0x0000fff0, tmp0) 
U2bc1: tmp0:= CONCAT_DSZ32(0x000000ff, tmp0) 
U2bc2: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x563) SEQW SAVEUIP1 U2bc4SEQW GOTO U0164

U2bc4: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 
U2bc5: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000100,  , tmp0) SEQW URET0
U2bc6: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U5d14

U2bc8: PORTOUT_DSZ32_ASZ16_SC1(0x0010,  , 0x00000000) !m2 
U2bc9: tmp0:= ZEROEXT_DSZ32(0x00000002) SEQW SAVEUIP0 U2bcaSEQW GOTO U60aa
U2bca: SAVEUIP( , 0x00, U27f9) 

U2bcc: NOP SEQW SAVEUIP1 U2bcdSEQW GOTO U0bc9
U2bcd: PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , 0x00000000) !m2 
U2bce: PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 

U2bd0: PORTOUT_DSZ32_ASZ16_SC1(0x0050,  , 0x00000000) !m2 SEQW URET0
FUN_ucode_0002bd1:
U2bd1: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U24d2
U2bd2: tmp2:= MOVEFROMCREG_DSZ64( , 0x067) 

U2bd4: AETTRACE( , tmp2, 0x0e) SEQW GOTO U24d2
U2bd5: tmp2:= LDZX_DSZ16_ASZ32_SC1(tmp2, mode=0x18) 
U2bd6: SIGEVENT( , 0x00000017) 

FUN_ucode_0002bd8:
U2bd8: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U2bd9: tmp14:= READUIP_REGOVR(0x01) !m0 
U2bda: LFNCEWAIT-> tmp0:= unk_d61(tmp2) 

U2bdc: tmp1:= unk_d61(tmp2) 
U2bdd: tmp0:= CMOVCC_DSZ64_CONDNB(tmp1, tmp0) SEQW URET1
patch_handle_0x07_write_uram:
U2bde: SAVEUIP_REGOVR(0x01, U2be0, 0x0000) !m0 SEQW GOTO U00a1

U2be0: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U2be5) !m1 
U2be1: tmp7:= READURAM( , tmp3) 
U2be2: tmp7:= AND_DSZ64(tmp5, tmp7) 

U2be4: tmp6:= OR_DSZ64(tmp6, tmp7) 
U2be5: WRITEURAM(tmp6, tmp3) !m2 
U2be6: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2bde

U2be8: NOP SEQW GOTO U1ea6
U2be9: tmp4:= OR_DSZN(rcx) !m1 
U2bea: MOVETOCREG_DSZ64(0x0000000b, 0x000) !m2 

U2bec: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U76a0) 
U2bed: LFNCEWAIT-> tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 SEQW SAVEUIP1 U2beeSEQW GOTO U7585
U2bee: tmp4:= SUB_DSZN(0x00000001, tmp4) !m1 

U2bf0: rcx:= ZEROEXT_DSZ16N(tmp4, rcx) !m1 
U2bf1: MSLOOP-> rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 SEQW GOTO U2bec
U2bf2: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) 

U2bf4: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
U2bf5: NOP 
U2bf6: NOP 

U2bf8: LFNCEWAIT-> LEA_DSZ8_ASZ32_SC1(tmp3) 
U2bf9: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U2bfd
U2bfa: tmp1:= RDSEGFLD(UNK_SEG_09, FLGS) 

U2bfc: MOVETOCREG_DSZ64(tmp1, 0x7f5) 
U2bfd: tmp1:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U2bfe: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, 0x78e) SEQW SAVEUIP1 U2c00SEQW GOTO U3afc

U2c00: rsp:= ZEROEXT_DSZ64N(rsp) !m1 
U2c01: LFNCEWAIT-> FETCHFROMEIP1_ASZ64( , tmp3) !m1 
U2c02: tmp0:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 

U2c04: WRSEGFLD(tmp0, CS, SEL+FLGS+LIM) 
U2c05: tmp0:= RDSEGFLD(UNK_SEG_09, BASE) 
U2c06: WRSEGFLD(tmp0, CS, BASE) 

U2c08: SYNCWAIT-> MJMPTARGET_INDIRECT_ASZ64( , tmp3) !m1 SEQW UEND0
U2c09: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U48b5
U2c0a: tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0 

U2c0c: tmp3:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 SEQW GOTO U48b5
FUN_ucode_0002c0d:
U2c0d: tmp14:= READUIP_REGOVR(0x01) !m0 
U2c0e: tmp9:= AND_DSZ32(0x00000003, tmp1) 

U2c10: tmp10:= SHR_DSZ32(0x0000000f, tmp2) 
U2c11: tmp10:= SHL_DSZ32(tmp10, tmp9) 
U2c12: tmp10:= NOTAND_DSZ32(0x0000000f, tmp10) 

U2c14: tmp15:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000003) 
U2c15: tmp9:= XOR_DSZ32(tmp15, tmp9) SEQW URET0
U2c16: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U6148

U2c18: TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW SAVEUIP0 U2c19? SEQW GOTO U5f29
U2c19: tmp13:= ZEROEXT_DSZ32(0x0000000f) 
U2c1a: NOP 

U2c1c: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U2c1d: tmp12:= READURAM( , 0x0056, 64) 
U2c1e: tmp1:= ADD_DSZ64(0x00000001, tmp12) 

U2c20: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, U04ae) SEQW GOTO U2d6e
FUN_ucode_0002c21:
U2c21: LFNCEMARK-> LBSYNC(0x00000002) 
U2c22: SAVEUIP( , 0x01, U76e4) !m0 

U2c24: tmp11:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U2c25: TESTUSTATE( , SYS, !UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW URET0
U2c26: tmp5:= READURAM( , 0x0018, 64) 

U2c28: tmp6:= READURAM( , 0x0017, 64) 
U2c29: tmp2:= ZEROEXT_DSZ32(0x00000048) SEQW URET1
U2c2a: tmp8:= TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U5b64

U2c2c: tmp8:= TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U3de5
U2c2d: NOP 
U2c2e: NOP 

U2c30: tmp0:= ZEROEXT_DSZ32(0x00000001) SEQW SAVEUIP0 U2c31SEQW GOTO U60aa
U2c31: tmp7:= AND_DSZ32(0x00ff0000, tmp7) 
U2c32: NOP 

U2c34: tmp8:= SELECTCC_DSZ32_CONDZ(tmp7, 0x000f0000) SEQW GOTO U3de5
U2c35: LFNCEWTMRK-> MOVETOCREG_SHL_DSZ64(r64src, 0x00000004, 0x288) !m1 
U2c36: tmp8:= SHR_DSZ64(tmp8, 0x00000014) 

U2c38: tmp8:= AND_DSZ32(0x0000000f, tmp8) 
U2c39: tmp8:= SUB_DSZ32(tmp3, tmp8) 
U2c3a: tmp3:= SUB_DSZ32(tmp3, r64src) 

U2c3c: tmp3:= AND_DSZ32(tmp8, tmp3) 
U2c3d: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp3, U00e1) SEQW GOTO U008e
U2c3e: tmp15:= ZEROEXT_DSZ32(0x0000070f) 

U2c40: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U2c56
U2c41: tmp14:= READURAM( , 0x0012, 64) 
U2c42: NOP 

U2c44: SAVEUIP_REGOVR(0x01, U2c45, 0x00fe) !m0 SEQW GOTO U6bfd
U2c45: NOP 
U2c46: NOP 

U2c48: LFNCEWAIT-> tmpv0:= READURAM( , 0x0027, 64) SEQW SAVEUIP0 U2c49SEQW GOTO U334d
U2c49: NOP 
U2c4a: NOP 

U2c4c: LFNCEWAIT-> tmpv0:= READURAM( , 0x0028, 64) 
U2c4d: tmpv0:= SHR_DSZ64(tmpv0, 0x00000018) 
U2c4e: tmpv0:= NOTAND_DSZ64(0x000000ff, tmpv0) SEQW SAVEUIP0 U2c50SEQW GOTO U334d

U2c50: tmpv1:= MOVEFROMCREG_DSZ64( , 0x510) 
U2c51: tmpv0:= AND_DSZ32(0x00000002, tmpv1) 
U2c52: tmpv0:= SHR_DSZ32(tmpv0, 0x00000001) SEQW SAVEUIP0 U2c54SEQW GOTO U334d

U2c54: SAVEUIP( , 0x00, U38d0) 
U2c55: tmpv0:= ZEROEXT_DSZ32(tmpv1) SEQW SAVEUIP1 U2c56SEQW GOTO U334d
U2c56: NOP 

U2c58: tmp6:= TESTUSTATE(tmp13, SYS, UST_SMM) !m1 ? SEQW GOTO U5715
U2c59: tmp0:= ZEROEXT_DSZ32(0x00000030) 
U2c5a: tmp12:= READURAM( , 0x0057, 64) 

U2c5c: tmp1:= AND_DSZ32(0x000001bf, tmp3) SEQW SAVEUIP0 U2c5dSEQW GOTO U289a
U2c5d: tmp1:= OR_DSZ32(tmp5, tmp1) 
U2c5e: tmp6:= READURAM( , 0x0043, 64) 

U2c60: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000032, U68cd) !m0,m1 
U2c61: WRITEURAM(tmp9, 0x003e, 64) !m2 
U2c62: tmp10:= TESTUSTATE(tmp13, SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U31c2

U2c64: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000308, tmp12, tmp2) SEQW GOTO U4e84
U2c65: tmp2:= NOTAND_DSZ32(0x0000000c, tmp2) 
U2c66: tmp1:= NOTAND_DSZ32(tmp2, tmp5) 

U2c68: tmp5:= OR_DSZ32(tmp5, tmp2) 
U2c69: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000006, U3204) !m0,m1,m2 
U2c6a: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x4c18) !m2 

U2c6c: tmp1:= NOTAND_DSZ32(0x00000004, tmp1) 
U2c6d: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(0x4c18,  , tmp1) !m2 SEQW GOTO U3204
U2c6e: unk_13f(tmp0) !m2 

U2c70: MOVETOCREG_DSZ64(tmp0, 0x7fe) 
U2c71: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x79e) !m0 
U2c72: tmp14:= ADD_DSZ64(0x00000110, tmp12) SEQW SAVEUIP0 U2c74SEQW GOTO U5c39

U2c74: LFNCEWTMRK-> unk_e6b( , tmp4) 
U2c75: tmp14:= ADD_DSZ64(0x00000120, tmp12) SEQW SAVEUIP0 U2c76SEQW GOTO U5c39
U2c76: unk_e6b( , tmp4) 

U2c78: tmp14:= ADD_DSZ64(0x00000108, tmp12) SEQW SAVEUIP0 U2c79SEQW GOTO U5c39
U2c79: unk_e6b( , tmp4) 
U2c7a: LFNCEWAIT-> tmp13:= RDSEGFLD(UNK_SEG_09, FLGS) 

U2c7c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp13, 0x7f5) !m2 
U2c7d: tmp14:= ADD_DSZ64(0x00000118, tmp12) SEQW SAVEUIP0 U2c7eSEQW GOTO U5c39
U2c7e: NOP 

U2c80: LFNCEWTMRK-> unk_e6b( , tmp4) 
U2c81: tmp14:= ADD_DSZ64(0x00000128, tmp12) SEQW SAVEUIP0 U2c82SEQW GOTO U5c39
U2c82: unk_e6b( , tmp4) 

U2c84: tmp14:= ADD_DSZ64(0x00000130, tmp12) SEQW SAVEUIP0 U2c85SEQW GOTO U5c39
U2c85: unk_e6b( , tmp4) 
U2c86: NOP 

U2c88: NOP SEQW GOTO U160c
U2c89: tmp1:= SHL_DSZ32(tmp1, 0x0000000a) 
U2c8a: tmp5:= OR_DSZ32(tmp1, tmp5) 

U2c8c: tmp1:= SHR_DSZ32(tmp2, 0x00000002) 
U2c8d: tmp1:= AND_DSZ32(0x00000001, tmp1) 
U2c8e: tmp5:= OR_DSZ32(tmp1, tmp5) 

U2c90: tmp1:= SHR_DSZ32(tmp2, 0x00000009) 
U2c91: tmp1:= AND_DSZ32(0x00000002, tmp1) SEQW GOTO U3056
U2c92: tmp10:= READURAM( , 0x0063, 64) 

U2c94: tmp10:= AND_DSZ32(0x00000010, tmp10) 
U2c95: tmp2:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U2c96: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x0000000a, U2c98) !m0,m1 SEQW GOTO U2c99

U2c98: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U5cae) SEQW SAVEUIP0 U2c99SEQW GOTO U5cda
U2c99: tmp10:= READURAM( , 0x0064, 64) 
U2c9a: tmp2:= READURAM( , 0x0065, 64) 

U2c9c: tmp2:= CONCAT_DSZ32(tmp2, tmp10) 
U2c9d: tmm1:= unk_744(mm2) 
U2c9e: tmp2:= READURAM( , 0x0066, 64) 

U2ca0: tmp2:= ZEROEXT_DSZ32(tmp2) 
U2ca1: tmm1:= unk_782(mm2, tmm1) 
U2ca2: tmp2:= SHR_DSZ32(tmp2, 0x00000004) 

U2ca4: tmm1:= unk_7c2(mm2, tmm1) 
U2ca5: tmp2:= SHR_DSZ32(tmp2, 0x00000011) 
U2ca6: LFNCEMARK-> mm0:= unk_702(mm2, tmm1) 

U2ca8: tmp2:= READURAM( , 0x0067, 64) 
U2ca9: MOVETOCREG_DSZ64(tmp2, 0x48c) 
U2caa: tmp5:= SHR_DSZ16(tmp2, 0x0000000b) 

U2cac: tmp5:= AND_DSZ8(0x00000007, tmp5) 
U2cad: LFNCEWAIT-> MOVETOCREG_SHR_DSZ64(tmp2, 0x00000010, 0x06b) 
U2cae: NOP 

U2cb0: SYNCFULL-> MOVETOCREG_DSZ64(tmp5, 0x073) SEQW GOTO U60d2
U2cb1: SAVEUIP( , 0x01, U1a3c) !m0 
U2cb2: tmp13:= READURAM( , 0x0035, 64) 

U2cb4: BTUJB_DIRECT_NOTTAKEN(tmp13, 0x0000000a, U2cb5) !m0,m1 SEQW GOTO U18d0
U2cb5: SAVEUIP( , 0x01, U3a81) !m0 
U2cb6: tmp9:= MOVEFROMCREG_DSZ64( , 0x2f1, 32) !m1 

U2cb8: tmp9:= AND_DSZ32(0x00000600, tmp9) 
U2cb9: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U3c60) SEQW GOTO U18d0
U2cba: SIGEVENT( , 0x0000006f) 

U2cbc: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U2cd8
U2cbd: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x20f, 32) !m1,m2 
U2cbe: tmp12:= ADD_DSZ32(0x00002e60, tmp15) 

U2cc0: LFNCEWAIT-> WRMSLOOPCTRFBR( , 0x00004803) SEQW SAVEUIP0 U2cc1SEQW GOTO U5779
U2cc1: tmp0:= MOVEFROMCREG_DSZ64( , 0x20e, 32) !m1 
U2cc2: tmp12:= ADD_DSZ32(0x00002f60, tmp15) 

U2cc4: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp0) 
U2cc5: tmp2:= MOVEFROMCREG_DSZ64( , 0x7bb) 
U2cc6: tmp12:= ADD_DSZ32(0x00002f80, tmp15) 

U2cc8: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp2) 
U2cc9: tmp12:= ADD_DSZ32(0x00002fa0, tmp15) 
U2cca: LFNCEWAIT-> WRMSLOOPCTRFBR( , 0x00003008) SEQW SAVEUIP0 U2cccSEQW GOTO U5769

U2ccc: WRMSLOOPCTRFBR( , 0x00003806) SEQW SAVEUIP0 U2ccdSEQW GOTO U5779
U2ccd: tmp3:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1 
U2cce: tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 

U2cd0: tmp3:= CONCAT_DSZ32(tmp2, tmp3) 
U2cd1: tmp12:= ADD_DSZ32(0x00003280, tmp15) 
U2cd2: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp3) 

U2cd4: tmp2:= MOVEFROMCREG_DSZ64( , 0x070) 
U2cd5: tmp12:= ADD_DSZ32(0x00000ea0, tmp15) 
U2cd6: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp2) 

U2cd8: LFNCEWAIT-> tmp10:= ZEROEXT_DSZ32(0x0000bd80) SEQW GOTO U782e
FUN_ucode_0002cd9:
U2cd9: tmpv0:= AND_DSZ32(0x00000010, tmpv0) 
U2cda: tmpv1:= READURAM( , 0x0043, 64) 

U2cdc: tmpv1:= SHR_DSZ64(tmpv1, 0x00000021) 
U2cdd: tmpv0:= AND_DSZ32(tmpv0, tmpv1) 
U2cde: tmpv1:= SELECTCC_DSZ32_CONDNZ(tmpv0, 0x00000002) 

U2ce0: tmpv2:= SELECTCC_DSZ32_CONDZ(tmpv0, 0x00000006) 
U2ce1: tmpv2:= ADD_DSZ32(0x00000001, tmpv2) SEQW URET0
U2ce2: tmp2:= TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U2ce6

U2ce4: tmp1:= SAVEUIP_REGOVR(0x00, U2ce5, 0x0012) SEQW GOTO U3044
U2ce5: tmp2:= SHL_DSZ32(tmp1, 0x00000005) 
U2ce6: unk_d68(tmp5,  , tmp0) 

U2ce8: unk_d68(tmp5,  , tmp8) 
U2ce9: unk_d68(tmp5,  , tmp2) 
U2cea: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U573e

U2cec: tmp0:= ADD_DSZ32(0x00000018, tmp5) 
U2ced: unk_d28(tmp4, tmp9, tmp0) SEQW GOTO U3a2d
U2cee: rax:= BTS_DSZ32(rax, 0x00000003) 

U2cf0: rbx:= BTS_DSZ32(rbx, 0x00000003) 
U2cf1: tmp1:= ZEROEXT_DSZ32(0x00830f00) 
U2cf2: tmp2:= ZEROEXT_DSZ32(0x0003017f) 

U2cf4: SAVEUIP( , 0x00, U4406) SEQW SAVEUIP1 U2cf5SEQW GOTO U27c1
U2cf5: tmp0:= ZEROEXT_DSZ32(0x00011000) 
U2cf6: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x631) !m2 

U2cf8: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x634) 
U2cf9: MOVETOCREG_DSZ64( , 0x00000000, 0x635) 
U2cfa: MOVETOCREG_DSZ64( , 0x00000000, 0x636) 

U2cfc: MOVETOCREG_DSZ64( , 0x00000000, 0x637) 
U2cfd: MOVETOCREG_DSZ64( , 0x00000000, 0x638) 
U2cfe: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x630) !m2 

U2d00: SYNCFULL-> tmp2:= MOVEFROMCREG_DSZ64( , 0x630) !m2 
U2d01: tmp2:= AND_DSZ32(0x00000fff, tmp2) 
U2d02: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U2d04) SEQW GOTO U2d00

U2d04: tmp0:= ZEROEXT_DSZ32(0x0000974c) 
U2d05: tmp0:= CONCAT_DSZ16(0x00004000, tmp0) 
U2d06: tmp2:= PORTIN_DSZ16_ASZ16_SC1(tmp0) 

U2d08: tmp2:= NOTAND_DSZ32(0x0000100c, tmp2) 
U2d09: tmp2:= OR_DSZ32(rax, tmp2) 
U2d0a: tmp2:= OR_DSZ32(0x00002000, tmp2) 

U2d0c: PORTOUT_DSZ16_ASZ16_SC1(tmp0,  , tmp2) 
U2d0d: tmp14:= ZEROEXT_DSZ32(0x000024e1) SEQW GOTO U54b4
U2d0e: tmp8:= MOVEFROMCREG_DSZ64( , 0x102) 

U2d10: tmp8:= ZEROEXT_DSZ32(tmp8) 
U2d11: tmp1:= ADD_DSZ32(0x00000001, tmp8) 
U2d12: tmp1:= AND_DSZ32(tmp1, tmp8) 

U2d14: tmp10:= SELECTCC_DSZ64_CONDZ(tmp1, 0x00000010) 
U2d15: tmp1:= READURAM( , 0x0010, 64) 
U2d16: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 

U2d18: tmp8:= CONCAT_DSZ32(tmp1, tmp8) 
U2d19: tmp8:= NOTAND_DSZ64(tmp8, 0xffffffffffffffff) 
U2d1a: tmp3:= MOVEFROMCREG_DSZ64( , 0x101) 

U2d1c: SAVEUIP_REGOVR( , 0x01, U2d1d, 0x8321) !m0 SEQW GOTO U6c61
U2d1d: tmp1:= MOVEFROMCREG_DSZ64( , 0x0b1) 
U2d1e: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp1, 0x0b1, tmp10) !m2 

U2d20: LFNCEWAIT-> tmp8:= MOVEFROMCREG_DSZ64( , 0x0b1) 
U2d21: MOVETOCREG_DSZ64(tmp5, 0x7f0) !m2 
U2d22: SAVEUIP_REGOVR( , 0x00, U2d24, 0x8321) SEQW GOTO U5c9e

U2d24: tmp2:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U2d25: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp2, 0x00000002, 0x6c3) !m0,m2 
U2d26: tmp1:= SHR_DSZ64(tmp8, 0x00000020) 

U2d28: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U06ad) 
U2d29: tmp8:= TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U2d2c
U2d2a: tmp8:= MOVEINSERTFLGS_DSZ32(0x00000001, tmp8) 

U2d2c: tmp1:= READUIP_REGOVR(0x01) !m0 
U2d2d: tmp14:= ZEROEXT_DSZ16(tmp14, tmp1) 
U2d2e: SYNCFULL-> UFLOWCTRL( , tmp14, URET1) SEQW GOTO U5e06

FUN_ucode_0002d30:
U2d30: LFNCEWAIT-> tmp0:= RDSEGFLD(UNK_SEG_09, FLGS) 
U2d31: MOVETOCREG_DSZ64(tmp0, 0x7f5) 
U2d32: tmp0:= RDSEGFLD(UNK_SEG_09, LIMIT) 

U2d34: MOVETOCREG_DSZ64(tmp0, 0x410) 
U2d35: tmp0:= ADD_DSZ32(0x00000001, tmp0) 
U2d36: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x700) 

U2d38: LFNCEWAIT-> tmp0:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U2d39: NOP 
U2d3a: NOP 

U2d3c: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x78e) SEQW URET1
U2d3d: tmp14:= SAVEUIP(0x01, U0ca1) !m0 
U2d3e: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U37b2

U2d40: tmm7:= SHUFPD(tmm7, tmm7) 
U2d41: tmm4:= SHUFPD(tmm4, tmm4) SEQW GOTO U39a6
U2d42: tmp4:= MOVEFROMCREG_DSZ64( , 0x7f5) 

U2d44: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U2d4e
U2d45: tmp1:= NOTAND_DSZ32(tmp11, tmp10) 
U2d46: tmp1:= AND_DSZ32(tmp1, tmp6) 

U2d48: tmp7:= NOTAND_DSZ32(tmp7, 0x80000000) 
U2d49: tmp2:= SHL_DSZ32(tmp4, 0x00000012) 
U2d4a: tmp2:= OR_DSZ32(tmp7, tmp2) 

U2d4c: tmp2:= AND_DSZ32(tmp1, tmp2) 
U2d4d: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp2, U2711) 
U2d4e: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U2d56

U2d50: tmp1:= SUB_DSZ32(0x00006000, tmp4) 
U2d51: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2711) 
U2d52: tmp2:= RDSEGFLD(TSS, FLGS) 

U2d54: tmp2:= AND_DSZ32(0x0000001f, tmp2) 
U2d55: LFNCEWTMRK-> CMPUJZ_DIRECT_NOTTAKEN(tmp2, 0x00000003, U2711) !m0,m1 
U2d56: TESTUSTATE( , UCODE, !0x0080) !m0 ? SEQW SAVEUIP1 U2d58? SEQW GOTO U5a65

U2d58: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U2070
U2d59: tmp5:= XOR_DSZ32(0x00000400, tmp5) 
U2d5a: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp5, 0x7ff) 

U2d5c: SAVEUIP( , 0x01, U2070) !m0 
U2d5d: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
U2d5e: tmp1:= AND_DSZ32(0x00000080, tmp0) 

U2d60: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x7f1) 
U2d61: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 
U2d62: tmp0:= NOTAND_DSZ32(tmp1, tmp0) 

U2d64: MOVETOCREG_DSZ64(tmp0, 0x7f9, 32) !m1 SEQW URET1
U2d65: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000f, U2d66) !m0,m1 SEQW GOTO U2dea
U2d66: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 

U2d68: MOVETOCREG_DSZ64(tmp15, 0x752) !m2 SEQW GOTO U2dec
U2d69: LFNCEWAIT-> tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 
U2d6a: AETTRACE( , tmp3, 0x0d) 

U2d6c: MOVETOCREG_DSZ64( , 0x00000000, 0x51e) !m2 
U2d6d: MOVETOCREG_DSZ64( , 0x00000000, 0x513) !m2 
U2d6e: LFNCEWTMRK-> MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 

U2d70: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000238, tmp12, tmp13) 
U2d71: MOVEINSERTFLGS_DSZ32(0x00000008) !m2 SEQW GOTO U17ec
check_rsa_padding_signature_and_patch:
U2d72: tmp13:= READURAM( , 0x008e, 64) 

U2d74: tmp14:= SHR_DSZ64(tmp13, 0x00000020) 
U2d75: tmp13:= MOVEINSERTFLGS_DSZ32(tmp14, tmp13) 
U2d76: tmp14:= READURAM( , 0x008d, 64) 

U2d78: tmp0:= ZEROEXT_DSZ64(0xffffffffffffff00) 
U2d79: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000020) 
U2d7a: CMPUJNZ_DIRECT_NOTTAKEN(tmp5, U5795, tmp0) !m2 

U2d7c: tmp12:= WRMSLOOPCTRFBR(0x00000019) 
U2d7d: tmp2:= ZEROEXT_DSZ32() 
U2d7e: tmp6:= ADD_DSZ64(0x00000028, tmp7) 

U2d80: tmp0:= ZEROEXT_DSZ64(0xffffffffffffffff) 
U2d81: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp2) 
U2d82: CMPUJNZ_DIRECT_NOTTAKEN(tmp5, U5795, tmp0) !m2 

U2d84: tmp2:= ADD_DSZ64(0x00000008, tmp2) 
U2d85: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2d81
U2d86: tmp0:= CONCAT_DSZ32(0x0001ffff, tmp0) 

U2d88: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x000000f8) 
U2d89: CMPUJNZ_DIRECT_NOTTAKEN(tmp5, U5795, tmp0) !m2 
U2d8a: tmp12:= WRMSLOOPCTRFBR(0x00000003) 

U2d8c: tmp2:= ZEROEXT_DSZ32() 
U2d8d: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0xffffffffffffffe0, tmp2) 
U2d8e: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2) 

U2d90: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, U5795, tmp1) !m2 
U2d91: tmp2:= ADD_DSZ64(0x00000008, tmp2) 
U2d92: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2d8d

U2d94: tmp15:= CLC() SEQW GOTO U5796
U2d95: tmp11:= SHR_DSZ32(tmp14, 0x0000001a) 
U2d96: tmp11:= NOTAND_DSZ32(0x00000001, tmp11) 

U2d98: tmp11:= OR_DSZ32(0x00000008, tmp11) 
U2d99: tmp11:= MOVEINSERTFLGS_DSZ32(tmp11, tmp14) 
U2d9a: tmp15:= MOVEFROMCREG_DSZ64( , 0x7e1) 

U2d9c: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U2711) !m1 
U2d9d: tmp7:= SUB_DSZ64(0x00000010, tmp5) SEQW GOTO U60d4
U2d9e: WRMSLOOPCTRFBR( , 0x00000003) 

U2da0: rdi:= unk_17c() 
U2da1: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U2da0
U2da2: tmp0:= MOVEFROMCREG_DSZ64( , 0x701) 

U2da4: tmp0:= NOTAND_DSZ64(0xf0000000, tmp0) 
U2da5: tmp0:= MOVETOCREG_DSZ64(tmp0, 0x701) 
U2da6: WRITEURAM( , 0x00000000, 0x004b, 64) !m2 

U2da8: tmp0:= ZEROEXT_DSZ32(0x00000023) 
U2da9: MOVETOCREG_DSZ64(tmp0, 0x005) 
U2daa: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 

U2dac: tmp0:= OR_DSZ32(0x00000025) 
U2dad: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x00b) !m2 SEQW SAVEUIP1 U2daeSEQW GOTO U0164
U2dae: tmp0:= MOVEFROMCREG_DSZ64( , 0x7bb) 

U2db0: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000008, U5c4a) !m2 
U2db1: tmp2:= ZEROEXT_DSZ32(0x0000fff0) 
U2db2: tmp1:= MOVEFROMCREG_DSZ64( , 0x78e) 

U2db4: tmp1:= ADD_DSZ32(tmp2, tmp1) 
U2db5: MOVETOCREG_DSZ64(tmp1, 0x067) 
U2db6: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 

U2db8: SAVEUIP_REGOVR(0x01, U2db9, 0x0000) !m0 SEQW GOTO U2b15
U2db9: tmp0:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U2dba: NOP 

U2dbc: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000008, U2dbd) !m1 SEQW GOTO U43ae
U2dbd: WRITEURAM(tmp1, 0x0067, 64) 
U2dbe: tmp0:= ZEROEXT_DSZ16(0x000023ea) 

U2dc0: tmp0:= CONCAT_DSZ16(0x00000083, tmp0) 
U2dc1: WRITEURAM(tmp0, 0x0007, 32) SEQW GOTO U3a44
U2dc2: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000013, U5b94) !m0,m2 

U2dc4: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U2dc5: tmp15:= NOTAND_DSZ32(tmp15, 0x0000003f) 
U2dc6: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U5b94) 

U2dc8: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U2dc9: tmp15:= UFLOWCTRL(tmp15, tmp13, URET0) 
U2dca: UFLOWCTRL(tmp15, tmp14, URET1) 

U2dcc: UFLOWCTRL( , tmp12, MSLOOPCTR) 
U2dcd: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000017, U2dce) !m0,m1 SEQW GOTO U2dd2
U2dce: tmp15:= READURAM( , 0x003f, 64) 

U2dd0: MOVETOCREG_DSZ64(tmp15, 0x6c5) 
U2dd1: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U2dd2: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000010, U2d65) !m1 

U2dd4: tmp15:= AND_DSZ32(tmp15, 0x0000003f) 
U2dd5: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x0000001d, U0d35) 
U2dd6: LFNCEMARK-> WRITEURAM(tmp14, 0x0061, 64) !m2 

U2dd8: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U2dd9: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000013, U2de1) !m0,m1 
U2dda: tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 

U2ddc: tmp14:= MOVEFROMCREG_DSZ64( , 0x067) 
U2ddd: tmp14:= SUB_DSZN(tmp15, tmp14) !m1 
U2dde: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp14, 0x71a) 

U2de0: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp15, 0x71c) 
U2de1: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 
U2de2: MOVETOCREG_DSZ64(tmp15, 0x752) !m2 

U2de4: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U2de5: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000f, U2de9) !m0,m1 
U2de6: NOP 

U2de8: LFNCEWAIT-> unk_256() !m1 
U2de9: tmp14:= READURAM( , 0x0061, 64) 
U2dea: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000c, U2145) !m1 

U2dec: tmp15:= MOVEFROMCREG_DSZ64( , 0x001) 
U2ded: SYNCFULL-> UJMP( , tmp15) 
U2dee: tmp0:= ZEROEXT_DSZ32(0x00000006) SEQW SAVEUIP0 U2df0SEQW GOTO U58c1

U2df0: tmp0:= READURAM( , 0x000e, 64) SEQW GOTO U3bea
FUN_ucode_0002df1:
U2df1: tmp13:= READUIP_REGOVR(0x00) 
U2df2: tmp7:= SHR_DSZ32(tmp0, 0x00000001) 

U2df4: tmp7:= AND_DSZ64(0x00000070, tmp7) 
U2df5: tmp7:= ADD_DSZ64(tmp8, tmp7) 
U2df6: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, tmp7) 

U2df8: tmp9:= BTS_DSZ32(tmp9, tmp0) 
U2df9: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, tmp7, tmp9) SEQW URET0
patch_handle_0x08_crbus_write_and_sync:
U2dfa: SAVEUIP_REGOVR(0x01, U2dfc, 0x0000) !m0 SEQW GOTO U00a1

U2dfc: SAVEUIP_REGOVR(0x01, U2dfd, 0x0000) !m0 SEQW GOTO U32cd
U2dfd: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U2e02) !m1 
U2dfe: tmp7:= MOVEFROMCREG_DSZ64( , tmp3) !m1 

U2e00: tmp7:= AND_DSZ64(tmp5, tmp7) 
U2e01: tmp6:= OR_DSZ64(tmp6, tmp7) 
U2e02: MOVETOCREG_DSZ64(tmp6, tmp3) !m1,m2 

U2e04: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
U2e05: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2dfa
U2e06: NOP 

U2e08: NOP SEQW GOTO U1ea6
FUN_ucode_0002e09:
U2e09: TESTUSTATE( , SYS, 0x2000) !m1 ? SEQW URET1
U2e0a: tmp14:= READUIP_REGOVR(0x01) !m0 

U2e0c: tmpv1:= READURAM( , 0x0058, 64) 
U2e0d: tmpv1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000c00, mode=0x01, tmpv1) 
U2e0e: tmpv1:= NOTAND_DSZ32(tmpv1, 0x00000001) 

U2e10: tmpv1:= SHL_DSZ32(tmpv1, 0x00000008) 
U2e11: tmpv0:= NOTAND_DSZ32(tmpv1, tmpv0) SEQW URET1
U2e12: TESTUSTATE( , SYS, 0x2000) !m1 ? SEQW GOTO U2e15

U2e14: tmp1:= AND_DSZ64(0xfffffffffffff000, tmp1) SEQW SAVEUIP1 U2e15SEQW GOTO U2e22
U2e15: tmp3:= BT_DSZ32(tmp10, 0x00000010) 
U2e16: tmp3:= SELECTCC_DSZ32_CONDB(tmp3, 0x0000000f) 

U2e18: tmp3:= OR_DSZ32(0x00000002, tmp3) 
U2e19: tmp1:= NOTAND_DSZ32(0xfffffffffffff000, tmp1) 
U2e1a: tmp3:= SHL_DSZ32(tmp3, 0x0000000c) 

U2e1c: tmp1:= OR_DSZ32(tmp3, tmp1) 
U2e1d: tmp13:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U2e1e: MOVETOCREG_BTS_DSZ64(tmp13, 0x00000010, 0x7fe) 

U2e20: LFNCEWAIT-> tmp0:= ZEROEXT_DSZ32(0x0000002c) SEQW GOTO U4e82
FUN_ucode_0002e21:
U2e21: TESTUSTATE( , SYS, 0x2000) !m1 ? SEQW URET1
FUN_ucode_0002e22:
U2e22: tmp15:= MOVEFROMCREG_DSZ64( , 0x511) !m2 

U2e24: tmp15:= AND_DSZ64(0xfffffffffffff000, tmp15) 
U2e25: MOVETOCREG_DSZ64(tmp15, 0x511) !m2 
U2e26: tmp15:= MOVEFROMCREG_DSZ64( , 0x518) !m2 

U2e28: tmp15:= AND_DSZ64(0xfffffffffffff000, tmp15) 
U2e29: SYNCFULL-> MOVETOCREG_DSZ64(tmp15, 0x518) !m2 SEQW URET1
U2e2a: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U5da8

U2e2c: LFNCEWAIT-> rax:= TESTUSTATE(tmp5, UCODE, 0x3000) ? SEQW GOTO U0906
U2e2d: tmp2:= ZEROEXT_DSZ32(0x00000523) 
U2e2e: rdx:= SHR_DSZ64(tmp5, 0x00000020) 

U2e30: tmp1:= READURAM( , 0x0012, 64) 
U2e31: SYNCMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U3210) !m0,m1,m2 
U2e32: NOP 

U2e34: SYNCWAIT-> SAVEUIP_REGOVR( , 0x01, U2e35, 0x4329) !m0 SEQW GOTO U6bfd
U2e35: NOP 
U2e36: NOP 

U2e38: tmpv0:= ZEROEXT_DSZ32(rcx, rcx) SEQW SAVEUIP0 U2e39SEQW GOTO U334d
U2e39: SAVEUIP( , 0x00, U38d0) 
U2e3a: SAVEUIP( , 0x01, U3210) !m0 

U2e3c: SYNCMARK-> tmpv0:= CONCAT_DSZ32(rdx, rax) SEQW GOTO U334d
U2e3d: tmp0:= MOVE_DSZ32(0x00000501) 
U2e3e: tmp12:= READURAM( , 0x005c, 64) 

U2e40: tmp12:= SHR_DSZ32(tmp12, 0x00000008) 
U2e41: tmp11:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U2e42: tmp11:= AND_DSZ32(0x00000001, tmp11) 

U2e44: tmp11:= AND_DSZ32(tmp12, tmp11) 
U2e45: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, U2ab0) SEQW GOTO U407c
U2e46: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U2e48: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp10, 0x7fe, tmp9) !m2 
U2e49: tmp5:= ZEROEXT_DSZ32(0x00002e4c) 
U2e4a: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4798

U2e4c: TESTUSTATE( , SYS, UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW GOTO U5d60
U2e4d: NOP 
U2e4e: NOP 

U2e50: TESTUSTATE( , SYS, !0x2000) !m0,m1 ? SEQW GOTO U079d
U2e51: LFNCEWTMRK-> tmp0:= MOVE_DSZ32(0x00002e59) 
U2e52: tmp0:= CONCAT_DSZ16(0x0000008a, tmp0) 

U2e54: WRITEURAM(tmp0, 0x0007, 32) !m2 
U2e55: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 
U2e56: tmp10:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U2e58: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000038, U3a41) !m1,m2 
U2e59: SIGEVENT( , 0x0000007f) 
U2e5a: NOP 

U2e5c: LFNCEWAIT-> tmp0:= READURAM( , 0x001f, 64) 
U2e5d: tmp0:= OR_DSZ32(0x00000002, tmp0) 
U2e5e: WRITEURAM(tmp0, 0x001f, 32) !m2 

U2e60: SAVEUIP_REGOVR(0x01, U2e61, 0x0090) !m0 SEQW GOTO U02ca
U2e61: LFNCEMARK-> unk_fcf(0x00000000) 
U2e62: NOP 

U2e64: ROVR<-LFNCEWAIT-> MOVE_DSZ32() SEQW SAVEUIP1 U2e65SEQW GOTO U2b15
U2e65: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
U2e66: tmp1:= ZEROEXT_DSZ32(0x0000007f) 

U2e68: MOVETOCREG_DSZ64(tmp1, 0x00b) 
U2e69: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U2e6a: unk_dff() 

U2e6c: MOVETOCREG_BTS_DSZ64( , 0x00000003, 0x63a) !m0 
U2e6d: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x63e) !m0 SEQW SAVEUIP0 U2e6eSEQW GOTO U04fc
U2e6e: tmp8:= READURAM( , 0x0070, 64) 

U2e70: tmp8:= BTR_DSZ64(tmp8, 0x0000002e) 
U2e71: LFNCEMARK-> WRITEURAM(tmp8, 0x0170, 64) !m2 
U2e72: tmp2:= ZEROEXT_DSZ32(0x00000200) 

U2e74: MOVETOCREG_DSZ64(tmp2, 0x2f1, 32) !m1,m2 
U2e75: tmp9:= ZEROEXT_DSZ32(0x00790484) 
U2e76: tmp9:= CONCAT_DSZ32(tmp9, 0x00000001) 

U2e78: tmp7:= ZEROEXT_DSZ32(0x00000000) 
U2e79: tmp8:= ZEROEXT_DSZ32(0x00000008) 
U2e7a: LFNCEWAIT-> tmp11:= ZEROEXT_DSZ32(0x00030101) SEQW GOTO U669a

U2e7c: unk_256() !m1 
U2e7d: tmp3:= NOTAND_DSZ32(tmp10, 0x00001f80) 
U2e7e: tmp3:= SHR_DSZ32(tmp3, 0x00000007) 

U2e80: tmp3:= AND_DSZ32(tmp3, tmp10) 
U2e81: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U5e6d) 
U2e82: tmp0:= OR_DSZ32(tmp10, tmp15) 

U2e84: tmm5:= unk_707(mm0) 
U2e85: LFNCEMARK-> tmm6:= unk_691(tmm5) 
U2e86: NOP 

U2e88: LFNCEWAIT-> NOP SEQW URET0
U2e89: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000a, U2e8a) !m0,m1 SEQW GOTO U2e8e
U2e8a: tmp15:= OR_DSZN(rcx) !m1 

U2e8c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U069e) 
U2e8d: SAVEUIP_REGOVR(0x01, U2e8e, 0x00f7) !m0 SEQW GOTO U02ca
U2e8e: tmp15:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U2e90: MOVETOCREG_BTS_DSZ64(tmp15, 0x00000010, 0x7fe) !m2 SEQW GOTO U0414
U2e91: SYNCFULL-> UFLOWCTRL( , tmp14, URET1) 
U2e92: tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 

U2e94: tmp14:= READUIP_REGOVR(0x01) !m0 
U2e95: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp5, mode=0x01) 
U2e96: WRSEGFLD(tmp0) !m0 

U2e98: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp5, 0x00000008, mode=0x01) 
U2e99: SYNCFULL-> WRSEGFLD(tmp1) !m0 SEQW URET1
U2e9a: TESTUSTATE( , SYS, UST_VMX_DIS | UST_VMX_OP_DIS) !m1 ? SEQW GOTO U2769

U2e9c: SAVEUIP_REGOVR(0x01, U2e9d, 0x0064) !m0 SEQW GOTO U1d02
U2e9d: tmp4:= ZEROEXT_DSZ32(0x00000000) 
U2e9e: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U2ea0: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U2ea1: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000008, U2c1d) !m1 
U2ea2: LFNCEMARK-> tmp5:= READURAM( , 0x0070, 64) 

U2ea4: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp7, tmp4) 
U2ea5: tmp5:= NOTAND_DSZ32(0x00001200, tmp5) 
U2ea6: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp0, 0x00000008, 0x6c3) 

U2ea8: WRITEURAM(tmp5, 0x0070, 32) 
U2ea9: MOVETOCREG_DSZ64(tmp5, 0x2c4, 32) !m1 
U2eaa: WRITEURAM( , 0x00000000, 0x0014, 64) 

U2eac: MOVETOCREG_DSZ64( , 0x00000000, 0x6c0) 
U2ead: WRITEURAM( , 0x00000000, 0x001f, 32) 
U2eae: SYNCFULL-> unk_eff() SEQW GOTO U0794

U2eb0: tmpv0:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U2eb1: tmpv2:= BT_DSZ64(tmpv0, 0x0000000d) 
U2eb2: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmpv2, U2eb6) 

U2eb4: tmpv0:= MOVEFROMCREG_DSZ64( , 0x067) 
U2eb5: AETTRACE( , tmpv0, 0x0c) 
U2eb6: tmpv0:= ZEROEXT_DSZ32(0x00002302) 

U2eb8: tmpv1:= ZEROEXT_DSZ32(0x00000021) 
U2eb9: tmpv1:= MOVEMERGEFLGS_DSZ64(tmpv1, tmpv2) 
U2eba: tmpv1:= CMOVCC_DSZ32_CONDNB(tmpv1, 0x00000025) SEQW SAVEUIP1 U2ebcSEQW GOTO U65b9

U2ebc: MSLOOP-> unk_256() !m1 SEQW GOTO U3dfa
U2ebd: tmp3:= ZEROEXT_DSZ32(0x0000040e) 
U2ebe: tmp4:= READURAM( , 0x0012, 64) 

U2ec0: BTUJNB_DIRECT_NOTTAKEN(tmp4, 0x0000000e, U1b99) !m0,m2 
U2ec1: SAVEUIP_REGOVR( , 0x01, U2ec2, 0x6534) !m0 SEQW GOTO U6bfd
U2ec2: tmpv0:= OR_DSZ64(rax) 

U2ec4: SAVEUIP( , 0x01, U1b99) !m0 
U2ec5: SAVEUIP( , 0x00, U38d0) SEQW GOTO U334d
U2ec6: tmp12:= ZEROEXT_DSZ8N(0xffffffffffffffff) !m1 

U2ec8: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x072) !m0 
U2ec9: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp15, 0x00000005, 0x79e) 
U2eca: tmp2:= RDSEGFLD(TSS, SEL) 

U2ecc: tmp8:= SHR_DSZ64(tmp0, 0x0000002d) 
U2ecd: tmp8:= AND_DSZ32(0x00000003, tmp8) 
U2ece: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U2ad5

U2ed0: tmp0:= unk_b3f( , tmp8) 
U2ed1: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U2ed4
U2ed2: tmp0:= unk_b3f( , tmp11) 

U2ed4: LFNCEWAIT-> rsp:= LDPPHYS_DSZ64_ASZ32_SC1(tmp0, mode=0x0f) 
U2ed5: tmp1:= ZEROEXT_DSZ32(0x00004000) 
U2ed6: NOP 

U2ed8: tmp2:= ZEROEXT_DSZ32(tmp8) 
U2ed9: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U2edc
U2eda: rsp:= AND_DSZ64(0xfffffffffffffff0, rsp) 

U2edc: LFNCEMARK-> unk_e6b( , tmp2) 
U2edd: MOVETOCREG_DSZ64(tmp1, 0x73c) SEQW SAVEUIP1 U2edeSEQW GOTO U3a1e
U2ede: NOP 

U2ee0: LFNCEWAIT-> STADPPHYS_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff8, mode=0x0a,  , tmp8) 
U2ee1: STADPPHYS_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff0, mode=0x0a,  , tmp5) 
U2ee2: rsp:= SUB_DSZ64(0x00000010, rsp) 

U2ee4: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U1ce2
U2ee5: SYNCMARK-> tmp1:= RDSEGFLD(CS, SEL) 
U2ee6: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp1) !m0,m1 

U2ee8: LFNCEWAIT-> STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, tmp4) !m0,m1 
U2ee9: NOP 
U2eea: NOP 

U2eec: LFNCEMARK-> LEA_DSZ8_ASZ32_SC1(tmp3) 
U2eed: FETCHFROMEIP1_ASZ64( , tmp3) !m1 
U2eee: tmp1:= ZEROEXT_DSZ32N(IMM_MACRO_13) !m0,m1 

U2ef0: rsp:= SUB_DSZN(tmp1, rsp) !m1 
U2ef1: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U2ef2: WRSEGFLD(tmp1, CS, SEL+FLGS+LIM) 

U2ef4: tmp1:= RDSEGFLD(UNK_SEG_09, BASE) 
U2ef5: WRSEGFLD(tmp1, CS, BASE) 
U2ef6: tmp1:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U2ef8: WRSEGFLD(tmp1, SS, SEL+FLGS+LIM) 
U2ef9: tmp1:= RDSEGFLD(SS_USERM, BASE) 
U2efa: WRSEGFLD(tmp1, SS, BASE) 

U2efc: SYNCWAIT-> MJMPTARGET_INDIRECT_ASZ64( , tmp3) !m1 SEQW UEND0
U2efd: tmp1:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U2f00
U2efe: tmp1:= READURAM( , 0x0043, 64) 

U2f00: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U2f04
U2f01: tmp2:= READURAM( , 0x004c, 64) 
U2f02: tmp1:= OR_DSZ64(tmp2, tmp1) 

U2f04: SYNCMARK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000028, U3739) !m1,m2 SEQW GOTO U3731
U2f05: tmp4:= ZEROEXT_DSZ32(0x0000042e) 
U2f06: tmp1:= READURAM( , 0x0012, 64) 

U2f08: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000e, U4938) !m0 
U2f09: SAVEUIP_REGOVR( , 0x01, U2f0a, 0x9741) !m0 SEQW GOTO U6bfd
U2f0a: tmpv0:= CONCAT_DSZ32(rcx, rax) 

U2f0c: SAVEUIP( , 0x01, U4938) !m0 
U2f0d: SAVEUIP( , 0x00, U38d0) SEQW GOTO U334d
U2f0e: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000318, tmp12) 

U2f10: tmp1:= AND_DSZ32(0x00000400, tmp0) 
U2f11: tmp15:= SHL_DSZ32(tmp13, 0x00000001) 
U2f12: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, U5f15, tmp15) !m2 

U2f14: tmp14:= SHR_DSZ32(tmp1, 0x00000002) 
U2f15: tmp15:= AND_DSZ32(0x00000100, tmp0) 
U2f16: tmp15:= MOVEMERGEFLGS_DSZ32(tmp15, tmp10) 

U2f18: tmp15:= CMOVCC_DSZ32_CONDB(tmp15, tmp14) 
U2f19: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, U5f15, tmp14) !m2 
U2f1a: tmp15:= READURAM( , 0x0041, 64) 

U2f1c: tmp15:= SHR_DSZ64(tmp15, 0x00000017) 
U2f1d: tmp15:= AND_DSZ32(tmp15, 0x00000800) 
U2f1e: tmp15:= OR_DSZ64(0xfffffffffffff2fe, tmp15) 

U2f20: tmp15:= AND_DSZ64(tmp0, tmp15) 
U2f21: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 
U2f22: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x7ff) 

U2f24: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U2f32
U2f25: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000088, tmp12) 
U2f26: unk_25c( , tmp0) 

U2f28: tmp1:= AND_DSZ32(0x00000ffc, tmp0) 
U2f29: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U5f15) 
U2f2a: LFNCEMARK-> tmp1:= AND_DSZ64(0xfffffffffffff000, tmp0) 

U2f2c: tmp0:= SHL_DSZ32(tmp0, 0x0000001e) 
U2f2d: tmp2:= MOVEFROMCREG_DSZ64( , 0x701) 
U2f2e: tmp2:= NOTAND_DSZ64(0xc0000000, tmp2) 

U2f30: LFNCEWAIT-> WRSEGFLD(tmp1) 
U2f31: MOVETOCREG_OR_DSZ64(tmp2, 0x701, tmp0) 
U2f32: TESTUSTATE( , VMX, 0x0800) !m2 ? SEQW GOTO U2f38

U2f34: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000310, tmp12) 
U2f35: MOVETOCREG_DSZ64(tmp0, 0x577) 
U2f36: SAVEUIP_REGOVR(0x01, U2f38, 0x00b0) !m0 SEQW GOTO U5945

U2f38: TESTUSTATE( , VMX, 0x0400) !m2 ? SEQW GOTO U2f42
U2f39: tmp1:= ZEROEXT_DSZ32(0x00000007) 
U2f3a: tmp1:= CONCAT_DSZ32(tmp1, 0x0000000f) 

U2f3c: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000320, tmp12) 
U2f3d: tmp1:= NOTAND_DSZ64(tmp1, tmp0) 
U2f3e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U5f15) 

U2f40: TESTUSTATE( , UCODE, 0x0200) ? SEQW GOTO U2f42
U2f41: MOVETOCREG_DSZ64(tmp0, 0x20f, 32) !m1,m2 
U2f42: tmp7:= READURAM( , 0x0010, 64) 

U2f44: tmp7:= ZEROEXT_DSZ16(0x000001e6, tmp7) 
U2f45: TESTUSTATE( , VMX, !0x0008) !m0,m2 ? SEQW GOTO U1ccd
U2f46: tmp0:= NOTAND_DSZ64(0x0000001f, tmp5) 

U2f48: tmp9:= TESTUSTATE( , VMX, 0x0100) !m2 ? SEQW GOTO U2f4a
U2f49: tmp0:= ADD_DSZ64(0x00000328, tmp12) 
U2f4a: tmp1:= ZEROEXT_DSZ64(tmp12) 

U2f4c: tmp2:= ZEROEXT_DSZ64(0x00000540) 
U2f4d: tmp12:= WRMSLOOPCTRFBR(0x00000003) 
U2f4e: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp0, tmp9) 

U2f50: tmp0:= ZEROEXT_DSZ64(tmp0, tmp8) SEQW GOTO U1cc1
U2f51: tmp0:= ZEROEXT_DSZ32(0xffffffffffffffff) 
U2f52: PORTOUT_DSZ32_ASZ16_SC1(0x50d0,  , tmp0) !m2 

U2f54: tmp0:= BTS_DSZ32(0x00000000, 0x0000001e) 
U2f55: PORTOUT_DSZ32_ASZ16_SC1(0x50c8,  , tmp0) !m2 
U2f56: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be40,  , 0x00000000) !m2 

U2f58: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be80,  , 0x00000000) !m2 
U2f59: LFNCEMARK-> STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be00,  , 0x00000000) !m2 SEQW GOTO U21fe
U2f5a: tmp0:= ZEROEXT_DSZ32(0x00010006) 

U2f5c: tmp4:= ZEROEXT_DSZ32(0x00000013) 
U2f5d: SAVEUIP_REGOVR(0x01, U2f5e, 0x0094) !m0 SEQW GOTO U1d02
U2f5e: LFNCEMARK-> tmp10:= ZEROEXT_DSZ32(0x00000010) 

U2f60: LFNCEWAIT-> tmp13:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000040, tmp12) 
U2f61: tmp14:= READURAM( , 0x0010, 64) 
U2f62: tmp15:= AND_DSZ64(tmp14, tmp13) 

U2f64: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U3178) 
U2f65: NOP 
U2f66: NOP 

U2f68: LFNCEWAIT-> tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp13) 
U2f69: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000011, U3178) !m1,m2 
U2f6a: tmp4:= READURAM( , 0x0049, 64) 

U2f6c: tmp4:= SUB_DSZ64(tmp4, tmp13) 
U2f6d: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001b4, tmp13) 
U2f6e: tmp3:= BTS_DSZ32(tmp3, 0x0000001f) 

U2f70: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000002cc, tmp13) 
U2f71: tmp0:= SELECTCC_DSZ32_CONDNB(tmp3, tmp0) 
U2f72: tmp0:= CONCAT_DSZ32(tmp0, tmp3) 

U2f74: tmp0:= SELECTCC_DSZ64_CONDZ(tmp4, tmp0) 
U2f75: tmp2:= NOTAND_DSZ32(0x00001800, tmp2) 
U2f76: tmp2:= ZEROEXT_DSZ32(tmp2) 

U2f78: tmp0:= BT_DSZ64(tmp0, 0x00000015) 
U2f79: tmp3:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000800) 
U2f7a: tmp2:= OR_DSZ32(tmp3, tmp2) 

U2f7c: tmp0:= BT_DSZ64(tmp0, 0x00000021) 
U2f7d: tmp3:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00001000) 
U2f7e: tmp2:= OR_DSZ32(tmp3, tmp2) 

U2f80: tmp0:= BT_DSZ64(tmp0, 0x00000029) 
U2f81: tmp3:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000200) 
U2f82: tmp0:= BT_DSZ64(tmp0, 0x00000024) 

U2f84: tmp15:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000010) 
U2f85: tmp3:= OR_DSZ32(tmp15, tmp3) 
U2f86: tmp11:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001ac, tmp13) 

U2f88: tmp11:= SELECTCC_DSZ64_CONDZ(tmp4, tmp11) 
U2f89: tmp15:= AND_DSZ32(0x00000040, tmp11) 
U2f8a: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000004) 

U2f8c: tmp3:= OR_DSZ32(tmp15, tmp3) 
U2f8d: tmp2:= CONCAT_DSZ32(tmp3, tmp2) 
U2f8e: tmp15:= SETCC_CONDZ(tmp4) 

U2f90: tmp15:= SHL_DSZ32(tmp15, 0x0000001f) 
U2f91: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp2, 0x6c0, tmp15) 
U2f92: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp12) 

U2f94: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp13) 
U2f95: tmp7:= CONCAT_DSZ32(tmp15, tmp7) 
U2f96: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp13) 

U2f98: tmp10:= ZEROEXT_DSZ32(0x00000011) 
U2f99: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000001, U3178) !m1,m2 
U2f9a: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U536c

U2f9c: tmp10:= ZEROEXT_DSZ32(0x00000012) 
U2f9d: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000b, U3178) !m0,m1,m2 SEQW GOTO U536c
U2f9e: tmp1:= ZEROEXT_DSZ32(0x00000630) 

U2fa0: tmp11:= ADD_DSZ32() 
U2fa1: tmp6:= AND_DSZ32(0x0000000f, tmp2) 
U2fa2: tmp8:= ADD_DSZ32(0x00000001, tmp1) 

U2fa4: tmp7:= SHL_DSZ32(tmp11, 0x00000004) 
U2fa5: tmp7:= OR_DSZ32(tmp6, tmp7) 
U2fa6: tmp7:= OR_DSZ32(tmp0, tmp7) 

U2fa8: MOVETOCREG_DSZ64(tmp7, tmp8) !m2 
U2fa9: tmp8:= SHR_DSZ32(tmp2, 0x00000010) 
U2faa: tmp8:= AND_DSZ32(0x00000fff, tmp8) 

U2fac: tmp9:= ZEROEXT_DSZ32() 
U2fad: tmp7:= ZEROEXT_DSZ32(tmp8) SEQW SAVEUIP0 U2faeSEQW GOTO U549d
U2fae: tmp9:= OR_DSZ32(tmp7, tmp3) 

U2fb0: MOVETOCREG_DSZ64(tmp9, tmp1) !m2 
U2fb1: tmp7:= SUB_DSZ32(0x00000001, tmp7) 
U2fb2: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp7, U2fb4) SEQW GOTO U2fae

U2fb4: tmp9:= SUB_DSZ32(0x00000001) 
U2fb5: tmp7:= ZEROEXT_DSZ32() SEQW SAVEUIP0 U2fb6SEQW GOTO U549d
U2fb6: tmp9:= READURAM( , 0x0032, 64) 

U2fb8: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp11) 
U2fb9: tmp10:= READURAM( , 0x0040, 64) 
U2fba: tmp9:= CMOVCC_DSZ64_CONDZ(tmp9, tmp10) 

U2fbc: WRITEURAM(tmp9, 0x005a, 64) 
U2fbd: tmp10:= SHR_DSZ64(tmp2, 0x00000020) 
U2fbe: tmp10:= ADD_DSZ64(0x00000000, tmp10) SEQW SAVEUIP0 U2fc0SEQW GOTO U5bb5

U2fc0: tmp7:= ADD_DSZ32(0x00000001, tmp7) 
U2fc1: tmp9:= SUB_DSZ32(tmp7, tmp8) 
U2fc2: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp9, U2fc4) SEQW GOTO U2fbd

U2fc4: tmp9:= ZEROEXT_DSZ32() 
U2fc5: tmp7:= ZEROEXT_DSZ32(tmp8) SEQW SAVEUIP0 U2fc6SEQW GOTO U549d
U2fc6: tmp9:= READURAM( , 0x0030, 64) 

U2fc8: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp11) 
U2fc9: tmp10:= READURAM( , 0x0031, 64) 
U2fca: tmp9:= CMOVCC_DSZ64_CONDZ(tmp9, tmp10) 

U2fcc: WRITEURAM(tmp9, 0x005a, 64) 
U2fcd: tmp10:= SUB_DSZ32(0x00000000, tmp11) 
U2fce: tmp10:= MOVEMERGEFLGS_DSZ64(tmp4, tmp10) 

U2fd0: tmp10:= CMOVCC_DSZ64_CONDZ(tmp10, tmp5) 
U2fd1: tmp10:= ADD_DSZ64(0x00000000, tmp10) SEQW SAVEUIP0 U2fd2SEQW GOTO U5bb5
U2fd2: tmp7:= SUB_DSZ32(0x00000001, tmp7) 

U2fd4: tmp9:= SUB_DSZ32(0x00000000, tmp7) 
U2fd5: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp9, U2fd6) SEQW GOTO U2fcd
U2fd6: tmp7:= ZEROEXT_DSZ32() 

U2fd8: tmp9:= READURAM( , 0x0032, 64) 
U2fd9: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp11) 
U2fda: tmp10:= READURAM( , 0x0040, 64) 

U2fdc: tmp9:= CMOVCC_DSZ64_CONDZ(tmp9, tmp10) 
U2fdd: WRITEURAM(tmp9, 0x005a, 64) 
U2fde: tmp10:= SHR_DSZ64(tmp2, 0x00000020) 

U2fe0: tmp10:= ADD_DSZ64(0x00000000, tmp10) SEQW SAVEUIP0 U2fe1SEQW GOTO U5bb5
U2fe1: tmp7:= ADD_DSZ32(0x00000001, tmp7) 
U2fe2: tmp9:= SUB_DSZ32(tmp7, tmp8) 

U2fe4: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp9, U2fe5) SEQW GOTO U2fde
U2fe5: tmp6:= SUB_DSZ32(0x00000001, tmp6) 
U2fe6: NOP 

U2fe8: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp6, U2fe9) SEQW GOTO U2fa2
U2fe9: tmp11:= ADD_DSZ32(0x00000001, tmp11) 
U2fea: tmp7:= SHR_DSZ8(tmp2, 0x00000004) 

U2fec: tmp7:= AND_DSZ32(0x0000000f, tmp7) 
U2fed: CMPUJZ_DIRECT_NOTTAKEN(tmp11, U2fee, tmp7) !m1 SEQW GOTO U2fa1
U2fee: SYNCFULL-> UJMP( , tmp15) 

U2ff0: tmp10:= ZEROEXT_DSZ16(tmp12) 
U2ff1: SYNCWAIT-> SIGEVENT( , 0x0000000f) 
U2ff2: tmp12:= WRMSLOOPCTRFBR(0x00000003) 

U2ff4: tmp0:= unk_cf7(tmp11) 
U2ff5: tmm3:= FMOV(0x00000011) !m0 
U2ff6: LFNCEMARK-> tmp0:= unk_cf7(tmp11) 

U2ff8: tmm3:= FMOV(0x00000011) !m0 
U2ff9: tmp11:= ADD_DSZN(tmp11, 0x00000020) !m1 
U2ffa: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U2ff4

U2ffc: SIGEVENT( , 0x00000003) 
U2ffd: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp10, 0x48c) 
U2ffe: tmp11:= SUB_DSZN(0x00000080, tmp11) !m1 SEQW URET1

U3000: tmp5:= MOVEFROMCREG_DSZ64( , tmp10) 
U3001: tmp5:= ZEROEXT_DSZ32N(tmp5) !m1 SEQW GOTO U2e2a
U3002: tmp10:= OR_DSZ64(0x00000010, tmp10) SEQW URET1

U3004: tmp5:= READURAM( , tmp10) 
U3005: tmp5:= ZEROEXT_DSZ32N(tmp5) !m1 SEQW GOTO U2e2a
U3006: rsp:= ZEROEXT_DSZ8N(rsp, tmp5) !m1 SEQW URET0

U3008: tmp5:= ZEROEXT_DSZ32N(tmp12) !m1 SEQW GOTO U2e2a
U3009: NOP 
U300a: NOP 

U300c: tmp5:= MOVEFROMCREG_DSZ64( , tmp10) !m1,m2 
U300d: tmp1:= AND_DSZ32(0x00000001, tmp8) 
U300e: tmp2:= SHR_DSZ64(tmp5, 0x00000020) SEQW GOTO U44b1

U3010: tmp1:= SHL_DSZ32(tmp1, 0x00000001) SEQW GOTO U3056
U3011: NOP 
U3012: NOP 

U3014: tmp5:= unk_f75( , tmp2) !m2 SEQW GOTO U2e2a
U3015: NOP 
U3016: NOP 

U3018: TESTUSTATE( , UCODE, !0x0200) !m0 ? SEQW GOTO U2e2a
U3019: tmp1:= BTS_DSZ64(0x00000000, 0x0000003f) 
U301a: tmp5:= AND_DSZ64(tmp1, tmp5) SEQW URET0

U301c: tmp5:= MOVEFROMCREG_DSZ64( , tmp10) !m1 SEQW GOTO U2e2a
U301d: NOP 
U301e: NOP 

U3020: tmp5:= RDSEGFLD(FS, BASE) SEQW GOTO U2e2a
U3021: NOP 
U3022: NOP 

U3024: tmp5:= RDSEGFLD(GS, BASE) SEQW GOTO U2e2a
U3025: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp1, mode=0x01, tmp2) 
U3026: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp8, U5da8) 

U3028: LFNCEWAIT-> unk_256() SEQW GOTO U2e2c
U3029: NOP 
U302a: NOP 

U302c: tmp1:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1 
U302d: tmp1:= NOTAND_DSZ32(tmp1, 0x0000000a) 
U302e: tmp5:= SELECTCC_DSZ64_CONDNZ(tmp1, tmp5) SEQW GOTO U2e2a

U3030: tmp12:= ZEROEXT_DSZ32N(tmp12) !m1 
U3031: tmp1:= OR_DSZ32(0x00010000, tmp8) 
U3032: tmp1:= MSR2CR( , tmp1) SEQW GOTO U44b9

U3034: tmp5:= AND_DSZN(tmp12, tmp5) !m1 SEQW GOTO U2e2a
FUN_ucode_0003035:
U3035: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U3036: tmp12:= ADD_DSZ32(0x00000020, tmp12) 

FUN_ucode_0003038:
U3038: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U3039: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U303a: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U303c: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U303d: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U303e: tmp12:= ADD_DSZ32(0x00000020, tmp12) SEQW URET0

U3040: tmp5:= TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U0cb2
U3041: tmpv0:= READURAM( , 0x003b, 64) 
U3042: tmpv1:= ADD_DSZ64(tmpv0, tmpv1) 

FUN_ucode_0003044:
U3044: LFNCEWTMRK-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x2d7, 32) !m1 
FUN_ucode_0003045:
U3045: tmp13:= SHR_DSZ64(tmpv0, 0x00000037) 
U3046: tmpv1:= ADD_DSZ64(tmp13, tmpv1) SEQW GOTO U2861

FUN_ucode_0003048:
U3048: LFNCEWTMRK-> WRITEURAM(tmp11, 0x000f, 32) 
U3049: tmp0:= NOTAND_DSZ32(0x000f0000, tmp11) SEQW SAVEUIP1 U304aSEQW GOTO U21a1
U304a: NOP 

U304c: TESTUSTATE( , UCODE, !0x3000) !m0 ? SEQW GOTO U308c
U304d: NOP 
uret:
U304e: URET(0x00) 

U3050: tmp5:= SHR_DSZ64(tmp5, 0x00000020) 
U3051: tmp5:= AND_DSZ32(0x0000000f, tmp5) 
U3052: tmp5:= CONCAT_DSZ16(tmp5, tmp5) SEQW GOTO U2e2a

U3054: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x0009) !m2 
U3055: tmp5:= AND_DSZ32(0x00000200, tmp5) 
U3056: tmp5:= OR_DSZ64(tmp1, tmp5) SEQW GOTO U2e2a

U3058: tmp10:= AND_DSZ32(0x0000000f, rax) 
U3059: tmp5:= ADD_DSZ32(0x00000060, tmp10) 
U305a: tmp5:= READURAM( , tmp5) SEQW GOTO U100d

U305c: tmp5:= CONCAT_DSZ32(tmp1, tmp5) SEQW GOTO U2e2a
U305d: NOP 
U305e: NOP 

U3060: MOVETOCREG_DSZ64(rax, 0x2c0, 32) !m1,m2 
U3061: MOVETOCREG_DSZ64(rdx, 0x2c1, 32) !m1,m2 
U3062: tmp5:= PINTMOVDTMM2I_DSZ64(0x00000000) SEQW GOTO U3b21

U3064: SAVEUIP( , 0x01, U3935) !m0 
FUN_ucode_0003065:
U3065: tmp5:= SUB_DSZ32(0x0000000f, rax) 
U3066: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp5, U2711) SEQW GOTO U029a

U3068: LFNCEMARK-> tmp10:= unk_14a(rax) 
U3069: MOVETOCREG_DSZ64(tmp10, 0x2c0, 32) !m1,m2 
U306a: tmp10:= unk_14a(tmp0) SEQW GOTO U5751

U306c: LFNCEMARK-> tmm2:= unk_76f(xmm0) 
U306d: MOVETOCREG_DSZ64(tmp10, 0x2c0, 32) !m1,m2 
U306e: tmm0:= MOVHLPS( , xmm0) SEQW GOTO U02a2

U3070: tmp3:= SHR_DSZ64(tmp5, 0x00000030) 
U3071: tmp3:= AND_DSZ32(0x0000000f, tmp3) 
U3072: tmp1:= SHL_DSZ64(tmp5, 0x00000010) SEQW GOTO U5bf1

U3074: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f1) 
U3075: tmp1:= MOVEFROMCREG_DSZ64( , 0x20e, 32) !m1 
U3076: tmp1:= AND_DSZ32(tmp1, tmp0) 

U3078: tmp0:= MOVEFROMCREG_DSZ64( , 0x20f, 32) !m1 
U3079: tmp1:= AND_DSZ32(tmp1, tmp0) 
U307a: tmp0:= MOVEFROMCREG_DSZ64( , 0x796, 32) !m1 

U307c: tmp0:= SHR_DSZ64(tmp0, 0x00000016) 
U307d: tmp1:= AND_DSZ32(tmp1, tmp0) 
U307e: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x210, 32) !m1 

U3080: LFNCEWAIT-> MOVETOCREG_OR_DSZ64( , 0x00000010, 0x00b) !m2 
U3081: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U670e) 
U3082: tmp9:= ADD_DSZ32(0x00000020) 

U3084: tmp1:= ZEROEXT_DSZ32(0x000000c8) 
U3085: tmp2:= ZEROEXT_DSZ32(0x000005ec) 
U3086: tmp14:= SAVEUIP(0x01, U0ed9) !m0 SEQW GOTO U6586

U3088: tmp5:= SHR_DSZ64(tmp5, 0x00000017) 
U3089: tmp5:= AND_DSZ32(0x00001000, tmp5) 
U308a: tmp5:= OR_DSZ32(0x00000d0a, tmp5) SEQW GOTO U2e2a

U308c: tmp1:= ZEROEXT_DSZ32(0x00000404) 
U308d: tmp0:= READURAM( , 0x0012, 64) 
U308e: SAVEUIP_REGOVR( , 0x01, U3090, 0x4210) !m0 

U3090: tmp14:= READUIP_REGOVR(0x00) 
U3091: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U304e) !m1,m2 SEQW SAVEUIP1 U3092SEQW GOTO U6bfd
U3092: NOP 

U3094: SYNCFULL-> UFLOWCTRL( , tmp14, URET1) 
U3095: tmpv0:= READURAM( , 0x000f, 64) 
U3096: SAVEUIP( , 0x00, U38d0) SEQW GOTO U334d

U3098: tmp5:= BT_DSZ64(tmp3, 0x00000028) 
U3099: tmp5:= SELECTCC_DSZ64_CONDB(tmp5, 0x00000001) 
U309a: tmp5:= SHL_DSZ64(tmp5, 0x0000003a) SEQW GOTO U08ee

U309c: tmp12:= ZEROEXT_DSZ32(0x00000003) SEQW GOTO U3234
U309d: NOP 
U309e: NOP 

U30a0: tmp5:= AND_DSZ32(0x00000003, tmp5) 
U30a1: tmp5:= SHL_DSZ32(tmp5, 0x00000006) 
U30a2: tmp5:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bc00, tmp5) !m2 SEQW GOTO U2e2a

U30a4: tmp5:= AND_DSZ32(0x00007c00, tmp5) 
U30a5: tmp5:= SHR_DSZ32(tmp5, 0x0000000a) 
U30a6: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x0008) !m2 SEQW GOTO U047c

U30a8: tmp1:= AND_DSZ32(0x000000ff, tmp5) 
U30a9: tmp1:= SHL_DSZ32(tmp1, 0x0000000c) 
U30aa: tmp1:= unk_116( , tmp1) SEQW GOTO U0111

U30ac: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x00c0) !m2 
U30ad: tmp2:= AND_DSZ32(0x00000001, tmp1) 
U30ae: tmp1:= SHR_DSZ32(tmp1, 0x00000010) SEQW GOTO U0202

U30b0: tmp5:= NOTAND_DSZ64(0x00811088, tmp5) 
U30b1: tmp5:= BTR_DSZ64(tmp5, 0x00000026) 
U30b2: tmp2:= MOVEFROMCREG_DSZ64( , 0x2e6, 32) !m1 SEQW GOTO U5c09

U30b4: tmp5:= AND_DSZ32(0x00000001, tmp5) 
U30b5: tmp5:= SHL_DSZ32(tmp5, 0x00000002) 
U30b6: tmp1:= MOVEFROMCREG_DSZ64( , 0x3df, 32) !m1 SEQW GOTO U2889

U30b8: MOVETOCREG_AND_DSZ64(tmp9, 0x00000004, 0x6c5) !m2 SEQW GOTO U2531
U30b9: NOP 
U30ba: NOP 

U30bc: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x47f0) !m2 
U30bd: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U2711) !m1 SEQW GOTO U3030
U30be: NOP 

U30c0: NOP 
U30c1: NOP SEQW GOTO U2711
U30c2: NOP 

FUN_ucode_00030c4:
U30c4: tmp10:= OR_DSZ32(0x00000020, tmp5) 
U30c5: tmp5:= MOVEFROMCREG_DSZ64( , tmp10) SEQW GOTO U3070
U30c6: NOP 

U30c8: tmp10:= OR_DSZ32(0x00000040, tmp5) SEQW GOTO U3000
U30c9: NOP 
U30ca: NOP 

U30cc: tmp1:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U30cd: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 SEQW GOTO U2e2a
U30ce: NOP 

U30d0: tmp1:= NOTAND_DSZ32(tmp3, 0x00000400) 
U30d1: tmp1:= SHR_DSZ32(tmp1, 0x00000006) 
U30d2: tmp5:= OR_DSZ32(0x00000064, tmp1) SEQW GOTO U2e2a

U30d4: tmp0:= ZEROEXT_DSZ32(0x0000001e) 
U30d5: tmp1:= ZEROEXT_DSZ32(tmp11) 
U30d6: tmp11:= BT_DSZ32(tmp11, 0x00000004) 

U30d8: tmp15:= SELECTCC_DSZ32_CONDNB(tmp11, 0x00000400) 
U30d9: tmp0:= OR_DSZ32(tmp15, tmp0) 
U30da: UJMP( , tmp4) 

U30dc: tmp5:= SHL_DSZ32(tmp5, 0x00000002) 
U30dd: tmp2:= PORTIN_DSZ16_ASZ16_SC1(0x00c0) !m2 
U30de: tmp1:= AND_DSZ32(0x00007800, tmp2) SEQW GOTO U2c89

U30e0: tmp2:= SELECTCC_DSZ32_CONDNP(tmp14, 0x00000080) 
U30e1: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U30e2: tmp5:= CONCAT_DSZ32(tmp10, tmp12) SEQW GOTO U2e2a

U30e4: tmp2:= SELECTCC_DSZ32_CONDNS(tmp14, 0x00800000) 
U30e5: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U30e6: tmp2:= SELECTCC_DSZ32_CONDNB(tmp1, 0x01000000) SEQW GOTO U30e1

U30e8: tmp2:= SELECTCC_DSZ32_CONDNS(tmp14, 0x00010000) 
U30e9: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U30ea: tmp2:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00020000) SEQW GOTO U30e1

U30ec: tmp2:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00004000) 
U30ed: tmp12:= NOTAND_DSZ32(tmp2, tmp12) SEQW GOTO U30e2
U30ee: NOP 

U30f0: tmp2:= BT_DSZ64(tmp3, 0x00000029) 
U30f1: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00200000) 
U30f2: tmp12:= OR_DSZ32(tmp2, tmp12) SEQW GOTO U2881

U30f4: tmp2:= BT_DSZ64(tmp3, 0x00000037) 
U30f5: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00010800) 
U30f6: tmp10:= NOTAND_DSZ32(tmp2, tmp10) SEQW GOTO U6232

U30f8: tmp2:= BT_DSZ64(tmp3, 0x00000010) 
U30f9: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00200000) 
U30fa: tmp12:= NOTAND_DSZ32(tmp2, tmp12) SEQW GOTO U44d1

U30fc: tmp12:= SELECTCC_DSZ32_CONDB(tmp14, 0x00000001) SEQW GOTO U30e2
U30fd: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b980) !m2 
U30fe: tmp7:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b9c0) !m2 

U3100: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000ba00) !m2 
U3101: tmp9:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000ba40) !m2 
U3102: tmp10:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000ba80) !m2 

U3104: tmp11:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bac0) !m2 
U3105: tmp12:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bb00) !m2 
U3106: tmp13:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bb40) !m2 

U3108: tmp14:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bb80) !m2 
U3109: tmp15:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bbc0) !m2 
U310a: LFNCEMARK-> SAVEUIP(0x00, U21fe) 

U310c: SAVEUIP(0x01, U21fe) !m0 
U310d: NOP 
U310e: LFNCEWAIT-> UJMP( , rax) 

U3110: tmp5:= AND_DSZ32(0x00000001, tmp5) 
U3111: tmp1:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U3112: tmp1:= AND_DSZ32(0x00000001, tmp1) SEQW GOTO U3010

U3114: PORTOUT_DSZ8_ASZ16_SC1(tmp1,  , tmp0) 
U3115: tmp10:= SHR_DSZ32(tmp0, 0x00000008) 
U3116: PORTOUT_DSZ8_ASZ16_SC1(tmp1,  , tmp10) SEQW GOTO U5ac5

U3118: tmp0:= unk_d9f(tmp1) 
U3119: tmp10:= SHR_DSZ32(tmp0, 0x00000018) 
U311a: PORTOUT_DSZ8_ASZ16_SC1(tmp1,  , tmp10) SEQW GOTO U5ac5

U311c: PORTOUT_DSZ16_ASZ16_SC1(tmp1,  , tmp0) 
U311d: tmp10:= SHR_DSZ32(tmp0, 0x00000010) 
U311e: PORTOUT_DSZ16_ASZ16_SC1(tmp1,  , tmp10) SEQW GOTO U5ac5

U3120: PORTOUT_DSZ8_ASZ16_SC1(tmp1,  , tmp0) 
U3121: tmp10:= SHR_DSZ32(tmp0, 0x00000008) 
U3122: tmp10:= unk_d9f(tmp1) SEQW GOTO U5ac5

U3124: tmp1:= MOVEFROMCREG_DSZ64( , 0x2d3, 32) !m1 
U3125: SYNCMARK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000007, U3124) !m0,m1,m2 SEQW GOTO U300c
U3126: PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , 0x00000000) !m2 

U3128: BTUJB_DIRECT_NOTTAKEN(tmp8, 0x0000001c, U0041) SEQW GOTO U7762
U3129: NOP 
U312a: NOP 

U312c: MOVETOCREG_OR_DSZ64( , 0x00000020, 0x2d5) !m1,m2 
U312d: tmp1:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1,m2 
U312e: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000004, U312d) !m1,m2 SEQW GOTO U301c

U3130: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 
U3131: tmp3:= MOVEFROMCREG_DSZ64( , 0x070) 
U3132: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000009, U2485) !m1 

U3134: tmp2:= READURAM( , 0x001f, 64) 
U3135: tmp2:= BTR_DSZ64(tmp2, 0x00000009) 
U3136: tmp8:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000200) 

U3138: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp8, 0x007) 
U3139: WRITEURAM(tmp2, 0x001f, 32) 
U313a: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000007, U313c) !m0,m1,m2 SEQW GOTO U2639

U313c: tmp2:= ZEROEXT_DSZ32(0x00000001) 
U313d: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000008, U1896) !m2 
U313e: tmp14:= SAVEUIP(0x01, U3518) !m0 SEQW GOTO U5cb9

U3140: tmp1:= SHR_DSZ64(tmp5, 0x00000019) 
U3141: tmp1:= AND_DSZ32(0x00000180, tmp1) 
U3142: tmp2:= AND_DSZ32(0x00000100, tmp1) SEQW GOTO U5c29

U3144: tmp5:= AND_DSZ32(0x00004004, tmp5) 
U3145: tmp1:= SHR_DSZ32(tmp5, 0x0000000a) 
U3146: tmp5:= SHR_DSZ32(tmp5, 0x00000002) SEQW GOTO U0222

U3148: SAVEUIP_REGOVR(0x00, U3149, 0x0000) SEQW GOTO U5b86
U3149: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000a0) 
U314a: LFNCEMARK-> tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000080) 

U314c: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, 0x575) 
U314d: tmp8:= NOTAND_DSZ64(0x00000007, tmp8) 
U314e: MOVETOCREG_DSZ64(tmp8, 0x574) SEQW SAVEUIP1 U3150SEQW GOTO U043c

U3150: LFNCEMARK-> NOP 
U3151: NOP 
U3152: NOP 

U3154: LFNCEWAIT-> tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U3155: tmp4:= ADD_DSZN(0x00000004, tmp4) !m1 
U3156: tmp4:= ADD_DSZN(tmp0, tmp4) !m1 SEQW GOTO U1ea6

U3158: tmp5:= AND_DSZ32(0x0000b615, tmp5) 
U3159: tmp1:= MOVEFROMCREG_DSZ64( , 0x01d) 
U315a: tmp1:= AND_DSZ32(0x00000004, tmp1) SEQW GOTO U305c

U315c: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U315d: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x1a) !m1 
U315e: tmp4:= XOR_DSZ32(0xffdbb22a, tmp3) 

U3160: LFNCEWAIT-> tmp1:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U3161: tmp0:= AND_DSZ32(tmp4, tmp0) 
U3162: tmp1:= AND_DSZ32(0x001a3202, tmp1) 

U3164: tmp2:= AND_DSZ32(0x00000100, tmp0) 
U3165: tmp1:= AND_DSZ32(tmp3, tmp1) 
U3166: tmp2:= unk_207(tmp2) 

U3168: tmp2:= OR_DSZ32(0x00000000, tmp2) 
U3169: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2711) 
U316a: ROVR<- tmp0:= OR_DSZ32(tmp1, tmp0) SEQW SAVEUIP1 U316cSEQW GOTO U2e09

U316c: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x7fe) !m2 
U316d: unk_13f(tmp0) !m2 
U316e: rsp:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 SEQW UEND0

U3170: tmp1:= MOVEFROMCREG_DSZ64( , 0x79a) 
U3171: tmp5:= CONCAT_DSZ16(tmp1, tmp5) SEQW GOTO U2e2a
U3172: NOP 

U3174: tmp1:= READURAM( , 0x005c, 64) 
U3175: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000011, U2e2a) !m1 
U3176: SYNCFULL-> tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x1e74) !m2 SEQW GOTO U2e2a

U3178: tmp13:= ZEROEXT_DSZ32(tmp10) SEQW GOTO U2896
U3179: NOP 
U317a: NOP 

U317c: tmp1:= RDSEGFLD(UNK_SEG_10, BASE) 
U317d: tmp5:= SHR_DSZ32(tmp5, 0x0000001e) SEQW GOTO U3056
U317e: NOP 

U3180: NOP 
U3181: NOP SEQW GOTO U2711
U3182: NOP 

U3184: tmp5:= ZEROEXT_DSZ32() SEQW GOTO U2e2a
U3185: NOP 
U3186: NOP 

U3188: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x4718) !m2 
U3189: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000017, U2711) !m0,m1 
U318a: tmp5:= PORTIN_DSZ8_ASZ16_SC1(0x0020) !m2 SEQW GOTO U2e2a

U318c: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x0020) !m2 
U318d: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U2711) !m1 SEQW GOTO U3198
FUN_ucode_000318e:
U318e: tmp12:= WRMSLOOPCTRFBR(0x0000000f) 

U3190: tmp13:= READUIP_REGOVR(0x00) 
U3191: unk_f6d(tmp1, tmp12, rdi) 
U3192: tmp12:= SUBR_DSZ64(tmp12, IMM_MACRO_01) !m0 

U3194: unk_f6d(tmp1, tmp12, rdi) 
U3195: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U3191
U3196: URET(0x00) 

U3198: tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 SEQW GOTO U2e2a
U3199: NOP 
FUN_ucode_000319a:
U319a: tmp12:= WRMSLOOPCTRFBR(0x0000000f) 

U319c: tmp14:= READUIP_REGOVR(0x01) !m0 
U319d: rdi:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp0, tmp12) 
U319e: tmp12:= SUBR_DSZ64(tmp12, IMM_MACRO_01) !m0 

U31a0: rdi:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp0, tmp12) 
U31a1: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U319d
U31a2: URET(0x01) !m0 

U31a4: tmp1:= SHR_DSZ64(tmp5, 0x0000003d) 
U31a5: tmp1:= AND_DSZ32(0x00000005, tmp1) 
U31a6: TESTUSTATE( , UCODE, 0x0800) ? SEQW GOTO U2e2a

U31a8: SYNCMARK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000004, U2e2a) !m1 
U31a9: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x0009) !m2 
U31aa: tmp1:= AND_DSZ32(0x00000001, tmp1) SEQW GOTO U08ae

U31ac: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
U31ad: tmp6:= ADD_DSZ32(0x00000001, tmp6) 
U31ae: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000008, U31b0) !m1,m2 SEQW GOTO U338e

U31b0: tmp15:= ADD_DSZ32(0x00000001, tmp15) 
U31b1: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000010, U31b2) !m1,m2 SEQW GOTO U338d
U31b2: UJMP( , tmp14) 

U31b4: tmp1:= READURAM( , 0x0087, 64) 
U31b5: tmp1:= ZEROEXT_DSZ32(tmp1) 
U31b6: tmp5:= IMUL64L_DSZ64(tmp1, tmp5) SEQW GOTO U2e2a

U31b8: tmp13:= ZEROEXT_DSZ32(0x0000001a) SEQW GOTO U2d69
U31b9: NOP 
U31ba: NOP 

U31bc: NOP 
U31bd: NOP 
U31be: BTUJB_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U1cbe) !m2 SEQW GOTO U32ce

U31c0: LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(0x00000003) SEQW GOTO U66d2
U31c1: NOP 
U31c2: tmp12:= READURAM( , 0x0011, 64) 

U31c4: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000308, mode=0x01, tmp12, tmp2) SEQW GOTO U1f92
U31c5: NOP 
U31c6: NOP 

U31c8: tmp15:= SUB_DSZ64(0x00000006, tmp4) 
U31c9: tmp1:= SELECTCC_DSZ32_CONDNBE(tmp15, tmp4) 
U31ca: tmp1:= ADD_DSZ32(0x00000005, tmp1) 

U31cc: tmp1:= SHL_DSZ32(tmp1, 0x00000004) 
U31cd: tmp1:= ADD_DSZ32(tmp1, 0xfed20e00) 
U31ce: PORTOUT_DSZ8_ASZ16_SC1(tmp1,  , 0x00000000) SEQW GOTO U2b14

U31d0: tmp4:= ZEROEXT_DSZ16(0x00000040) SEQW URET0
U31d1: tmp11:= PORTIN_DSZ8_ASZ16_SC1(0x0019) !m2 
U31d2: CMPUJNZ_DIRECT_NOTTAKEN(tmp11, 0x00000000, U31d4) !m1,m2 SEQW GOTO U57a1

U31d4: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2db) !m0,m1 
U31d5: tmp5:= ZEROEXT_DSZ32() 
U31d6: SAVEUIP( , 0x00, U3a78) SEQW GOTO U5ee8

U31d8: tmp4:= ZEROEXT_DSZ16(0x00000080) SEQW URET0
U31d9: TESTUSTATE( , SYS, !UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U2814
U31da: tmp0:= READURAM( , 0x0023, 64) 

U31dc: tmp0:= AND_DSZ32(0x00000030, tmp0) 
U31dd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2814) 
U31de: tmp5:= BTS_DSZ32(0x00000000, 0x00000010) SEQW GOTO U2814

U31e0: tmp4:= ZEROEXT_DSZ32() SEQW URET0
U31e1: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U1b0c
U31e2: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 

U31e4: MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000b, 0x285) !m0,m1,m2 
U31e5: tmp0:= PORTIN_DSZ16_ASZ16_SC1(0x4680) !m2 
U31e6: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000b740,  , tmp0) SEQW GOTO U1b0c

U31e8: SAVEUIP( , 0x00, U400a) SEQW GOTO U063c
U31e9: LFNCEMARK-> tmp0:= CONCAT_DSZ32(tmp13, tmp1) 
U31ea: tmp3:= ZEROEXT_DSZ32(0x00000010) 

U31ec: LFNCEWAIT-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
U31ed: tmp4:= MOVE_DSZ32(0x00000037) 
U31ee: MOVETOCREG_DSZ64(tmp4, 0x00b) 

U31f0: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U31f1: LFNCEWTMRK-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U31f2: ROVR<- tmp10:= READAFLAGS( , tmp10) !m2 SEQW SAVEUIP1 U31f4SEQW GOTO U050c

U31f4: tmp4:= READURAM( , 0x001b, 64) 
U31f5: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp4, 0x067) !m2 
U31f6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff8, mode=0x01,  , tmp10) 

U31f8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff0, mode=0x01,  , tmp11) 
U31f9: rsp:= SUB_DSZN(tmp3, rsp) !m1 
U31fa: tmp0:= BTS_DSZ64(tmp0, 0x0000001f) 

U31fc: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff8, mode=0x01,  , tmp0) 
U31fd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xfffffffffffffff0, mode=0x01,  , tmp3) 
U31fe: rsp:= SUB_DSZN(0x00000010, rsp) !m1 SEQW GOTO U17ec

U3200: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp5, tmp10) SEQW GOTO U60d2
U3201: NOP 
U3202: NOP 

U3204: tmp10:= AND_DSZ32(0x000000ff, tmp10) 
U3205: tmp10:= OR_DSZ32(0x00000200, tmp10) SEQW GOTO U3209
U3206: NOP 

U3208: tmp10:= AND_DSZ32(0x000000ff, tmp10) 
U3209: LFNCEWTMRK-> WRITEURAM(tmp5, tmp10) 
U320a: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U60d4

U320c: unk_256() 
U320d: tmp2:= ZEROEXT_DSZ32(0x00000503) 
U320e: LFNCEWAIT-> TESTUSTATE( , UCODE, !0x3000) !m0 ? SEQW GOTO U2e30

uend:
U3210: SYNCWAIT-> NOP SEQW UEND0
U3211: tmp13:= MOVEFROMCREG_DSZ64( , 0x000) 
U3212: tmp6:= ZEROEXT_DSZ32(0x80000000) SEQW GOTO U37f4

U3214: tmp5:= unk_f7d( , tmp2) !m2 SEQW GOTO U60d2
U3215: NOP 
U3216: NOP 

U3218: TESTUSTATE( , UCODE, !0x0200) !m0 ? SEQW GOTO U321c
U3219: tmp5:= SHR_DSZ64(tmp5, 0x0000003f) 
U321a: tmp5:= SHL_DSZ64(tmp5, 0x0000003f) 

U321c: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp5, tmp10) !m1 SEQW GOTO U332d
U321d: NOP 
U321e: NOP 

U3220: LFNCEWTMRK-> WRSEGFLD(tmp5, FS, BASE) SEQW GOTO U320a
U3221: NOP 
U3222: NOP 

U3224: LFNCEWTMRK-> WRSEGFLD(tmp5, GS, BASE) SEQW GOTO U320a
U3225: NOP 
U3226: NOP 

U3228: tmp1:= READURAM( , 0x0041, 64) 
U3229: tmp1:= SHR_DSZ64(tmp1, 0x00000017) 
U322a: tmp1:= AND_DSZ32(tmp5, tmp1) SEQW GOTO U190c

U322c: LFNCEMARK-> WRITEURAM(tmp5, 0x001d, 64) !m2 
U322d: tmp10:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1 
U322e: BTUJNB_DIRECT_NOTTAKEN(tmp10, 0x00000003, U60d2) !m0,m1 SEQW GOTO U58d0

U3230: SAVEUIP( , 0x01, U3204) !m0 SEQW GOTO U5fd6
U3231: NOP 
U3232: NOP 

U3234: SAVEUIP( , 0x01, U3200) !m0 
U3235: tmp2:= MOVEFROMCREG_DSZ64( , tmp10) SEQW GOTO U5fd8
U3236: NOP 

U3238: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp8, U37f2) SEQW GOTO U3282
U3239: NOP 
U323a: NOP 

U323c: tmp2:= SHR_DSZ64(tmp3, 0x00000026) 
U323d: tmp2:= AND_DSZ64(tmp5, tmp2) 
U323e: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2711) SEQW GOTO U3230

U3240: tmp1:= SAVEUIP_REGOVR(0x01, U3241, 0x0012) !m0 
U3241: SAVEUIP( , 0x00, U238e) SEQW GOTO U3044
U3242: NOP 

U3244: tmp2:= SHR_DSZ64(tmp3, 0x0000000f) 
U3245: tmp2:= NOTAND_DSZ32(tmp2, tmp5) 
U3246: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000a, U2711) !m0,m1 SEQW GOTO U69d1

U3248: tmp5:= SHR_DSZ32(tmp5, 0x00000006) SEQW SAVEUIP1 U3249SEQW GOTO U32cd
U3249: tmp1:= MOVEFROMCREG_DSZ64( , 0x2e6, 32) !m1 
U324a: tmp5:= NOTAND_DSZ32(tmp5, 0x00000010) 

U324c: tmp5:= NOTAND_DSZ64(tmp5, tmp1) 
U324d: MOVETOCREG_DSZ64(tmp5, tmp10) !m1 
U324e: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 SEQW GOTO U332d

U3250: tmp1:= SHR_DSZ64(tmp3, 0x00000019) 
U3251: tmp1:= AND_DSZ32(tmp5, tmp1) 
U3252: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U2711) !m0,m1 SEQW GOTO U24ed

U3254: PORTOUT_DSZ8_ASZ16_SC1(0x0009,  , tmp5) !m2 
U3255: tmp5:= AND_DSZ32(0x00000200, tmp5) 
U3256: tmp12:= ZEROEXT_DSZ32(0x00000200) SEQW GOTO U3230

U3258: SAVEUIP( , 0x00, U60d2) 
U3259: CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000000, U0164) SEQW SAVEUIP1 U325a
U325a: CMPUJZ_DIRECT_NOTTAKEN(rax, 0x00000002, U3745) !m0,m1,m2 SEQW GOTO U0504

U325c: tmp5:= AND_DSZ32(0x80000000, tmp5) 
U325d: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x003c) !m2 
U325e: tmp1:= SELECTCC_DSZ32_CONDZ(tmp5, tmp1) SEQW GOTO U44d9

U3260: tmp10:= READURAM( , 0x0062, 64) 
U3261: unk_13f(tmp10) !m2 
U3262: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp10, 0x7fe) SEQW GOTO U2c92

U3264: tmp10:= READURAM( , 0x0062, 64) 
U3265: tmp5:= READURAM( , 0x0063, 64) 
U3266: tmp10:= CONCAT_DSZ16(tmp5, tmp10) SEQW GOTO U1e00

U3268: tmp10:= MOVEFROMCREG_DSZ64( , 0x2c0, 32) !m1 
U3269: rax:= unk_14d(tmp10) 
U326a: tmp10:= MOVEFROMCREG_DSZ64( , 0x2c1, 32) !m1 SEQW GOTO U5ae5

U326c: tmp10:= MOVEFROMCREG_DSZ64( , 0x2c0, 32) !m1 
U326d: tmm0:= unk_747(tmm2) 
U326e: tmp10:= MOVEFROMCREG_DSZ64( , 0x2c1, 32) !m1 SEQW GOTO U02aa

U3270: tmp10:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U3271: tmp10:= BTR_DSZ32(tmp10, 0x0000001f) 
U3272: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmp10, 0x7f6, rax) SEQW GOTO U60d2

U3274: UJMPCC_DIRECT_NOTTAKEN_CONDNS(tmp8, U37f2) 
U3275: LFNCEMARK-> WRITEURAM(tmp5, 0x0171, 64) !m2 SEQW GOTO U320a
wrmsr_update_ucode_patch:
U3276: NOP 

U3278: LFNCEMARK-> TESTUSTATE( , SYS, UST_VMX_DUAL_MON | UST_VMX_GUEST) !m1 ? SEQW GOTO U3282
U3279: tmp4:= CONCAT_DSZ32(rdx, rax) 
U327a: tmp4:= ZEROEXT_DSZ64N(tmp4) !m1 

apply_ucode_patch:
U327c: tmp0:= READURAM( , 0x0053, 64) !m2 
U327d: tmp0:= NOTAND_DSZ32(0x00000079, tmp0) 
U327e: tmp0:= OR_DSZ32(0x00000002, tmp0) SEQW GOTO U2625

U3280: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNS(tmp8, U37f2) 
U3281: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U3230
U3282: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW URET0

U3284: tmp0:= ZEROEXT_DSZ32(0x00000020) SEQW GOTO U1f90
U3285: NOP 
U3286: NOP 

U3288: tmp5:= SHL_DSZ64(tmp5, 0x00000020) 
U3289: tmp5:= SAR_DSZ64(tmp5, 0x00000020) SEQW GOTO U321c
U328a: NOP 

U328c: tmp1:= SHR_DSZ64(tmp3, 0x00000020) 
U328d: tmp1:= AND_DSZ64(tmp5, tmp1) 
U328e: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000001f, U2711) !m0,m1 SEQW GOTO U0109

U3290: tmp5:= BTR_DSZ32(tmp5, 0x00000008) 
U3291: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp5, U44b5) 
U3292: tmp2:= READURAM( , 0x0023, 64) SEQW GOTO U2c65

U3294: tmp1:= MOVEFROMCREG_DSZ64( , 0x701) 
U3295: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U2711) !m1 SEQW GOTO U3234
U3296: NOP 

U3298: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp8, U37f2) 
U3299: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U60d2) !m1 SEQW SAVEUIP1 U329aSEQW GOTO U02ba
U329a: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x9704) !m2 

U329c: tmp1:= OR_DSZ32(0x00000001, tmp1) 
U329d: PORTOUT_DSZ32_ASZ16_SC1(0x9704,  , tmp1) !m2 SEQW GOTO U56f8
U329e: NOP 

U32a0: tmp2:= READURAM( , 0x0023, 64) 
U32a1: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000003f, U2711) !m0,m1 
U32a2: tmp2:= AND_DSZ32(0x00000003, tmp2) SEQW GOTO U44a9

U32a4: SAVEUIP( , 0x01, U3208) !m0 
U32a5: tmp2:= READURAM( , 0x0023, 64) 
U32a6: tmp1:= NOTAND_DSZ64(tmp5, tmp2) SEQW GOTO U5fd4

U32a8: LFNCEMARK-> PORTOUT_DSZ8_ASZ16_SC1(0x0008,  , tmp5) !m2 SEQW URET0
U32a9: tmp14:= ZEROEXT_DSZ32(tmp9) 
U32aa: tmp11:= SAVEUIP(tmp15, 0x01, U6970) !m0 SEQW GOTO U080e

U32ac: tmp1:= SHL_DSZ64(tmp3, 0x0000000c) 
U32ad: tmp3:= PORTIN_DSZ32_ASZ16_SC1(0x00c0) !m2 
U32ae: tmp2:= SHL_DSZ64(tmp3, 0x00000009) SEQW GOTO U5a75

U32b0: tmp12:= ADD_DSZ32(0x00c41089) 
U32b1: tmp2:= BT_DSZ64(tmp3, 0x00000014) 
U32b2: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00000040) SEQW GOTO U509a

U32b4: SYNCMARK-> tmp1:= SHR_DSZ32(tmp5, 0x00000002) 
U32b5: tmp2:= MOVEFROMCREG_DSZ64( , 0x105) 
U32b6: tmp2:= NOTAND_DSZ32(0x00000001, tmp2) SEQW GOTO U5925

U32b8: SAVEUIP( , 0x01, U020a) !m0 SEQW GOTO U02ba
U32b9: NOP 
U32ba: NOP 

U32bc: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x47f0) !m2 
U32bd: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U2711) !m1 
U32be: tmp5:= SHL_DSZ32(tmp5, 0x0000000e) SEQW GOTO U0212

U32c0: NOP 
U32c1: NOP SEQW GOTO U2711
U32c2: NOP 

U32c4: tmp1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U32c5: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000e, U60d2) !m0,m1 SEQW GOTO U321c
U32c6: NOP 

U32c8: tmp1:= READURAM( , 0x0023, 64) 
U32c9: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U2711) !m1 
U32ca: MOVETOCREG_SHL_DSZ64(tmp5, 0x00000002, 0x38a) !m0,m1,m2 SEQW GOTO U332d

U32cc: SAVEUIP( , 0x01, U324d) !m0 
crbus_sync_with_289:
U32cd: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x289) !m1,m2 
U32ce: tmpv0:= MOVEFROMCREG_DSZ64( , 0x289, 32) !m1,m2 SEQW GOTO U31be

U32d0: tmp3:= MOVEFROMCREG_DSZ64( , 0x573) 
U32d1: tmp2:= SAVEUIP(tmp5, 0x01, U633e) !m0 SEQW GOTO U32f9
U32d2: NOP 

U32d4: tmp3:= SAVEUIP(tmp5, 0x01, U633e) !m0 
U32d5: tmp2:= MOVEFROMCREG_DSZ64( , 0x572) 
U32d6: tmp1:= SAR_DSZ32(tmp5, 0x0000000c) SEQW GOTO U0484

U32d8: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 
U32d9: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 
U32da: BTUJNB_DIRECT_NOTTAKEN(tmp8, 0x00000000, U048c) SEQW GOTO U5915

U32dc: tmp1:= SHR_DSZ32(tmp5, 0x00000002) 
U32dd: tmp1:= AND_DSZ32(0x1003fff7, tmp1) 
U32de: PORTOUT_DSZ32_ASZ16_SC1(0x47f0,  , tmp1) !m2 SEQW GOTO U5c19

U32e0: tmp1:= MOVEFROMCREG_DSZ64( , tmp10) 
U32e1: tmp1:= AND_DSZ32(0x00000800, tmp1) 
U32e2: tmp5:= OR_DSZ64(tmp1, tmp5) SEQW SAVEUIP1 U32e4SEQW GOTO U32f9

U32e4: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp5, tmp10) !m2 SEQW GOTO U60d2
U32e5: NOP 
U32e6: NOP 

U32e8: tmp3:= NOTAND_DSZ32(0x00000001, tmp10) 
U32e9: tmp1:= MOVEFROMCREG_DSZ64( , tmp3) 
U32ea: tmp1:= NOTAND_DSZ64(0x00000800, tmp1) SEQW GOTO U021a

U32ec: tmp1:= CONCAT_DSZ32(0x03030303) 
U32ed: tmp1:= AND_DSZ64(tmp5, tmp1) 
U32ee: tmp1:= SHR_DSZ64(tmp1, 0x00000001) SEQW GOTO U44c1

U32f0: tmp1:= CONCAT_DSZ32(0x04040404) 
U32f1: tmp1:= NOTAND_DSZ64(tmp5, tmp1) 
U32f2: tmp1:= SHR_DSZ64(tmp1, 0x00000001) SEQW GOTO U44c9

U32f4: UJMPCC_DIRECT_NOTTAKEN_CONDNS(tmp8, U37f2) 
U32f5: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 
U32f6: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000b, U2711) !m0,m1 SEQW GOTO U6150

U32f8: SAVEUIP( , 0x01, U5a85) !m0 
FUN_ucode_00032f9:
U32f9: tmp1:= AND_DSZ32(0x00000006, tmp5) 
U32fa: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000002, U2711) !m0,m1 SEQW GOTO U07bd

U32fc: tmp2:= SHR_DSZ32(tmp5, 0x0000001a) 
U32fd: tmp1:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U32fe: tmp1:= NOTAND_DSZ32(0x00000020, tmp1) SEQW GOTO U44d5

U3300: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U3301: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U4596) !m0 
U3302: LFNCEMARK-> tmp1:= AND_DSZ32(0x00000001, tmp8) SEQW GOTO U01fa

U3304: tmp1:= MOVEFROMCREG_DSZ64( , tmp10) !m1 
U3305: MOVETOCREG_DSZ64(tmp5, tmp10) !m1,m2 SEQW GOTO U54a8
U3306: NOP 

U3308: tmp1:= MOVEFROMCREG_DSZ64( , tmp10) 
U3309: MOVETOCREG_DSZ64(tmp5, tmp10) !m2 SEQW GOTO U54a8
U330a: NOP 

U330c: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000003d, U2711) !m1 
U330d: tmp1:= ZEROEXT_DSZ32(0x00000000) SEQW GOTO U3361
U330e: NOP 

U3310: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000000, U60d2) !m1 
U3311: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x8404) !m2 
U3312: tmp1:= ROL_DSZ32(tmp1, 0x00000002) SEQW GOTO U0494

U3314: SAVEUIP( , 0x01, U3208) !m0 SEQW GOTO U3319
U3315: NOP 
U3316: NOP 

U3318: SAVEUIP( , 0x01, U3200) !m0 
U3319: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U331a: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000d, U60d2) !m1 SEQW GOTO U0119

U331c: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U331d: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000d, U60d2) !m1 
U331e: tmp3:= MOVEFROMCREG_DSZ64( , 0x7f0) SEQW GOTO U0da1

U3320: tmp13:= SAVEUIP(0x00, U2646) 
U3321: tmp2:= TESTUSTATE(tmp5, VMX, !0x0004) !m0,m2 ? SEQW GOTO U57ad
U3322: tmp1:= MOVEFROMCREG_DSZ64( , 0x7bb) 

U3324: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 SEQW GOTO U321c
U3325: NOP 
U3326: NOP 

U3328: tmp13:= SAVEUIP(0x00, U64d4) SEQW SAVEUIP1 U3329SEQW GOTO U0474
U3329: tmp1:= MOVEFROMCREG_DSZ64( , 0x2d3, 32) !m1 
U332a: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000007, U3329) !m0,m1,m2 

U332c: MOVETOCREG_DSZ64( , 0x00000000, 0x28b, 32) !m1,m2 
U332d: SYNCMARK-> NOP SEQW GOTO U320a
U332e: NOP 

U3330: tmp1:= MOVEFROMCREG_DSZ64( , 0x2e7, 32) !m1 
U3331: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000c, U3330) !m1,m2 SEQW GOTO U321c
U3332: NOP 

U3334: MOVETOCREG_DSZ64(tmp5, tmp10) !m1,m2 
U3335: tmp1:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1,m2 
U3336: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000004, U3335) !m1,m2 SEQW GOTO U60d2

U3338: tmp1:= ZEROEXT_DSZ32(0x000003f0) 
U3339: tmp13:= SAVEUIP(0x00, U60e9) SEQW SAVEUIP1 U333aSEQW GOTO U0474
U333a: tmp1:= MOVEFROMCREG_DSZ64( , 0x28f, 32) !m1 

U333c: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U2711) !m1 
U333d: MOVETOCREG_BTS_DSZ64(tmp5, 0x0000000c, 0x2bf) !m1,m2 
U333e: tmp1:= MOVEFROMCREG_DSZ64( , 0x2bf, 32) !m1,m2 SEQW GOTO U23c6

U3340: tmp1:= AND_DSZ32(0x00001800, tmp5) 
U3341: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x00001800) 
U3342: tmp5:= OR_DSZ32(tmp1, tmp5) SEQW GOTO U63dd

U3344: tmp5:= CONCAT_DSZ8(tmp5, tmp5) 
U3345: tmp5:= AND_DSZ32(0x00001001, tmp5) 
U3346: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x4c18) !m2 SEQW GOTO U022a

U3348: tmp2:= SAVEUIP_REGOVR(tmp5, 0x00, U3349, 0x8321) 
U3349: SAVEUIP( , 0x01, U60d2) !m0 SEQW GOTO U6bfc
U334a: NOP 

U334c: tmp2:= ZEROEXT_DSZ64(tmp5) 
FUN_ucode_000334d:
U334d: PORTOUT_DSZ64_ASZ16_SC1(0x8818,  , tmpv0) !m2 SEQW URET0
U334e: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 SEQW GOTO U2711

U3350: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000002, U6074) !m0,m1 
U3351: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000008, U32cd) !m1,m2 SEQW SAVEUIP1 U3352SEQW GOTO U60d2
U3352: tmp1:= MOVEFROMCREG_DSZ64( , 0x2e1, 32) !m1 

U3354: MOVETOCREG_BTS_DSZ64(tmp1, 0x0000000a, 0x2e1) !m0,m1,m2 SEQW GOTO U324e
U3355: NOP 
U3356: NOP 

U3358: MOVETOCREG_SHR_DSZ64(tmp5, 0x00000020, 0x070) !m2 SEQW GOTO U321c
U3359: NOP 
U335a: NOP 

U335c: tmp5:= BTR_DSZ64(tmp5, 0x00000004) 
U335d: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp5, U321c) 
U335e: unk_eff() SEQW GOTO U321c

U3360: tmp1:= ZEROEXT_DSZ32(0x0000001f) 
U3361: tmp10:= ZEROEXT_DSZ32(0x000056f8) SEQW GOTO U56f1
U3362: LFNCEMARK-> unk_e7b(tmp0, tmp2) !m0 

U3364: LFNCEWAIT-> rsp:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 SEQW UEND0
U3365: tmp7:= CONCAT_DSZ16(tmp7, 0x00000403) 
U3366: SAVEUIP( , 0x00, U6012) SEQW GOTO U6ba1

U3368: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000001, U5dd4) !m2 
U3369: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000002, U2b29) !m0,m1 
U336a: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000008, U5ba4) !m2 SEQW GOTO U1ca4

U336c: tmp1:= OR_DSZ32(0x00000001, tmp10) 
U336d: tmp1:= MOVEFROMCREG_DSZ64( , tmp1) 
U336e: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 SEQW GOTO U3200

U3370: LFNCEWAIT-> MOVETOCREG_SHR_DSZ64(tmp5, 0x00000010, 0x79a) SEQW GOTO U3200
U3371: NOP 
U3372: NOP 

U3374: tmp2:= READURAM( , 0x005c, 64) 
U3375: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000011, U6261) !m1 
U3376: tmp12:= WRMSLOOPCTRFBR(0x0000000c) SEQW GOTO U6259

U3378: LFNCEWTMRK-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U2711) !m1 
U3379: tmp1:= unk_222(tmp5) 
U337a: tmp2:= unk_1d7(tmp5) SEQW GOTO U049c

U337c: tmp2:= AND_DSZ64(0xfffffffffffff000, tmp5) 
U337d: LFNCEWAIT-> WRSEGFLD(tmp2) 
U337e: tmp5:= AND_DSZ32(0x00000003, tmp5) SEQW GOTO U309c

U3380: tmp13:= ZEROEXT_DSZ32(0x00000007) SEQW GOTO U2896
U3381: NOP 
U3382: NOP 

U3384: NOP SEQW URET0
U3385: LFNCEMARK-> unk_e7b(tmp0, tmp2) 
U3386: tmp5:= WRITEURAM( , 0x00000000, 0x006f, 64) !m2 SEQW GOTO U3801

U3388: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x4718) !m2 
U3389: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000017, U2711) !m0,m1 
U338a: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000003, U2711) !m0,m1 SEQW GOTO U56ed

U338c: tmp15:= OR_DSZ32() 
U338d: tmp6:= OR_DSZ32() 
U338e: tmp1:= SHL_DSZ32(tmp6, 0x00000005) 

U3390: tmp1:= OR_DSZ32(tmp15, tmp1) 
U3391: tmp1:= SHL_DSZ32(tmp1, 0x0000000f) 
U3392: SAVEUIP_REGOVR(0x01, U3394, 0x0002) !m0 SEQW GOTO U32cd

U3394: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp1, 0x00000007, 0x3a5) !m0,m1,m2 
U3395: tmp2:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 
U3396: UJMP( , tmp13) 

U3398: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(0x0000, tmp2, tmp5) !m1,m2 SEQW GOTO U60d2
FUN_ucode_0003399:
U3399: tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U339a: tmp12:= ADD_DSZ32(0x00000020, tmp12) 

U339c: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U339d: tmp8:= ZEROEXT_DSZ32(tmp8, tmp5) 
U339e: tmp9:= SHR_DSZ32(tmp8, 0x00000010) 

U33a0: tmp2:= SHR_DSZ64(tmp6, 0x00000020) 
U33a1: LFNCEWAIT-> tmp5:= MOVETOCREG_DSZ64(tmp6, tmp8) !m1 
U33a2: tmp9:= ZEROEXT_DSZ32(tmp9, tmp5) 

U33a4: tmp5:= MOVETOCREG_DSZ64(tmp2, tmp9) !m1 
U33a5: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3399
U33a6: URET(0x00) 

U33a8: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 
U33a9: PORTOUT_DSZ32_ASZ16_SC1(0x0000, tmp2, tmp5) !m1,m2 SEQW GOTO U54a8
U33aa: NOP 

U33ac: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 
U33ad: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000003f, U2711) !m0,m1 
U33ae: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000002b, U3398) !m0,m1,m2 SEQW GOTO U05b4

U33b0: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x4718) !m2 
U33b1: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000001e, U2711) !m0,m1 SEQW GOTO U3398
U33b2: NOP 

U33b4: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp8, U37f2) 
U33b5: tmp5:= BTR_DSZ32(tmp5, 0x0000001f) 
U33b6: tmp1:= ZEROEXT_DSZ32(0x0000001e) SEQW GOTO U56f0

U33b8: tmp1:= ZEROEXT_DSZ32(0x00000004) SEQW GOTO U5f16
U33b9: NOP 
U33ba: NOP 

U33bc: NOP 
U33bd: NOP 
U33be: tmp7:= CONCAT_DSZ16(tmp15, 0x00000005) SEQW SAVEUIP0 U33c0SEQW GOTO U6ba1

U33c0: LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U079e
U33c1: tmp1:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U33c2: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U2769) !m0,m1 

U33c4: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U33c8
U33c5: tmp1:= READURAM( , 0x0043, 64) 
U33c6: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000034, U2769) !m1 

U33c8: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U33c9: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U2771) !m0,m1 
U33ca: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U33cc: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U33d6
U33cd: tmp1:= READURAM( , 0x0057, 64) 
U33ce: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000003c8, tmp1) 

U33d0: tmp4:= CONCAT_DSZ32(rdx, rax) 
U33d1: tmp4:= AND_DSZ64(tmp2, tmp4) 
U33d2: tmp4:= AND_DSZ64(tmp4, tmp1) 

U33d4: tmp0:= ZEROEXT_DSZ32(0x00000040) 
U33d5: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U6148) 
U33d6: tmp3:= LEA_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 

U33d8: tmp3:= AND_DSZ8(0x0000003f, tmp3) 
U33d9: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U2711) 
U33da: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 

U33dc: tmp11:= ZEROEXT_DSZ16N(tmp11) !m1 
U33dd: tmp2:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000208, mode=0x18) 
U33de: tmp2:= BTR_DSZ64(tmp2, 0x0000003f) 

U33e0: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp2, U2711) 
U33e1: tmp5:= CONCAT_DSZ32(rdx, rax) 
U33e2: tmp5:= AND_DSZ64(tmp5, tmp6) 

U33e4: LFNCEMARK-> tmp4:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000200, mode=0x18) 
U33e5: tmp7:= SHR_DSZ64(tmp5, 0x00000001) 
U33e6: tmp7:= AND_DSZ64(0x0000000c, tmp7) 

U33e8: tmp8:= AND_DSZ64(0x00000003, tmp5) 
U33e9: tmp8:= OR_DSZ64(tmp7, tmp8) 
U33ea: tmp7:= SHR_DSZ64(tmp4, 0x00000001) 

U33ec: tmp7:= AND_DSZ64(0x0000000c, tmp7) 
U33ed: tmp13:= AND_DSZ64(0x00000003, tmp4) 
U33ee: tmp13:= OR_DSZ64(tmp7, tmp13) 

U33f0: tmp13:= SHL_DSZ64(tmp13, 0x00000004) 
U33f1: tmp8:= OR_DSZ64(tmp8, tmp13) 
U33f2: SYNCMARK-> UFLOWCTRL( , tmp8, USTATE) 

U33f4: LFNCEWAIT-> WRITEURAM(tmp8, 0x003f, 64) 
U33f5: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x072) !m0 SEQW GOTO U4c99
U33f6: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U33f8: tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 
U33f9: rax:= ZEROEXT_DSZ32N(tmp0, rax) !m1 
U33fa: tmp4:= SUB_DSZN(0x00000001, tmp4) !m1 

U33fc: rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 
U33fd: MSLOOP-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U0465) SEQW GOTO U33f8
U33fe: LFNCEMARK-> tmp1:= unk_e6b(tmp0, tmp2) !m1,m2 

U3400: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp1, tmp1) 
U3401: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U0095
U3402: tmp11:= MOVEFROMCREG_DSZ64( , 0x79e) 

U3404: tmp6:= MOVETOCREG_DSZ64(0x00000017, 0x000) !m2 SEQW GOTO U3d4a
U3405: rsp:= ZEROEXT_DSZ8N(rsp, tmp5) !m1 
U3406: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U5f6a) !m2 

U3408: LFNCEWAIT-> STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp8) !m0,m1 
U3409: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, tmp5) !m0,m1 
U340a: rsp:= ADD_DSZN(IMM_MACRO_f3, rsp) !m0,m1 

U340c: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U2ee4
U340d: LFNCEMARK-> tmp8:= ZEROEXT_DSZ32N(IMM_MACRO_ALIAS_DATASIZE) !m0,m1 
U340e: tmp8:= SHR_DSZ32(tmp8, 0x00000001) 

U3410: tmp11:= SHL_DSZ32(tmp11, tmp8) 
U3411: rsp:= SUB_DSZN(tmp11, rsp) !m1 
U3412: tmp8:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U3414: WRSEGFLD(tmp8, UNK_SEG_04, SEL+FLGS+LIM) 
U3415: tmp8:= RDSEGFLD(SS_USERM, BASE) 
U3416: WRSEGFLD(tmp8, UNK_SEG_04, BASE) 

U3418: tmp8:= RDSEGFLD(SS, FLGS) 
U3419: LFNCEWAIT-> tmp7:= RDSEGFLD(SS, SEL+FLGS+LIM) 
U341a: WRSEGFLD(tmp7, SS_USERM, SEL+FLGS+LIM) 

U341c: tmp7:= RDSEGFLD(SS, BASE) 
U341d: WRSEGFLD(tmp7, SS_USERM, BASE) 
U341e: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp8, 0x00000005, 0x79e) 

U3420: tmp7:= MOVEFROMCREG_DSZ64( , 0x000) 
U3421: tmp7:= NOTAND_DSZ32(0x00000400, tmp7) 
U3422: tmp7:= MOVETOCREG_BTS_DSZ64(tmp7, 0x00000009, 0x000) 

U3424: tmp8:= ZEROEXT_DSZ32N(IMM_MACRO_ALIAS_DATASIZE) !m0,m1 
U3425: tmp11:= SUB_DSZ32(tmp8, tmp11) 
U3426: tmp1:= unk_b2f(tmp5, tmp11) 

U3428: tmp1:= AND_DSZ32(tmp12, tmp1) 
U3429: LFNCEWAIT-> tmp1:= LDPPHYS_DSZN_ASZ32_SC1(tmp1, mode=0x0a) !m1 
U342a: STAD_DSZN_ASZ32_SC1(rsp, SS, tmp11, mode=0x04, tmp1) !m1 

U342c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp11, U342d) SEQW GOTO U3425
U342d: tmp8:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) 
U342e: WRSEGFLD(tmp8, SS_USERM, SEL+FLGS+LIM) 

U3430: tmp8:= RDSEGFLD(UNK_SEG_04, BASE) 
U3431: WRSEGFLD(tmp8, SS_USERM, BASE) 
U3432: tmp8:= RDSEGFLD(UNK_SEG_04, FLGS) 

U3434: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp8, 0x00000005, 0x79e) 
U3435: tmp7:= OR_DSZ32(0x00000400, tmp7) 
U3436: NOP 

U3438: LFNCEWAIT-> tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x00000009, 0x000) SEQW GOTO U2ee5
U3439: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U343a: tmp10:= ZEROEXT_DSZ32() 

U343c: tmp2:= ZEROEXT_DSZ32(IMM_MACRO_ALIAS_DATASIZE) !m0 
U343d: WRITEURAM(tmp10, 0x003e, 64) !m2 
U343e: tmp15:= OR_DSZ32(tmp2, tmp11) 

U3440: tmp11:= SUB_DSZ32(0x00000001, tmp15) 
U3441: tmp15:= SHL_DSZ32(tmp15, 0x00000001) 
U3442: tmp3:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U3444: tmp15:= CONCAT_DSZ16(tmp1, tmp15) 
U3445: WRITEURAM(tmp15, 0x0039, 32) !m2 
U3446: tmp11:= CONCAT_DSZ16(tmp1, tmp11) 

U3448: tmp15:= SHL_DSZ64(tmp11, 0x00000020) 
U3449: WRITEURAM(tmp15, 0x017a, 64) !m2 
U344a: tmp2:= SUB_DSZ32(tmp2, 0x00000004) 

U344c: tmp15:= unk_200() 
U344d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U344e) SEQW GOTO U345c
U344e: tmp15:= RDSEGFLD(TSS, FLGS) 

U3450: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000003, U2711) !m0,m1 
U3451: tmp12:= unk_da0() 
U3452: tmp9:= SHR_DSZ32(tmp1, 0x00000003) 

U3454: tmp15:= AND_DSZ32(0x00000007, tmp1) 
U3455: tmp10:= SHR_DSZ32(0x0000000f, tmp2) 
U3456: tmp10:= SHL_DSZ32(tmp10, tmp15) 

U3458: tmp15:= unk_da0(tmp12, tmp9) 
U3459: tmp15:= AND_DSZ32(tmp10, tmp15) 
U345a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2711) 

U345c: LFNCEWAIT-> tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 
U345d: tmp15:= SUB_DSZN(tmp15, IMM_MACRO_ALIAS_RIP) !m0,m1 
U345e: WRITEURAM(tmp15, 0x006e, 64) !m2 

U3460: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3468
U3461: tmp4:= ZEROEXT_DSZ32(0x00004e82) 
U3462: tmp8:= READURAM( , 0x0015, 64) 

U3464: tmp9:= READURAM( , 0x0016, 64) 
U3465: tmp12:= READURAM( , 0x0043, 64) 
U3466: SAVEUIP_REGOVR(0x01, U3468, 0x0000) !m0 SEQW GOTO U072d

U3468: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U3471
U3469: tmp12:= READURAM( , 0x0011, 64) 
U346a: tmp4:= ZEROEXT_DSZ32(0x00001f91) 

U346c: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000018, mode=0x01, tmp12) 
U346d: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000020, mode=0x01, tmp12) 
U346e: tmp12:= READURAM( , 0x004c, 64) 

U3470: SYNCWTMRK-> SAVEUIP_REGOVR(0x01, U3471, 0x0001) !m0 SEQW GOTO U072d
U3471: WRITEURAM(rdi, 0x000b, 64) !m2 
U3472: WRITEURAM(rsi, 0x0009, 64) !m2 

U3474: WRITEURAM(rcx, 0x000a, 64) !m2 
U3475: NOP 
U3476: UJMP( , tmp0) 

U3478: tmp2:= READURAM( , 0x0048, 64) 
U3479: tmp2:= SUB_DSZ64(0x00020101, tmp2) 
U347a: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U688d) 

U347c: LFNCEWAIT->MSSTOP-> unk_256() !m1 SEQW GOTO U3dfa
U347d: tmp15:= NOTAND_DSZ64(0x00000040, tmp15) 
U347e: MOVETOCREG_DSZ64(tmp15, 0x223, 32) !m1 

U3480: MOVETOCREG_DSZ64( , 0x00000000, 0x28c, 32) !m1 
U3481: tmp15:= ZEROEXT_DSZ32(0xffffc000) 
U3482: MOVETOCREG_DSZ64(tmp15, 0x29e, 32) !m1 

U3484: tmp0:= ZEROEXT_DSZ32(0x00000007) 
U3485: tmp1:= READURAM( , 0x0053, 64) 
U3486: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U00a9) 

U3488: LFNCEMARK-> tmp15:= READURAM( , 0x001f, 64) 
U3489: tmp15:= BTR_DSZ64(tmp15, 0x00000009) 
U348a: WRITEURAM(tmp15, 0x001f, 64) !m2 

U348c: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00000200) 
U348d: MOVETOCREG_DSZ64(tmp15, 0x007) !m2 
U348e: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 

U3490: tmp15:= AND_DSZ32(0x0000003f, tmp15) 
U3491: LFNCEWAIT-> tmp15:= SUB_DSZ32(0x00000002, tmp15) 
U3492: tmp11:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00000001) 

U3494: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U3495) SEQW SAVEUIP1 U3495SEQW GOTO U18d5
U3495: tmp15:= MOVEFROMCREG_DSZ64( , 0x693) 
U3496: tmp15:= AND_DSZ32(0x0000000f, tmp15) 

U3498: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U33be) 
U3499: tmp15:= MOVEFROMCREG_DSZ64( , 0x387, 32) !m1 
U349a: tmp15:= AND_DSZ32(0x00000010, tmp15) 

U349c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U33be) 
U349d: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U349e: BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x0000000a, U33c0) !m0,m1,m2 

U34a0: tmp15:= MOVEFROMCREG_DSZ64( , 0x004) 
U34a1: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000007, U33c0) !m0,m1,m2 
U34a2: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x00b) !m0,m2 

U34a4: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 
U34a5: tmp9:= AND_DSZ32(0x00000200, tmp6) 
U34a6: tmp9:= SHL_DSZ32(tmp9, 0x00000007) SEQW SAVEUIP1 U34a8SEQW GOTO U18d0

U34a8: SAVEUIP_REGOVR(0x01, U34a9, 0x0001) !m0 SEQW GOTO U02ba
U34a9: tmp1:= BTS_DSZ32(0x00000000, 0x0000001f) 
U34aa: PORTOUT_DSZ32_ASZ16_SC1(0x003c,  , tmp1) !m2 

U34ac: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
U34ad: tmp5:= ZEROEXT_DSZ32(0x000034b0) 
U34ae: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4798

U34b0: MOVETOCREG_DSZ64(tmp11, 0x6c5) 
U34b1: tmp0:= READURAM( , 0x001f, 64) 
U34b2: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000002f, U2e51) !m0,m1 

U34b4: MOVETOCREG_DSZ64( , 0x00000000, 0x065) !m2 
U34b5: tmp1:= READURAM( , 0x0023, 64) 
U34b6: tmp1:= BT_DSZ64(tmp1, 0x00000009) 

U34b8: tmp1:= SELECTCC_DSZ64_CONDNB(tmp1, 0x00000200) 
U34b9: MOVETOCREG_DSZ64(tmp1, 0x29f, 32) !m1,m2 
U34ba: tmp15:= MOVEFROMCREG_DSZ64( , 0x7e1) 

U34bc: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U5975) !m2 
U34bd: tmp15:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U34be: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000009, U34c0) !m1,m2 SEQW GOTO U759a

U34c0: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp15, 0x00000005, 0x2df) !m1,m2 
U34c1: tmp0:= ZEROEXT_DSZ16(0x00007599) 
U34c2: NOP 

U34c4: LFNCEWAIT-> tmp0:= CONCAT_DSZ16(0x00000086, tmp0) SEQW GOTO U3a41
U34c5: tmp3:= READURAM( , 0x001f, 64) 
U34c6: tmp3:= NOTAND_DSZ32(0x00000007, tmp3) 

U34c8: WRITEURAM(tmp3, 0x001f, 32) !m2 
U34c9: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp5, 0x00b) 
U34ca: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U34d1

U34cc: WRITEURAM(tmp1, 0x0046, 64) 
U34cd: MOVETOCREG_BTS_DSZ64( , 0x00000015, 0x072) 
U34ce: tmp6:= CONCAT_DSZ32(tmp9, tmp12) 

U34d0: WRITEURAM(tmp6, 0x0009, 64) 
U34d1: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U34d2: MOVETOCREG_OR_DSZ64( , 0x0000000c, 0x005) 

U34d4: tmp2:= SHL_DSZ32(tmp2, 0x00000002) 
U34d5: tmp6:= ZEROEXT_DSZ32(0x00050300) 
U34d6: LFNCEWAIT-> tmp0:= LDPPHYS_DSZ32_ASZ32_SC1(tmp2, mode=0x0e) 

U34d8: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U34de
U34d9: tmp2:= MOVEFROMCREG_DSZ64( , 0x01d) 
U34da: tmp2:= AND_DSZ32(0x00000008, tmp2) 

U34dc: tmp2:= SHL_DSZ32(tmp2, 0x00000005) 
U34dd: MOVETOCREG_DSZ64(tmp2, 0x070) 
U34de: tmp11:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 

U34e0: tmp11:= ADD_DSZN(tmp11, tmp4) !m1 
U34e1: tmp3:= MOVEFROMCREG_DSZ64( , 0x000) !m2 
U34e2: tmp3:= BT_DSZ32(tmp3, 0x00000018) 

U34e4: tmp2:= READURAM( , 0x004a, 64) 
U34e5: tmp2:= MOVEMERGEFLGS_DSZ64(tmp2, tmp3) 
U34e6: tmp11:= CMOVCC_DSZ64_CONDB(tmp2, tmp11) 

U34e8: MOVETOCREG_DSZ64(tmp11, 0x71a) 
U34e9: tmp2:= SHR_DSZ32(tmp0, 0x00000010) 
U34ea: tmp3:= ZEROEXT_DSZ16(tmp0) 

U34ec: tmp0:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U34ed: tmp7:= SHR_DSZ64(tmp0, 0x0000002f) 
U34ee: tmp0:= SHL_DSZ32(tmp0, 0x00000008) 

U34f0: tmp0:= AND_DSZ32(tmp7, tmp0) 
U34f1: tmp0:= AND_DSZ32(0x00000008, tmp0) 
U34f2: tmp6:= NOTAND_DSZ32(tmp0, tmp6) 

U34f4: tmp0:= NOTAND_DSZ32(tmp6, tmp10) 
U34f5: unk_13f(tmp0) !m2 
U34f6: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x7fe) 

U34f8: LFNCEMARK-> unk_e7b( , tmp2) 
U34f9: NOP SEQW SAVEUIP1 U34faSEQW GOTO U2d30
U34fa: unk_fe3(tmp3) 

U34fc: tmp0:= RDSEGFLD(CS, SEL) 
U34fd: STAD_DSZ16_ASZ32_SC1(rsp, SS,  , 0xfffffffffffffffe, mode=0x0a, tmp9) 
U34fe: STAD_DSZ16_ASZ32_SC1(rsp, SS,  , 0xfffffffffffffffc, mode=0x0a, tmp0) 

U3500: STAD_DSZ16_ASZ32_SC1(rsp, SS,  , 0xfffffffffffffffa, mode=0x0a, tmp4) 
U3501: rsp:= ADD_DSZN(0xfffffffffffffffa, rsp) !m1 
U3502: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U3506

U3504: tmp12:= READURAM( , 0x0011, 64) 
U3505: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004a8, mode=0x01, tmp12, 0x00000000) 
U3506: tmp0:= READURAM( , 0x0070, 64) 

U3508: tmp0:= BTR_DSZ64(tmp0, 0x0000002e) 
U3509: WRITEURAM(tmp0, 0x0170, 64) !m2 
U350a: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x008) !m2 

U350c: LFNCEWTMRK-> FETCHFROMEIP1_ASZ32( , tmp3) 
U350d: NOP 
U350e: NOP 

U3510: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
U3511: AETTRACE( , tmp11, 0x0c) 
U3512: tmp0:= RDSEGFLD(UNK_SEG_09, BASE) 

U3514: LFNCEWAIT-> WRSEGFLD(tmp0, CS, BASE) 
U3515: tmp0:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U3516: WRSEGFLD(tmp0, CS, SEL+FLGS+LIM) SEQW GOTO U3df8

U3518: tmp8:= ZEROEXT_DSZ32(0x80000301) 
U3519: tmp5:= ZEROEXT_DSZ32(0x0000351c) 
U351a: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4799

U351c: tmp14:= SAVEUIP(0x01, U5a94) !m0 SEQW GOTO U1dda
U351d: LFNCEMARK-> tmm7:= unk_698( , xmm0) 
U351e: tmp0:= MOVEFROMCREG_DSZ64( , 0x01b) 

U3520: tmp6:= SHR_DSZ64(tmp0, 0x00000016) 
U3521: tmp11:= SHR_DSZ32(tmp4, 0x00000012) 
U3522: MOVETOCREG_DSZ64( , 0x00000000, 0x48f) !m2 

U3524: tmp6:= AND_DSZ32(0x00001000, tmp6) 
U3525: tmp7:= AND_DSZ32(0x00002000, tmp5) 
U3526: tmp12:= AND_DSZ32(0x00000007, tmp11) 

U3528: tmp12:= SUB_DSZ32(0x00000003, tmp12) 
U3529: tmp12:= MOVEMERGEFLGS_DSZ32(0x0000000d, tmp12) 
U352a: tmp12:= CMOVCC_DSZ32_CONDNL(tmp12, 0x00000008) 

U352c: tmp12:= SHL_DSZ64(tmp12, 0x0000000b) 
U352d: tmp11:= OR_DSZ32(tmp6, tmp11) 
U352e: tmp8:= ZEROEXT_DSZ32(0x00000005) 

U3530: tmp11:= OR_DSZ32(tmp7, tmp11) 
U3531: LFNCEWAIT-> tmm5:= unk_704(tmm0) 
U3532: tmm2:= unk_704(tmm3) 

U3534: tmm5:= unk_694(tmm5, tmm2) 
U3535: tmp15:= MOVEFROMCREG_DSZ64( , 0x480) 
U3536: tmp3:= PINTMOVDTMM2I_DSZ32(tmm5) 

U3538: tmp9:= ZEROEXT_DSZ64() 
U3539: tmp6:= AND_DSZ32(0x00000003, tmp3) 
U353a: tmp6:= SHL_DSZ64(tmp6, 0x00000023) 

U353c: tmp7:= BT_DSZ32(tmp3, 0x00000007) 
U353d: tmp5:= NOTAND_DSZ32(0x00002000, tmp5) 
U353e: tmp0:= MOVEMERGEFLGS_DSZ64(tmp0, tmp7) 

U3540: tmp7:= CMOVCC_DSZ32_CONDNB(tmp0, tmp5) 
U3541: tmp7:= NOTAND_DSZ64(0x00007800, tmp7) 
U3542: tmp7:= OR_DSZ64(tmp7, tmp12) 

U3544: MOVETOCREG_OR_DSZ64(tmp7, 0x752, tmp6) 
U3545: MOVETOCREG_AND_DSZ64(tmp3, 0x0000000c, 0x6c5) 
U3546: tmm5:= unk_620(tmm2) 

U3548: tmp5:= PINTMOVDTMM2I_DSZ32(tmm5) 
U3549: SYNCMARK-> UFLOWCTRL( , tmp5, URET0) 
U354a: tmp11:= AND_DSZ32(0x00000020, tmp4) 

U354c: tmp6:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U354d: tmp7:= AND_DSZ32(0x00000007, tmp4) 
U354e: tmp4:= AND_DSZ32(0x0000003f, tmp4) 

U3550: tmp10:= NOTAND_DSZ32(0x0000003f, tmp15) 
U3551: MOVETOCREG_BTR_DSZ64(tmp6, 0x00000010, 0x7fe) 
U3552: SYNCWAIT-> tmp10:= OR_DSZ32(tmp7, tmp10) SEQW URET0

U3554: NOP 
U3555: WRITEURAM(tmp0, 0x0000, 64) !m2 
U3556: tmp0:= READAFLAGS(tmp0) 

U3558: tmp0:= CONCAT_DSZ16(0x00000011, tmp0) SEQW GOTO U52cd
FUN_ucode_0003559:
U3559: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U355a: LFNCEWAIT-> tmp9:= READURAM( , 0x0057, 64) 

U355c: tmp5:= LDPPHYSTICKLE_DSZN_ASZ64_SC1(0x000000d8, tmp9) !m1 
U355d: LFNCEMARK-> tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b8, tmp9) 
U355e: tmp4:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U3560: SYNCMARK-> FETCHFROMEIP1_ASZ64( , tmp5) !m1 
U3561: tmp15:= READURAM( , 0x0010, 64) 
U3562: tmp6:= NOTAND_DSZ64(tmp15, tmp6) 

U3564: MOVETOCREG_DSZ64(tmp5, 0x067) 
U3565: AETTRACE( , tmp5, 0x0d) !m1 
U3566: tmp7:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U357a

U3568: tmp1:= READURAM( , 0x004c, 64) 
U3569: tmp2:= AND_DSZ32(0x08000000, tmp1) 
U356a: tmp7:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000008) 

U356c: tmp15:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000100) 
U356d: MOVETOCREG_DSZ64(tmp15, 0x070) 
U356e: tmp2:= AND_DSZ32(0x00400000, tmp1) 

U3570: tmp2:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000004) 
U3571: tmp7:= OR_DSZ32(tmp2, tmp7) 
U3572: tmp2:= AND_DSZ32(0x00000004, tmp1) 

U3574: tmp2:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00000002) 
U3575: tmp7:= OR_DSZ32(tmp2, tmp7) 
U3576: tmp2:= BT_DSZ64(tmp1, 0x00000037) 

U3578: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000001) 
U3579: tmp7:= OR_DSZ32(tmp2, tmp7) 
U357a: WRITEURAM( , 0x00000000, 0x0043, 64) 

U357c: WRITEURAM(tmp9, 0x0056, 64) 
U357d: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x2f2) !m1 
U357e: MOVETOCREG_OR_DSZ64( , 0x00000004, 0x29e) !m1 

U3580: WRITEURAM(tmp6, 0x0057, 64) 
U3581: tmp2:= READURAM( , 0x0070, 64) 
U3582: tmp15:= AND_DSZ32(0x00004000, tmp0) 

U3584: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000200) 
U3585: tmp1:= AND_DSZ32(0x00008000, tmp0) 
U3586: tmp1:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000400) 

U3588: tmp2:= OR_DSZ32(0x00001004, tmp2) 
U3589: tmp15:= OR_DSZ32(tmp1, tmp15) 
U358a: tmp2:= MOVETOCREG_OR_DSZ64(tmp2, 0x2c4, tmp15) !m1 

U358c: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U3594
U358d: SYNCWAIT-> tmp1:= READURAM( , 0x0011, 64) 
U358e: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 

U3590: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004a8, mode=0x01, tmp1, 0x00000000) 
U3591: NOP 
U3592: NOP 

U3594: SYNCMARK-> MOVETOCREG_DSZ64(tmp7, 0x01d) 
U3595: WRITEURAM(tmp2, 0x0070, 32) 
U3596: tmp2:= READURAM( , 0x001f, 64) 

U3598: tmp1:= AND_DSZ32(0x00040000, tmp0) 
U3599: tmp1:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000100) 
U359a: tmp2:= AND_DSZ32(0x00000100, tmp2) 

U359c: tmp2:= OR_DSZ32(tmp1, tmp2) 
U359d: WRITEURAM(tmp2, 0x001f, 64) 
U359e: tmp2:= CONCAT_DSZ32(0x7ffffc00) 

U35a0: SAVEUIP_REGOVR(0x01, U35a1, 0x0f21) !m0 SEQW GOTO U08a4
U35a1: NOP 
U35a2: NOP 

U35a4: SYNCWAIT-> BTUJB_DIRECT_NOTTAKEN(tmp4, 0x0000003a, U1826) !m0,m2 SEQW GOTO U008e
exit_probe_mode:
U35a5: tmp0:= ZEROEXT_DSZ32(0x00000009) 
U35a6: tmp0:= BTS_DSZ32(tmp0, 0x00000010) 

U35a8: tmp1:= ZEROEXT_DSZ32() 
U35a9: tmp2:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
U35aa: SYNCFULL-> MOVETOCREG_BTR_DSZ64(tmp2, 0x00000012, 0x2cd) !m0,m1 SEQW SAVEUIP1 U35acSEQW GOTO U57f4

U35ac: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U35ad: MOVETOCREG_DSZ64( , 0x00000000, 0x7e1) 
U35ae: tmp3:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U35b0: MOVETOCREG_BTS_DSZ64(tmp3, 0x00000004, 0x6c3) 
U35b1: tmp3:= BTS_DSZ32(0x00000000, 0x0000001b) 
U35b2: PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , tmp3) !m2 

U35b4: MOVETOCREG_DSZ64(0x00000000, 0x000) 
U35b5: SYNCFULL-> NOP 
U35b6: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U35c6

U35b8: TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW GOTO U1dcd
U35b9: tmp3:= READURAM( , 0x005c, 64) 
U35ba: tmp2:= SHR_DSZ32(tmp3, 0x0000001b) 

U35bc: LFNCEMARK-> tmp2:= MOVETOCREG_AND_DSZ64(tmp2, 0x00000003, 0x7c6) !m0 
U35bd: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000002, U35c1) !m0,m1,m2 
U35be: tmp2:= READURAM( , 0x0011, 64) 

U35c0: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp2) 
U35c1: tmp3:= AND_DSZ32(0x00000014, tmp3) 
U35c2: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U35c6) 

U35c4: SAVEUIP( , 0x00, U5dca) 
U35c5: SAVEUIP_REGOVR(0x01, U35c6, 0x0012) !m0 SEQW GOTO U5955
U35c6: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 

U35c8: tmp7:= READURAM( , 0x0026, 64) 
U35c9: MOVETOCREG_SHR_DSZ64(tmp7, 0x00000008, 0x01d) 
U35ca: tmp1:= MOVEFROMCREG_DSZ64( , 0x51e) 

U35cc: tmp0:= SHR_DSZ32(tmp7, 0x0000000f) 
U35cd: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U35ce: MOVETOCREG_OR_DSZ64(tmp1, 0x51e, tmp0) 

U35d0: LFNCEWAIT-> tmp1:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U35d1: tmp1:= AND_DSZ32(0x00000024, tmp1) 
U35d2: tmp0:= SHR_DSZ32(tmp7, 0x00000010) 

U35d4: tmp0:= NOTAND_DSZ32(0x00000024, tmp0) 
U35d5: MOVETOCREG_OR_DSZ64(tmp0, 0x6c3, tmp1) 
U35d6: tmp1:= ZEROEXT_DSZ32(0x00000002) 

U35d8: MOVETOCREG_DSZ64(tmp1, 0x2f2, 32) !m1 
U35d9: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x6c5) 
U35da: tmp0:= READURAM( , 0x006d, 64) 

U35dc: MOVETOCREG_DSZ64(tmp0, 0x7f1) 
U35dd: tmp0:= READURAM( , 0x006f, 64) 
U35de: MOVETOCREG_DSZ64(tmp0, 0x20f, 32) !m1 

U35e0: rax:= READURAM( , 0x0068, 64) 
U35e1: rdx:= READURAM( , 0x0063, 64) 
U35e2: rcx:= MOVEFROMCREG_DSZ64( , 0x2c0, 32) !m1 

U35e4: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U35e5: tmp0:= AND_DSZ64(0xffffffffffffff01, tmp2) 
U35e6: MOVETOCREG_DSZ64(tmp0, 0x2df, 32) !m1 

U35e8: tmp0:= READURAM( , 0x0038, 64) 
U35e9: MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1 
U35ea: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000018, 0x2da) !m1 

U35ec: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x008) 
U35ed: WRITEURAM(tmp0, 0x0070, 64) 
U35ee: tmp1:= READURAM( , 0x006d, 64) 

U35f0: MOVETOCREG_SHR_DSZ64(tmp1, 0x00000020, 0x065) 
U35f1: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000008, 0x0b5) 
U35f2: tmp6:= SAVEUIP_REGOVR( , 0x01, U35f4, 0x6210) !m0 SEQW GOTO U5e06

U35f4: tmp1:= READURAM( , 0x0067, 64) 
U35f5: tmp0:= READURAM( , 0x0050, 64) 
U35f6: tmp0:= SHR_DSZ32(tmp0, 0x00000010) 

U35f8: tmp0:= SUB_DSZ32(0x00000083, tmp0) 
U35f9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U35fc) 
U35fa: AETTRACE( , tmp1, 0x0e) 

U35fc: SYNCFULL-> MOVETOCREG_DSZ64(tmp1, 0x01a) !m2 
U35fd: tmp0:= READURAM( , 0x002a, 64) 
U35fe: MOVETOCREG_DSZ64(tmp0, 0x070) !m2 

U3600: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x01c) !m2 
U3601: NOP SEQW SAVEUIP1 U3602SEQW GOTO U1432
U3602: tmp2:= READURAM( , 0x0050, 64) 

U3604: WRITEURAM(tmp2, 0x0007, 32) !m2 
U3605: tmp6:= READURAM( , 0x0026, 64) 
U3606: tmp6:= SHR_DSZ64(tmp6, 0x00000020) 

U3608: tmp2:= BT_DSZ32(tmp2, 0x00000017) 
U3609: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp2, tmp2) 
U360a: tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 

U360c: LFNCEMARK-> WRITEURAM( , 0x00000000, 0x0007, 32) !m2 
U360d: NOP 
U360e: NOP 

U3610: LFNCEWAIT->MSLOOP-> FETCHFROMEIP0_ASZ64( , tmp0) !m1 SEQW GOTO U3dfa
U3611: tmp15:= MOVEFROMCREG_DSZ64( , 0x21d, 32) !m1 
U3612: tmp15:= BT_DSZ32(tmp15, 0x00000008) 

U3614: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00003b00) 
U3615: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U36b6
U3616: tmp2:= MOVEFROMCREG_DSZ64( , 0x20f, 32) !m1 

U3618: LFNCEMARK-> WRITEURAM(tmp2, 0x0009, 64) 
U3619: tmp12:= ADD_DSZ32(0x00000000, tmp15) 
U361a: tmp2:= MOVEFROMCREG_DSZ64( , 0x411) 

U361c: tmp3:= MOVEFROMCREG_DSZ64( , 0x064) 
U361d: tmp4:= MOVEFROMCREG_DSZ64( , 0x106) 
U361e: tmp5:= MOVEFROMCREG_DSZ64( , 0x488) 

U3620: tmp6:= MOVEFROMCREG_DSZ64( , 0x74d) 
U3621: tmp7:= MOVEFROMCREG_DSZ64( , 0x63c) 
U3622: tmp8:= MOVEFROMCREG_DSZ64( , 0x680) 

U3624: tmp9:= ZEROEXT_DSZ32() SEQW SAVEUIP0 U3625SEQW GOTO U612e
U3625: tmp2:= MOVEFROMCREG_DSZ64( , 0x609) 
U3626: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp2) 

U3628: tmp4:= MOVEFROMCREG_DSZ64( , 0x60a) 
U3629: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020,  , tmp4) 
U362a: tmp12:= ADD_DSZ32(0x00000040, tmp12) 

U362c: tmp4:= MOVEFROMCREG_DSZ64( , 0x693) 
U362d: tmp5:= MOVEFROMCREG_DSZ64( , 0x608) 
U362e: tmp6:= MOVEFROMCREG_DSZ64( , 0x610) 

U3630: tmp7:= ZEROEXT_DSZ32() 
U3631: tmp8:= MOVEFROMCREG_DSZ64( , 0x403) 
U3632: tmp9:= MOVEFROMCREG_DSZ64( , 0x703) SEQW SAVEUIP0 U3634SEQW GOTO U6132

U3634: tmp1:= NOTAND_DSZ32(0x00000011, tmp1) 
U3635: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x088) 
U3636: tmp2:= CONCAT_DSZ32(tmp2, tmp1) 

U3638: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp2) 
U3639: tmp6:= MOVEFROMCREG_DSZ64( , 0x06a) 
U363a: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020,  , tmp6) 

U363c: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040,  , 0x00000000) 
U363d: WRMSLOOPCTRFBR( , 0x00001827) 
U363e: tmp12:= ADD_DSZ32(0x00000180, tmp15) 

U3640: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U3641: tmp4:= MOVEFROMCREG_DSZ64( , tmp8) 
U3642: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp4) 

U3644: tmp9:= SHR_DSZ32(tmp8, 0x00000010) 
U3645: tmp6:= MOVEFROMCREG_DSZ64( , tmp9) 
U3646: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020,  , tmp6) 

U3648: tmp12:= ADD_DSZ32(0x00000040, tmp12) 
U3649: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3640
U364a: WRMSLOOPCTRFBR( , 0x00000015) 

U364c: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U364d: tmp4:= MOVEFROMCREG_DSZ64( , tmp8) 
U364e: tmp9:= SHR_DSZ32(tmp8, 0x00000010) 

U3650: tmp6:= MOVEFROMCREG_DSZ64( , tmp9) 
U3651: tmp6:= CONCAT_DSZ32(tmp6, tmp4) 
U3652: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp6) 

U3654: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U3655: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U364c
U3656: tmp3:= MOVEFROMCREG_DSZ64( , 0x7f0) 

U3658: tmp4:= MOVEFROMCREG_DSZ64( , 0x067) 
U3659: tmp5:= ZEROEXT_DSZ32(tmp10) SEQW SAVEUIP0 U365aSEQW GOTO U1f88
U365a: tmp12:= ADD_DSZ32(0x00000ec0, tmp15) 

U365c: LFNCEWAIT-> WRMSLOOPCTRFBR( , 0x0000008f) 
U365d: NOP 
U365e: NOP 

U3660: tmp4:= READURAM( , 0x0008, 64) !m0 
U3661: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp4) 
U3662: tmp12:= ADD_DSZ32(0x00000020, tmp12) 

U3664: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3660
U3665: WRMSLOOPCTRFBR( , 0x00000007) 
U3666: tmp12:= ADD_DSZ32(0x000020c0, tmp15) 

U3668: SIMDLSTADSTGBUF_DSZ64_ASZ32_SC1(tmp12,  , mm0) 
U3669: SIMDHSTADSTGBUF_DSZ64_ASZ32_SC1(tmp12, 0x00000020,  , mm0) 
U366a: tmp12:= ADD_DSZ32(0x00000040, tmp12) 

U366c: tmm6:= FMOV( , 0x00000011) !m0 
U366d: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3668
U366e: WRMSLOOPCTRFBR( , 0x0000000f) 

U3670: SIMDLSTADSTGBUF_DSZ64_ASZ32_SC1(tmp12,  , xmm7) 
U3671: SIMDHSTADSTGBUF_DSZ64_ASZ32_SC1(tmp12, 0x00000020,  , xmm7) 
U3672: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000040,  , rdi) 

U3674: tmp12:= ADD_DSZ32(0x00000060, tmp12) 
U3675: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3670
U3676: tmp3:= RDSEGFLD(SS_USERM, BASE) 

U3678: tmp4:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 
U3679: tmp5:= RDSEGFLD(UNK_SEG_09, BASE) 
U367a: tmp6:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) SEQW SAVEUIP0 U367cSEQW GOTO U0bd9

U367c: tmp3:= RDSEGFLD(LDT, BASE) 
U367d: tmp4:= RDSEGFLD(LDT, SEL+FLGS+LIM) 
U367e: tmp5:= RDSEGFLD(GDT, BASE) 

U3680: tmp6:= RDSEGFLD(GDT, SEL+FLGS+LIM) SEQW SAVEUIP0 U3681SEQW GOTO U0bd9
U3681: tmp3:= RDSEGFLD(TSS, BASE) 
U3682: tmp4:= RDSEGFLD(TSS, SEL+FLGS+LIM) 

U3684: tmp5:= RDSEGFLD(IDT, BASE) 
U3685: tmp6:= RDSEGFLD(IDT, SEL+FLGS+LIM) SEQW SAVEUIP0 U3686SEQW GOTO U0bd9
U3686: tmp3:= RDSEGFLD(GS, BASE) 

U3688: tmp4:= RDSEGFLD(GS, SEL+FLGS+LIM) 
U3689: tmp5:= RDSEGFLD(FS, BASE) 
U368a: tmp6:= RDSEGFLD(FS, SEL+FLGS+LIM) SEQW SAVEUIP0 U368cSEQW GOTO U0bd9

U368c: tmp3:= RDSEGFLD(DS, BASE) 
U368d: tmp4:= RDSEGFLD(DS, SEL+FLGS+LIM) 
U368e: tmp5:= RDSEGFLD(ES, BASE) 

U3690: tmp6:= RDSEGFLD(ES, SEL+FLGS+LIM) SEQW SAVEUIP0 U3691SEQW GOTO U0bd9
U3691: WRMSLOOPCTRFBR( , 0x00000003) 
U3692: NOP 

U3694: tmp0:= unk_14a(rdi) 
U3695: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp0) 
U3696: tmp0:= unk_14a(tmp7) 

U3698: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020,  , tmp0) 
U3699: tmp12:= ADD_DSZ32(0x00000040, tmp12) 
U369a: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U3694

U369c: tmp4:= RDSEGFLD(UNK_SEG_10, BASE) 
U369d: tmp5:= RDSEGFLD(UNK_SEG_11, BASE) SEQW SAVEUIP0 U369eSEQW GOTO U1f8a
U369e: tmp12:= ADD_DSZ32(0x00002c80, tmp15) 

U36a0: WRMSLOOPCTRFBR( , 0x00002002) SEQW SAVEUIP0 U36a1SEQW GOTO U5779
U36a1: NOP 
U36a2: NOP 

U36a4: WRMSLOOPCTRFBR( , 0x00000807) SEQW SAVEUIP0 U36a5SEQW GOTO U5769
U36a5: tmp2:= READURAM( , 0x005c, 64) 
U36a6: NOP 

U36a8: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000019, U36a9) !m1,m2 SEQW GOTO U36b6
U36a9: WRMSLOOPCTRFBR( , 0x0000003f) 
U36aa: tmp2:= ZEROEXT_DSZ32(0x00000020) 

U36ac: tmp12:= ADD_DSZ32(0x000032c0, tmp15) 
U36ad: tmp8:= MOVEFROMCREG_DSZ64( , tmp2) 
U36ae: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp8) 

U36b0: tmp2:= ADD_DSZ32(0x00000001, tmp2) 
U36b1: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U36b2: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U36ad

U36b4: tmp8:= MOVEFROMCREG_DSZ64( , 0x009) 
U36b5: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp8) 
U36b6: NOP SEQW GOTO U77dc

U36b8: tmp12:= OR_DSZ16(0x00000002, tmp12) 
U36b9: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp6, U36be) 
U36ba: tmp4:= MOVEFROMCREG_DSZ64( , 0x486) 

U36bc: tmp5:= AND_DSZ16(tmp4, 0x00000002) 
U36bd: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp5, U1948) 
U36be: tmm6:= unk_620(tmm5) 

U36c0: tmp8:= PINTMOVDTMM2I_DSZ32(tmm6) 
U36c1: tmp4:= XOR_DSZ16(0x0000411e, tmp8) 
U36c2: tmp8:= MOVEMERGEFLGS_DSZ32(tmp8, tmp4) 

U36c4: tmp1:= BT_DSZ16(tmp6, 0x0000000a) 
U36c5: tmp2:= MOVEMERGEFLGS_DSZ32(0x0000ff81, tmp1) 
U36c6: tmp4:= CMOVCC_DSZ32_CONDB(tmp2, 0x0000fc01) 

U36c8: tmp5:= BT_DSZ16(tmp6, 0x0000000c) 
U36c9: tmp1:= MOVEMERGEFLGS_DSZ32(0x0000c001, tmp5) 
U36ca: tmp2:= CMOVCC_DSZ32_CONDB(tmp1, tmp4) 

U36cc: tmp3:= MOVEMERGEFLGS_DSZ64(tmp4, tmp5) 
U36cd: tmp4:= CMOVCC_DSZ32_CONDB(tmp3, 0x0000c001) 
U36ce: tmp5:= BT_DSZ32(tmp9, 0x00000006) 

U36d0: tmp2:= MOVEMERGEFLGS_DSZ64(tmp2, tmp5) 
U36d1: tmp1:= CMOVCC_DSZ32_CONDNB(tmp2, 0x0000c001) 
U36d2: tmp4:= MOVEMERGEFLGS_DSZ64(tmp4, tmp5) 

U36d4: tmp2:= CMOVCC_DSZ32_CONDNB(tmp4, 0x0000c001) 
U36d5: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x48c) 
U36d6: tmp11:= AND_DSZ8(0x00000020, tmp10) 

U36d8: tmp4:= OR_DSZ8(tmp11, tmp12) 
U36d9: tmp4:= AND_DSZ16(0x000000ff, tmp4) 
U36da: tmp10:= OR_DSZ16(tmp4, tmp10) 

U36dc: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x48c) !m2 
U36dd: tmm0:= unk_624(tmm2, tmm2) 
U36de: tmp3:= PINTMOVDTMM2I_DSZ32(tmm0) 

U36e0: tmp3:= AND_DSZ32(0x00000020, tmp3) 
U36e1: tmp3:= CMOVCC_DSZ16_CONDZ(tmp3, 0x00000001) 
U36e2: tmm4:= unk_7c2(mm1, tmm2) 

U36e4: tmm4:= unk_69d( , tmm4) 
U36e5: tmm2:= unk_743(mm3, tmm2) 
U36e6: tmm2:= unk_483(tmm2, tmm4) 

U36e8: tmm1:= unk_624(tmm3, tmm3) 
U36e9: tmp1:= PINTMOVDTMM2I_DSZ32(tmm1) 
U36ea: tmp1:= AND_DSZ32(0x00000020, tmp1) 

U36ec: tmp1:= CMOVCC_DSZ16_CONDZ(tmp1, 0x00000001) 
U36ed: tmm4:= unk_7c2(mm2, tmm3) 
U36ee: tmm4:= unk_69d( , tmm4) 

U36f0: tmm3:= unk_743(mm1, tmm3) 
U36f1: tmm3:= unk_483(tmm3, tmm4) 
U36f2: tmm0:= FMOV( , tmm2) 

U36f4: tmm1:= FMOV( , tmm3) 
U36f5: tmp2:= AND_DSZ32(0x00000010, tmp7) 
U36f6: LFNCEWAIT-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U0332) 

U36f8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, tmp8) 
U36f9: tmp3:= AND_DSZ32(0x00000038, tmp9) 
U36fa: tmp3:= XOR_DSZ32(0x00000008, tmp3) 

U36fc: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U5944) 
U36fd: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000004, U2475) !m1 
U36fe: tmm4:= unk_60f(tmm3, tmm2) !m2 SEQW GOTO U2476

U3700: SAVEUIP( , 0x00, U2e2a) 
U3701: SYNCWAIT-> TESTUSTATE( , UCODE, !0x00e4) !m0 ? SEQW URET1
U3702: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U5eb6

U3704: tmp1:= OR_DSZ32(0x00008000, tmp8) 
U3705: tmp1:= MSR2CR( , tmp1) 
U3706: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U3709

U3708: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp3, U2711, tmp1) !m1 
U3709: TESTUSTATE( , UCODE, !0x0040) !m0 ? SEQW GOTO U3710
U370a: tmp1:= MOVEFROMCREG_DSZ64( , 0x7e1) 

U370c: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U1cbe) !m2 
U370d: TESTUSTATE( , UCODE, !0x0080) !m0 ? SEQW GOTO U2711
U370e: NOP 

U3710: SYNCWAIT-> TESTUSTATE( , UCODE, !0x0080) !m0 ? SEQW URET1
U3711: tmp1:= NOTAND_DSZ32(0x00000001, tmp8) 
U3712: tmp1:= SELECTCC_DSZ32_CONDB(tmp8, tmp1) 

U3714: tmp1:= SUB_DSZ32(0x00000300, tmp1) SEQW GOTO U0101
U3715: NOP 
U3716: NOP 

U3718: SYNCWAIT-> tmp5:= TESTUSTATE( , UCODE, !0x0200) !m0 ? SEQW URET1
U3719: NOP SEQW GOTO U2e2a
FUN_ucode_000371a:
U371a: tmpv1:= ZEROEXT_DSZ32(0x00000502) 

U371c: tmpv1:= BTS_DSZ32(tmpv1, 0x00000010) SEQW GOTO U1958
U371d: NOP 
U371e: NOP 

U3720: tmp1:= READURAM( , 0x005c, 64) 
U3721: SYNCMARK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000001d, U4e75) SEQW GOTO U3700
U3722: CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000004, U5972) !m2 

U3724: CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000008, U5982) !m2 SEQW GOTO U17ec
U3725: NOP 
U3726: NOP 

U3728: tmp14:= MOVEFROMCREG_DSZ64( , 0x402) 
U3729: tmp14:= AND_DSZ32(0x000003b0, tmp14) 
U372a: tmp14:= SHR_DSZ32(tmp14, 0x00000004) 

U372c: tmp14:= MOVEINSERTFLGS_DSZ32(tmp14, tmp14) 
U372d: tmp10:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U372e: tmp1:= SHR_DSZ64(tmp3, 0x00000021) SEQW GOTO U4074

U3730: TESTUSTATE( , VMX, !0x0004) !m0,m2 ? SEQW GOTO U2efd
U3731: tmp1:= MOVEFROMCREG_DSZ64( , 0x7bb) 
U3732: SYNCWAIT-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 SEQW URET1

U3734: tmp1:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U5f16
U3735: NOP 
U3736: NOP 

U3738: TESTUSTATE( , VMX, 0x0004) !m2 ? SEQW GOTO U3731
U3739: LFNCEMARK-> tmp1:= MOVEFROMCREG_DSZ64( , 0x513) 
U373a: tmp2:= ZEROEXT_DSZ32(0x000000ff) 

U373c: tmp2:= CONCAT_DSZ32(tmp2, 0xfffffffffffff000) 
U373d: tmp1:= AND_DSZ64(tmp2, tmp1) 
U373e: tmp2:= SUB_DSZ32(0x00000800, tmp8) SEQW GOTO U5a06

U3740: tmp5:= MOVEFROMCREG_DSZ64( , tmp10) SEQW GOTO U3700
U3741: tmp5:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U3742: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp5, 0x00000010, 0x7fe) !m2 

U3744: LFNCEWAIT-> unk_256() !m1 SEQW UEND0
U3745: tmp0:= OR_DSZ64(rdx) 
U3746: SAVEUIP_REGOVR(0x01, U3748, 0x0000) !m0 SEQW GOTO U334d

U3748: tmp5:= MOVEFROMCREG_DSZ64( , tmp10) !m1 SEQW GOTO U3700
U3749: tmp0:= OR_DSZ16(0x00008080, tmp8) 
U374a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x48c) 

U374c: LFNCEWAIT-> mm0:= unk_53f(0x00000000) SEQW GOTO U17ec
U374d: NOP 
U374e: NOP 

U3750: SYNCWAIT-> tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 SEQW GOTO U3700
U3751: NOP 
U3752: tmp3:= AND_DSZ16(tmp2, 0x00000001) 

U3754: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1948) SEQW GOTO U1235
U3755: NOP 
U3756: NOP 

U3758: tmp5:= unk_f75( , tmp2) !m2 SEQW GOTO U3700
U3759: tmp0:= OR_DSZ16(0x00008080, tmp8) 
U375a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x48c) 

U375c: tmp8:= unk_6a0() 
U375d: LFNCEWAIT-> mm0:= unk_53f(0x00000000, tmm0) SEQW GOTO U17ec
U375e: NOP 

U3760: SYNCWAIT-> TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW URET1
U3761: rbx:= ZEROEXT_DSZ32(tmp12) SEQW GOTO U1cbe
U3762: rdx:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 

U3764: rbx:= ZEROEXT_DSZ32(tmp14) SEQW GOTO U17ec
U3765: NOP 
U3766: NOP 

U3768: SYNCWAIT-> TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW URET1
U3769: rbx:= PORTIN_DSZ32_ASZ16_SC1(0x0078) !m1,m2 SEQW GOTO U1cbe
U376a: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x005) !m0 

U376c: unk_eff() SEQW GOTO U23f9
U376d: NOP 
U376e: NOP 

U3770: tmp5:= READURAM( , tmp10) SEQW GOTO U3700
U3771: NOP 
U3772: SYNCFULL-> tmpv2:= MOVEFROMCREG_DSZ64( , 0x529) 

U3774: SAVEUIP( , 0x01, U39c6) !m0 SEQW GOTO U5fa8
U3775: NOP 
U3776: NOP 

U3778: SYNCWAIT-> tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 SEQW GOTO U3720
U3779: NOP 
U377a: tmp12:= unk_6a0() 

U377c: tmm0:= unk_495(tmm0, tmm4) SEQW GOTO U1236
U377d: NOP 
U377e: NOP 

U3780: SAVEUIP( , 0x00, U60d2) 
U3781: TESTUSTATE( , UCODE, 0x000c) ? SEQW GOTO U3701
U3782: SYNCWAIT-> tmp12:= ZEROEXT_DSZ32N(tmp12) !m1 

U3784: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U3786
U3785: tmp12:= PORTIN_DSZ32_ASZ16_SC1(0x0078) !m1,m2 
U3786: tmp1:= NOTAND_DSZ64(tmp12, tmp5) 

U3788: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U0009) SEQW GOTO U3701
U3789: NOP 
U378a: NOP 

U378c: NOP SEQW GOTO U20a8
U378d: NOP 
U378e: NOP 

U3790: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U3780
U3791: unk_dff() 
U3792: MOVETOCREG_OR_DSZ64( , 0x00000008, 0x63a) 

U3794: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x63e) !m0 
U3795: tmp1:= READURAM( , 0x005c, 64) 
U3796: tmp1:= BTS_DSZ64(tmp1, 0x0000002b) SEQW GOTO U033d

U3798: tmp1:= SUB_DSZ32(0x00000186, tmp8) 
U3799: tmp1:= SUB_DSZ32(0x00000003, tmp1) 
U379a: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp1, U2505) SEQW GOTO U2506

U379c: tmp1:= ZEROEXT_DSZ32(0x00000002) SEQW GOTO U5e98
U379d: NOP 
U379e: NOP 

U37a0: tmp1:= READURAM( , 0x005c, 64) 
U37a1: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000001f, U4e75) !m0 SEQW GOTO U3780
U37a2: MOVETOCREG_OR_DSZ64( , 0x0000000c, 0x005) 

U37a4: SAVEUIP( , 0x01, U3611) !m0 SEQW GOTO U0a95
U37a5: NOP 
U37a6: NOP 

U37a8: LFNCEMARK-> unk_25c(tmp5, tmp5) SEQW GOTO U3780
U37a9: NOP 
U37aa: tmp0:= READURAM( , 0x000e, 64) 

U37ac: tmp14:= ZEROEXT_DSZ32(0x00003bea) SEQW GOTO U0434
U37ad: NOP 
U37ae: NOP 

U37b0: tmp1:= MOVEFROMCREG_DSZ64( , 0x7bb) 
U37b1: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 SEQW GOTO U3780
U37b2: tmm7:= unk_5ba(tmm7, tmm7) 

U37b4: tmm4:= unk_5ba(tmm4, tmm4) SEQW GOTO U39a6
U37b5: NOP 
U37b6: NOP 

U37b8: tmp2:= SAVEUIP( , 0x00, U3780) 
U37b9: tmp1:= READURAM( , 0x0010, 64) 
U37ba: tmp1:= NOTAND_DSZ64(0xffffffff, tmp1) 

U37bc: tmp1:= NOTAND_DSZ64(tmp2, tmp1) 
U37bd: tmp1:= AND_DSZ64(tmp5, tmp1) 
U37be: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) SEQW URET0

U37c0: tmp1:= SHL_DSZ64(tmp5, 0x00000001) 
U37c1: tmp1:= SAR_DSZ64(tmp1, 0x00000001) 
U37c2: LFNCEMARK-> unk_25c(tmp1, tmp1) 

U37c4: tmp2:= SHR_DSZ64(tmp5, 0x00000020) 
U37c5: tmp1:= AND_DSZ32(0x80000000, tmp2) 
U37c6: tmp2:= AND_DSZ32(0x0000ffff, tmp2) SEQW GOTO U046c

U37c8: tmp1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U37c9: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000f, U60d2) !m0,m1 SEQW GOTO U3780
U37ca: tmm7:= unk_5ba(tmm7, tmm7) 

U37cc: tmm7:= unk_790(mm1, tmm7) SEQW GOTO U0566
U37cd: NOP 
U37ce: NOP 

U37d0: tmp2:= SAVEUIP( , 0x00, U3790) SEQW GOTO U37b9
U37d1: NOP 
U37d2: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp7, 0x7fe) 

U37d4: BTUJB_DIRECT_NOTTAKEN(tmp7, 0x00000011, U0e7d) SEQW GOTO U1eea
U37d5: NOP 
U37d6: NOP 

U37d8: tmp2:= ZEROEXT_DSZ32(0x0000000f) 
U37d9: tmp2:= SHL_DSZ64(tmp2, 0x00000020) 
U37da: SAVEUIP( , 0x00, U3790) SEQW GOTO U37b9

U37dc: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000015, 0x06d) SEQW GOTO U6931
U37dd: NOP 
U37de: NOP 

U37e0: tmp1:= READURAM( , 0x0023, 64) 
U37e1: tmp1:= AND_DSZ32(0x00004000, tmp1) 
U37e2: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U3780

U37e4: tmp1:= SELECTCC_DSZ64_CONDNZ(tmp1, tmp5) 
U37e5: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U2711) !m1 SEQW GOTO U3780
U37e6: NOP 

U37e8: SAVEUIP( , 0x00, U60d2) 
U37e9: tmp1:= NOTAND_DSZ64(0x40007fff, tmp5) 
U37ea: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U0009) 

U37ec: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x0008) !m2 
U37ed: tmp1:= AND_DSZ32(0x00000010, tmp1) 
U37ee: SYNCWAIT-> tmp5:= SELECTCC_DSZ32_CONDNZ(tmp1, tmp5) SEQW URET1

U37f0: tmp1:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U37f1: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 SEQW GOTO U3780
U37f2: tmp13:= MOVEFROMCREG_DSZ64( , 0x000) 

U37f4: tmp15:= SHR_DSZ32(tmp13, 0x00000006) 
U37f5: tmp13:= MOVEINSERTFLGS_DSZ64(tmp15, tmp13) 
U37f6: tmp15:= AND_DSZ32(0x0000003f, tmp13) 

U37f8: tmp15:= SHL_DSZ32(tmp15, 0x00000003) 
U37f9: tmp15:= ADD_DSZ32(0x00002300, tmp15) 
switchD:
U37fa: UJMP( , tmp15) 

U37fc: tmp8:= ZEROEXT_DSZ32(0x80000301) 
U37fd: tmp5:= ZEROEXT_DSZ32(0x00003800) 
U37fe: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4799

U3800: tmp14:= SAVEUIP(0x01, U067c) !m0 SEQW GOTO U1e7d
U3801: MOVETOCREG_DSZ64(tmp5, 0x6c5) 
U3802: LFNCEWAIT-> tmp6:= MOVEFROMCREG_DSZ64( , 0x000) 

U3804: tmp6:= NOTAND_DSZ32(0x00000fff, tmp6) 
U3805: tmp6:= OR_DSZ32(0x00000006, tmp6) 
U3806: tmp6:= MOVETOCREG_BTS_DSZ64(tmp6, 0x0000000a, 0x000) !m0 

U3808: tmp5:= RDSEGFLD(UNK_SEG_04, FLGS) 
U3809: tmp5:= BT_DSZ32(tmp5, 0x00000003) 
U380a: tmp8:= MOVEMERGEFLGS_DSZ32(0x00000067, tmp5) 

U380c: tmp8:= CMOVCC_DSZ32_CONDB(tmp8, 0x0000002b) 
U380d: LFNCEMARK-> unk_fe3(tmp8) 
U380e: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U2234

U3810: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U3814
U3811: tmp15:= READURAM( , 0x004c, 64) 
U3812: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000004, U2234) !m1 

U3814: tmp5:= RDSEGFLD(TSS, FLGS) 
U3815: tmp2:= NOTAND_DSZ32(tmp5, 0x00000008) 
U3816: tmp8:= SELECTCC_DSZ32_CONDNZ(tmp2, 0x00004000) 

U3818: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp8, 0x73c) 
U3819: tmp2:= SHL_DSZ64(tmp2, 0x00000021) 
U381a: NOP 

U381c: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, 0x752) 
U381d: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U381e: tmp6:= BTS_DSZ32(tmp6, 0x00000012) 

U3820: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp6, U3848) 
U3821: tmp2:= RDSEGFLD(TSS, SEL) 
U3822: LFNCEMARK-> MOVETOCREG_DSZ64(tmp6, 0x000) !m2 

U3824: tmp5:= BT_DSZ32(tmp5, 0x00000003) 
U3825: tmp7:= MOVEMERGEFLGS_DSZ32(0x00000020, tmp5) 
U3826: tmp7:= CMOVCC_DSZ32_CONDB(tmp7, 0x0000000e) 

U3828: LFNCEWAIT-> STADPPHYS_DSZN_ASZ32_SC1(tmp7, mode=0x0f,  , tmp4) !m1 
U3829: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_ALIAS_DATASIZE, mode=0x0f,  , tmp9) !m0,m1 
U382a: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_13, mode=0x0f,  , rax) !m0,m1 

U382c: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_1b, mode=0x0f,  , rcx) !m0,m1 
U382d: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_23, mode=0x0f,  , rdx) !m0,m1 
U382e: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_2b, mode=0x0f,  , rbx) !m0,m1 

U3830: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_33, mode=0x0f,  , rsp) !m0,m1 
U3831: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_3b, mode=0x0f,  , rbp) !m0,m1 
U3832: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_43, mode=0x0f,  , rsi) !m0,m1 

U3834: STADPPHYS_DSZN_ASZ32_SC1(tmp7, IMM_MACRO_4b, mode=0x0f,  , rdi) !m0,m1 
U3835: tmp8:= RDSEGFLD(ES, SEL) 
U3836: STADPPHYS_DSZ16_ASZ32_SC1(tmp7, IMM_MACRO_53, mode=0x0f,  , tmp8) !m0 

U3838: tmp8:= RDSEGFLD(CS, SEL) 
U3839: STADPPHYS_DSZ16_ASZ32_SC1(tmp7, IMM_MACRO_5b, mode=0x0f,  , tmp8) !m0 
U383a: tmp8:= RDSEGFLD(SS_USERM, SEL) 

U383c: STADPPHYS_DSZ16_ASZ32_SC1(tmp7, IMM_MACRO_63, mode=0x0f,  , tmp8) !m0 
U383d: tmp8:= RDSEGFLD(DS, SEL) 
U383e: STADPPHYS_DSZ16_ASZ32_SC1(tmp7, IMM_MACRO_6b, mode=0x0f,  , tmp8) !m0 

U3840: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000003, U3846) !m0,m1,m2 
U3841: tmp8:= RDSEGFLD(FS, SEL) 
U3842: STADPPHYS_DSZ32_ASZ32_SC1(tmp7, IMM_MACRO_73, mode=0x0f,  , tmp8) !m0 

U3844: tmp8:= RDSEGFLD(GS, SEL) 
U3845: STADPPHYS_DSZ32_ASZ32_SC1(tmp7, IMM_MACRO_7b, mode=0x0f,  , tmp8) !m0 
U3846: MOVETOCREG_BTS_DSZ64( , 0x00000012, 0x06d) !m0,m2 

U3848: tmp2:= RDSEGFLD(UNK_SEG_04, SEL) 
U3849: tmp5:= RDSEGFLD(UNK_SEG_04, FLGS) 
U384a: tmp5:= BT_DSZ32(tmp5, 0x00000003) 

U384c: tmp8:= MOVEMERGEFLGS_DSZ32(0x0000001c, tmp5) 
U384d: tmp8:= CMOVCC_DSZ32_CONDB(tmp8, 0x0000000e) 
U384e: unk_fe1(tmp8) 

U3850: tmp8:= MOVEMERGEFLGS_DSZ32(0x00000067, tmp5) 
U3851: tmp8:= CMOVCC_DSZ32_CONDB(tmp8, 0x0000002b) 
U3852: unk_fe1(tmp8) 

U3854: NOP 
U3855: NOP 
U3856: UJMP( , tmp12) 

U3858: NOP 
U3859: WRITEURAM(tmp0, 0x0000, 64) !m2 
U385a: tmp0:= READAFLAGS(tmp0) 

U385c: tmp0:= CONCAT_DSZ16(0x00000002, tmp0) SEQW GOTO U52cd
FUN_ucode_000385d:
U385d: tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x0000000c, 0x01c) 
U385e: tmp7:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00000004) 

U3860: tmp9:= SELECTCC_DSZ32_CONDNB(tmp9, 0x00000001) 
U3861: tmp7:= OR_DSZ32(tmp9, tmp7) 
U3862: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp7, 0x070, tmp2) 

U3864: tmp7:= SELECTCC_DSZ32_CONDNB(tmp14, 0x00000004) 
U3865: LFNCEWAIT-> tmp14:= CMOVCC_DSZ32_CONDP(tmp14, tmp7) SEQW URET1
U3866: SAVEUIP_REGOVR(0x00, U3868, 0x0000) SEQW GOTO U2bb0

U3868: LFNCEWAIT-> tmp2:= ADD_DSZN(0x00000004, tmp4) !m1 SEQW GOTO U70f9
U3869: tmp0:= SHR_DSZ64(tmp0, 0x00000020) 
U386a: tmp0:= AND_DSZ32(0x08000000, tmp0) 

U386c: tmp1:= MOVEFROMCREG_DSZ64( , 0x701) 
U386d: tmp1:= NOTAND_DSZ64(0x08000000, tmp1) 
U386e: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp1, 0x701, tmp0) !m2 

U3870: TESTUSTATE( , SYS, 0x0800) !m1 ? SEQW GOTO U3f4e
U3871: LFNCEWAIT-> unk_256() !m1 SEQW UEND0
U3872: tmm6:= unk_704(mm2) 

U3874: tmm6:= unk_620(tmm6) 
U3875: tmp8:= PINTMOVDTMM2I_DSZ32(tmm6) 
U3876: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U3878: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U3879: SAVEUIP( , 0x01, U419d) !m0 
U387a: UJMP( , tmp8) 

U387c: tmp3:= MOVEFROMCREG_DSZ64( , 0x486) 
U387d: tmp3:= AND_DSZ16(tmp3, 0x00000002) 
U387e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U3880) SEQW GOTO U03b4

U3880: tmp12:= OR_DSZ16(0x00000002, tmp12) SEQW GOTO U1948
FUN_ucode_0003881:
U3881: tmpv1:= ZEROEXT_DSZ32(0x00000400) 
U3882: tmpv1:= BTS_DSZ32(tmpv1, 0x00000010) 

U3884: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U1cbe
U3885: tmpv0:= READURAM( , 0x0012, 64) 
U3886: tmpv0:= BT_DSZ32(tmpv0, 0x00000000) 

U3888: tmp15:= READUIP_REGOVR(0x01) !m0 
U3889: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmpv0, tmp15) SEQW SAVEUIP1 U388aSEQW GOTO U6bfd
U388a: tmpv0:= SAVEUIP(tmp2, 0x01, U03be) !m0 

U388c: SAVEUIP( , 0x00, U38d0) SEQW GOTO U334d
U388d: LBSYNC(0x00000001) 
U388e: LFNCEMARK-> LBSYNC(0x00000001) 

U3890: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 
U3891: tmp11:= ZEROEXT_DSZ32(0x0000000e) 
U3892: LFNCEWAIT-> tmp1:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 

U3894: tmp1:= AND_DSZ32(0x000c0000, tmp1) 
U3895: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U27dc) 
U3896: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2dd) !m1,m2 

U3898: tmp14:= ZEROEXT_DSZ64N(tmp8) !m1 SEQW GOTO U4999
U3899: mm0:= unk_76f(tmm1) 
U389a: MOVETOCREG_DSZ64(tmp0, 0x205, 32) !m1 

U389c: tmm1:= unk_477(tmm1) 
U389d: mm0:= unk_76f(tmm1) 
U389e: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x206, 32) !m1 

U38a0: tmp1:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U38a1: tmp1:= AND_DSZ32(0x00000001, tmp1) SEQW SAVEUIP1 U38a2SEQW GOTO U2799
U38a2: SYNCMARK-> UFLOWCTRL( , tmp3, URET0) 

U38a4: WRMSLOOPCTRFBR( , 0x00000060) SEQW GOTO U0002
U38a5: WRMSLOOPCTRFBR( , 0x0000003f) 
U38a6: tmp2:= ZEROEXT_DSZ32(0x00000020) 

U38a8: tmp12:= ADD_DSZ32(0x000032c0, tmp15) 
U38a9: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U38aa: MOVETOCREG_DSZ64(tmp0, tmp2) 

U38ac: tmp2:= ADD_DSZ32(0x00000001, tmp2) 
U38ad: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U38ae: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U38a9

U38b0: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U38b1: MOVETOCREG_DSZ64(tmp0, 0x009) SEQW GOTO U2a75
FUN_ucode_00038b2:
U38b2: LFNCEWAIT-> WRMSLOOPCTRFBR(0x00000003) 

U38b4: rdi:= unk_14d() 
U38b5: tmp7:= unk_14d() 
U38b6: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U38b4

U38b8: NOP SEQW URET0
U38b9: tmp14:= ZEROEXT_DSZ32(0x000024d1) 
U38ba: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U2ad9

U38bc: TESTUSTATE( , UCODE, 0x1000) ? SEQW GOTO U2ad9
U38bd: tmp1:= MOVEFROMCREG_DSZ64( , 0x067) 
U38be: tmp2:= MOVEFROMCREG_DSZ64( , 0x065) 

U38c0: tmp3:= SUB_DSZN(tmp2, tmp1) !m1 
U38c1: AETTRACE( , tmp3, 0x0c) SEQW GOTO U2ad9
FUN_ucode_00038c2:
U38c2: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U38c4: MOVETOCREG_BTR_DSZ64(tmpv0, 0x0000000c, 0x6c3) 
U38c5: tmpv0:= ZEROEXT_DSZ32() 
U38c6: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x7c6) 

U38c8: LFNCEWAIT-> MOVETOCREG_DSZ64(tmpv0, 0x6c0) SEQW URET1
U38c9: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U1f62
U38ca: tmp0:= READURAM( , 0x0012, 64) 

U38cc: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U1f62) !m2 
U38cd: SAVEUIP_REGOVR( , 0x01, U38ce, 0x7019) !m0 SEQW GOTO U6bfd
U38ce: SAVEUIP( , 0x01, U1f62) !m0 

U38d0: NOP 
U38d1: NOP 
U38d2: NOP SEQW URET1

U38d4: NOP 
U38d5: WRITEURAM(tmp0, 0x0000, 64) !m2 
U38d6: tmp0:= READAFLAGS(tmp0) 

U38d8: tmp0:= CONCAT_DSZ16(0x00000013, tmp0) SEQW GOTO U52cd
U38d9: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2dd) !m1,m2 
U38da: STADPPHYS_DSZ32_ASZ64_SC1(tmp2, mode=0x01,  , 0x00000000) 

U38dc: tmp0:= READURAM( , 0x0053, 64) 
U38dd: unk_a63(tmp0, 0x00008253) 
U38de: tmp3:= READURAM( , 0x0053, 64) 

U38e0: tmp3:= OR_DSZ32(0x00000001, tmp3) 
U38e1: WRITEURAM(tmp3, 0x0053, 32) !m2 
U38e2: tmp0:= ZEROEXT_DSZ32(0x00000009) SEQW SAVEUIP0 U38e4SEQW GOTO U60aa

U38e4: tmp7:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4, 0xfffffffffffffffe) 
U38e5: tmp4:= ADD_DSZN(tmp7, tmp4) !m1 SEQW GOTO U1ea6
U38e6: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U38e8: SYNCFULL-> MOVETOCREG_SHR_DSZ64(tmp0, 0x00000009, 0x6c5) 
U38e9: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U221e
U38ea: NOP 

U38ec: SAVEUIP( , 0x01, U221e) !m0 SEQW GOTO U5d4a
U38ed: tmp2:= SHL_DSZ64(tmp4, 0x0000001f) 
U38ee: tmp2:= SHR_DSZ64(tmp2, 0x0000002f) 

U38f0: tmp2:= BTS_DSZ32(tmp2, 0x00000011) 
U38f1: tmp0:= ZEROEXT_DSZ16(tmp4) 
U38f2: tmp0:= SHL_DSZ64(tmp0, 0x00000028) 

U38f4: tmp3:= SHL_DSZ32(r64dst, 0x00000002) 
U38f5: tmp3:= ADD_DSZ32(0x00004484, tmp3) 
U38f6: SAVEUIP( , 0x01, U2711) !m0 SEQW SAVEUIP0 U38f8SEQW GOTO U06be

U38f8: r64dst:= ZEROEXT_DSZ32() 
U38f9: tmp1:= ZEROEXT_DSZ32(tmp1, tmp1) !m2 SEQW UEND0
U38fa: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U00d2

U38fc: WRMSLOOPCTRFBR(0x0000000f) SEQW GOTO U00d4
U38fd: tmp6:= SHR_DSZ32(tmp13, 0x00000004) 
U38fe: tmp12:= ADDSUB_DSZ16_CONDD(0x00000001) 

U3900: tmp12:= SELECTCC_DSZ32_CONDNS(tmp12, 0x00000001) 
U3901: tmp12:= SUB_DSZ16(tmp6, tmp12) 
U3902: tmp12:= ADDSUB_DSZ16_CONDD(tmp12, 0x00018000) 

U3904: SYNCMARK-> UFLOWCTRL( , tmp12, MSLOOPCTR) 
U3905: tmp14:= SAVEUIP(0x01, U396e) !m0 
U3906: tmp6:= TESTUSTATE( , SYS, !UST_SMM | 0xc000) !m0,m1 ? SEQW GOTO U396e

U3908: tmp14:= SAVEUIP(0x01, U3909) !m0 
U3909: tmp9:= unk_ec6(tmp4, tmp6) SEQW GOTO U3970
U390a: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) !m2 

U390c: LFNCEWAIT-> tmp12:= RDSEGFLD(UNK_SEG_04, FLGS) 
U390d: tmp12:= SHL_DSZ32(tmp12, 0x00000008) 
U390e: tmp8:= RDSEGFLD(UNK_SEG_04, LIMIT_VAL) 

U3910: tmp8:= AND_DSZ64(0x000f0000, tmp8) 
U3911: tmp12:= OR_DSZ32(tmp8, tmp12) SEQW GOTO U4059
FUN_ucode_0003912:
U3912: tmp0:= READUIP_REGOVR(0x00) 

U3914: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 
U3915: MOVETOCREG_DSZ64(tmp15, 0x752) !m2 
FUN_ucode_0003916:
U3916: tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 

U3918: tmp14:= MOVEFROMCREG_DSZ64( , 0x067) 
U3919: tmp14:= SUB_DSZN(tmp15, tmp14) !m1 
U391a: SYNCMARK-> MOVETOCREG_DSZ64(tmp14, 0x71a) !m2 

U391c: LFNCEWTMRK-> unk_256() !m1 SEQW URET1
U391d: BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U07fe) 
U391e: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U2ee5

U3920: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U3928
U3921: tmp2:= RDSEGFLD(TSS, SEL) 
U3922: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x072) !m0,m2 

U3924: rsp:= LDPPHYS_DSZ64_ASZ32_SC8( , tmp11) 
U3925: tmp2:= RDSEGFLD(SS_USERM, SEL) 
U3926: MOVETOCREG_DSZ64(tmp7, 0x000) !m2 

U3928: rsp:= AND_DSZN(0xfffffffffffffff0, rsp) !m1 
U3929: tmp8:= RDSEGFLD(SS, SEL) SEQW GOTO U2ee0
U392a: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000b, U0c0a) !m0 

U392c: tmp4:= ZEROEXT_DSZ32(0x0000000d) 
U392d: LFNCEMARK-> tmm6:= unk_701(mm4) !m2 
U392e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U3930) SEQW GOTO U1948

U3930: tmm6:= FMOV( , 0x00000091) !m0 
U3931: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000006, U3932) !m0,m1,m2 SEQW GOTO U1948
U3932: NOP 

U3934: tmm6:= FMOV( , 0x00000091) !m0 SEQW GOTO U1948
U3935: SYNCWAIT-> tmp10:= RDSEGFLD(SEG_V0, BASE) 
U3936: MOVETOCREG_DSZ64(tmp10, 0x2c0, 32) !m1 

U3938: LFNCEWAIT-> tmp10:= RDSEGFLD(SEG_V0, LIMIT) 
U3939: MOVETOCREG_DSZ64(tmp10, 0x2c1, 32) !m1 
U393a: tmp10:= RDSEGFLD(SEG_V0, SEL) 

U393c: WRITEURAM(tmp10, 0x0062, 64) 
U393d: tmp10:= RDSEGFLD(SEG_V0, FLGS) 
U393e: WRITEURAM(tmp10, 0x0063, 64) 

U3940: tmp10:= RDSEGFLD(SEG_V0, UNK_FLD_0e) 
U3941: WRITEURAM(tmp10, 0x0064, 64) SEQW GOTO U1012
U3942: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) 

U3944: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
U3945: tmp1:= RDSEGFLD(CS, SEL) 
U3946: MOVETOCREG_DSZ64(0x00000009, 0x000) !m2 

U3948: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp1) !m0,m1 
U3949: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, tmp4) !m0,m1 
U394a: LFNCEWAIT-> LEA_DSZ8_ASZ32_SC1(tmp3) 

U394c: rsp:= ADD_DSZN(IMM_MACRO_f3, rsp) !m0,m1 SEQW GOTO U2bf9
U394d: LFNCEMARK-> tmm0:= unk_6ee(tmm0) !m2 
U394e: mm3:= unk_76a(tmm0) 

U3950: tmp3:= NOTAND_DSZ32(tmp3, 0x00000010) 
U3951: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 
U3952: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 

U3954: tmp1:= AND_DSZ32(0x00000020, tmp5) 
U3955: tmp1:= OR_DSZ32(tmp1, tmp3) 
U3956: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3958) SEQW GOTO U395a

U3958: tmp1:= OR_DSZ16(0x00008080, tmp4) 
U3959: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x48c) 
U395a: tmm0:= unk_644(tmm0) 

U395c: LFNCEWAIT-> mm0:= unk_53f(0x00000000, tmm0) SEQW GOTO U17ec
U395d: tmp8:= SUB_DSZ32(0x00000400, tmp6) 
U395e: tmp8:= SUB_DSZ32(0x0000000f, tmp8) 

U3960: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp8, U3961) SEQW GOTO U3964
U3961: tmp8:= NOTAND_DSZ32(tmp6, 0x00000003) 
U3962: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U396c) 

U3964: tmp8:= SUB_DSZ32(0x00000280, tmp6) 
U3965: tmp8:= SUB_DSZ32(0x00000003, tmp8) 
U3966: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp8, U396c) 

U3968: tmp8:= SUB_DSZ32(0x00000179, tmp6) 
U3969: tmp8:= SUB_DSZ32(0x00000001, tmp8) 
U396a: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp8, U396c) SEQW GOTO U03e4

U396c: tmp1:= ZEROEXT_DSZ32(0x00000080) 
U396d: tmp8:= MOVEINSERTFLGS_DSZ32(0x0000000b, tmp6) SEQW GOTO U0ae4
U396e: tmp9:= unk_fc6(tmp4, tmp6) 

U3970: tmp9:= unk_ece(tmp8, tmp6) 
U3971: tmp6:= ADD_DSZ32(0x00000010, tmp6) 
U3972: SYNCWAIT-> tmp12:= TESTUSTATE(tmp12, UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW URET1

U3974: TESTUSTATE( , SYS, !UST_SMM | 0xc000) !m0,m1 ? SEQW GOTO U572e
U3975: NOP 
U3976: NOP 

U3978: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, mode=0x01, tmp6) SEQW GOTO U5730
FUN_ucode_0003979:
U3979: tmp14:= READUIP_REGOVR(0x01) !m0 
U397a: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x0000001c, U06a5) 

U397c: tmp11:= SHL_DSZ32(tmp8, 0x00000001) 
U397d: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, U06a5) 
U397e: tmp2:= NOTAND_DSZ32(0xc0001fff, tmp8) 

U3980: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U06a5) 
U3981: tmp11:= SELECTCC_DSZ32_CONDNB(tmp11, 0x00000400) 
U3982: tmp2:= SHR_DSZ32(tmp8, 0x00000003) 

U3984: tmp2:= ADD_DSZ16(tmp2, tmp7) 
U3985: tmp2:= ADD_DSZ32(tmp11, tmp2) 
U3986: LFNCEWAIT-> tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp12, mode=0x1c, tmp2) 

U3988: tmp11:= AND_DSZ32(0x00000007, tmp8) 
U3989: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp2, U06a5, tmp11) SEQW URET1
U398a: SAVEUIP_REGOVR(0x00, U398c, 0x0000) SEQW GOTO U0725

U398c: tmp1:= READURAM( , 0x0020, 64) !m2 
U398d: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000001, U035a) SEQW GOTO U1b0c
U398e: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, FLGS) 

U3990: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, 0x7f5) !m2 
U3991: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U0ea2
U3992: tmp14:= SAVEUIP(0x01, U0ea2) !m0 

U3994: tmp11:= RDSEGFLD(CS, FLGS) 
U3995: tmp11:= XOR_DSZ32(tmp1, tmp11) 
U3996: tmp11:= AND_DSZ32(0x00002000, tmp11) 

U3998: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, tmp14) SEQW URET1
U3999: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U0092
U399a: LFNCEMARK-> tmp1:= unk_e7b(tmp0, tmp2) 

U399c: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp1, tmp1) 
U399d: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x7f5) !m2 
U399e: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U39a4

U39a0: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, FLGS) 
U39a1: MOVETOCREG_DSZ64(tmp1, 0x7f5) !m2 
U39a2: NOP 

U39a4: LFNCEWAIT-> LEA_DSZ8_ASZ32_SC1(tmp3) 
U39a5: rsp:= ADD_DSZN(tmp9, rsp) !m1 SEQW URET0
U39a6: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U5fc1

U39a8: tmm0:= unk_534(tmm4) 
U39a9: tmm1:= unk_534(tmm7) SEQW GOTO U5fc4
U39aa: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U39ac: SYNCMARK-> MOVETOCREG_SHR_DSZ64(tmp0, 0x00000009, 0x6c5) 
U39ad: NOP 
U39ae: NOP 

U39b0: SYNCWAIT-> TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U0664
U39b1: NOP 
U39b2: NOP 

U39b4: tmp14:= SAVEUIP(0x01, U0664) !m0 SEQW GOTO U5cd1
U39b5: tmm6:= unk_624(tmm3, tmm2) 
U39b6: tmp2:= PINTMOVDTMM2I_DSZ32(tmm6) 

U39b8: tmp2:= AND_DSZ8(0x0000003f, tmp2) 
U39b9: tmp7:= OR_DSZ32(tmp2, tmp7) 
U39ba: tmm6:= unk_704(mm7) 

U39bc: tmm6:= unk_620(tmm6) 
U39bd: tmp3:= PINTMOVDTMM2I_DSZ32(tmm6) 
U39be: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp6, U2b4d) 

U39c0: tmp0:= MOVEFROMCREG_DSZ64( , 0x48c) 
U39c1: tmp0:= SHR_DSZ16(tmp0, 0x00000008) 
U39c2: LFNCEMARK-> tmm6:= FMOV() !m2 

U39c4: tmp4:= XOR_DSZ16(0x0000411e, tmp3) 
U39c5: LFNCEWAIT-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, tmp3) SEQW GOTO U031a
U39c6: SAVEUIP( , 0x01, U2eb0) !m0 

U39c8: TESTUSTATE( , SYS, UST_VMX_OP_DIS) !m1 ? SEQW URET1
U39c9: tmpv2:= READURAM( , 0x0056, 64) 
U39ca: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U5f4a

U39cc: tmpv0:= READURAM( , 0x0043, 64) 
U39cd: tmpv1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U39ce: tmpv1:= BT_DSZ64(tmpv1, 0x0000000d) 

U39d0: tmpv1:= SELECTCC_DSZ64_CONDB(tmpv1, tmpv0) 
U39d1: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000033, U1cbe) !m0,m2 
U39d2: tmpv2:= READURAM( , 0x0057, 64) SEQW GOTO U5f4a

U39d4: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
U39d5: tmp6:= ADD_DSZ32(0x00000001, tmp6) 
U39d6: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000008, U39d8) !m1,m2 SEQW GOTO U3e1e

U39d8: tmp15:= ADD_DSZ32(0x00000001, tmp15) 
U39d9: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000017, U39da) !m0,m1,m2 SEQW GOTO U3e1d
U39da: UJMP( , tmp14) 

U39dc: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
U39dd: tmp6:= ADD_DSZ32(0x00000001, tmp6) 
U39de: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000008, U39e0) !m1,m2 SEQW GOTO U3a59

U39e0: tmp15:= ADD_DSZ32(0x00000001, tmp15) 
U39e1: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000008, U39e2) !m1,m2 SEQW GOTO U3a58
U39e2: UJMP( , tmp14) 

U39e4: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
U39e5: tmp6:= ADD_DSZ32(0x00000001, tmp6) 
U39e6: CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000008, U39e8) !m1,m2 SEQW GOTO U3a85

U39e8: tmp15:= ADD_DSZ32(0x00000001, tmp15) 
U39e9: CMPUJZ_DIRECT_NOTTAKEN(tmp15, 0x00000006, U39ea) !m0,m1,m2 SEQW GOTO U3a84
U39ea: UJMP( , tmp14) 

U39ec: tmp1:= SHR_DSZ64(tmp7, 0x00000020) 
U39ed: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 
U39ee: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U44a1

U39f0: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U39f4
U39f1: tmp7:= NOTAND_DSZ32(0x00001000, tmp7) 
U39f2: tmp7:= OR_DSZ32(0xffff0ff0, tmp7) 

U39f4: LFNCEMARK-> WRITEURAM(tmp7, 0x003d, 64) !m2 SEQW GOTO U17ec
FUN_ucode_00039f5:
U39f5: tmp10:= READUIP_REGOVR(0x01) !m0 
U39f6: tmp15:= CONCAT_DSZ16(0x0000010f) 

U39f8: tmp15:= OR_DSZ32(tmp15, 0x00000001) 
U39f9: tmp14:= ZEROEXT_DSZ32(0x00006b95) 
U39fa: tmp14:= SHL_DSZ64(tmp14, 0x00000030) 

U39fc: tmp14:= OR_DSZ64(tmp12, tmp14) 
U39fd: tmp11:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 
U39fe: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000000, U39fd) !m1,m2 

U3a00: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x22e) !m0,m1 
U3a01: SAVEUIP_REGOVR( , 0x01, U3a02, 0xbdef) !m0 SEQW GOTO U3ad6
U3a02: tmp14:= ADD_DSZ64(0x00000004, tmp14) 

U3a04: tmp13:= SHR_DSZ64(tmp13, 0x00000020) SEQW SAVEUIP1 U3a05SEQW GOTO U3ad6
U3a05: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U3a06: SYNCFULL-> UJMP( , tmp10) 

U3a08: NOP 
U3a09: SYNCWAIT-> tmp9:= unk_cce(rdi, tmp1) !m0 
U3a0a: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, IMM_MACRO_01) !m0 

U3a0c: tmp9:= unk_cce(rdi, tmp1) !m0 
U3a0d: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U3a25
U3a0e: tmp15:= SUB_DSZN(tmp4) !m1 

U3a10: tmp15:= SHL_DSZ32(tmp15, 0x00000004) SEQW GOTO U1a64
U3a11: LFNCEWAIT-> rsp:= LDPPHYS_DSZ32_ASZ32_SC8( , tmp8) 
U3a12: tmp2:= LDPPHYS_DSZ16_ASZ32_SC8( , tmp8) 

U3a14: tmp0:= unk_d61(tmp2) 
U3a15: tmp1:= unk_d61(tmp2) 
U3a16: tmp0:= CMOVCC_DSZ64_CONDNB(tmp1, tmp0) 

U3a18: SAVEUIP( , 0x01, U068e) !m0 
U3a19: LFNCEWAIT-> tmp1:= MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x73c) 
U3a1a: tmp14:= ZEROEXT_DSZ32(0x00003405) 

U3a1c: UFLOWCTRL(tmp1, tmp14, URET1) 
U3a1d: LFNCEMARK-> unk_e6b(tmp0, tmp2) 
FUN_ucode_0003a1e:
U3a1e: tmp8:= RDSEGFLD(UNK_SEG_09, SEL) 

U3a20: LFNCEMARK-> WRSEGFLD(tmp8, UNK_SEG_09, UNK_FLD_0c) 
U3a21: MOVETOCREG_DSZ64(tmp7, 0x000) !m2 
U3a22: tmp8:= RDSEGFLD(SS, SEL) SEQW URET1

U3a24: NOP 
U3a25: SYNCWAIT-> tmp9:= unk_cce(rdi, tmp1) !m0 
U3a26: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, IMM_MACRO_01) !m0 

U3a28: tmp9:= unk_cce(rdi, tmp1) !m0 
U3a29: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U3a25
U3a2a: tmp15:= SUB_DSZN(tmp4) !m1 

U3a2c: tmp15:= SHL_DSZ32(tmp15, 0x00000004) SEQW GOTO U1a64
U3a2d: tmp0:= SUB_DSZ64(tmp6, tmp7) 
U3a2e: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp0, U05ee) 

U3a30: CMPUJNZ_DIRECT_NOTTAKEN(tmp7, U05ee, tmp12) 
U3a31: tmp0:= SELECTCC_DSZ32_CONDZ(tmp9, 0x00000001) 
U3a32: tmp0:= SHL_DSZ64(tmp0, 0x0000003e) 

U3a34: tmp6:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
U3a35: tmp6:= AND_DSZ32(0x00001800, tmp6) 
U3a36: tmp6:= SHL_DSZ64(tmp6, 0x0000002f) 

U3a38: tmp6:= OR_DSZ64(tmp0, tmp6) 
U3a39: MOVETOCREG_DSZ64(tmp6, 0x211, 32) !m1,m2 
U3a3a: LBSYNC(0x00000001) 

U3a3c: LBSYNC(0x00000001) 
U3a3d: SAVEUIP_REGOVR(0x01, U3a3e, 0x0006) !m0 SEQW GOTO U32cd
U3a3e: SYNCFULL-> MOVETOCREG_BTS_DSZ64( , 0x0000000a, 0x2e1) !m0,m1,m2 

U3a40: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW GOTO U05ee
enter_probe_mode:
U3a41: LFNCEWAIT-> tmp1:= MOVEFROMCREG_DSZ64( , 0x067) 
U3a42: WRITEURAM(tmp1, 0x0067, 64) !m2 

U3a44: WRITEURAM(tmp0, 0x0007, 32) !m2 
U3a45: WRITEURAM(tmp0, 0x0050, 32) !m2 
U3a46: tmp6:= MOVEFROMCREG_DSZ64( , 0x00c) 

U3a48: tmp6:= SHL_DSZ64(tmp6, 0x00000020) 
U3a49: WRITEURAM(tmp6, 0x0126, 64) !m2 
U3a4a: MOVE_DSZ32() SEQW SAVEUIP1 U3a4cSEQW GOTO U20bd

U3a4c: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c6) 
U3a4d: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U3a4e: LFNCEWAIT-> tmp1:= READURAM( , 0x005c, 64) 

U3a50: tmp1:= AND_DSZ32(0x00000100, tmp1) 
U3a51: tmp2:= OR_DSZ32(tmp2, tmp1) 
U3a52: CMPUJZ_DIRECT_NOTTAKEN(tmp2, 0x00000001, U3a54) !m1,m2 SEQW GOTO U05f4

U3a54: tmp0:= BT_DSZ32(tmp0, 0x00000017) 
U3a55: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, tmp0) SEQW GOTO U079d
U3a56: tmp15:= OR_DSZ32() 

U3a58: tmp6:= OR_DSZ32() 
U3a59: tmp1:= SHL_DSZ32(tmp6, 0x00000005) 
U3a5a: tmp1:= OR_DSZ32(tmp15, tmp1) 

U3a5c: tmp1:= SHL_DSZ32(tmp1, 0x0000000f) 
U3a5d: tmp1:= OR_DSZ32(0x00001000, tmp1) 
U3a5e: SAVEUIP_REGOVR(0x01, U3a60, 0x0002) !m0 SEQW GOTO U32cd

U3a60: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp1, 0x00000007, 0x3a5) !m0,m1,m2 
U3a61: tmp2:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 
U3a62: UJMP( , tmp13) 

U3a64: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U123e
U3a65: tmp12:= ZEROEXT_DSZ32(0x0000030d) 
U3a66: tmp12:= BTS_DSZ32(tmp12, 0x00000010) 

U3a68: tmp3:= READURAM( , 0x0012, 64) 
U3a69: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000000d, U123e) !m2 
U3a6a: SAVEUIP_REGOVR( , 0x01, U3a6c, 0x75c3) !m0 SEQW GOTO U6bfd

U3a6c: SAVEUIP( , 0x01, U123e) !m0 SEQW GOTO U38d0
U3a6d: tmp13:= MOVEFROMCREG_DSZ64( , 0x2da, 32) !m1 
U3a6e: tmp9:= NOTAND_DSZ32(tmp13, tmp9) 

U3a70: tmp13:= READURAM( , 0x005c, 64) 
U3a71: BTUJB_DIRECT_NOTTAKEN(tmp13, 0x00000002, U3a74) !m0,m1,m2 
U3a72: NOP SEQW SAVEUIP1 U3a74SEQW GOTO U1432

U3a74: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000002, U21b8) !m0,m1 
U3a75: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000000, U5bd5) !m2 
U3a76: BTUJNB_DIRECT_NOTTAKEN(tmp9, 0x00000001, U3a78) !m1,m2 SEQW GOTO U31d1

U3a78: SYNCFULL-> MOVETOCREG_AND_DSZ64(tmp9, 0x00000008, 0x2db) !m1,m2 
U3a79: tmp15:= READURAM( , 0x0078, 64) 
U3a7a: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000017, U07a5) !m0 

U3a7c: tmp9:= AND_DSZ32(0x00600000, tmp15) 
U3a7d: tmp9:= SUB_DSZ32(0x00200000, tmp9) 
U3a7e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U3a80) SEQW GOTO U3a81

U3a80: unk_eff() 
U3a81: LFNCEWAIT->MSSTOP-> unk_256() !m1 SEQW GOTO U3dfa
U3a82: tmp15:= OR_DSZ32() 

U3a84: tmp6:= OR_DSZ32() 
U3a85: tmp1:= SHL_DSZ32(tmp6, 0x00000005) 
U3a86: tmp1:= OR_DSZ32(tmp15, tmp1) 

U3a88: tmp1:= SHL_DSZ32(tmp1, 0x0000000f) 
U3a89: tmp1:= OR_DSZ32(0x00002000, tmp1) 
U3a8a: SAVEUIP_REGOVR(0x01, U3a8c, 0x0002) !m0 SEQW GOTO U32cd

U3a8c: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp1, 0x00000007, 0x3a5) !m0,m1,m2 
U3a8d: tmp2:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 
U3a8e: UJMP( , tmp13) 

U3a90: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U3a91: SAVEUIP_REGOVR(0x01, U3a92, 0x00ab) !m0 SEQW GOTO U02ca
U3a92: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000004, 0x005) 

U3a94: LFNCEWAIT-> tmp3:= AND_DSZ8(0x00000020, tmp2) 
U3a95: MSSTOP-> NOP 
U3a96: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U40b4) 

U3a98: MSSTOP-> NOP SEQW GOTO U3a98
U3a99: tmp2:= MOVEFROMCREG_DSZ64( , 0x51b) 
U3a9a: MOVETOCREG_BTR_DSZ64(tmp2, 0x51b) 

U3a9c: tmp0:= READURAM( , 0x004a, 64) 
U3a9d: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x7f6) SEQW SAVEUIP1 U3a9eSEQW GOTO U0164
U3a9e: tmp0:= READURAM( , 0x005c, 64) !m2 

U3aa0: SYNCFULL-> tmp0:= BT_DSZ64(tmp0, 0x00000010) 
U3aa1: tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 
U3aa2: tmp2:= SELECTCC_DSZ32_CONDB(tmp0, tmp2) 

U3aa4: tmp10:= AND_DSZ32(0x000f0000, tmp2) 
U3aa5: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U257c) 
U3aa6: tmp2:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 

U3aa8: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000f, U257c) !m0,m1 
U3aa9: tmp5:= BTS_DSZ32(0x00000000, 0x00000010) SEQW SAVEUIP0 U3aaaSEQW GOTO U5ee8
U3aaa: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 

U3aac: tmp1:= NOTAND_DSZ32(0x00000201, tmp1) 
U3aad: MOVETOCREG_BTS_DSZ64(tmp1, 0x0000001f, 0x29d) !m0,m1 SEQW GOTO U2b89
U3aae: SYNCFULL-> tmp5:= MOVEFROMCREG_DSZ64( , 0x6c5) 

U3ab0: FETCHFROMEIP1_ASZ64( , tmp3) !m1 
U3ab1: LFNCEWAIT-> SIGEVENT( , 0x00000043) 
U3ab2: MSLOOP-> MJMPTARGET_INDIRECT_ASZ64( , tmp3) !m1 

U3ab4: LFNCEMARK-> SAVEUIP( , 0x00, U3dfa) 
U3ab5: NOP 
U3ab6: NOP 

U3ab8: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x000) SEQW GOTO U2600
U3ab9: tmp0:= AND_DSZ32(0x00000002, tmp2) 
U3aba: tmp0:= SHR_DSZ32(tmp0, 0x00000001) 

U3abc: rax:= ZEROEXT_DSZ32(tmp0) 
U3abd: tmp2:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x50000000) 
U3abe: tmp2:= CONCAT_DSZ32(0x0000357a, tmp2) 

U3ac0: MOVETOCREG_DSZ64(tmp2, 0x2c0, 32) !m1 
U3ac1: tmp1:= MOVEFROMCREG_DSZ64( , 0x38e, 32) !m1 
U3ac2: tmp2:= SELECTCC_DSZ32_CONDNZ(tmp0, 0x00000800) 

U3ac4: tmp1:= NOTAND_DSZ32(tmp2, tmp1) 
U3ac5: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U228a
U3ac6: tmp2:= ZEROEXT_DSZ32(tmp1) 

U3ac8: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1 
U3ac9: tmp0:= NOTAND_DSZ32(0xf8000000, tmp0) 
U3aca: tmp0:= NOTAND_DSZ32(0x00000040, tmp0) 

U3acc: tmp1:= OR_DSZ32(tmp0, 0x10000000) 
U3acd: tmp0:= OR_DSZ32(tmp1, 0x50000000) 
U3ace: SAVEUIP( , 0x01, U2289) !m0 SEQW SAVEUIP0 U3ad0SEQW GOTO U2971

U3ad0: SYNCFULL-> tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1,m2 
U3ad1: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000005, U1cbe) !m2 SEQW GOTO U3ad0
U3ad2: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 

U3ad4: tmpv3:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 
U3ad5: BTUJNB_DIRECT_NOTTAKEN(tmpv3, 0x00000000, U3ad6) !m1,m2 SEQW GOTO U3ad4
FUN_ucode_0003ad6:
U3ad6: MOVETOCREG_DSZ64(tmpv2, 0x22c, 32) !m1,m2 

U3ad8: MOVETOCREG_DSZ64(tmpv1, 0x22b, 32) !m1,m2 
U3ad9: MOVETOCREG_DSZ64(tmpv0, 0x229, 32) !m1,m2 
U3ada: SYNCFULL-> NOP 

U3adc: tmpv3:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 
U3add: BTUJNB_DIRECT_NOTTAKEN(tmpv3, 0x00000000, U3ade) !m1,m2 SEQW GOTO U3ada
U3ade: URET(0x01) !m0 

U3ae0: FETCHFROMEIP1_ASZ64( , tmp8) 
U3ae1: tmp2:= READURAM( , 0x0072, 64) 
U3ae2: tmp0:= READURAM( , 0x0013, 64) 

U3ae4: tmp0:= BT_DSZ32(tmp0, 0x00000010) 
U3ae5: tmp0:= CMOVCC_DSZ32_CONDNB(tmp0, 0x0000003f) 
U3ae6: SYNCWAIT-> BTUJB_DIRECT_NOTTAKEN(tmp2, U3ae8, tmp0) !m1,m2 SEQW GOTO U008e

U3ae8: tmp5:= ZEROEXT_DSZ64(tmp8) SEQW GOTO U182a
U3ae9: LFNCEMARK-> tmp14:= unk_e6b(tmp0, tmp2) !m1 
U3aea: tmp15:= MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x7f5) 

U3aec: tmp14:= MOVEMERGEFLGS_DSZ32(0x00001ce0, tmp14) 
U3aed: tmp1:= AND_DSZ32(0x00000800, tmp12) 
U3aee: tmp12:= SELECTCC_DSZ32_CONDZ(tmp1, tmp12) 

U3af0: tmp3:= ZEROEXT_DSZ16(tmp13, tmp12) 
U3af1: SAVEUIP( , 0x01, U068e) !m0 
U3af2: tmp14:= CMOVCC_DSZ32_CONDO(tmp14, 0x00002ec6) 

U3af4: UFLOWCTRL(tmp8, tmp14, URET1) 
U3af5: tmp7:= NOTAND_DSZ32(0x00000040, tmp7) 
U3af6: tmp7:= OR_DSZ32(0x00000400, tmp7) 

U3af8: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U3afc
U3af9: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, BASE) 
U3afa: MOVETOCREG_DSZ64(tmp1, 0x78e) 

FUN_ucode_0003afc:
U3afc: LFNCEWAIT-> tmp1:= RDSEGFLD(UNK_SEG_09, LIMIT) 
U3afd: MOVETOCREG_DSZ64(tmp1, 0x410) 
U3afe: tmp1:= ADD_DSZ32(0x00000001, tmp1) 

U3b00: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x700) SEQW URET1
U3b01: TESTUSTATE( , SYS, 0x0800) !m1 ? SEQW GOTO U3b05
U3b02: tmp10:= ZEROEXT_DSZ16(tmp12) 

U3b04: SIGEVENT( , 0x0000000f) 
U3b05: tmp14:= READUIP_REGOVR(0x01) !m0 
U3b06: tmp12:= WRMSLOOPCTRFBR(0x00000007) 

U3b08: unk_cce(tmp11) 
U3b09: tmp0:= unk_ccc(tmp11) 
U3b0a: tmm3:= FMOV(0x00000011) !m0 

U3b0c: tmp11:= ADD_DSZN(0x00000010, tmp11) !m1 
U3b0d: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U3b08
U3b0e: SIGEVENT( , 0x00000003) 

U3b10: tmp11:= SUB_DSZN(0x00000080, tmp11) !m1 SEQW URET1
U3b11: tmp5:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp8, 0x0000001d) 
U3b12: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000001, U3b14) !m1,m2 SEQW GOTO U3b15

U3b14: tmp7:= SAVEUIP_REGOVR(0x01, U3b15, 0x0000) !m0 SEQW GOTO U0d59
U3b15: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, 0x00000010) 
U3b16: tmp1:= NOTAND_DSZ32(0x00000000, tmp1) 

U3b18: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U3b19) SEQW GOTO U2569
U3b19: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, 0x00000014) 
U3b1a: tmp1:= PORTIN_DSZ32_ASZ16_SC1(tmp1) 

U3b1c: tmp1:= AND_DSZ32(tmp7, tmp1) 
U3b1d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3b1e) SEQW GOTO U2569
U3b1e: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, 0x00000018) 

U3b20: PORTOUT_DSZ32_ASZ16_SC1(0x50c0,  , tmp7) !m2 SEQW GOTO U2575
U3b21: tmp2:= ZEROEXT_DSZ32(tmp5) 
U3b22: WRITEURAM(tmp2, 0x0064, 64) !m2 

U3b24: tmp2:= SHR_DSZ64(tmp5, 0x00000020) 
U3b25: LFNCEMARK-> WRITEURAM(tmp2, 0x0065, 64) !m2 SEQW SAVEUIP1 U3b26SEQW GOTO U2178
U3b26: WRITEURAM(tmp2, 0x0062, 64) 

U3b28: tmp2:= TESTUSTATE( , UCODE, !0x0800) !m0 ? SEQW GOTO U3b2a
U3b29: tmp2:= ZEROEXT_DSZ32(0x00000010) 
U3b2a: WRITEURAM(tmp2, 0x0063, 64) 

U3b2c: mm2:= unk_7ea(0x00000000) 
U3b2d: mm5:= unk_72a(0x00000000) 
U3b2e: tmp5:= SHL_DSZ32(tmp5, 0x00000011) 

U3b30: tmp2:= OR_DSZ32(tmp5, tmp2) 
U3b31: tmp2:= SHL_DSZ32(tmp2, 0x00000004) 
U3b32: mm5:= unk_7e8(0x00000000) 

U3b34: tmp2:= OR_DSZ32(tmp5, tmp2) 
U3b35: WRITEURAM(tmp2, 0x0066, 64) 
U3b36: mm5:= unk_73a() 

U3b38: tmp2:= MOVEFROMCREG_DSZ64( , 0x06a) 
U3b39: tmp2:= CONCAT_DSZ16(tmp2, tmp5) 
U3b3a: WRITEURAM(tmp2, 0x0067, 64) SEQW GOTO U1012

U3b3c: tmp7:= BTS_DSZ64(0x00000000, 0x0000003f) 
U3b3d: tmm0:= unk_744(mm7) 
U3b3e: tmp11:= ZEROEXT_DSZ32(0x000022e2) 

U3b40: tmm7:= XORPD(tmm5, tmm0) 
U3b41: tmp11:= MOVEINSERTFLGS_DSZ32(0x00000001, tmp11) 
U3b42: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U5ad4

U3b44: tmp13:= ZEROEXT_DSZ64(0x000043c4) SEQW GOTO U42ea
U3b45: tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U3b46: tmp10:= BTS_DSZ32(tmp0, 0x00000010) 

U3b48: BTUJB_DIRECT_NOTTAKEN(tmp13, 0x00000015, U3b49) !m1,m2 SEQW GOTO U3b4c
U3b49: tmp10:= READURAM( , 0x0009, 64) 
U3b4a: tmp10:= SHR_DSZ64(tmp10, 0x00000020) 

U3b4c: tmp15:= AND_DSZ32(0x0000003f, tmp13) 
U3b4d: tmp15:= SUB_DSZ32(0x0000001e, tmp15) 
U3b4e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U3b50) SEQW GOTO U3b51

U3b50: tmp10:= ZEROEXT_DSZ32(tmp0) 
U3b51: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x7fe) !m2 SEQW SAVEUIP1 U3b52SEQW GOTO U27ac
U3b52: tmp3:= MOVEFROMCREG_DSZ64( , 0x512) 

U3b54: tmp5:= ZEROEXT_DSZ32(0x00003b56) 
U3b55: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4798
U3b56: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x005) !m2 

U3b58: tmp2:= MOVEFROMCREG_DSZ64( , 0x518) 
U3b59: tmp2:= BTR_DSZ64(tmp2, 0x00000028) 
U3b5a: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp2, U3b5c) SEQW GOTO U3b60

U3b5c: tmp9:= NOTAND_DSZ32(0xfffffffffffff000, tmp12) 
U3b5d: tmp2:= AND_DSZ64(0xfffffffffffff000, tmp2) 
U3b5e: tmp2:= OR_DSZ64(tmp9, tmp2) 

U3b60: tmp9:= ZEROEXT_DSZ64(tmp12) 
U3b61: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000000a, U2b39) !m0,m1 
U3b62: LFNCEWAIT-> tmp3:= AND_DSZ32(0x000009bf, tmp3) SEQW GOTO U2c58

U3b64: tmp2:= BTS_DSZ32(tmp2, 0x00000012) 
U3b65: PORTOUT_DSZ32_ASZ16_SC1(0x50d8,  , tmp2) !m2 
U3b66: SAVEUIP_REGOVR(0x01, U3b68, 0x0001) !m0 SEQW GOTO U5e4e

U3b68: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U6aaa
U3b69: NOP 
U3b6a: NOP 

U3b6c: tmp3:= ZEROEXT_DSZ32(0x00006aaa) SEQW GOTO U06ce
U3b6d: tmp0:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 
U3b6e: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U38da) !m1,m2 

U3b70: tmp0:= READURAM( , 0x0015, 64) 
U3b71: tmp6:= AND_DSZ64(tmp7, tmp2) 
U3b72: tmp12:= SUB_DSZ64(0x00000001, tmp1) 

U3b74: tmp15:= ADD_DSZ64(tmp0, tmp12) 
U3b75: tmp15:= AND_DSZ64(tmp7, tmp15) 
U3b76: CMPUJNZ_DIRECT_NOTTAKEN(tmp6, U38d9, tmp15) !m1,m2 

U3b78: tmp6:= CONCAT_DSZ32(rdx, rax) 
U3b79: tmp6:= ADD_DSZN(tmp8, tmp6) !m1 
U3b7a: tmp15:= ADD_DSZN(tmp12, tmp6) !m1 

U3b7c: tmp15:= TEST_DSZ64(tmp15, tmp15) 
U3b7d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U38d9) 
U3b7e: tmp3:= SUB_DSZ64(tmp11, tmp6) 

U3b80: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp3, U3b85) 
U3b81: tmp8:= ADD_DSZ64(tmp1, tmp6) 
U3b82: tmp3:= SUB_DSZ64(tmp5, tmp8) 

U3b84: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp3, U38d9) 
U3b85: LFNCEMARK-> tmp12:= ZEROEXT_DSZ32() 
U3b86: MOVETOCREG_DSZ64(0x00000015, 0x000) !m2 

U3b88: LFNCEWAIT-> tmp8:= unk_fc6(tmp6, tmp12) 
U3b89: tmp8:= unk_ece(tmp0, tmp12) 
U3b8a: tmp12:= ADD_DSZ32(0x00000010, tmp12) 

U3b8c: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp12, U3b8d, tmp1) !m1,m2 SEQW GOTO U3b88
U3b8d: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 
U3b8e: tmp8:= ADD_DSZ64(tmp1, tmp0) 

U3b90: tmp3:= SUB_DSZ64(tmp11, tmp0) 
U3b91: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp3, U3b95) 
U3b92: tmp3:= SUB_DSZ64(tmp5, tmp8) 

U3b94: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp3, U38d9) 
U3b95: tmp6:= AND_DSZ64(tmp7, tmp2) 
U3b96: tmp3:= AND_DSZ64(tmp7, tmp0) 

U3b98: CMPUJNZ_DIRECT_NOTTAKEN(tmp6, U38d9, tmp3) !m1,m2 
U3b99: tmp3:= AND_DSZ64(tmp7, tmp8) 
U3b9a: CMPUJNZ_DIRECT_NOTTAKEN(tmp6, U38d9, tmp3) !m1,m2 

U3b9c: tmp6:= ADD_DSZ64(tmp1, tmp0) 
U3b9d: tmp14:= MOVEFROMCREG_DSZ64( , 0x51b) 
U3b9e: tmp14:= ZEROEXT_DSZ16(0x00001000, tmp14) 

U3ba0: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000008) 
U3ba1: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000000, U6848) !m1 
U3ba2: tmp11:= READURAM( , 0x0046, 64) 

U3ba4: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, mode=0x01,  , tmp11) 
U3ba5: tmp11:= READURAM( , 0x0047, 64) 
U3ba6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, 0x00000008, mode=0x01,  , tmp11) 

U3ba8: tmp11:= READURAM( , 0x0048, 64) 
U3ba9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, 0x00000010, mode=0x01,  , tmp11) 
U3baa: tmp11:= READURAM( , 0x002c, 64) 

U3bac: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, 0x00000018, mode=0x01,  , tmp11) 
U3bad: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000120,  , tmp4) 
U3bae: tmp13:= SUB_DSZ32(0x00000020, tmp1) 

U3bb0: tmp13:= STC(tmp13) 
U3bb1: tmp15:= CONCAT_DSZ32(0x00000001, tmp13) 
U3bb2: WRITEURAM(tmp15, 0x008e, 64) !m2 SEQW GOTO U68ae

U3bb4: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp9, tmp7) 
U3bb5: tmp9:= ZEROEXT_DSZ32(0x00000090) 
U3bb6: tmp9:= CONCAT_DSZ16(0x00000013, tmp9) 

U3bb8: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp9) 
U3bb9: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U3bba: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U0856) 

U3bbc: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U3bb8, tmp7) !m1,m2 SEQW GOTO U0856
U3bbd: tmp13:= BT_DSZ64(tmp13, 0x00000023) 
U3bbe: tmp13:= SELECTCC_DSZ32_CONDNB(tmp13, 0x00000001) 

U3bc0: tmp13:= XOR_DSZ32(tmp3, tmp13) 
U3bc1: tmp12:= MOVEINSERTFLGS_DSZ64(0x00000001, tmp12) 
U3bc2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp13, U3bd2) 

U3bc4: tmp12:= MOVEINSERTFLGS_DSZ64( , tmp12) 
U3bc5: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3bd0
U3bc6: tmp13:= READURAM( , 0x001f, 64) 

U3bc8: tmp3:= SHR_DSZ64(tmp13, 0x0000002a) 
U3bc9: ROVR<- tmp13:= SHR_DSZ64(tmp13, 0x00000025) SEQW SAVEUIP0 U3bcaSEQW GOTO U1a24
U3bca: tmp13:= BT_DSZ64(tmp13, 0x00000038) 

U3bcc: tmp13:= SELECTCC_DSZ32_CONDNB(tmp13, 0x00000001) 
U3bcd: tmp13:= XOR_DSZ32(tmp3, tmp13) 
U3bce: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp13, U3bd0) SEQW GOTO U3bd2

U3bd0: WRITEURAM(tmp12, 0x001e, 64) !m2 
U3bd1: SYNCFULL-> SIGEVENT( , 0x000000d9) 
U3bd2: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x005) !m2 

U3bd4: tmp13:= SELECTCC_DSZ32_CONDNB(tmp12, 0x00020000) 
U3bd5: tmp9:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U3bd6: MOVETOCREG_BTS_DSZ64(tmp9, 0x00000010, 0x7fe) !m2 

U3bd8: tmp5:= ZEROEXT_DSZ32(0x00003bda) 
U3bd9: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4798
U3bda: tmp2:= ZEROEXT_DSZ16(0x0000000e) 

U3bdc: tmp1:= ZEROEXT_DSZ64(tmp12) 
U3bdd: tmp2:= CONCAT_DSZ8(0x0000000b, tmp2) 
U3bde: tmp4:= ZEROEXT_DSZ32(tmp11) 

U3be0: tmp14:= MOVEFROMCREG_DSZ64( , 0x067) 
U3be1: tmp0:= MOVEFROMCREG_DSZ64( , 0x065) 
U3be2: tmp6:= SUB_DSZN(tmp0, tmp14) !m1 SEQW GOTO U693d

U3be4: WRITEURAM(tmp0, 0x000e, 32) 
U3be5: TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U06ee
U3be6: NOP 

U3be8: tmp0:= ZEROEXT_DSZ32(0x00000006) SEQW SAVEUIP0 U3be9SEQW GOTO U58c1
U3be9: tmp0:= READURAM( , 0x000e, 64) 
U3bea: tmp0:= CONCAT_DSZ16(0x00000100, tmp0) 

U3bec: tmp15:= MOVEFROMCREG_DSZ64( , 0x692) 
U3bed: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp15, 0x692) !m2 SEQW GOTO U079e
patch_handle_0x05_write_stgbuf:
U3bee: tmp3:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 

U3bf0: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x00000002) 
U3bf1: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x0000000a) 
U3bf2: tmp4:= ADD_DSZ64(0x00000012, tmp4) 

U3bf4: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U3bf9) !m1,m2 
U3bf5: tmp7:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp3) 
U3bf6: tmp7:= AND_DSZ64(tmp5, tmp7) 

U3bf8: tmp6:= OR_DSZ64(tmp6, tmp7) 
U3bf9: STADSTGBUF_DSZ64_ASZ16_SC1(tmp3,  , tmp6) 
U3bfa: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U3bee

U3bfc: NOP SEQW GOTO U1ea6
U3bfd: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000e, U5fb4) !m0,m2 
U3bfe: tmp7:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_13, mode=0x0a) !m0,m1 

U3c00: tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0 
U3c01: LFNCEMARK-> tmp3:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 
U3c02: tmp5:= ZEROEXT_DSZ32N(0x003f7700) !m1 

U3c04: TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW GOTO U3c08
U3c05: tmp5:= unk_20d(0x00000200) 
U3c06: tmp5:= OR_DSZN(0x00254500, tmp5) !m1 

U3c08: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U3c16
U3c09: tmp5:= unk_203(0x00257700, tmp5) 
U3c0a: tmp5:= ZEROEXT_DSZ32N(tmp5) !m1 

U3c0c: tmp5:= unk_207(0x00084400, tmp5) 
U3c0d: tmp0:= unk_207(tmp7) 
U3c0e: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000008, U2711) !m1 

U3c10: tmp0:= SHL_DSZ32(tmp7, 0x0000000a) 
U3c11: tmp0:= unk_207(tmp0, tmp7) 
U3c12: tmp0:= AND_DSZ32(0x00080000, tmp0) 

U3c14: tmp7:= NOTAND_DSZ32(0x00080000, tmp7) 
U3c15: tmp7:= OR_DSZ32(tmp7, tmp0) 
U3c16: unk_13f(tmp7) !m2 

U3c18: tmp7:= AND_DSZ32(tmp5, tmp7) 
U3c19: tmp5:= NOTAND_DSZ32(tmp5, tmp10) 
U3c1a: tmp7:= OR_DSZ32(tmp5, tmp7) 

U3c1c: tmp13:= SAVEUIP(0x00, U0ea1) 
U3c1d: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U5ef0
U3c1e: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp7, 0x00000011, 0x7fe) 

U3c20: tmp14:= SAVEUIP(0x01, U33fe) !m0 SEQW GOTO U2bd9
U3c21: tmp9:= ZEROEXT_DSZ32(0x0000010a) 
U3c22: LFNCEWAIT-> tmp12:= MOVEFROMCREG_DSZ64( , tmp9) 

U3c24: BTUJB_DIRECT_NOTTAKEN(tmp12, 0x0000003f, U3c4c) !m0,m1,m2 
U3c25: ROVR<- tmp12:= ZEROEXT_DSZ64( , 0x00008321) SEQW SAVEUIP1 U3c26
U3c26: tmp8:= READURAM( , 0x0010, 64) 

U3c28: tmp1:= AND_DSZ32(tmp8, tmp10) 
U3c29: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2b31) 
U3c2a: tmp1:= READURAM( , 0x002b, 64) 

U3c2c: tmp1:= SHL_DSZ32(tmp1, 0x00000003) 
U3c2d: tmp3:= ADD_DSZ64(tmp1, tmp10) 
U3c2e: tmp8:= NOTAND_DSZ64(tmp8, 0xffffffffffffffff) SEQW SAVEUIP1 U3c30SEQW GOTO U6c69

U3c30: LFNCEWAIT-> tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp3) 
U3c31: SAVEUIP_REGOVR( , 0x01, U3c32, 0x8321) !m0 SEQW GOTO U5741
U3c32: tmp1:= READURAM( , 0x002b, 64) 

U3c34: tmp1:= ADD_DSZ32(0x00000001, tmp1) 
U3c35: tmp1:= AND_DSZ32(0x01ffffff, tmp1) 
U3c36: LFNCEMARK-> WRITEURAM(tmp1, 0x002b, 32) !m2 

U3c38: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000000, U3c44) !m1,m2 
U3c39: tmp3:= NOTAND_DSZ64(0x00000fff, tmp3) SEQW SAVEUIP1 U3c3aSEQW GOTO U6c66
U3c3a: tmp10:= MOVETOCREG_DSZ64(tmp3, 0x108) !m2 

U3c3c: tmp12:= BTS_DSZ64(tmp12, 0x0000003d) 
U3c3d: WRITEURAM( , 0x00000000, 0x002b, 32) !m2 
U3c3e: LFNCEWTMRK-> tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp3) 

U3c40: SAVEUIP_REGOVR( , 0x01, U3c41, 0x8321) !m0 SEQW GOTO U5741
U3c41: tmp1:= ZEROEXT_DSZ32(0x00000001) 
U3c42: WRITEURAM(tmp1, 0x002b, 32) !m2 

U3c44: LFNCEMARK-> tmp12:= OR_DSZ64(tmp3, tmp12) 
U3c45: tmp8:= AND_DSZ64(0x000003c0, tmp3) 
U3c46: tmp8:= SHR_DSZ64(tmp8, 0x00000006) 

U3c48: tmp3:= NOTAND_DSZ64(0x00000fff, tmp3) SEQW SAVEUIP1 U3c49SEQW GOTO U6c58
U3c49: tmp12:= BTS_DSZ64(tmp12, 0x0000003f) 
U3c4a: MOVETOCREG_DSZ64(tmp12, tmp9) !m2 

U3c4c: tmp1:= SUB_DSZ32(0x00000109, tmp9) 
U3c4d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U304e) SEQW GOTO U3c21
U3c4e: LFNCEMARK-> tmp3:= READURAM( , 0x0057, 64) 

U3c50: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp3, 0x2c0, 32) !m1 
U3c51: tmp3:= READURAM( , 0x0056, 64) 
U3c52: MOVETOCREG_DSZ64(tmp3, 0x2c1, 32) !m1 

U3c54: tmp3:= ZEROEXT_DSZ64(0xffffffffffffffff) 
U3c55: WRITEURAM(tmp3, 0x0062, 64) !m2 
U3c56: tmp3:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U3c58: SYNCFULL-> tmp3:= MOVETOCREG_BTS_DSZ64(tmp3, 0x00000008, 0x6c3) !m2 
U3c59: NOP SEQW GOTO U1012
U3c5a: tmp1:= ZEROEXT_DSZ32(0x00000030) 

U3c5c: tmp9:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U3c5d: MOVETOCREG_BTS_DSZ64(tmp9, 0x00000005, 0x29d) !m1,m2 
U3c5e: LFNCEWAIT-> PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , tmp1) !m2 

U3c60: SAVEUIP_REGOVR(0x01, U3c61, 0x0000) !m0 SEQW GOTO U2b15
U3c61: tmp1:= READURAM( , 0x000f, 64) 
U3c62: tmp1:= AND_DSZ32(0x00000070, tmp1) 

U3c64: tmp1:= SUB_DSZ32(0x00000030, tmp1) 
U3c65: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3c66) SEQW GOTO U3c69
U3c66: tmp1:= MOVEFROMCREG_DSZ64( , 0x2c2, 32) !m1 

U3c68: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000005, 0x2c2) !m1 
U3c69: SIGEVENT( , 0x000000b2) SEQW UEND2
U3c6a: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U0e05

U3c6c: tmp14:= SAVEUIP(0x01, U0e05) !m0 
U3c6d: SAVEUIP( , 0x00, U5cc9) 
U3c6e: NOP 

U3c70: TESTUSTATE( , UCODE, 0x0080) ? SEQW GOTO U404a
U3c71: NOP SEQW URET0
FUN_ucode_0003c72:
U3c72: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000001, 0x289) !m1,m2 

U3c74: LFNCEWTMRK-> tmpv1:= MOVEFROMCREG_DSZ64( , 0x289, 32) !m1 
U3c75: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000000, U3c76) !m1,m2 SEQW GOTO U3c74
U3c76: tmpv1:= MOVEFROMCREG_DSZ64( , 0x39e, 32) !m1 

U3c78: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
U3c79: tmpv0:= AND_DSZ32(0x000000fe, tmpv1) 
U3c7a: tmpv0:= OR_DSZ32(0x00000001, tmpv0) 

U3c7c: tmpv1:= BT_DSZ32(tmpv1, 0x00000008) 
U3c7d: tmpv0:= MOVEMERGEFLGS_DSZ64(tmpv0, tmpv1) 
U3c7e: tmpv1:= BT_DSZ32(tmpv1, 0x00000016) SEQW URET1

U3c80: SYNCWAIT-> tmp8:= unk_cc6(rsi, tmp1) !m0 
U3c81: tmp8:= unk_c8e(rdi, tmp1) !m0 
U3c82: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, IMM_MACRO_01) !m0 

U3c84: tmp8:= unk_cc6(rsi, tmp1) !m0 
U3c85: tmp8:= unk_c8e(rdi, tmp1) !m0 
U3c86: MSLOOP-> tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U1a58

U3c88: tmp15:= SUB_DSZN(tmp4) !m1 
U3c89: tmp15:= SHL_DSZ32(tmp15, 0x00000004) SEQW GOTO U1a62
U3c8a: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x221, 32) !m1 

U3c8c: tmp12:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
U3c8d: tmp12:= AND_DSZ32(0x00000070, tmp12) 
U3c8e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp12, U1975) 

U3c90: tmp0:= SHR_DSZ32(tmp11, 0x00000010) 
U3c91: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U3c92: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000006, U619d) !m0,m1 

U3c94: tmp0:= AND_DSZ32(0x00000007, tmp11) 
U3c95: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000003, U619d) !m0,m1 
U3c96: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U3c98) SEQW SAVEUIP1 U3c98SEQW GOTO U18d0

U3c98: SAVEUIP( , 0x01, U619d) !m0 SEQW GOTO U0a95
U3c99: mm0:= unk_7ea(0x00000000) 
U3c9a: tmm3:= unk_624(0x00000000) 

U3c9c: tmp1:= PINTMOVDTMM2I_DSZ32(tmm3) 
U3c9d: tmp1:= AND_DSZ32(0x00000004, tmp1) 
U3c9e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U249d) 

U3ca0: tmp1:= SUB_DSZ32(0x0001003e, tmp0) 
U3ca1: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp1, U58f2) 
U3ca2: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U3ca4: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U3ca5: LFNCEMARK-> tmp4:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000020, 0x48c) !m2 
U3ca6: tmp1:= AND_DSZ32(0x00000020, tmp5) 

U3ca8: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3ca9) SEQW GOTO U3cac
U3ca9: tmp1:= OR_DSZ16(0x00008080, tmp4) 
U3caa: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x48c) 

U3cac: tmp1:= SUB_DSZ32(0x0000ffbb, tmp0) 
U3cad: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U249d) 
U3cae: tmp9:= unk_6a0() 

U3cb0: tmp10:= unk_6a0() 
U3cb1: tmm0:= unk_6a7(tmm1, tmm0) 
U3cb2: mm2:= unk_76a(tmm0) 

U3cb4: tmm0:= unk_69d( , tmm0) 
U3cb5: tmp15:= FCOM2(tmp10, tmp8) 
U3cb6: tmp1:= SHR_DSZ32(tmp8, 0x00000002) 

U3cb8: tmp1:= AND_DSZ32(0x00000001, tmp1) 
U3cb9: tmp2:= ADD_DSZ32(tmp1, tmp2) 
U3cba: SAVEUIP( , 0x00, U6ce4) 

FUN_ucode_0003cbc:
U3cbc: tmp9:= unk_6a0() 
U3cbd: tmm1:= unk_6c9(tmm0, tmm1) 
U3cbe: tmm2:= unk_57f(tmm7, tmm0) 

U3cc0: tmm0:= unk_487(tmm2, tmm1) 
U3cc1: mm1:= unk_76a(tmm7) 
U3cc2: tmp0:= SHR_DSZ32(tmp1, 0x00000003) 

U3cc4: tmp1:= OR_DSZ32(tmp1, tmp0) 
U3cc5: tmp1:= AND_DSZ32(0x00000001, tmp1) 
U3cc6: tmp2:= ADD_DSZ32(tmp1, tmp2) SEQW URET0

U3cc8: tmp1:= LDZX_DSZN_ASZ32_SC1(rdi, mode=0x08) !m1 
U3cc9: tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 
U3cca: tmp4:= SUB_DSZN(0x00000001, tmp4) !m1 

U3ccc: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 
U3ccd: rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 
U3cce: MSLOOP-> tmp10:= SUB_DSZN(tmp1, tmp0) !m1 

U3cd0: UJMPCC_DIRECT_TAKEN_CONDZ(tmp10, U0464) 
U3cd1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U0464) SEQW GOTO U3cc8
U3cd2: LFNCEMARK-> unk_e7b(tmp0, tmp2) 

U3cd4: tmp2:= RDSEGFLD(TSS, SEL) 
U3cd5: tmp7:= NOTAND_DSZ32(0x00000007, tmp2) 
U3cd6: tmp0:= unk_d6a(tmp7) !m2 

U3cd8: tmp0:= BTR_DSZ64(tmp0, 0x00000029) 
U3cd9: unk_d68(tmp7,  , tmp0) !m2 
U3cda: LFNCEWAIT-> tmp5:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) 

U3cdc: WRSEGFLD(tmp5, TSS, SEL+FLGS+LIM) 
U3cdd: tmp5:= RDSEGFLD(UNK_SEG_04, BASE) 
U3cde: LFNCEMARK-> WRSEGFLD(tmp5, TSS, BASE) 

U3ce0: LFNCEWAIT-> tmp5:= ZEROEXT_DSZ32() SEQW GOTO U11b2
U3ce1: tmp13:= SHR_DSZ32(tmp10, 0x00000003) 
U3ce2: tmp13:= AND_DSZ32(0x00000078, tmp13) 

U3ce4: tmp13:= OR_DSZ32(0x00523700, tmp13) 
U3ce5: tmp14:= SELECTCC_DSZ32_CONDB(tmp8, 0x00000080) 
U3ce6: tmp13:= OR_DSZ32(tmp13, tmp14) 

U3ce8: tmp2:= AND_DSZ32(0x0000003f, tmp10) 
U3ce9: tmp2:= OR_DSZ32(tmp1, tmp2) 
U3cea: tmp2:= UFLOWCTRL(tmp2, tmp2, USTATE) 

U3cec: UFLOWCTRL(tmp2, tmp13, URET0) 
U3ced: tmp1:= AND_DSZ32(0x00000004, tmp10) 
U3cee: tmp1:= SHL_DSZ64(tmp1, 0x00000021) 

U3cf0: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp1, 0x752) 
U3cf1: tmp14:= SHR_DSZ32(tmp10, 0x00000016) 
U3cf2: tmp14:= AND_DSZ32(0x000003fc, tmp14) 

U3cf4: tmp14:= OR_DSZ32(0x00523000, tmp14) 
U3cf5: SYNCWTMRK-> UFLOWCTRL(tmp2, tmp14, URET1) 
U3cf6: tmp2:= AND_DSZ32(0x3ffff000, tmp8) 

U3cf8: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2711) 
U3cf9: tmp10:= SHR_DSZ32(tmp10, 0x0000000a) 
U3cfa: tmp12:= OR_DSZ32(0x0000c000, tmp8) 

U3cfc: tmp12:= MSR2CR( , tmp12) 
U3cfd: tmp2:= OR_DSZ32(0x00014000, tmp8) 
U3cfe: tmp2:= MSR2CR( , tmp2) 

U3d00: tmp12:= CONCAT_DSZ32(tmp2, tmp12) 
U3d01: tmp1:= ZEROEXT_DSZ32(0x00100408) 
U3d02: tmp1:= CONCAT_DSZ32(0x90810200, tmp1) 

U3d04: tmp3:= READURAM( , 0x0035, 64) 
U3d05: tmp3:= AND_DSZ64(tmp1, tmp3) 
U3d06: tmp1:= ZEROEXT_DSZ32(0x020b8000) 

U3d08: tmp1:= CONCAT_DSZ32(0x003c491c, tmp1) 
U3d09: tmp2:= READURAM( , 0x0077, 64) 
U3d0a: tmp1:= AND_DSZ64(tmp1, tmp2) 

U3d0c: tmp2:= BTR_DSZ64(tmp1, 0x00000023) 
U3d0d: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U3d16
U3d0e: tmp2:= BTC_DSZ64(tmp1, 0x00000023) 

U3d10: tmp1:= READURAM( , 0x0023, 64) 
U3d11: tmp1:= AND_DSZ32(0x00000040, tmp1) 
U3d12: tmp3:= OR_DSZ64(tmp1, tmp3) 

U3d14: TESTUSTATE( , UCODE, 0x0800) ? SEQW GOTO U3d16
U3d15: tmp3:= BTS_DSZ64(tmp3, 0x0000003d) 
U3d16: tmp3:= OR_DSZ64(tmp2, tmp3) 

U3d18: tmp3:= XOR_DSZ64(0x00020008, tmp3) 
U3d19: tmp2:= AND_DSZ32(0x00003fff, tmp10) 
U3d1a: tmp2:= SHL_DSZ32(tmp2, 0x00000002) SEQW URET0

U3d1c: tmp12:= READURAM( , 0x0056, 64) 
U3d1d: tmp7:= ADD_DSZ64(0x00000001, tmp12) 
U3d1e: TESTUSTATE( , SYS, !UST_VMX_DIS | UST_USER_MODE | UST_SMM | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U52d8

U3d20: tmp4:= ADD_DSZ32(tmp8, 0x00000003) 
U3d21: tmp13:= SAVEUIP(0x00, U52d8) 
U3d22: TESTUSTATE( , SYS, UST_VMX_DIS | UST_VMX_OP_DIS) !m1 ? SEQW GOTO U2769

U3d24: SAVEUIP_REGOVR(0x01, U3d25, 0x0064) !m0 
U3d25: SAVEUIP( , 0x01, U5f2e) !m0 SEQW GOTO U1d02
U3d26: LFNCEMARK-> LBSYNC(0x00000001) 

U3d28: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000002, U3d29) !m0,m1,m2 SEQW GOTO U4566
U3d29: tmp15:= unk_d61(tmp2) !m2 
U3d2a: SAVEUIP_REGOVR(0x01, U3d2c, 0x0006) !m0 

FUN_ucode_0003d2c:
U3d2c: tmp0:= SUB_DSZ64(tmp0, tmp15) 
U3d2d: tmp0:= SETCC_CONDZ(tmp0) 
U3d2e: tmp0:= SHL_DSZ64(tmp0, 0x00000028) 

U3d30: tmp0:= OR_DSZ64(tmp0, tmp15) 
U3d31: tmp15:= READURAM( , 0x000c, 64) 
U3d32: MOVETOCREG_DSZ64(tmp15, 0x001) !m2 

U3d34: tmp15:= AND_DSZ16(0xfffffffffffffff8, tmp2) 
U3d35: unk_d68(tmp15,  , tmp0) !m2 SEQW GOTO U2dc4
ldat_read_arr6:
U3d36: tmp8:= ZEROEXT_DSZ32(0x00030600) 

U3d38: MOVETOCREG_DSZ64(tmp8, 0x6a1) !m2 
U3d39: tmp8:= SHR_DSZ64(tmp14, 0x00000030) 
U3d3a: tmp8:= SUB_DSZ32(0x00007c00, tmp8) 

U3d3c: tmp8:= MOVETOCREG_DSZ64(tmp8, 0x6a0) !m2 
U3d3d: tmp12:= SHR_DSZ32(tmp14, 0x00000010) 
U3d3e: SYNCMARK-> UFLOWCTRL( , tmp12, MSLOOPCTR) 

U3d40: tmp13:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp14) 
U3d41: tmp8:= UFLOWCTRL(tmp8, tmp13, LDAT_IN) 
U3d42: tmp14:= ADD_DSZ16(0x00000020, tmp14) 

U3d44: SYNCWAIT-> tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U3d40
U3d45: tmp14:= SHR_DSZ64(tmp14, 0x00000020) 
U3d46: UJMP( , tmp14) 

U3d48: tmp6:= ZEROEXT_DSZ32(0x00010008) 
U3d49: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U3404
U3d4a: tmp5:= MOVE_DSZ64(rsp, rsp) !m1 

U3d4c: rsp:= ADD_DSZN(tmp9, rsp) !m1 
U3d4d: tmp2:= LDZX_DSZ16_ASZ32_SC1(rsp, SS, IMM_MACRO_ALIAS_DATASIZE, mode=0x0a) !m0 
U3d4e: LFNCEMARK-> rsp:= LDZX_DSZN_ASZ32_SC1(rsp, SS, mode=0x0a) !m1 

U3d50: LFNCEMARK-> MOVETOCREG_DSZ64(tmp11, 0x79e) !m2 
U3d51: tmp14:= SAVEUIP(0x01, U398e) !m0 SEQW GOTO U2bd9
patch_handle_0x10_mailboxes:
U3d52: tmp1:= ZEROEXT_DSZ32(0x00000005) 

U3d54: tmp2:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp4) 
U3d55: SAVEUIP_REGOVR(0x01, U3d56, 0x0321) !m0 SEQW GOTO U5c62
U3d56: tmp5:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 

U3d58: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000002) 
U3d59: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000006) 
U3d5a: tmp5:= AND_DSZ32(tmp2, tmp5) 

U3d5c: tmp5:= OR_DSZ32(tmp3, tmp5) 
U3d5d: tmp1:= ZEROEXT_DSZ32(0x00000007) 
U3d5e: SAVEUIP_REGOVR(0x01, U3d60, 0x0351) !m0 SEQW GOTO U5c62

U3d60: tmp4:= ADD_DSZ32(0x0000000a, tmp4) 
U3d61: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U3d52
U3d62: NOP 

U3d64: NOP SEQW GOTO U1ea6
U3d65: tmp3:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U3d66: tmp3:= ADD_DSZN(tmp3, tmp4) !m1 

U3d68: tmp14:= BT_DSZ32(tmp14, 0x00000013) 
U3d69: tmp11:= READURAM( , 0x006e, 64) 
U3d6a: tmp11:= MOVEMERGEFLGS_DSZ64(tmp11, tmp14) 

U3d6c: tmp3:= CMOVCC_DSZ64_CONDB(tmp11, tmp3) 
U3d6d: tmp14:= BT_DSZ32(tmp14, 0x00000018) 
U3d6e: tmp11:= READURAM( , 0x004a, 64) 

U3d70: tmp11:= MOVEMERGEFLGS_DSZ64(tmp11, tmp14) 
U3d71: tmp3:= CMOVCC_DSZ64_CONDB(tmp11, tmp3) 
U3d72: tmp0:= SUB_DSZ32(0x00000003, tmp2) 

U3d74: tmp11:= MOVEFROMCREG_DSZ64( , 0x065) 
U3d75: tmp11:= SELECTCC_DSZ32_CONDNZ(tmp0, tmp11) 
U3d76: tmp3:= SUB_DSZN(tmp11, tmp3) !m1 

U3d78: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp3, 0x71a) 
U3d79: WRITEURAM(tmp3, 0x003f, 64) 
U3d7a: MOVETOCREG_DSZ64(tmp7, 0x00b) 

U3d7c: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3d89
U3d7d: tmp1:= CONCAT_DSZ32(tmp13, tmp1) 
U3d7e: WRITEURAM(tmp1, 0x0046, 64) 

U3d80: tmp14:= MOVETOCREG_BTS_DSZ64(tmp14, 0x00000015, 0x000) 
U3d81: tmp0:= CONCAT_DSZ32(tmp9, tmp12) 
U3d82: WRITEURAM(tmp0, 0x0009, 64) 

U3d84: tmp0:= MOVEFROMCREG_DSZ64( , 0x01d) 
U3d85: tmp0:= AND_DSZ32(0x00000008, tmp0) 
U3d86: tmp0:= SHL_DSZ32(tmp0, 0x00000005) 

U3d88: MOVETOCREG_DSZ64(tmp0, 0x070) 
U3d89: tmp0:= ZEROEXT_DSZ32(0x00000004) 
U3d8a: tmp0:= unk_204(tmp0, 0x00000003) 

U3d8c: MOVETOCREG_OR_DSZ64( , 0x0000000c, 0x005) 
U3d8d: tmp3:= READURAM( , 0x001f, 64) 
U3d8e: tmp3:= NOTAND_DSZ32(0x00000007, tmp3) 

U3d90: WRITEURAM(tmp3, 0x001f, 32) 
U3d91: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U3d94
U3d92: SYNCMARK-> MOVETOCREG_BTR_DSZ64(tmp10, 0x00000011, 0x7fe) 

U3d94: tmp1:= SHL_DSZ32(tmp2, tmp0) 
U3d95: tmp1:= ZEROEXT_DSZ16(tmp1) 
U3d96: tmp2:= SHL_DSZ32(tmp2, 0x00000003) 

U3d98: tmp2:= ZEROEXT_DSZ16(tmp2) 
U3d99: SYNCWAIT-> tmp0:= unk_d61(tmp1) 
U3d9a: tmp11:= SHR_DSZ64(tmp0, 0x0000002d) 

U3d9c: tmp11:= AND_DSZ32(0x00000003, tmp11) 
U3d9d: tmp11:= SUB_DSZ32(tmp8, tmp11) 
U3d9e: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp11, U07fe) 

U3da0: tmp13:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U3da1: tmp7:= SHR_DSZ64(tmp13, 0x0000002f) 
U3da2: tmp13:= SHL_DSZ32(tmp13, 0x00000008) 

U3da4: tmp7:= AND_DSZ32(tmp7, tmp13) 
U3da5: tmp7:= AND_DSZ32(0x00000008, tmp7) 
U3da6: tmp13:= NOTAND_DSZ32(tmp7, 0x00034100) 

U3da8: tmp7:= NOTAND_DSZ32(tmp13, tmp10) 
U3da9: tmp14:= BTR_DSZ32(tmp14, 0x0000000e) 
U3daa: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U63b0

U3dac: unk_e7b(tmp0, tmp1) !m1,m2 
U3dad: LFNCEMARK-> tmp3:= unk_d61(tmp1) SEQW GOTO U63b5
U3dae: WRITEURAM(tmp10, 0x004f, 64) !m2 

U3db0: tmp15:= ZEROEXT_DSZ32(0x00002851) 
U3db1: WRITEURAM(tmp15, 0x002c, 32) !m2 
U3db2: tmp5:= READURAM( , 0x0009, 64) 

U3db4: WRITEURAM(tmp3, 0x004e, 64) !m2 
U3db5: SYNCMARK-> tmp15:= MOVEFROMCREG_DSZ64( , 0x6c5) 
U3db6: tmp15:= CONCAT_DSZ32(tmp15, tmp8) 

U3db8: WRITEURAM(tmp15, 0x0047, 64) !m2 
U3db9: tmp0:= MOVEMERGEFLGS_DSZ64(tmp7, tmp12) 
U3dba: tmp14:= ZEROEXT_DSZ32(0x00006189) 

U3dbc: tmm7:= unk_5ba(tmm1, tmm2) 
U3dbd: SYNCWAIT-> tmm6:= unk_5ba(tmm0, tmm4) 
U3dbe: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U2d95

U3dc0: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x6c5) 
U3dc1: NOP SEQW GOTO U2d95
U3dc2: MOVE_DSZ32() 

U3dc4: WRITEURAM(tmp14, 0x0047, 32) !m2 
U3dc5: WRITEURAM(tmp14, 0x0007, 32) !m2 
U3dc6: SAVEUIP_REGOVR(0x01, U3dc8, 0x0008) !m0 SEQW GOTO U32cd

U3dc8: tmp2:= READURAM( , 0x005c, 64) 
U3dc9: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000010, U6eec) !m1 
U3dca: SAVEUIP_REGOVR(0x01, U3dcc, 0x0008) !m0 SEQW GOTO U2b15

U3dcc: tmp2:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 
U3dcd: tmp2:= AND_DSZ32(0x0000008a, tmp2) 
U3dce: LFNCEMARK-> MOVETOCREG_DSZ64(tmp2, 0x38f, 32) !m1 

U3dd0: LFNCEWAIT-> tmp8:= MOVEFROMCREG_DSZ64( , 0x281, 32) !m1 
U3dd1: tmp8:= OR_DSZ32(0x000f0000, tmp8) 
U3dd2: NOP 

U3dd4: SYNCFULL-> MOVETOCREG_DSZ64(tmp8, 0x281, 32) !m1 
U3dd5: tmp14:= ZEROEXT_DSZ32(0x00006ec4) SEQW GOTO U205c
U3dd6: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 

U3dd8: tmp1:= BTS_DSZ32(tmp1, 0x00000008) 
U3dd9: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp1, 0x0000001f, 0x29d) !m0,m1 
U3dda: tmp8:= TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U3de0

U3ddc: tmp0:= ZEROEXT_DSZ32(0x00000001) SEQW SAVEUIP0 U3dddSEQW GOTO U60aa
U3ddd: tmp7:= AND_DSZ32(0x00ff0000, tmp7) 
U3dde: tmp8:= SELECTCC_DSZ32_CONDZ(tmp7, 0x000f0000) 

U3de0: tmp0:= ZEROEXT_DSZ32(0x00000008) 
U3de1: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U3de2: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000009, U27b4) !m1 

U3de4: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U3de1) !m1,m2 
U3de5: tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 
U3de6: tmp2:= OR_DSZ32(tmp8, tmp2) 

U3de8: tmp10:= AND_DSZ32(0x000f0000, tmp2) 
U3de9: tmp14:= ZEROEXT_DSZ32(0x000061e6) SEQW GOTO U3dc2
U3dea: LFNCEMARK-> LBSYNC(0x00000002) 

U3dec: LFNCEWAIT-> FETCHFROMEIP1_ASZ64( , tmp3) !m1 
U3ded: tmp4:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U3dee: WRSEGFLD(tmp4, CS, SEL+FLGS+LIM) 

U3df0: tmp4:= RDSEGFLD(UNK_SEG_09, BASE) 
U3df1: WRSEGFLD(tmp4, CS, BASE) 
U3df2: tmp4:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 

U3df4: WRSEGFLD(tmp4, SS, SEL+FLGS+LIM) 
U3df5: tmp4:= RDSEGFLD(SS_USERM, BASE) 
U3df6: WRSEGFLD(tmp4, SS, BASE) 

U3df8: rsp:= ZEROEXT_DSZ64N(rsp) !m1 
U3df9: MSSTOP-> MJMPTARGET_INDIRECT_ASZ64( , tmp3) !m1 
check_cpl_uend3:
U3dfa: tmp0:= PSELECT_CPL0( , 0x00000001) 

U3dfc: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U06e6) 
U3dfd: LFNCEWAIT-> NOP SEQW UEND3
U3dfe: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U1bb9

U3e00: tmp14:= SAVEUIP(0x01, U1bb8) !m0 
U3e01: TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U406c
U3e02: tmp9:= SHR_DSZ64(tmp6, 0x00000010) 

U3e04: tmp9:= AND_DSZ64(0x00000fff, tmp9) 
U3e05: tmp8:= ADD_DSZN(tmp11, tmp9) !m1 SEQW GOTO U5ce5
U3e06: LFNCEWAIT-> tmp5:= ZEROEXT_DSZ64(tmp5) 

U3e08: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x06d) !m0,m2 
U3e09: NOP 
U3e0a: NOP 

U3e0c: LFNCEWAIT-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000003, U5b24) !m0,m2 
U3e0d: MOVETOCREG_DSZ64(tmp2, 0x070) !m2 
U3e0e: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000002, U1816) !m0,m2 

U3e10: tmp9:= BT_DSZ32(tmp7, 0x0000000e) 
U3e11: tmp9:= SELECTCC_DSZ32_CONDNB(tmp9, 0x00000001) 
U3e12: LFNCEMARK-> tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x0000000c, 0x01c) !m2 

U3e14: tmp7:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00000004) 
U3e15: MOVETOCREG_OR_DSZ64(tmp7, 0x070, tmp9) !m2 
U3e16: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000001, U688d) !m1 

U3e18: tmp9:= ZEROEXT_DSZ32() 
U3e19: tmp7:= ZEROEXT_DSZ32() 
U3e1a: UJMP( , tmp13) 

U3e1c: tmp15:= OR_DSZ32(0x00000010) 
U3e1d: tmp6:= OR_DSZ32() 
U3e1e: tmp1:= SHL_DSZ32(tmp6, 0x00000005) 

U3e20: tmp1:= OR_DSZ32(tmp15, tmp1) 
U3e21: tmp1:= SHL_DSZ32(tmp1, 0x0000000f) 
U3e22: SAVEUIP_REGOVR(0x01, U3e24, 0x0002) !m0 SEQW GOTO U32cd

U3e24: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp1, 0x00000007, 0x3a5) !m0,m1,m2 
U3e25: tmp2:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 
U3e26: UJMP( , tmp13) 

U3e28: tmp2:= PINTMOVDTMM2I_DSZ32(tmm4) 
U3e29: tmp2:= AND_DSZ32(0x0000003f, tmp2) 
U3e2a: tmm1:= unk_624(tmm3, tmm3) 

U3e2c: tmp3:= PINTMOVDTMM2I_DSZ32(tmm1) 
U3e2d: tmp3:= AND_DSZ32(0x0000003f, tmp3) 
U3e2e: tmp5:= SHL_DSZ32(tmp3, 0x00000006) 

U3e30: tmp5:= OR_DSZ32(tmp2, tmp5) 
U3e31: SAVEUIP( , 0x01, U1948) !m0 
U3e32: UJMP( , tmp4) 

U3e34: tmp1:= CONCAT_DSZ8(0x00000004, tmp2) 
U3e35: tmp8:= MOVEFROMCREG_DSZ64( , 0x79e) 
U3e36: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U3e38: tmp10:= READAFLAGS( , tmp10) !m2 
U3e39: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U3e3a: tmp9:= MOVE_DSZ32(tmp10) 

U3e3c: tmp7:= ZEROEXT_DSZ32(0x00000021) 
U3e3d: tmp14:= MOVETOCREG_DSZ64(0x00000009, 0x000) 
U3e3e: SAVEUIP_REGOVR( , 0x01, U3e40, 0xcb30) !m0 SEQW GOTO U371a

U3e40: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) SEQW GOTO U268a
U3e41: tmp8:= SHL_DSZ32(tmp0, 0x00000003) 
U3e42: tmm0:= unk_496(0x00000000) 

U3e44: mm0:= unk_7ea(0x00000000) 
U3e45: tmm3:= unk_624(0x00000000) 
U3e46: tmp1:= PINTMOVDTMM2I_DSZ32(tmm3) 

U3e48: tmp1:= AND_DSZ32(0x00000004, tmp1) 
U3e49: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U57fa) 
U3e4a: tmp1:= SUB_DSZ32(0x0001003e, tmp0) 

U3e4c: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp1, U58f2) 
U3e4d: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 
U3e4e: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 

U3e50: LFNCEMARK-> tmp4:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000020, 0x48c) !m2 
U3e51: tmp1:= AND_DSZ32(0x00000020, tmp5) 
U3e52: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3e54) SEQW GOTO U3e56

U3e54: tmp1:= OR_DSZ16(0x00008080, tmp4) 
U3e55: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x48c) 
U3e56: tmp1:= SUB_DSZ32(0x0000ffbb, tmp0) 

U3e58: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U57fa) 
U3e59: tmp9:= unk_6a0() 
U3e5a: tmp10:= unk_6a0() 

U3e5c: tmm0:= unk_6a7(tmm1, tmm0) 
U3e5d: mm2:= unk_76a(tmm0) 
U3e5e: tmm0:= unk_69d( , tmm0) 

U3e60: ROVR<- tmp15:= FCOM2(tmp10, tmp8) SEQW SAVEUIP0 U3e61SEQW GOTO U3cbc
U3e61: tmm2:= unk_6e1(tmm0, tmm0) 
U3e62: tmp2:= AND_DSZ32(0x00000003, tmp2) 

U3e64: tmp8:= OR_DSZ32(tmp2, tmp8) 
U3e65: mm1:= unk_72a(tmm0) 
U3e66: tmp1:= SHL_DSZ32(tmp1, 0x00000004) 

U3e68: tmp8:= OR_DSZ32(tmp1, tmp8) 
U3e69: mm0:= unk_7ea(tmm0) 
U3e6a: tmp11:= SUB_DSZ32(0x0000fffd, tmp0) 

U3e6c: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp11, U3e6d) SEQW GOTO U643d
U3e6d: tmp12:= unk_6a0() 
U3e6e: tmp11:= unk_6a0() 

U3e70: tmm5:= unk_6e1(tmm2, tmm4) 
U3e71: tmp12:= unk_6a0() 
U3e72: tmm6:= unk_6e1(tmm2, tmm3) 

U3e74: tmm5:= unk_649(tmm4, tmm5) 
U3e75: tmp11:= unk_6a0() 
U3e76: tmm6:= unk_649(tmm3, tmm6) 

U3e78: tmm5:= unk_6e1(tmm2, tmm5) 
U3e79: tmp12:= unk_6a0() 
U3e7a: tmm6:= unk_6e1(tmm2, tmm6) 

U3e7c: tmm5:= unk_649(tmm4, tmm5) 
U3e7d: tmp11:= unk_6a0() 
U3e7e: tmm6:= unk_649(tmm3, tmm6) 

U3e80: tmm5:= unk_6e1(tmm2, tmm5) 
U3e81: tmp12:= unk_6a0() 
U3e82: tmm6:= unk_6e1(tmm2, tmm6) 

U3e84: tmm5:= unk_649(tmm4, tmm5) 
U3e85: tmp11:= unk_6a0() 
U3e86: tmm6:= unk_649(tmm3, tmm6) 

U3e88: tmm5:= unk_6e1(tmm2, tmm5) 
U3e89: tmp12:= unk_6a0() 
U3e8a: tmm6:= unk_6e1(tmm2, tmm6) 

U3e8c: tmm5:= unk_649(tmm4, tmm5) 
U3e8d: tmp11:= unk_6a0() 
U3e8e: tmm6:= unk_649(tmm3, tmm6) 

U3e90: tmm5:= unk_6e1(tmm2, tmm5) 
U3e91: tmp12:= unk_6a0() 
U3e92: tmm6:= unk_6e1(tmm2, tmm6) 

U3e94: tmm5:= unk_649(tmm4, tmm5) 
U3e95: tmp11:= unk_6a0() 
U3e96: tmm6:= unk_649(tmm3, tmm6) 

U3e98: tmm5:= unk_661(tmm2, tmm5) 
U3e99: tmm6:= unk_6e1(tmm2, tmm6) 
U3e9a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U3e9c) SEQW GOTO U649e

U3e9c: tmp9:= unk_6a0() 
U3e9d: tmm5:= unk_6e1(tmm0, tmm5) 
U3e9e: tmm6:= unk_6c9(tmm1, tmm6) 

U3ea0: tmm5:= unk_6c9(tmm0, tmm5) 
U3ea1: tmp9:= unk_6a0() 
U3ea2: mm7:= FMOV( , tmm1) !m0 

U3ea4: tmp1:= AND_DSZ32(0x00000001, tmp8) 
U3ea5: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U059c) 
U3ea6: tmm5:= unk_496(tmm5, 0x00000000) 

U3ea8: mm0:= unk_6a6(tmm6, tmm5) !m0,m2 SEQW GOTO U17ec
U3ea9: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U3eaa: PORTOUT_DSZ32_ASZ16_SC1(0x005c,  , tmp15) !m2 

U3eac: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x005c) !m2 
U3ead: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U3eac) !m1,m2 
U3eae: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U3eb0: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3eb1) !m0,m1,m2 SEQW GOTO U3eae
U3eb1: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U3eb2: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U3eb4: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U3eb5: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3eb6: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U3eb8: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3eb9: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3eba) !m0,m1,m2 SEQW GOTO U3eb8
U3eba: tmp15:= SHR_DSZ64(tmpv0, 0x00000030) 

U3ebc: tmp15:= CONCAT_DSZ8(0x00000006, tmp15) 
U3ebd: tmp15:= CONCAT_DSZ16(0x000001c0, tmp15) 
U3ebe: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U3ec0: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U3ec1: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3ec2: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U3ec4: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3ec5: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3ec6) !m0,m1,m2 SEQW GOTO U3ec4
U3ec6: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 

U3ec8: tmp15:= ADD_DSZ32(0x00000004, tmp15) 
U3ec9: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U3eca: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U3ecc: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3ecd: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U3ece: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U3ed0: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3ed1) !m0,m1,m2 SEQW GOTO U3ece
U3ed1: tmp15:= ZEROEXT_DSZ64(tmpv0) 
U3ed2: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 

U3ed4: tmp15:= ROR_DSZ32(tmp15, 0x00000010) 
U3ed5: tmp15:= OR_DSZ32(0x000000ff, tmp15) 
U3ed6: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U3ed8: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U3ed9: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3eda: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U3edc: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3edd: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3ede) !m0,m1,m2 SEQW GOTO U3edc
U3ede: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 

U3ee0: tmp15:= ADD_DSZ32(0x00000008, tmp15) 
U3ee1: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U3ee2: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U3ee4: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3ee5: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U3ee6: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U3ee8: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3ee9) !m0,m1,m2 SEQW GOTO U3ee6
U3ee9: tmp15:= ZEROEXT_DSZ32(tmpv0) 
U3eea: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U3eec: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U3eed: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3eee: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U3ef0: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3ef1: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3ef2) !m0,m1,m2 SEQW GOTO U3ef0
U3ef2: tmp15:= ZEROEXT_DSZ32() 

U3ef4: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U3ef5: tmp15:= ZEROEXT_DSZ32(0x00000019) 
U3ef6: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 

U3ef8: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U3ef9: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3efa: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3efc) !m0,m1,m2 SEQW GOTO U3ef9

U3efc: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U3efd: tmp15:= ADD_DSZ32(0x0000000c, tmp15) 
U3efe: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U3f00: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U3f01: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3f02: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U3f04: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3f05: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3f06) !m0,m1,m2 SEQW GOTO U3f04
U3f06: tmpv1:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 

U3f08: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U3f09: tmp15:= ADD_DSZ32(0x00000010, tmp15) 
U3f0a: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U3f0c: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U3f0d: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U3f0e: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U3f10: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U3f11: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U3f12) !m0,m1,m2 SEQW GOTO U3f10
U3f12: tmpv2:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 

U3f14: SYNCFULL-> tmpv1:= CONCAT_DSZ32(tmpv2, tmpv1) SEQW URET1
U3f15: tmp5:= ZEROEXT_DSZ32(0x00003f18) 
U3f16: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4798

U3f18: TESTUSTATE( , UCODE, !0x3000) !m0 ? SEQW GOTO U24c9
U3f19: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U3f1a: tmp10:= READAFLAGS( , tmp10) !m2 

U3f1c: tmp1:= READURAM( , 0x0070, 64) 
U3f1d: tmp1:= BT_DSZ64(tmp1, 0x00000032) 
U3f1e: tmp0:= MOVEFROMCREG_DSZ64( , 0x01d) 

U3f20: tmp1:= SELECTCC_DSZ32_CONDB(tmp1, tmp0) 
U3f21: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000002, U3f22) !m0,m1,m2 SEQW GOTO U5789
U3f22: tmp0:= ZEROEXT_DSZ32(0x00002008) 

U3f24: tmp2:= ZEROEXT_DSZ32(0x00000016) 
U3f25: SAVEUIP_REGOVR(0x01, U3f26, 0x00e2) !m0 
U3f26: SAVEUIP( , 0x01, U079d) !m0 SEQW GOTO U1d8e

U3f28: tmp0:= CONCAT_DSZ16(0x0000000e) 
U3f29: MOVETOCREG_DSZ64(tmp0, 0x2dd, 32) !m1 
U3f2a: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f6) 

U3f2c: WRITEURAM(tmp0, 0x004a, 32) 
U3f2d: tmp0:= NOTAND_DSZ32(0x60000000, tmp0) 
U3f2e: MOVETOCREG_DSZ64(tmp0, 0x7f6) 

U3f30: tmp14:= MOVEFROMCREG_DSZ64( , 0x51b) 
U3f31: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp14, 0x00000001, 0x51b) 
U3f32: tmp14:= ZEROEXT_DSZ16(0x00001000, tmp14) SEQW SAVEUIP1 U3f34SEQW GOTO U043c

U3f34: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, 0x6c5) SEQW GOTO U6f7c
U3f35: STADPPHYS_DSZ64_ASZ64_SC1(0x00000200, mode=0x18, tmp11, tmp5) 
U3f36: tmp7:= ZEROEXT_DSZ32(0x00001f80) 

U3f38: SAVEUIP( , 0x01, U2652) !m0 SEQW SAVEUIP0 U3f39SEQW GOTO U5b49
U3f39: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U3f3a: tmp6:= READURAM( , 0x005b, 64) 

U3f3c: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000012, U3f4e) !m0,m1,m2 
U3f3d: tmp15:= SHR_DSZ64(tmp6, 0x00000038) 
U3f3e: tmp15:= NOTAND_DSZ32(tmp15, 0x00000018) 

U3f40: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U3f42) 
U3f41: LFNCEMARK-> SAVEUIP( , 0x00, U406c) SEQW SAVEUIP1 U3f42SEQW GOTO U38b2
U3f42: tmp2:= READURAM( , 0x005b, 64) 

U3f44: tmp15:= CONCAT_DSZ32(0xff000000) 
U3f45: tmp2:= NOTAND_DSZ64(tmp15, tmp2) SEQW SAVEUIP1 U3f46SEQW GOTO U0252
U3f46: LFNCEMARK-> tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000068, mode=0x01, tmp1) 

U3f48: tmp0:= SHL_DSZ64(tmp0, 0x00000038) 
U3f49: tmp2:= OR_DSZ64(tmp0, tmp2) 
U3f4a: WRITEURAM(tmp2, 0x005b, 64) !m2 

U3f4c: tmp2:= XOR_DSZ64(tmp6, tmp0) 
U3f4d: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000003b, U3869) !m0,m1,m2 
U3f4e: rax:= ZEROEXT_DSZ32(0x00000003) SEQW SAVEUIP1 U3f50SEQW GOTO U0252

U3f50: rbx:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000038, mode=0x01, tmp1) 
U3f51: rcx:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000028, mode=0x01, tmp0) 
U3f52: unk_13f() !m2 

U3f54: rbp:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000098, mode=0x01, tmp5) 
U3f55: rsp:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000090, mode=0x01, tmp5) 
U3f56: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000028, mode=0x01, tmp1) 

U3f58: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000030, mode=0x01, tmp1) 
U3f59: LFNCEWAIT-> WRSEGFLD(tmp2, FS, BASE) 
U3f5a: WRSEGFLD(tmp3, FS, SEL+FLGS+LIM) 

U3f5c: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000018, mode=0x01, tmp1) 
U3f5d: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000020, mode=0x01, tmp1) 
U3f5e: WRSEGFLD(tmp2, GS, BASE) 

U3f60: WRSEGFLD(tmp3, GS, SEL+FLGS+LIM) 
U3f61: tmp7:= MOVEFROMCREG_DSZ64( , 0x070) 
U3f62: tmp7:= AND_DSZ32(0x00000020, tmp7) 

U3f64: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x00b) !m2 
U3f65: tmp8:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(0x000000a0, mode=0x01, tmp5) 
U3f66: LFNCEWTMRK-> CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000010, U3f68) !m1,m2 SEQW GOTO U3f6d

U3f68: tmp9:= ZEROEXT_DSZ32(0x0000037e) 
U3f69: MOVETOCREG_DSZ64(tmp9, 0x486) 
U3f6a: tmp9:= ZEROEXT_DSZ32(0x00008081) 

U3f6c: MOVETOCREG_DSZ64(tmp9, 0x48c) 
U3f6d: LFNCEWTMRK-> CMPUJZ_DIRECT_NOTTAKEN(tmp8, 0x00000013, U3f6e) !m0,m1,m2 SEQW GOTO U3f72
U3f6e: tmp9:= ZEROEXT_DSZ32(0x00001f01) 

U3f70: tmm5:= unk_707(tmm1) 
U3f71: tmm6:= unk_691(tmm5) 
U3f72: tmp12:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000018, mode=0x01, tmp0) 

U3f74: tmp12:= ADD_DSZ32(0x00000001, tmp12) 
U3f75: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000018, mode=0x01, tmp0, tmp12) 
U3f76: MOVETOCREG_DSZ64( , 0x00000000, 0x79a) SEQW SAVEUIP1 U3f78SEQW GOTO U043c

U3f78: LFNCEWAIT-> tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000050, mode=0x01, tmp1) 
U3f79: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000078, mode=0x01, tmp1) 
U3f7a: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000088, mode=0x01, tmp5) 

U3f7c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp2, 0x7f8) !m2 
U3f7d: tmp12:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U3f7e: tmp12:= BTR_DSZ32(tmp12, 0x00000010) 

U3f80: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x072) !m2 
U3f81: tmp4:= ZEROEXT_DSZ32(0x00000406) 
U3f82: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(mode=0x01, tmp1) 

U3f84: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U3f85) !m1,m2 SEQW GOTO U3fa2
U3f85: MOVETOCREG_DSZ64(tmp3, 0x7f9, 32) !m1 
U3f86: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000040, mode=0x01, tmp1) 

U3f88: tmp15:= NOTAND_DSZ32(tmp2, 0x00000002) 
U3f89: tmp15:= CONCAT_DSZ16(tmp15, 0x000000c0) 
U3f8a: tmp3:= READURAM( , 0x0070, 64) 

U3f8c: tmp15:= CONCAT_DSZ32(tmp15) 
U3f8d: tmp3:= NOTAND_DSZ64(tmp15, tmp3) 
U3f8e: WRITEURAM(tmp3, 0x0170, 64) !m2 

U3f90: MOVETOCREG_SHR_DSZ64(tmp3, 0x00000020, 0x008) !m2 
U3f91: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000058, mode=0x01, tmp1) 
U3f92: tmp3:= AND_DSZ32(0x00000100, tmp3) 

U3f94: tmp12:= NOTAND_DSZ32(0x00000100, tmp12) 
U3f95: tmp12:= OR_DSZ32(tmp3, tmp12) 
U3f96: tmp3:= READURAM( , 0x0012, 64) 

U3f98: tmp3:= AND_DSZ32(0x80000000, tmp3) 
U3f99: tmp3:= SHR_DSZ32(tmp3, 0x0000001d) 
U3f9a: tmp15:= AND_DSZ32(tmp3, tmp2) 

U3f9c: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000020) 
U3f9d: tmp3:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U3f9e: tmp3:= NOTAND_DSZ32(0x00000020, tmp3) 

U3fa0: MOVETOCREG_OR_DSZ64(tmp3, 0x6c3, tmp15) 
U3fa1: tmp4:= ZEROEXT_DSZ32(0x00000426) 
U3fa2: MOVETOCREG_DSZ64(tmp12, 0x7fe) !m2 

U3fa4: SYNCMARK-> MOVETOCREG_DSZ64(tmp5, 0x71a) !m2 
U3fa5: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x7ef) !m0,m2 
U3fa6: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000054, mode=0x01, tmp1) 

U3fa8: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000028, mode=0x01, tmp0) 
U3fa9: tmp12:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000070, mode=0x01, tmp1) 
U3faa: tmp12:= AND_DSZ32(0x00000001, tmp12) 

U3fac: tmp12:= SELECTCC_DSZ32_CONDZ(tmp12, 0x00000002) 
U3fad: tmp12:= ADD_DSZ32(0x00000c08, tmp12) 
U3fae: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000060, mode=0x01, tmp1) 

U3fb0: tmp10:= ADD_DSZ64(tmp12, tmp10) 
U3fb1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(mode=0x01, tmp0, 0x00000000) 
U3fb2: LFNCEWAIT-> tmp12:= LDPPHYS_DSZ16_ASZ64_SC1(tmp10, mode=0x01) !m2 

U3fb4: tmp12:= SUB_DSZ16(0x00000001, tmp12) 
U3fb5: LFNCEMARK-> STADPPHYS_DSZ16_ASZ64_SC1(tmp10, mode=0x01,  , tmp12) !m2 
U3fb6: tmp2:= MOVEFROMCREG_DSZ64( , 0x01c) !m2 

U3fb8: tmp2:= NOTAND_DSZ32(tmp3, tmp2) 
U3fb9: MOVETOCREG_DSZ64(tmp2, 0x01c) !m2 
U3fba: AETTRACE( , tmp5, 0x0c) 

U3fbc: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x511) 
U3fbd: tmp1:= MOVEFROMCREG_DSZ64( , 0x510) 
U3fbe: tmp2:= MOVEFROMCREG_DSZ64( , 0x518) 

U3fc0: tmp3:= MOVEFROMCREG_DSZ64( , 0x004) 
U3fc1: tmp8:= MOVEFROMCREG_DSZ64( , 0x000) 
U3fc2: tmp14:= ZEROEXT_DSZ32(0x000022c0) 

U3fc4: WRMSLOOPCTRFBR( , 0x00000009) 
U3fc5: SAVEUIP( , 0x00, U04cc) SEQW SAVEUIP1 U3fc6SEQW GOTO U025a
U3fc6: SYNCWAIT-> WRITEURAM( , 0x00000000, 0x0009, 64) 

U3fc8: WRITEURAM( , 0x00000000, 0x000a, 64) 
U3fc9: WRITEURAM( , 0x00000000, 0x000b, 64) 
U3fca: WRITEURAM( , 0x00000000, 0x006e, 64) 

U3fcc: SYNCFULL->MSSTOP-> MJMPTARGET_INDIRECT_ASZ64( , tmp6) !m1 SEQW GOTO U670a
U3fcd: tmm1:= unk_6e1(tmm7, 0x00000000) 
U3fce: tmm2:= unk_661(tmm7, 0x00000000) 

U3fd0: tmm2:= unk_6e1(tmm1, tmm2) 
U3fd1: tmp12:= unk_6a0() 
U3fd2: tmp11:= unk_6a0() 

U3fd4: tmm7:= unk_6e1(tmm2, tmm4) 
U3fd5: tmp12:= unk_6a0() 
U3fd6: tmm6:= unk_6e1(tmm2, tmm3) 

U3fd8: tmm7:= unk_649(tmm4, tmm7) 
U3fd9: tmp11:= unk_6a0() 
U3fda: tmm6:= unk_649(tmm3, tmm6) 

U3fdc: tmm7:= unk_6e1(tmm2, tmm7) 
U3fdd: tmp12:= unk_6a0() 
U3fde: tmm6:= unk_6e1(tmm2, tmm6) 

U3fe0: tmm7:= unk_649(tmm4, tmm7) 
U3fe1: tmp11:= unk_6a0() 
U3fe2: tmm6:= unk_649(tmm3, tmm6) 

U3fe4: tmm7:= unk_6e1(tmm2, tmm7) 
U3fe5: tmp12:= unk_6a0() 
U3fe6: tmm6:= unk_6e1(tmm2, tmm6) 

U3fe8: tmm7:= unk_649(tmm4, tmm7) 
U3fe9: tmp11:= unk_6a0() 
U3fea: tmm6:= unk_649(tmm3, tmm6) 

U3fec: tmm7:= unk_6e1(tmm2, tmm7) 
U3fed: tmp12:= unk_6a0() 
U3fee: tmm6:= unk_6e1(tmm2, tmm6) 

U3ff0: tmm7:= unk_649(tmm4, tmm7) 
U3ff1: tmp11:= unk_6a0() 
U3ff2: tmm6:= unk_649(tmm3, tmm6) 

U3ff4: tmm7:= unk_661(tmm2, tmm7) 
U3ff5: tmm6:= unk_661(tmm2, tmm6) 
U3ff6: tmm7:= unk_6e1(tmm1, tmm7) 

U3ff8: tmm6:= unk_6e1(tmm2, tmm6) 
U3ff9: tmp11:= unk_6a0() 
U3ffa: tmm3:= unk_6e1(tmm2, tmm3) 

U3ffc: tmm7:= unk_649(tmm7, tmm6) 
U3ffd: tmm3:= unk_649(tmm3, tmm7) 
U3ffe: mm0:= unk_689(tmm1, tmm3) !m2 SEQW GOTO U17ec

reset_flow:
U4000: NOP 
U4001: NOP SEQW GOTO U10ce
U4002: LFNCEMARK-> unk_e7b(tmp0, tmp2) !m0 

U4004: LFNCEWAIT-> r64dst:= ZEROEXT_DSZ32N(tmp3, r64dst) !m1 SEQW UEND0
U4005: BTUJB_DIRECT_NOTTAKEN(rbx, 0x00000002, U59fc) !m0,m2 
U4006: rax:= BTR_DSZ32(rax, 0x00000002) SEQW GOTO U59fc

U4008: tmp9:= unk_6a0() 
U4009: tmm3:= FMOV( , tmm1) SEQW GOTO U2281
U400a: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U2b11) 

U400c: LFNCEWAIT-> r64src:= ZEROEXT_DSZ32(tmp2) SEQW GOTO U2b12
U400d: NOP 
U400e: NOP 

U4010: tmp9:= unk_6a0() 
U4011: tmm3:= FMOV( , tmm1) SEQW GOTO U2281
U4012: LFNCEMARK-> tmp0:= READURAM( , 0x0022, 64) !m2 

U4014: LFNCEWAIT-> WRITEURAM(tmp0, 0x0000, 64) !m2 SEQW GOTO U217c
U4015: NOP 
U4016: NOP 

U4018: tmp9:= unk_6a0() 
U4019: tmm1:= unk_494( , tmm1) 
U401a: tmm3:= FMOV( , tmm1) SEQW GOTO U2281

U401c: tmp0:= MOVE_DSZ32(0x00002838) SEQW GOTO U4e82
U401d: NOP 
U401e: NOP 

U4020: tmm1:= FMOV() 
U4021: tmm3:= FMOV( , tmm1) SEQW GOTO U2281
U4022: LFNCEMARK-> tmp0:= READURAM( , 0x0022, 64) !m2 

U4024: LFNCEWAIT-> WRITEURAM(tmp0, 0x0001, 64) !m2 SEQW GOTO U217c
U4025: NOP 
U4026: NOP 

U4028: tmm1:= unk_494() 
U4029: tmm3:= FMOV( , tmm1) SEQW GOTO U2281
U402a: LFNCEMARK-> tmp1:= READURAM( , tmp0) !m2 

U402c: tmp1:= BTR_DSZ32(tmp1) 
U402d: LFNCEWAIT-> WRITEURAM(tmp1, tmp0) !m2 SEQW GOTO U24da
U402e: NOP 

U4030: tmp6:= AND_DSZ32(0x00000001, tmp12) 
U4031: tmp8:= unk_6a0() 
U4032: tmm1:= ORPD(tmm1, tmm0) SEQW GOTO U2029

U4034: tmp0:= MOVE_DSZ32(0x0000282d) SEQW GOTO U4e82
U4035: NOP 
U4036: NOP 

U4038: tmp9:= unk_6a0() 
U4039: tmm1:= ORPD(tmm0, tmm1) 
U403a: tmm3:= FMOV( , tmm1) SEQW GOTO U2281

U403c: tmp0:= ZEROEXT_DSZ32(0x00010008) SEQW GOTO U1f90
U403d: NOP 
U403e: NOP 

U4040: tmm1:= FMOV( , tmm1) 
U4041: tmm3:= FMOV( , tmm1) SEQW GOTO U2281
U4042: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x29e) !m1 

U4044: SAVEUIP( , 0x01, U376a) !m0 SEQW GOTO U208d
U4045: NOP 
U4046: NOP 

U4048: tmm1:= unk_494( , tmm1) 
U4049: tmm3:= FMOV( , tmm1) SEQW GOTO U2281
U404a: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp4, U5b45) 

U404c: tmp7:= ZEROEXT_DSZ64(0x00001f80) SEQW GOTO U5b46
U404d: NOP 
U404e: NOP 

U4050: tmm1:= FMOV( , tmm0) 
U4051: tmm3:= FMOV( , tmm0) SEQW GOTO U2281
case_:
U4052: BTUJB_DIRECT_NOTTAKEN(rax, 0x0000000d, U5902) !m2 

U4054: tmp10:= MOVEFROMCREG_DSZ64( , rax) SEQW GOTO U4065
U4055: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 
U4056: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) !m1 

U4058: LFNCEWAIT-> tmp12:= RDSEGFLD(UNK_SEG_04, LIMIT) 
U4059: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) SEQW GOTO U0382
case_2:
U405a: tmp4:= ZEROEXT_DSZ32(0x00000005) 

U405c: tmp10:= OR_DSZ32(rax) 
U405d: tmp13:= ZEROEXT_DSZ32(0x00003762) SEQW GOTO U1982
U405e: LFNCEMARK-> tmm6:= unk_691(tmm5) 

U4060: LFNCEWAIT-> NOP 
U4061: tmp14:= SAVEUIP(0x01, U39aa) !m0 SEQW GOTO U2ff0
case_18:
U4062: tmp4:= OR_DSZ32(rax) 

U4064: tmp10:= READURAM( , tmp4) 
U4065: rdx:= ZEROEXT_DSZ64(tmp10) 
U4066: rbx:= SHR_DSZ64(tmp10, 0x00000020) SEQW GOTO U43a4

U4068: NOP 
U4069: NOP 
case_17:
U406a: tmp10:= PORTIN_DSZ8_ASZ16_SC1(rax) SEQW GOTO U4065

U406c: tmp2:= MOVEFROMCREG_DSZ64( , 0x701) 
U406d: tmp2:= NOTAND_DSZ64(0x30000000, tmp2) 
U406e: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp2, 0x701) 

U4070: WRSEGFLD(0x00000000) 
U4071: LFNCEMARK-> WRITEURAM( , 0x00000000, 0x004b, 64) SEQW URET1
case_19:
U4072: tmp10:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp4) SEQW GOTO U4065

U4074: tmp1:= OR_DSZ64(tmp10, tmp1) 
U4075: tmp1:= BT_DSZ64(tmp1, 0x0000000d) 
U4076: SYNCWAIT-> tmp12:= ZEROEXT_DSZ32N(tmp12) !m1 

U4078: SYNCWAIT-> tmp10:= SHR_DSZ64(tmp12, 0x00000020) SEQW URET1
U4079: NOP 
case_5:
U407a: tmp10:= PORTIN_DSZ16_ASZ16_SC1(rax) SEQW GOTO U4065

U407c: tmp3:= ZEROEXT_DSZ32(0x00000010) SEQW GOTO U31f1
U407d: NOP 
U407e: NOP 

U4080: NOP 
U4081: NOP 
case_6:
U4082: tmp10:= PORTIN_DSZ32_ASZ16_SC1(rax) SEQW GOTO U4065

thunk_FUN_ucode_0002712:
U4084: SAVEUIP( , 0x01, U5b25) !m0 SEQW GOTO U2712
U4085: NOP 
U4086: NOP 

U4088: NOP 
U4089: NOP 
case_7:
U408a: tmp10:= PORTIN_DSZ64_ASZ16_SC1(rax) SEQW GOTO U4065

U408c: NOP SEQW GOTO U38c9
U408d: NOP 
U408e: NOP 

U4090: NOP 
U4091: NOP 
case_24:
U4092: tmp10:= LDSTGBUF_DSZ64_ASZ16_SC1(rax) !m2 SEQW GOTO U4065

U4094: rdx:= MOVEFROMCREG_DSZ64( , 0x22d, 32) !m1,m2 SEQW GOTO U21fe
U4095: NOP 
U4096: NOP 

U4098: NOP 
U4099: NOP 
case_25:
U409a: NOP SEQW GOTO U2769

U409c: SAVEUIP( , 0x01, U009a) !m0 SEQW GOTO U32cd
U409d: NOP 
U409e: NOP 

U40a0: NOP 
U40a1: NOP 
case_12:
U40a2: NOP SEQW GOTO U2769

U40a4: SAVEUIP( , 0x01, U4506) !m0 SEQW GOTO U32cd
U40a5: NOP 
U40a6: NOP 

U40a8: NOP 
U40a9: NOP 
case_13:
U40aa: NOP SEQW GOTO U2769

U40ac: SAVEUIP( , 0x01, U3c60) !m0 SEQW GOTO U2ace
U40ad: NOP 
U40ae: NOP 

U40b0: NOP 
U40b1: NOP 
case_14:
U40b2: NOP SEQW GOTO U2769

U40b4: SIGEVENT( , 0x00000041) SEQW GOTO U079d
U40b5: NOP 
U40b6: NOP 

U40b8: NOP 
U40b9: NOP 
case_15:
U40ba: NOP SEQW GOTO U2769

U40bc: tmm6:= FMOV( , 0x00000011) !m0 SEQW GOTO U17ec
U40bd: NOP 
U40be: NOP 

U40c0: NOP 
U40c1: NOP 
case_1:
U40c2: NOP SEQW GOTO U2769

U40c4: LFNCEMARK-> tmm0:= unk_61c( , 0x00000000) !m1,m2 SEQW GOTO U6812
U40c5: NOP 
U40c6: NOP 

U40c8: NOP 
U40c9: NOP 
case_11:
U40ca: NOP SEQW GOTO U2769

U40cc: tmp2:= AND_DSZ32(0x00000700, tmp11) 
U40cd: tmp15:= SUB_DSZ32(0x00000700, tmp2) 
U40ce: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U1641) 

U40d0: tmp9:= SUB_DSZ32(0x00000200, tmp2) 
U40d1: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U40e6
U40d2: tmp13:= AND_DSZ32(0x000007ff, tmp11) 

U40d4: tmp15:= SUB_DSZ32(0x00000301, tmp13) 
U40d5: tmp13:= SUB_DSZ32(0x00000312, tmp13) 
U40d6: tmp13:= SELECTCC_DSZ32_CONDZ(tmp13, tmp5) 

U40d8: tmp14:= CMOVCC_DSZ64_CONDZ(tmp15, tmp9) 
U40d9: tmp15:= SUB_DSZ32(0x00000000, tmp2) 
U40da: tmp14:= CMOVCC_DSZ64_CONDZ(tmp15, tmp14) 

U40dc: tmp15:= SUB_DSZ32(0x00000001, tmp13) 
U40dd: tmp14:= SELECTCC_DSZ64_CONDNZ(tmp15, tmp14) 
U40de: tmp15:= SUB_DSZ32(0x00000002, tmp13) 

U40e0: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, tmp9) 
U40e1: tmp14:= OR_DSZ32(tmp15, tmp14) 
U40e2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U5f15) 

U40e4: tmp15:= SUB_DSZ32(0x00000003, tmp5) 
U40e5: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U5f15) 
U40e6: tmp14:= SUB_DSZ32(0x00000000, tmp2) 

U40e8: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp14, 0x00000003) 
U40e9: tmp15:= AND_DSZ32(tmp15, tmp8) 
U40ea: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U40fc) 

U40ec: tmp14:= SELECTCC_DSZ32_CONDNZ(tmp14, 0x00000200) 
U40ed: tmp14:= NOTAND_DSZ32(tmp0, tmp14) 
U40ee: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U40fc) 

U40f0: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp9, 0x00000003) 
U40f1: tmp15:= AND_DSZ32(tmp15, tmp8) 
U40f2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U40fc) 

U40f4: tmp15:= READURAM( , 0x0043, 64) 
U40f5: tmp15:= SELECTCC_DSZ64_CONDNZ(tmp9, tmp15) 
U40f6: LFNCEMARK-> tmp15:= SHR_DSZ64(tmp15, 0x00000039) 

U40f8: tmp15:= AND_DSZ32(tmp8, tmp15) 
U40f9: tmp15:= AND_DSZ32(0x00000008, tmp15) 
U40fa: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U40fc) SEQW GOTO U1641

U40fc: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp9, tmp8) 
U40fd: tmp15:= AND_DSZ32(0x00000001, tmp15) 
U40fe: tmp1:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000003) SEQW GOTO U5f16

U4100: tmm6:= unk_620(tmm5) 
U4101: tmp3:= PINTMOVDTMM2I_DSZ32(tmm6) 
U4102: UJMP( , tmp3) 

U4104: ROVR<- tmp9:= unk_6a0() SEQW SAVEUIP0 U4105SEQW GOTO U418e
U4105: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U037a) 
U4106: tmp8:= OR_DSZ16(0x00000010, tmp8) 

U4108: tmp2:= AND_DSZ16(0x00000010, tmp1) 
U4109: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U582d) 
U410a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp8, 0x48c) !m2 

U410c: LFNCEWAIT-> mm7:= FMOV( , tmm1) !m0 SEQW GOTO U21fe
U410d: tmm2:= unk_69d( , tmm2) 
U410e: tmm3:= unk_496(tmm2, tmm2) 

U4110: tmp12:= FCOM2(tmp12, tmp11) 
U4111: tmm3:= unk_494( , tmm0) 
U4112: tmm3:= unk_53f(tmm3, tmm1) 

U4114: mm4:= unk_76a(tmm4) 
U4115: tmp2:= MOVEINSERTFLGS_DSZ32(tmp4) 
U4116: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp2, U4118) SEQW GOTO U5d38

U4118: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U4536) 
U4119: tmp6:= ADD_DSZ32(0x00000001, tmp6) SEQW SAVEUIP0 U411aSEQW GOTO U5d39
U411a: NOP 

U411c: mm0:= unk_689(tmm2, tmm3) SEQW GOTO U17ec
U411d: NOP SEQW URET1
U411e: NOP 

U4120: SAVEUIP( , 0x01, U20a1) !m0 SEQW GOTO U425a
U4121: mm7:= FMOV( , tmm0) !m0 SEQW URET0
U4122: mm0:= FMOV( , tmm0) !m0 

U4124: mm7:= FMOV( , tmm0) !m0 SEQW GOTO U1948
U4125: NOP SEQW URET1
U4126: tmm6:= FMOV( , 0x00000091) !m0 

U4128: mm0:= FMOV( , tmm0) !m0 SEQW URET0
U4129: mm0:= FMOV( , tmm0) SEQW GOTO U17ec
U412a: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U412c: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) SEQW GOTO U480a
U412d: tmm3:= FMOV( , 0x00000000) 
U412e: tmm2:= FMOV( , 0x00004000) SEQW URET0

U4130: mm0:= unk_53f(0x00000000, tmm1) SEQW GOTO U17ec
U4131: tmm3:= FMOV( , 0x00004000) 
U4132: tmm2:= FMOV( , 0x00000000) SEQW URET0

U4134: mm0:= unk_53f(0x00000000) SEQW GOTO U17ec
U4135: tmm3:= FMOV( , 0x00000000) 
U4136: tmm2:= unk_5b9(tmm7) SEQW URET0

U4138: tmp12:= unk_6a0() SEQW GOTO U4152
U4139: tmm2:= FMOV( , tmm0) 
U413a: tmm3:= FMOV( , 0x00000000) SEQW URET0

U413c: tmp3:= BTS_DSZ32(0x00000000, 0x0000001f) SEQW GOTO U418c
U413d: tmm2:= FMOV( , 0x00000000) 
U413e: tmm3:= unk_5b9(tmm7) SEQW URET0

U4140: tmp3:= BTS_DSZ64(0x00000000, 0x0000003f) SEQW GOTO U418c
U4141: tmm3:= FMOV( , tmm0) 
U4142: tmm2:= FMOV( , 0x00000000) SEQW URET0

U4144: tmp2:= ZEROEXT_DSZ16(0x00004120) SEQW GOTO U41f4
U4145: tmm2:= FMOV() 
U4146: tmm3:= FMOV() SEQW URET0

U4148: tmm2:= unk_494( , tmm2) SEQW GOTO U4355
U4149: tmp10:= unk_6a0() 
U414a: tmm2:= unk_53f(tmm1, tmm2) 

U414c: LFNCEMARK-> tmm7:= unk_6dc( , tmm2) !m2 SEQW GOTO U01a2
U414d: mm0:= FMOV( , tmm0) !m0 
U414e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U1948) 

U4150: tmm6:= FMOV( , 0x00000091) !m0 SEQW GOTO U1948
U4151: tmp12:= unk_6a0() 
U4152: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U4154: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) SEQW GOTO U4d36
U4155: mm2:= unk_7e8(tmm3) 
U4156: tmp2:= OR_DSZ16(0x00000002, tmp2) 

U4158: tmm0:= unk_782(mm2, tmm3) SEQW URET1
U4159: tmm3:= FMOV() SEQW GOTO U4136
U415a: tmp12:= OR_DSZ16(0x00000001, tmp12) 

U415c: tmp8:= unk_6a0() SEQW GOTO U412a
U415d: mm2:= unk_7e8(tmm2) 
U415e: tmp2:= OR_DSZ16(0x00000002, tmp2) 

U4160: tmm0:= unk_782(mm2, tmm2) SEQW URET1
U4161: tmm2:= FMOV( , 0x00000000) SEQW GOTO U4146
U4162: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) 

U4164: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000f, U4d3a) !m0 SEQW GOTO U2ae1
U4165: tmp9:= BTS_DSZ16(tmp9, 0x0000000d) 
U4166: LFNCEMARK-> tmm0:= FMOV() !m2 

U4168: tmp12:= BTS_DSZ32(tmp12, 0x00000005) SEQW GOTO U1236
U4169: mm2:= unk_72a(0x00000000) 
U416a: tmp3:= AND_DSZ8(0x00000001, tmp2) 

U416c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U421d) SEQW GOTO U36b8
U416d: tmp2:= ZEROEXT_DSZ16(0x000041ad) 
U416e: tmp3:= AND_DSZ8(0x00000014, tmp7) 

U4170: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U03b4) SEQW GOTO U36b8
U4171: tmp8:= unk_6a0() 
U4172: tmm4:= unk_496(tmm2, tmm3) 

U4174: tmm0:= unk_53f(tmm4, tmm0) SEQW GOTO U1236
U4175: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp6, U4249) 
U4176: UJMPCC_DIRECT_NOTTAKEN_CONDP(tmp6, U40c4) 

U4178: tmm0:= unk_5b9(tmm7) SEQW GOTO U6812
U4179: mm2:= unk_72a(0x00000000) 
U417a: tmp3:= AND_DSZ8(0x00000001, tmp2) 

U417c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1236) SEQW GOTO U421d
U417d: tmm4:= unk_5b9(tmm7) 
U417e: tmm7:= unk_5b9() 

U4180: tmp13:= ZEROEXT_DSZ64(0x000043bc) SEQW GOTO U42e8
U4181: tmm4:= unk_5b9(tmm7) 
U4182: tmm7:= unk_5b9() 

U4184: tmp13:= ZEROEXT_DSZ64(0x000043bc) SEQW GOTO U42fc
U4185: tmp14:= unk_6a0() 
U4186: tmp11:= unk_6a0() 

U4188: tmm4:= unk_494( , tmm6) 
U4189: tmm4:= unk_6c9(tmm3, tmm4) SEQW GOTO U20e1
U418a: tmp3:= BTS_DSZ32(0x00000000, 0x0000000f) 

U418c: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) SEQW GOTO U17b1
U418d: SAVEUIP( , 0x00, U21cd) 
FUN_ucode_000418e:
U418e: tmp1:= MOVEFROMCREG_DSZ64( , 0x486) 

U4190: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U4191: tmp8:= OR_DSZ16(0x00000002, tmp4) SEQW GOTO U4325
U4192: mm0:= unk_625(tmm2) 

U4194: LFNCEMARK-> tmm6:= unk_5ff(0x00000000) !m2 SEQW GOTO U1948
U4195: tmm4:= unk_624(tmm0, tmm1) 
U4196: tmp0:= PINTMOVDTMM2I_DSZ32(tmm4) 

U4198: tmp0:= AND_DSZ32(0x00000014, tmp0) 
U4199: tmm0:= unk_72a(tmm0) SEQW GOTO U6e89
U419a: mm7:= FMOV( , 0x00000041) !m0 

U419c: mm0:= unk_496(IMM_MACRO_31) !m0 SEQW GOTO U1948
U419d: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000001, 0x48c) !m2 
U419e: tmp2:= AND_DSZ32(0x00000001, tmp5) 

U41a0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U56de) 
U41a1: tmp15:= unk_6a0() SEQW GOTO U0404
U41a2: tmm3:= FMOV( , 0x00000000) 

U41a4: tmm2:= FMOV() SEQW GOTO U39b5
U41a5: tmp3:= AND_DSZ32(0x00000008, tmp0) 
U41a6: tmp3:= SHR_DSZ32(tmp3, 0x00000002) 

U41a8: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x48c, tmp3) 
U41a9: tmp2:= XOR_DSZ32(0x00000002, tmp5) SEQW GOTO U21dd
U41aa: tmm7:= unk_5b9(tmm1) 

U41ac: tmp13:= ZEROEXT_DSZ64(0x000043c4) SEQW GOTO U42e8
U41ad: tmm4:= unk_624(tmm0, tmm1) 
U41ae: tmp0:= PINTMOVDTMM2I_DSZ32(tmm4) 

U41b0: tmp0:= AND_DSZ32(0x00000014, tmp0) 
U41b1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U5ea5) SEQW GOTO U6175
U41b2: tmm5:= unk_5b9(tmm7) 

U41b4: tmp13:= ZEROEXT_DSZ64(0x000043c4) SEQW GOTO U42f0
U41b5: tmp2:= SHR_DSZ16(tmp12, 0x0000000b) 
U41b6: tmp2:= AND_DSZ16(0x00000007, tmp2) 

U41b8: tmp3:= MOVEFROMCREG_DSZ64( , 0x06a) 
U41b9: tmp4:= ROR_DSZ8(tmp3, tmp2) SEQW GOTO U5b35
U41ba: tmp10:= OR_DSZ32(tmp4, tmp10) 

U41bc: tmp10:= NOTAND_DSZ32(0x00000002, tmp10) SEQW GOTO U4204
U41bd: tmp3:= SUB_DSZ32(0x00000100, tmp9) 
U41be: tmp3:= SUB_DSZ32(0x00000065, tmp3) 

U41c0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U0322) 
U41c1: tmp4:= NOTAND_DSZ32(0x00000007, tmp9) SEQW GOTO U59e5
U41c2: tmp10:= OR_DSZ32(tmp4, tmp10) 

U41c4: tmp10:= NOTAND_DSZ32(0x00000002, tmp10) SEQW GOTO U42f8
U41c5: tmp12:= OR_DSZ16(0x00000041, tmp12) 
U41c6: tmp4:= ZEROEXT_DSZ32(0x00000002) 

U41c8: tmm6:= unk_743(mm4) !m2 
U41c9: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) SEQW GOTO U3752
U41ca: tmm4:= unk_5b9(tmm7) 

U41cc: tmp10:= NOTAND_DSZ64(0x0000003f, tmp10) SEQW GOTO U2af9
U41cd: tmp5:= MOVEFROMCREG_DSZ64( , 0x48c) 
U41ce: tmp5:= NOTAND_DSZ16(0x00000020, tmp5) 

U41d0: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, 0x48c) 
U41d1: tmp12:= OR_DSZ16(0x00000001, tmp12) SEQW GOTO U0c1a
U41d2: tmp10:= OR_DSZ32(tmp4, tmp10) 

U41d4: tmp10:= NOTAND_DSZ32(0x00000002, tmp10) SEQW GOTO U42f8
U41d5: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp6, U574e) 
U41d6: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp6, U4249) 

U41d8: tmm6:= unk_743() !m2 
U41d9: tmm4:= unk_624(tmm2, tmm2) SEQW GOTO U20f0
U41da: tmm4:= unk_5b9(tmm7) 

U41dc: tmp10:= NOTAND_DSZ64(0x0000003f, tmp10) SEQW GOTO U4230
U41dd: tmm4:= unk_68c(tmm3, tmm2) 
U41de: tmp2:= PINTMOVDTMM2I_DSZ64(tmm4) 

U41e0: mm3:= unk_7e8(tmm4) 
U41e1: tmm2:= unk_743(mm3, tmm2) SEQW GOTO U5f95
U41e2: tmm7:= MOVDQU( , tmm7) 

U41e4: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x073) !m2 SEQW GOTO U41ea
U41e5: tmp12:= OR_DSZ16(0x00000002, tmp12) 
U41e6: tmp2:= BT_DSZ16(tmp6, 0x0000000a) 

U41e8: tmp3:= MOVEMERGEFLGS_DSZ64(0x0000ff81, tmp2) 
U41e9: tmp4:= CMOVCC_DSZ32_CONDB(tmp3, 0x0000fc01) SEQW GOTO U061c
U41ea: tmp10:= OR_DSZ32(tmp11, tmp10) 

U41ec: tmp13:= SAVEUIP(0x00, U08ce) SEQW GOTO U2e7c
U41ed: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U41ee: tmp3:= AND_DSZ16(0x00000010, tmp2) 

U41f0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U180c) 
U41f1: tmp10:= ZEROEXT_DSZ32(0x00000043) SEQW GOTO U0624
U41f2: tmp2:= ZEROEXT_DSZ16(0x00004259) 

U41f4: tmm6:= unk_624(tmm3, tmm3) 
U41f5: tmp3:= PINTMOVDTMM2I_DSZ32(tmm6) 
U41f6: tmp3:= AND_DSZ8(0x00000004, tmp3) SEQW GOTO U180d

U41f8: tmm7:= unk_5b9(xmmsrc) SEQW GOTO U42e5
U41f9: tmp8:= unk_6a0() 
U41fa: tmm6:= unk_624(tmm2, tmm2) 

U41fc: tmp3:= PINTMOVDTMM2I_DSZ32(tmm6) 
U41fd: tmp3:= AND_DSZ16(0x00000010, tmp3) SEQW GOTO U2ae9
U41fe: LFNCEMARK-> tmp14:= FCOM2(tmp11, tmp10) !m2 

U4200: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U4201: tmp3:= AND_DSZ32(0x00000002, tmp2) 
U4202: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1948) SEQW GOTO U392e

U4204: tmp13:= SAVEUIP(0x00, U088e) SEQW GOTO U2e7c
U4205: tmm0:= FMOV( , 0x00000000) 
U4206: UJMPCC_DIRECT_NOTTAKEN_CONDP(tmp6, U1806) 

U4208: tmp1:= MOVEFROMCREG_DSZ64( , 0x486) 
U4209: tmp1:= SHR_DSZ32(tmp1, 0x00000008) SEQW GOTO U6e50
U420a: tmp8:= unk_6a0() !m2 

U420c: tmm6:= unk_620(tmm5) 
U420d: tmp4:= PINTMOVDTMM2I_DSZ32(tmm6) 
U420e: tmm4:= unk_624(tmm2, tmm2) SEQW GOTO U3e28

U4210: tmm7:= unk_5b9(xmmsrc) SEQW GOTO U4234
U4211: tmp2:= AND_DSZ32(0x00000004, tmp7) 
U4212: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U421d) 

U4214: tmm4:= unk_496(tmm3, tmm2) 
U4215: tmm0:= unk_53f(tmm4, tmm0) SEQW GOTO U1236
U4216: tmp0:= SUB_DSZ32(0x00000410, tmp5) 

U4218: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U421d) 
U4219: tmp1:= SUB_DSZ32(0x00000100, tmp5) 
U421a: tmp1:= SUB_DSZ32(0x00000004, tmp1) SEQW GOTO U6742

U421c: tmm7:= unk_5b9(xmmsrc) SEQW GOTO U4248
U421d: tmp12:= OR_DSZ16(0x00000001, tmp12) 
U421e: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 

U4220: tmp3:= AND_DSZ16(0x00000001, tmp2) 
U4221: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1948) SEQW GOTO U1235
U4222: mm2:= unk_72a(tmm2) 

U4224: tmp12:= unk_6a0() 
U4225: tmm4:= unk_743(mm2, tmm4) 
U4226: tmm0:= unk_482(tmm4, tmm2) SEQW GOTO U1236

U4228: tmp13:= ZEROEXT_DSZ64(0x000043d4) SEQW GOTO U42fa
U4229: MOVDQU( , tmm7) 
U422a: tmp10:= OR_DSZ32(tmp4, tmp10) 

U422c: tmp10:= NOTAND_DSZ32(0x00000002, tmp10) 
U422d: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x073) !m2 SEQW GOTO U42f8
U422e: tmm4:= unk_5b9(xmmsrc) 

U4230: tmm7:= unk_5b9() 
U4231: tmp11:= ZEROEXT_DSZ32(0x0000220e) 
U4232: tmp13:= ZEROEXT_DSZ64(0x000046b9) SEQW GOTO U42fe

U4234: tmp13:= ZEROEXT_DSZ64(0x000043d4) SEQW GOTO U42e6
U4235: tmm7:= unk_5b9(tmm4) 
U4236: tmm4:= unk_5b9(tmm3) 

U4238: tmp11:= ZEROEXT_DSZ32(0x00002266) 
U4239: tmp13:= ZEROEXT_DSZ64(0x000043cc) SEQW GOTO U0344
U423a: tmp11:= unk_6a0() 

U423c: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000004, 0x48c) 
U423d: tmp2:= AND_DSZ32(0x00000004, tmp5) 
U423e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U56de) 

U4240: LFNCEWAIT-> tmm7:= unk_496(tmm3, tmm1) !m2 SEQW GOTO U0404
U4241: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) 
U4242: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 

U4244: MOVETOCREG_DSZ64(tmp15, 0x752) 
U4245: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000f, U4d3a) !m0 
U4246: tmp7:= PINTMOVDTMM2I_DSZ64(tmm0) SEQW GOTO U2349

U4248: tmp13:= ZEROEXT_DSZ64(0x000043dc) SEQW GOTO U42e6
U4249: LFNCEMARK-> tmm6:= unk_743() !m2 
U424a: tmp12:= OR_DSZ16(0x00000001, tmp12) 

U424c: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U424d: tmp3:= AND_DSZ16(0x00000001, tmp2) 
U424e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1948) SEQW GOTO U1236

U4250: tmp13:= ZEROEXT_DSZ64(0x000043dc) SEQW GOTO U42fa
U4251: LFNCEMARK-> tmm6:= unk_743(mm0) !m2 
U4252: unk_7e0(tmm3, tmm2) !m2 

U4254: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 
U4255: tmp3:= AND_DSZ32(0x00000002, tmp2) 
U4256: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1948) SEQW GOTO U392e

U4258: tmp13:= SAVEUIP(0x00, U08ce) SEQW GOTO U2e7c
U4259: SAVEUIP( , 0x01, U5d35) !m0 
U425a: mm0:= unk_7ea(tmm0) 

U425c: mm1:= unk_7ea(tmm1) 
U425d: tmp5:= SUB_DSZ32(tmp1, tmp0) 
U425e: tmm3:= unk_624(tmm0, tmm1) 

U4260: tmp2:= PINTMOVDTMM2I_DSZ32(tmm3) SEQW GOTO U036a
U4261: mm1:= unk_7ea(0x00000000) 
U4262: tmp0:= SUB_DSZ32(0x0001003e, tmp1) 

U4264: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp0, U59e2) 
U4265: tmp2:= ZEROEXT_DSZ32(0x0001003e) 
U4266: tmm1:= unk_7c2(mm2) 

U4268: tmm0:= unk_6aa(0x00000000, tmm1) SEQW GOTO U394d
U4269: tmp15:= FCOM2(tmp9, tmp8) !m0 
U426a: mm1:= unk_7ea(tmm1) 

U426c: tmm3:= unk_624(tmm0, tmm1) 
U426d: tmp2:= PINTMOVDTMM2I_DSZ32(tmm3) 
U426e: tmp2:= AND_DSZ32(0x00000014, tmp2) 

U4270: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U61fa) SEQW GOTO U651d
U4271: tmm2:= unk_624(0x00000000) 
U4272: tmp1:= PINTMOVDTMM2I_DSZ32(tmm2) 

U4274: tmp2:= AND_DSZ32(0x00000040, tmp1) 
U4275: tmp2:= SHR_DSZ32(tmp2, 0x00000006) 
U4276: tmm3:= unk_743(mm2, tmm0) 

U4278: tmm0:= unk_482(tmm3, 0x00000000) SEQW GOTO U4129
U4279: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U427a: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U427c: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000001, 0x48c) 
U427d: tmp6:= AND_DSZ32(0x00000001, tmp5) 
U427e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U56de) 

U4280: LFNCEWAIT-> tmp0:= unk_6a0() SEQW GOTO U17ec
U4281: tmm4:= unk_624(tmm0, tmm0) 
U4282: tmp2:= PINTMOVDTMM2I_DSZ32(tmm4) 

U4284: tmp2:= AND_DSZ32(0x00000004, tmp2) 
U4285: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U5815) 
U4286: mm0:= unk_7ea(tmm0) 

U4288: tmp0:= SUB_DSZ32(0x0000ffff, tmp0) SEQW GOTO U20c9
U4289: tmp1:= MOVEFROMCREG_DSZ64( , 0x486) 
U428a: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 

U428c: tmp8:= OR_DSZ16(0x00000002, tmp4) 
U428d: tmp2:= AND_DSZ16(0x00000002, tmp1) 
U428e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U56de) 

U4290: tmp5:= ZEROEXT_DSZ32(0x0000c001) SEQW GOTO U21ea
U4291: tmm4:= unk_624(tmm0, tmm1) 
U4292: tmp0:= PINTMOVDTMM2I_DSZ32(tmm4) 

U4294: tmp0:= AND_DSZ32(0x00000014, tmp0) 
U4295: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U1998) 
U4296: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U4298: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) SEQW GOTO U7092
U4299: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) 
U429a: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000f, U4d3a) !m0 

U429c: tmp7:= PINTMOVDTMM2I_DSZ32(tmm0) 
U429d: tmp3:= BT_DSZ16(tmp9, 0x0000000d) 
U429e: tmp7:= MOVEMERGEFLGS_DSZ64(tmp7, tmp3) 

U42a0: tmp7:= CMOVCC_DSZ32_CONDB(tmp7, 0x80000000) SEQW GOTO U5952
U42a1: tmp3:= ZEROEXT_DSZ32(0x0000c001) 
U42a2: tmm0:= unk_7c2(mm3, 0x00000000) 

U42a4: tmm0:= unk_69d( , tmm0) 
U42a5: tmp9:= BTS_DSZ16(tmp9, 0x0000000d) 
U42a6: tmm0:= unk_643( , tmm0) 

U42a8: LFNCEMARK-> tmm6:= unk_5ff(tmm0) !m2 SEQW GOTO U1236
U42a9: tmp2:= ZEROEXT_DSZ16(0x00004195) 
U42aa: mm3:= unk_72a(tmm2) 

U42ac: tmp3:= AND_DSZ8(0x00000001, tmp3) 
U42ad: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U03b4) 
U42ae: tmp3:= AND_DSZ8(0x00000014, tmp7) 

U42b0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U03b4) SEQW GOTO U36b8
U42b1: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 
U42b2: SYNCFULL-> MOVETOCREG_DSZ64(tmp15, 0x752) 

U42b4: tmp10:= READURAM( , 0x000b, 64) 
U42b5: tmp3:= ZEROEXT_DSZ32(0x0000c001) 
U42b6: tmm0:= unk_7c2(mm3, 0x00000000) 

U42b8: tmm0:= unk_69d( , tmm0) SEQW GOTO U4b45
U42b9: tmm6:= unk_624(tmm2, tmm2) 
U42ba: tmp3:= PINTMOVDTMM2I_DSZ32(tmm6) 

U42bc: tmp3:= AND_DSZ16(0x00000010, tmp3) 
U42bd: tmp0:= CMOVCC_DSZ16_CONDZ(tmp3, 0x00000001) 
U42be: tmm2:= unk_743(mm0, tmm2) 

U42c0: tmm0:= unk_482(tmm2, tmm3) SEQW GOTO U1236
U42c1: tmp3:= AND_DSZ32(0x00000010, tmp1) 
U42c2: tmp3:= SHR_DSZ32(tmp3, 0x00000003) 

U42c4: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x48c, tmp3) 
U42c5: tmp2:= XOR_DSZ32(0x00000002, tmp5) 
U42c6: tmp2:= AND_DSZ32(tmp3, tmp2) 

U42c8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U56de) 
U42c9: LFNCEWAIT-> tmm7:= unk_53f(tmm1, tmm0) !m2 SEQW GOTO U0404
U42ca: tmp4:= AND_DSZ32(0x00000300, tmp7) 

U42cc: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U42cd) SEQW GOTO U42ce
U42cd: tmm6:= FMOV( , 0x00000031) !m0 
U42ce: tmm2:= FMOV( , 0x00000011) !m0 

U42d0: tmm3:= FMOV( , 0x00000031) !m0 SEQW GOTO U39b5
U42d1: tmp3:= AND_DSZ32(0x00000008, tmp0) 
U42d2: tmp3:= SHR_DSZ32(tmp3, 0x00000002) 

U42d4: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x48c, tmp3) 
U42d5: tmp2:= XOR_DSZ32(0x00000002, tmp5) 
U42d6: tmp2:= AND_DSZ32(tmp3, tmp2) 

U42d8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U56de) 
U42d9: LFNCEWAIT-> tmm7:= unk_496(tmm1, tmm0) !m2 SEQW GOTO U0404
U42da: tmp3:= AND_DSZ32(0x00000010, tmp1) 

U42dc: tmp3:= SHR_DSZ32(tmp3, 0x00000003) 
U42dd: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x48c, tmp3) 
U42de: tmp2:= XOR_DSZ32(0x00000002, tmp5) 

U42e0: tmp2:= AND_DSZ32(tmp3, tmp2) 
U42e1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U56de) 
U42e2: LFNCEWAIT-> tmm7:= unk_496(tmm0, tmm1) !m2 SEQW GOTO U0404

U42e4: tmp10:= OR_DSZ32(tmp4, tmp10) SEQW GOTO U42f8
U42e5: tmp13:= ZEROEXT_DSZ64(0x000043c4) 
U42e6: tmm4:= unk_5b9(xmmdst) 

U42e8: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U0342
U42e9: tmp11:= ZEROEXT_DSZ32(0x000020b6) 
U42ea: tmp12:= WRMSLOOPCTRFBR(0x00000003) 

U42ec: tmp14:= SAVEUIP(0x01, U0ca1) !m0 
U42ed: tmp8:= ZEROEXT_DSZ16(0x0000ff81) SEQW GOTO U39a6
U42ee: tmm5:= unk_5b9(xmmsrc) 

U42f0: tmm4:= unk_5b9(xmmdst) 
U42f1: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U3b3c
U42f2: tmp7:= BTS_DSZ32(0x00000000, 0x0000001f) 

U42f4: tmm0:= unk_744(mm7) 
U42f5: tmm0:= SHUFPD(tmm0, tmm0) 
U42f6: tmp11:= ZEROEXT_DSZ32(0x000020b6) SEQW GOTO U3b40

U42f8: tmp13:= SAVEUIP(0x00, U5e6d) SEQW GOTO U2e7c
U42f9: tmp13:= ZEROEXT_DSZ64(0x000043c4) 
U42fa: tmm4:= unk_5b9(xmmdst) 

U42fc: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U2312
U42fd: tmp11:= ZEROEXT_DSZ32(0x0000220e) 
U42fe: tmp12:= ZEROEXT_DSZ8() 

U4300: tmp14:= SAVEUIP(0x01, U0ca2) !m0 
U4301: tmp8:= ZEROEXT_DSZ16(0x0000ff81) SEQW GOTO U39a6
U4302: tmm7:= unk_5b9(xmmsrc) 

U4304: tmp2:= ROR_DSZ8(tmp1, 0x00000004) 
U4305: tmp11:= ZEROEXT_DSZ32(0x0000249a) 
U4306: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U0634

U4308: tmm4:= unk_7d0(mm2, xmmdst) 
U4309: tmm7:= unk_7d0(mm2, tmm7) 
U430a: tmp13:= ZEROEXT_DSZ64(0x000043d4) SEQW GOTO U42ea

U430c: tmm7:= unk_5b9(xmmsrc) SEQW GOTO U42f9
U430d: tmp14:= unk_6a0() 
U430e: mm2:= unk_72a(tmm0) 

U4310: tmm3:= unk_743(mm2) 
U4311: tmm3:= unk_483(tmm3, tmm6) 
U4312: tmm3:= unk_53f(tmm1, tmm3) 

U4314: tmm7:= unk_6dc( , tmm3) !m2 
U4315: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U4316: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U01a2) SEQW GOTO U0404

U4318: tmm7:= unk_5b9(xmmsrc) SEQW GOTO U4228
U4319: tmp0:= MOVEFROMCREG_DSZ64( , 0x001) 
U431a: tmp0:= SUB_DSZ32(0x0000018e, tmp0) 

U431c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U2362) 
U431d: tmm7:= unk_5b9(tmm1) 
U431e: tmm4:= unk_5b9(tmm3) 

U4320: tmm4:= SHUFPD( , tmm4) 
U4321: tmm4:= unk_57a(tmm4) 
U4322: tmp11:= ZEROEXT_DSZ32(0x0000227a) 

U4324: tmp13:= ZEROEXT_DSZ64(0x000043cc) SEQW GOTO U42ea
U4325: tmp2:= AND_DSZ16(0x00000002, tmp1) 
U4326: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U56de) 

U4328: tmm3:= unk_624(0x00000000) 
U4329: tmp3:= PINTMOVDTMM2I_DSZ32(tmm3) 
U432a: tmp8:= OR_DSZ16(0x00000020, tmp8) 

U432c: tmp7:= AND_DSZ16(0x00000020, tmp1) 
U432d: tmp9:= OR_DSZ32(0x00008080, tmp8) 
U432e: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp7) 

U4330: tmp8:= CMOVCC_DSZ16_CONDZ(tmp9, tmp8) 
U4331: tmp3:= AND_DSZ16(0x00000040, tmp3) SEQW URET0
U4332: tmm7:= unk_5b9(xmmsrc) SEQW GOTO U4250

U4334: tmm4:= unk_5b9(xmmsrc) SEQW GOTO U417e
U4335: tmp1:= MOVEFROMCREG_DSZ64( , 0x486) 
U4336: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 

U4338: tmp8:= OR_DSZ16(0x00000002, tmp4) 
U4339: tmp2:= AND_DSZ16(0x00000002, tmp1) 
U433a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U56de) 

U433c: tmp8:= OR_DSZ16(0x00000020, tmp8) 
U433d: tmp7:= AND_DSZ16(0x00000020, tmp1) 
U433e: tmp9:= OR_DSZ32(0x00008080, tmp8) 

U4340: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp7) 
U4341: tmp8:= CMOVCC_DSZ16_CONDZ(tmp9, tmp8) 
U4342: MOVETOCREG_DSZ64(tmp8, 0x48c) !m2 

U4344: tmp0:= unk_6a0() SEQW GOTO U21fe
U4345: tmp3:= AND_DSZ32(0x00000008, tmp0) 
U4346: tmp3:= SHR_DSZ32(tmp3, 0x00000002) 

U4348: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x48c, tmp3) 
U4349: tmp2:= XOR_DSZ32(0x00000002, tmp5) 
U434a: tmp2:= AND_DSZ32(tmp3, tmp2) 

U434c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U56de) 
U434d: mm2:= unk_76a(tmm2) 
U434e: tmp2:= MOVEINSERTFLGS_DSZ32(tmp2) 

U4350: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U4351) SEQW GOTO U419d
U4351: tmm4:= unk_494( , tmm1) 
U4352: tmm4:= unk_57f(tmm2, tmm4) 

U4354: tmm7:= unk_482(tmm4, tmm1) !m2 SEQW GOTO U0404
U4355: tmp2:= SUB_DSZ16(0x00000410, tmp5) 
U4356: tmp3:= SETCC_CONDZ(tmp2) 

U4358: tmm4:= unk_496(tmm3, tmm2) 
U4359: mm2:= unk_72a(tmm4) 
U435a: tmp3:= AND_DSZ8(tmp2, tmp3) 

U435c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U421d) 
U435d: tmm6:= unk_624(tmm3, tmm3) 
U435e: tmp4:= PINTMOVDTMM2I_DSZ32(tmm6) 

U4360: tmp4:= AND_DSZ8(0x00000010, tmp4) 
U4361: tmp4:= CMOVCC_DSZ16_CONDZ(tmp4, 0x00000001) 
U4362: tmm6:= unk_743(mm4, tmm3) 

U4364: tmm0:= unk_482(tmm6, tmm2) SEQW GOTO U1236
U4365: NOP 
U4366: tmp2:= AND_DSZ8(0x00000014, tmp7) 

U4368: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U4369) SEQW GOTO U36b8
U4369: tmp3:= AND_DSZ8(0x00000010, tmp7) 
U436a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U032a) 

U436c: tmm6:= unk_624(tmm2, tmm2) 
U436d: tmp4:= PINTMOVDTMM2I_DSZ32(tmm6) 
U436e: tmp5:= AND_DSZ8(0x00000004, tmp4) 

U4370: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U4371) SEQW GOTO U36b8
U4371: tmp12:= OR_DSZ16(0x00000004, tmp12) 
U4372: tmp2:= MOVEFROMCREG_DSZ64( , 0x486) 

U4374: tmp3:= AND_DSZ16(0x00000004, tmp2) 
U4375: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U1948) 
U4376: tmp8:= unk_6a0() 

U4378: tmm4:= unk_496(tmm3, tmm2) 
U4379: mm4:= unk_72a(tmm4) 
U437a: tmm0:= unk_702(mm4, tmm0) SEQW GOTO U1236

U437c: tmm4:= unk_5b9(xmmsrc) SEQW GOTO U4182
U437d: NOP 
U437e: NOP 

U4380: tmm4:= unk_5b9(xmmsrc) SEQW GOTO U2af9
U4381: NOP 
U4382: NOP 

U4384: tmp10:= OR_DSZ32(tmp4, tmp10) SEQW GOTO U4204
U4385: NOP 
U4386: NOP 

U4388: tmp10:= OR_DSZ32(tmp4, tmp10) SEQW GOTO U41ec
U4389: NOP 
U438a: NOP 

U438c: tmp10:= OR_DSZ32(tmp11, tmp10) SEQW GOTO U4204
U438d: NOP 
U438e: NOP 

U4390: tmm7:= unk_5b9(tmm1) SEQW GOTO U4304
U4391: NOP 
case_32:
U4392: BTUJB_DIRECT_NOTTAKEN(rax, 0x0000000d, U5922) !m2 

U4394: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, rax) !m2 SEQW GOTO U43a4
U4395: NOP 
U4396: SAVEUIP( , 0x01, U063c) !m0 

U4398: SAVEUIP( , 0x00, U4f19) SEQW GOTO U5c7d
U4399: NOP 
case_33:
U439a: tmp4:= ZEROEXT_DSZ32(0x00000005) 

U439c: tmp10:= OR_DSZ32(rax) 
U439d: tmp13:= ZEROEXT_DSZ32(0x00005a2e) SEQW GOTO U1982
U439e: LFNCEMARK-> tmp14:= unk_e7b(tmp0, tmp2) !m1 

U43a0: LFNCEWAIT-> tmp15:= RDSEGFLD(UNK_SEG_09, FLGS) 
U43a1: MOVETOCREG_DSZ64(tmp15, 0x7f5) SEQW GOTO U3aec
case_34:
U43a2: WRITEURAM(tmp2, rax) !m2 

U43a4: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW GOTO U17ec
U43a5: NOP 
U43a6: tmp15:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 

U43a8: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000003, U5be5) !m0,m2 SEQW GOTO U5964
U43a9: NOP 
case_35:
U43aa: PORTOUT_DSZ8_ASZ16_SC1(rax,  , tmp2) 

U43ac: SAVEUIP_REGOVR(0x01, U43ad, 0x0002) !m0 
U43ad: SAVEUIP( , 0x01, U43a4) !m0 SEQW GOTO U2b15
U43ae: SYNCFULL-> NOP 

U43b0: FETCHFROMEIP1_ASZ32( , tmp2) 
U43b1: MJMPTARGET_INDIRECT_ASZ64( , tmp2) !m1 SEQW UEND0
case_36:
U43b2: STADSTGBUF_DSZ64_ASZ16_SC1(tmp4,  , tmp2) SEQW GOTO U43a4

U43b4: AETTRACE( , tmp7, 0x0e) SEQW GOTO U0414
U43b5: NOP 
U43b6: NOP 

U43b8: NOP 
U43b9: NOP 
case_37:
U43ba: PORTOUT_DSZ16_ASZ16_SC1(rax,  , tmp2) SEQW GOTO U43ac

U43bc: tmm3:= unk_6a5(tmm0) SEQW GOTO U12e5
U43bd: NOP 
U43be: NOP 

U43c0: NOP 
U43c1: NOP 
case_38:
U43c2: PORTOUT_DSZ32_ASZ16_SC1(rax,  , tmp2) SEQW GOTO U43ac

U43c4: tmm3:= unk_6cf(tmm1, tmm0) SEQW GOTO U12e5
U43c5: NOP 
U43c6: NOP 

U43c8: NOP 
U43c9: NOP 
case_39:
U43ca: PORTOUT_DSZ64_ASZ16_SC1(rax,  , tmp2) SEQW GOTO U43ac

U43cc: tmm3:= unk_6c8(tmm1, tmm0) SEQW GOTO U12e5
U43cd: NOP 
U43ce: NOP 

U43d0: NOP 
U43d1: NOP 
case_4:
U43d2: STADSTGBUF_DSZ64_ASZ16_SC1(rax,  , tmp2) !m2 SEQW GOTO U43a4

U43d4: tmm3:= unk_6a2(tmm0, tmm1) SEQW GOTO U12e5
U43d5: NOP 
U43d6: NOP 

U43d8: NOP 
U43d9: NOP 
case_41:
U43da: NOP SEQW GOTO U2769

U43dc: tmm3:= unk_626(tmm1, tmm0) SEQW GOTO U12e5
U43dd: NOP 
U43de: NOP 

U43e0: NOP 
U43e1: NOP 
case_42:
U43e2: NOP SEQW GOTO U2769

U43e4: SAVEUIP( , 0x01, U61b1) !m0 SEQW GOTO U5f32
U43e5: NOP 
U43e6: NOP 

U43e8: NOP 
U43e9: NOP 
case_43:
U43ea: NOP SEQW GOTO U2769

U43ec: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U43ed: tmp10:= READAFLAGS( , tmp10) !m2 
U43ee: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U3942

U43f0: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp2) !m1,m2 
U43f1: tmp14:= SAVEUIP(0x01, U3945) !m0 SEQW GOTO U1445
case_44:
U43f2: NOP 

U43f4: NOP SEQW GOTO U2769
FUN_ucode_00043f5:
U43f5: tmp0:= MOVEFROMCREG_DSZ64( , 0x01b) 
U43f6: SYNCMARK-> MOVETOCREG_DSZ64(tmp0, 0x752) !m2 

U43f8: tmp4:= ADD_DSZ32(tmp4, 0x00000001) 
U43f9: SYNCWAIT-> r64dst:= OR_DSZ32(tmp4) !m2 SEQW GOTO U17ec
case_45:
U43fa: tmp4:= OR_DSZ64(rbx) 

U43fc: tmp5:= OR_DSZ64(rax) 
U43fd: tmp10:= OR_DSZ64(rdx) 
U43fe: SAVEUIP_REGOVR( , 0x00, U4400, 0xda54) 

U4400: SAVEUIP( , 0x01, U4094) !m0 SEQW GOTO U3ad4
U4401: NOP 
case_46:
U4402: tmp4:= OR_DSZ32(rax) 

U4404: tmp10:= OR_DSZ32(rdx) 
U4405: tmp13:= ZEROEXT_DSZ32(0x00005924) SEQW GOTO U1982
FUN_ucode_0004406:
U4406: SYNCFULL-> tmp1:= MOVEFROMCREG_DSZ64( , 0x120) !m2 

U4408: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U4409) SEQW GOTO U4406
U4409: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x121) SEQW URET1
case_47:
U440a: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b800) !m2 

U440c: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b840) !m2 
U440d: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b880) !m2 
U440e: tmp3:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b8c0) !m2 

U4410: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b900) !m2 
U4411: tmp5:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b940) !m2 SEQW GOTO U30fd
U4412: NOP 

U4414: tmp6:= AND_DSZ32(0x003c7fd7, tmp6) SEQW SAVEUIP0 U4415SEQW GOTO U04e4
U4415: tmp1:= SHR_DSZ32(tmp6, 0x0000000a) 
U4416: tmp1:= AND_DSZ32(0x00000200, tmp1) 

U4418: tmp0:= AND_DSZ32(0x003c4dd7, tmp6) 
U4419: tmp0:= OR_DSZ32(0x00003000, tmp0) 
U441a: tmp0:= OR_DSZ32(tmp1, tmp0) 

U441c: tmp6:= unk_207(tmp0, tmp6) !m1 SEQW GOTO U447d
U441d: tmp11:= SHR_DSZ32(tmp14, 0x0000001a) 
U441e: tmp11:= OR_DSZ32(0x00000009, tmp11) 

U4420: tmp11:= MOVEINSERTFLGS_DSZ32(tmp11, tmp14) 
U4421: tmp7:= SUB_DSZ64(0x00000010, tmp5) 
U4422: tmp4:= SUB_DSZ32(0x00000001, tmp4) 

U4424: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp4, tmp11) 
U4425: tmp7:= ADD_DSZ64(0x00000010, tmp7) SEQW SAVEUIP1 U4426SEQW GOTO U024a
U4426: tmp15:= MOVEFROMCREG_DSZ64( , 0x7e1) 

U4428: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U2711) !m1 
U4429: tmp5:= SAVEUIP( , 0x01, U0ae4) !m0 
U442a: tmp8:= MOVEMERGEFLGS_DSZ64(tmp8, tmp11) 

U442c: tmp15:= SHR_DSZ64(tmp8, 0x00000020) 
U442d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U37f2) 
U442e: tmp2:= AND_DSZ32(0xffffffffffffff00, tmp8) 

U4430: tmp2:= SUB_DSZ32(0x00000800, tmp2) 
U4431: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U37f2) 
U4432: tmp1:= ZEROEXT_DSZ32(0x00000080) SEQW URET1

U4434: tmp3:= SAVEUIP_REGOVR(0x00, U4435, 0x0dd5, 0x00004dd5) SEQW GOTO U04e4
U4435: tmp3:= unk_20d(0x00004fd5, tmp3) !m1 
U4436: tmp3:= unk_201(0x00007fd5, tmp3) !m1 

U4438: tmp3:= CONCAT_DSZ16(0x00000024, tmp3) 
U4439: tmp3:= ZEROEXT_DSZ32N(tmp3) !m1 
U443a: tmp1:= SHL_DSZ32(rax, 0x0000000a) 

U443c: tmp1:= AND_DSZ32(0x00080000, tmp1) 
U443d: tmp0:= AND_DSZ32(0x00080000, tmp6) 
U443e: tmp0:= unk_207(tmp1, tmp0) !m1 

U4440: tmp1:= unk_207(tmp1) 
U4441: tmp1:= SHL_DSZ32(tmp1, 0x00000001) 
U4442: tmp1:= AND_DSZ32(tmp1, tmp6) 

U4444: tmp6:= NOTAND_DSZ32(tmp3, tmp6) 
U4445: tmp6:= OR_DSZ32(tmp0, tmp6) 
U4446: tmp0:= AND_DSZ32(tmp3, rax) 

U4448: tmp6:= OR_DSZ32(tmp0, tmp6) 
U4449: tmp6:= BTR_DSZ32(tmp6, 0x00000010) 
U444a: tmp0:= ZEROEXT_DSZ16(tmp1) 

U444c: tmp1:= XOR_DSZ32(tmp0, tmp1) 
U444d: tmp4:= OR_DSZ32(tmp1, tmp4) 
U444e: tmp0:= AND_DSZ32(0x00000100, rax) 

U4450: tmp0:= unk_207(tmp0) !m1 
U4451: tmp4:= OR_DSZ32(tmp0, tmp4) SEQW GOTO U447d
U4452: NOP 

U4454: tmp4:= unk_208(IMM_MACRO_ALIAS_DATASIZE) !m0 
U4455: tmp4:= unk_207(0x00000004, tmp4) 
U4456: tmp4:= AND_DSZ32(IMM_MACRO_ALIAS_DATASIZE, tmp4) !m0 

U4458: tmp3:= ZEROEXT_DSZ32(0x00254fd5) 
U4459: tmp3:= unk_20d(tmp3, 0x00254dd5) !m1 
U445a: tmp3:= unk_201(0x003f7fd5, tmp3) !m1 

U445c: tmp3:= unk_203(0x00257fd5, tmp3) !m1 
U445d: tmp3:= ZEROEXT_DSZ32N(tmp3) !m1 
U445e: tmp3:= unk_207(0x00004cd5, tmp3) !m1 

U4460: tmp1:= unk_207(0x00080000) !m1 
U4461: tmp0:= SHL_DSZ32(rax, 0x0000000a) 
U4462: tmp0:= AND_DSZ32(tmp1, tmp0) 

U4464: tmp6:= NOTAND_DSZ32(tmp1, tmp6) 
U4465: tmp6:= OR_DSZ32(tmp0, tmp6) 
U4466: tmp1:= SHR_DSZ32(tmp6, 0x0000000b) 

U4468: tmp1:= AND_DSZ32(0x00000200, tmp1) 
U4469: tmp1:= BTS_DSZ32(tmp1, 0x00000008) 
U446a: tmp1:= unk_207(tmp1) !m1 

U446c: tmp1:= AND_DSZ32(tmp1, rax) 
U446d: tmp4:= OR_DSZ32(tmp1, tmp4) 
U446e: tmp6:= NOTAND_DSZ32(tmp3, tmp6) 

U4470: tmp0:= AND_DSZ32(tmp3, rax) 
U4471: tmp6:= OR_DSZ32(tmp0, tmp6) SEQW GOTO U447d
U4472: NOP 

U4474: tmp4:= unk_207(0x00000001) !m1 
U4475: tmp4:= OR_DSZ32(0x00000000, tmp4) 
U4476: tmp3:= ZEROEXT_DSZ32(0x00004100) 

U4478: tmp3:= CONCAT_DSZ16(0x00000003, tmp3) 
U4479: tmp3:= unk_206(tmp3) !m1 
U447a: tmp3:= unk_20e( , tmp3) !m1 

U447c: tmp6:= NOTAND_DSZ32(tmp3, rax) 
U447d: SYNCMARK-> MOVETOCREG_BTR_DSZ64(tmp5, 0x00000010, 0x7fe) !m2 
U447e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U2711) 

U4480: SYNCWAIT-> rax:= ZEROEXT_DSZ32(tmp6) SEQW UEND0
U4481: tmp13:= AND_DSZ32(0x0000003f, tmp13) 
U4482: CMPUJZ_DIRECT_NOTTAKEN(tmp13, 0x00000005, U232c) !m1 SEQW GOTO U2711

U4484: tmp1:= unk_e4b(tmp0, tmp2) SEQW URET0
U4485: tmp0:= OR_DSZN(rax) !m1 
U4486: SAVEUIP( , 0x01, U76a0) !m0 SEQW GOTO U7585

U4488: tmp1:= unk_e4b(tmp0, tmp2) SEQW URET0
U4489: tmp15:= SHL_DSZ64(tmp0, 0x00000020) 
U448a: WRITEURAM(tmp15, 0x0124, 64) SEQW GOTO U5aca

U448c: tmp1:= unk_e4b(tmp0, tmp2) SEQW GOTO U38f8
U448d: NOP 
U448e: NOP 

U4490: tmp1:= unk_e4b(tmp0, tmp2) SEQW URET0
U4491: MOVETOCREG_BTR_DSZ64(tmp10, 0x00000010, 0x7fe) 
U4492: MOVETOCREG_DSZ64( , 0x00000000, 0x065) SEQW GOTO U0414

U4494: tmp1:= unk_e4b(tmp0, tmp2) SEQW GOTO U38f8
U4495: NOP 
U4496: NOP 

U4498: tmp1:= unk_e4b(tmp0, tmp2) SEQW URET0
U4499: tmp0:= SUB_DSZN(tmp0, r64dst) !m1 
U449a: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp0, U5d56) SEQW GOTO U221e

U449c: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 SEQW URET1
FUN_ucode_000449d:
U449d: tmp10:= NOTAND_DSZ32(0x00000008, tmp11) 
U449e: UPDATEUSTATE( , 0x08) SEQW GOTO U2c22

U44a0: tmp1:= unk_e4b(tmp0, tmp2) SEQW URET0
U44a1: tmp7:= AND_DSZ32(0xffff2bff, tmp7) 
U44a2: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp7, 0x0000000a, 0x7f8) !m0,m2 SEQW GOTO U17ec

U44a4: tmp1:= unk_e4b(tmp0, tmp2) !m1 SEQW URET0
U44a5: tmp0:= ZEROEXT_DSZ32(0x0000001c) 
U44a6: tmp1:= ZEROEXT_DSZ32(0x00000000) SEQW GOTO U590a

U44a8: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 SEQW URET1
U44a9: tmp2:= SHL_DSZ32(tmp2, 0x00000006) 
U44aa: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000bc00, tmp2, tmp5) !m2 SEQW GOTO U60d2

U44ac: tmp1:= unk_e4b(tmp0, tmp2) !m1 SEQW GOTO U38f8
U44ad: NOP 
U44ae: NOP 

U44b0: tmp1:= unk_e4b(tmp0, tmp2) !m1 SEQW URET0
U44b1: tmp5:= MOVEMERGEFLGS_DSZ32(tmp5, tmp1) 
U44b2: tmp5:= CMOVCC_DSZ32_CONDZ(tmp5, tmp2) SEQW GOTO U2e2a

U44b4: tmp1:= unk_e4b(tmp0, tmp2) !m1 SEQW URET0
U44b5: tmp12:= STC(0x00003292) 
U44b6: tmp2:= MOVE_DSZ32(0x00000006) SEQW GOTO U1aca

U44b8: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 SEQW URET1
U44b9: tmp5:= ROR_DSZ64(tmp5, tmp1) 
U44ba: tmp5:= AND_DSZ64(tmp12, tmp5) SEQW GOTO U2e2a

U44bc: tmp1:= unk_e4b(tmp0, tmp2) !m1 SEQW GOTO U38f8
U44bd: NOP 
U44be: NOP 

U44c0: tmp1:= unk_e4b(tmp0, tmp2) !m1 SEQW URET0
U44c1: tmp1:= AND_DSZ64(tmp5, tmp1) 
U44c2: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) SEQW GOTO U32f0

U44c4: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW GOTO U38f8
U44c5: NOP 
U44c6: NOP 

U44c8: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW URET0
U44c9: tmp1:= AND_DSZ64(tmp5, tmp1) 
U44ca: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) SEQW GOTO U3200

U44cc: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW GOTO U38f8
U44cd: NOP 
U44ce: NOP 

U44d0: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW URET0
U44d1: tmp2:= BT_DSZ64(tmp3, 0x0000000f) 
U44d2: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00020000) SEQW GOTO U30ed

U44d4: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 SEQW URET1
U44d5: tmp2:= AND_DSZ32(0x00000020, tmp2) 
U44d6: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp1, 0x6c3, tmp2) !m2 SEQW GOTO U3204

U44d8: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW URET0
U44d9: tmp2:= READURAM( , 0x0020, 64) 
U44da: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, U2711, tmp2) !m1 SEQW GOTO U3234

U44dc: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW GOTO U38f8
U44dd: NOP 
U44de: NOP 

U44e0: tmp1:= unk_e4b(tmp0, tmp2) !m2 SEQW URET0
U44e1: tmp13:= ZEROEXT_DSZ32(0x00000008) 
U44e2: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 SEQW GOTO U2896

U44e4: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW GOTO U38f8
U44e5: NOP 
U44e6: NOP 

U44e8: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW URET0
U44e9: tmp1:= ZEROEXT_DSZ64(tmp3) 
U44ea: tmp0:= BTS_DSZ32(0x00000000, 0x00000010) SEQW GOTO U1f91

U44ec: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW GOTO U38f8
U44ed: NOP 
U44ee: NOP 

U44f0: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW URET0
U44f1: tmp0:= ZEROEXT_DSZ32(0x00000001) 
U44f2: tmp0:= BTS_DSZ32(tmp0, 0x00000010) SEQW GOTO U1f91

U44f4: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW GOTO U38f8
U44f5: NOP 
U44f6: NOP 

U44f8: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW URET0
probe_mode_force_sgx_eenter_eresume:
U44f9: tmp0:= CONCAT_DSZ16(0x00000091) 
U44fa: tmp0:= ZEROEXT_DSZ16(0x000075c5, tmp0) SEQW GOTO U3a41

U44fc: tmp1:= unk_e4b(tmp0) !m1,m2 SEQW GOTO U38f8
U44fd: NOP 
U44fe: NOP 

U4500: tmp1:= unk_e4b(tmp0, tmp2) !m1,m2 SEQW URET0
U4501: LFNCEWTMRK-> unk_dff() 
U4502: ADD_DSZ32(r64dst) !m1,m2 SEQW GOTO U17ec

U4504: tmp0:= ZEROEXT_DSZ32(0x00000001) SEQW GOTO U3bea
U4505: NOP 
U4506: SYNCFULL-> MOVETOCREG_OR_DSZ64( , 0x201, tmpv1) !m1,m2 

U4508: MOVETOCREG_OR_DSZ64( , 0x204, tmpv1) !m1,m2 SEQW GOTO U009d
U4509: NOP 
U450a: NOP 

U450c: tmp0:= READURAM( , 0x005c, 64) 
U450d: tmp0:= SHR_DSZ32(tmp0, 0x0000000e) 
U450e: tmp1:= READURAM( , 0x0053, 64) 

U4510: tmp0:= NOTAND_DSZ32(tmp1, tmp0) 
U4511: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U3aa9) !m0,m1,m2 
U4512: tmp2:= READURAM( , 0x0035, 64) SEQW GOTO U58a1

U4514: tmp5:= SAVEUIP_REGOVR(0x00, U4515, 0x0000) SEQW GOTO U5ee8
U4515: MOVETOCREG_DSZ64( , 0x00000000, 0x29d, 32) !m1 
U4516: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1,m2 

U4518: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U4516) 
U4519: tmp12:= ZEROEXT_DSZ32(0x00005e8d) SEQW GOTO U2825
U451a: NOP 

U451c: tmp5:= ZEROEXT_DSZ32() 
U451d: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x0010) !m2 
U451e: tmp0:= READURAM( , 0x0023, 64) 

U4520: tmp0:= XOR_DSZ32(tmp1, tmp0) 
U4521: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000006, U2814) !m0,m1 
U4522: SAVEUIP( , 0x01, U280d) !m0 SEQW GOTO U5e3e

U4524: tmp0:= MOVEFROMCREG_DSZ64( , 0x575) 
U4525: MOVETOCREG_BTS_DSZ64(tmp0, 0x0000000b, 0x575) !m0 
U4526: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x0010) !m2 

U4528: MOVETOCREG_DSZ64(tmp1, 0x562) 
U4529: tmp6:= MOVEFROMCREG_DSZ64( , 0x513) 
U452a: BTUJNB_DIRECT_NOTTAKEN(tmp6, 0x00000000, U1b2a) !m2 SEQW GOTO U1b21

U452c: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x0010) !m2 
U452d: MOVETOCREG_DSZ64(tmp0, 0x563) SEQW GOTO U06ee
U452e: tmp0:= ZEROEXT_DSZ32(0x00000002) 

U4530: SAVEUIP( , 0x00, U3bea) SEQW GOTO U5ee8
U4531: NOP 
U4532: NOP 

U4534: tmp0:= ZEROEXT_DSZ32(0x00000003) 
U4535: tmp5:= SAVEUIP( , 0x00, U3bea) SEQW GOTO U5ee8
U4536: tmp2:= AND_DSZ32(0x00000001, tmp6) 

U4538: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U4119) SEQW GOTO U5d38
U4539: NOP 
U453a: NOP 

U453c: tmp12:= ZEROEXT_DSZ32(0x0000058c) 
U453d: tmp5:= SAVEUIP( , 0x00, U2825) SEQW GOTO U5ee8
U453e: tmp0:= OR_DSZ16(0x00008080, tmp8) 

U4540: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x48c) SEQW GOTO U0404
U4541: NOP 
U4542: NOP 

U4544: tmp5:= ZEROEXT_DSZ32() 
U4545: TESTUSTATE( , UCODE, 0x1000) ? SEQW GOTO U2814
U4546: tmp0:= MOVEFROMCREG_DSZ64( , 0x575) 

U4548: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000000b, U2814) !m0,m1 
U4549: tmp1:= MOVEFROMCREG_DSZ64( , 0x105) 
U454a: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000002, U2814) !m0,m1 SEQW GOTO U31d9

U454c: tmp15:= READURAM( , 0x0053, 64) 
U454d: tmp15:= OR_DSZ64(0x00000001, tmp15) 
U454e: WRITEURAM(tmp15, 0x0053, 32) SEQW GOTO U06ee

FUN_ucode_0004550:
U4550: LBSYNC(0x00000002) SEQW GOTO U2521
U4551: NOP 
U4552: NOP 

U4554: SAVEUIP_REGOVR(0x01, U4555, 0x0000) !m0 
U4555: SAVEUIP( , 0x01, U06ee) !m0 SEQW GOTO U5e4e
U4556: TESTUSTATE( , SYS, !UST_USER_MODE | UST_8086_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW URET1

U4558: SAVEUIP( , 0x00, U6142) SEQW GOTO U0a6d
U4559: NOP 
U455a: NOP 

U455c: SAVEUIP_REGOVR(0x01, U455d, 0x0000) !m0 SEQW GOTO U5e4e
U455d: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x50a0) !m2 
U455e: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x50a8) !m2 

U4560: MOVETOCREG_DSZ64(tmp0, 0x205, 32) !m1 
U4561: MOVETOCREG_DSZ64(tmp1, 0x206, 32) !m1 SEQW GOTO U06ee
U4562: NOP 

U4564: tmp0:= ZEROEXT_DSZ32(0x00000004) 
U4565: tmp5:= SAVEUIP( , 0x00, U3bea) SEQW GOTO U5ee8
U4566: LFNCEWAIT-> tmp15:= unk_d61(tmp2) !m2 

U4568: SAVEUIP_REGOVR(0x01, U4569, 0x0007) !m0 SEQW GOTO U3d2c
U4569: NOP 
U456a: NOP 

U456c: tmp0:= ZEROEXT_DSZ32(0x00000005) 
U456d: tmp5:= SAVEUIP( , 0x00, U3bea) SEQW GOTO U5ee8
U456e: rcx:= ZEROEXT_DSZ16N(tmp4, rcx) !m1 

U4570: GENARITHFLAGS(0x0000003f, tmp10) !m2 SEQW GOTO U069e
U4571: NOP 
U4572: NOP 

U4574: tmp1:= ZEROEXT_DSZ32(0x00000182) 
U4575: tmp1:= CONCAT_DSZ16(0x000000f1, tmp1) 
U4576: WRITEURAM(tmp1, 0x0078, 32) !m2 

U4578: SAVEUIP( , 0x01, U57a1) !m0 SEQW GOTO U6094
U4579: NOP 
U457a: NOP 

U457c: tmp5:= BTS_DSZ32(0x00000000, 0x00000010) 
U457d: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U457e: tmp2:= BT_DSZ32(tmp2, 0x00000011) 

U4580: tmp5:= SELECTCC_DSZ32_CONDNB(tmp2, tmp5) 
U4581: tmp1:= READURAM( , 0x000d, 64) 
U4582: tmp1:= SHR_DSZ64(tmp1, 0x00000020) SEQW GOTO U2591

U4584: SAVEUIP_REGOVR(0x01, U4585, 0x0001) !m0 
U4585: SAVEUIP( , 0x01, U458c) !m0 SEQW GOTO U5e4e
U4586: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3388) 

U4588: NOP SEQW GOTO U2711
U4589: NOP 
U458a: NOP 

U458c: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U0362
U458d: NOP 
U458e: NOP 

U4590: NOP SEQW GOTO U264e
U4591: NOP 
U4592: NOP 

U4594: tmp1:= SUB_DSZ32(0x00000001) 
U4595: SAVEUIP( , 0x01, U45a8) !m0 SEQW GOTO U2799
U4596: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x003c) !m2 

U4598: LFNCEMARK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U60d2) !m1 SEQW GOTO U3398
U4599: NOP 
U459a: NOP 

U459c: SAVEUIP_REGOVR(0x01, U459d, 0x0001) !m0 
U459d: SAVEUIP( , 0x01, U45a8) !m0 SEQW GOTO U5e4e
U459e: tmp7:= MOVE_DSZ32() 

U45a0: tmp9:= ZEROEXT_DSZ32(tmp10) SEQW GOTO U268a
U45a1: NOP 
U45a2: NOP 

U45a4: tmp1:= ADD_DSZ32() SEQW SAVEUIP1 U45a5SEQW GOTO U2799
U45a5: NOP 
U45a6: NOP 

U45a8: tmp5:= SAVEUIP( , 0x00, U31e1) SEQW GOTO U5ee8
U45a9: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 
U45aa: tmp4:= ADD_DSZ64(0x00000008, tmp4) 

U45ac: STADSTGBUF_DSZ64_ASZ16_SC1(tmp2,  , tmp1) 
U45ad: tmp2:= ADD_DSZ64(0x00000020, tmp2) 
U45ae: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U45a9

U45b0: NOP SEQW GOTO U1ea6
U45b1: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 
U45b2: SYNCFULL-> MOVETOCREG_DSZ64(tmp15, 0x752) 

U45b4: unk_256() !m1 
U45b5: tmp0:= READURAM( , 0x003a, 64) 
U45b6: tmp0:= BTR_DSZ64(tmp0, 0x00000020) 

U45b8: WRITEURAM(tmp0, 0x003a, 64) !m2 
U45b9: SIGEVENT( , 0x0000008b) 
U45ba: tmp5:= LDZX_DSZ64_ASZ32_SC1(tmp8, mode=0x18) 

U45bc: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000008, mode=0x18) 
U45bd: tmp1:= READURAM( , 0x0010, 64) 
U45be: tmp1:= NOTAND_DSZ64(0xffffffff, tmp1) 

U45c0: tmp1:= OR_DSZ64(0x0000007f, tmp1) 
U45c1: tmp1:= AND_DSZ64(tmp1, tmp0) 
U45c2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 

U45c4: MOVETOCREG_DSZ64(tmp0, 0x101) !m2 
U45c5: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000010, mode=0x18) 
U45c6: MOVETOCREG_DSZ64(tmp0, 0x102) !m2 

U45c8: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000018, mode=0x18) 
U45c9: tmp1:= ZEROEXT_DSZ32(0xffffffc8) 
U45ca: tmp1:= CONCAT_DSZ32(0xfffe0000, tmp1) 

U45cc: tmp1:= AND_DSZ64(tmp1, tmp0) 
U45cd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 
U45ce: MOVETOCREG_DSZ64(tmp0, 0x0b1) !m2 

U45d0: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000020, mode=0x18) 
U45d1: tmp1:= ZEROEXT_DSZ32(0x0000001f) 
U45d2: tmp1:= AND_DSZ64(tmp1, tmp0) 

U45d4: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 
U45d5: WRITEURAM(tmp0, 0x0052, 64) !m2 
U45d6: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000028, mode=0x18) 

U45d8: unk_25c(tmp0, tmp0) 
U45d9: MOVETOCREG_DSZ64(tmp0, 0x080) !m2 
U45da: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000030, mode=0x18) 

U45dc: unk_25c(tmp0, tmp0) 
U45dd: MOVETOCREG_DSZ64(tmp0, 0x081) !m2 
U45de: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000038, mode=0x18) 

U45e0: unk_25c(tmp0, tmp0) 
U45e1: MOVETOCREG_DSZ64(tmp0, 0x082) !m2 
U45e2: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000040, mode=0x18) 

U45e4: unk_25c(tmp0, tmp0) 
U45e5: SYNCMARK-> MOVETOCREG_DSZ64(tmp0, 0x083) !m2 
U45e6: tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000048, mode=0x18) 

U45e8: tmp0:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000050, mode=0x18) 
U45e9: tmp0:= OR_DSZ64(tmp1, tmp0) 
U45ea: tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000058, mode=0x18) 

U45ec: tmp0:= OR_DSZ64(tmp1, tmp0) 
U45ed: tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000060, mode=0x18) 
U45ee: tmp0:= OR_DSZ64(tmp1, tmp0) 

U45f0: tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000068, mode=0x18) 
U45f1: tmp0:= OR_DSZ64(tmp1, tmp0) 
U45f2: tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000070, mode=0x18) 

U45f4: tmp0:= OR_DSZ64(tmp1, tmp0) 
U45f5: tmp1:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000078, mode=0x18) 
U45f6: tmp0:= OR_DSZ64(tmp1, tmp0) 

U45f8: SYNCWAIT-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 
U45f9: tmp1:= ZEROEXT_DSZ32(0xf0840070) 
U45fa: tmp1:= CONCAT_DSZ32(0xffffff00, tmp1) 

U45fc: tmp1:= AND_DSZ64(tmp1, tmp5) 
U45fd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 
U45fe: UPDATEUSTATE( , 0x04) 

U4600: WRITEURAM( , 0x00000000, 0x003f, 64) !m2 SEQW GOTO U0da6
U4601: tmp9:= ZEROEXT_DSZ32(0x000001fd) 
U4602: tmm5:= unk_744(tmm1) 

U4604: tmm6:= unk_660(tmm5) 
U4605: tmp6:= PINTMOVDTMM2I_DSZ64(tmm6) 
U4606: tmp6:= MOVEINSERTFLGS_DSZ64(tmp6, tmp6) 

U4608: tmp8:= unk_6a0() 
U4609: tmm0:= unk_53f(0x00000000, tmm0) 
U460a: tmm4:= unk_73a() SEQW GOTO U6e81

U460c: MOVETOCREG_DSZ64(tmp1, 0x067) 
U460d: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000bf00) !m2 
U460e: tmp4:= AND_DSZ64(0x000c0000, tmp4) 

U4610: tmp7:= MOVEFROMCREG_DSZ64( , 0x088) 
U4611: tmp7:= NOTAND_DSZ64(0x000c0000, tmp7) 
U4612: MOVETOCREG_OR_DSZ64(tmp7, 0x088, tmp4) 

U4614: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002d0, mode=0x01, tmp12) 
U4615: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001cc, mode=0x01, tmp12) 
U4616: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U0ea9

U4618: tmp2:= TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U461c
U4619: tmp7:= BTR_DSZ64(tmp7, 0x0000000f) 
U461a: tmp2:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00000080) 

U461c: SAVEUIP( , 0x00, U0f95) 
U461d: ROVR<- NOP SEQW SAVEUIP1 U461eSEQW GOTO U0de5
U461e: tmp14:= MOVEINSERTFLGS_DSZ64(tmp4, 0x00000020) 

U4620: TESTUSTATE( , UCODE, !0x0040) !m0 ? SEQW URET0
U4621: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U63f5
U4622: LFNCEMARK-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004a8, mode=0x01, tmp12, 0x00000000) 

U4624: tmp13:= ZEROEXT_DSZ32(0x0000462e) 
U4625: LFNCEWAIT-> FETCHFROMEIP1_ASZ64( , tmp3) !m1 
U4626: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U3e06

U4628: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U462e
U4629: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000001, U28dd) !m1 
U462a: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000002, U35c6) !m0,m1,m2 

U462c: tmp0:= READURAM( , 0x0007, 64) 
U462d: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000003, U3a41) !m0,m1,m2 
U462e: SAVEUIP( , 0x00, U5a44) 

U4630: tmp9:= BT_DSZ32(tmp7, 0x0000000e) SEQW SAVEUIP1 U4631SEQW GOTO U385d
U4631: NOP 
U4632: NOP 

U4634: TESTUSTATE( , SYS, !0x4000) !m0,m1 ? SEQW GOTO U4e74
U4635: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW URET0
U4636: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 

U4638: MSLOOP-> unk_25e( , tmp14) SEQW GOTO U3dfa
U4639: rax:= unk_c45(tmp8, 0x00001800) 
U463a: tmp0:= unk_c45(tmp8, 0x00001808) 

U463c: rcx:= unk_c45(tmp8, 0x00001810) 
U463d: tmp1:= unk_c45(tmp8, 0x00001818) 
U463e: rdx:= unk_c45(tmp8, 0x00001820) 

U4640: tmp2:= unk_c45(tmp8, 0x00001828) 
U4641: rbx:= unk_c45(tmp8, 0x00001830) 
U4642: tmp3:= unk_c45(tmp8, 0x00001838) SEQW URET0

check_rsa_pub_key_hash:
U4644: tmp0:= SUB_DSZ32(0x41b7b4a1, tmp0) 
U4645: tmp1:= SUB_DSZ32(0xdbdc0f7f, tmp1) 
U4646: tmp2:= SUB_DSZ32(0x6ea2ea0f, tmp2) 

U4648: tmp3:= SUB_DSZ32(0xb28fb7b5, tmp3) 
U4649: tmp4:= SUB_DSZ32(0x3f1586cb, tmp4) 
U464a: tmp8:= SUB_DSZ32(0x0388e90c, tmp8) 

U464c: tmp9:= SUB_DSZ32(0xae84cbf5, tmp9) 
U464d: tmp10:= SUB_DSZ32(0x1d90453a, tmp10) 
U464e: tmp0:= OR_DSZ32(tmp1, tmp0) 

U4650: tmp0:= OR_DSZ32(tmp2, tmp0) 
U4651: tmp0:= OR_DSZ32(tmp3, tmp0) 
U4652: tmp0:= OR_DSZ32(tmp4, tmp0) 

U4654: tmp0:= OR_DSZ32(tmp8, tmp0) 
U4655: tmp0:= OR_DSZ32(tmp9, tmp0) 
U4656: tmp0:= OR_DSZ32(tmp10, tmp0) 

U4658: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U5795) 
U4659: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000180) 
U465a: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, 0x00000011, U5795) !m2 

gen_rc4_key:
U465c: tmp0:= ZEROEXT_DSZ32(0x0ed17ed0) 
U465d: tmp0:= CONCAT_DSZ32(0x0ed17ed0, tmp0) 
U465e: tmp1:= ZEROEXT_DSZ32(0x0ed17ed0) 

U4660: tmp1:= CONCAT_DSZ32(0x0ed17ed0, tmp1) 
U4661: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7,  , tmp0) 
U4662: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000008,  , tmp1) 

U4664: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000030,  , tmp0) 
U4665: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000038,  , tmp1) 
U4666: tmp0:= ZEROEXT_DSZ32(0x00000018) 

U4668: LFNCEWAIT-> tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp14, 0x00000060, mode=0x01, tmp0) 
U4669: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000010, tmp0, tmp1) 
U466a: tmp0:= SUB_DSZ64(0x00000008, tmp0) 

U466c: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp0, U466d) SEQW GOTO U4668
U466d: tmp5:= ADD_DSZ64(0x00000000, tmp7) 
U466e: tmp6:= ZEROEXT_DSZ32(0x00000001) 

U4670: tmp7:= ADD_DSZ64(0x00000040, tmp7) 
U4671: tmp11:= ZEROEXT_DSZ16(0x00006161) 
U4672: WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U50c4

U4674: tmp8:= AND_DSZ32(0xe0000001, tmp2) 
U4675: tmp1:= SELECTCC_DSZ32_CONDZ(tmp8, 0x00000040) 
U4676: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U206d

U4678: tmp7:= SHL_DSZ32(tmp7, 0x0000001a) 
U4679: tmp3:= AND_DSZ32(tmp7, tmp10) 
U467a: tmp5:= MOVEFROMCREG_DSZ64( , 0x7ff) 

U467c: tmp6:= SHL_DSZ32(tmp5, 0x00000017) 
U467d: tmp0:= AND_DSZ32(tmp6, tmp3) 
U467e: tmp2:= TESTUSTATE(tmp0, SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U4685

U4680: tmp2:= NOTAND_DSZ32(tmp0, tmp3) 
U4681: tmp2:= SELECTCC_DSZ32_CONDNS(tmp2, 0x00000060) 
U4682: tmp4:= OR_DSZ32(tmp2, tmp4) 

U4684: tmp2:= NOTAND_DSZ32(tmp0, 0x80000000) 
U4685: tmp4:= OR_DSZ32(tmp1, tmp4) 
U4686: tmp2:= SELECTCC_DSZ32_CONDS(tmp2, 0x00000044) 

U4688: tmp4:= OR_DSZ32(tmp2, tmp4) 
U4689: tmp2:= SELECTCC_DSZ32_CONDNS(tmp0, 0x00000010) 
U468a: tmp4:= OR_DSZ32(tmp2, tmp4) 

U468c: UFLOWCTRL( , tmp4, USTATE) 
U468d: tmp1:= SHR_DSZ64(tmp10, 0x00000020) 
U468e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2711) 

U4690: tmp1:= AND_DSZ32(0x60000000, tmp10) 
U4691: tmp1:= SUB_DSZ32(0x20000000, tmp1) 
U4692: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2711) 

U4694: tmp1:= NOTAND_DSZ32(tmp10, 0x80000001) 
U4695: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U2711) !m1 
U4696: LFNCEMARK-> TESTUSTATE( , SYS, UST_VMX_OP_DIS) !m1 ? SEQW GOTO U46a0

U4698: tmp2:= READURAM( , 0x0043, 64) 
U4699: tmp2:= BT_DSZ64(tmp2, 0x00000027) 
U469a: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x80000001) 

U469c: tmp2:= OR_DSZ32(0x00000020, tmp2) 
U469d: tmp2:= NOTAND_DSZ32(tmp10, tmp2) 
U469e: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2711) 

U46a0: tmp10:= AND_DSZ32(0xe005003f, tmp10) 
U46a1: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U46a4
U46a2: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp10, 0x0000001f, U2711) !m0,m1 

U46a4: tmp9:= ZEROEXT_DSZ32(0x000007f6) 
U46a5: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U2d42) SEQW GOTO U0836
U46a6: tmp11:= READURAM( , 0x007a, 64) 

U46a8: tmp11:= SHR_DSZ64(tmp11, 0x00000020) 
U46a9: tmp6:= MOVEFROMCREG_DSZ64( , 0x004) 
U46aa: tmp6:= AND_DSZ32(0x00000020, tmp6) 

U46ac: tmp0:= MOVEMERGEFLGS_DSZ32(0x00002805, tmp6) 
U46ad: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x00002806) 
U46ae: tmp1:= SELECTCC_DSZ64_CONDZ(tmp6, tmp11) 

U46b0: tmp8:= MOVEFROMCREG_DSZ64( , 0x070) 
U46b1: tmp8:= AND_DSZ32(0x00000100, tmp8) 
U46b2: tmp8:= SHL_DSZ32(tmp8, 0x00000014) 

U46b4: tmp0:= OR_DSZ32(tmp8, tmp0) 
U46b5: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U609c
U46b6: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000013, U1f91) !m0,m2 

U46b8: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U1f91) SEQW GOTO U609c
U46b9: tmm3:= FMOV( , tmm0) 
U46ba: tmm5:= unk_7c2(tmm0) 

U46bc: tmm1:= unk_6aa(tmm3, tmm5) 
U46bd: tmm3:= unk_62f(tmm3) 
U46be: tmm1:= unk_62f(tmm1) 

U46c0: tmm5:= unk_637(tmm1, tmm3) 
U46c1: tmp4:= PINTMOVDTMM2I_DSZ32(tmm5) 
U46c2: tmp10:= OR_DSZ32(tmp4, tmp10) SEQW GOTO U2281

U46c4: tmp6:= UFLOWCTRL( , tmp1, MSLOOPCTR) 
U46c5: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x0000068e) 
U46c6: tmp3:= OR_DSZN(rcx) !m1 

U46c8: tmp4:= SAVEUIP( , 0x00, U0686) 
U46c9: UFLOWCTRL(tmp6, tmp0, URET0) 
U46ca: tmp14:= MOVEMERGEFLGS_DSZ32(0x00000466, tmp14) 

U46cc: tmp5:= SAVEUIP( , 0x01, U068e) !m0 
U46cd: tmp6:= UFLOWCTRL( , tmp9, USTATE) 
U46ce: tmp14:= CMOVCC_DSZ32_CONDZ(tmp14, 0x00006551) 

U46d0: tmp2:= CONCAT_DSZ16(tmp9, tmp2) 
U46d1: tmp7:= ADD_DSZN(tmp9, rsi) !m1 
U46d2: UFLOWCTRL(tmp6, tmp14, URET1) 

U46d4: tmp2:= CONCAT_DSZ32(tmp1, tmp2) 
U46d5: tmp8:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U46d6: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U045c) 

U46d8: tmp11:= SHR_DSZN(tmp9, tmp2) !m1 
U46d9: SIGEVENT( , 0x00000033) 
U46da: TESTUSTATE( , UCODE, 0x0102) ? SEQW GOTO U6761

U46dc: LFNCEWAIT-> tmp10:= READURAM( , 0x001e, 64) 
U46dd: tmp3:= ADD_DSZN(tmp9, rdi) !m1 
U46de: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp7, U6760) 

U46e0: tmp8:= LEA_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 
U46e1: tmp11:= SUB_DSZN(tmp11, rcx) !m1 
U46e2: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp3, U6760) 

U46e4: tmp7:= LEA_DSZN_ASZ32_SC1(rdi, mode=0x08) !m1 
U46e5: tmp9:= ZEROEXT_DSZ16N(tmp9) !m1 
U46e6: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, U6760) 

U46e8: tmp11:= SUB_DSZN(tmp8, tmp7) !m1 
U46e9: tmp3:= unk_cd4(rsi) 
U46ea: tmp1:= unk_0aa(tmp1) 

U46ec: tmp11:= SUB_DSZ64(0x00000001, tmp11) 
U46ed: tmp15:= unk_cd4(rdi) 
U46ee: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp3, U6760) 

U46f0: tmp11:= SUB_DSZ64(0x0000000f, tmp11) 
U46f1: tmp1:= SUB_DSZN(tmp1) !m1 
U46f2: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp15, U6760) 

U46f4: tmp3:= SUB_DSZ64(0x0008000f, tmp9) 
U46f5: tmp1:= SHL_DSZN(tmp1, 0x00000004) !m1 
U46f6: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp11, U6760) 

U46f8: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp3, U64b8) SEQW URET0
U46f9: LFNCEWAIT-> TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U46fc
U46fa: tmp3:= unk_d61(tmp2) 

U46fc: tmp0:= unk_d61(tmp2) 
U46fd: unk_e6b(tmp0, tmp2) !m1 
U46fe: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U4708

U4700: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000002b, U07fe) !m0 
U4701: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U4708
U4702: unk_e6b(tmp3) !m1,m2 

U4704: tmp8:= CONCAT_DSZ32(tmp3) 
U4705: tmp8:= TEST_DSZ64(tmp8, tmp8) 
U4706: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp8, U07fe) 

U4708: tmp9:= unk_d61(tmp2) !m2 
U4709: tmp8:= SUB_DSZ64(tmp9, tmp0) 
U470a: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp8) 

U470c: tmp0:= BTS_DSZ64(tmp0, 0x00000029) 
U470d: tmp8:= NOTAND_DSZ32(0x00000007, tmp2) 
U470e: tmp0:= CMOVCC_DSZ64_CONDNZ(tmp9, tmp0) 

U4710: unk_d68(tmp8,  , tmp0) !m2 
U4711: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U46f9) 
U4712: SYNCFULL-> UJMP( , tmp13) 

U4714: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U1925) !m0,m2 
U4715: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000b, U192a) !m0,m2 
U4716: tmp2:= NOTAND_DSZ64(0x00000fff, tmp2) 

U4718: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U1925, tmp0) !m2 
U4719: CMPUJNZ_DIRECT_NOTTAKEN(tmp3, U1925, tmp1) !m2 
U471a: tmp7:= ZEROEXT_DSZ64(0xffffffffffffffff) 

U471c: tmp7:= SHL_DSZ64(tmp7, 0x00000014) 
U471d: tmp7:= AND_DSZ64(tmp1, tmp7) 
U471e: tmp2:= MOVEFROMCREG_DSZ64( , 0x51b) 

U4720: tmp2:= AND_DSZ64(tmp7, tmp2) 
U4721: tmp0:= AND_DSZ64(tmp7, tmp0) 
U4722: CMPUJZ_DIRECT_NOTTAKEN(tmp0, U1925, tmp2) !m2 

U4724: tmp0:= READURAM( , 0x005c, 64) 
U4725: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U1925) !m2 
U4726: tmp0:= ZEROEXT_DSZ32(0x00005b85) 

U4728: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000180,  , tmp0) 
U4729: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U472a: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U1925) !m2 

U472c: tmp0:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 
U472d: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U1925) !m2 
U472e: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x000c) !m2 

U4730: tmp1:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U4731: tmp0:= NOTAND_DSZ32(tmp1, tmp0) 
U4732: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U4734) SEQW GOTO U4741

U4734: SAVEUIP_REGOVR(0x01, U4735, 0x0001) !m0 SEQW GOTO U5e4e
U4735: NOP 
U4736: NOP 

U4738: tmp0:= ZEROEXT_DSZ32(0x0000000b) SEQW SAVEUIP0 U4739SEQW GOTO U60aa
U4739: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x50a0) !m2 
U473a: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x50a8) !m2 

U473c: PORTOUT_DSZ64_ASZ16_SC1(0x4730,  , tmp0) !m2 
U473d: PORTOUT_DSZ64_ASZ16_SC1(0x4738,  , tmp1) !m2 
U473e: MOVETOCREG_DSZ64(tmp0, 0x205, 32) !m1 

U4740: MOVETOCREG_DSZ64(tmp1, 0x206, 32) !m1 
U4741: tmp0:= READURAM( , 0x0023, 64) 
U4742: tmp0:= AND_DSZ64(0x00000040, tmp0) 

U4744: PORTOUT_DSZ64_ASZ16_SC1(0x0010,  , tmp0) !m2 
U4745: tmp0:= ZEROEXT_DSZ32(0x00000003) SEQW SAVEUIP0 U4746SEQW GOTO U60aa
U4746: tmp7:= AND_DSZ32(0x00ff0000, tmp7) 

U4748: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U1925) 
U4749: tmp14:= ZEROEXT_DSZ32(0x00002bae) SEQW GOTO U0434
FUN_ucode_000474a:
U474a: tmp14:= READUIP_REGOVR(0x01) !m0 

U474c: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U474d: LFNCEMARK-> LBSYNC(0x00000002) 
U474e: tmp6:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 

U4750: LFNCEWAIT-> tmp5:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U4751: TESTUSTATE( , SYS, UST_VMX_DIS | UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST | UST_VMX_OP_DIS) !m1 ? SEQW SAVEUIP0 U4752? SEQW GOTO U6662
U4752: tmp0:= OR_DSZN(r64dst) !m1 

U4754: tmp2:= NOTAND_DSZ64(0x00000003, tmp0) 
U4755: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U082e) 
U4756: BTUJNB_DIRECT_NOTTAKEN(tmp10, U082e, tmp0) 

U4758: tmp8:= unk_cc6(tmp5) 
U4759: LFNCEMARK-> LBSYNC(0x00000002) 
U475a: mm4:= unk_76f(tmm0) 

U475c: tmm0:= unk_5ba(tmm0, tmm0) 
U475d: tmm7:= unk_76f(tmm0) 
U475e: MOVEINSERTFLGS_DSZ32() !m2 SEQW URET1

U4760: tmp11:= SUB_DSZ32(0x00000000, rax) 
U4761: LFNCEMARK-> LBSYNC(0x00000002) 
U4762: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4e80

U4764: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U4776
U4765: tmp1:= READURAM( , 0x0011, 64) 
U4766: LFNCEWAIT-> tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp1, 0x00000510, mode=0x01) 

U4768: tmp1:= SHR_DSZ64(tmp2, 0x00000020) 
U4769: tmp3:= BTR_DSZ32(tmp11, 0x0000001f) 
U476a: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp3) 

U476c: tmp2:= CMOVCC_DSZ32_CONDNB(tmp2, tmp1) 
U476d: tmp1:= SHR_DSZ32(tmp2, 0x0000001f) 
U476e: tmp4:= SHL_DSZ32(0x00000001, tmp3) 

U4770: tmp4:= AND_DSZ32(tmp4, tmp2) 
U4771: tmp2:= NOTAND_DSZ32(0x0000001f, tmp3) 
U4772: tmp2:= MOVEMERGEFLGS_DSZ32(tmp1, tmp2) 

U4774: tmp2:= CMOVCC_DSZ32_CONDNZ(tmp2, tmp4) 
U4775: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000000, U1f90) !m2 
U4776: tmp0:= READURAM( , 0x0006, 64) 

U4778: WRITEURAM(tmp0, 0x0171, 64) !m2 
U4779: tmp8:= ADD_DSZ32(rcx) 
U477a: tmp9:= SUB_DSZ32(0x00000002, tmp8) 

U477c: tmp6:= READURAM( , 0x0035, 64) 
U477d: tmp7:= READURAM( , 0x0077, 64) 
U477e: rax:= ZEROEXT_DSZ32() 

U4780: rbx:= ZEROEXT_DSZ32() 
U4781: rcx:= ZEROEXT_DSZ32() 
U4782: rdx:= ZEROEXT_DSZ32() 

U4784: tmp10:= READURAM( , 0x0041, 64) 
U4785: tmp10:= BT_DSZ64(tmp10, 0x00000016) 
U4786: tmp2:= MOVEMERGEFLGS_DSZ32(0x00000015, tmp10) 

U4788: tmp2:= CMOVCC_DSZ32_CONDNB(tmp2, 0x00000002) 
U4789: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp11, U1bce) 
U478a: tmp0:= SUB_DSZ32(tmp2, tmp11) 

U478c: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp0) 
U478d: tmp11:= CMOVCC_DSZ32_CONDNBE(tmp2, tmp11) 
U478e: LFNCEMARK-> tmp0:= SHL_DSZ32(tmp11, 0x00000003) 

U4790: tmp1:= ADD_DSZ32(tmp0, 0x00002414) 
U4791: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, tmp1) 
U4792: rax:= ZEROEXT_DSZ32(tmp2) 

U4794: rbx:= ZEROEXT_DSZ32(0x756e6547) 
U4795: rcx:= ZEROEXT_DSZ32(0x6c65746e) 
U4796: rdx:= ZEROEXT_DSZ32(0x49656e69) SEQW GOTO U17ec

U4798: tmp8:= ZEROEXT_DSZ32() 
U4799: tmp9:= ZEROEXT_DSZ32() 
U479a: tmp15:= TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U479d

U479c: tmp15:= ZEROEXT_DSZ32(0x00000008) 
U479d: tmp15:= OR_DSZ32(0x00000002, tmp15) 
U479e: tmp15:= CONCAT_DSZ32(tmp15, 0x00009800) 

U47a0: SYNCMARK-> MOVETOCREG_DSZ64(tmp15, 0x752) !m2 
U47a1: MOVETOCREG_DSZ64(tmp15, 0x01b) !m2 
U47a2: SAVEUIP( , 0x00, U04cc) SEQW SAVEUIP1 U47a4SEQW GOTO U0139

U47a4: ROVR<-SYNCWAIT-> MOVE_DSZ32() SEQW SAVEUIP1 U47a5SEQW GOTO U02c2
U47a5: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 
U47a6: tmp15:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U47a8: SYNCMARK-> MOVETOCREG_BTR_DSZ64(tmp15, 0x0000000b, 0x6c3) !m0,m2 SEQW SAVEUIP1 U47a9SEQW GOTO U0252
U47a9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000088, mode=0x01, tmp5, tmp7) 
U47aa: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000a0, mode=0x01, tmp5, tmp8) 

U47ac: tmp2:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U47ad: tmp2:= READAFLAGS( , tmp2) !m2 
U47ae: tmp2:= NOTAND_DSZ32(0x00000100, tmp2) 

U47b0: tmp2:= OR_DSZ32(tmp9, tmp2) 
U47b1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000080, mode=0x01, tmp5, tmp2) 
U47b2: tmp2:= RDSEGFLD(FS, BASE) 

U47b4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000a8, mode=0x01, tmp5, tmp2) 
U47b5: tmp2:= RDSEGFLD(GS, BASE) 
U47b6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000b0, mode=0x01, tmp5, tmp2) 

U47b8: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U47b9: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U47bc
U47ba: tmp12:= WRMSLOOPCTRFBR(0x0000000f) 

U47bc: tmp2:= OR_DSZN(rdi) !m1 
U47bd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp5, IMM_MACRO_ALIAS_MSLOOPCTR, mode=0x01,  , tmp2) !m0 
U47be: rdi:= ZEROEXT_DSZ32() 

U47c0: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U47bc
U47c1: tmp11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000010, mode=0x01, tmp1) 
U47c2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000200, mode=0x01, tmp11, 0x00000000) 

U47c4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000208, mode=0x01, tmp11, 0x00000000) 
U47c5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000210, mode=0x01, tmp11, 0x00000000) 
U47c6: tmp6:= READURAM( , 0x005b, 64) 

U47c8: tmp6:= SHR_DSZ64(tmp6, 0x00000038) 
U47c9: tmp4:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U47ca: tmp4:= BT_DSZ64(tmp4, 0x00000012) 

U47cc: tmp6:= SELECTCC_DSZ32_CONDNB(tmp4, tmp6) 
U47cd: tmp6:= OR_DSZ32(0x00000003, tmp6) 
U47ce: SYNCWAIT-> tmp4:= ZEROEXT_DSZ32(tmp6) SEQW GOTO U4cd2

U47d0: tmp6:= UFLOWCTRL( , tmp1, MSLOOPCTR) 
U47d1: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x0000068e) 
U47d2: tmp3:= OR_DSZN(rcx) !m1 

U47d4: tmp4:= SAVEUIP( , 0x00, U0686) 
U47d5: UFLOWCTRL(tmp6, tmp0, URET0) 
U47d6: tmp14:= MOVEMERGEFLGS_DSZ32(0x00000466, tmp14) 

U47d8: tmp5:= SAVEUIP( , 0x01, U068e) !m0 
U47d9: tmp6:= UFLOWCTRL( , tmp9, USTATE) 
U47da: tmp14:= CMOVCC_DSZ32_CONDZ(tmp14, 0x000062aa) 

U47dc: tmp2:= CONCAT_DSZ16(tmp9, tmp2) 
U47dd: tmp7:= ADD_DSZN(tmp9, rdi) !m1 
U47de: UFLOWCTRL(tmp6, tmp14, URET1) 

U47e0: tmp2:= CONCAT_DSZ32(tmp1, tmp2) 
U47e1: tmp8:= AETTRACE(0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U47e2: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U045d) 

U47e4: tmp11:= SHR_DSZN(tmp9, tmp2) !m1 
U47e5: SIGEVENT( , 0x00000037) 
U47e6: TESTUSTATE( , UCODE, 0x0102) ? SEQW GOTO U6851

U47e8: LFNCEWAIT-> tmp10:= READURAM( , 0x001e, 64) 
U47e9: tmp11:= SUB_DSZN(tmp11, rcx) !m1 
U47ea: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp7, U6850) 

U47ec: LEA_DSZN_ASZ32_SC1(rdi, mode=0x08) !m1 
U47ed: tmp9:= ZEROEXT_DSZ16N(tmp9) !m1 
U47ee: tmp15:= unk_cd4(rdi) 

U47f0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp11, U6850) 
U47f1: tmp1:= unk_0aa(tmp1) 
U47f2: tmp3:= SUB_DSZ64(0x0008000f, tmp9) 

U47f4: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp15, U6850) 
U47f5: tmp7:= OR_DSZN(rax) !m1 
U47f6: tmp8:= ZEROEXT_DSZ32(IMM_MACRO_43) !m0 

U47f8: tmp1:= SUB_DSZN(tmp1) !m1 
U47f9: tmp15:= SHL_DSZ64(tmp7, tmp8) 
U47fa: tmp7:= OR_DSZ64(tmp15, tmp7) 

U47fc: tmp8:= ADD_DSZ32(tmp8, tmp8) 
U47fd: tmp15:= SHL_DSZ64(tmp7, tmp8) 
U47fe: tmp7:= OR_DSZ64(tmp15, tmp7) 

U4800: tmp8:= ADD_DSZ32(tmp8, tmp8) 
U4801: tmp15:= SHL_DSZ64(tmp7, tmp8) 
U4802: tmp7:= OR_DSZ64(tmp15, tmp7) 

U4804: tmp1:= SHL_DSZN(tmp1, 0x00000004) !m1 
U4805: tmm1:= unk_747(mm7) 
U4806: tmm1:= SHUFPD(tmm1, tmm1) 

U4808: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp3, U6504) SEQW URET0
U4809: LFNCEMARK-> PORTOUT_DSZ64_ASZ16_SC1(0x00d8,  , tmp5) !m2 SEQW GOTO U2162
U480a: tmp8:= RDSEGFLD(FS, BASE) 

U480c: WRSEGFLD(tmp8, UNK_SEG_04, BASE) 
U480d: tmp8:= RDSEGFLD(FS, SEL+FLGS+LIM) 
U480e: WRSEGFLD(tmp8, UNK_SEG_04, SEL+FLGS+LIM) 

U4810: WRSEGFLD(tmp4, FS, BASE) 
U4811: tmp8:= ZEROEXT_DSZ32(0x0000e0f3) 
U4812: tmp8:= SHL_DSZ32(tmp8, 0x00000010) 

U4814: tmp8:= CONCAT_DSZ32(0xffffffffffffffff, tmp8) 
U4815: LFNCEMARK-> WRSEGFLD(tmp8, FS, SEL+FLGS+LIM) 
U4816: MOVETOCREG_DSZ64(0x00000020, 0x000) 

U4818: LFNCEWAIT-> tmp8:= unk_fcc() 
U4819: tmp8:= RDSEGFLD(UNK_SEG_04, BASE) 
U481a: WRSEGFLD(tmp8, FS, BASE) 

U481c: tmp8:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) 
U481d: WRSEGFLD(tmp8, FS, SEL+FLGS+LIM) 
U481e: tmm6:= FMOV( , 0x00000091) !m0 SEQW GOTO U1948

U4820: tmp0:= MOVE_DSZ32(0x0000003b) 
U4821: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000000, U2224) !m1 
U4822: BTUJNB_DIRECT_NOTTAKEN(tmp1, U4e81, tmp2) 

U4824: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 
U4825: tmp15:= NOTAND_DSZ32(0x000001ff, rcx) 
U4826: tmp2:= AND_DSZ32(0x000001ff, rcx) 

U4828: tmp1:= NOTAND_DSZ64(0x00000fff, tmp1) 
U4829: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U4e81) 
U482a: LFNCEMARK-> tmp1:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp1, tmp2) 

U482c: tmp9:= READURAM( , 0x0057, 64) 
U482d: tmp15:= READURAM( , 0x0077, 64) 
U482e: tmp15:= BT_DSZ32(tmp15, 0x00000010) 

U4830: tmp15:= SELECTCC_DSZ32_CONDB(tmp15, 0x00000040) 
U4831: tmp15:= OR_DSZ32(0x0000001e, tmp15) 
U4832: tmp14:= NOTAND_DSZ64(tmp15, tmp14) 

U4834: tmp15:= AND_DSZ64(tmp14, tmp1) 
U4835: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U4e81) 
U4836: tmp15:= SHR_DSZ32(tmp1, 0x00000001) 

U4838: tmp15:= XOR_DSZ32(tmp15, tmp1) 
U4839: tmp15:= AND_DSZ32(0x0000000a, tmp15) 
U483a: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U4e81) !m0 

U483c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U4e81) 
U483d: tmp4:= NOTAND_DSZ64(0x00000038, tmp1) 
U483e: LFNCEWTMRK-> tmp4:= MOVETOCREG_BTS_DSZ64(tmp4, 0x0000003f, 0x51c) !m0 

U4840: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000300, tmp9, tmp1) 
U4841: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(0x0000039e, tmp9, tmp2) 
U4842: tmp6:= SHR_DSZ64(tmp1, 0x0000000b) 

U4844: tmp6:= OR_DSZ32(0x00000001, tmp6) 
U4845: tmp15:= READURAM( , 0x0079, 64) 
U4846: tmp15:= NOTAND_DSZ64(0x1fffffff, tmp15) 

U4848: tmp6:= OR_DSZ64(tmp6, tmp15) 
U4849: tmp15:= READURAM( , 0x0043, 64) 
U484a: tmp15:= BT_DSZ64(tmp15, 0x00000025) 

U484c: ROVR<- tmp6:= SELECTCC_DSZ64_CONDNB(tmp15, tmp6) SEQW SAVEUIP0 U484d
U484d: WRITEURAM(tmp6, 0x0079, 64) 
U484e: LFNCEWAIT-> tmp6:= unk_163(0x00000000, tmp6) 

U4850: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp6, 0x00000008, 0x79d) SEQW SAVEUIP0 U4851SEQW GOTO U2cd9
U4851: tmp3:= SELECTCC_DSZ32_CONDNZ(tmp6, 0x00000007) 
U4852: NOP 

U4854: LFNCEWAIT-> unk_dff(tmp8) 
U4855: MOVETOCREG_DSZ64(tmp15, 0x63a) 
U4856: MOVETOCREG_OR_DSZ64(tmp3, 0x00000001, 0x63e) 

U4858: SAVEUIP( , 0x01, U17ec) !m0 SEQW GOTO U27ae
FUN_ucode_0004859:
U4859: tmp10:= unk_52b(tmp10) 
U485a: tmm3:= unk_4ec(tmm1) 

U485c: tmm1:= XORPD(tmm1, tmm3) 
U485d: tmm3:= unk_4ec(tmm3) 
U485e: tmm1:= XORPD(tmm1, tmm3) 

U4860: tmm3:= unk_4ec(tmm3) 
U4861: tmm1:= XORPD(tmm1, tmm3) 
U4862: tmm1:= XORPD(tmm1, tmm2) SEQW URET1

U4864: tmp0:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
U4865: tmp0:= OR_DSZ32(0x00000097, tmp0) 
U4866: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x223, 32) !m1 

U4868: MOVETOCREG_DSZ64( , 0x00000000, 0x2f1, 32) !m1 
U4869: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2f2) !m0,m1 
U486a: tmp0:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U486cSEQW GOTO U21a1

U486c: WRITEURAM( , 0x00000000, 0x000f, 32) 
U486d: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp13, U486e) SEQW GOTO U488c
U486e: NOP 

U4870: LFNCEMARK-> tmp15:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U4871: tmp7:= AND_DSZ32(0x00000010, tmp15) 
U4872: rax:= SHR_DSZ32(tmp7, 0x00000002) 

U4874: tmp7:= SHR_DSZ32(tmp15, 0x00000007) 
U4875: tmp7:= AND_DSZ32(0x00000002, tmp7) 
U4876: rax:= OR_DSZ32(rax, tmp7) 

U4878: tmp7:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U4879: tmp7:= NOTAND_DSZ32(tmp7, tmp15) 
U487a: tmp7:= AND_DSZ32(0x00000001, tmp7) 

U487c: rax:= OR_DSZ32(tmp7, rax) 
U487d: tmp15:= SELECTCC_DSZ32_CONDNO(tmp13, 0x00000002) 
U487e: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp15, 0x2d6, 32) !m1 

U4880: tmp15:= SELECTCC_DSZ32_CONDNO(tmp13, 0x00000080) 
U4881: MOVETOCREG_DSZ64(tmp15, 0x2d6, 32) !m1,m2 
U4882: tmp10:= READURAM( , 0x008f, 64) 

U4884: tmp15:= SELECTCC_DSZ32_CONDNS(tmp13, 0x000000e0) 
U4885: tmp15:= ADD_DSZ32(tmp15, 0x00002200) 
U4886: MOVETOCREG_DSZ64(tmp10, tmp15) !m1,m2 

U4888: tmp15:= SELECTCC_DSZ32_CONDNS(tmp13, 0x00000002) 
U4889: LFNCEMARK-> MOVETOCREG_DSZ64(tmp15, 0x2d5, 32) !m1,m2 
U488a: NOP 

U488c: LFNCEWAIT-> WRITEURAM( , 0x00000000, 0x008f, 64) !m2 
U488d: tmp1:= READURAM( , 0x0070, 64) 
U488e: MOVETOCREG_DSZ64(tmp1, 0x2c4, 32) !m1,m2 

U4890: MOVETOCREG_SHR_DSZ64(tmp1, 0x00000018, 0x2da) !m1,m2 
U4891: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 
U4892: tmp0:= MOVEFROMCREG_DSZ64( , 0x008) 

U4894: tmp0:= AND_DSZ32(0x00004000, tmp0) 
U4895: MOVETOCREG_OR_DSZ64(tmp0, 0x008, tmp1) !m2 
U4896: tmp0:= ZEROEXT_DSZ64(tmp14) 

U4898: tmp5:= unk_04d( , IMM_MACRO_21) !m0 SEQW GOTO U5e05
U4899: NOP 
U489a: NOP 

U489c: tmp14:= ZEROEXT_DSZ64(tmp0) SEQW GOTO U0414
U489d: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000e, 0x701) !m0 
U489e: MOVETOCREG_DSZ64(tmp1, 0x511) 

U48a0: tmp10:= MOVEFROMCREG_DSZ64( , 0x510) 
U48a1: BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U5bc5) !m2 
U48a2: tmp0:= BT_DSZ32(tmp10, 0x00000005) 

U48a4: tmp0:= MOVEMERGEFLGS_DSZ32(0x0000002e, tmp0) 
U48a5: tmp0:= CMOVCC_DSZ32_CONDB(tmp0, 0x0000008e) 
U48a6: tmp15:= SIGEVENT(0x00002e12, tmp0) SEQW GOTO U079d

U48a8: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U48a9: tmp4:= MOVE_DSZ64(IMM_MACRO_ALIAS_RIP) !m0 
U48aa: tmp9:= TESTUSTATE( , SYS, UST_OP_SIZE_32BIT | 0x0200) !m1 ? SEQW GOTO U59f6

U48ac: UPDATEUSTATE(rsp, !0x20) !m0 
U48ad: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U48b1
U48ae: tmp4:= MOVEINSERTFLGS_DSZ64(0x00000001, tmp4) 

U48b0: UPDATEUSTATE( , 0x20) 
U48b1: SIGEVENT( , 0x00000077) 
U48b2: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U2c09

U48b4: tmp2:= LDZX_DSZ16_ASZ32_SC1(tmp2, IMM_MACRO_ALIAS_DATASIZE, mode=0x18) !m0 
U48b5: tmp8:= STC(tmp8) 
U48b6: tmp0:= unk_d61(tmp2) 

U48b8: tmp1:= unk_d61(tmp2) 
U48b9: tmp0:= CMOVCC_DSZ64_CONDNB(tmp1, tmp0) 
U48ba: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U589e

U48bc: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U5b84
U48bd: LFNCEWAIT-> tmp11:= unk_e6b(tmp0, tmp2) !m1,m2 
U48be: MOVETOCREG_DSZ64( , 0x00000000, 0x78e) 

U48c0: LFNCEMARK-> tmp1:= MOVETOCREG_SHR_DSZ64(tmp0, 0x00000028, 0x7f5) 
U48c1: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, U6455) 
U48c2: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U62fe

U48c4: tmp1:= SUB_DSZ32(0x00000001) 
U48c5: MOVETOCREG_DSZ64(tmp1, 0x410) 
U48c6: MOVETOCREG_DSZ64( , 0x00000000, 0x700) 

U48c8: tmp1:= SUB_DSZ32(0x0000ffff, tmp0) 
U48c9: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U6455) 
U48ca: tmp1:= SHR_DSZ64(tmp0, 0x00000020) 

U48cc: LFNCEMARK-> tmp1:= ROR_DSZ32(tmp1, 0x00000008) 
U48cd: tmp1:= AND_DSZ32(0xffffffffffffef00, tmp1) 
U48ce: tmp1:= SUB_DSZ32(0x0000cf00, tmp1) 

U48d0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U6455) 
U48d1: tmp1:= MOVEFROMCREG_DSZ64( , 0x73c) 
U48d2: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000e, U6455) !m0,m1 

U48d4: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U48d9
U48d5: tmp1:= RDSEGFLD(CS, SEL) 
U48d6: LFNCEWAIT-> STADPPHYS_DSZN_ASZ32_SC1(rsp, IMM_MACRO_fb, mode=0x0a,  , tmp1) !m0,m1 

U48d8: STADPPHYS_DSZN_ASZ32_SC1(rsp, IMM_MACRO_f3, mode=0x0a,  , tmp4) !m0,m1 
U48d9: rsp:= ADD_DSZ32(tmp9, rsp) 
U48da: LFNCEWAIT-> FETCHFROMEIP1_ASZ32( , tmp3) 

U48dc: tmp0:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U48dd: WRSEGFLD(tmp0, CS, SEL+FLGS+LIM) 
U48de: tmp0:= RDSEGFLD(UNK_SEG_09, BASE) 

U48e0: WRSEGFLD(tmp0, CS, BASE) 
U48e1: MJMPTARGET_INDIRECT_ASZ32( , tmp3) SEQW UEND0
U48e2: tmp2:= TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U48e8

U48e4: tmp0:= READURAM( , 0x0042, 64) 
U48e5: tmp0:= BT_DSZ32(tmp0, 0x0000001f) 
U48e6: tmp2:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000002) 

U48e8: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1 
U48e9: tmp0:= BT_DSZ32(tmp0, 0x00000003) 
U48ea: tmp2:= SELECTCC_DSZ32_CONDNB(tmp0, tmp2) 

U48ec: tmp2:= OR_DSZ32(0x00000001, tmp2) 
U48ed: tmp2:= NOTAND_DSZN(tmp2, rcx) !m1 
U48ee: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U1f51) 

U48f0: tmp5:= AND_DSZ32(0x00000002, rcx) 
U48f1: tmp2:= NOTAND_DSZ32(rax, 0x000000f0) 
U48f2: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U0172) 

U48f4: LFNCEMARK-> tmp3:= AND_DSZ32(0x00000001, rcx) 
U48f5: tmp0:= OR_DSZ32(rax) 
U48f6: tmp2:= READURAM( , 0x005c, 64) 

U48f8: tmp2:= BT_DSZ32(tmp2, 0x00000019) 
U48f9: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, tmp0) 
U48fa: tmp2:= AND_DSZ32(0x000000f0, tmp2) 

U48fc: tmp2:= SUB_DSZ32(0x00000020, tmp2) 
U48fd: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp2, U4908) 
U48fe: WRMSLOOPCTRFBR( , 0x0000003f) 

U4900: tmp2:= ZEROEXT_DSZ32(0x0000005f) 
U4901: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, tmp2) 
U4902: tmp2:= SUBR_DSZ64(tmp2, IMM_MACRO_01) !m0 

U4904: MOVETOCREG_DSZ64( , 0x00000000, tmp2) 
U4905: tmp2:= SUBR_DSZ64(tmp2, 0x00000001) SEQW GOTO U4901
U4906: MOVETOCREG_DSZ64( , 0x00000000, 0x009) 

U4908: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U4909: tmp10:= READAFLAGS( , tmp10) !m2 
U490a: tmp2:= SHR_DSZ32(tmp10, 0x00000009) 

U490c: tmp2:= OR_DSZ32(tmp2, tmp3) 
U490d: tmp4:= MOVEFROMCREG_DSZ64( , 0x01d) 
U490e: tmp4:= SHR_DSZ32(tmp4, 0x00000001) 

U4910: tmp2:= AND_DSZ32(tmp2, tmp4) 
U4911: tmp1:= NOTAND_DSZ32(tmp2, tmp1) 
U4912: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U0172) 

U4914: tmp12:= OR_DSZ32() 
U4915: tmp0:= ROR_DSZ8(tmp0, 0x00000004) 
U4916: tmp0:= ADD_DSZ8(tmp0, 0x00000001) 

U4918: tmp4:= SHL_DSZ32(tmp0, 0x00000008) 
U4919: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U491a: tmp2:= SUB_DSZ32(0x00000002, tmp0) 

U491c: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDLE(tmp2, U4928) 
U491d: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x00c8) !m2 
U491e: tmp1:= SHR_DSZ32(tmp1, 0x00000010) 

U4920: tmp1:= AND_DSZ32(0x00000007, tmp1) 
U4921: tmp8:= SUB_DSZ32(tmp1, tmp0) 
U4922: tmp1:= MOVEMERGEFLGS_DSZ32(tmp1, tmp8) 

U4924: tmp0:= CMOVCC_DSZ32_CONDNBE(tmp1, tmp0) 
U4925: tmp0:= AND_DSZ32(0x00000007, tmp0) 
U4926: tmp2:= SUB_DSZ32(0x00000002, tmp0) 

U4928: tmp2:= MOVEMERGEFLGS_DSZ32(0x00000001, tmp2) 
U4929: tmp0:= CMOVCC_DSZ32_CONDZ(tmp2, tmp0) 
U492a: tmp11:= OR_DSZ32(0x00010000, tmp4) 

U492c: tmp11:= OR_DSZ32(tmp0, tmp11) 
U492d: LFNCEWAIT-> WRITEURAM(tmp11, 0x000f, 32) 
U492e: tmp2:= ADD_DSZ32(tmp0, tmp0) 

U4930: tmp2:= OR_DSZ32(tmp2, tmp3) 
U4931: tmp2:= OR_DSZ32(0x00000020, tmp2) 
U4932: tmp2:= CONCAT_DSZ16(tmp2) 

U4934: WRITEURAM(tmp2, 0x0007, 32) 
U4935: NOP 
U4936: TESTUSTATE( , UCODE, !0x3000) !m0 ? SEQW GOTO U2f05

U4938: tmp1:= SUB_DSZ32(0x00000001, tmp0) 
U4939: tmp4:= SHL_DSZ32(tmp1, 0x00000002) 
U493a: tmp4:= ADD_DSZ32(0x00000063, tmp4) 

U493c: SIGEVENT( , tmp4) 
U493d: tmp1:= NOTAND_DSZ32(tmp1, 0x00000007) 
U493e: SYNCMARK-> MOVETOCREG_OR_DSZ64(tmp12, 0x6c5, tmp1) !m2 

U4940: tmp4:= SHL_DSZ32(tmp3, 0x00000006) 
U4941: MOVETOCREG_DSZ64(tmp4, 0x007) !m2 
U4942: tmp9:= ZEROEXT_DSZ32(0x00700084) 

U4944: tmp9:= CONCAT_DSZ32(tmp9, 0x00000000) 
U4945: tmp7:= MOVE_DSZ32(0x00000010) 
U4946: tmp8:= ZEROEXT_DSZ32(0x00000008) 

U4948: tmp6:= TESTUSTATE( , VMX, !0x0001) !m0,m2 ? SEQW GOTO U494e
U4949: tmp2:= SHR_DSZ32(tmp10, 0x00000009) 
U494a: tmp2:= OR_DSZ32(tmp3, tmp2) 

U494c: tmp2:= NOTAND_DSZ32(tmp2, 0x00000001) 
U494d: tmp9:= OR_DSZ64(tmp2, tmp9) 
U494e: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U4950) SEQW GOTO U498c

U4950: MOVETOCREG_BTS_DSZ64( , 0x00000009, 0x072) 
U4951: tmp5:= CONCAT_DSZ32(rdx, rbx) 
U4952: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U498c) 

U4954: LBSYNC(0x00000001) 
U4955: LBSYNC(0x00000001) SEQW SAVEUIP1 U4956SEQW GOTO U5f7a
U4956: tmp12:= MOVEFROMCREG_DSZ64( , 0x2b2, 32) !m1 

U4958: tmp5:= AND_DSZ32(0x00010000, tmp12) 
U4959: tmp4:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U495a: tmp4:= OR_DSZ32(tmp9, tmp4) 

U495c: tmp4:= AND_DSZ32(0x00000001, tmp4) 
U495d: tmp5:= OR_DSZ32(tmp5, tmp4) 
U495e: tmp12:= AND_DSZ32(0x000000f0, tmp12) 

U4960: tmp4:= MOVEFROMCREG_DSZ64( , 0x28a, 32) !m1 
U4961: tmp4:= AND_DSZ32(0x000000f0, tmp4) 
U4962: tmp4:= SUB_DSZ32(tmp4, tmp12) 

U4964: tmp4:= SELECTCC_DSZ32_CONDNBE(tmp4, 0x00000001) 
U4965: tmp5:= OR_DSZ32(tmp4, tmp5) 
U4966: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x2d5) !m0,m1 

U4968: tmp4:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1,m2 
U4969: BTUJNB_DIRECT_NOTTAKEN(tmp4, 0x00000004, U496a) SEQW GOTO U4968
U496a: tmp12:= MOVEFROMCREG_DSZ64( , 0x2d9, 32) !m1 

U496c: tmp13:= AND_DSZ32(0x00000004, tmp4) 
U496d: tmp4:= NOTAND_DSZ32(tmp4, 0x00000004) 
U496e: tmp5:= OR_DSZ32(tmp4, tmp5) 

U4970: tmp4:= SUB_DSZ64(tmp3, tmp12) 
U4971: tmp4:= SELECTCC_DSZ32_CONDBE(tmp4, 0x00000001) 
U4972: tmp4:= OR_DSZ32(tmp4, tmp5) 

U4974: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U4975) SEQW GOTO U498c
U4975: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2d6) !m1 
U4976: NOP 

U4978: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2d6) !m0,m1,m2 
U4979: NOP 
U497a: NOP 

U497c: LFNCEWAIT-> tmp4:= MOVEFROMCREG_DSZ64( , 0x2d4, 32) !m1 
U497d: tmp4:= NOTAND_DSZ32(tmp4, 0x00020000) 
U497e: tmp4:= OR_DSZ32(tmp4, tmp5) 

U4980: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U4981) SEQW GOTO U498c
U4981: tmp4:= SHL_DSZ32(tmp13, 0x00000008) 
U4982: MOVETOCREG_BTS_DSZ64(tmp4, 0x0000000b, 0x072) !m0 

U4984: tmp6:= ZEROEXT_DSZ64(tmp12) 
U4985: MOVETOCREG_DSZ64(tmp3, 0x2e0, 32) !m1 
U4986: tmp4:= ZEROEXT_DSZ32(0x00000082) 

U4988: LFNCEMARK-> MOVETOCREG_DSZ64(tmp4, 0x2d5, 32) !m1,m2 
U4989: NOP 
U498a: NOP 

U498c: LFNCEWAIT-> WRITEURAM(tmp6, 0x008f, 64) 
U498d: MOVETOCREG_AND_DSZ64(tmp11, 0x00000007, 0x2f1) !m0,m1 SEQW SAVEUIP1 U498eSEQW GOTO U669d
U498e: NOP 

U4990: SYNCWAIT-> TESTUSTATE( , UCODE, 0x000c) ? SEQW GOTO U77d6
U4991: NOP 
U4992: NOP 

U4994: SAVEUIP( , 0x00, U2acd) SEQW GOTO U3048
U4995: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U4996: MOVETOCREG_BTS_DSZ64(tmp1, 0x29d) !m1 

U4998: tmp14:= ZEROEXT_DSZ64N(tmp4) !m1 
U4999: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000008) 
U499a: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U6f3d) !m1 

U499c: tmp0:= READURAM( , 0x005c, 64) 
U499d: tmp11:= ZEROEXT_DSZ32(0x00000005) 
U499e: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U27dc) !m1 SEQW GOTO U68ad

U49a0: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U49a6
U49a1: tmp1:= READURAM( , 0x003a, 64) 
U49a2: tmp2:= READURAM( , 0x005d, 64) 

U49a4: tmp3:= READURAM( , 0x005e, 64) 
U49a5: tmp4:= READURAM( , 0x0052, 64) 
U49a6: WRMSLOOPCTRFBR( , 0x0000008f) 

U49a8: LFNCEWAIT-> WRITEURAM( , 0x00000000, 0x0008, 64) !m0 
U49a9: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U49a8
U49aa: NOP 

U49ac: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U43e4
U49ad: NOP 
U49ae: tmp6:= PORTIN_DSZ32_ASZ16_SC1(0x48e8) !m2 

U49b0: tmp0:= MOVEFROMCREG_DSZ64( , 0x21d, 32) !m1 
U49b1: tmp0:= BT_DSZ32(tmp0, 0x00000008) 
U49b2: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000003) 

U49b4: tmp0:= SHR_DSZ32(tmp6, tmp0) 
U49b5: tmp0:= AND_DSZ32(0x00000007, tmp0) 
U49b6: LFNCEMARK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp0, 0x00000003, U49cc) !m0 

U49b8: tmp0:= ZEROEXT_DSZ32(0x00000020) 
U49b9: WRMSLOOPCTRFBR( , 0x0000003f) 
U49ba: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, tmp0) 

U49bc: tmp0:= ADD_DSZ32(0x00000001, tmp0) 
U49bd: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U49ba
U49be: NOP 

U49c0: MOVETOCREG_DSZ64( , 0x00000000, 0x009) SEQW SAVEUIP1 U49c1SEQW GOTO U5f32
U49c1: tmp1:= ZEROEXT_DSZ64(tmp10) 
U49c2: tmp2:= ZEROEXT_DSZ32() 

U49c4: tmp3:= ZEROEXT_DSZ32() 
U49c5: tmp4:= ZEROEXT_DSZ32() 
U49c6: MOVETOCREG_DSZ64( , 0x00000000, 0x609) 

U49c8: MOVETOCREG_DSZ64( , 0x00000000, 0x60a) 
U49c9: MOVETOCREG_DSZ64( , 0x00000000, 0x10d) 
U49ca: MOVETOCREG_DSZ64( , 0x00000000, 0x10e) 

U49cc: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U49da
U49cd: tmp0:= BTR_DSZ32(tmp6, 0x00000006) 
U49ce: tmp0:= AND_DSZ32(0x000001c0, tmp0) 

U49d0: tmp0:= SUB_DSZ32(0x00000080, tmp0) 
U49d1: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U49da) 
U49d2: NOP 

U49d4: LFNCEWAIT-> tmp0:= MOVETOCREG_DSZ64( , 0x00000000, 0x382, 32) !m1 
U49d5: MOVETOCREG_DSZ64(tmp0, 0x381, 32) !m1 
U49d6: tmp0:= MOVETOCREG_DSZ64( , 0x00000000, 0x386, 32) !m1 

U49d8: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000035, 0x385) !m1 
U49d9: MOVETOCREG_DSZ64( , 0x00000000, 0x387, 32) !m1 
U49da: WRITEURAM(tmp1, 0x003a, 64) !m2 

U49dc: WRITEURAM(tmp2, 0x005d, 64) !m2 
U49dd: WRITEURAM(tmp3, 0x005e, 64) !m2 
U49de: WRITEURAM(tmp4, 0x0052, 64) !m2 SEQW GOTO U61b1

U49e0: tmp9:= AND_DSZ32(0x0000000a, tmp11) 
U49e1: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U1035) 
U49e2: tmp7:= BTR_DSZ32(tmp7, 0x00000011) 

U49e4: tmp4:= SHR_DSZ32(tmp11, 0x0000000e) 
U49e5: tmp4:= AND_DSZ32(0x00000003, tmp4) 
U49e6: tmp9:= AND_DSZ32(0x00001000, tmp11) 

U49e8: tmp4:= MOVEMERGEFLGS_DSZ32(tmp4, tmp9) 
U49e9: tmp9:= SHL_DSZ32(tmp9, 0x00000005) 
U49ea: tmp7:= OR_DSZ32(tmp9, tmp7) 

U49ec: tmp9:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 
U49ed: tmp9:= ROR_DSZ64(tmp9, 0x00000015) 
U49ee: tmp9:= NOTAND_DSZ64(0x00000003, tmp9) 

U49f0: tmp9:= OR_DSZ64(tmp4, tmp9) 
U49f1: tmp9:= ROL_DSZ64(tmp9, 0x00000015) 
U49f2: LFNCEMARK-> WRSEGFLD(tmp9, SS_USERM, SEL+FLGS+LIM) 

U49f4: LFNCEWAIT-> BTUJNB_DIRECT_NOTTAKEN(tmp11, 0x00000002, U49f8) !m0 
U49f5: tmp9:= READURAM( , 0x0043, 64) 
U49f6: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000027, U4a00) !m0 

U49f8: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000001, U4a00) 
U49f9: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U4a00) 
U49fa: LFNCEMARK-> tmp9:= RDSEGFLD(SS_USERM, SEL) 

U49fc: tmp9:= NOTAND_DSZ32(0x00000003, tmp9) 
U49fd: tmp9:= OR_DSZ32(tmp4, tmp9) 
U49fe: LFNCEWAIT-> WRSEGFLD(tmp9, SS_USERM, UNK_FLD_0c) 

U4a00: tmp9:= CONCAT_DSZ32(0x0000ffff) 
U4a01: tmp9:= AND_DSZ64(tmp11, tmp9) 
U4a02: tmp10:= AND_DSZ32(0x00000020, tmp11) 

U4a04: tmp10:= SHL_DSZ32(tmp10, 0x00000003) 
U4a05: tmp9:= OR_DSZ64(tmp9, tmp10) 
U4a06: SYNCFULL-> WRITEURAM(tmp9, 0x001f, 64) !m2 

U4a08: MOVETOCREG_SHR_DSZ64(tmp11, 0x00000008, 0x01d) 
U4a09: tmp13:= BT_DSZ32(tmp11, 0x00000002) 
U4a0a: tmp13:= MOVEMERGEFLGS_DSZ32(0x00005b34, tmp13) 

U4a0c: tmp13:= CMOVCC_DSZ32_CONDNB(tmp13, 0x00005dca) 
U4a0d: SYNCMARK-> UFLOWCTRL( , tmp13, URET0) 
U4a0e: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U1016

U4a10: tmp9:= CONCAT_DSZ32(0x7ffffc00) 
U4a11: tmp8:= READURAM( , 0x0089, 64) 
U4a12: tmp8:= AND_DSZ64(tmp9, tmp8) 

U4a14: LFNCEMARK-> tmp10:= READURAM( , 0x0014, 64) !m2 
U4a15: NOP 
U4a16: NOP 

U4a18: LFNCEWAIT-> tmp10:= NOTAND_DSZ64(tmp9, tmp10) 
U4a19: NOP 
U4a1a: NOP 

U4a1c: ROVR<-SYNCWTMRK-> tmp8:= OR_DSZ64(tmp10, tmp8) SEQW SAVEUIP1 U4a1dSEQW GOTO U1c9a
U4a1d: NOP 
U4a1e: NOP 

U4a20: SYNCWTMRK-> SAVEUIP( , 0x01, U1022) !m0 SEQW GOTO U595a
U4a21: MOVETOCREG_DSZ64(tmp6, 0x00e) 
U4a22: tmp1:= SHR_DSZ32(tmp7, 0x00000010) 

U4a24: tmp2:= ADD_DSZ32(IMM_MACRO_ALIAS_DATASIZE) !m0 
U4a25: tmp3:= AND_DSZ8(0x00000002, tmp2) 
U4a26: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp3, tmp1) 

U4a28: MOVETOCREG_DSZ64(tmp1, 0x00f) 
U4a29: MOVETOCREG_DSZ64(tmp8, 0x00a) 
U4a2a: MOVETOCREG_DSZ64( , 0x00000000, 0x00d) SEQW URET0

U4a2c: LFNCEMARK-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U4a2d: MOVETOCREG_BTR_DSZ64(tmp10, 0x00000010, 0x7fe) !m2 
U4a2e: tmp9:= MOVEFROMCREG_DSZ64( , 0x00f) 

U4a30: tmp3:= AND_DSZ32(0x0000073f, tmp9) 
U4a31: tmp2:= ADD_DSZ8(0x00000040, tmp9) 
U4a32: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000040) 

U4a34: tmp9:= OR_DSZ32(tmp2, tmp3) 
U4a35: tmp5:= BT_DSZ32(tmp9, 0x00000005) 
U4a36: tmp5:= SELECTCC_DSZ32_CONDNB(tmp5, 0x0000000d) 

U4a38: tmp5:= OR_DSZ32(0x00000008, tmp5) 
U4a39: tmp5:= SHL_DSZ64(tmp5, 0x0000000b) 
U4a3a: tmp3:= AND_DSZ32(0x00000600, tmp9) 

U4a3c: tmp2:= XOR_DSZ32(0x00000600, tmp3) 
U4a3d: tmp2:= MOVEMERGEFLGS_DSZ32(0x00000002, tmp2) 
U4a3e: tmp4:= CMOVCC_DSZ32_CONDZ(tmp2, 0x00000000) 

U4a40: tmp1:= XOR_DSZ32(0x00000400, tmp3) 
U4a41: tmp1:= MOVEMERGEFLGS_DSZ32(0x00000001, tmp1) 
U4a42: tmp4:= CMOVCC_DSZ32_CONDZ(tmp1, tmp4) 

U4a44: tmp4:= SHL_DSZ64(tmp4, 0x00000023) 
U4a45: tmp5:= OR_DSZ64(tmp4, tmp5) 
U4a46: tmp2:= AND_DSZ32(0x00000007, tmp9) 

U4a48: tmp10:= SHL_DSZ64(tmp2, 0x00000003) 
U4a49: tmp2:= SHL_DSZ64(tmp2, 0x0000001c) 
U4a4a: LFNCEWAIT-> tmp2:= OR_DSZ64(tmp10, tmp2) 

U4a4c: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp2, 0x752, tmp5) 
U4a4d: tmm4:= unk_73a() 
U4a4e: tmm5:= unk_704(tmm1) 

U4a50: tmm6:= unk_660(tmm5) 
U4a51: tmp6:= PINTMOVDTMM2I_DSZ32(tmm6) 
U4a52: tmp6:= MOVEINSERTFLGS_DSZ32(tmp6, tmp6) 

U4a54: MOVETOCREG_SHR_DSZ64(tmp6, 0x00000006, 0x6c5) !m0,m2 
U4a55: tmp0:= MOVEFROMCREG_DSZ64( , 0x486) 
U4a56: tmp4:= AND_DSZ16(0x00001839, tmp7) 

U4a58: tmp1:= AND_DSZ16(0x00000020, tmp0) 
U4a59: tmp2:= SUB_DSZ16(0x00000020, tmp4) 
U4a5a: tmp2:= OR_DSZ16(tmp1, tmp2) 

U4a5c: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U054c) 
U4a5d: tmm3:= unk_620(tmm5) 
U4a5e: tmp3:= PINTMOVDTMM2I_DSZ32(tmm3) 

U4a60: tmp10:= SHR_DSZ32(tmp7, 0x00000003) 
U4a61: tmp10:= AND_DSZ32(0x00000300, tmp10) 
U4a62: tmp4:= SHL_DSZ32(tmp7, 0x00000003) 

U4a64: tmp4:= AND_DSZ32(0x000000c0, tmp4) 
U4a65: tmp11:= MOVEINSERTFLGS_DSZ32(tmp7, 0x000000c0) 
U4a66: tmp4:= CMOVCC_DSZ16_CONDB(tmp11, tmp4) 

U4a68: SYNCWTMRK-> UFLOWCTRL( , tmp3, URET1) 
U4a69: tmp3:= OR_DSZ32(0x00000c00, tmp10) 
U4a6a: tmp7:= OR_DSZ32(tmp4, tmp3) 

U4a6c: NOP 
U4a6d: NOP 
U4a6e: SYNCWAIT-> SAVEUIP( , 0x00, U39b5) SEQW URET1

U4a70: SAVEUIP_REGOVR(0x01, U4a71, 0x0001) !m0 SEQW GOTO U0ba9
U4a71: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(rax, 0x0000001c,  , tmp1) 
U4a72: tmp1:= READURAM( , 0x0020, 64) 

U4a74: tmp1:= AND_DSZ32(0x00007ffe, tmp1) 
U4a75: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 
U4a76: LFNCEWAIT-> tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(rax) 

U4a78: tmp4:= unk_224(tmp2, tmp1) 
U4a79: tmp4:= ADD_DSZ32(tmp4, rax) 
U4a7a: tmp4:= ADD_DSZ32(0x00000020, tmp4) 

U4a7c: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be00,  , tmp4) !m2 
U4a7d: STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be80,  , tmp4) !m2 
U4a7e: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(rax, 0x00000008) 

U4a80: tmp5:= unk_224(tmp2, tmp5) 
U4a81: tmp5:= ADD_DSZ32(tmp5, rax) 
U4a82: tmp5:= ADD_DSZ32(0x00000020, tmp5) 

U4a84: PORTOUT_DSZ32_ASZ16_SC1(0x50cc,  , tmp5) !m2 
U4a85: tmp7:= ZEROEXT_DSZ32(0x00002010) 
U4a86: tmp7:= BTS_DSZ32(tmp7, 0x0000001f) 

U4a88: tmp1:= PORTIN_DSZ32_ASZ16_SC1(tmp7) 
U4a89: tmp7:= PORTIN_DSZ32_ASZ16_SC1(tmp7) 
U4a8a: tmp7:= CONCAT_DSZ32(tmp1, tmp7) 

U4a8c: tmp7:= SHR_DSZ64(tmp7, 0x00000014) 
U4a8d: tmp7:= SHL_DSZ64(tmp7, 0x0000000c) 
U4a8e: PORTOUT_DSZ32_ASZ16_SC1(0x50c0,  , tmp7) !m2 

U4a90: SAVEUIP_REGOVR(0x01, U4a91, 0x0005) !m0 SEQW GOTO U02ba
U4a91: tmp4:= PORTIN_DSZ32_ASZ16_SC1(0x50c8) !m2 
U4a92: tmp1:= READURAM( , 0x0020, 64) 

U4a94: tmp1:= AND_DSZ32(0x00007ffe, tmp1) 
U4a95: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 
U4a96: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp4, U0d22, tmp1) 

U4a98: tmp2:= BTS_DSZ32(0x00000000, 0x0000001e) 
U4a99: LFNCEWTMRK-> CMPUJZ_DIRECT_NOTTAKEN(tmp4, U0d19, tmp2) 
U4a9a: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 

U4a9c: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000be00) !m2 
U4a9d: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2) 
U4a9e: LFNCEMARK-> tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000008) 

U4aa0: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp5, tmp4) !m1 
U4aa1: NOP 
U4aa2: NOP 

U4aa4: LFNCEMARK-> tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000004) 
U4aa5: NOP 
U4aa6: NOP 

U4aa8: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, tmp4) !m1 
U4aa9: tmp6:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp2, 0x0000001f) 
U4aaa: tmp2:= ADD_DSZ32(0x00000020, tmp2) 

U4aac: LFNCEMARK-> tmp6:= AND_DSZ32(0x000000c0, tmp6) 
U4aad: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U4aae) SEQW GOTO U4a9d
U4aae: tmp5:= ZEROEXT_DSZ32(0x0000000f) 

U4ab0: tmp5:= CONCAT_DSZ32(0x00000007, tmp5) 
U4ab1: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp5, 0x20f, 32) !m1 
U4ab2: tmp2:= ZEROEXT_DSZ32(0x00000002) 

U4ab4: LFNCEMARK-> STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be40,  , tmp2) !m2 
U4ab5: NOP SEQW GOTO U21fe
U4ab6: tmp2:= ZEROEXT_DSZ32(0x00030300) 

U4ab8: MOVETOCREG_DSZ64(tmp2, 0x631) 
U4ab9: MOVETOCREG_DSZ64( , 0x00000000, 0x634) !m2 
U4aba: MOVETOCREG_DSZ64( , 0x00000000, 0x635) !m2 

U4abc: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x630) !m2 
U4abd: TESTUSTATE( , UCODE, 0x0044) ? SEQW GOTO U4acc
U4abe: tmp2:= MOVEFROMCREG_DSZ64( , 0x2c2, 32) !m1 

U4ac0: MOVETOCREG_BTR_DSZ64(tmp2, 0x00000005, 0x2c2) !m1 
U4ac1: tmp2:= MOVEFROMCREG_DSZ64( , 0x3cf, 32) !m1 
U4ac2: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000008, U4ac4) SEQW GOTO U4acc

U4ac4: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1 
U4ac5: tmp0:= NOTAND_DSZ64(0x08000040, tmp0) 
U4ac6: tmp1:= BTS_DSZ64(tmp0, 0x0000001c) 

U4ac8: tmp0:= BTS_DSZ64(tmp1, 0x0000001e) 
U4ac9: SAVEUIP( , 0x00, U3ad0) SEQW SAVEUIP1 U4acaSEQW GOTO U2971
U4aca: MOVETOCREG_BTS_DSZ64(tmp2, 0x3cf) !m1 

U4acc: NOP SEQW GOTO U772e
U4acd: tmm0:= unk_702(mm1) 
U4ace: tmm3:= unk_496(tmm5, tmm0) 

U4ad0: tmm4:= unk_496(tmm6, tmm0) 
U4ad1: mm0:= unk_689(tmm3, tmm4) !m0 
U4ad2: tmm0:= unk_702(mm2) 

U4ad4: tmm5:= unk_496(tmm1, tmm0) 
U4ad5: tmm6:= unk_496(tmm2, tmm0) 
U4ad6: mm7:= unk_689(tmm5, tmm6) !m0,m2 SEQW GOTO U17ec

U4ad8: tmp1:= NOTAND_DSZ16(0x00000007, tmp3) 
U4ad9: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x08000000) 
U4ada: tmp1:= CONCAT_DSZ16(0x0000c093, tmp1) 

U4adc: tmp1:= OR_DSZ32(tmp15, tmp1) 
U4add: tmp1:= CONCAT_DSZ32(0xffffffffffffffff, tmp1) 
U4ade: WRSEGFLD(tmp1, DS, SEL+FLGS+LIM) 

U4ae0: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001aa, tmp9) 
U4ae1: tmp1:= NOTAND_DSZ16(0x00000007, tmp1) 
U4ae2: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x08000000) 

U4ae4: tmp1:= CONCAT_DSZ16(0x0000c093, tmp1) 
U4ae5: tmp1:= OR_DSZ32(tmp15, tmp1) 
U4ae6: tmp1:= CONCAT_DSZ32(0xffffffffffffffff, tmp1) 

U4ae8: WRSEGFLD(tmp1, ES, SEL+FLGS+LIM) 
U4ae9: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001ca, tmp9) 
U4aea: tmp1:= NOTAND_DSZ16(0x00000007, tmp1) 

U4aec: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x08000000) 
U4aed: tmp1:= CONCAT_DSZ16(0x0000c093, tmp1) 
U4aee: tmp1:= OR_DSZ32(tmp15, tmp1) 

U4af0: tmp1:= CONCAT_DSZ32(0xffffffffffffffff, tmp1) 
U4af1: WRSEGFLD(tmp1, FS, SEL+FLGS+LIM) 
U4af2: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000208, tmp9) 

U4af4: WRSEGFLD(tmp1, FS, BASE) 
U4af5: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001d2, tmp9) 
U4af6: tmp1:= NOTAND_DSZ16(0x00000007, tmp1) 

U4af8: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x08000000) 
U4af9: tmp1:= CONCAT_DSZ16(0x0000c093, tmp1) 
U4afa: tmp1:= OR_DSZ32(tmp15, tmp1) 

U4afc: tmp1:= CONCAT_DSZ32(0xffffffffffffffff, tmp1) 
U4afd: WRSEGFLD(tmp1, GS, SEL+FLGS+LIM) 
U4afe: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000210, tmp9) 

U4b00: WRSEGFLD(tmp1, GS, BASE) 
U4b01: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000228, tmp9) 
U4b02: WRSEGFLD(tmp1, GDT, BASE) 

U4b04: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000230, tmp9) 
U4b05: WRSEGFLD(tmp1, IDT, BASE) 
U4b06: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b8, tmp9) 

U4b08: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001a4, tmp9) 
U4b09: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002f0, tmp9) 
U4b0a: LFNCEWTMRK-> tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002f8, tmp9) 

U4b0c: SYNCMARK-> FETCHFROMEIP1_ASZ64( , tmp5) !m1 
U4b0d: WRITEURAM(tmp1, 0x0074, 32) 
U4b0e: tmp2:= SHL_DSZ64(tmp2, 0x00000010) 

U4b10: tmp2:= SAR_DSZ64(tmp2, 0x00000010) 
U4b11: WRITEURAM(tmp2, 0x0075, 64) 
U4b12: tmp3:= SHL_DSZ64(tmp3, 0x00000010) 

U4b14: tmp3:= SAR_DSZ64(tmp3, 0x00000010) 
U4b15: WRITEURAM(tmp3, 0x0076, 64) 
U4b16: tmp4:= TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U4b19

U4b18: tmp4:= BTS_DSZ64(0x00000000, 0x0000003a) 
U4b19: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U3561
U4b1a: LFNCEWTMRK-> tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000054, tmp9) 

U4b1c: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000030, tmp9) 
U4b1d: MOVETOCREG_DSZ64(0x00000014, 0x000) !m2 
U4b1e: tmp14:= ZEROEXT_DSZ32(0x00003559) 

U4b20: SAVEUIP( , 0x00, U2d95) 
U4b21: SYNCWAIT-> tmp10:= MOVE_DSZ32(0x00005e96) SEQW GOTO U5935
U4b22: tmp6:= CMOVCC_DSZ64_CONDNZ(tmp9, 0x00000200) 

U4b24: MOVETOCREG_DSZ64(tmp6, 0x29e, 32) !m1 
U4b25: tmp8:= READURAM( , 0x0007, 64) 
U4b26: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U4b28) SEQW GOTO U2cb1

U4b28: tmp9:= MOVEFROMCREG_DSZ64( , 0x105) 
U4b29: tmp9:= AND_DSZ32(0x00000004, tmp9) 
U4b2a: tmp9:= MOVEMERGEFLGS_DSZ32(0x00000024, tmp9) 

U4b2c: tmp9:= CMOVCC_DSZ32_CONDNZ(tmp9, 0x00000004) 
U4b2d: tmp13:= READURAM( , 0x005c, 64) 
U4b2e: tmp13:= OR_DSZ32(tmp9, tmp13) 

U4b30: ROVR<- WRITEURAM(tmp13, 0x005c, 32) !m2 SEQW SAVEUIP1 U4b31SEQW GOTO U28f5
U4b31: tmp9:= SHR_DSZ32(tmp8, 0x00000014) 
U4b32: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, 0x00000002, U0f30) !m0 

U4b34: tmp9:= MOVEFROMCREG_DSZ64( , 0x000) 
U4b35: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000b, U4b36) !m0 SEQW GOTO U0f30
U4b36: tmp9:= ZEROEXT_DSZ32() 

U4b38: tmp8:= ZEROEXT_DSZ32() SEQW GOTO U0f31
U4b39: tmp1:= unk_21f(tmp7) 
U4b3a: tmp1:= unk_1d6(tmp1) 

U4b3c: tmp1:= SHL_DSZ32(tmp1, 0x00000003) 
U4b3d: tmp7:= SHR_DSZ32(tmp7, tmp1) 
U4b3e: tmp7:= unk_1d6(tmp7) 

U4b40: tmp7:= OR_DSZ32(tmp7, tmp1) 
U4b41: tmp9:= SHL_DSZ32(tmp9, 0x00000001) 
U4b42: tmp9:= OR_DSZ32(tmp7, tmp9) SEQW URET0

U4b44: WRTAGW-> tmm0:= unk_6a8(IMM_MACRO_ALIAS_STi) !m0 
U4b45: mm1:= unk_7ea(0x00000000) 
U4b46: tmp2:= SUB_DSZ32(tmp1, 0x0001003a) 

U4b48: tmp11:= ZEROEXT_DSZ32(0x0001003e) 
U4b49: tmm1:= unk_7c2(tmm3) 
U4b4a: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp2, U5809) 

U4b4c: tmm7:= unk_6aa(0x00000000, tmm1) 
U4b4d: tmm3:= unk_6ee(tmm7) 
U4b4e: tmm3:= unk_4b6( , tmm3) 

U4b50: tmm0:= unk_72a(0x00000000) 
U4b51: tmp9:= unk_6a0() 
U4b52: tmm1:= SHUFPD( , tmm1) 

U4b54: tmm3:= unk_50f( , tmm3) 
U4b55: tmm3:= ORPD(tmm3, tmm1) 
U4b56: tmp9:= unk_6a0() 

U4b58: tmp1:= ZEROEXT_DSZ32(0x0000ffff) 
U4b59: tmm1:= unk_7c2(mm1, tmm1) 
U4b5a: tmm3:= unk_7c2(mm1, tmm3) 

U4b5c: tmm3:= unk_6e1(tmm1, tmm3) 
U4b5d: tmp9:= unk_6a0() 
U4b5e: mm2:= unk_7aa(tmm3) 

U4b60: tmm2:= unk_495(tmm3, tmm1) 
U4b61: tmp2:= SHR_DSZ32(tmp2, 0x0000001c) 
U4b62: tmp8:= SHL_DSZ32(tmp8, 0x0000000b) 

U4b64: tmp8:= OR_DSZ32(tmp2, tmp8) 
U4b65: tmp2:= SUB_DSZ32(0x00000009, tmp2) 
U4b66: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp2, U5809) 

U4b68: tmp14:= unk_6a0() 
U4b69: tmm3:= unk_662(tmm6, tmm2) 
U4b6a: mm2:= unk_7aa(tmm3) 

U4b6c: tmp1:= SHR_DSZ32(tmp2, 0x0000001c) 
U4b6d: tmp8:= SHL_DSZ32(tmp8, 0x00000004) 
U4b6e: tmp8:= OR_DSZ32(tmp1, tmp8) 

U4b70: tmm5:= unk_746(tmm0) 
U4b71: tmp5:= ZEROEXT_DSZ32(0x00000010) 
U4b72: tmp1:= ZEROEXT_DSZ32() 

U4b74: tmp1:= SHL_DSZ64(tmp1, 0x00000004) 
U4b75: tmm2:= unk_495(tmm3, tmm1) 
U4b76: mm2:= unk_7aa(tmm3) 

U4b78: tmm3:= unk_662(tmm6, tmm2) 
U4b79: tmp2:= SHR_DSZ32(tmp2, 0x0000001c) 
U4b7a: tmp1:= OR_DSZ64(tmp2, tmp1) 

U4b7c: tmp5:= SUB_DSZ32(0x00000001, tmp5) 
U4b7d: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp5, U4b7e) SEQW GOTO U4b74
U4b7e: tmm3:= unk_746(mm1) 

U4b80: tmm3:= MOVHLPS(tmm3, tmm5) 
U4b81: tmp11:= unk_cdc(tmp10) 
U4b82: LFNCEMARK-> tmm0:= unk_6ee(tmm7) !m2 

U4b84: tmm3:= unk_76a(tmm0) 
U4b85: tmp11:= NOTAND_DSZ32(tmp11, 0x00000010) 
U4b86: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U4b88: LFNCEWAIT-> tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U4b89: tmp1:= AND_DSZ32(0x00000020, tmp5) 
U4b8a: tmp1:= OR_DSZ32(tmp1, tmp11) 

U4b8c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U4b8d) SEQW GOTO U4b90
U4b8d: tmp1:= OR_DSZ16(0x00008080, tmp4) 
U4b8e: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x48c) 

U4b90: LFNCEWAIT-> tmm0:= FMOV( , 0x00000091) !m0 SEQW GOTO U17ec
U4b91: tmp1:= SHL_DSZ64(tmp1, 0x00000002) 
U4b92: tmp0:= unk_f54( , tmp1) !m1 

U4b94: tmp0:= NOTAND_DSZ64(0x00000003, tmp0) 
U4b95: tmp0:= OR_DSZ64(0x00000002, tmp0) 
U4b96: WRITEURAM(tmp0, 0x004b, 64) 

U4b98: tmp0:= READURAM( , 0x005c, 64) 
U4b99: tmp0:= OR_DSZ32(0x00001000, tmp0) 
U4b9a: WRITEURAM(tmp0, 0x005c, 32) SEQW GOTO U5d5e

U4b9c: tmp10:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 
U4b9d: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp10, 0x00000009, U4b9c) 
U4b9e: tmp11:= MOVEFROMCREG_DSZ64( , 0x21d, 32) !m1 

U4ba0: tmp11:= BT_DSZ32(tmp11, 0x00000008) 
U4ba1: tmp15:= SELECTCC_DSZ32_CONDNB(tmp11, 0x00003b00) 
U4ba2: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000003, U4ba4) !m0 SEQW GOTO U4ba5

U4ba4: SYNCFULL-> MOVETOCREG_OR_DSZ64( , 0x00000004, 0x701) 
U4ba5: tmp12:= ADD_DSZ32(0x00000000, tmp15) SEQW SAVEUIP0 U4ba6SEQW GOTO U3035
U4ba6: NOP 

U4ba8: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp2, 0x411) 
U4ba9: MOVETOCREG_SHR_DSZ64(tmp2, 0x00000020, 0x064) 
U4baa: MOVETOCREG_DSZ64(tmp4, 0x106) 

U4bac: MOVETOCREG_SHR_DSZ64(tmp4, 0x00000020, 0x488) 
U4bad: MOVETOCREG_DSZ64(tmp6, 0x74d) 
U4bae: MOVETOCREG_SHR_DSZ64(tmp6, 0x00000020, 0x63c) 

U4bb0: MOVETOCREG_DSZ64(tmp8, 0x680) SEQW SAVEUIP0 U4bb1SEQW GOTO U3035
U4bb1: MOVETOCREG_DSZ64(tmp2, 0x609) 
U4bb2: MOVETOCREG_DSZ64(tmp4, 0x60a) 

U4bb4: MOVETOCREG_DSZ64(tmp6, 0x693) 
U4bb5: MOVETOCREG_SHR_DSZ64(tmp6, 0x00000020, 0x608) 
U4bb6: LFNCEMARK-> MOVETOCREG_DSZ64(tmp8, 0x610) 

U4bb8: tmp12:= ZEROEXT_DSZ32(0x0000aec0) 
U4bb9: tmp11:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U4bba: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U4bbc: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U4bd0) 
U4bbd: tmp12:= ZEROEXT_DSZ32(0x00007ac0) 
U4bbe: WRMSLOOPCTRFBR( , 0x0000005f) 

U4bc0: tmp0:= ZEROEXT_DSZ32(0x00030600) 
U4bc1: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x6a1) 
U4bc2: NOP 

U4bc4: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) SEQW SAVEUIP1 U4bc5SEQW GOTO U257d
U4bc5: WRMSLOOPCTRFBR( , 0x00000007) 
U4bc6: tmp0:= ZEROEXT_DSZ32(0x00030300) 

U4bc8: MOVETOCREG_DSZ64(tmp0, 0x6a1) !m2 
U4bc9: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) !m2 SEQW SAVEUIP1 U4bcaSEQW GOTO U257d
U4bca: MOVETOCREG_DSZ64(tmp11, 0x706) 

U4bcc: MOVETOCREG_SHR_DSZ64(tmp11, 0x00000020, 0x707) 
U4bcd: tmp1:= MOVEFROMCREG_DSZ64( , 0x692) 
U4bce: SYNCFULL-> MOVETOCREG_BTR_DSZ64(tmp1, 0x692) !m2 

U4bd0: tmp0:= MOVEFROMCREG_DSZ64( , 0x2eb, 32) !m1 
U4bd1: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U4bd0) 
U4bd2: tmp2:= MOVEFROMCREG_DSZ64( , 0x630) !m2 

U4bd4: tmp2:= AND_DSZ32(0x00000fff, tmp2) 
U4bd5: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U4bd2) 
U4bd6: tmp0:= ZEROEXT_DSZ32(0x00000083) 

U4bd8: tmp0:= CONCAT_DSZ16(tmp0, 0x00000200) 
U4bd9: MOVETOCREG_DSZ64(tmp0, 0x631) !m2 
U4bda: MOVETOCREG_DSZ64( , 0x00000000, 0x634) !m2 

U4bdc: MOVETOCREG_DSZ64( , 0x00000000, 0x635) !m2 
U4bdd: MOVETOCREG_DSZ64( , 0x00000000, 0x636) !m2 
U4bde: MOVETOCREG_DSZ64( , 0x00000000, 0x637) !m2 

U4be0: MOVETOCREG_DSZ64( , 0x00000000, 0x638) !m2 
U4be1: tmp2:= ZEROEXT_DSZ32(0x00000083) 
U4be2: tmp2:= CONCAT_DSZ16(tmp2) 

U4be4: MOVETOCREG_DSZ64(tmp2, 0x630) !m2 
U4be5: SAVEUIP( , 0x00, U2999) 
U4be6: tmp2:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 

U4be8: tmp0:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000020) 
U4be9: tmp0:= ADD_DSZ32(0x0000bd80, tmp0) 
U4bea: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp0) 

U4bec: tmp1:= ADD_DSZ64(tmp2, tmp1) 
U4bed: STADSTGBUF_DSZ64_ASZ16_SC1(tmp0,  , tmp1) SEQW URET0
FUN_ucode_0004bee:
U4bee: TESTUSTATE( , VMX, !0x2000) !m0,m2 ? SEQW GOTO U0846

U4bf0: TESTUSTATE( , VMX, 0x8000) !m2 ? SEQW URET1
U4bf1: tmp0:= ZEROEXT_DSZ32(0x0002282b) SEQW GOTO U00ed
U4bf2: tmp3:= ZEROEXT_DSZ32(0x00000001) 

U4bf4: tmp14:= ZEROEXT_DSZ32(0x00001842) 
U4bf5: tmp1:= READURAM( , 0x0053, 64) !m2 
U4bf6: tmp1:= BT_DSZ64(tmp1, 0x00000002) 

U4bf8: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, tmp14) 
U4bf9: tmp0:= SHL_DSZ32(tmp3, 0x0000000f) 
U4bfa: tmp1:= BTR_DSZ32(tmp1, 0x0000000f) 

U4bfc: tmp1:= OR_DSZ32(tmp0, tmp1) 
U4bfd: WRITEURAM(tmp1, 0x0053, 32) 
U4bfe: tmp0:= SHL_DSZ32(tmp3, 0x00000008) 

U4c00: tmp0:= OR_DSZ32(0x00000014, tmp0) 
U4c01: SAVEUIP_REGOVR(0x01, U4c02, 0x0010) !m0 SEQW GOTO U5c66
U4c02: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 

U4c04: tmp0:= SUB_DSZ32(tmp0, tmp3) 
U4c05: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, tmp14) 
U4c06: tmp0:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 

U4c08: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000005, U064c) 
U4c09: SYNCFULL-> WRMSLOOPCTRFBR(0x00000080) 
U4c0a: NOP SEQW GOTO U4bfe

U4c0c: tmp11:= READURAM( , 0x0020, 64) 
U4c0d: tmp6:= ZEROEXT_DSZ32(0x000000d8) 
U4c0e: tmp7:= ZEROEXT_DSZ32(0x000000a8) SEQW SAVEUIP1 U4c10SEQW GOTO U5875

U4c10: tmp12:= ADD_DSZ64(0x00000018, tmp8) 
U4c11: tmp0:= READURAM( , 0x0006, 64) 
U4c12: tmp0:= ZEROEXT_DSZ16(0x00000001, tmp0) 

U4c14: tmp0:= OR_DSZ64(0x00010000, tmp0) 
U4c15: tmp1:= MOVEFROMCREG_DSZ64( , 0x387, 32) !m1 
U4c16: tmp2:= MOVEFROMCREG_DSZ64( , 0x385, 32) !m1 

U4c18: tmp3:= MOVEFROMCREG_DSZ64( , 0x381, 32) !m1 
U4c19: WRMSLOOPCTRFBR( , 0x00000003) SEQW SAVEUIP0 U4c1aSEQW GOTO U0051
U4c1a: NOP 

U4c1c: ROVR<- tmp4:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U4c1dSEQW GOTO U32cd
U4c1d: tmp7:= MOVEFROMCREG_DSZ64( , 0x382, 32) !m1 
U4c1e: tmp13:= ZEROEXT_DSZ64(tmp7) 

U4c20: tmp12:= ADD_DSZ64(0x00000020, tmp8) 
U4c21: SYNCFULL-> UJMP( , U39f5) SEQW SAVEUIP1 U4c22
U4c22: tmp12:= ADD_DSZ64(0x00000008, tmp12) 

U4c24: tmp6:= MOVEFROMCREG_DSZ64( , 0x3a5, 32) !m1 
U4c25: tmp6:= AND_DSZ32(0x00000c7d, tmp6) 
U4c26: tmp5:= SHL_DSZ32(tmp4, 0x0000000f) 

U4c28: tmp6:= OR_DSZ32(tmp6, tmp5) 
U4c29: SYNCFULL-> tmp6:= MOVETOCREG_BTS_DSZ64(tmp6, 0x00000007, 0x3a5) !m0,m1,m2 
U4c2a: tmp13:= MOVEFROMCREG_DSZ64( , 0x382, 32) !m1 

U4c2c: tmp5:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 
U4c2d: tmp5:= SHL_DSZ64(tmp5, 0x00000028) 
U4c2e: tmp13:= OR_DSZ64(tmp5, tmp13) 

U4c30: SYNCFULL-> tmp6:= MOVETOCREG_BTS_DSZ64(tmp6, 0x00000015, 0x3a5) !m1,m2 
U4c31: tmp5:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 
U4c32: tmp5:= SHL_DSZ64(tmp5, 0x00000030) 

U4c34: tmp13:= OR_DSZ64(tmp5, tmp13) 
U4c35: SYNCFULL-> tmp6:= MOVETOCREG_BTS_DSZ64(tmp6, 0x00000014, 0x3a5) !m1,m2 
U4c36: tmp5:= MOVEFROMCREG_DSZ64( , 0x38d, 32) !m1 

U4c38: tmp5:= SHL_DSZ64(tmp5, 0x00000038) 
U4c39: tmp13:= OR_DSZ64(tmp5, tmp13) 
U4c3a: SYNCFULL-> UJMP( , U39f5) SEQW SAVEUIP1 U4c3c

U4c3c: tmp4:= ADD_DSZ32(0x00000001, tmp4) 
U4c3d: SYNCFULL-> CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000010, U4c22) 
U4c3e: MOVETOCREG_DSZ64(tmp7, 0x382, 32) !m1,m2 

U4c40: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 
U4c41: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 
U4c42: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f6) 

U4c44: tmp1:= CONCAT_DSZ32(tmp1, 0x00000008) 
U4c45: tmp2:= READURAM( , 0x001e, 64) 
U4c46: tmp3:= MOVEFROMCREG_DSZ64( , 0x529) 

U4c48: tmp4:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U4c49: tmp5:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U4c4a: tmp4:= CONCAT_DSZ32(tmp5, tmp4) 

U4c4c: tmp5:= MOVEFROMCREG_DSZ64( , 0x067) 
U4c4d: tmp12:= ADD_DSZ64(0x00000028, tmp9) 
U4c4e: WRMSLOOPCTRFBR( , 0x00000005) SEQW SAVEUIP0 U4c50SEQW GOTO U0051

U4c50: WRMSLOOPCTRFBR( , 0x0000000f) 
U4c51: tmp12:= ADD_DSZ64(0x000000a8, tmp9) 
U4c52: NOP 

U4c54: tmp13:= ZEROEXT_DSZ64(rdi) 
U4c55: SYNCFULL-> UJMP( , U39f5) SEQW SAVEUIP1 U4c56
U4c56: tmp12:= SUB_DSZ64(0x00000008, tmp12) 

U4c58: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U4c54
U4c59: tmp0:= READURAM( , 0x000e, 64) 
U4c5a: tmp1:= MOVEFROMCREG_DSZ64( , 0x609) 

U4c5c: tmp2:= MOVEFROMCREG_DSZ64( , 0x60a) 
U4c5d: tmp3:= MOVEFROMCREG_DSZ64( , 0x10d) 
U4c5e: tmp4:= MOVEFROMCREG_DSZ64( , 0x10e) 

U4c60: tmp12:= ADD_DSZ64(0x000000d0, tmp9) 
U4c61: WRMSLOOPCTRFBR( , 0x00000004) SEQW SAVEUIP0 U4c62SEQW GOTO U0051
U4c62: NOP 

U4c64: tmp0:= ZEROEXT_DSZ32(0x00000e66) SEQW GOTO U0e68
U4c65: tmp5:= MOVEFROMCREG_DSZ64( , tmp8) 
U4c66: tmp5:= NOTAND_DSZ32(0x00000003, tmp5) 

U4c68: tmp5:= MOVETOCREG_DSZ64(tmp5, tmp8) 
U4c69: tmp10:= ZEROEXT_DSZ32(tmp10, tmp5) 
U4c6a: tmp5:= NOTAND_DSZ32(0x00000003, tmp10) 

U4c6c: tmp5:= MOVETOCREG_DSZ64(tmp5, tmp8) 
U4c6d: tmp10:= ZEROEXT_DSZ64(tmp10, tmp5) 
U4c6e: SYNCFULL-> MOVETOCREG_DSZ64(tmp10, tmp8) SEQW GOTO U2162

U4c70: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U4c79
U4c71: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000012, U2769) !m0,m1 
U4c72: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000003, U2771) !m0,m1 

U4c74: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U4c79
U4c75: tmp2:= READURAM( , 0x0011, 64) 
U4c76: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp2) 

U4c78: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000f, U1f90) !m0,m2 
U4c79: tmp3:= LEA_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U4c7a: tmp3:= AND_DSZ8(0x0000003f, tmp3) 

U4c7c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U2711) 
U4c7d: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U4c7e: tmp11:= ZEROEXT_DSZ16N(tmp11) !m1 

U4c80: tmp2:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000208, mode=0x18) 
U4c81: tmp4:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000200, mode=0x18) 
U4c82: LFNCEMARK-> tmp5:= CONCAT_DSZ32(rdx, rax) 

U4c84: tmp5:= AND_DSZ64(tmp6, tmp5) 
U4c85: tmp7:= SHR_DSZ64(tmp5, 0x00000001) 
U4c86: tmp7:= AND_DSZ64(0x0000000c, tmp7) 

U4c88: tmp8:= AND_DSZ64(0x00000003, tmp5) 
U4c89: tmp8:= OR_DSZ64(tmp7, tmp8) 
U4c8a: tmp7:= SHR_DSZ64(tmp4, 0x00000001) 

U4c8c: tmp7:= AND_DSZ64(0x0000000c, tmp7) 
U4c8d: tmp13:= AND_DSZ64(0x00000003, tmp4) 
U4c8e: tmp13:= OR_DSZ64(tmp7, tmp13) 

U4c90: tmp13:= SHL_DSZ64(tmp13, 0x00000004) 
U4c91: tmp8:= OR_DSZ64(tmp8, tmp13) 
U4c92: UFLOWCTRL( , tmp8, USTATE) 

U4c94: LFNCEWAIT-> WRITEURAM(tmp8, 0x003f, 64) 
U4c95: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x072) !m0 
U4c96: tmp2:= BTR_DSZ64(tmp2, 0x0000003f) 

U4c98: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp2, U4c99) SEQW GOTO U1e44
U4c99: tmp7:= NOTAND_DSZ64(tmp6, tmp2) 
U4c9a: tmp10:= NOTAND_DSZ64(tmp2, tmp4) 

U4c9c: tmp7:= OR_DSZ64(tmp10, tmp7) 
U4c9d: tmp12:= WRMSLOOPCTRFBR(0x00000002) 
U4c9e: tmp8:= ADD_DSZ64(0x00000210, tmp11) 

U4ca0: tmp10:= LDZX_DSZ64_ASZ32_SC1(tmp8, mode=0x18) 
U4ca1: tmp7:= OR_DSZ64(tmp10, tmp7) 
U4ca2: tmp10:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000008, mode=0x18) 

U4ca4: tmp7:= OR_DSZ64(tmp10, tmp7) 
U4ca5: tmp8:= ADD_DSZ64(0x00000010, tmp8) 
U4ca6: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U4ca0

U4ca8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U2711) 
U4ca9: tmp2:= BT_DSZ64(tmp2, 0x00000003) 
U4caa: tmp9:= SELECTCC_DSZ64_CONDNB(tmp2, 0x00000040) 

U4cac: tmp7:= ADD_DSZ64(0x0000023f, tmp9) 
U4cad: tmp3:= AND_DSZ64(tmp2, tmp5) 
U4cae: tmp3:= BT_DSZ64(tmp3, 0x00000003) 

U4cb0: tmp7:= MOVEMERGEFLGS_DSZ64(tmp7, tmp3) 
U4cb1: tmp8:= CMOVCC_DSZ64_CONDB(tmp7, 0x0000023f) 
U4cb2: tmp10:= ADD_DSZ64(0x00000001, tmp7) 

U4cb4: tmp6:= SHL_DSZ64(tmp10, 0x00000010) 
U4cb5: tmp2:= BT_DSZ64(tmp2, 0x00000004) 
U4cb6: tmp9:= SELECTCC_DSZ64_CONDNB(tmp2, 0x00000040) 

U4cb8: tmp7:= ADD_DSZ64(tmp9, tmp7) 
U4cb9: tmp3:= BT_DSZ64(tmp3, 0x00000004) 
U4cba: tmp7:= MOVEMERGEFLGS_DSZ64(tmp7, tmp3) 

U4cbc: tmp8:= CMOVCC_DSZ64_CONDB(tmp7, tmp8) 
U4cbd: tmp12:= ADD_DSZ64(0x00000001, tmp7) 
U4cbe: tmp12:= SHL_DSZ64(tmp12, 0x0000001c) 

U4cc0: tmp6:= OR_DSZ64(tmp12, tmp6) 
U4cc1: tmp6:= OR_DSZ64(0x00000240, tmp6) 
U4cc2: tmm0:= unk_744(mm6) 

U4cc4: tmp2:= BT_DSZ64(tmp2, 0x00000008) 
U4cc5: tmp9:= SELECTCC_DSZ64_CONDNB(tmp2, 0x00000080) 
U4cc6: tmp7:= ADD_DSZ64(tmp9, tmp7) 

U4cc8: tmp3:= BT_DSZ64(tmp3, 0x00000008) 
U4cc9: tmp7:= MOVEMERGEFLGS_DSZ64(tmp7, tmp3) 
U4cca: tmp8:= CMOVCC_DSZ64_CONDB(tmp7, tmp8) 

U4ccc: tmp8:= ADD_DSZN(tmp8, tmp11) !m1 
U4ccd: tmp3:= AND_DSZ64(tmp2, tmp5) 
U4cce: tmp4:= MOVEINSERTFLGS_DSZ64(0x00000001, tmp4) SEQW GOTO U1e5d

U4cd0: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U4cd1: tmp11:= ZEROEXT_DSZ16N(tmp11) !m1 
U4cd2: SYNCMARK-> UFLOWCTRL( , tmp4, USTATE) 

U4cd4: WRITEURAM(tmp4, 0x003f, 64) !m2 
U4cd5: tmp4:= BT_DSZ64(tmp4, 0x00000003) 
U4cd6: tmp13:= MOVEMERGEFLGS_DSZ64(0x000003ff, tmp4) 

U4cd8: tmp8:= CMOVCC_DSZ64_CONDB(tmp13, 0x0000023f) 
U4cd9: tmp4:= BT_DSZ64(tmp4, 0x00000004) 
U4cda: tmp13:= MOVEMERGEFLGS_DSZ64(0x0000043f, tmp4) 

U4cdc: tmp8:= CMOVCC_DSZ64_CONDB(tmp13, tmp8) 
U4cdd: TESTUSTATE( , SYS, UST_SMM | 0x0800) !m1 ? SEQW GOTO U4ce9
U4cde: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U4ce0: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000012, U2769) !m0,m1 
U4ce1: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U4ce2: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000003, U2771) !m0,m1 

U4ce4: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U4ce9
U4ce5: tmp2:= READURAM( , 0x0011, 64) 
U4ce6: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp2) 

U4ce8: BTUJB_DIRECT_NOTTAKEN(tmp2, U1f90, tmp1) !m2 
U4ce9: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x072) !m0,m2 
U4cea: tmp1:= AND_DSZ32(tmp4, 0x00000006) 

U4cec: tmp1:= MOVEMERGEFLGS_DSZ64(0x00000018, tmp1) 
U4ced: tmp1:= CMOVCC_DSZ32_CONDNZ(tmp1, 0x00000200) 
U4cee: tmp7:= AND_DSZ32(0x00000001, tmp4) 

U4cf0: tmp7:= SELECTCC_DSZ64_CONDNZ(tmp7, tmp1) 
U4cf1: tmp7:= ADD_DSZN(tmp7, tmp11) !m1 
U4cf2: TESTUSTATE( , SYS, 0x0800) !m1 ? SEQW GOTO U4cfc

U4cf4: tmp0:= LEA_DSZ32_ASZ32_SC1(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT, mode=0x18) !m0 
U4cf5: tmp0:= AND_DSZ8(0x0000003f, tmp0) 
U4cf6: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 

U4cf8: tmp8:= ADD_DSZN(tmp8, tmp11) !m1 
U4cf9: unk_cc2(tmp8) 
U4cfa: unk_cc2(tmp7) 

U4cfc: tmp5:= LDTICKLE_DSZ64_ASZ32_SC1(tmp11, 0x00000200, mode=0x18) 
U4cfd: tmp5:= NOTAND_DSZ64(tmp4, tmp5) 
U4cfe: tmp4:= BT_DSZ64(tmp4, 0x0000003f) 

U4d00: tmp5:= SELECTCC_DSZ64_CONDB(tmp4, tmp5) 
U4d01: SAVEUIP( , 0x00, U3b01) 
U4d02: SYNCWAIT-> TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW SAVEUIP1 U4d04? SEQW GOTO U6da9

U4d04: SAVEUIP( , 0x00, U5d4a) 
U4d05: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW SAVEUIP1 U4d06? SEQW GOTO U12c5
U4d06: tmp8:= ADD_DSZN(tmp11, 0x000003c0) !m1 

U4d08: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U4d0c
U4d09: tmp8:= SUB_DSZN(0x00000180, tmp8) !m1 
U4d0a: NOP 

U4d0c: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U4d19
U4d0d: rax:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, mode=0x18) 
U4d0e: tmp0:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000008, mode=0x18) 

U4d10: rcx:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000010, mode=0x18) 
U4d11: tmp1:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000018, mode=0x18) 
U4d12: rdx:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000020, mode=0x18) 

U4d14: tmp2:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000028, mode=0x18) 
U4d15: rbx:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000030, mode=0x18) 
U4d16: tmp3:= STADTICKLE_DSZ64_ASZ32_SC1(tmp8, 0x00000038, mode=0x18) 

U4d18: tmp8:= ADD_DSZN(tmp8, 0x00000040) !m1 
U4d19: TESTUSTATE( , UCODE, !0x0040) !m0 ? SEQW SAVEUIP1 U4d1a? SEQW GOTO U5fee
U4d1a: tmp6:= ZEROEXT_DSZ64(tmp4) 

U4d1c: tmp0:= AND_DSZ64(0x00000fff, tmp6) 
U4d1d: tmp5:= OR_DSZ64(tmp0, tmp5) 
U4d1e: tmp7:= TESTUSTATE(tmp8, SYS, 0x8000) !m1 ? SEQW GOTO U1439

U4d20: tmp0:= READURAM( , 0x003a, 64) 
U4d21: tmp1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U4d22: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000d, U4d26) 

U4d24: tmp0:= BTS_DSZ64(tmp0, 0x00000020) 
U4d25: WRITEURAM(tmp0, 0x003a, 64) !m2 
U4d26: tmp0:= SHR_DSZ64(tmp0, 0x00000018) 

U4d28: tmp0:= AND_DSZ64(0x00000100, tmp0) 
U4d29: tmp5:= OR_DSZ32(0x00000100, tmp5) 
U4d2a: tmp5:= NOTAND_DSZ64(tmp0, tmp5) 

U4d2c: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000008, U5776) !m2 
U4d2d: tmp4:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U4d2e: BTUJNB_DIRECT_NOTTAKEN(tmp4, 0x00000000, U0e32) 

U4d30: tmp14:= ZEROEXT_DSZ32(0x00000e31) 
U4d31: tmp1:= MOVEFROMCREG_DSZ64( , 0x067) 
U4d32: tmp0:= MOVEFROMCREG_DSZ64( , 0x065) 

U4d34: tmp0:= SUB_DSZN(tmp0, tmp1) !m1 
U4d35: AETTRACE( , tmp0, 0x0c) SEQW GOTO U2ad9
U4d36: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000f, U4d3a) !m0 

U4d38: tmm0:= unk_495(tmm0, tmm4) 
U4d39: tmm0:= unk_53c( , tmm0) !m1 
U4d3a: tmp8:= RDSEGFLD(FS, BASE) 

U4d3c: WRSEGFLD(tmp8, UNK_SEG_04, BASE) 
U4d3d: tmp8:= RDSEGFLD(FS, SEL+FLGS+LIM) 
U4d3e: WRSEGFLD(tmp8, UNK_SEG_04, SEL+FLGS+LIM) 

U4d40: WRSEGFLD(tmp4, FS, BASE) 
U4d41: tmp8:= ZEROEXT_DSZ32(0x0000e0f3) 
U4d42: tmp8:= SHL_DSZ32(tmp8, 0x00000010) 

U4d44: tmp8:= CONCAT_DSZ32(0xffffffffffffffff, tmp8) 
U4d45: LFNCEMARK-> WRSEGFLD(tmp8, FS, SEL+FLGS+LIM) 
U4d46: MOVETOCREG_DSZ64(0x00000020, 0x000) 

U4d48: LFNCEWAIT-> tmp8:= unk_f1e() !m1 
U4d49: tmp8:= RDSEGFLD(UNK_SEG_04, BASE) 
U4d4a: WRSEGFLD(tmp8, FS, BASE) 

U4d4c: tmp8:= RDSEGFLD(UNK_SEG_04, SEL+FLGS+LIM) 
U4d4d: WRSEGFLD(tmp8, FS, SEL+FLGS+LIM) 
U4d4e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U1948) 

U4d50: tmm6:= FMOV( , 0x00000091) !m0 SEQW GOTO U1948
U4d51: LFNCEMARK-> tmp14:= unk_e6b(tmp0, tmp2) !m1,m2 
U4d52: tmp8:= ZEROEXT_DSZ32(0x00002000, tmp8) 

U4d54: tmp8:= MOVETOCREG_DSZ64(tmp8, 0x7f5) 
U4d55: tmp15:= SHR_DSZ64(tmp0, 0x00000028) 
U4d56: tmp14:= MOVEMERGEFLGS_DSZ32(0x0000391d, tmp14) 

U4d58: tmp12:= ZEROEXT_DSZ16(tmp13, tmp12) 
U4d59: tmp3:= CONCAT_DSZ32(tmp3, tmp12) 
U4d5a: MOVETOCREG_DSZ64( , 0x00000000, 0x78e) SEQW GOTO U3af1

U4d5c: tmp7:= ADD_DSZ32(0x00000000, tmp7) 
U4d5d: tmp7:= CMOVCC_DSZ32_CONDNZ(tmp7, 0x00000001) 
U4d5e: tmp0:= BTS_DSZ32(0x00000000, 0x00000017) 

U4d60: tmp0:= MOVEMERGEFLGS_DSZ32(tmp0, tmp7) 
U4d61: tmp0:= unk_116( , tmp0) 
U4d62: tmp0:= unk_226(tmp7, tmp0) 

U4d64: unk_114( , tmp0) 
U4d65: tmp7:= CONCAT_DSZ32(tmp0, tmp7) 
U4d66: WRITEURAM(tmp7, 0x0087, 64) 

U4d68: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x00c4) !m2 
U4d69: tmp0:= AND_DSZ32(0x000000ff, tmp0) 
U4d6a: WRITEURAM(tmp0, 0x0042, 32) 

U4d6c: tmp0:= MOVEFROMCREG_DSZ64( , 0x230, 32) !m1 
U4d6d: WRITEURAM(tmp0, 0x0051, 32) 
U4d6e: tmp0:= SUB_DSZ32(0x00000001) 

U4d70: MOVETOCREG_DSZ64(tmp0, 0x281, 32) !m1 
U4d71: tmp0:= ZEROEXT_DSZ32(0xfeb00000) 
U4d72: MOVETOCREG_DSZ64(tmp0, 0x51b) 

U4d74: tmp3:= ZEROEXT_DSZ32(0x00000a1b) 
U4d75: MOVETOCREG_DSZ64(tmp3, 0x6c3) 
U4d76: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x46f0) !m2 

U4d78: WRITEURAM(tmp0, 0x0035, 64) 
U4d79: tmp1:= PORTIN_DSZ64_ASZ16_SC1(0x46f8) !m2 
U4d7a: WRITEURAM(tmp1, 0x0077, 64) 

U4d7c: tmp2:= BT_DSZ64(tmp0, 0x00000009) 
U4d7d: tmp3:= SELECTCC_DSZ32_CONDB(tmp2, 0x00000010) 
U4d7e: tmp2:= BT_DSZ64(tmp0, 0x0000002a) 

U4d80: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00000020) 
U4d81: tmp3:= OR_DSZ32(tmp2, tmp3) 
U4d82: tmp2:= BT_DSZ64(tmp0, 0x00000025) 

U4d84: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000080) 
U4d85: tmp3:= OR_DSZ32(tmp2, tmp3) 
U4d86: tmp2:= BT_DSZ64(tmp0, 0x0000003c) 

U4d88: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000100) 
U4d89: tmp3:= OR_DSZ32(tmp2, tmp3) 
U4d8a: tmp2:= BT_DSZ64(tmp0, 0x00000008) 

U4d8c: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00000200) 
U4d8d: tmp3:= OR_DSZ32(tmp2, tmp3) 
U4d8e: tmp2:= BT_DSZ64(tmp1, 0x0000002b) 

U4d90: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000040) 
U4d91: tmp3:= OR_DSZ32(tmp2, tmp3) 
U4d92: tmp2:= MOVEFROMCREG_DSZ64( , 0x402) 

U4d94: MOVETOCREG_OR_DSZ64(tmp2, 0x402, tmp3) 
U4d95: tmp3:= SHR_DSZ64(tmp1, 0x0000000a) 
U4d96: tmp3:= AND_DSZ64(0x000c0000, tmp3) 

U4d98: tmp2:= SHL_DSZ64(tmp1, 0x0000000f) 
U4d99: tmp2:= AND_DSZ64(0x60000000, tmp2) 
U4d9a: tmp2:= OR_DSZ64(tmp2, tmp3) 

U4d9c: tmp4:= MOVEFROMCREG_DSZ64( , 0x104) 
U4d9d: tmp4:= BTS_DSZ64(tmp4, 0x0000002f) 
U4d9e: MOVETOCREG_OR_DSZ64(tmp2, 0x104, tmp4) 

U4da0: tmp3:= SHR_DSZ32(tmp3, 0x00000012) 
U4da1: tmp2:= SUB_DSZ32(0x00000003, tmp3) 
U4da2: tmp2:= MOVEMERGEFLGS_DSZ32(0x00000007, tmp2) 

U4da4: tmp3:= SHL_DSZ32(tmp3, 0x00000002) 
U4da5: tmp3:= CMOVCC_DSZ32_CONDZ(tmp2, tmp3) 
U4da6: tmp2:= SHL_DSZ32(0xffffffffffffffff, tmp3) 

U4da8: tmp2:= CONCAT_DSZ32(tmp2, 0x00000fff) 
U4da9: WRITEURAM(tmp2, 0x0010, 64) 
U4daa: tmp0:= AND_DSZ32(0x00040000, tmp0) 

U4dac: MOVETOCREG_SHR_DSZ64(tmp0, 0x0000000b, 0x007) !m0 
U4dad: tmp2:= BT_DSZ64(tmp1, 0x00000013) 
U4dae: tmp2:= SELECTCC_DSZ64_CONDNB(tmp2, 0x00000003) 

U4db0: tmp0:= SHR_DSZ64(tmp1, 0x00000006) 
U4db1: tmp0:= AND_DSZ64(0x00001000, tmp0) 
U4db2: tmp0:= OR_DSZ64(tmp2, tmp0) 

U4db4: tmp2:= MOVEFROMCREG_DSZ64( , 0x701) 
U4db5: tmp2:= OR_DSZ64(tmp0, tmp2) 
U4db6: MOVETOCREG_BTS_DSZ64(tmp2, 0x00000019, 0x701) 

U4db8: tmp0:= MOVEFROMCREG_DSZ64( , 0x002) 
U4db9: MOVETOCREG_OR_DSZ64(tmp0, 0x00000008, 0x002) 
U4dba: tmp14:= ZEROEXT_DSZ16(0x00004dc1) 

U4dbc: tmp2:= AND_DSZ64(0x00000200, tmp8) 
U4dbd: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U54ad) 
U4dbe: rax:= ZEROEXT_DSZ32() 

U4dc0: tmp1:= MOVEFROMCREG_DSZ64( , 0x38e, 32) !m1 
U4dc1: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U4dc4
U4dc2: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x38e) !m1 

U4dc4: tmp11:= ZEROEXT_DSZ32(0x00000006) 
U4dc5: WRITEURAM(tmp11, 0x0073, 32) !m2 
U4dc6: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000001f, U4dc8) !m0 SEQW GOTO U0c8c

U4dc8: tmp0:= ZEROEXT_DSZ32(0x00000006) 
U4dc9: MOVETOCREG_BTS_DSZ64(tmp0, 0x0000000b, 0x57f) !m0 SEQW GOTO U0c8e
U4dca: tmp9:= ZEROEXT_DSZ32(0x00030600) 

U4dcc: MOVETOCREG_DSZ64(tmp9, 0x6a1) 
U4dcd: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) !m2 
U4dce: WRMSLOOPCTRFBR( , 0x000000bf) 

U4dd0: LFNCEWAIT-> UFLOWCTRL(LDAT_IN) 
U4dd1: UFLOWCTRL(LDAT_IN) 
U4dd2: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U4dd0

U4dd4: tmp9:= ZEROEXT_DSZ32(0x00030300) 
U4dd5: MOVETOCREG_DSZ64(tmp9, 0x6a1) !m2 
U4dd6: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x6a0) !m2 

U4dd8: WRMSLOOPCTRFBR( , 0x0000000f) 
U4dd9: LFNCEWAIT-> UFLOWCTRL(LDAT_IN) 
U4dda: UFLOWCTRL(LDAT_IN) 

U4ddc: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U4dd9
U4ddd: MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 
U4dde: NOP 

U4de0: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U1ea6
U4de1: tmp0:= ZEROEXT_DSZ32(0x00007ac0) 
U4de2: tmp1:= ZEROEXT_DSZ32(0x00003420) 

U4de4: STADSTGBUF_DSZ64_ASZ16_SC1(tmp0, tmp1, 0x00000000) 
U4de5: tmp1:= SUB_DSZ32(0x00000020, tmp1) 
U4de6: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp1, U1ea6) SEQW GOTO U4de4

U4de8: tmp2:= ZEROEXT_DSZ32(0x00000004) 
U4de9: MOVETOCREG_DSZ64(tmp2, 0x29e, 32) !m1 
U4dea: tmp4:= READURAM( , 0x0048, 64) 

U4dec: LFNCEMARK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U3dae) !m1,m2 
U4ded: TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U4df2
U4dee: tmp2:= READURAM( , 0x0085, 64) 

U4df0: tmp4:= READURAM( , 0x0086, 64) 
U4df1: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x000000a0, tmp2) 
U4df2: WRITEURAM( , 0x00000000, 0x0085, 64) !m2 

U4df4: WRITEURAM( , 0x00000000, 0x0086, 64) !m2 
U4df5: tmp4:= READURAM( , 0x0057, 64) 
U4df6: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000378, tmp4) 

U4df8: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000037c, tmp4) 
U4df9: tmp2:= CONCAT_DSZ32(tmp4, tmp2) 
U4dfa: LFNCEWAIT-> WRITEURAM(tmp2, 0x002f, 64) 

U4dfc: tmp2:= MOVE_DSZ32(0x00000001) 
U4dfd: LFNCEMARK-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp12, tmp2) 
U4dfe: SAVEUIP_REGOVR(0x01, U4e00, 0x000f) !m0 SEQW GOTO U02d2

U4e00: SAVEUIP( , 0x01, U4e08) !m0 
U4e01: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U04a4
U4e02: NOP 

U4e04: ROVR<- tmm7:= unk_72f(tmm4) SEQW SAVEUIP0 U4e05SEQW GOTO U2cd9
U4e05: tmp0:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00000007) 
U4e06: tmp0:= OR_DSZ32(0x00000001, tmp0) 

U4e08: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U4e14
U4e09: WRITEURAM(tmp12, 0x0055, 64) !m2 
U4e0a: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001dc, tmp12) 

U4e0c: LFNCEWAIT-> WRITEURAM(tmp15, 0x0071, 32) SEQW SAVEUIP0 U4e0dSEQW GOTO U5cda
U4e0d: tmp15:= READURAM( , 0x001f, 64) 
U4e0e: tmp15:= SELECTCC_DSZ32_CONDS(tmp12, tmp15) 

U4e10: LFNCEMARK-> WRITEURAM(tmp15, 0x001f, 32) SEQW SAVEUIP1 U4e11SEQW GOTO U04a4
U4e11: NOP 
U4e12: NOP 

U4e14: SYNCWAIT-> tmp14:= READURAM( , 0x0043, 64) 
U4e15: tmp15:= MOVEMERGEFLGS_DSZ64(tmp10, tmp12) 
U4e16: tmp10:= NOTAND_DSZ64(0x00000600, tmp10) 

U4e18: tmp13:= SHL_DSZ32(tmp8, 0x00000007) 
U4e19: tmp13:= CMOVCC_DSZ64_CONDNZ(tmp15, tmp13) 
U4e1a: tmp13:= AND_DSZ64(0x00000200, tmp13) 

U4e1c: tmp10:= OR_DSZ64(tmp13, tmp10) 
U4e1d: tmp10:= BTR_DSZ64(tmp10, 0x00000032) 
U4e1e: tmp14:= BT_DSZ64(tmp14, 0x0000003c) 

U4e20: tmp4:= SELECTCC_DSZ32_CONDNB(tmp14, 0x00000028) 
U4e21: tmp4:= ADD_DSZ32(0x00000007, tmp4) 
U4e22: tmp13:= AND_DSZ32(0x00000008, tmp8) 

U4e24: tmp13:= SHL_DSZ64(tmp13, tmp4) 
U4e25: LFNCEWAIT-> tmp10:= MOVETOCREG_OR_DSZ64(tmp10, 0x2c4, tmp13) !m1 
U4e26: MOVETOCREG_SHR_DSZ64(tmp10, 0x00000020, 0x008) 

U4e28: WRITEURAM(tmp10, 0x0070, 64) 
U4e29: tmp15:= READURAM( , 0x0078, 64) 
U4e2a: MOVETOCREG_DSZ64(tmp15, 0x01d) 

U4e2c: LFNCEWAIT-> unk_dff(tmp9) 
U4e2d: MOVETOCREG_DSZ64(tmp2, 0x63a) 
U4e2e: MOVETOCREG_DSZ64(tmp0, 0x63e) 

U4e30: SAVEUIP_REGOVR(0x01, U4e31, 0x0f1e) !m0 SEQW GOTO U5dcc
U4e31: tmp15:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U4e32: LFNCEMARK-> MOVETOCREG_DSZ64(tmp15, 0x78e) 

U4e34: tmp6:= ADD_DSZ64(tmp15, tmp3) 
U4e35: tmp15:= unk_205( , 0xffffffffffffffff) 
U4e36: tmp15:= CONCAT_DSZ32(tmp15) 

U4e38: rsp:= NOTAND_DSZ64(tmp15, rsp) 
U4e39: tmp6:= NOTAND_DSZ64(tmp15, tmp6) 
U4e3a: MOVETOCREG_DSZ64(tmp6, 0x067) 

U4e3c: SAVEUIP_REGOVR(0x01, U4e3d, 0x000f) !m0 SEQW GOTO U02da
U4e3d: NOP 
U4e3e: NOP 

U4e40: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U4e49
U4e41: tmp0:= BT_DSZ64(tmp1, 0x0000001b) 
U4e42: LFNCEWAIT-> tmp15:= READURAM( , 0x001f, 64) 

U4e44: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000008) 
U4e45: tmp0:= SHL_DSZ64(tmp0, 0x00000020) 
U4e46: tmp15:= OR_DSZ64(tmp0, tmp15) 

U4e48: LFNCEMARK-> WRITEURAM(tmp15, 0x011f, 64) 
U4e49: AETTRACE( , tmp6, 0x0d) 
U4e4a: NOP 

U4e4c: LFNCEWAIT-> TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U4e65
U4e4d: tmp14:= READURAM( , 0x0038, 64) 
U4e4e: tmp15:= SHR_DSZ32(tmp14, 0x00000009) 

U4e50: tmp15:= AND_DSZ32(0x00000006, tmp15) 
U4e51: tmp14:= SHL_DSZ32(tmp14, 0x00000003) 
U4e52: tmp14:= AND_DSZ32(0x00000038, tmp14) 

U4e54: tmp14:= OR_DSZ32(tmp15, tmp14) 
U4e55: mm1:= unk_72f(tmm0) 
U4e56: tmp13:= AND_DSZ32(0x00000001, tmp1) 

U4e58: tmp13:= SHL_DSZ32(tmp13, 0x00000001) 
U4e59: tmp15:= AND_DSZ32(0x00000004, tmp8) 
U4e5a: tmp15:= SHR_DSZ32(tmp15, 0x00000002) 

U4e5c: tmp13:= OR_DSZ32(tmp15, tmp13) 
U4e5d: tmp13:= CMOVCC_DSZ32_CONDNZ(tmp13, 0x00000004) 
U4e5e: tmp1:= AND_DSZ32(0x00000020, tmp1) 

U4e60: tmp13:= SHL_DSZ32(0x00000001, tmp13) 
U4e61: tmp13:= OR_DSZ32(tmp1, tmp13) 
U4e62: tmp14:= AND_DSZ32(tmp13, tmp14) 

U4e64: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U56f9) 
U4e65: ROVR<- FETCHFROMEIP0_ASZ64( , tmp6) SEQW SAVEUIP1 U4e66SEQW GOTO U0de5
U4e66: tmp2:= READURAM( , 0x004a, 64) 

U4e68: tmp14:= MOVEINSERTFLGS_DSZ64(tmp8, 0x00000020) 
U4e69: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U26a0
U4e6a: tmp13:= ZEROEXT_DSZ32(0x0000385e) 

U4e6c: tmp6:= TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U5ec6
U4e6d: NOP 
U4e6e: NOP 

U4e70: tmp9:= BT_DSZ32(tmp7, 0x0000000e) SEQW SAVEUIP1 U4e71SEQW GOTO U385d
U4e71: NOP 
U4e72: NOP 

U4e74: MSSTOP-> unk_25e( , tmp14) SEQW GOTO U3dfa
U4e75: tmp2:= NOTAND_DSZ32(0x00000fff, tmp8) 
U4e76: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U2711) 

U4e78: tmp10:= SELECTCC_DSZ32_CONDB(tmp8, 0x00001000) 
U4e79: tmp10:= OR_DSZ32(tmp10, tmp8) 
U4e7a: PORTOUT_DSZ32_ASZ16_SC1(0x0070,  , tmp10) !m2 

U4e7c: SYNCFULL-> tmp10:= PORTIN_DSZ32_ASZ16_SC1(0x0074) !m2 
U4e7d: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp8, 0x00000080) 
U4e7e: tmp1:= OR_DSZ32(0x00000040, tmp1) SEQW GOTO U0ae6

U4e80: LFNCEWAIT-> NOP 
do_vmexit:
U4e81: tmp1:= ZEROEXT_DSZ32() 
do_vmexit_ovr_enter_rip:
U4e82: tmp10:= ZEROEXT_DSZ32() 

U4e84: tmp5:= ZEROEXT_DSZ32(0x00004e86) 
U4e85: tmp8:= TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U04c4
U4e86: LFNCEWTMRK-> MOVE_DSZ32() 

U4e88: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U4e89: tmp9:= READURAM( , 0x0057, 64) 
U4e8a: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp9) 

U4e8c: tmp9:= ZEROEXT_DSZ64(tmp9, tmp8) 
U4e8d: tmp14:= AND_DSZ32(0x00000004, tmp8) 
U4e8e: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000050, tmp9) 

U4e90: tmp15:= ADD_DSZ32(0x00000000, tmp15) 
U4e91: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000040) 
U4e92: tmp14:= OR_DSZ32(tmp15, tmp14) 

U4e94: tmp15:= SHR_DSZ32(tmp8, 0x00000011) 
U4e95: tmp15:= AND_DSZ32(0x0000002a, tmp15) 
U4e96: tmp14:= OR_DSZ32(tmp15, tmp14) 

U4e98: tmp15:= SHR_DSZ32(tmp0, 0x0000000b) 
U4e99: tmp15:= NOTAND_DSZ32(tmp15, 0x00000080) 
U4e9a: LFNCEWAIT-> tmp14:= OR_DSZ32(tmp15, tmp14) 

U4e9c: SYNCMARK-> UFLOWCTRL( , tmp14, USTATE) 
U4e9d: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000f8, tmp9) 
U4e9e: tmp5:= NOTAND_DSZ32(0x00000200, tmp5) 

U4ea0: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U4ea2
U4ea1: tmp5:= OR_DSZ32(0x00000200, tmp5) 
U4ea2: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000f8, tmp9, tmp5) 

U4ea4: tmp12:= WRMSLOOPCTRFBR(0x00000005) 
U4ea5: tmp11:= ADD_DSZ64(0x00000108, tmp9) 
U4ea6: tmp5:= MOVEFROMCREG_DSZ64( , 0x540) 

U4ea8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000328, tmp9, tmp5) 
U4ea9: tmp5:= MOVEFROMCREG_DSZ64( , 0x541) 
U4eaa: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000330, tmp9, tmp5) 

U4eac: tmp5:= MOVEFROMCREG_DSZ64( , 0x542) 
U4ead: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000338, tmp9, tmp5) 
U4eae: tmp5:= MOVEFROMCREG_DSZ64( , 0x543) 

U4eb0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000340, tmp9, tmp5) 
U4eb1: tmp5:= RDSEGFLD(UNK_SEG_1b, SEL+FLGS+LIM) 
U4eb2: unk_f6d(tmp11, tmp12, tmp5) 

U4eb4: tmp5:= RDSEGFLD(UNK_SEG_1b, BASE) 
U4eb5: unk_f6d(tmp11, tmp12, tmp5) 
U4eb6: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U4eb1

U4eb8: tmp5:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U4eb9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000090, tmp9, tmp5) 
U4eba: tmp5:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U4ebc: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000b0, tmp9, tmp5) 
U4ebd: tmp5:= MOVEFROMCREG_DSZ64( , 0x529) 
U4ebe: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000a8, tmp9, tmp5) 

U4ec0: tmp5:= RDSEGFLD(GDT, BASE) 
U4ec1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000148, tmp9, tmp5) 
U4ec2: tmp5:= RDSEGFLD(GDT, LIMIT) 

U4ec4: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000198, tmp9, tmp5) 
U4ec5: tmp5:= RDSEGFLD(IDT, BASE) 
U4ec6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000150, tmp9, tmp5) 

U4ec8: tmp5:= RDSEGFLD(IDT, LIMIT) 
U4ec9: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001a0, tmp9, tmp5) 
U4eca: tmp5:= RDSEGFLD(LDT, SEL+FLGS+LIM) 

U4ecc: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000188, tmp9, tmp5) 
U4ecd: tmp5:= RDSEGFLD(LDT, BASE) 
U4ece: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000138, tmp9, tmp5) 

U4ed0: tmp5:= RDSEGFLD(TSS, SEL+FLGS+LIM) 
U4ed1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000190, tmp9, tmp5) 
U4ed2: tmp5:= RDSEGFLD(TSS, BASE) 

U4ed4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000140, tmp9, tmp5) 
U4ed5: tmp5:= READURAM( , 0x0075, 64) 
U4ed6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002d8, tmp9, tmp5) 

U4ed8: tmp5:= READURAM( , 0x0076, 64) 
U4ed9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002e0, tmp9, tmp5) 
U4eda: tmp5:= READURAM( , 0x0074, 64) 

U4edc: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000019c, tmp9, tmp5) 
U4edd: ROVR<- NOP SEQW SAVEUIP1 U4edeSEQW GOTO U7260
U4ede: tmp15:= ZEROEXT_DSZ32(0x000001f5) 

U4ee0: MOVETOCREG_DSZ64(tmp15, 0x00b) 
U4ee1: AETTRACE( , tmp2, 0x0c) 
U4ee2: tmp2:= READURAM( , 0x0043, 64) SEQW SAVEUIP1 U4ee4SEQW GOTO U6a3a

U4ee4: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001cc, tmp9, tmp1) 
U4ee5: tmp1:= AND_DSZ32(0xfff101ff, tmp0) 
U4ee6: tmp1:= NOTAND_DSZ32(0x00300000, tmp1) 

U4ee8: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000023c, tmp9, tmp1) 
U4ee9: WRITEURAM(tmp1, 0x0005, 32) 
U4eea: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U4eee

U4eec: tmp2:= MOVEFROMCREG_DSZ64( , 0x577) 
U4eed: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000310, tmp9, tmp2) 
U4eee: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U4ef2

U4ef0: tmp2:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U4ef1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000318, tmp9, tmp2) 
U4ef2: tmp2:= MOVEFROMCREG_DSZ64( , 0x701) 

U4ef4: tmp1:= RDSEGFLD(UNK_SEG_10, BASE) 
U4ef5: tmp2:= SHR_DSZ32(tmp2, 0x0000001e) 
U4ef6: tmp1:= OR_DSZ64(tmp2, tmp1) 

U4ef8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000088, tmp9, tmp1) 
U4ef9: TESTUSTATE( , UCODE, 0x0080) ? SEQW GOTO U4f02
U4efa: tmp2:= MOVEFROMCREG_DSZ64( , 0x2f7, 32) !m1 

U4efc: tmp1:= READURAM( , 0x0087, 64) 
U4efd: tmp1:= ZEROEXT_DSZ32(tmp1) 
U4efe: tmp2:= IMUL64L_DSZ64(tmp1, tmp2) 

U4f00: tmp2:= SHR_DSZ64(tmp2, 0x00000007) 
U4f01: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000360, tmp9, tmp2) 
U4f02: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U4f10

U4f04: tmp2:= READURAM( , 0x0011, 64) 
U4f05: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004e0, mode=0x01, tmp2) 
U4f06: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000054, tmp9) 

U4f08: tmp15:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000001) 
U4f09: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U4f0c
U4f0a: tmp15:= OR_DSZ32(0x00000002, tmp15) 

U4f0c: tmp15:= CONCAT_DSZ32(tmp15, tmp8) 
U4f0d: tmp1:= AND_DSZ64(tmp2, tmp15) 
U4f0e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U44f1) 

U4f10: LFNCEMARK-> TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U4fe8
U4f11: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000050, tmp9) 
U4f12: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000028, tmp9) 

U4f14: MOVETOCREG_DSZ64(0x00000013, 0x000) !m2 
U4f15: tmp10:= ZEROEXT_DSZ32(0x00005e96) 
U4f16: tmp14:= ZEROEXT_DSZ32(0x00004fe4) 

U4f18: LFNCEWAIT-> SAVEUIP( , 0x00, U441d) SEQW GOTO U5935
U4f19: tmp2:= ZEROEXT_DSZ8(tmp2) 
U4f1a: tmp1:= CONCAT_DSZ8(0x00000000, tmp2) 

U4f1c: SAVEUIP_REGOVR( , 0x01, U4f1d, 0xc935) !m0 SEQW GOTO U3881
U4f1d: tmp9:= ZEROEXT_DSZ32(tmp10) 
U4f1e: tmp3:= MOVEFROMCREG_DSZ64( , 0x067) 

U4f20: MOVETOCREG_DSZ64(0x00000009, 0x000) 
U4f21: MOVETOCREG_DSZ64( , 0x00000000, 0x065) 
U4f22: tmp12:= ZEROEXT_DSZ8() SEQW GOTO U017a

U4f24: MOVETOCREG_DSZ64( , 0x00000000, 0x6c0) 
U4f25: tmp0:= MOVEFROMCREG_DSZ64( , 0x074) 
U4f26: tmp0:= NOTAND_DSZ64(0x0000001e, tmp0) 

U4f28: MOVETOCREG_OR_DSZ64(tmp0, 0x00000010, 0x074) !m2 
U4f29: tmp0:= ZEROEXT_DSZ32(0x00005555) 
U4f2a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x06a) 

U4f2c: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x00e) 
U4f2d: MOVETOCREG_DSZ64( , 0x00000000, 0x00f) 
U4f2e: MOVETOCREG_DSZ64( , 0x00000000, 0x00a) 

U4f30: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x00d) 
U4f31: tmp0:= ZEROEXT_DSZ32(0x00030000) 
U4f32: WRITEURAM(tmp0, 0x0034, 32) 

U4f34: WRITEURAM(tmp0, 0x0071, 32) 
U4f35: MOVETOCREG_DSZ64( , 0x00000000, 0x7f1) 
U4f36: tmp0:= OR_DSZ32(0x00040001) 

U4f38: WRITEURAM(tmp0, 0x0041, 64) 
U4f39: tmp0:= ZEROEXT_DSZ32(0x00000040) 
U4f3a: WRITEURAM(tmp0, 0x0006, 32) 

U4f3c: tmp0:= ZEROEXT_DSZ32(0x00020200) 
U4f3d: WRITEURAM(tmp0, 0x0084, 32) 
U4f3e: tmp1:= BTS_DSZ64(0x00000000, 0x00000038) 

U4f40: WRITEURAM(tmp1, 0x005b, 64) 
U4f41: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U4f4a
U4f42: tmp0:= ZEROEXT_DSZ32(0x00000020) 

U4f44: WRMSLOOPCTRFBR( , 0x0000003f) 
U4f45: MOVETOCREG_DSZ64( , 0x00000000, tmp0) 
U4f46: tmp0:= ADD_DSZ32(0x00000001, tmp0) 

U4f48: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U4f45
U4f49: MOVETOCREG_DSZ64( , 0x00000000, 0x009) 
U4f4a: tmp0:= ZEROEXT_DSZ32(0x00000810) 

U4f4c: tmp0:= MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1 
U4f4d: WRITEURAM(tmp0, 0x0070, 64) 
U4f4e: MOVETOCREG_DSZ64( , 0x00000000, 0x2da, 32) !m1 

U4f50: MOVETOCREG_DSZ64( , 0x00000000, 0x01a) 
U4f51: MOVETOCREG_DSZ64( , 0x00000000, 0x065) 
U4f52: MOVETOCREG_DSZ64( , 0x00000000, 0x006) 

U4f54: unk_13f() !m2 
U4f55: MOVETOCREG_DSZ64( , 0x00000000, 0x7fe) 
U4f56: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x7ff) 

U4f58: MOVETOCREG_DSZ64( , 0x00000000, 0x7f5) 
U4f59: LFNCEWAIT-> tmp0:= ZEROEXT_DSZ32(0x00000093) 
U4f5a: tmp0:= SHL_DSZ32(tmp0, 0x00000010) 

U4f5c: tmp0:= CONCAT_DSZ32(0x0000ffff, tmp0) 
U4f5d: WRSEGFLD(0x00000000, SS_USERM, BASE) 
U4f5e: WRSEGFLD(tmp0, SS_USERM, SEL+FLGS+LIM) 

U4f60: tmp1:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U4f61: tmp1:= BT_DSZ32(tmp1, 0x00000007) 
U4f62: tmp1:= MOVEMERGEFLGS_DSZ64(0x3fff0000, tmp1) 

U4f64: tmp1:= CMOVCC_DSZ32_CONDB(tmp1, 0xffff0000) 
U4f65: LFNCEMARK-> WRSEGFLD(tmp0, UNK_SEG_09, SEL+FLGS+LIM) 
U4f66: WRSEGFLD(0x00000000, GS, BASE) 

U4f68: WRSEGFLD(tmp0, GS, SEL+FLGS+LIM) 
U4f69: tmp2:= ZEROEXT_DSZ32(0x0000f000) 
U4f6a: LFNCEWTMRK-> WRSEGFLD(tmp2, UNK_SEG_09, SEL) 

U4f6c: WRSEGFLD(0x00000000, FS, BASE) 
U4f6d: WRSEGFLD(tmp0, FS, SEL+FLGS+LIM) 
U4f6e: WRSEGFLD(0x00000000, ES, BASE) 

U4f70: WRSEGFLD(tmp0, ES, SEL+FLGS+LIM) 
U4f71: WRSEGFLD(0x00000000, DS, BASE) 
U4f72: WRSEGFLD(tmp0, DS, SEL+FLGS+LIM) 

U4f74: LFNCEWTMRK-> WRSEGFLD(tmp1, UNK_SEG_09, BASE) 
U4f75: WRSEGFLD(0x00000000, SS, BASE) 
U4f76: WRSEGFLD(tmp0, SS, SEL+FLGS+LIM) 

U4f78: LFNCEWAIT-> WRSEGFLD(tmp1, CS, BASE) 
U4f79: tmp2:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U4f7a: WRSEGFLD(tmp2, CS, SEL+FLGS+LIM) 

U4f7c: WRSEGFLD(0x00000000, DS_16bit, BASE) 
U4f7d: WRSEGFLD(tmp0, DS_16bit, SEL+FLGS+LIM) 
U4f7e: tmp0:= ZEROEXT_DSZ32(0x00000082) 

U4f80: tmp0:= SHL_DSZ32(tmp0, 0x00000010) 
U4f81: tmp0:= CONCAT_DSZ32(0x0000ffff, tmp0) 
U4f82: WRSEGFLD(0x00000000, UNK_SEG_04, BASE) 

U4f84: WRSEGFLD(0x00000000, TSS, BASE) 
U4f85: WRSEGFLD(0x00000000, GDT, BASE) 
U4f86: WRSEGFLD(0x00000000, IDT, BASE) 

U4f88: WRSEGFLD(0x00000000, LDT, BASE) 
U4f89: WRSEGFLD(tmp0, UNK_SEG_04, SEL+FLGS+LIM) 
U4f8a: WRSEGFLD(tmp0, GDT, SEL+FLGS+LIM) 

U4f8c: WRSEGFLD(tmp0, IDT, SEL+FLGS+LIM) 
U4f8d: WRSEGFLD(tmp0, LDT, SEL+FLGS+LIM) 
U4f8e: tmp2:= CONCAT_DSZ16(0x00000009) 

U4f90: tmp2:= OR_DSZ64(tmp2, tmp0) 
U4f91: WRSEGFLD(tmp2, TSS, SEL+FLGS+LIM) 
U4f92: MOVETOCREG_DSZ64( , 0x00000000, 0x79e) 

U4f94: MOVETOCREG_DSZ64( , 0x00000000, 0x73c) 
U4f95: WRITEURAM( , 0x00000000, 0x0002, 64) 
U4f96: tmp0:= RDSEGFLD(DS_32bit, SEL+FLGS+LIM) 

U4f98: WRSEGFLD(tmp0) 
U4f99: WRSEGFLD(tmp0) 
U4f9a: WRSEGFLD(0x00000000) 

U4f9c: WRSEGFLD(0x00000000) 
U4f9d: tmp0:= SUB_DSZ16(0x00000001) 
U4f9e: MOVETOCREG_DSZ64(tmp1, 0x78e) 

U4fa0: MOVETOCREG_DSZ64(tmp0, 0x410) 
U4fa1: tmp0:= ADD_DSZ32(0x00000001, tmp0) 
U4fa2: MOVETOCREG_DSZ64(tmp0, 0x700) 

U4fa4: tmp0:= READURAM( , 0x0023, 64) 
U4fa5: tmp0:= NOTAND_DSZ32(0x00001c00, tmp0) 
U4fa6: WRITEURAM(tmp0, 0x0023, 32) 

U4fa8: tmp0:= MOVETOCREG_BTS_DSZ64( , 0x0000003f, 0x7a8) !m0 
U4fa9: WRITEURAM( , 0x00000000, 0x007b, 64) 
U4faa: MOVETOCREG_DSZ64(tmp0, 0x7aa) 

U4fac: WRITEURAM( , 0x00000000, 0x007c, 64) 
U4fad: MOVETOCREG_DSZ64(tmp0, 0x7ac) 
U4fae: WRITEURAM( , 0x00000000, 0x007d, 64) 

U4fb0: MOVETOCREG_DSZ64(tmp0, 0x7ae) 
U4fb1: WRITEURAM( , 0x00000000, 0x007e, 64) 
U4fb2: MOVETOCREG_DSZ64( , 0x00000000, 0x529) 

U4fb4: WRITEURAM( , 0x00000000, 0x001e, 64) 
U4fb5: MOVETOCREG_DSZ64( , 0x00000000, 0x7c5) 
U4fb6: tmp0:= ZEROEXT_DSZ32(0xffff0ff0) 

U4fb8: WRITEURAM(tmp0, 0x003d, 64) 
U4fb9: SYNCFULL-> MOVETOCREG_BTS_DSZ64( , 0x0000000a, 0x7f8) !m0 
U4fba: rbx:= ZEROEXT_DSZ32() 

U4fbc: rcx:= ZEROEXT_DSZ32() 
U4fbd: rdi:= ZEROEXT_DSZ32() 
U4fbe: rsi:= ZEROEXT_DSZ32() 

U4fc0: rsp:= ZEROEXT_DSZ32() 
U4fc1: rbp:= ZEROEXT_DSZ32() 
U4fc2: r8:= ZEROEXT_DSZ32() 

U4fc4: r9:= ZEROEXT_DSZ32() 
U4fc5: r10:= ZEROEXT_DSZ32() 
U4fc6: r11:= ZEROEXT_DSZ32() 

U4fc8: r12:= ZEROEXT_DSZ32() 
U4fc9: r13:= ZEROEXT_DSZ32() 
U4fca: r14:= ZEROEXT_DSZ32() 

U4fcc: NOP 
U4fcd: NOP 
U4fce: ROVR<- r15:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U4fd0SEQW GOTO U0ba9

U4fd0: rdx:= ZEROEXT_DSZ32(tmp0) 
U4fd1: MOVETOCREG_DSZ64(rax, 0x2c1, 32) !m1 
U4fd2: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 

U4fd4: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000013, 0x2cd) !m0,m1 
U4fd5: SYNCFULL-> UJMP( , tmp14) 
U4fd6: ROVR<- tmp0:= CONCAT_DSZ16(0x00000005) SEQW SAVEUIP0 U4fd8SEQW GOTO U2600

enter_probe_mode:
U4fd8: NOP SEQW GOTO U3a41
U4fd9: tmp0:= OR_DSZ16(0x00008080, tmp8) 
U4fda: MOVETOCREG_DSZ64(tmp0, 0x48c) 

U4fdc: tmp5:= ZEROEXT_DSZ32(0x0000c001) 
U4fdd: mm0:= unk_7c2(mm5, 0x00000000) 
U4fde: mm0:= unk_69d( , 0x00000000) 

U4fe0: mm6:= unk_7ea(0x00000000) 
U4fe1: tmp6:= ADD_DSZ32(0x00006000, tmp6) 
U4fe2: mm0:= unk_7c2(mm6, 0x00000000) SEQW GOTO U21fe

FUN_ucode_0004fe4:
U4fe4: tmp9:= READURAM( , 0x0057, 64) 
U4fe5: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U4fe6: LFNCEMARK-> tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp9) 

U4fe8: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U4fe9: TESTUSTATE( , UCODE, 0x0200) ? SEQW GOTO U4ff5
U4fea: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000358, tmp9) 

U4fec: tmp15:= ZEROEXT_DSZ32(0x0000000f) 
U4fed: tmp15:= CONCAT_DSZ32(0x00000007, tmp15) 
U4fee: tmp1:= AND_DSZ64(tmp15, tmp1) 

U4ff0: tmp15:= AND_DSZ32(0x00001000, tmp8) 
U4ff1: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x0000000f) 
U4ff2: tmp15:= ADD_DSZ32(0x00002200, tmp15) 

U4ff4: MOVETOCREG_DSZ64(tmp1, tmp15) !m1 
U4ff5: tmp1:= SHR_DSZ32(tmp8, 0x00000013) 
U4ff6: tmp1:= AND_DSZ32(0x00000011, tmp1) 

U4ff8: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000054, tmp9) 
U4ff9: tmp15:= ADD_DSZ32(0x00000000, tmp15) 
U4ffa: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000040) 

U4ffc: tmp1:= OR_DSZ32(tmp15, tmp1) 
U4ffd: LFNCEMARK-> tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000c0, tmp9) 
U4ffe: tmp15:= AND_DSZ32(0x00000020, tmp4) 

U5000: tmp1:= OR_DSZ32(tmp15, tmp1) 
U5001: tmp15:= SHR_DSZ32(tmp8, 0x00000006) 
U5002: tmp15:= NOTAND_DSZ32(tmp15, 0x00000008) 

U5004: tmp1:= OR_DSZ32(tmp15, tmp1) 
U5005: tmp13:= AND_DSZ32(0x00000200, tmp8) 
U5006: tmp15:= SHR_DSZ32(tmp0, 0x0000000b) 

U5008: tmp15:= NOTAND_DSZ32(tmp15, 0x00000080) 
U5009: tmp1:= OR_DSZ32(tmp15, tmp1) 
U500a: tmp15:= BT_DSZ64(tmp2, 0x0000003a) 

U500c: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00000004) 
U500d: tmp1:= OR_DSZ32(tmp15, tmp1) 
U500e: tmp15:= AND_DSZ32(0x00004000, tmp2) 

U5010: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x00000002) 
U5011: ROVR<- tmp1:= OR_DSZ32(tmp15, tmp1) SEQW SAVEUIP1 U5012SEQW GOTO U5b34
U5012: SYNCMARK-> UFLOWCTRL( , tmp1, USTATE) 

U5014: tmp7:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U5015: tmp1:= unk_163(0x00000000) 
U5016: MOVETOCREG_SHR_DSZ64(tmp1, 0x00000008, 0x79d) 

U5018: WRITEURAM( , 0x00000000, 0x0079, 64) 
U5019: MOVETOCREG_DSZ64( , 0x00000000, 0x7fe) 
U501a: tmp15:= AND_DSZ32(0x00200000, tmp8) 

U501c: tmp7:= MOVEMERGEFLGS_DSZ32(tmp7, tmp15) 
U501d: SAVEUIP( , 0x00, U27ae) 
U501e: ROVR<- unk_13f() !m2 SEQW SAVEUIP1 U5020SEQW GOTO U2cd9

U5020: tmp15:= BT_DSZ32(tmp0, 0x0000000e) 
U5021: tmp8:= MOVEMERGEFLGS_DSZ32(tmp8, tmp15) 
U5022: tmp8:= CMOVCC_DSZ64_CONDNB(tmp8, 0x00000002) 

U5024: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp15) 
U5025: tmp2:= CMOVCC_DSZ64_CONDNB(tmp2, 0x00000008) 
U5026: MOVETOCREG_DSZ64( , 0x00000000, 0x513) 

U5028: MOVETOCREG_DSZ64( , 0x00000000, 0x79e) 
U5029: MOVETOCREG_DSZ64( , 0x00000000, 0x51c) 
U502a: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 

U502c: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000350, tmp9) 
U502d: tmp1:= CMOVCC_DSZ32_CONDZ(tmp7, tmp1) 
U502e: tmp1:= AND_DSZ32(0x00000801, tmp1) 

U5030: tmp15:= CMOVCC_DSZ32_CONDZ(tmp13, 0x00000500) 
U5031: tmp1:= OR_DSZ32(tmp15, tmp1) 
U5032: SYNCWAIT-> TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U1072

U5034: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, 0x7ff) 
U5035: rsp:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000c8, tmp9) 
U5036: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U5048

U5038: tmp12:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000348, tmp9) 
U5039: tmp15:= ZEROEXT_DSZ32(0xf8f8f8f8) 
U503a: tmp15:= CONCAT_DSZ32(tmp15, tmp15) 

U503c: tmp15:= AND_DSZ64(tmp15, tmp12) 
U503d: tmp12:= SELECTCC_DSZ64_CONDNZ(tmp15, tmp12) 
U503e: tmp15:= ZEROEXT_DSZ32(0x04040404) 

U5040: tmp15:= CONCAT_DSZ32(tmp15, tmp15) 
U5041: tmp15:= NOTAND_DSZ64(tmp12, tmp15) 
U5042: tmp15:= SHR_DSZ64(tmp15, 0x00000001) 

U5044: tmp15:= AND_DSZ64(tmp12, tmp15) 
U5045: tmp12:= SELECTCC_DSZ64_CONDNZ(tmp15, tmp12) 
U5046: MOVETOCREG_DSZ64(tmp12, 0x577) 

U5048: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000d8, tmp9) 
U5049: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000b8, tmp9) 
U504a: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000a0, tmp9) 

U504c: tmp12:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001e2, tmp9) 
U504d: tmp12:= NOTAND_DSZ16(0x00000007, tmp12) 
U504e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp12, U5e96) 

U5050: tmp12:= CONCAT_DSZ16(0x0000008b, tmp12) 
U5051: tmp12:= CONCAT_DSZ32(0x00000067, tmp12) 
U5052: WRSEGFLD(tmp12, TSS, SEL+FLGS+LIM) 

U5054: tmp12:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000220, tmp9) 
U5055: WRSEGFLD(tmp12, TSS, BASE) 
U5056: tmp12:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001b2, tmp9) 

U5058: tmp3:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001ba, tmp9) 
U5059: LFNCEMARK-> unk_dff(tmp8) 
U505a: tmp12:= NOTAND_DSZ16(0x00000007, tmp12) 

U505c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp12, U5e96) 
U505d: tmp15:= SHL_DSZ32(tmp13, 0x00000004) 
U505e: tmp15:= SUB_DSZ16(tmp15, 0x0000c09b) 

U5060: MOVETOCREG_DSZ64(tmp15, 0x7f5) 
U5061: tmp12:= CONCAT_DSZ16(tmp15, tmp12) 
U5062: tmp12:= CONCAT_DSZ32(0xffffffffffffffff, tmp12) 

U5064: WRSEGFLD(tmp12, UNK_SEG_09, FLGS) 
U5065: WRSEGFLD(0x00000000, UNK_SEG_09, BASE) 
U5066: tmp12:= SUB_DSZ32(0x00000001) 

U5068: MOVETOCREG_DSZ64( , 0x00000000, 0x78e) 
U5069: MOVETOCREG_DSZ64( , 0x00000000, 0x700) 
U506a: MOVETOCREG_DSZ64(tmp12, 0x410) 

U506c: tmp12:= NOTAND_DSZ16(0x00000007, tmp3) 
U506d: tmp15:= OR_DSZ16(tmp13, tmp12) 
U506e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U5e96) 

U5070: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp12, 0x08000000) 
U5071: tmp12:= CONCAT_DSZ16(0x0000c093, tmp12) 
U5072: MOVETOCREG_SHR_DSZ64(tmp12, 0x00000010, 0x73c) 

U5074: tmp12:= OR_DSZ32(tmp15, tmp12) 
U5075: tmp12:= CONCAT_DSZ32(0xffffffffffffffff, tmp12) 
U5076: SYNCMARK-> WRSEGFLD(tmp12, SS_USERM, SEL+FLGS+LIM) 

U5078: tmp15:= READURAM( , 0x0010, 64) 
U5079: tmp15:= ZEROEXT_DSZ16( , tmp15) 
U507a: tmp7:= NOTAND_DSZ64(tmp15, tmp7) SEQW SAVEUIP1 U507cSEQW GOTO U6efe

U507c: tmp1:= ZEROEXT_DSZ32(0x08000000) 
U507d: WRSEGFLD(tmp1, LDT, SEL+FLGS+LIM) 
U507e: MOVETOCREG_DSZ64( , 0x00000000, 0x51e) 

U5080: tmp1:= SUB_DSZ16(0x00000001) 
U5081: WRSEGFLD(tmp1, GDT, LIMIT) 
U5082: WRSEGFLD(tmp1, IDT, LIMIT) 

U5084: WRSEGFLD(0x00000000, ES, BASE) 
U5085: WRSEGFLD(0x00000000, SS_USERM, BASE) 
U5086: WRSEGFLD(0x00000000, DS, BASE) 

U5088: LFNCEWAIT-> tmp3:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001c2, tmp9) 
U5089: tmp9:= ZEROEXT_DSZ64(tmp9, tmp3) 
U508a: WRSEGFLD(0x00000000, CS, BASE) 

U508c: tmp2:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U508d: WRSEGFLD(tmp2, CS, SEL+FLGS+LIM) 
U508e: WRSEGFLD(0x00000000, SS, BASE) 

U5090: tmp2:= RDSEGFLD(SS_USERM, SEL+FLGS+LIM) 
U5091: WRSEGFLD(tmp2, SS, SEL+FLGS+LIM) 
U5092: SYNCWAIT-> rsp:= ZEROEXT_DSZ64N(rsp) !m1 

U5094: tmp5:= ZEROEXT_DSZ64N(tmp5) !m1 
U5095: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U4ad8
U5096: SAVEUIP_REGOVR(0x01, U5098, 0x0721) !m0 

U5098: SAVEUIP( , 0x00, U1475) 
U5099: SAVEUIP( , 0x01, U05dc) !m0 SEQW GOTO U5ca0
U509a: tmp2:= OR_DSZ32(tmp2, 0x00000004) 

U509c: ROVR<- tmp12:= CONCAT_DSZ32(tmp2, tmp12) SEQW SAVEUIP1 U509d
U509d: tmp2:= BT_DSZ64(tmp3, 0x00000024) 
U509e: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00010000) 

U50a0: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U50a5
U50a1: tmp12:= OR_DSZ64(tmp2, tmp12) 
U50a2: tmp12:= NOTAND_DSZ64(tmp12, tmp5) 

U50a4: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp12, U2711) 
U50a5: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000022, U50a6) !m0,m2 SEQW GOTO U50a9
U50a6: tmp2:= MOVEFROMCREG_DSZ64( , 0x7ff) 

U50a8: MOVETOCREG_BTR_DSZ64(tmp2, 0x0000000b, 0x7ff) !m0,m2 SEQW SAVEUIP1 U50a9SEQW GOTO U0164
U50a9: tmp2:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U50aa: tmp2:= NOTAND_DSZ32(0x00000001, tmp2) 

U50ac: tmp3:= AND_DSZ32(0x00000001, tmp5) 
U50ad: tmp2:= MOVETOCREG_OR_DSZ64(tmp2, 0x6c3, tmp3) !m2 SEQW SAVEUIP1 U50aeSEQW GOTO U02ba
U50ae: tmp1:= unk_d9b(0x000000c0) !m2 

U50b0: tmp1:= NOTAND_DSZ32(0x00800012, tmp1) 
U50b1: tmp2:= SHR_DSZ64(tmp5, 0x0000000f) 
U50b2: tmp2:= AND_DSZ32(0x00800002, tmp2) 

U50b4: tmp1:= OR_DSZ32(tmp2, tmp1) 
U50b5: tmp2:= SHL_DSZ32(tmp5, 0x00000001) 
U50b6: tmp2:= AND_DSZ32(0x00000010, tmp2) 

U50b8: tmp1:= OR_DSZ32(tmp2, tmp1) 
U50b9: tmp1:= unk_d9f(0x000000c0) !m2 
U50ba: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 

U50bc: WRITEURAM(tmp5, 0x0041, 64) SEQW SAVEUIP1 U50bdSEQW GOTO U32cd
U50bd: tmp1:= MOVEFROMCREG_DSZ64( , 0x2e6, 32) !m1 
U50be: tmp1:= NOTAND_DSZ32(0x00000010, tmp1) 

U50c0: tmp3:= SHR_DSZ32(tmp5, 0x00000013) 
U50c1: tmp3:= AND_DSZ32(0x00000010, tmp3) 
U50c2: MOVETOCREG_OR_DSZ64(tmp1, 0x2e6, tmp3) !m1 SEQW GOTO U324e

calc_sha256_start:
U50c4: tmm7:= FMOV() 
U50c5: tmp0:= ZEROEXT_DSZ32(0x6a09e667) 
U50c6: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7,  , tmp0) 

U50c8: tmp1:= ZEROEXT_DSZ32(0xbb67ae85) 
U50c9: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004,  , tmp1) 
U50ca: tmp2:= ZEROEXT_DSZ32(0x3c6ef372) 

U50cc: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008,  , tmp2) 
U50cd: tmp3:= ZEROEXT_DSZ32(0xa54ff53a) 
U50ce: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c,  , tmp3) 

U50d0: tmp4:= ZEROEXT_DSZ32(0x510e527f) 
U50d1: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010,  , tmp4) 
U50d2: tmp8:= ZEROEXT_DSZ32(0x9b05688c) 

U50d4: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014,  , tmp8) 
U50d5: tmp9:= ZEROEXT_DSZ32(0x1f83d9ab) 
U50d6: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018,  , tmp9) 

U50d8: tmp10:= ZEROEXT_DSZ32(0x5be0cd19) 
U50d9: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c,  , tmp10) 
calc_sha256_update:
U50da: tmm6:= unk_704(mm6) 

U50dc: tmm7:= unk_4ce(tmm7, tmm6) 
U50dd: tmp13:= ZEROEXT_DSZ64(0x00000038) 
U50de: LFNCEWAIT-> tmp14:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp5, mode=0x01, tmp13) 

U50e0: tmp14:= unk_37c(tmp14) 
U50e1: tmp14:= ROR_DSZ64(tmp14, 0x00000020) 
U50e2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000020, mode=0x01, tmp13, tmp14) 

U50e4: tmp13:= SUB_DSZ32(0x00000008, tmp13) 
U50e5: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp13, U50e6) SEQW GOTO U50de
U50e6: tmp11:= ZEROEXT_DSZ32(0x00000030) 

U50e8: tmp13:= ADD_DSZ32(0x00000020) 
U50e9: tmm0:= unk_744(mm5) 
U50ea: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000038, tmp13) 

U50ec: tmp14:= ROR_DSZ32(tmp15, 0x00000011) 
U50ed: tmp12:= ROR_DSZ32(tmp15, 0x00000013) 
U50ee: tmp14:= XOR_DSZ32(tmp12, tmp14) 

U50f0: tmp12:= SHR_DSZ32(tmp15, 0x0000000a) 
U50f1: tmp14:= XOR_DSZ32(tmp12, tmp14) 
U50f2: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000024, tmp13) 

U50f4: tmp14:= ADD_DSZ32(tmp15, tmp14) 
U50f5: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004, tmp13) 
U50f6: tmp12:= ROR_DSZ32(tmp15, 0x00000007) 

U50f8: tmp5:= ROR_DSZ32(tmp15, 0x00000012) 
U50f9: tmp12:= XOR_DSZ32(tmp5, tmp12) 
U50fa: tmp5:= SHR_DSZ32(tmp15, 0x00000003) 

U50fc: tmp12:= XOR_DSZ32(tmp5, tmp12) 
U50fd: tmp14:= ADD_DSZ32(tmp12, tmp14) 
U50fe: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp13) 

U5100: tmp14:= ADD_DSZ32(tmp15, tmp14) 
U5101: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000040, tmp13, tmp14) 
U5102: tmp13:= ADD_DSZ32(0x00000004, tmp13) 

U5104: tmp11:= SUB_DSZ32(0x00000001, tmp11) 
U5105: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp11, U5106) SEQW GOTO U50ea
U5106: tmp11:= ZEROEXT_DSZ32() 

U5108: LFNCEWAIT-> tmp5:= READURAM( , 0x004e, 64) 
U5109: tmp13:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, tmp11) 
U510a: tmp14:= NOTAND_DSZ32(tmp4, tmp9) 

U510c: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000020, tmp11) 
U510d: tmp12:= AND_DSZ32(tmp8, tmp4) 
U510e: tmp15:= ADD_DSZ32(tmp15, tmp13) 

U5110: tmp14:= XOR_DSZ32(tmp14, tmp12) 
U5111: tmp12:= ROR_DSZ32(tmp4, 0x00000006) 
U5112: tmp15:= ADD_DSZ32(tmp14, tmp15) 

U5114: tmp14:= ROR_DSZ32(tmp4, 0x0000000b) 
U5115: tmp12:= XOR_DSZ32(tmp14, tmp12) 
U5116: tmp14:= ROR_DSZ32(tmp4, 0x00000019) 

U5118: tmp15:= ADD_DSZ32(tmp10, tmp15) 
U5119: tmp10:= ZEROEXT_DSZ32(tmp9) 
U511a: tmp9:= ZEROEXT_DSZ32(tmp8) 

U511c: tmp8:= ZEROEXT_DSZ32(tmp4) 
U511d: tmp12:= XOR_DSZ32(tmp14, tmp12) 
U511e: tmp14:= ROR_DSZ32(tmp0, 0x0000000d) 

U5120: tmp15:= ADD_DSZ32(tmp12, tmp15) 
U5121: tmp12:= ROR_DSZ32(tmp0, 0x00000002) 
U5122: tmp4:= ADD_DSZ32(tmp15, tmp3) 

U5124: tmp3:= ZEROEXT_DSZ32(tmp2) 
U5125: tmp12:= XOR_DSZ32(tmp14, tmp12) 
U5126: tmp14:= ROR_DSZ32(tmp0, 0x00000016) 

U5128: tmp13:= XOR_DSZ32(tmp14, tmp12) 
U5129: tmp11:= ADD_DSZ32(0x00000004, tmp11) 
U512a: tmp12:= AND_DSZ32(tmp1, tmp0) 

U512c: tmp14:= AND_DSZ32(tmp2, tmp0) 
U512d: tmp12:= XOR_DSZ32(tmp14, tmp12) 
U512e: tmp14:= AND_DSZ32(tmp2, tmp1) 

U5130: tmp2:= ZEROEXT_DSZ32(tmp1) 
U5131: tmp12:= XOR_DSZ32(tmp14, tmp12) 
U5132: tmp1:= ZEROEXT_DSZ32(tmp0) 

U5134: tmp13:= ADD_DSZ32(tmp12, tmp13) 
U5135: tmp0:= ADD_DSZ32(tmp13, tmp15) 
U5136: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000008, U5138) !m2 SEQW GOTO U5109

U5138: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7) 
U5139: tmp0:= ADD_DSZ32(tmp0, tmp15) 
U513a: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004) 

U513c: tmp1:= ADD_DSZ32(tmp1, tmp15) 
U513d: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008) 
U513e: tmp2:= ADD_DSZ32(tmp2, tmp15) 

U5140: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c) 
U5141: tmp3:= ADD_DSZ32(tmp3, tmp15) 
U5142: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010) 

U5144: tmp4:= ADD_DSZ32(tmp4, tmp15) 
U5145: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014) 
U5146: tmp8:= ADD_DSZ32(tmp8, tmp15) 

U5148: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018) 
U5149: tmp9:= ADD_DSZ32(tmp9, tmp15) 
U514a: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c) 

U514c: tmp10:= ADD_DSZ32(tmp10, tmp15) 
U514d: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp6, 0x00000000, U514e) !m2 SEQW GOTO U5159
U514e: tmp0:= BSWAP_DSZ32(tmp0) 

U5150: tmp1:= BSWAP_DSZ32(tmp1) 
U5151: tmp2:= BSWAP_DSZ32(tmp2) 
U5152: tmp3:= BSWAP_DSZ32(tmp3) 

U5154: tmp4:= BSWAP_DSZ32(tmp4) 
U5155: tmp8:= BSWAP_DSZ32(tmp8) 
U5156: tmp9:= BSWAP_DSZ32(tmp9) 

U5158: tmp10:= BSWAP_DSZ32(tmp10) 
U5159: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7,  , tmp0) 
U515a: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004,  , tmp1) 

U515c: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008,  , tmp2) 
U515d: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c,  , tmp3) 
U515e: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010,  , tmp4) 

U5160: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014,  , tmp8) 
U5161: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018,  , tmp9) 
U5162: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c,  , tmp10) 

U5164: tmp5:= PINTMOVDTMM2I_DSZ64(tmm0) 
U5165: tmp5:= ADD_DSZ64(0x00000040, tmp5) 
U5166: tmp6:= SUB_DSZ32(0x00000001, tmp6) 

U5168: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp6, U5169) SEQW GOTO U50dd
U5169: tmp11:= READURAM( , 0x0047, 64) 
U516a: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp6, U0011) 

U516c: tmp15:= SHR_DSZ32(tmp11, 0x00000010) 
U516d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U0011) 
U516e: tmp15:= BTS_DSZ64(0x00000000, 0x0000001f) 

U5170: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000020,  , tmp15) 
U5171: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000028,  , 0x00000000) 
U5172: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000030,  , 0x00000000) 

U5174: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000038,  , 0x00000000) 
U5175: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000040,  , 0x00000000) 
U5176: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000048,  , 0x00000000) 

U5178: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000050,  , 0x00000000) 
U5179: tmp15:= PINTMOVDTMM2I_DSZ32(tmm7) 
U517a: tmp15:= ROL_DSZ64(tmp15, 0x00000029) 

U517c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000058,  , tmp15) SEQW GOTO U50e6
U517d: tmp2:= AND_DSZ32(0x0000003f, tmp5) 
U517e: tmp2:= OR_DSZ32(0x00000020, tmp2) 

U5180: tmp1:= SUB_DSZ32(tmp2, tmp0) 
U5181: tmm2:= unk_7c2(mm1, tmm1) 
U5182: tmm2:= unk_6a7(tmm2, tmm0) 

U5184: tmp2:= ZEROEXT_DSZ32(0x00000004) 
U5185: tmm5:= unk_741(mm2) !m2 
U5186: mm0:= unk_6dd( , tmm2) SEQW GOTO U17ec

U5188: tmp4:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
U5189: tmp13:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U518a: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U5191

U518c: tmp0:= ZEROEXT_DSZ32(0x00000011) 
U518d: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U4e81
U518e: tmp15:= READURAM( , 0x004c, 64) 

U5190: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000d, U1f90) !m2 
U5191: LFNCEWAIT-> tmp11:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U5192: tmp11:= READAFLAGS( , tmp11) !m2 

U5194: tmp14:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U5195: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U5196: tmp1:= MOVEFROMCREG_DSZ64( , 0x7ff) 

U5198: TESTUSTATE( , SYS, !UST_VMX_OP_DIS) !m0,m1 ? SEQW GOTO U2769
U5199: LFNCEMARK-> MOVE_DSZ32() 
U519a: tmp9:= NOTAND_DSZ32(0x0000000d, tmp0) 

U519c: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x7ff) 
U519d: MOVETOCREG_BTR_DSZ64(tmp9, 0x0000001f, 0x7f6) !m0 
U519e: MOVETOCREG_DSZ64( , 0x00000000, 0x7c5) 

U51a0: ROVR<- unk_13f() !m2 SEQW SAVEUIP1 U51a1SEQW GOTO U2075
U51a1: MOVETOCREG_DSZ64( , 0x00000000, 0x7f8) 
U51a2: MOVETOCREG_DSZ64( , 0x00000000, 0x7f9, 32) !m1 

U51a4: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x7fe) 
U51a5: tmp2:= ZEROEXT_DSZ32(0x0000fc00) 
U51a6: tmp9:= READURAM( , 0x0071, 64) 

U51a8: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U51aa
U51a9: tmp9:= READURAM( , 0x0034, 64) 
U51aa: tmp9:= ZEROEXT_DSZ32(tmp9) 

U51ac: tmp2:= ADD_DSZ64(tmp2, tmp9) 
U51ad: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 
U51ae: LFNCEWAIT-> tmp6:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003f8) 

U51b0: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000240) 
U51b1: tmp9:= AND_DSZ32(0xffca7800, tmp3) 
U51b2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U5851) 

U51b4: tmp9:= READURAM( , 0x005c, 64) 
U51b5: tmp9:= BT_DSZ64(tmp9, 0x0000001a) 
U51b6: tmp9:= SELECTCC_DSZ32_CONDB(tmp9, tmp3) 

U51b8: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000000f, U5851) !m0,m2 
U51b9: tmp9:= READURAM( , 0x0035, 64) 
U51ba: tmp9:= BT_DSZ64(tmp9, 0x00000029) 

U51bc: tmp9:= SELECTCC_DSZ32_CONDB(tmp9, 0x00200000) 
U51bd: tmp9:= AND_DSZ32(tmp9, tmp3) 
U51be: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U5851) 

U51c0: tmp9:= READURAM( , 0x0077, 64) 
U51c1: tmp9:= BT_DSZ64(tmp9, 0x0000002b) 
U51c2: tmp9:= SELECTCC_DSZ32_CONDNB(tmp9, 0x00008000) 

U51c4: tmp9:= AND_DSZ16(tmp9, tmp3) 
U51c5: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U5851) 
U51c6: tmp9:= SHR_DSZ32(tmp6, 0x0000001a) 

U51c8: tmp9:= AND_DSZ32(tmp3, tmp9) 
U51c9: tmp9:= BT_DSZ32(tmp9, 0x00000005) 
U51ca: tmp9:= SETCC_CONDB(tmp9) 

U51cc: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003e0) 
U51cd: tmp10:= SHR_DSZ32(tmp5, 0x00000008) 
U51ce: tmp9:= AND_DSZ32(tmp9, tmp10) 

U51d0: tmp10:= SHR_DSZ32(tmp5, 0x0000000a) 
U51d1: tmp10:= AND_DSZ32(0x00000001, tmp10) 
U51d2: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, U5851, tmp10) !m2 

U51d4: tmp10:= BTS_DSZ32(0x00000000, 0x0000001f) 
U51d5: tmp9:= AND_DSZ32(0x80000001, tmp6) 
U51d6: CMPUJZ_DIRECT_NOTTAKEN(tmp9, U5851, tmp10) !m2 

U51d8: tmp9:= AND_DSZ32(0x60000000, tmp6) 
U51d9: tmp10:= BTS_DSZ32(0x00000000, 0x0000001d) 
U51da: CMPUJZ_DIRECT_NOTTAKEN(tmp9, U5851, tmp10) !m2 

U51dc: tmp8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003f0) 
U51dd: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000248) 
U51de: CMPUJNZ_DIRECT_NOTTAKEN(tmp8, U5851, tmp9) !m2 

U51e0: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003e8) 
U51e1: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000250) 
U51e2: tmp9:= XOR_DSZ32(tmp7, tmp9) 

U51e4: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000011, U5851) !m2 
U51e5: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001c8) 
U51e6: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001b8) 

U51e8: tmp9:= SHR_DSZ32(tmp9, 0x00000010) 
U51e9: tmp10:= SHR_DSZ32(tmp10, 0x00000010) 
U51ea: tmp9:= AND_DSZ32(tmp10, tmp9) 

U51ec: tmp9:= AND_DSZ32(0x00000060, tmp9) 
U51ed: tmp9:= SUB_DSZ32(0x00000060, tmp9) 
U51ee: tmp7:= BT_DSZ32(tmp7, 0x00000011) 

U51f0: tmp9:= SELECTCC_DSZ32_CONDNB(tmp7, tmp9) 
U51f1: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, 0x00000000, U5851) !m2 
U51f2: tmp9:= NOTAND_DSZ32(tmp6, 0x00000001) 

U51f4: tmp9:= SELECTCC_DSZ32_CONDNB(tmp7, tmp9) 
U51f5: CMPUJNZ_DIRECT_NOTTAKEN(tmp9, 0x00000000, U5851) !m2 
U51f6: tmp9:= MOVEFROMCREG_DSZ64( , 0x7f0) 

U51f8: BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000000, U5851) !m2 
U51f9: LFNCEMARK-> tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000180) 
U51fa: NOP 

U51fc: LFNCEWAIT-> WRSEGFLD(tmp9, GDT, BASE) 
U51fd: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003c0) 
U51fe: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000190) 

U5200: WRSEGFLD(tmp9, LDT, BASE) 
U5201: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000160) 
U5202: WRSEGFLD(tmp9, IDT, BASE) 

U5204: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000001dc) 
U5205: tmp9:= SHL_DSZ64(tmp9, 0x00000020) 
U5206: WRITEURAM(tmp9, 0x0124, 64) !m2 

U5208: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001a0) 
U5209: WRSEGFLD(tmp9, ES, BASE) 
U520a: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001b0) 

U520c: WRSEGFLD(tmp9, UNK_SEG_09, BASE) 
U520d: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001c0) 
U520e: WRSEGFLD(tmp9, SS_USERM, BASE) 

U5210: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000130) 
U5211: WRSEGFLD(tmp9, DS, BASE) 
U5212: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000140) 

U5214: WRSEGFLD(tmp9, FS, BASE) 
U5215: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000150) 
U5216: WRSEGFLD(tmp9, GS, BASE) 

U5218: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000170) 
U5219: WRSEGFLD(tmp9, TSS, BASE) 
U521a: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000198) 

U521c: WRSEGFLD(tmp9, LDT, SEL+FLGS+LIM) 
U521d: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000188) 
U521e: WRSEGFLD(tmp9, GDT, SEL+FLGS+LIM) 

U5220: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000168) 
U5221: WRSEGFLD(tmp9, IDT, SEL+FLGS+LIM) 
U5222: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001a8) 

U5224: WRSEGFLD(tmp10, ES, SEL+FLGS+LIM) 
U5225: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001b8) 
U5226: WRSEGFLD(tmp10, UNK_SEG_09, SEL+FLGS+LIM) 

U5228: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001c8) 
U5229: WRSEGFLD(tmp10, SS_USERM, SEL+FLGS+LIM) 
U522a: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000138) 

U522c: WRSEGFLD(tmp10, DS, SEL+FLGS+LIM) 
U522d: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000148) 
U522e: WRSEGFLD(tmp10, FS, SEL+FLGS+LIM) 

U5230: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000158) 
U5231: WRSEGFLD(tmp10, GS, SEL+FLGS+LIM) 
U5232: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000178) 

U5234: LFNCEMARK-> WRSEGFLD(tmp10, TSS, SEL+FLGS+LIM) 
U5235: tmp9:= READURAM( , 0x0010, 64) 
U5236: tmp9:= NOTAND_DSZ64(0xffffffff, tmp9) 

U5238: tmp8:= NOTAND_DSZ64(tmp9, tmp8) 
U5239: MOVETOCREG_DSZ64(tmp8, 0x529) 
U523a: tmp14:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000003d8) 

U523c: rdi:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000394) 
U523d: rsi:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000038c) 
U523e: rbp:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000384) 

U5240: rsp:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000037c) 
U5241: rbx:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000374) 
U5242: rdx:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000036c) 

U5244: rcx:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000364) 
U5245: rax:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000035c) 
U5246: r8:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000354) 

U5248: r9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000034c) 
U5249: r10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000344) 
U524a: r11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000033c) 

U524c: r12:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000334) 
U524d: r13:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000032c) 
U524e: r14:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000324) 

U5250: r15:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000031c) 
U5251: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003d0) 
U5252: WRITEURAM(tmp9, 0x003d, 64) !m2 

U5254: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003a8) 
U5255: LFNCEWAIT-> WRSEGFLD(tmp9, ES, UNK_FLD_0c) 
U5256: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003ac) 

U5258: WRSEGFLD(tmp9, UNK_SEG_09, UNK_FLD_0c) 
U5259: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003b0) 
U525a: WRSEGFLD(tmp9, SS_USERM, UNK_FLD_0c) 

U525c: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003b4) 
U525d: WRSEGFLD(tmp9, DS, UNK_FLD_0c) 
U525e: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003b8) 

U5260: WRSEGFLD(tmp9, FS, UNK_FLD_0c) 
U5261: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003bc) 
U5262: WRSEGFLD(tmp9, GS, UNK_FLD_0c) 

U5264: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x000003c4) 
U5265: LFNCEMARK-> WRSEGFLD(tmp9, TSS, UNK_FLD_0c) 
U5266: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002f8) 

U5268: WRITEURAM(tmp9, 0x0071, 32) !m2 
U5269: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002ec) 
U526a: WRITEURAM(tmp9, 0x0034, 32) !m2 

U526c: tmp8:= READURAM( , 0x0077, 64) 
U526d: tmp8:= BT_DSZ64(tmp8, 0x0000002b) 
U526e: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp8, U5270) SEQW GOTO U5275

U5270: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000002e0) 
U5271: tmp8:= AND_DSZ16(0x00000002, tmp8) 
U5272: tmp8:= SHL_DSZ32(tmp8, 0x00000008) 

U5274: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x007, tmp8) !m2 
U5275: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U5295
U5276: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x0000027c) 

U5278: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000280) 
U5279: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp9, 0x2c4, 32) !m1 
U527a: MOVETOCREG_DSZ64(tmp10, 0x008) !m2 

U527c: tmp9:= CONCAT_DSZ32(tmp10, tmp9) 
U527d: WRITEURAM(tmp9, 0x0070, 64) !m2 
U527e: tmp0:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x0000027e) 

U5280: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x000003a4) 
U5281: WRITEURAM(tmp9, 0x0039, 32) !m2 
U5282: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x004) 

U5284: tmp9:= AND_DSZ32(0x00000001, tmp9) 
U5285: tmp9:= SHL_DSZ32(tmp9, 0x00000005) 
U5286: MOVETOCREG_OR_DSZ64(tmp10, 0x004, tmp9) !m2 

U5288: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x0000039c) 
U5289: WRITEURAM(tmp9, 0x003e, 64) !m2 
U528a: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001e8) 

U528c: WRITEURAM(tmp9, 0x006e, 64) !m2 
U528d: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001f0) 
U528e: WRITEURAM(tmp9, 0x000a, 64) !m2 

U5290: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001f8) 
U5291: WRITEURAM(tmp9, 0x0009, 64) !m2 
U5292: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x000001e0) 

U5294: WRITEURAM(tmp9, 0x000b, 64) !m2 
U5295: tmp13:= ADD_DSZ64(tmp2, 0x00000208) 
U5296: tmp9:= ZEROEXT_DSZ32(0x00000004) 

U5298: tmp9:= SUB_DSZ32(0x00000001, tmp9) 
U5299: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp13, tmp9) 
U529a: tmp11:= ADD_DSZ64(tmp9, 0x00000540) 

U529c: MOVETOCREG_DSZ64(tmp10, tmp11) !m2 
U529d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U529e) SEQW GOTO U5298
U529e: tmp4:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp2, 0x00000230) 

U52a0: tmp9:= READURAM( , 0x005c, 64) 
U52a1: tmp12:= ZEROEXT_DSZ32(0x00000010) 
U52a2: tmp5:= MOVEINSERTFLGS_DSZ64( , tmp5) 

U52a4: tmp11:= READURAM( , 0x0059, 64) 
U52a5: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U52aa
U52a6: tmp11:= READURAM( , 0x0080, 64) 

U52a8: tmp12:= ZEROEXT_DSZ32(0x00000024) 
U52a9: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000004, U52be) !m2 
U52aa: tmp10:= READURAM( , 0x0018, 64) 

U52ac: tmp0:= ROR_DSZ32(tmp10, 0x00000003) 
U52ad: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U52ae: tmp9:= MOVEFROMCREG_DSZ64( , 0x281, 32) !m1 

U52b0: tmp0:= NOTAND_DSZ32(tmp0, tmp9) 
U52b1: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x281, 32) !m1 
U52b2: tmp0:= SHR_DSZ64(tmp10, 0x00000017) 

U52b4: tmp1:= MOVETOCREG_SHR_DSZ64(tmp0, 0x0000000c, 0x008) 
U52b5: tmp10:= SHR_DSZ64(tmp11, 0x00000020) 
U52b6: tmp10:= AND_DSZ32(0x00010000, tmp10) 

U52b8: tmp9:= AND_DSZ32(0xffff0000, tmp11) 
U52b9: tmp9:= SHR_DSZ32(tmp9, 0x00000010) 
U52ba: tmp9:= MOVETOCREG_OR_DSZ64(tmp9, 0x2c4, tmp10) !m1 

U52bc: tmp9:= CONCAT_DSZ32(tmp1, tmp9) 
U52bd: WRITEURAM(tmp9, 0x0070, 64) !m2 
U52be: tmp10:= MOVEFROMCREG_DSZ64( , 0x51e) 

U52c0: tmp9:= AND_DSZ32(0x00000040, tmp11) 
U52c1: tmp9:= SHR_DSZ32(tmp9, 0x00000006) 
U52c2: MOVETOCREG_OR_DSZ64(tmp9, 0x51e, tmp10) 

U52c4: tmp9:= AND_DSZ32(0x00002000, tmp11) 
U52c5: tmp3:= NOTAND_DSZ32(0x00002000, tmp3) 
U52c6: tmp3:= OR_DSZ32(tmp9, tmp3) 

U52c8: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U49e0
U52c9: tmp9:= AND_DSZ32(0x00000008, tmp11) 
U52ca: NOP 

U52cc: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U1035) SEQW GOTO U49e2
U52cd: WRITEURAM(tmp1, 0x0001, 64) !m2 
U52ce: tmp1:= READAFLAGS(tmp1) 

U52d0: tmp1:= CONCAT_DSZ16(tmp1, tmp0) 
U52d1: WRITEURAM(tmp1, 0x0008, 64) !m2 
U52d2: tmp0:= SHR_DSZ32(tmp0, 0x00000010) 

U52d4: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U248d) !m1 
U52d5: tmp1:= ZEROEXT_DSZ32(0x00003554) 
U52d6: tmp1:= CONCAT_DSZ16(tmp1, 0x00000dc0) SEQW GOTO U2490

U52d8: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U04ac) 
U52d9: tmp11:= MOVEFROMCREG_DSZ64( , 0x105) 
U52da: tmp11:= SHR_DSZ32(tmp11, 0x00000002) 

U52dc: tmp11:= AND_DSZ32(0x00000001, tmp11) 
U52dd: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U52de: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U52e0: tmp0:= SHR_DSZ64(tmp2, 0x0000003d) 
U52e1: tmp9:= AND_DSZ32(0x00004000, tmp2) 
U52e2: tmp9:= SELECTCC_DSZ32_CONDZ(tmp9, 0x00000080) 

U52e4: tmp2:= AND_DSZ32(0x00000c00, tmp2) 
U52e5: tmp2:= OR_DSZ32(tmp0, tmp2) 
U52e6: WRITEURAM(tmp2, 0x0038, 32) 

U52e8: tmp2:= SETCC_CONDNZ(tmp2) 
U52e9: tmp2:= OR_DSZ32(tmp9, tmp2) 
U52ea: LFNCEWAIT-> tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp12) 

U52ec: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp7, 0x0000001f, U04ac) !m0 
U52ed: tmp1:= READURAM( , 0x0057, 64) 
U52ee: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b8, tmp12) 

U52f0: tmp13:= SUB_DSZ64(tmp0, tmp1) 
U52f1: tmp13:= CMOVCC_DSZ64_CONDZ(tmp8, tmp13) 
U52f2: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp12) 

U52f4: tmp7:= SUB_DSZ32(tmp8, tmp7) 
U52f5: tmp13:= OR_DSZ64(tmp13, tmp7) 
U52f6: tmp4:= MOVEFROMCREG_DSZ64( , 0x004) 

U52f8: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp4, 0x00000002, U31b8) !m0,m1,m2 
U52f9: tmp6:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000f8, tmp12) 
U52fa: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000fc, tmp12) 

U52fc: tmm1:= unk_707(mm0) 
U52fd: tmp0:= AND_DSZ32(0x80000000, tmp0) 
U52fe: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U5300: tmp2:= OR_DSZ32(tmp2, tmp0) 
U5301: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d4, tmp12) 
U5302: tmp0:= OR_DSZ32(0x00000000, tmp0) 

U5304: tmm2:= unk_707(mm0) 
U5305: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000004) 
U5306: tmp2:= OR_DSZ32(tmp0, tmp2) 

U5308: tmp0:= MOVEFROMCREG_DSZ64( , 0x402) 
U5309: tmp0:= AND_DSZ32(0x00000008, tmp0) 
U530a: tmp3:= READURAM( , 0x0041, 64) 

U530c: tmp3:= SHR_DSZ64(tmp3, 0x0000001f) 
U530d: tmp3:= AND_DSZ32(0x00000008, tmp3) 
U530e: tmp0:= OR_DSZ32(tmp0, tmp3) 

U5310: tmp2:= OR_DSZ32(tmp0, tmp2) 
U5311: tmp0:= AND_DSZ32(0x00010000, tmp6) 
U5312: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000040) 

U5314: tmp2:= OR_DSZ32(tmp0, tmp2) 
U5315: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp13, U023a) 
U5316: tmp0:= SHR_DSZ32(tmp6, 0x0000000a) 

U5318: tmp1:= NOTAND_DSZ32(tmp0, tmp11) 
U5319: tmp13:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00000010) 
U531a: tmp10:= SELECTCC_DSZ32_CONDNZ(tmp8, 0x00000020) 

U531c: tmp5:= AND_DSZ32(0x00000002, tmp0) 
U531d: tmp0:= OR_DSZ32(tmp1, tmp5) 
U531e: tmp10:= OR_DSZ32(tmp0, tmp10) 

U5320: tmm0:= unk_707(tmm2) 
U5321: tmp0:= SHL_DSZ32(tmp0, 0x00000003) 
U5322: tmp0:= OR_DSZ32(tmp11, tmp0) 

U5324: tmp12:= MOVEINSERTFLGS_DSZ64(tmp0, tmp12) 
U5325: MOVETOCREG_OR_DSZ64(tmp2, 0x6c5, tmp13) 
U5326: tmp10:= AND_DSZ32(0x00000204, tmp6) 

U5328: tmp10:= SHL_DSZ32(tmp10, 0x00000001) 
U5329: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000b0, tmp12) 
U532a: tmm6:= unk_747(mm0) 

U532c: tmp0:= NOTAND_DSZ32(tmp0, 0x00000020) 
U532d: tmp0:= SHL_DSZ32(tmp0, 0x00000005) 
U532e: tmp10:= OR_DSZ32(tmp0, tmp10) 

U5330: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000090, tmp12) 
U5331: tmm7:= unk_747(mm0) 
U5332: tmp0:= SHR_DSZ32(tmp0, 0x00000015) 

U5334: tmp0:= NOTAND_DSZ32(tmp0, 0x00000400) 
U5335: tmp10:= OR_DSZ32(tmp0, tmp10) 
U5336: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001b4, tmp12) 

U5338: tmp3:= BTS_DSZ32(tmp3, 0x0000001f) 
U5339: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000002cc, tmp12) 
U533a: tmp0:= SELECTCC_DSZ32_CONDNB(tmp3, tmp0) 

U533c: tmp0:= CONCAT_DSZ32(tmp0, tmp3) 
U533d: tmp3:= AND_DSZ64(0x00200000, tmp0) 
U533e: tmp3:= SELECTCC_DSZ32_CONDZ(tmp3, 0x00000800) 

U5340: tmp10:= OR_DSZ32(tmp3, tmp10) 
U5341: tmp0:= BT_DSZ64(tmp0, 0x00000021) 
U5342: tmp3:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00001000) 

U5344: tmp10:= OR_DSZ32(tmp3, tmp10) 
U5345: tmp14:= SHR_DSZ32(tmp6, 0x0000000a) 
U5346: tmp14:= AND_DSZ32(0x00000038, tmp14) 

U5348: tmp2:= CONCAT_DSZ16(tmp14, tmp10) 
U5349: tmp4:= BT_DSZ64(tmp0, 0x00000029) 
U534a: tmp4:= SELECTCC_DSZ32_CONDNB(tmp4, 0x00000200) 

U534c: tmp14:= BT_DSZ64(tmp0, 0x00000024) 
U534d: tmp14:= SELECTCC_DSZ32_CONDNB(tmp14, 0x00000010) 
U534e: tmp4:= OR_DSZ32(tmp14, tmp4) 

U5350: tmp11:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001ac, tmp12) 
U5351: tmp14:= AND_DSZ32(0x00000040, tmp11) 
U5352: tmp14:= SELECTCC_DSZ32_CONDZ(tmp14, 0x00000004) 

U5354: tmp4:= OR_DSZ32(tmp14, tmp4) 
U5355: tmp2:= CONCAT_DSZ32(tmp4, tmp2) 
U5356: LFNCEWTMRK-> WRITEURAM( , 0x00000000, 0x004a, 64) 

U5358: MOVETOCREG_DSZ64(tmp2, 0x6c0) 
U5359: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000104, tmp12) 
U535a: SYNCMARK-> WRITEURAM(tmp4, 0x0048, 64) 

U535c: tmp4:= OR_DSZ32(0x00000000, tmp4) 
U535d: tmp4:= SETCC_CONDNZ(tmp4) 
U535e: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U2f5a) 

U5360: tmp13:= ZEROEXT_DSZ64(tmp12) 
U5361: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U5369
U5362: tmp4:= CONCAT_DSZ32(tmp4, tmp6) 

U5364: tmp3:= READURAM( , 0x0011, 64) 
U5365: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004e8, mode=0x01, tmp3) 
U5366: tmp3:= AND_DSZ64(tmp3, tmp4) 

U5368: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U44e9) 
U5369: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001bc, tmp12) 
U536a: tmp7:= CONCAT_DSZ32(tmp7, tmp7) 

U536c: tmp3:= MOVEFROMCREG_DSZ64( , 0x402) 
U536d: tmp3:= AND_DSZ32(0x000003b0, tmp3) 
U536e: tmp3:= SHR_DSZ32(tmp3, 0x00000004) 

U5370: tmp7:= MOVEINSERTFLGS_DSZ64(tmp3, tmp7) 
U5371: tmp3:= READURAM( , 0x0077, 64) 
U5372: tmp14:= SHR_DSZ64(tmp3, 0x00000010) 

U5374: tmp14:= AND_DSZ64(0x00000001, tmp14) 
U5375: tmp15:= SHR_DSZ64(tmp3, 0x0000002a) 
U5376: tmp15:= AND_DSZ64(0x00000010, tmp15) 

U5378: tmp15:= OR_DSZ32(tmp14, tmp15) 
U5379: tmp3:= SHR_DSZ64(tmp3, 0x0000002a) 
U537a: tmp3:= AND_DSZ64(0x00000002, tmp3) 

U537c: tmp3:= OR_DSZ32(tmp15, tmp3) 
U537d: tmp14:= READURAM( , 0x0035, 64) 
U537e: tmp15:= SHR_DSZ64(tmp14, 0x00000032) 

U5380: tmp15:= AND_DSZ64(0x00000020, tmp15) 
U5381: tmp14:= SHR_DSZ64(tmp14, 0x00000026) 
U5382: tmp14:= AND_DSZ64(0x00000008, tmp14) 

U5384: tmp14:= OR_DSZ32(tmp15, tmp14) 
U5385: tmp3:= OR_DSZ32(tmp3, tmp14) 
U5386: tmp6:= MOVEINSERTFLGS_DSZ64(tmp3, tmp6) 

U5388: tmp14:= AND_DSZ32(0xfe036dfb, tmp7) 
U5389: tmp14:= SUB_DSZ32(0x00036dfb, tmp14) 
U538a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U3380) 

U538c: tmp14:= AND_DSZ32(0xfffc11fb, tmp6) 
U538d: tmp14:= SUB_DSZ32(0x000011fb, tmp14) 
U538e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U3380) 

U5390: tmp15:= SELECTCC_DSZ32_CONDNS(tmp7, tmp6) 
U5391: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000010, U3380) !m1,m2 
U5392: tmp15:= SELECTCC_DSZ32_CONDNS(tmp7, tmp7) 

U5394: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000017, U3380) !m0,m1,m2 
U5395: tmp15:= SELECTCC_DSZ32_CONDNS(tmp6, tmp6) 
U5396: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000011, U3380) !m1,m2 

U5398: tmp15:= SELECTCC_DSZ32_CONDNS(tmp6, tmp7) 
U5399: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000018, U3380) !m1,m2 
U539a: tmp8:= AND_DSZ32(0x00000200, tmp7) 

U539c: tmp15:= unk_204(0x00000200) 
U539d: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, U3380, tmp8) !m1,m2 
U539e: tmp15:= XOR_DSZ32(tmp15, 0x00000200) 

U53a0: tmp14:= AND_DSZ32(tmp15, tmp6) 
U53a1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U3380) 
U53a2: tmp15:= AND_DSZ32(0x00000c00, tmp6) 

U53a4: tmp14:= SUB_DSZ32(0x00000c00, tmp15) 
U53a5: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp14, U3380) 
U53a6: tmp14:= SELECTCC_DSZ32_CONDB(tmp12, tmp15) 

U53a8: CMPUJNZ_DIRECT_NOTTAKEN(tmp14, 0x00000000, U3380) !m1,m2 
U53a9: tmp9:= ZEROEXT_DSZ32(0x000044e1) 
U53aa: WRITEURAM(tmp9, 0x002c, 32) !m2 

U53ac: MOVETOCREG_DSZ64(0x0000000a, 0x000) !m2 
U53ad: SYNCWAIT-> tmp14:= READURAM( , 0x0010, 64) 
U53ae: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U541d

U53b0: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000c0, tmp12) 
U53b1: SAVEUIP_REGOVR(0x01, U53b2, 0x0983) !m0 SEQW GOTO U60be
U53b2: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000b8, tmp12) 

U53b4: tmp1:= ZEROEXT_DSZ16( , tmp14) 
U53b5: tmp1:= AND_DSZ64(tmp1, tmp3) 
U53b6: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U44e1) 

U53b8: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000a0, tmp12) 
U53b9: tmp1:= NOTAND_DSZ32(tmp3, 0x80000021) 
U53ba: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U44e1) 

U53bc: tmp1:= SHR_DSZ64(tmp3, 0x00000020) 
U53bd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U44e1) 
U53be: tmp3:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001c2, tmp12) 

U53c0: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001aa, tmp12) 
U53c1: tmp3:= OR_DSZ32(tmp1, tmp3) 
U53c2: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001ca, tmp12) 

U53c4: tmp3:= OR_DSZ32(tmp1, tmp3) 
U53c5: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001d2, tmp12) 
U53c6: tmp3:= OR_DSZ32(tmp1, tmp3) 

U53c8: tmp2:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001b2, tmp12) 
U53c9: tmp3:= OR_DSZ32(tmp2, tmp3) 
U53ca: tmp2:= SUB_DSZ32(0x00000001, tmp2) 

U53cc: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001ba, tmp12) 
U53cd: tmp3:= OR_DSZ32(tmp1, tmp3) 
U53ce: tmp4:= SHR_DSZ32(tmp8, 0x00000009) 

U53d0: tmp1:= OR_DSZ16(tmp4, tmp1) 
U53d1: tmp1:= SUB_DSZ32(0x00000001, tmp1) 
U53d2: tmp2:= OR_DSZ32(tmp1, tmp2) 

U53d4: tmp1:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001e2, tmp12) 
U53d5: tmp3:= OR_DSZ32(tmp1, tmp3) 
U53d6: tmp1:= SUB_DSZ32(0x00000001, tmp1) 

U53d8: tmp2:= OR_DSZ32(tmp1, tmp2) 
U53d9: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp2, U44e1) 
U53da: tmp3:= AND_DSZ32(0x00000007, tmp3) 

U53dc: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U44e1) 
U53dd: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000d8, tmp12) 
U53de: tmp1:= SUB_DSZ32(0x00000001, tmp4) 

U53e0: tmp1:= CONCAT_DSZ32(tmp1) 
U53e1: tmp1:= AND_DSZ64(tmp3, tmp1) 
U53e2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U44e1) 

U53e4: unk_25c( , tmp3) 
U53e5: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000208, tmp12) 
U53e6: unk_25c( , tmp3) 

U53e8: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000210, tmp12) 
U53e9: unk_25c( , tmp3) 
U53ea: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000220, tmp12) 

U53ec: unk_25c( , tmp3) 
U53ed: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000228, tmp12) 
U53ee: unk_25c( , tmp3) 

U53f0: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000230, tmp12) 
U53f1: unk_25c( , tmp3) 
U53f2: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002f8, tmp12) 

U53f4: unk_25c( , tmp3) 
U53f5: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002f0, tmp12) 
U53f6: unk_25c( , tmp3) 

U53f8: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000350, tmp12) 
U53f9: tmp1:= READURAM( , 0x0041, 64) 
U53fa: tmp1:= SHR_DSZ64(tmp1, 0x00000017) 

U53fc: tmp1:= AND_DSZ32(tmp1, 0x00000800) 
U53fd: tmp1:= OR_DSZ64(0xfffffffffffff7fe, tmp1) 
U53fe: tmp3:= AND_DSZ64(tmp3, tmp1) 

U5400: tmp1:= SELECTCC_DSZ32_CONDZ(tmp8, 0x00000500) 
U5401: tmp15:= BT_DSZ64(tmp7, 0x00000015) 
U5402: tmp1:= MOVEMERGEFLGS_DSZ32(tmp1, tmp15) 

U5404: tmp3:= CMOVCC_DSZ64_CONDNB(tmp1, tmp3) 
U5405: CMPUJNZ_DIRECT_NOTTAKEN(tmp3, U44e1, tmp1) 
U5406: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000348, tmp12) 

U5408: tmp15:= BT_DSZ64(tmp7, 0x00000013) 
U5409: ROVR<- tmp3:= SELECTCC_DSZ64_CONDNB(tmp15, tmp3) SEQW SAVEUIP1 U540aSEQW GOTO U5945
U540a: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000358, tmp12) 

U540c: tmp15:= BT_DSZ64(tmp7, 0x0000000c) 
U540d: tmp3:= SELECTCC_DSZ64_CONDNB(tmp15, tmp3) 
U540e: tmp1:= ZEROEXT_DSZ32(0x00000007) 

U5410: tmp1:= CONCAT_DSZ32(tmp1, 0x0000000f) 
U5411: tmp1:= NOTAND_DSZ64(tmp1, tmp3) 
U5412: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U44e1) 

U5414: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000050, tmp12) 
U5415: CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U25a0) !m1 
U5416: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000054, tmp12) 

U5418: CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U25b4) !m1 
U5419: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U541d
U541a: tmp4:= MOVEFROMCREG_DSZ64( , 0x402) 

U541c: MOVETOCREG_BTR_DSZ64(tmp4, 0x00000003, 0x402) !m0,m2 
U541d: tmp4:= READURAM( , 0x0048, 64) 
U541e: CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U17ba) !m2 

U5420: LFNCEMARK-> TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U7139
U5421: tmp15:= AND_DSZ32(0x04066173, tmp0) 
U5422: tmp15:= SUB_DSZ32(0x04006172, tmp15) 

U5424: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 
U5425: tmp1:= SHR_DSZ64(tmp0, 0x00000020) 
U5426: tmp15:= AND_DSZ32(0xffc21000, tmp1) 

U5428: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 
U5429: tmp15:= SELECTCC_DSZ32_CONDNP(tmp7, tmp1) 
U542a: tmp15:= AND_DSZ32(0x00000300, tmp15) 

U542c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 
U542d: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp7, tmp1) 
U542e: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000e, U2891) !m0,m1 

U5430: tmp15:= READURAM( , 0x003a, 64) 
U5431: tmp15:= NOTAND_DSZ32(tmp15, 0x00080001) 
U5432: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, tmp1) 

U5434: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000015, U2891) !m1 
U5435: tmp15:= SELECTCC_DSZ32_CONDNP(tmp6, tmp1) 
U5436: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000f, U2891) !m0,m1 

U5438: tmp15:= SELECTCC_DSZ32_CONDNO(tmp7, tmp1) 
U5439: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000012, U2891) !m0,m1 
U543a: tmp15:= SELECTCC_DSZ32_CONDNS(tmp6, tmp1) 

U543c: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000013, U2891) !m0,m1 
U543d: tmp15:= SELECTCC_DSZ32_CONDNB(tmp7, tmp1) 
U543e: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000d, U2891) !m1 

U5440: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000368, tmp13) 
U5441: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000370, tmp13) 
U5442: tmp15:= BT_DSZ32(tmp1, 0x0000000d) 

U5444: tmp4:= SELECTCC_DSZ64_CONDNB(tmp15, tmp4) 
U5445: tmp8:= SHR_DSZ64(tmp4, 0x00000001) 
U5446: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U2891) 

U5448: tmp8:= AND_DSZ32(0x00000002, tmp1) 
U5449: tmp8:= SELECTCC_DSZ64_CONDNZ(tmp8, tmp4) 
U544a: BTUJB_DIRECT_NOTTAKEN(tmp8, 0x00000000, U2891) !m1 

U544c: tmp9:= SELECTCC_DSZ64_CONDNB(tmp15, tmp9) 
U544d: tmp10:= AND_DSZ64(0x00000001, tmp4) 
U544e: tmp9:= SELECTCC_DSZ64_CONDZ(tmp10, tmp9) 

U5450: tmp10:= AND_DSZ64(tmp14, tmp9) 
U5451: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U2891) 
U5452: tmp9:= OR_DSZ64(tmp4, tmp9) 

U5454: WRITEURAM(tmp9, 0x0054, 64) 
U5455: tmp15:= SELECTCC_DSZ32_CONDO(tmp6, tmp1) 
U5456: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000b, U2891) !m0,m1 

U5458: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000010, U2891) !m1 
U5459: tmp15:= AND_DSZ32(0x00000082, tmp1) 
U545a: tmp15:= SUB_DSZ32(0x00000080, tmp15) 

U545c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U2891) 
U545d: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000098, tmp13) 
U545e: tmp5:= AND_DSZ32(0x00000001, tmp1) 

U5460: TESTUSTATE( , VMX, 0x0004) !m2 ? SEQW GOTO U5462
U5461: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U2891) 
U5462: tmp2:= SELECTCC_DSZ64_CONDZ(tmp5, tmp2) 

U5464: tmp15:= AND_DSZ64(tmp14, tmp2) 
U5465: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 
U5466: LFNCEWAIT-> MOVETOCREG_OR_DSZ64(tmp2, 0x51e, tmp5) 

U5468: tmp8:= ZEROEXT_DSZ64(tmp11) 
U5469: TESTUSTATE( , VMX, 0x0010) !m2 ? SEQW GOTO U72da
U546a: tmp11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000e0, tmp13) 

U546c: tmp15:= AND_DSZ64(tmp14, tmp11) 
U546d: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 
U546e: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000258, tmp13) 

U5470: TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U5474
U5471: BTUJNB_DIRECT_NOTTAKEN(tmp8, 0x00000000, U2891) !m1 
U5472: tmp9:= ZEROEXT_DSZ32() 

U5474: tmp15:= SHR_DSZ32(tmp9, 0x00000004) 
U5475: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 
U5476: LFNCEWAIT-> tmp4:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp11, 0x00000080) 

U5478: tmp3:= TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U5480
U5479: NOP 
U547a: NOP 

U547c: tmp14:= SAVEUIP_REGOVR(0x01, U547d, 0x0000, 0x00000001) !m0 SEQW GOTO U5aa5
U547d: WRITEURAM(tmp2, 0x0085, 64) 
U547e: WRITEURAM(tmp11, 0x0086, 64) 

U5480: tmp4:= SHR_DSZ32(tmp4, 0x00000004) 
U5481: tmp4:= SUB_DSZ32(tmp4, tmp9) 
U5482: tmp4:= SETCC_CONDNLE(tmp4) 

U5484: tmp15:= NOTAND_DSZ32(tmp5, tmp4) 
U5485: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 
U5486: tmp4:= SHL_DSZ32(tmp4, 0x00000007) 

U5488: tmp4:= CONCAT_DSZ32(tmp3, tmp4) 
U5489: LFNCEMARK-> WRITEURAM(tmp4, 0x004a, 64) 
U548a: tmp15:= ZEROEXT_DSZ64(tmp11) 

U548c: tmp11:= ZEROEXT_DSZ32() 
U548d: tmp10:= ZEROEXT_DSZ64(tmp13) SEQW SAVEUIP1 U548eSEQW GOTO U68ed
U548e: tmp13:= ZEROEXT_DSZ64(tmp10) 

U5490: tmp15:= CMOVCC_DSZ64_CONDNZ(tmp3, tmp15) 
U5491: tmp2:= MOVEFROMCREG_DSZ64( , 0x57f) 
U5492: tmp2:= NOTAND_DSZ32(tmp2, 0x00000800) 

U5494: tmp2:= SHR_DSZ32(tmp2, 0x0000000a) 
U5495: tmp15:= OR_DSZ64(tmp2, tmp15) 
U5496: tmp2:= OR_DSZ32(0x00000001, tmp15) 

U5498: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 
U5499: tmp15:= CONCAT_DSZ16(0x00000203, tmp15) 
U549a: tmp15:= CONCAT_DSZ32(tmp15, tmp2) 

U549c: MOVETOCREG_DSZ64(tmp15, 0x513) SEQW GOTO U72dd
FUN_ucode_000549d:
U549d: tmp10:= SUB_DSZ32(0x00000120, tmp1) 
U549e: tmp10:= SELECTCC_DSZ32_CONDZ(tmp10, 0x00000002) 

U54a0: tmp10:= ADD_DSZ32(0x00000004, tmp10) 
U54a1: tmp12:= ADD_DSZ32(0x00000004, tmp1) 
U54a2: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp9, tmp12) !m2 

U54a4: tmp12:= ADD_DSZ32(0x00000001, tmp12) 
U54a5: tmp10:= SUB_DSZ32(0x00000001, tmp10) 
U54a6: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp10, U304e) SEQW GOTO U54a2

U54a8: tmp1:= NOTAND_DSZ64(tmp5, tmp1) 
U54a9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U60d2) SEQW SAVEUIP1 U54aaSEQW GOTO U02ba
U54aa: tmp1:= BTS_DSZ32(0x00000000, 0x0000001f) 

U54ac: PORTOUT_DSZ32_ASZ16_SC1(0x003c,  , tmp1) !m2 SEQW GOTO U56f8
U54ad: rax:= ZEROEXT_DSZ32(0x80000001) 
U54ae: tmp0:= CONCAT_DSZ32(0x0000357a) 

U54b0: MOVETOCREG_DSZ64(tmp0, 0x2c0, 32) !m1 
U54b1: tmp0:= PORTIN_DSZ64_ASZ16_SC1(0x4648) !m2 
U54b2: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U660e) !m1 

U54b4: tmp2:= SAVEUIP( , 0x01, U3ab9) !m0 
U54b5: SYNCFULL-> tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1,m2 
U54b6: tmp2:= OR_DSZ32(tmp0, tmp2) 

U54b8: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000005, U1cbe) !m2 SEQW GOTO U54b5
U54b9: tmp0:= MOVEFROMCREG_DSZ64( , 0x701) 
U54ba: tmp0:= BT_DSZ64(tmp0, 0x0000000d) 

U54bc: MOVETOCREG_DSZ64( , 0x00000000, 0x065) 
U54bd: tmp3:= NOTAND_DSZ64(0x0000000f, tmp2) 
U54be: tmp3:= ADD_DSZN(0x00000010, tmp3) !m1 

U54c0: tmp3:= MOVEMERGEFLGS_DSZ64(tmp3, tmp0) 
U54c1: tmp1:= CMOVCC_DSZ64_CONDB(tmp3, tmp2) 
U54c2: tmp3:= SUB_DSZN(tmp4, tmp1) !m1 

U54c4: LFNCEMARK-> unk_257( , tmp3) !m1 SEQW URET0
U54c5: tmp14:= ZEROEXT_DSZ32(0x00003a99) SEQW GOTO U0434
U54c6: tmp13:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004b8, mode=0x01, tmp12) 

U54c8: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001b4, mode=0x01, tmp13) 
U54c9: tmp4:= BTS_DSZ32(tmp4, 0x0000001f) 
U54ca: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000002cc, mode=0x01, tmp13) 

U54cc: tmp10:= SELECTCC_DSZ32_CONDNB(tmp4, tmp10) 
U54cd: tmp10:= BTC_DSZ32(tmp10, 0x00000003) 
U54ce: tmp11:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001ac, mode=0x01, tmp13) 

U54d0: tmp15:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x000001bc, mode=0x01, tmp13) 
U54d1: tmp15:= AND_DSZ32(0x00008000, tmp15) 
U54d2: tmp15:= SHL_DSZ32(tmp15, 0x00000010) 

U54d4: tmp11:= SHL_DSZ32(tmp11, 0x00000017) 
U54d5: tmp15:= OR_DSZ32(tmp11, tmp15) 
U54d6: tmp15:= OR_DSZ32(tmp10, tmp15) 

U54d8: tmp15:= CONCAT_DSZ32(tmp15, tmp4) 
U54d9: WRITEURAM(tmp15, 0x0043, 64) 
U54da: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000368, mode=0x01, tmp13) 

U54dc: tmp11:= AND_DSZ32(0x00002000, tmp10) 
U54dd: tmp4:= SELECTCC_DSZ64_CONDZ(tmp11, tmp4) 
U54de: tmp11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000370, mode=0x01, tmp13) 

U54e0: ROVR<- tmp11:= OR_DSZ64(tmp4, tmp11) SEQW SAVEUIP1 U54e1SEQW GOTO U5731
U54e1: WRITEURAM(tmp11, 0x0054, 64) 
U54e2: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001c4, mode=0x01, tmp13) 

U54e4: tmp4:= CONCAT_DSZ32(tmp4) 
U54e5: SAVEUIP_REGOVR( , 0x01, U54e6, 0xb4d1) !m0 SEQW GOTO U5dd9
U54e6: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000025c, mode=0x01, tmp13) 

U54e8: tmp4:= SHL_DSZ64(tmp4, 0x0000002a) 
U54e9: WRITEURAM(tmp4, 0x0014, 64) 
U54ea: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000018, mode=0x01, tmp13) 

U54ec: WRITEURAM(tmp4, 0x0015, 64) 
U54ed: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000020, mode=0x01, tmp13) 
U54ee: WRITEURAM(tmp4, 0x0016, 64) 

U54f0: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002c0, mode=0x01, tmp13) 
U54f1: SYNCFULL-> WRITEURAM(tmp4, 0x004d, 64) SEQW GOTO U1520
U54f2: tmp1:= ZEROEXT_DSZ32(0xffffffffffffffff) 

U54f4: CMPUJZ_DIRECT_NOTTAKEN(rax, U2f51, tmp1) !m1 
U54f5: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000be40) !m2 
U54f6: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U4a70) 

U54f8: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000001, U4a90) 
U54f9: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000002, U54fa) !m0,m2 SEQW GOTO U2769
U54fa: MOVETOCREG_DSZ64( , 0x00000000, 0x20f, 32) !m1,m2 

U54fc: tmp4:= PORTIN_DSZ32_ASZ16_SC1(0x50c8) !m2 
U54fd: tmp1:= READURAM( , 0x0020, 64) 
U54fe: tmp1:= AND_DSZ32(0x00007ffe, tmp1) 

U5500: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 
U5501: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp4, U57e1, tmp1) !m2 
U5502: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000be00) !m2 

U5504: LFNCEWTMRK-> tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000004) 
U5505: tmp5:= MOVEFROMCREG_DSZ64( , tmp4) !m1 
U5506: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000010) 

U5508: tmp6:= ADD_DSZ64(tmp5, tmp6) 
U5509: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000010,  , tmp6) 
U550a: tmp6:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x0000001a) 

U550c: tmp6:= ADD_DSZ16(0x00000001, tmp6) 
U550d: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x0000001a,  , tmp6) 
U550e: tmp6:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp2, 0x0000001f) 

U5510: tmp2:= ADD_DSZ32(0x00000020, tmp2) 
U5511: LFNCEMARK-> tmp6:= AND_DSZ32(0x000000c0, tmp6) 
U5512: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U5514) SEQW GOTO U5504

U5514: tmp7:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000be80) !m2 
U5515: tmp6:= AND_DSZ32(0x00000080, tmp6) 
U5516: tmp2:= MOVEMERGEFLGS_DSZ64(tmp2, tmp6) 

U5518: tmp2:= CMOVCC_DSZ32_CONDZ(tmp2, tmp7) 
U5519: LFNCEWAIT-> STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be00,  , tmp2) !m2 
U551a: tmp1:= ZEROEXT_DSZ32(0x00000001) 

U551c: LFNCEMARK-> STADSTGBUF_DSZ64_ASZ16_SC1(0x0000be40,  , tmp1) !m2 
U551d: NOP SEQW GOTO U21fe
U551e: tmp15:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000390, tmp12) 

U5520: tmp6:= READURAM( , 0x0010, 64) 
U5521: tmp6:= NOTAND_DSZ64(0x00000fc0, tmp6) 
U5522: tmp15:= NOTAND_DSZ64(tmp6, tmp15) 

U5524: tmp11:= ZEROEXT_DSZ32() 
U5525: tmp4:= MOVEFROMCREG_DSZ64( , 0x105) 
U5526: tmp4:= BT_DSZ32(tmp4, 0x00000002) 

U5528: tmp12:= MOVEMERGEFLGS_DSZ64(tmp12, tmp4) SEQW SAVEUIP1 U5529SEQW GOTO U68ed
U5529: tmp5:= CMOVCC_DSZ64_CONDNZ(tmp3, tmp15) 
U552a: tmp6:= LDPPHYS_DSZ8_ASZ64_SC1(0x00000020, mode=0x01, tmp5) !m2 

U552c: tmp6:= BTR_DSZ32(tmp6, 0x00000000) 
U552d: STADPPHYS_DSZ8_ASZ64_SC1(0x00000020, mode=0x01, tmp5, tmp6) !m2 
U552e: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x28b, 32) !m1,m2 SEQW SAVEUIP0 U5530SEQW GOTO U0129

U5530: tmp6:= ZEROEXT_DSZ64(tmp12) 
U5531: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U5532: tmp9:= ZEROEXT_DSZ32(0x00000200) 

U5534: tmp8:= ZEROEXT_DSZ32() 
U5535: tmp0:= ZEROEXT_DSZ32() 
U5536: tmp7:= LDPPHYS_DSZ32_ASZ64_SC1(tmp8, mode=0x01, tmp5) !m2 

U5538: STADPPHYS_DSZ32_ASZ64_SC1(tmp8, mode=0x01, tmp5, 0x00000000) !m2 
U5539: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9, tmp4) 
U553a: tmp10:= OR_DSZ32(tmp7, tmp10) 

U553c: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp9, tmp4, tmp10) 
U553d: tmp1:= unk_21f(tmp7) 
U553e: tmp1:= unk_1d6(tmp1) 

U5540: tmp1:= SHL_DSZ32(tmp1, 0x00000003) 
U5541: tmp7:= SHR_DSZ32(tmp7, tmp1) 
U5542: tmp7:= unk_1d6(tmp7) 

U5544: tmp1:= OR_DSZ32(tmp7, tmp1) 
U5545: tmp2:= SHL_DSZ32(tmp8, 0x00000003) 
U5546: tmp2:= OR_DSZ32(tmp1, tmp2) 

U5548: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp7) 
U5549: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp2, tmp0) 
U554a: tmp8:= ADD_DSZ32(0x00000004, tmp8) 

U554c: tmp9:= ADD_DSZ32(0x00000010, tmp9) 
U554d: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U5536
U554e: tmp12:= ZEROEXT_DSZ64(tmp6) 

U5550: tmp14:= SAVEUIP(0x01, U3478) !m0 SEQW GOTO U60ee
U5551: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U58b1) 
U5552: tmp1:= CONCAT_DSZ8(0x00000004, tmp2) 

U5554: SAVEUIP_REGOVR( , 0x01, U5555, 0xdca9) !m0 SEQW GOTO U371a
U5555: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U5556: tmp10:= READAFLAGS( , tmp10) !m2 

U5558: MOVETOCREG_DSZ64(0x00000009, 0x000) 
U5559: tmp9:= MOVE_DSZ32(tmp10) 
U555a: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 

U555c: tmp5:= ZEROEXT_DSZ32(0x00000021) SEQW GOTO U017e
U555d: tmp14:= READUIP_REGOVR(0x01) !m0 
U555e: LFNCEWTMRK-> tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 

U5560: tmp8:= UFLOWCTRL(tmp8, tmp5, LDAT_IN) 
U5561: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U5565
U5562: STADSTGBUF_DSZ64_ASZ16_SC1(tmp3,  , tmp5) 

U5564: tmp3:= ADD_DSZ32(0x00000020, tmp3) 
U5565: tmp4:= ADD_DSZ64(0x00000008, tmp4) 
U5566: SYNCWAIT-> tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U555e

U5568: MOVETOCREG_DSZ64( , 0x00000000, 0x6a1) !m2 SEQW URET1
U5569: SYNCFULL-> MOVETOCREG_DSZ64(tmp10, tmp8) SEQW GOTO U2162
calc_fast_sha256_start:
U556a: tmp15:= ZEROEXT_DSZ32(0x00000300) 

U556c: SIMDLSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15,  , xmm0) 
U556d: SIMDHSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15, 0x00000020,  , xmm0) 
U556e: SIMDLSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15, 0x00000040,  , xmm1) 

U5570: SIMDHSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15, 0x00000060,  , xmm1) 
U5571: tmp15:= ZEROEXT_DSZ32(0x00000380) 
U5572: SIMDLSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15,  , xmm2) 

U5574: SIMDHSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15, 0x00000020,  , xmm2) 
U5575: SIMDLSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15, 0x00000040,  , xmm2) 
U5576: SIMDHSTADSTGBUF_DSZ64_ASZ32_SC1(tmp15, 0x00000060,  , xmm2) 

U5578: tmp12:= ZEROEXT_DSZ32() 
U5579: tmp15:= ZEROEXT_DSZ32(0x6a09e667) 
U557a: tmp15:= CONCAT_DSZ32(0xbb67ae85, tmp15) 

U557c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7,  , tmp15) 
U557d: tmp15:= ZEROEXT_DSZ32(0x3c6ef372) 
U557e: tmp15:= CONCAT_DSZ32(0xa54ff53a, tmp15) 

U5580: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000008,  , tmp15) 
U5581: tmp15:= ZEROEXT_DSZ32(0x510e527f) 
U5582: tmp15:= CONCAT_DSZ32(0x9b05688c, tmp15) 

U5584: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000010,  , tmp15) 
U5585: tmp15:= ZEROEXT_DSZ32(0x1f83d9ab) 
U5586: tmp15:= CONCAT_DSZ32(0x5be0cd19, tmp15) 

U5588: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000018,  , tmp15) 
U5589: tmp4:= ZEROEXT_DSZ32(0x04050607) 
U558a: tmp4:= CONCAT_DSZ32(tmp4, 0x00010203) 

U558c: xmm2:= unk_747(mm4) 
U558d: tmp4:= ZEROEXT_DSZ32(0x0c0d0e0f) 
U558e: tmp4:= CONCAT_DSZ32(tmp4, 0x08090a0b) 

U5590: tmm0:= unk_747(mm4) 
U5591: xmm2:= unk_5ba(tmm0, xmm2) 
U5592: tmp14:= unk_ec6(tmp7) 

U5594: tmp15:= unk_ec6(tmp7) 
U5595: tmp14:= unk_52b(tmp14) 
U5596: tmp15:= unk_52b(tmp15) 

U5598: tmm5:= unk_5b9(tmm6) 
U5599: tmm6:= unk_4d7(tmm7, tmm6) 
U559a: tmm7:= unk_4ee(tmm5, tmm7) 

U559c: tmp12:= ADD_DSZ32(tmp6, tmp12) 
U559d: LFNCEWAIT-> tmp4:= READURAM( , 0x004e, 64) 
U559e: xmm0:= unk_5b9(tmm6) 

U55a0: xmm1:= unk_5b9(tmm7) 
U55a1: tmp2:= OR_DSZ32(0x00000000) 
U55a2: tmp8:= unk_ec6(tmp5, tmp2) 

U55a4: tmm1:= unk_6d8(xmm2, tmm0) 
U55a5: tmp8:= unk_ed6(tmp4, tmp2) 
U55a6: tmm0:= unk_4ce(tmm1, tmm0) 

U55a8: xmm3:= unk_5b9(tmm6, tmm0) 
U55a9: xmm3:= unk_5d2(xmm3, tmm7) 
U55aa: tmm7:= unk_5e6(tmm0, xmm3) 

U55ac: tmp8:= unk_52b(tmp8) 
U55ad: xmm3:= unk_5b9(tmm7, tmm0) 
U55ae: xmm3:= unk_5d2(xmm3, tmm6) 

U55b0: tmm6:= unk_5e6(tmm0, xmm3) 
U55b1: tmp2:= OR_DSZ32(0x00000010) 
U55b2: tmp8:= unk_ec6(tmp5, tmp2) 

U55b4: tmm2:= unk_6d8(xmm2, tmm0) 
U55b5: tmp8:= unk_ed6(tmp4, tmp2) 
U55b6: tmm0:= unk_4ce(tmm2, tmm0) 

U55b8: xmm3:= unk_5b9(tmm6, tmm0) 
U55b9: xmm3:= unk_5d2(xmm3, tmm7) 
U55ba: tmm7:= unk_5e6(tmm0, xmm3) 

U55bc: tmp8:= unk_52b(tmp8) 
U55bd: xmm3:= unk_5b9(tmm7, tmm0) 
U55be: xmm3:= unk_5d2(xmm3, tmm6) 

U55c0: tmm6:= unk_5e6(tmm0, xmm3) 
U55c1: tmm1:= unk_6e8(tmm2, tmm1) 
U55c2: tmp2:= OR_DSZ32(0x00000020) 

U55c4: tmp8:= unk_ec6(tmp5, tmp2) 
U55c5: tmm3:= unk_6d8(xmm2, tmm0) 
U55c6: tmp8:= unk_ed6(tmp4, tmp2) 

U55c8: tmm0:= unk_4ce(tmm3, tmm0) 
U55c9: xmm3:= unk_5b9(tmm6, tmm0) 
U55ca: xmm3:= unk_5d2(xmm3, tmm7) 

U55cc: tmm7:= unk_5e6(tmm0, xmm3) 
U55cd: tmp8:= unk_52b(tmp8) 
U55ce: xmm3:= unk_5b9(tmm7, tmm0) 

U55d0: xmm3:= unk_5d2(xmm3, tmm6) 
U55d1: tmm6:= unk_5e6(tmm0, xmm3) 
U55d2: tmm2:= unk_6e8(tmm3, tmm2) 

U55d4: tmp2:= OR_DSZ32(0x00000030) 
U55d5: tmp8:= unk_ec6(tmp5, tmp2) 
U55d6: tmm4:= unk_6d8(xmm2, tmm0) 

U55d8: tmp8:= unk_ed6(tmp4, tmp2) 
U55d9: tmm0:= unk_4ce(tmm4, tmm0) 
U55da: xmm3:= unk_5b9(tmm6, tmm0) 

U55dc: xmm3:= unk_5d2(xmm3, tmm7) 
U55dd: tmm7:= unk_5e6(tmm0, xmm3) 
U55de: tmm5:= unk_4d7(tmm3, tmm4) 

U55e0: tmm1:= unk_4ce(tmm5, tmm1) 
U55e1: tmm1:= unk_6e9(tmm4, tmm1) 
U55e2: tmp8:= unk_52b(tmp8) 

U55e4: xmm3:= unk_5b9(tmm7, tmm0) 
U55e5: xmm3:= unk_5d2(xmm3, tmm6) 
U55e6: tmm6:= unk_5e6(tmm0, xmm3) 

U55e8: tmm3:= unk_6e8(tmm4, tmm3) 
U55e9: tmp2:= OR_DSZ32(0x00000040) 
U55ea: tmp8:= unk_ed6(tmp4, tmp2) 

U55ec: tmm0:= unk_4ce(tmm1, tmm0) 
U55ed: xmm3:= unk_5b9(tmm6, tmm0) 
U55ee: xmm3:= unk_5d2(xmm3, tmm7) 

U55f0: tmm7:= unk_5e6(tmm0, xmm3) 
U55f1: tmm5:= unk_4d7(tmm4, tmm1) 
U55f2: tmm2:= unk_4ce(tmm5, tmm2) 

U55f4: tmm2:= unk_6e9(tmm1, tmm2) 
U55f5: tmp8:= unk_52b(tmp8) 
U55f6: xmm3:= unk_5b9(tmm7, tmm0) 

U55f8: xmm3:= unk_5d2(xmm3, tmm6) 
U55f9: tmm6:= unk_5e6(tmm0, xmm3) 
U55fa: tmm4:= unk_6e8(tmm1, tmm4) 

U55fc: tmp2:= OR_DSZ32(0x00000050) 
U55fd: tmp8:= unk_ed6(tmp4, tmp2) 
U55fe: tmm0:= unk_4ce(tmm2, tmm0) 

U5600: xmm3:= unk_5b9(tmm6, tmm0) 
U5601: xmm3:= unk_5d2(xmm3, tmm7) 
U5602: tmm7:= unk_5e6(tmm0, xmm3) 

U5604: tmm5:= unk_4d7(tmm1, tmm2) 
U5605: tmm3:= unk_4ce(tmm5, tmm3) 
U5606: tmm3:= unk_6e9(tmm2, tmm3) 

U5608: tmp8:= unk_52b(tmp8) 
U5609: xmm3:= unk_5b9(tmm7, tmm0) 
U560a: xmm3:= unk_5d2(xmm3, tmm6) 

U560c: tmm6:= unk_5e6(tmm0, xmm3) 
U560d: tmm1:= unk_6e8(tmm2, tmm1) 
U560e: tmp2:= OR_DSZ32(0x00000060) 

U5610: tmp8:= unk_ed6(tmp4, tmp2) 
U5611: tmm0:= unk_4ce(tmm3, tmm0) 
U5612: xmm3:= unk_5b9(tmm6, tmm0) 

U5614: xmm3:= unk_5d2(xmm3, tmm7) 
U5615: tmm7:= unk_5e6(tmm0, xmm3) 
U5616: tmm5:= unk_4d7(tmm2, tmm3) 

U5618: tmm4:= unk_4ce(tmm5, tmm4) 
U5619: tmm4:= unk_6e9(tmm3, tmm4) 
U561a: tmp8:= unk_52b(tmp8) 

U561c: xmm3:= unk_5b9(tmm7, tmm0) 
U561d: xmm3:= unk_5d2(xmm3, tmm6) 
U561e: tmm6:= unk_5e6(tmm0, xmm3) 

U5620: tmm2:= unk_6e8(tmm3, tmm2) 
U5621: tmp2:= OR_DSZ32(0x00000070) 
U5622: tmp8:= unk_ed6(tmp4, tmp2) 

U5624: tmm0:= unk_4ce(tmm4, tmm0) 
U5625: xmm3:= unk_5b9(tmm6, tmm0) 
U5626: xmm3:= unk_5d2(xmm3, tmm7) 

U5628: tmm7:= unk_5e6(tmm0, xmm3) 
U5629: tmm5:= unk_4d7(tmm3, tmm4) 
U562a: tmm1:= unk_4ce(tmm5, tmm1) 

U562c: tmm1:= unk_6e9(tmm4, tmm1) 
U562d: tmp8:= unk_52b(tmp8) 
U562e: xmm3:= unk_5b9(tmm7, tmm0) 

U5630: xmm3:= unk_5d2(xmm3, tmm6) 
U5631: tmm6:= unk_5e6(tmm0, xmm3) 
U5632: tmm3:= unk_6e8(tmm4, tmm3) 

U5634: tmp2:= OR_DSZ32(0x00000080) 
U5635: tmp8:= unk_ed6(tmp4, tmp2) 
U5636: tmm0:= unk_4ce(tmm1, tmm0) 

U5638: xmm3:= unk_5b9(tmm6, tmm0) 
U5639: xmm3:= unk_5d2(xmm3, tmm7) 
U563a: tmm7:= unk_5e6(tmm0, xmm3) 

U563c: tmm5:= unk_4d7(tmm4, tmm1) 
U563d: tmm2:= unk_4ce(tmm5, tmm2) 
U563e: tmm2:= unk_6e9(tmm1, tmm2) 

U5640: tmp8:= unk_52b(tmp8) 
U5641: xmm3:= unk_5b9(tmm7, tmm0) 
U5642: xmm3:= unk_5d2(xmm3, tmm6) 

U5644: tmm6:= unk_5e6(tmm0, xmm3) 
U5645: tmm4:= unk_6e8(tmm1, tmm4) 
U5646: tmp2:= OR_DSZ32(0x00000090) 

U5648: tmp8:= unk_ed6(tmp4, tmp2) 
U5649: tmm0:= unk_4ce(tmm2, tmm0) 
U564a: xmm3:= unk_5b9(tmm6, tmm0) 

U564c: xmm3:= unk_5d2(xmm3, tmm7) 
U564d: tmm7:= unk_5e6(tmm0, xmm3) 
U564e: tmm5:= unk_4d7(tmm1, tmm2) 

U5650: tmm3:= unk_4ce(tmm5, tmm3) 
U5651: tmm3:= unk_6e9(tmm2, tmm3) 
U5652: tmp8:= unk_52b(tmp8) 

U5654: xmm3:= unk_5b9(tmm7, tmm0) 
U5655: xmm3:= unk_5d2(xmm3, tmm6) 
U5656: tmm6:= unk_5e6(tmm0, xmm3) 

U5658: tmm1:= unk_6e8(tmm2, tmm1) 
U5659: tmp2:= OR_DSZ32(0x000000a0) 
U565a: tmp8:= unk_ed6(tmp4, tmp2) 

U565c: tmm0:= unk_4ce(tmm3, tmm0) 
U565d: xmm3:= unk_5b9(tmm6, tmm0) 
U565e: xmm3:= unk_5d2(xmm3, tmm7) 

U5660: tmm7:= unk_5e6(tmm0, xmm3) 
U5661: tmm5:= unk_4d7(tmm2, tmm3) 
U5662: tmm4:= unk_4ce(tmm5, tmm4) 

U5664: tmm4:= unk_6e9(tmm3, tmm4) 
U5665: tmp8:= unk_52b(tmp8) 
U5666: xmm3:= unk_5b9(tmm7, tmm0) 

U5668: xmm3:= unk_5d2(xmm3, tmm6) 
U5669: tmm6:= unk_5e6(tmm0, xmm3) 
U566a: tmm2:= unk_6e8(tmm3, tmm2) 

U566c: tmp2:= OR_DSZ32(0x000000b0) 
U566d: tmp8:= unk_ed6(tmp4, tmp2) 
U566e: tmm0:= unk_4ce(tmm4, tmm0) 

U5670: xmm3:= unk_5b9(tmm6, tmm0) 
U5671: xmm3:= unk_5d2(xmm3, tmm7) 
U5672: tmm7:= unk_5e6(tmm0, xmm3) 

U5674: tmm5:= unk_4d7(tmm3, tmm4) 
U5675: tmm1:= unk_4ce(tmm5, tmm1) 
U5676: tmm1:= unk_6e9(tmm4, tmm1) 

U5678: tmp8:= unk_52b(tmp8) 
U5679: xmm3:= unk_5b9(tmm7, tmm0) 
U567a: xmm3:= unk_5d2(xmm3, tmm6) 

U567c: tmm6:= unk_5e6(tmm0, xmm3) 
U567d: tmm3:= unk_6e8(tmm4, tmm3) 
U567e: tmp2:= OR_DSZ32(0x000000c0) 

U5680: tmp8:= unk_ed6(tmp4, tmp2) 
U5681: tmm0:= unk_4ce(tmm1, tmm0) 
U5682: xmm3:= unk_5b9(tmm6, tmm0) 

U5684: xmm3:= unk_5d2(xmm3, tmm7) 
U5685: tmm7:= unk_5e6(tmm0, xmm3) 
U5686: tmm5:= unk_4d7(tmm4, tmm1) 

U5688: tmm2:= unk_4ce(tmm5, tmm2) 
U5689: tmm2:= unk_6e9(tmm1, tmm2) 
U568a: tmp8:= unk_52b(tmp8) 

U568c: xmm3:= unk_5b9(tmm7, tmm0) 
U568d: xmm3:= unk_5d2(xmm3, tmm6) 
U568e: tmm6:= unk_5e6(tmm0, xmm3) 

U5690: tmm4:= unk_6e8(tmm1, tmm4) 
U5691: tmp2:= OR_DSZ32(0x000000d0) 
U5692: tmp8:= unk_ed6(tmp4, tmp2) 

U5694: tmm0:= unk_4ce(tmm2, tmm0) 
U5695: xmm3:= unk_5b9(tmm6, tmm0) 
U5696: xmm3:= unk_5d2(xmm3, tmm7) 

U5698: tmm7:= unk_5e6(tmm0, xmm3) 
U5699: tmm5:= unk_4d7(tmm1, tmm2) 
U569a: tmm3:= unk_4ce(tmm5, tmm3) 

U569c: tmm3:= unk_6e9(tmm2, tmm3) 
U569d: tmp8:= unk_52b(tmp8) 
U569e: xmm3:= unk_5b9(tmm7, tmm0) 

U56a0: xmm3:= unk_5d2(xmm3, tmm6) 
U56a1: tmm6:= unk_5e6(tmm0, xmm3) 
U56a2: tmp2:= OR_DSZ32(0x000000e0) 

U56a4: tmp8:= unk_ed6(tmp4, tmp2) 
U56a5: tmm0:= unk_4ce(tmm3, tmm0) 
U56a6: xmm3:= unk_5b9(tmm6, tmm0) 

U56a8: xmm3:= unk_5d2(xmm3, tmm7) 
U56a9: tmm7:= unk_5e6(tmm0, xmm3) 
U56aa: tmm5:= unk_4d7(tmm2, tmm3) 

U56ac: tmm4:= unk_4ce(tmm5, tmm4) 
U56ad: tmm4:= unk_6e9(tmm3, tmm4) 
U56ae: tmp8:= unk_52b(tmp8) 

U56b0: xmm3:= unk_5b9(tmm7, tmm0) 
U56b1: xmm3:= unk_5d2(xmm3, tmm6) 
U56b2: tmm6:= unk_5e6(tmm0, xmm3) 

U56b4: tmp2:= OR_DSZ32(0x000000f0) 
U56b5: tmp8:= unk_ed6(tmp4, tmp2) 
U56b6: tmm0:= unk_4ce(tmm4, tmm0) 

U56b8: xmm3:= unk_5b9(tmm6, tmm0) 
U56b9: xmm3:= unk_5d2(xmm3, tmm7) 
U56ba: tmm7:= unk_5e6(tmm0, xmm3) 

U56bc: tmp8:= unk_52b(tmp8) 
U56bd: xmm3:= unk_5b9(tmm7, tmm0) 
U56be: xmm3:= unk_5d2(xmm3, tmm6) 

U56c0: tmm6:= unk_5e6(tmm0, xmm3) 
U56c1: tmm6:= unk_4ce(xmm0, tmm6) 
U56c2: tmm7:= unk_4ce(xmm1, tmm7) 

U56c4: tmp5:= ADD_DSZ64(0x00000040, tmp5) 
U56c5: tmp6:= SUB_DSZ32(0x00000001, tmp6) 
U56c6: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp6, U56c8) SEQW GOTO U559e

U56c8: tmp11:= READURAM( , 0x0047, 64) 
U56c9: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp6, U66b6) 
U56ca: tmp15:= SHR_DSZ32(tmp11, 0x00000010) 

U56cc: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U61d2) 
U56cd: tmp5:= ADD_DSZ32(0x00000020, tmp7) 
U56ce: tmp15:= BTS_DSZ64(0x00000000, 0x00000007) 

U56d0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000020,  , tmp15) 
U56d1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000028,  , 0x00000000) 
U56d2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000030,  , 0x00000000) 

U56d4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000038,  , 0x00000000) 
U56d5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000040,  , 0x00000000) 
U56d6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000048,  , 0x00000000) 

U56d8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000050,  , 0x00000000) 
U56d9: tmp15:= SHL_DSZ64(tmp12, 0x00000009) 
U56da: tmp15:= BSWAP_DSZ32(tmp15) 

U56dc: tmp15:= CONCAT_DSZ32(tmp15) 
U56dd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000058,  , tmp15) SEQW GOTO U559e
U56de: tmp0:= OR_DSZ16(0x00008080, tmp8) 

U56e0: MOVETOCREG_DSZ64(tmp0, 0x48c) SEQW GOTO U21fe
U56e1: CMPUJZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U082e) 
U56e2: tmp9:= SHL_DSZ64(tmp4, 0x0000001d) 

U56e4: tmp4:= ZEROEXT_DSZ32(0x00000002) 
U56e5: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000003, U5785) !m0,m2 
U56e6: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U1c19) !m2 

U56e8: tmp5:= TEST_DSZ64( , tmp15) 
U56e9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp5, U082e) 
U56ea: tmp5:= NOTAND_DSZ64(0x00000fff, tmp15) 

U56ec: SAVEUIP( , 0x00, U27ac) SEQW GOTO U1c1a
U56ed: tmp1:= ZEROEXT_DSZ32(0x00000000) 
U56ee: tmp2:= ZEROEXT_DSZ32(0x00000020) 

U56f0: tmp10:= ZEROEXT_DSZ32(0x0000334e) 
U56f1: SYNCWAIT-> SAVEUIP_REGOVR(0x01, U56f2, 0x0003) !m0 SEQW GOTO U02ba
U56f2: tmp3:= PORTIN_DSZ32_ASZ16_SC1(0x0000, tmp2) !m1,m2 

U56f4: tmp3:= BT_DSZN(tmp3, tmp1) !m1 
U56f5: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp3, tmp10) 
U56f6: PORTOUT_DSZ32_ASZ16_SC1(0x0000, tmp2, tmp5) !m1,m2 

U56f8: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 SEQW GOTO U60d2
U56f9: WRITEURAM(tmp11, 0x006b, 64) !m2 
U56fa: tmp1:= CONCAT_DSZ8(tmp8, tmp5) 

U56fc: tmp1:= CONCAT_DSZ16(tmp7, tmp1) 
U56fd: tmp1:= CONCAT_DSZ32(tmp11, tmp1) 
U56fe: WRITEURAM(tmp1, 0x002c, 64) !m2 

U5700: tmp0:= MOVE_DSZ32(0x00005b15) 
U5701: WRITEURAM(tmp3, 0x006c, 64) !m2 
U5702: tmp0:= CONCAT_DSZ16(0x000000db, tmp0) 

U5704: WRITEURAM(tmp13, 0x0005, 32) !m2 SEQW GOTO U242e
FUN_ucode_0005705:
U5705: tmp14:= READUIP_REGOVR(0x01) !m0 
U5706: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x00000050) 

U5708: tmp9:= BTR_DSZ64(tmp9, 0x0000001a) 
U5709: tmp6:= BT_DSZ32(tmp9, 0x0000001b) 
FUN_ucode_000570a:
U570a: tmp14:= READUIP_REGOVR(0x01) !m0 

U570c: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4) 
U570d: tmp15:= SELECTCC_DSZ64_CONDB(tmp6, tmp7) 
U570e: unk_25c( , tmp15) 

U5710: tmp15:= SHR_DSZ64(tmp15, 0x00000020) SEQW URET1
U5711: tmp14:= ZEROEXT_DSZ32(0x00002576) SEQW GOTO U0434
U5712: tmp5:= MOVE_DSZ32() 

U5714: tmp9:= ZEROEXT_DSZ32(tmp10) SEQW GOTO U017e
U5715: tmp3:= BTR_DSZ64(tmp3, 0x0000000b) 
U5716: tmp15:= SELECTCC_DSZ32_CONDNB(tmp3, 0x08000000) 

U5718: tmp15:= CONCAT_DSZ32(tmp15) 
U5719: tmp2:= OR_DSZ64(tmp15, tmp2) 
U571a: LFNCEWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xffffffffffffffe8, mode=0x01,  , tmp2) 

U571c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xffffffffffffffe0, mode=0x01,  , tmp9) 
U571d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0xffffffffffffffd8, mode=0x01,  , tmp3) 
U571e: tmp0:= ZEROEXT_DSZ32(0x00000701) 

U5720: tmp3:= ZEROEXT_DSZ32(0x00000028) SEQW GOTO U31f1
FUN_ucode_0005721:
U5721: tmp15:= ZEROEXT_DSZ16(0x0000000d) 
U5722: MOVETOCREG_DSZ64(tmp15, 0x2da, 32) !m1 

U5724: tmp15:= SHL_DSZ32(tmp15, 0x00000018) 
U5725: tmp15:= OR_DSZ32(0x00009e1d, tmp15) 
U5726: tmp15:= CONCAT_DSZ32(0x000e88c8, tmp15) 

U5728: tmp13:= OR_DSZ64(tmp15, tmp13) 
U5729: WRITEURAM(tmp13, 0x0070, 64) 
U572a: SYNCMARK-> MOVETOCREG_DSZ64(tmp13, 0x2c4, 32) !m1 

U572c: MOVETOCREG_SHR_DSZ64(tmp13, 0x00000020, 0x008) SEQW URET0
U572d: SAVEUIP( , 0x01, U1ea6) !m0 SEQW GOTO U555d
U572e: tmp1:= LDZX_DSZ32_ASZ32_SC1(tmp4, tmp6) 

U5730: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, tmp6, tmp1) SEQW GOTO U388d
FUN_ucode_0005731:
U5731: tmp14:= READUIP_REGOVR(0x01) !m0 
U5732: tmpv2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000048, mode=0x1c, tmpv1) 

U5734: WRITEURAM(tmpv2, 0x0018, 64) 
U5735: tmpv2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000068, mode=0x1c, tmpv1) 
U5736: WRITEURAM(tmpv2, 0x001a, 64) 

U5738: tmpv2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000058, mode=0x1c, tmpv1) 
U5739: WRITEURAM(tmpv2, 0x0017, 64) 
U573a: tmpv2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000078, mode=0x1c, tmpv1) 

U573c: WRITEURAM(tmpv2, 0x0019, 64) SEQW URET1
U573d: SAVEUIP( , 0x00, U59e4) SEQW GOTO U12c5
U573e: tmp0:= ADD_DSZ64(0x00000018, tmp5) 

U5740: unk_d68(tmp4, tmp9, tmp0) SEQW GOTO U3a2d
FUN_ucode_0005741:
U5741: tmpv0:= AND_DSZ64(0x00000c2a, tmpv2) 
U5742: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv0, U2b31) 

U5744: tmpv1:= AND_DSZ32(0x00000014, tmpv2) 
U5745: tmpv1:= SELECTCC_DSZ32_CONDZ(tmpv1, tmpv2) 
U5746: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000000, U2b31) !m1 

U5748: LFNCEWAIT-> tmpv1:= READURAM( , 0x002b, 64) 
U5749: tmpv1:= AND_DSZ32(0x01ffffff, tmpv1) 
U574a: tmpv1:= SELECTCC_DSZ32_CONDNZ(tmpv1, tmpv2) 

U574c: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000000, U2b31) !m1 SEQW URET1
U574d: tmp2:= SHR_DSZ32(tmp0, 0x00000010) SEQW GOTO U2bd9
U574e: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000d, U58be) !m2 

U5750: tmp12:= OR_DSZ16(0x00000001, tmp12) SEQW GOTO U2b19
U5751: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp10, 0x2c1, 32) !m1 
U5752: tmp10:= READURAM( , 0x004b, 64) 

U5754: WRITEURAM(tmp10, 0x0062, 64) 
U5755: tmp10:= RDSEGFLD(UNK_SEG_11, BASE) 
U5756: tmp5:= MOVEFROMCREG_DSZ64( , 0x701) 

U5758: tmp5:= SHR_DSZ32(tmp5, 0x0000001c) 
U5759: tmp5:= AND_DSZ32(0x00000003, tmp5) 
U575a: tmp5:= OR_DSZ64(tmp5, tmp10) 

U575c: WRITEURAM(tmp5, 0x0063, 64) SEQW GOTO U1012
U575d: tmp0:= ZEROEXT_DSZ32(0x00011000) 
U575e: MOVETOCREG_DSZ64(tmp0, 0x631) !m2 

U5760: MOVETOCREG_DSZ64( , 0x00000000, 0x634) !m2 
U5761: MOVETOCREG_DSZ64( , 0x00000000, 0x635) !m2 
U5762: MOVETOCREG_DSZ64( , 0x00000000, 0x636) !m2 

U5764: MOVETOCREG_DSZ64( , 0x00000000, 0x637) !m2 
U5765: MOVETOCREG_DSZ64( , 0x00000000, 0x638) !m2 
U5766: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x630) !m2 

U5768: SAVEUIP( , 0x00, U2999) SEQW GOTO U4be6
FUN_ucode_0005769:
U5769: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U576a: tmp6:= MOVEFROMCREG_DSZ64( , tmp8) !m1 

U576c: tmp8:= SHR_DSZ32(tmp8, 0x00000010) 
U576d: tmp9:= MOVEFROMCREG_DSZ64( , tmp8) !m1 
U576e: tmp9:= CONCAT_DSZ32(tmp9, tmp6) 

U5770: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp9) 
U5771: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U5772: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U5769

U5774: NOP SEQW URET0
U5775: MOVETOCREG_DSZ64(tmp4, 0x79d) SEQW GOTO U06ae
U5776: tmp0:= READURAM( , 0x003f, 64) 

U5778: MOVETOCREG_DSZ64(tmp0, 0x6c5) !m2 SEQW GOTO U0e52
FUN_ucode_0005779:
U5779: tmp8:= ZEROEXT_DSZ32(0x8d7f40c0) 
U577a: tmp6:= MOVEFROMCREG_DSZ64( , tmp8) !m1 

U577c: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp6) 
U577d: tmp8:= SHR_DSZ32(tmp8, 0x00000010) 
U577e: tmp6:= MOVEFROMCREG_DSZ64( , tmp8) !m1 

U5780: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020,  , tmp6) 
U5781: tmp12:= ADD_DSZ32(0x00000040, tmp12) 
U5782: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U5779

U5784: NOP SEQW URET0
U5785: SAVEUIP( , 0x00, U0444) SEQW GOTO U1c1a
U5786: BTUJB_DIRECT_NOTTAKEN(rbx, 0x00000003, U2cf1) !m0,m1 

U5788: rax:= BTR_DSZ32(rax, 0x00000003) SEQW GOTO U2cf1
U5789: tmp2:= ZEROEXT_DSZ32(0x00000002) 
U578a: MOVETOCREG_BTS_DSZ64( , 0x0000000a, 0x29e) !m0,m1,m2 

U578c: TESTUSTATE( , VMX, 0x0002) !m2 ? SEQW GOTO U5f0c
U578d: tmp0:= ZEROEXT_DSZ32(0x0000b000) 
U578e: tmp2:= CONCAT_DSZ8(0x00000002, tmp2) 

U5790: tmp2:= BTS_DSZ32(tmp2, 0x0000001f) 
U5791: tmp6:= ZEROEXT_DSZ32(0x0000003a) 
U5792: tmp1:= SAVEUIP_REGOVR(0x01, U5794, 0x00f6) !m0 

U5794: tmp4:= SAVEUIP( , 0x01, U079d) !m0 SEQW GOTO U5cfc
rsa_signing_error:
U5795: tmp15:= STC() 
U5796: tmp2:= READURAM( , 0x005c, 64) 

U5798: tmp2:= BT_DSZ32(tmp2, 0x00000003) 
U5799: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0xfffffffffffffff8) 
U579a: tmp2:= ADD_DSZ32(0x00000084, tmp2) 

U579c: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000040,  , 0x00000000) 
U579d: tmp2:= SUB_DSZ32(0x00000001, tmp2) 
U579e: tmp7:= ADD_DSZ64(0x00000004, tmp7) 

U57a0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U5a0d) SEQW GOTO U579c
U57a1: tmp15:= READURAM( , 0x0053, 64) !m2 
U57a2: tmp15:= NOTAND_DSZ32(0x00000079, tmp15) 

U57a4: tmp15:= OR_DSZ32(0x0000001a, tmp15) 
U57a5: WRITEURAM(tmp15, 0x0053, 32) !m2 
U57a6: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U57a8: SYNCFULL-> MOVETOCREG_BTR_DSZ64(tmp0, 0x00000005, 0x6c3) !m2 
U57a9: PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 
U57aa: MOVETOCREG_BTS_DSZ64( , 0x00000004, 0x29d) !m1,m2 

U57ac: tmp15:= ZEROEXT_DSZ32(0x000000ee) SEQW GOTO U621d
U57ad: tmp12:= READURAM( , 0x0057, 64) 
U57ae: tmp4:= MOVEFROMCREG_DSZ64( , 0x513) 

U57b0: tmp3:= ZEROEXT_DSZ32(0x000000ff) 
U57b1: tmp3:= CONCAT_DSZ32(tmp3, 0xfffffffffffff000) 
U57b2: tmp4:= AND_DSZ64(tmp3, tmp4) 

U57b4: tmp3:= SUB_DSZ32(0x00000800, tmp8) 
U57b5: tmp3:= SHL_DSZ32(tmp3, 0x00000004) 
U57b6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, tmp3, tmp5) 

U57b8: tmp14:= SAVEUIP(0x01, U320c) !m0 SEQW URET0
U57b9: tmp0:= CONCAT_DSZ16(0x0000005d) SEQW GOTO U3a41
U57ba: tmm3:= unk_53f(tmm1, tmm3) 

U57bc: tmm7:= unk_689(tmm3, tmm6) !m2 SEQW GOTO U0404
U57bd: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x63a) !m0 
U57be: MOVETOCREG_OR_DSZ64( , 0x00000007, 0x63e) !m0 

U57c0: LFNCEWTMRK-> unk_dff() 
U57c1: tmp4:= ZEROEXT_DSZ32(0x00000037) 
U57c2: MOVETOCREG_DSZ64(tmp4, 0x00b) 

U57c4: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 
U57c5: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 
U57c6: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x6c5) !m2 

U57c8: WRITEURAM( , 0x00000000, 0x004a, 64) !m2 SEQW GOTO U4fe4
U57c9: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2) 
U57ca: tmp15:= BT_DSZ64(tmp1, 0x00000000) 

U57cc: tmp15:= SELECTCC_DSZ64_CONDNB(tmp15, tmp15) 
U57cd: tmp15:= AND_DSZ64(tmp4, tmp15) 
U57ce: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U379c) 

U57d0: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, tmp3) 
U57d1: tmp12:= SUBR_DSZ64(tmp12, IMM_MACRO_01) !m0 SEQW URET1
U57d2: tmp3:= ADD_DSZ32(0x00000001, tmp3) 

U57d4: tmp2:= ADD_DSZ64(0x00000008, tmp2) SEQW GOTO U57c9
U57d5: tmp3:= SELECTCC_DSZ32_CONDB(tmp1, 0x00000018) 
U57d6: rax:= OR_DSZ32(0x00000003, tmp3) 

U57d8: tmp3:= BT_DSZ64(tmp2, 0x0000003b) 
U57d9: tmp3:= MOVEMERGEFLGS_DSZ32(0x00000240, tmp3) 
U57da: tmp3:= CMOVCC_DSZ32_CONDNB(tmp3, 0x00000440) 

U57dc: tmp3:= MOVEMERGEFLGS_DSZ32(tmp3, tmp1) 
U57dd: rbx:= CMOVCC_DSZ32_CONDNB(tmp3, 0x00000240) 
U57de: tmp3:= MOVEMERGEFLGS_DSZ32(0x00000240, tmp1) 

U57e0: rcx:= CMOVCC_DSZ32_CONDB(tmp3, 0x00000440) SEQW GOTO U17ec
U57e1: tmp13:= SAVEUIP(0x00, U63a2) 
U57e2: tmp8:= PORTIN_DSZ32_ASZ16_SC1(0x50d0) !m2 

U57e4: tmp6:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp8, 0x0000001e) 
U57e5: LFNCEWAIT-> tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, 0x00000004) 
U57e6: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000004, U3b11) !m1,m2 

U57e8: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000d, U1dbe) !m2 
U57e9: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000008) 
U57ea: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000009, U215d) !m1 

U57ec: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000006, U228d) !m0,m1 SEQW GOTO U63a2
U57ed: tmp0:= MOVEFROMCREG_DSZ64( , 0x070) 
U57ee: tmp15:= MOVEFROMCREG_DSZ64( , 0x01c) 

U57f0: tmp0:= CONCAT_DSZ32(tmp15, tmp0) 
U57f1: WRITEURAM(tmp0, 0x002a, 64) !m2 
U57f2: SAVEUIP( , 0x01, U5aa4) !m0 

FUN_ucode_00057f4:
U57f4: tmp12:= ZEROEXT_DSZ32(0x000003bf) 
U57f5: MOVETOCREG_DSZ64(tmp12, 0x00b) !m2 
U57f6: tmp12:= ZEROEXT_DSZ32(0x00000003) 

U57f8: MOVETOCREG_DSZ64(tmp12, 0x005) !m2 SEQW URET1
U57f9: tmp13:= SAVEUIP(tmp10, 0x00, U2d6e) SEQW GOTO U5cda
U57fa: tmp9:= unk_6a0() 

U57fc: mm7:= FMOV( , tmm1) !m0 SEQW GOTO U17ec
gen_key_step:
U57fd: tmp6:= READURAM( , 0x0048, 64) 
U57fe: tmp6:= SUB_DSZ32(0x00000001, tmp6) 

U5800: WRITEURAM(tmp6, 0x0048, 32) !m2 
U5801: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U5802) SEQW GOTO U6164
U5802: tmp7:= ADD_DSZ64(0x000000e0, tmp7) 

U5804: tmp0:= ZEROEXT_DSZ32(0x000000ff) 
U5805: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0, tmp0) 
U5806: tmp0:= SUB_DSZ32(0x00000001, tmp0) 

U5808: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp0, U5d75) SEQW GOTO U5805
U5809: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U580a: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U580c: tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000001, 0x48c) 
U580d: tmp6:= AND_DSZ32(0x00000001, tmp5) 
U580e: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U2719) 

U5810: tmp12:= unk_6a0() 
U5811: WRTAGW-> tmp12:= unk_ccc(tmp10) 
U5812: tmm0:= unk_743() !m2 

U5814: tmm0:= FMOV( , 0x00000091) !m0 SEQW GOTO U17ec
U5815: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U5816: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U5818: tmp4:= NOTAND_DSZ16(0x00000200, tmp4) 
U5819: tmp9:= unk_6a0() 
U581a: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000004, 0x48c) 

U581c: tmp2:= AND_DSZ32(0x00000004, tmp5) 
U581d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U56de) 
U581e: mm0:= FMOV( , tmm1) !m0 

U5820: LFNCEWAIT-> mm7:= FMOV( , tmm0) !m0 SEQW GOTO U17ec
U5821: rax:= ZEROEXT_DSZ32(0x0000000f) 
U5822: tmp1:= BT_DSZ64(tmp2, 0x0000003b) 

U5824: tmp3:= MOVEMERGEFLGS_DSZ32(0x000002c0, tmp1) 
U5825: tmp3:= CMOVCC_DSZ32_CONDB(tmp3, 0x00000240) 
U5826: tmp1:= READURAM( , 0x0023, 64) 

U5828: tmp1:= BT_DSZ64(tmp1, 0x00000008) 
U5829: tmp1:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00000080) 
U582a: rbx:= ADD_DSZ32(tmp1, tmp3) 

U582c: rcx:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000100) SEQW GOTO U17ec
U582d: tmp0:= OR_DSZ16(0x00008080, tmp8) 
U582e: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x48c) 

U5830: mm7:= FMOV( , tmm1) !m0 
U5831: tmp5:= ZEROEXT_DSZ32(0x0000c001) 
U5832: mm0:= unk_7c2(mm5, 0x00000000) 

U5834: mm0:= unk_69d( , 0x00000000) 
U5835: mm6:= unk_7ea(0x00000000) 
U5836: tmp6:= ADD_DSZ32(0x00006000, tmp6) 

U5838: LFNCEWAIT-> mm0:= unk_7c2(mm6, IMM_MACRO_31) !m0 SEQW GOTO U21fe
U5839: tmp9:= unk_6a0() 
U583a: tmp2:= SHR_DSZ32(tmp8, 0x00000003) 

U583c: tmm3:= unk_702(mm2, tmm3) 
U583d: tmm5:= unk_496(tmm5, tmm1) 
U583e: tmm5:= unk_6e1(tmm3, tmm5) 

U5840: tmm4:= unk_702(mm2, tmm4) 
U5841: tmm6:= unk_6e1(tmm4, tmm6) 
U5842: tmm1:= unk_6c9(tmm5, tmm6) 

U5844: mm0:= unk_689(tmm4, tmm1) !m2 SEQW GOTO U17ec
U5845: tmp1:= MOVEFROMCREG_DSZ64( , 0x01a) !m2 
U5846: tmp0:= MOVEFROMCREG_DSZ64( , 0x065) !m2 

U5848: tmp1:= SUB_DSZN(tmp0, tmp1) !m1 
U5849: tmp0:= READURAM( , 0x0037, 64) !m2 
U584a: CMPUJZ_DIRECT_NOTTAKEN(tmp1, U59a2, tmp0) !m2 

U584c: tmp0:= ZEROEXT_DSZ32(0x00030300) 
U584d: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x6a1) !m2 
U584e: tmp1:= ZEROEXT_DSZ32(0x00001979) 

U5850: tmp1:= BTS_DSZ32(tmp1, 0x00000011) SEQW GOTO U24a5
U5851: MOVETOCREG_DSZ64(tmp0, 0x7f6) 
U5852: MOVETOCREG_DSZ64(tmp1, 0x7ff) 

U5854: MOVETOCREG_DSZ64(tmp11, 0x7fe) 
U5855: unk_13f(tmp11) !m2 
U5856: MOVETOCREG_DSZ64(tmp4, 0x7f9, 32) !m1 

U5858: MOVETOCREG_DSZ64(tmp13, 0x7c5) 
U5859: MOVETOCREG_DSZ64(tmp14, 0x7f8) 
U585a: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x065) 

U585c: SAVEUIP( , 0x01, U2e50) !m0 SEQW GOTO U0164
U585d: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U585e: tmp5:= SHR_DSZ32(tmp0, 0x0000000a) 

U5860: tmp5:= AND_DSZ32(0x00000200, tmp5) 
U5861: tmp1:= AND_DSZ32(0x003c4dd7, tmp0) 
U5862: tmp1:= OR_DSZ32(0x00003000, tmp1) 

U5864: tmp2:= AND_DSZ32(0x003c7fd7, tmp0) 
U5865: tmp1:= OR_DSZ32(tmp5, tmp1) 
U5866: tmp0:= unk_207(tmp1, tmp2) 

U5868: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x1a, tmp0) !m0,m1 
U5869: rsp:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 SEQW UEND0
U586a: TESTUSTATE( , UCODE, 0x3000) ? SEQW GOTO U5ffe

U586c: tmp1:= ZEROEXT_DSZ32(0x0000040c) 
U586d: tmp1:= BTS_DSZ32(tmp1, 0x00000010) 
U586e: tmp3:= READURAM( , 0x0012, 64) 

U5870: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000000c, U5ffe) !m2 
U5871: SAVEUIP_REGOVR( , 0x01, U5872, 0xe413) !m0 SEQW GOTO U6bfd
U5872: SAVEUIP( , 0x01, U5ffe) !m0 

U5874: tmpv0:= SAVEUIP(tmp0, 0x00, U38d0) SEQW GOTO U334d
FUN_ucode_0005875:
U5875: tmp11:= AND_DSZ32(0x00007ffe, tmp11) 
U5876: tmp8:= SHR_DSZ32(tmp11, 0x00000002) 

U5878: tmp10:= ADD_DSZ32(tmp6, tmp6) 
U5879: tmp10:= ADD_DSZ32(tmp7, tmp10) 
U587a: tmp8:= unk_224(tmp10, tmp8) 

U587c: tmp8:= ADD_DSZ32(0x00000b00, tmp8) 
U587d: tmp9:= BT_DSZ32(tmp11, 0x00000001) 
U587e: tmp9:= SELECTCC_DSZ32_CONDNB(tmp9, tmp6) 

U5880: tmp9:= ADD_DSZ32(tmp8, tmp9) 
U5881: tmp9:= ADD_DSZ32(tmp7, tmp9) SEQW URET1
FUN_ucode_0005882:
U5882: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U5884: ROVR<-LFNCEMARK-> AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW SAVEUIP0 U5885
U5885: TESTUSTATE( , VMX, !0x0400) !m0,m2 ? SEQW GOTO U44a5
U5886: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp7, U2711) 

U5888: tmp12:= READURAM( , 0x0057, 64) 
U5889: tmp0:= ZEROEXT_DSZ32(0x0000282b) 
U588a: LFNCEMARK-> TESTUSTATE( , VMX, 0x1000) !m2 ? SEQW SAVEUIP0 U588c? SEQW GOTO U4bee

U588c: tmp2:= SHL_DSZ32(r64src, 0x00000004) 
U588d: tmp4:= MOVEFROMCREG_DSZ64( , 0x513) 
U588e: tmp5:= ZEROEXT_DSZ32(0x000000ff) 

U5890: tmp5:= CONCAT_DSZ32(tmp5, 0xfffffffffffff000) 
U5891: tmp4:= AND_DSZ64(tmp5, tmp4) 
U5892: tmp14:= READUIP_REGOVR(0x01) !m0 

U5894: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000258, mode=0x01, tmp12) 
U5895: tmp5:= SHL_DSZ32(tmp5, 0x00000004) 
U5896: tmp5:= AND_DSZ32(0x000000f0, tmp5) 

U5898: tmp5:= SUB_DSZ32(tmp5, tmp2) 
U5899: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0x00000080, mode=0x1c, tmp2) 
U589a: TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U5fe1

U589c: tmp2:= ZEROEXT_DSZ8(tmp2) 
U589d: tmp14:= SAVEUIP(0x01, U008e) !m0 SEQW GOTO U667e
U589e: tmp9:= ZEROEXT_DSZ64(IMM_MACRO_f3) !m0 

U58a0: LFNCEWAIT-> tmp11:= unk_e6b(tmp0, tmp2) !m1,m2 SEQW GOTO U48be
U58a1: tmp2:= BT_DSZ32(tmp2, 0x00000007) 
U58a2: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000002) 

U58a4: SAVEUIP_REGOVR(0x01, U58a5, 0x0000) !m0 SEQW GOTO U32cd
U58a5: tmp1:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U58a6: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000b, U2b85) !m0,m1 

U58a8: tmp0:= READURAM( , 0x0053, 64) !m2 
U58a9: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U58aa) !m0,m2 SEQW GOTO U5d05
U58aa: tmp0:= MOVEFROMCREG_DSZ64( , 0x21d, 32) !m1 

U58ac: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U2b85) !m1 
U58ad: LFNCEMARK-> tmp4:= PORTIN_DSZ32_ASZ16_SC1(0x0010) !m2 SEQW GOTO U1b41
U58ae: rax:= SELECTCC_DSZ32_CONDB(tmp1, 0x00000040) 

U58b0: rbx:= SELECTCC_DSZ32_CONDB(tmp1, 0x000003c0) SEQW GOTO U17ec
U58b1: MOVE_DSZ32() 
U58b2: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 

U58b4: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U58b5: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U25b9) !m1 
U58b6: tmp15:= unk_208(0x000000f5) 

U58b8: LFNCEMARK-> unk_25e( , tmp15) 
U58b9: tmp1:= CONCAT_DSZ8(0x00000004, tmp2) 
U58ba: tmp8:= MOVEFROMCREG_DSZ64( , 0x79e) 

U58bc: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U58bd: tmp10:= READAFLAGS( , tmp10) !m2 SEQW GOTO U3e3a
U58be: tmp5:= AND_DSZ32(0x00000002, tmp7) 

U58c0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U5750) SEQW GOTO U392a
FUN_ucode_00058c1:
U58c1: tmp1:= READURAM( , 0x0053, 64) !m2 
U58c2: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 

U58c4: tmp7:= SUB_DSZ64(0x00000000, tmp1) 
U58c5: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U304e) SEQW SAVEUIP1 U58c6SEQW GOTO U0bc9
U58c6: tmp7:= unk_222(tmp1) 

U58c8: tmp7:= CONCAT_DSZ16(tmp7, tmp7) 
U58c9: tmp7:= unk_0fc(tmp0, tmp7) 
U58ca: PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , tmp7) !m2 

U58cc: SYNCFULL-> PORTOUT_DSZ32_ASZ16_SC1(0x0064,  , tmp1) !m2 
U58cd: PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 SEQW URET0
U58ce: tmp0:= MOVE_DSZ32(0x0000282b) SEQW GOTO U4e81

U58d0: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2d6) !m0,m1,m2 
U58d1: CMPUJZ_DIRECT_NOTTAKEN(tmp5, 0x00000000, U60d2) !m1 SEQW SAVEUIP1 U58d2SEQW GOTO U5f7a
U58d2: MOVETOCREG_DSZ64(tmp3, 0x2e0, 32) !m1,m2 

U58d4: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2d5) !m0,m1,m2 SEQW GOTO U332d
U58d5: tmp15:= READURAM( , 0x0024, 64) 
U58d6: SYNCMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000003f, U304e) !m0,m1,m2 

U58d8: tmp15:= SHR_DSZ64(tmp15, 0x0000001c) 
U58d9: tmp10:= SHR_DSZ32(tmp15, 0x00000004) 
U58da: tmp10:= AND_DSZ32(0x000000fc, tmp10) 

U58dc: tmp15:= AND_DSZ32(0x0ffff000, tmp15) 
U58dd: tmp15:= OR_DSZ32(tmp10, tmp15) 
U58de: tmp15:= OR_DSZ32(0x80000000, tmp15) 

U58e0: tmp10:= AND_DSZ32(0x00000003, tmp1) 
U58e1: tmp10:= OR_DSZ32(tmp10, tmp15) SEQW URET0
U58e2: WRITEURAM(tmp11, 0x001e, 64) !m2 SEQW GOTO U26d0

U58e4: tmp8:= SAVEUIP( , 0x00, U31e9) 
U58e5: ROVR<- tmp1:= CONCAT_DSZ8(tmp3, tmp2) SEQW SAVEUIP1 U58e6SEQW GOTO U2178
U58e6: tmp7:= ZEROEXT_DSZ32(0x00000025) 

U58e8: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW URET0
U58e9: tmp14:= MOVETOCREG_DSZ64(0x00000009, 0x000) 
U58ea: tmp9:= ZEROEXT_DSZ32(tmp10) 

U58ec: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U58f1
U58ed: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 
U58ee: tmp0:= READURAM( , 0x0014, 64) 

U58f0: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U6930) !m1 
U58f1: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 SEQW GOTO U3d65
U58f2: tmp3:= ZEROEXT_DSZ32(0x00000004) 

U58f4: tmm7:= unk_780(mm3) !m2 SEQW GOTO U17ec
U58f5: tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 
U58f6: SYNCMARK-> MOVETOCREG_DSZ64(tmp15, 0x752) 

U58f8: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000001f, U00f1) !m0 
U58f9: SFENCE() 
U58fa: tmp2:= BT_DSZ64(tmp2, 0x0000000f) 

U58fc: tmp15:= BT_DSZ64(tmp2, 0x0000000f) 
U58fd: tmp15:= CMOVCC_DSZ32_CONDB(tmp15, 0x00000004) 
U58fe: SYNCWAIT-> tmp4:= SUB_DSZN(tmp4) !m1 

U5900: tmp4:= SHL_DSZ32(tmp4, tmp15) 
U5901: tmp4:= ADD_DSZ32(tmp5, tmp4) SEQW URET0
U5902: tmp10:= MOVEFROMCREG_DSZ64( , rax) !m1 SEQW GOTO U4065

U5904: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711
U5905: ROVR<-LFNCEMARK-> AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 SEQW SAVEUIP1 U5906
U5906: tmp0:= ZEROEXT_DSZ32(0x0000001c) 

U5908: TESTUSTATE( , VMX, 0x0800) !m2 ? SEQW SAVEUIP1 U5909? SEQW GOTO U5dfa
U5909: tmp1:= ZEROEXT_DSZ32(0x00000010) 
U590a: LFNCEWAIT-> tmp15:= MOVEFROMCREG_DSZ64( , 0x01b) 

U590c: tmp4:= AND_DSZ32(0x00000078, tmp15) 
U590d: tmp4:= SHL_DSZ32(tmp4, 0x00000005) 
U590e: tmp1:= OR_DSZ32(tmp4, tmp1) 

U5910: tmp4:= SHR_DSZ32(tmp15, 0x0000001c) 
U5911: tmp4:= AND_DSZ32(0x0000000f, tmp4) 
U5912: tmp1:= OR_DSZ32(tmp4, tmp1) 

U5914: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U1f91) !m2 SEQW GOTO U4e82
U5915: tmp1:= SAVEUIP(tmp5, 0x00, U605c) 
U5916: tmp2:= MOVEFROMCREG_DSZ64( , 0x7bb) 

FUN_ucode_0005918:
U5918: tmp3:= SUB_DSZ64(0x00000001) 
FUN_ucode_0005919:
U5919: SYNCMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U304e) !m0,m1,m2 
U591a: tmp3:= CONCAT_DSZ32(0xffffffffffffffff, tmp3) 

U591c: tmp1:= AND_DSZ64(tmp1, tmp3) 
U591d: tmp13:= AND_DSZ64(tmp1, tmp2) 
U591e: tmp14:= MOVEFROMCREG_DSZ64( , 0x574) 

U5920: tmp14:= AND_DSZ64(tmp1, tmp14) 
U5921: CMPUJZ_DIRECT_NOTTAKEN(tmp14, U2711, tmp13) !m1 SEQW URET0
U5922: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, rax) !m1,m2 SEQW GOTO U43a4

U5924: rdx:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 SEQW GOTO U5b54
U5925: tmp1:= AND_DSZ32(0x00000001, tmp1) 
U5926: MOVETOCREG_OR_DSZ64(tmp2, 0x105, tmp1) !m2 

U5928: tmp1:= SHR_DSZ32(tmp5, 0x0000000b) 
U5929: tmp1:= NOTAND_DSZ32(tmp1, 0x00000001) 
U592a: MOVETOCREG_OR_DSZ64(tmp1, 0x00000002, 0x383) !m0,m1,m2 

U592c: tmp1:= AND_DSZ32(0x00000001, tmp5) 
U592d: SYNCWAIT-> tmp1:= SHL_DSZ32(tmp1, 0x0000001c) SEQW SAVEUIP1 U592eSEQW GOTO U32cd
U592e: tmp2:= MOVEFROMCREG_DSZ64( , 0x3df, 32) !m1 

U5930: tmp2:= NOTAND_DSZ32(0x10000000, tmp2) 
U5931: MOVETOCREG_OR_DSZ64(tmp2, 0x3df, tmp1) !m1,m2 SEQW GOTO U324e
U5932: LFNCEMARK-> tmm6:= unk_743(mm0) !m2 

U5934: MOVEINSERTFLGS_DSZ32(0x0000000b) !m2 SEQW GOTO U2b1d
U5935: tmp15:= SHL_DSZ64(tmp4, 0x00000004) 
U5936: tmp9:= READURAM( , 0x0010, 64) 

U5938: tmp15:= SUB_DSZ64(0x00000001, tmp15) 
U5939: tmp9:= ZEROEXT_DSZ16( , tmp9) 
U593a: tmp15:= ADD_DSZ64(tmp15, tmp5) 

U593c: tmp15:= OR_DSZ64(tmp5, tmp15) 
U593d: tmp15:= AND_DSZ64(tmp9, tmp15) 
U593e: tmp9:= AND_DSZ32(0x0000000f, tmp5) 

U5940: tmp9:= OR_DSZ64(tmp15, tmp9) 
U5941: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, tmp10) SEQW URET0
U5942: tmp14:= SAVEUIP(0x01, U37fc) !m0 SEQW GOTO U1e7d

U5944: tmm4:= unk_601(tmm3, tmm2) !m2 SEQW GOTO U2476
FUN_ucode_0005945:
U5945: tmp1:= ZEROEXT_DSZ32(0xf8f8f8f8) 
U5946: tmp1:= CONCAT_DSZ32(tmp1, tmp1) 

U5948: tmp1:= AND_DSZ64(tmpv0, tmp1) 
U5949: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, tmpv1) 
U594a: tmp1:= ZEROEXT_DSZ32(0x04040404) 

U594c: tmp1:= CONCAT_DSZ32(tmp1, tmp1) 
U594d: tmp1:= NOTAND_DSZ64(tmpv0, tmp1) 
U594e: tmp1:= SHR_DSZ64(tmp1, 0x00000001) 

U5950: tmp1:= AND_DSZ64(tmpv0, tmp1) 
U5951: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, tmpv1) SEQW URET1
U5952: tmm0:= unk_744(mm7) SEQW GOTO U4d3a

U5954: MOVEINSERTFLGS_DSZ32(0x0000000b) !m2 SEQW GOTO U1948
FUN_ucode_0005955:
U5955: tmpv0:= BT_DSZ32(tmpv0, 0x00000017) 
U5956: tmpv0:= SELECTCC_DSZ32_CONDNB(tmpv0, 0x00001000) 

U5958: tmpv1:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U5959: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmpv1, 0x6c3, tmpv0) 
U595a: tmpv2:= CONCAT_DSZ16(0x00000038) 

U595c: tmpv0:= MOVEFROMCREG_DSZ64( , 0x7c6) 
U595d: tmpv0:= NOTAND_DSZ32(tmpv2, tmpv0) 
U595e: tmpv1:= READURAM( , 0x004c, 64) 

U5960: tmpv1:= AND_DSZ32(tmpv2, tmpv1) 
U5961: MOVETOCREG_OR_DSZ64(tmpv0, 0x7c6, tmpv1) SEQW URET0
U5962: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x38e) !m1 SEQW GOTO U0041

U5964: tmp14:= ZEROEXT_DSZ32(0x000075f9) SEQW GOTO U0434
U5965: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x072) !m0,m2 
U5966: LFNCEMARK-> WRITEURAM( , 0x00000000, 0x0007, 32) !m2 

U5968: tmp9:= READURAM( , 0x002c, 64) 
U5969: tmp6:= SHR_DSZ64(tmp9, 0x00000020) 
U596a: tmp4:= SHR_DSZ32(tmp9, 0x00000008) 

U596c: tmp5:= ZEROEXT_DSZ8(tmp9) 
U596d: tmp7:= SHR_DSZ32(tmp9, 0x00000010) 
U596e: tmp3:= READURAM( , 0x006c, 64) 

U5970: tmp11:= READURAM( , 0x006b, 64) 
U5971: LFNCEWAIT-> tmp12:= READURAM( , 0x0011, 64) SEQW GOTO U4618
U5972: rax:= SELECTCC_DSZ32_CONDB(tmp1, 0x00000040) 

U5974: rbx:= SELECTCC_DSZ32_CONDB(tmp1, 0x00000400) SEQW GOTO U17ec
U5975: tmp0:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U5976: tmp0:= BTR_DSZ64(tmp0, 0x00000003) 

U5978: tmp15:= MOVEFROMCREG_DSZ64( , 0x00c) SEQW SAVEUIP1 U5979SEQW GOTO U57f4
U5979: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000008, U597c) !m2 
U597a: tmp0:= BTS_DSZ64(tmp0, 0x00000004) 

U597c: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x2df, 32) !m1,m2 
U597d: tmp0:= READURAM( , 0x005c, 64) 
U597e: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000017, U2ac9) !m0,m1 

U5980: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000015, U2ac5) !m1 
U5981: tmp15:= CONCAT_DSZ32(rdx, rax) SEQW GOTO U2ac8
U5982: rax:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000080) 

U5984: rcx:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000001) SEQW GOTO U17ec
U5985: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U5986: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U5988: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U5989) !m2 SEQW GOTO U5986
U5989: MOVETOCREG_DSZ64(tmpv0, 0x22b, 32) !m1 
U598a: tmp15:= ZEROEXT_DSZ32(0x000006ff) 

U598c: tmp15:= CONCAT_DSZ16(tmp15, 0x00000007) 
U598d: MOVETOCREG_DSZ64(tmp15, 0x229, 32) !m1,m2 
U598e: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1,m2 

U5990: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U5991) !m2 SEQW GOTO U598e
U5991: tmpv1:= MOVEFROMCREG_DSZ64( , 0x22d, 32) !m1,m2 SEQW URET1
U5992: tmp0:= READURAM( , 0x0021, 64) !m2 

U5994: unk_963(tmp0, IMM_MACRO_21) !m0,m2 SEQW GOTO U24da
U5995: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1,m2 
U5996: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U5998: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U5999) !m2 SEQW GOTO U5996
U5999: MOVETOCREG_DSZ64(tmpv0, 0x22b, 32) !m1 
U599a: MOVETOCREG_DSZ64(tmpv1, 0x22c, 32) !m1 

U599c: tmp15:= ZEROEXT_DSZ32(0x0000070f) 
U599d: tmp15:= CONCAT_DSZ16(tmp15, 0x00000005) 
U599e: MOVETOCREG_DSZ64(tmp15, 0x229, 32) !m1,m2 

U59a0: tmp15:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1,m2 
U59a1: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U068e) SEQW GOTO U59a0
U59a2: tmp1:= ZEROEXT_DSZ32(0x0000402a) 

U59a4: tmp1:= BTS_DSZ32(tmp1, 0x00000014) SEQW GOTO U24a5
U59a5: MOVETOCREG_DSZ64( , 0x00000000, 0x48f) !m2 
U59a6: tmp3:= AND_DSZ32(0x00000080, tmp8) 

U59a8: tmp3:= NOTAND_DSZ32(tmp2, tmp3) 
U59a9: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U3a90) 
U59aa: tmp5:= BT_DSZ32(tmp5, 0x00000013) 

U59ac: tmp3:= MOVEFROMCREG_DSZ64( , 0x001) 
U59ad: tmp3:= SELECTCC_DSZ32_CONDB(tmp5, tmp3) 
U59ae: tmp2:= SUB_DSZ32(0x00000a45, tmp3) 

U59b0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U17c1) 
U59b1: LFNCEMARK-> NOP SEQW GOTO U1000
U59b2: tmp0:= READURAM( , 0x0008, 64) !m2 

U59b4: tmp0:= SHR_DSZ32(tmp0, 0x00000010) SEQW GOTO U2746
U59b5: tmp2:= PINTMOVDTMM2I_DSZ32(tmm2) 
U59b6: tmp2:= NOTAND_DSZ32(0x000001ff, tmp2) 

U59b8: tmp9:= ZEROEXT_DSZ64(tmp10) 
U59b9: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U2399
U59ba: tmm3:= SHUFPD(tmm7, tmm7) 

U59bc: tmp2:= NOTAND_DSZ32(0x00000fff, tmp2) 
U59bd: tmp2:= OR_DSZ32(0x000006ed, tmp2) 
U59be: tmm2:= unk_704(mm2) 

U59c0: tmp9:= unk_52b(tmp11) 
U59c1: tmm1:= unk_57a(tmm1) SEQW GOTO U431d
U59c2: tmp1:= READURAM( , 0x0008, 64) !m2 

U59c4: LFNCEMARK-> tmp1:= CONCAT_DSZ16(tmp1, tmp0) SEQW GOTO U5d04
U59c5: tmp1:= READURAM( , 0x003d, 64) 
U59c6: tmp1:= OR_DSZ32(0x00002000, tmp1) 

U59c8: tmp1:= NOTAND_DSZ32(0x0000000f, tmp1) 
U59c9: WRITEURAM(tmp1, 0x003d, 64) !m2 
U59ca: MOVETOCREG_DSZ64(tmp2, 0x7f8) !m2 

U59cc: tmp2:= MOVEFROMCREG_DSZ64( , 0x78e) 
U59cd: tmp2:= ADD_DSZN(tmp12, tmp2) !m1 
U59ce: tmp1:= MOVEFROMCREG_DSZ64( , 0x065) 

U59d0: tmp1:= SUB_DSZN(tmp1, tmp2) !m1 
U59d1: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x067) !m2 SEQW GOTO U1dd8
U59d2: tmp1:= READURAM( , 0x0008, 64) !m2 

U59d4: LFNCEMARK-> tmp1:= CONCAT_DSZ16(tmp0, tmp1) SEQW GOTO U5d04
U59d5: rsi:= ADDSUB_DSZ16_CONDD(tmp4, rsi) !m1 
U59d6: rdi:= ADDSUB_DSZ16_CONDD(tmp4, rdi) !m1 

U59d8: tmp15:= SHR_DSZ32(tmp4, tmp2) 
U59d9: rcx:= SUB_DSZN(tmp15, rcx) !m1 
U59da: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x0000000a, U2e8a) !m0,m1 

U59dc: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000f, U2e8e) !m0,m1 
U59dd: LFNCEMARK-> WRITEURAM(tmp10, 0x001e, 64) !m2 
U59de: MOVETOCREG_OR_DSZ64( , 0x00000004, 0x00b) !m2 

U59e0: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0,m2 
U59e1: MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 SEQW URET1
U59e2: tmm0:= FMOV() !m2 SEQW GOTO U17ec

U59e4: SAVEUIP( , 0x01, U38e6) !m0 SEQW GOTO U3b01
U59e5: tmp4:= SUB_DSZ32(0x00000100, tmp4) 
U59e6: tmp4:= SUB_DSZ32(0x00000058, tmp4) 

U59e8: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U40bc) 
U59e9: tmp9:= BTS_DSZ16(tmp9, 0x0000000b) 
U59ea: tmp12:= OR_DSZ16(0x00000041, tmp12) 

U59ec: tmm6:= unk_743() !m2 
U59ed: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 
U59ee: tmp2:= AND_DSZ16(tmp5, 0x00000001) 

U59f0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U0392) 
U59f1: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp6, U392a) SEQW GOTO U1235
U59f2: tmp4:= MOVE_DSZ64(IMM_MACRO_ALIAS_RIP) !m0 

U59f4: tmp9:= TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT | 0x0200) !m0,m1 ? SEQW GOTO U48ac
U59f5: tmp2:= LDZX_DSZ16_ASZ32_SC1(tmp2, IMM_MACRO_ALIAS_DATASIZE, mode=0x18) !m0 
U59f6: MOVETOCREG_DSZ64(0x00000009, 0x000) !m2 

U59f8: LFNCEWAIT-> tmp6:= RDSEGFLD(CS, FLGS) SEQW GOTO U2bd9
U59f9: rax:= BTS_DSZ32(rax, 0x00000002) 
U59fa: rbx:= BTS_DSZ32(rbx, 0x00000002) 

U59fc: tmp14:= ZEROEXT_DSZ16(0x00002cee) 
U59fd: tmp15:= ZEROEXT_DSZ16(0x00005786) 
U59fe: tmp0:= ZEROEXT_DSZ16(0x00000001) 

U5a00: tmp0:= CONCAT_DSZ16(tmp0, 0x00000200) 
U5a01: tmp2:= ZEROEXT_DSZ16(0x0000007f) 
U5a02: tmp2:= CONCAT_DSZ16(tmp2, 0x0000002f) 

U5a04: tmp4:= SUB_DSZ64(0x00000001) 
U5a05: tmp5:= SUB_DSZ64(0x00000001) SEQW GOTO U2f9e
U5a06: tmp2:= SHL_DSZ32(tmp2, 0x00000004) 

U5a08: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U3025
U5a09: tmp3:= READURAM( , 0x0043, 64) 
U5a0a: SYNCMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000024, U3025) !m1,m2 

U5a0c: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp1, tmp2) SEQW GOTO U3026
U5a0d: tmp11:= ZEROEXT_DSZ32(0x00000006) 
U5a0e: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp15, U27dc) 

U5a10: tmp11:= ZEROEXT_DSZ32(0x00000007) 
U5a11: tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 
U5a12: tmp2:= AND_DSZ32(0x000f0000, tmp2) 

U5a14: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U27dc) 
U5a15: tmp0:= READURAM( , 0x005c, 64) 
U5a16: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U6f41) !m1 

U5a18: tmp14:= MOVEFROMCREG_DSZ64( , 0x51b) 
U5a19: tmp14:= ZEROEXT_DSZ16(0x00001000, tmp14) SEQW GOTO U6f41
FUN_ucode_0005a1a:
U5a1a: SAVEUIP( , 0x00, U4556) 

U5a1c: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U0b92
U5a1d: tmp0:= OR_DSZN(0x00010000) !m1 
U5a1e: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U0b92) 

U5a20: SAVEUIP( , 0x01, U221e) !m0 SEQW GOTO U2e92
U5a21: tmm5:= unk_649(tmm0, tmm5) 
U5a22: tmp1:= AND_DSZ32(0x00000001, tmp8) 

U5a24: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U5839) 
U5a25: tmp2:= SHR_DSZ32(tmp8, 0x00000004) 
U5a26: tmm4:= unk_702(mm2, tmm4) 

U5a28: tmm7:= unk_6e1(tmm4, tmm5) 
U5a29: tmm3:= unk_702(mm2, tmm3) 
U5a2a: tmm0:= unk_6e1(tmm3, tmm6) 

U5a2c: tmm1:= unk_6c9(tmm0, tmm7) 
U5a2d: LFNCEWAIT-> mm0:= unk_689(tmm3, tmm1) !m2 SEQW GOTO U17ec
U5a2e: tmp14:= NOTAND_DSZ32(0x00000000, tmp14) 

U5a30: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp14, U5a31) SEQW GOTO U5b54
U5a31: tmp4:= ZEROEXT_DSZ32(0x00000007) 
U5a32: tmp10:= OR_DSZ32(rdx) 

U5a34: tmp13:= ZEROEXT_DSZ32(0x00005b54) SEQW GOTO U1982
U5a35: rbp:= ZEROEXT_DSZ32N(tmp0, rbp) !m1 
U5a36: LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_1b, mode=0x0a) !m0,m1 

U5a38: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_23, mode=0x0a) !m0,m1 
U5a39: rbx:= ZEROEXT_DSZ32N(tmp0, rbx) !m1 
U5a3a: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_2b, mode=0x0a) !m0,m1 

U5a3c: rdx:= ZEROEXT_DSZ32N(tmp0, rdx) !m1 
U5a3d: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_33, mode=0x0a) !m0,m1 
U5a3e: rcx:= ZEROEXT_DSZ32N(tmp0, rcx) !m1 

U5a40: tmp0:= LDZX_DSZN_ASZ32_SC1(rsp, SS, IMM_MACRO_3b, mode=0x0a) !m0,m1 
U5a41: rax:= ZEROEXT_DSZ32N(tmp0, rax) !m1 
U5a42: rsp:= ADD_DSZN(IMM_MACRO_43, rsp) !m0,m1 SEQW UEND0

U5a44: MSSTOP-> MJMPTARGET_INDIRECT_ASZ64( , tmp3) !m1 SEQW GOTO U3dfa
U5a45: tmp11:= SHR_DSZ64(tmp8, 0x00000020) 
U5a46: LFNCEWAIT-> WRITEURAM(tmp11, 0x000f, 32) 

U5a48: tmp5:= OR_DSZ32() 
U5a49: tmp3:= WRITEURAM(tmp8, 0x0007, 32) 
U5a4a: tmp0:= SHR_DSZ32(tmp3, 0x00000011) 

U5a4c: tmp0:= AND_DSZ32(0x00000007, tmp0) 
U5a4d: tmp3:= SHR_DSZ32(tmp3, 0x00000010) 
U5a4e: tmp3:= AND_DSZ32(0x00000001, tmp3) 

U5a50: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U5a51: tmp10:= READAFLAGS( , tmp10) !m2 
U5a52: tmp12:= OR_DSZ32() SEQW GOTO U4936

U5a54: tmp2:= OR_DSZ32(0x00000100, tmp2) SEQW GOTO U4622
U5a55: tmp8:= ZEROEXT_DSZ32(0x00000002) 
U5a56: tmp12:= SHR_DSZ64(tmp0, 0x00000020) 

U5a58: tmp13:= SAVEUIP(0x00, U5a5a) 
U5a59: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U01ba
U5a5a: tmp2:= SHR_DSZ32(tmp0, 0x00000010) 

U5a5c: tmp5:= MOVE_DSZ64(rsp, rsp) !m1 
U5a5d: tmp13:= ZEROEXT_DSZ64(tmp0) 
U5a5e: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U640d

U5a60: tmp8:= MOVETOCREG_DSZ64(tmp8, 0x6c5) 
U5a61: tmp1:= ZEROEXT_DSZ32(0x00000803, tmp8) 
U5a62: tmp14:= SAVEUIP(0x01, U4d51) !m0 SEQW GOTO U6420

U5a64: MSLOOP-> unk_256() !m1 SEQW GOTO U3dfa
FUN_ucode_0005a65:
U5a65: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 
U5a66: LFNCEWTMRK-> unk_dff() 

U5a68: TESTUSTATE( , SYS, !0x8000) !m0,m1 ? SEQW GOTO U5a6c
U5a69: tmp14:= READUIP_REGOVR(0x01) !m0 
U5a6a: tmp11:= MOVEFROMCREG_DSZ64( , 0x529) 

U5a6c: tmp6:= NOTAND_DSZ32(0x0000001f, tmp11) 
U5a6d: tmp12:= WRMSLOOPCTRFBR(0x00000003) 
U5a6e: tmp4:= READURAM( , 0x0010, 64) 

U5a70: LFNCEWAIT-> tmp4:= ZEROEXT_DSZ16(0x000001e6, tmp4) 
U5a71: tmp7:= unk_d6b(tmp6) 
U5a72: tmp6:= ZEROEXT_DSZ64(tmp6, tmp7) SEQW GOTO U1c8c

U5a74: tmp14:= SHR_DSZ64(tmp14, 0x00000020) SEQW GOTO U06ae
U5a75: tmp2:= OR_DSZ64(tmp1, tmp2) 
U5a76: tmp2:= AND_DSZ64(tmp2, tmp5) 

U5a78: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000020, U2711) !m1 
U5a79: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x00000001, U3208) !m1,m2 
U5a7a: LFNCEMARK-> tmp1:= SHR_DSZ64(tmp5, 0x00000019) 

U5a7c: tmp1:= AND_DSZ32(0x00000080, tmp1) 
U5a7d: tmp2:= SHR_DSZ32(tmp5, 0x00000008) 
U5a7e: tmp2:= AND_DSZ32(0x0000007f, tmp2) 

U5a80: tmp1:= OR_DSZ32(tmp1, tmp2) 
U5a81: PORTOUT_DSZ8_ASZ16_SC1(0x00c3,  , tmp1) !m2 
U5a82: PORTOUT_DSZ8_ASZ16_SC1(0x46bf,  , tmp1) !m2 SEQW GOTO U3208

U5a84: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0 SEQW GOTO U27b9
U5a85: MOVETOCREG_DSZ64(tmp5, 0x57f) !m2 
U5a86: tmp1:= MOVEFROMCREG_DSZ64( , 0x513) 

U5a88: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U60d2) !m1 
U5a89: tmp2:= NOTAND_DSZ64(0x00000fff, tmp1) 
U5a8a: tmp3:= NOTAND_DSZ32(tmp5, 0x00000800) 

U5a8c: tmp3:= SHR_DSZ32(tmp3, 0x0000000a) 
U5a8d: tmp5:= MOVEFROMCREG_DSZ64( , 0x51b) 
U5a8e: tmp5:= ZEROEXT_DSZ16( , tmp5) 

U5a90: CMPUJZ_DIRECT_NOTTAKEN(tmp5, U60d2, tmp2) !m1 
U5a91: tmp1:= NOTAND_DSZ64(0x00000002, tmp1) 
U5a92: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp1, 0x513, tmp3) !m2 SEQW GOTO U60d2

U5a94: tmp14:= SAVEUIP(0x01, U2b3d) !m0 SEQW GOTO U5cb9
U5a95: tmp4:= MOVEFROMCREG_DSZ64( , 0x51b) 
U5a96: LFNCEWAIT-> tmp2:= MOVEFROMCREG_DSZ64( , 0x525) 

U5a98: tmp0:= BT_DSZ64(tmp2, 0x00000006) 
U5a99: tmp0:= CMOVCC_DSZ64_CONDNB(tmp0, tmp4) 
U5a9a: tmp0:= NOTAND_DSZ64(0x00000fff, tmp2) 

U5a9c: tmp3:= XOR_DSZ64(tmp0, tmp3) 
U5a9d: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000001, U7639) !m1,m2 
U5a9e: tmp15:= AND_DSZ32(0x00000fff, tmp1) 

U5aa0: rax:= OR_DSZ64(tmp15, tmp0) 
U5aa1: rbx:= ZEROEXT_DSZ64(tmp1) 
U5aa2: rcx:= AND_DSZ32(0x00000078, tmp2) SEQW GOTO U17ec

U5aa4: SAVEUIP( , 0x01, U785a) !m0 SEQW GOTO U18d0
FUN_ucode_0005aa5:
U5aa5: tmp14:= READUIP_REGOVR(0x01) !m0 
U5aa6: tmp15:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x00000398, mode=0x1c, tmp13) 

U5aa8: tmp3:= SHR_DSZ16(tmp15, 0x00000008) 
U5aa9: tmp3:= AND_DSZ32(0x000000f0, tmp3) 
U5aaa: tmp2:= AND_DSZ32(0x000000f0, tmp4) 

U5aac: tmp2:= SUB_DSZ32(tmp2, tmp3) 
U5aad: tmp2:= MOVEMERGEFLGS_DSZ32(tmp3, tmp2) 
U5aae: tmp2:= CMOVCC_DSZ32_CONDNBE(tmp2, tmp4) 

U5ab0: tmp15:= AND_DSZ32(0x000000f0, tmp15) 
U5ab1: tmp15:= SUB_DSZ32(tmp2, tmp15) 
U5ab2: tmp3:= SELECTCC_DSZ32_CONDBE(tmp15, 0x00000002) SEQW URET1

U5ab4: LFNCEMARK-> tmm0:= unk_6ae(tmm0) !m2 SEQW GOTO U6360
U5ab5: rdx:= NOTAND_DSZ32(tmp0, tmp1) 
U5ab6: tmp1:= READURAM( , 0x005c, 64) 

U5ab8: tmp1:= SHR_DSZ32(tmp1, 0x00000006) 
U5ab9: tmp1:= NOTAND_DSZ32(tmp1, tmp10) 
U5aba: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U17ec) !m0,m2 

U5abc: tmp0:= READURAM( , 0x0006, 64) 
U5abd: tmp1:= SUB_DSZ16(0x00000040, tmp0) 
U5abe: tmp0:= MOVEMERGEFLGS_DSZ32(tmp0, tmp1) 

U5ac0: rax:= CMOVCC_DSZ16_CONDB(tmp0, 0x00000040) 
U5ac1: rbx:= CMOVCC_DSZ16_CONDNBE(tmp0, 0x00000040) 
U5ac2: rcx:= ZEROEXT_DSZ32(0x00000003) SEQW GOTO U17ec

U5ac4: tmm0:= unk_7c2(mm5, tmm0) SEQW GOTO U636a
U5ac5: LBSYNC(0x00000001) 
U5ac6: LFNCEMARK-> LBSYNC(0x00000001) 

U5ac8: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x007) !m2 
U5ac9: NOP 
U5aca: SYNCWAIT-> TESTUSTATE( , UCODE, 0x3000) ? SEQW URET1

U5acc: tmp15:= READURAM( , 0x0012, 64) 
U5acd: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000005, U0416) 
U5ace: SAVEUIP_REGOVR( , 0x01, U5ad0, 0xf9ba) !m0 SEQW GOTO U6bfd

U5ad0: SAVEUIP( , 0x00, U38d0) 
U5ad1: SAVEUIP( , 0x01, U0416) !m0 
U5ad2: tmpv0:= CONCAT_DSZ32(tmp1, tmp0) SEQW GOTO U334d

U5ad4: tmp13:= ZEROEXT_DSZ64(0x000043c4) SEQW GOTO U0344
U5ad5: tmp1:= ZEROEXT_DSZ32(0x00000002) 
U5ad6: tmp1:= CONCAT_DSZ16(0x00000249, tmp1) 

U5ad8: tmp1:= MOVEMERGEFLGS_DSZ32(tmp1, tmp8) 
U5ad9: rax:= CMOVCC_DSZ32_CONDNZ(tmp1, 0x00000001) 
U5ada: tmp1:= ZEROEXT_DSZ32(0x0000ffff) 

U5adc: tmp1:= CONCAT_DSZ16(0x0000003f, tmp1) 
U5add: tmp1:= MOVEMERGEFLGS_DSZ32(tmp1, tmp8) 
U5ade: rbx:= CMOVCC_DSZ32_CONDNZ(tmp1, 0x0000000f) 

U5ae0: tmp0:= ZEROEXT_DSZ32(0x00000007) 
U5ae1: tmp0:= CONCAT_DSZ16(0x00008000, tmp0) 
U5ae2: rcx:= SELECTCC_DSZ32_CONDNZ(tmp8, tmp0) SEQW GOTO U17ec

U5ae4: tmp14:= ZEROEXT_DSZ32(0x00002dee) SEQW GOTO U3dc2
U5ae5: tmp0:= unk_14d(tmp10) 
U5ae6: tmp10:= READURAM( , 0x0062, 64) 

U5ae8: LFNCEWAIT-> WRITEURAM(tmp10, 0x004b, 64) 
U5ae9: tmp5:= READURAM( , 0x0063, 64) 
U5aea: tmp10:= AND_DSZ64(0xfffffffffffff000, tmp5) 

U5aec: WRSEGFLD(tmp10) 
U5aed: tmp5:= AND_DSZ32(0x00000003, tmp5) 
U5aee: tmp5:= SHL_DSZ32(tmp5, 0x0000001c) 

U5af0: tmp10:= MOVEFROMCREG_DSZ64( , 0x701) 
U5af1: tmp10:= NOTAND_DSZ64(0x30000000, tmp10) 
U5af2: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp10, 0x701, tmp5) SEQW GOTO U60d2

U5af4: LFNCEWAIT-> tmp2:= ADD_DSZN(0x00000004, tmp4) !m1 SEQW GOTO U70e5
U5af5: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c0, 32) !m1 
U5af6: WRITEURAM(tmp0, 0x0057, 64) !m2 

U5af8: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c1, 32) !m1 
U5af9: WRITEURAM(tmp0, 0x0056, 64) !m2 
U5afa: tmp0:= READURAM( , 0x0063, 64) 

U5afc: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U5afd: tmp1:= SHL_DSZ32(tmp0, 0x00000008) 
U5afe: tmp2:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U5b00: tmp2:= BTR_DSZ32(tmp2, 0x00000008) 
U5b01: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp2, 0x6c3, tmp1) !m2 
U5b02: NOP SEQW GOTO U60d2

U5b04: mm0:= unk_6dd( , tmm2) SEQW GOTO U17ec
U5b05: tmp0:= ZEROEXT_DSZ64N(0xffffffffffffffff) !m1 
U5b06: tmp0:= SAR_DSZ64(tmp0, 0x00000020) 

U5b08: tmp5:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 
U5b09: tmp5:= OR_DSZ32(0x00ffffff, tmp5) 
U5b0a: tmp5:= OR_DSZ64(tmp0, tmp5) 

U5b0c: LFNCEWAIT-> tmp3:= LDZX_DSZ16_ASZ32_SC1(tmp2, mode=0x18) 
U5b0d: tmp4:= LDZX_DSZN_ASZ32_SC1(tmp2, 0x00000002, mode=0x18) !m1 
U5b0e: unk_25c( , tmp4) 

U5b10: tmp4:= AND_DSZ64(tmp5, tmp4) 
U5b11: WRSEGFLD(tmp3) !m0 
U5b12: LFNCEMARK-> WRSEGFLD(tmp4) !m0 SEQW GOTO U17ec

U5b14: tmm7:= unk_53f(tmm1) SEQW GOTO U0404
U5b15: tmp1:= READURAM( , 0x002c, 64) 
U5b16: tmp7:= SHR_DSZ32(tmp1, 0x00000010) 

U5b18: tmp8:= SHR_DSZ32(tmp1, 0x00000008) 
U5b19: tmp8:= AND_DSZ32(0x000000ff, tmp8) 
U5b1a: tmp5:= AND_DSZ32(0x000000ff, tmp1) 

U5b1c: tmp11:= READURAM( , 0x006b, 64) 
U5b1d: WRITEURAM( , 0x00000000, 0x0007, 32) !m2 
U5b1e: tmp3:= READURAM( , 0x006c, 64) 

U5b20: tmp15:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U5b21: tmp6:= ADD_DSZN(tmp15, tmp3) !m1 
U5b22: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x072) !m0,m2 SEQW GOTO U4e65

U5b24: tmp13:= MOVEFROMCREG_DSZ64( , 0x287, 32) !m1 SEQW GOTO U1b0c
U5b25: tmp5:= OR_DSZ64(tmpv0) 
U5b26: tmp8:= MOVEFROMCREG_DSZ64( , 0x0b1) 

U5b28: BTUJNB_DIRECT_NOTTAKEN(tmp8, 0x00000005, U5b29) !m2 SEQW GOTO U2d21
U5b29: MOVETOCREG_DSZ64( , 0x00000000, 0x109) !m2 
U5b2a: MOVETOCREG_DSZ64( , 0x00000000, 0x10a) !m2 

U5b2c: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000008, U2d0e) !m1 
U5b2d: tmp1:= MOVEFROMCREG_DSZ64( , 0x102) 
U5b2e: tmp1:= SHR_DSZ32(tmp1, 0x00000007) 

U5b30: WRITEURAM(tmp1, 0x002b, 32) !m2 
U5b31: MOVETOCREG_DSZ64( , 0x00000000, 0x107) !m2 
U5b32: tmp13:= SAVEUIP(0x00, U2d20) SEQW GOTO U5db6

FUN_ucode_0005b34:
U5b34: tmpv0:= ZEROEXT_DSZ32() SEQW GOTO U5dcc
U5b35: tmp5:= AND_DSZ8(0x00000001, tmp4) 
U5b36: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp5, U5b39) 

U5b38: mm0:= FMOV( , tmm0) !m0 
U5b39: tmp2:= AND_DSZ32(0x00000007, tmp9) 
U5b3a: tmp3:= SHL_DSZ8(0x00000001, tmp2) 

U5b3c: tmp4:= AND_DSZ8(tmp3, tmp4) 
U5b3d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U5b40) 
U5b3e: mm0:= FMOV( , tmm0) !m0 

U5b40: tmm5:= FMOV( , 0x00004001) !m0 
U5b41: mm0:= FMOV( , 0x00000001) !m0 
U5b42: mm0:= FMOV( , tmm5) !m0 SEQW GOTO U1948

U5b44: SFENCE() SEQW GOTO U06ae
U5b45: tmp7:= LDZX_DSZ32_ASZ32_SC1(tmp11, 0x00000018, mode=0x18) 
U5b46: tmp3:= AND_DSZ32(0xffff0000, tmp7) 

U5b48: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U2711) 
FUN_ucode_0005b49:
U5b49: tmm5:= unk_707(mm7) 
U5b4a: SYNCWTMRK-> tmm6:= unk_691(tmm5) 

U5b4c: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U38fa
U5b4d: SAVEUIP( , 0x00, U00d2) 
U5b4e: tmp3:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 

U5b50: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000003f, U38fc) !m0,m1,m2 
U5b51: tmp3:= unk_205() !m1 
U5b52: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U38fc) SEQW URET0

U5b54: rbx:= ZEROEXT_DSZ32(tmp14) SEQW GOTO U17ec
U5b55: tmp13:= LDZX_DSZ32_ASZ32_SC1(tmp4) 
U5b56: tmp13:= SHL_DSZ32(tmp13, 0x00000002) 

U5b58: tmp0:= SUB_DSZ32(0x00000286, tmp13) 
U5b59: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000286, tmp0) 
U5b5a: tmp13:= CMOVCC_DSZ32_CONDB(tmp0, tmp13) 

U5b5c: tmp0:= SUB_DSZ32(0x0003efc4, tmp13) 
U5b5d: tmp0:= MOVEMERGEFLGS_DSZ32(0x0003efc4, tmp0) 
U5b5e: tmp13:= CMOVCC_DSZ32_CONDNBE(tmp0, tmp13) 

U5b60: tmp13:= NOTAND_DSZ32(0x0000003f, tmp13) 
U5b61: tmp13:= ADD_DSZ32(0x00000004, tmp13) 
U5b62: WRITEURAM(tmp13, 0x008e, 64) !m2 SEQW URET1

U5b64: tmp14:= ZEROEXT_DSZ32(0x00003dd6) SEQW GOTO U0434
U5b65: tmp10:= unk_6a0() 
U5b66: tmm2:= unk_6e1(tmm2, tmm0) 

U5b68: tmp11:= unk_6a0() 
U5b69: tmm3:= unk_6c9(tmm0, tmm3) 
U5b6a: tmp1:= SUB_DSZ32(0x0000ffb9, tmp0) 

U5b6c: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U5b6d) SEQW GOTO U6cc2
U5b6d: tmp3:= ZEROEXT_DSZ32(0x00000010) 
U5b6e: tmm5:= unk_700(mm3) !m2 

U5b70: tmp10:= unk_6a0() 
U5b71: tmm3:= unk_6e1(tmm2, tmm0) 
U5b72: LFNCEMARK-> tmm7:= unk_6a1(tmm3, tmm1) !m2 SEQW GOTO U01a2

U5b74: tmp12:= unk_6a0() SEQW GOTO U6d39
U5b75: tmp15:= SHR_DSZ32(tmp14, 0x00000004) 
U5b76: tmp14:= CONCAT_DSZ32(tmp14, tmp15) 

U5b78: tmp15:= ZEROEXT_DSZ32(0x0000e904) 
U5b79: tmp15:= CONCAT_DSZ32(0x41ff0100, tmp15) 
U5b7a: BTUJNB_DIRECT_NOTTAKEN(tmp15, U7639, tmp14) !m1,m2 

U5b7c: tmp15:= ZEROEXT_DSZ32(0xffffe90c) 
U5b7d: tmp15:= CONCAT_DSZ32(0x41ff01ff, tmp15) 
U5b7e: tmp15:= BT_DSZ64(tmp15, tmp14) 

U5b80: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00000001) 
U5b81: tmp15:= OR_DSZ32(0x00000002, tmp15) 
U5b82: tmp14:= SHR_DSZ64(tmp14, 0x0000001e) SEQW GOTO U18c6

U5b84: LFNCEWAIT-> tmp11:= unk_e6b(tmp0, tmp2) !m1,m2 SEQW GOTO U48be
U5b85: SAVEUIP( , 0x00, U0fc9) 
FUN_ucode_0005b86:
U5b86: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2dd) !m1 

U5b88: tmp15:= ZEROEXT_DSZ32(0xffffffffffffffff) 
U5b89: MOVETOCREG_DSZ64(tmp15, 0x00b) 
U5b8a: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000120) 

U5b8c: SYNCFULL-> MOVETOCREG_SHR_DSZ64(tmp4, 0x00000024, 0x6c5) 
U5b8d: MOVETOCREG_SHR_DSZ64(tmp4, 0x00000020, 0x01c) 
U5b8e: MOVETOCREG_SHR_DSZ64(tmp4, 0x00000030, 0x070) 

U5b90: tmp4:= ZEROEXT_DSZ32(tmp4) 
U5b91: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000100) 
U5b92: MOVETOCREG_DSZ64(tmp0, 0x067) SEQW URET0

U5b94: MOVETOCREG_DSZ64( , 0x00000000, 0x000) SEQW GOTO U2048
U5b95: tmp0:= MOVEFROMCREG_DSZ64( , 0x38e, 32) !m1 
U5b96: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64(tmp0, 0x00000018, 0x38e) !m1 

U5b98: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U5b9e
U5b99: MOVETOCREG_DSZ64( , 0x00000000, 0x609) 
U5b9a: MOVETOCREG_DSZ64( , 0x00000000, 0x60a) 

U5b9c: MOVETOCREG_DSZ64( , 0x00000000, 0x10d) 
U5b9d: MOVETOCREG_DSZ64( , 0x00000000, 0x10e) 
U5b9e: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x0000001d, U5ba0) !m2 SEQW GOTO U5ba2

U5ba0: tmp0:= MOVEFROMCREG_DSZ64( , 0x105) 
U5ba1: MOVETOCREG_BTS_DSZ64(tmp0, 0x105) 
U5ba2: tmp14:= ZEROEXT_DSZ16(0x00004d5c) SEQW GOTO U49a0

U5ba4: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000008, 0x38a) !m1 SEQW GOTO U60d2
U5ba5: mm0:= unk_72a(tmm1) 
U5ba6: tmp0:= AND_DSZ32(0x00000001, tmp0) 

U5ba8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2b01) 
U5ba9: LFNCEWAIT-> tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U5baa: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 

U5bac: tmp4:= OR_DSZ16(0x00000200, tmp4) 
U5bad: LFNCEMARK-> tmp8:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000028, 0x48c) !m2 
U5bae: tmp6:= AND_DSZ32(0x00000008, tmp5) 

U5bb0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, U3759) 
U5bb1: tmp14:= MOVEFROMCREG_DSZ64( , 0x01a) 
U5bb2: LFNCEWAIT-> tmm0:= FMOV( , tmm0) SEQW GOTO U2981

U5bb4: tmp1:= ZEROEXT_DSZ32(0x00000120) SEQW GOTO U2fa0
FUN_ucode_0005bb5:
U5bb5: tmp13:= CONCAT_DSZ16(0x000000c0) 
U5bb6: tmp13:= OR_DSZ32(tmp7, tmp13) 

U5bb8: SYNCFULL-> MOVETOCREG_DSZ64(tmp13, tmp1) !m2 
U5bb9: tmp13:= ADD_DSZ32(0x00000002, tmp1) 
U5bba: tmp13:= MOVEFROMCREG_DSZ64( , tmp13) 

U5bbc: tmp9:= READURAM( , 0x005a, 64) !m2 
U5bbd: tmp13:= AND_DSZ64(tmp9, tmp13) 
U5bbe: tmp13:= SUB_DSZ64(tmp10, tmp13) 

U5bc0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp13, tmp14) 
U5bc1: tmp13:= OR_DSZ32(tmp7, tmp3) 
U5bc2: SYNCFULL-> MOVETOCREG_DSZ64(tmp13, tmp1) !m2 SEQW GOTO U304e

U5bc4: tmm5:= unk_741() !m2 SEQW GOTO U4129
U5bc5: tmp0:= MOVEFROMCREG_DSZ64( , 0x609) 
U5bc6: tmp4:= SHR_DSZ64(tmp0, 0x00000039) 

U5bc8: tmp2:= AND_DSZ32(0x00000040, tmp4) 
U5bc9: tmp2:= SHL_DSZ64(tmp2, 0x00000004) 
U5bca: tmp4:= NOTAND_DSZ32(tmp4, 0x00000051) 

U5bcc: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U5bd2) 
U5bcd: tmp0:= ZEROEXT_DSZ32(0x0000005a) 
U5bce: tmp0:= SHL_DSZ64(tmp0, 0x00000039) 

U5bd0: tmp0:= OR_DSZ64(0x00000006, tmp0) 
U5bd1: MOVETOCREG_DSZ64(tmp1, 0x60a) !m2 
U5bd2: MOVETOCREG_OR_DSZ64(tmp0, 0x609, tmp2) !m2 

U5bd4: SIGEVENT( , 0x00000002) SEQW GOTO U079d
U5bd5: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000001, 0x2db) !m1 
U5bd6: tmp11:= PORTIN_DSZ32_ASZ16_SC1(0x00d4) !m2 

U5bd8: tmp10:= PORTIN_DSZ64_ASZ16_SC1(0x00d8) !m2 
U5bd9: BTUJNB_DIRECT_NOTTAKEN(tmp11, 0x0000001c, U03e6) 
U5bda: tmp12:= AND_DSZ32(0x000000ff, tmp11) 

U5bdc: tmp7:= SUB_DSZ32(0x00000006, tmp12) 
U5bdd: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp7, U03e4) 
U5bde: tmp6:= SHR_DSZ32(tmp11, 0x00000008) 

U5be0: tmp6:= AND_DSZ32(0x0000ffff, tmp6) 
U5be1: tmp7:= SHL_DSZ32(tmp12, 0x00000002) 
U5be2: tmp7:= ADD_DSZ32(0x00002162, tmp7) 

U5be4: SYNCFULL-> UJMP( , tmp7) 
U5be5: NOP SEQW SAVEUIP0 U5be6SEQW GOTO U60b8
U5be6: WRITEURAM( , 0x00000000, 0x0007, 32) 

U5be8: tmp0:= READURAM( , 0x0053, 64) 
U5be9: tmp0:= NOTAND_DSZ64(0x00000008, tmp0) 
U5bea: WRITEURAM(tmp0, 0x0053, 32) 

U5bec: tmp4:= READURAM( , 0x008d, 64) 
U5bed: PORTOUT_DSZ32_ASZ16_SC1(0x0010,  , tmp4) !m2 
U5bee: SAVEUIP_REGOVR(0x01, U5bf0, 0x0210) !m0 SEQW GOTO U281d

U5bf0: tmp2:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000001) SEQW GOTO U5efc
U5bf1: tmp1:= SAR_DSZ64(tmp1, 0x00000010) 
U5bf2: tmp1:= SUB_DSZ64(tmp3, tmp1) 

U5bf4: tmp1:= SHL_DSZ64(tmp1, 0x00000010) 
U5bf5: tmp1:= SAR_DSZ64(tmp1, 0x00000010) 
U5bf6: tmp3:= SUB_DSZ32(tmp3, tmp5) 

U5bf8: tmp2:= BT_DSZ64(tmp5, 0x00000034) 
U5bf9: tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp2) 
U5bfa: tmp2:= SHR_DSZ64(tmp5, 0x0000003f) 

U5bfc: tmp2:= SHL_DSZ64(tmp2, 0x0000003f) 
U5bfd: tmp5:= CMOVCC_DSZ64_CONDB(tmp1, tmp3) 
U5bfe: tmp5:= BTR_DSZ64(tmp5, 0x0000003f) 

U5c00: tmp5:= OR_DSZ64(tmp2, tmp5) SEQW URET0
probe_mode_force_smm_xlat:
U5c01: tmp0:= CONCAT_DSZ16(0x00000004) SEQW GOTO U4fd8
U5c02: tmp0:= READURAM( , 0x0022, 64) !m2 

U5c04: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U5c05) !m2 SEQW GOTO U59c2
U5c05: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U59d2) !m2 
U5c06: tmp0:= unk_13f(tmp0) 

U5c08: tmp7:= MOVEMERGEFLGS_DSZ64(tmp7, tmp0) SEQW GOTO U217c
U5c09: tmp2:= AND_DSZ32(0x00000010, tmp2) 
U5c0a: tmp2:= SHL_DSZ32(tmp2, 0x00000013) 

U5c0c: tmp5:= OR_DSZ64(tmp2, tmp5) 
U5c0d: tmp5:= OR_DSZ64(0x00000080, tmp5) 
U5c0e: TESTUSTATE( , UCODE, !0x0200) !m0 ? SEQW GOTO U5c11

U5c10: tmp5:= XOR_DSZ64(0x00001080, tmp5) 
U5c11: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x00c0) !m2 
U5c12: tmp2:= AND_DSZ32(0x00800002, tmp1) 

U5c14: tmp2:= SHL_DSZ64(tmp2, 0x0000000f) 
U5c15: tmp5:= OR_DSZ64(tmp2, tmp5) 
U5c16: tmp1:= AND_DSZ32(0x00000010, tmp1) 

U5c18: tmp1:= SHR_DSZ32(tmp1, 0x00000001) SEQW GOTO U3056
U5c19: tmp2:= SHR_DSZ32(tmp5, 0x0000000a) 
U5c1a: tmp2:= AND_DSZ32(0x00007800, tmp2) 

U5c1c: tmp1:= AND_DSZ32(0x00000001, tmp5) 
U5c1d: tmp1:= SHL_DSZ32(tmp1, 0x00000002) 
U5c1e: tmp2:= OR_DSZ32(tmp1, tmp2) 

U5c20: tmp1:= AND_DSZ32(0x00000002, tmp5) 
U5c21: tmp1:= SHL_DSZ32(tmp1, 0x00000009) 
U5c22: ROVR<- tmp2:= OR_DSZ32(tmp1, tmp2) SEQW SAVEUIP1 U5c24SEQW GOTO U02ba

U5c24: tmp1:= PORTIN_DSZ16_ASZ16_SC1(0x00c0) !m2 
U5c25: tmp1:= NOTAND_DSZ32(0x00007c04, tmp1) 
U5c26: tmp1:= OR_DSZ32(tmp2, tmp1) 

U5c28: PORTOUT_DSZ16_ASZ16_SC1(0x00c0,  , tmp1) !m2 SEQW GOTO U56f8
U5c29: tmp2:= SELECTCC_DSZ32_CONDNZ(tmp2, 0x00000080) 
U5c2a: tmp1:= XOR_DSZ32(tmp2, tmp1) 

U5c2c: tmp5:= OR_DSZ64(tmp1, tmp5) 
U5c2d: tmp1:= SHR_DSZ64(tmp5, 0x00000018) 
U5c2e: tmp1:= AND_DSZ32(0x00001800, tmp1) 

U5c30: tmp2:= BT_DSZ32(tmp1, 0x0000000c) 
U5c31: tmp1:= ADD_DSZ32(0x00000800, tmp1) 
U5c32: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00001800) 

U5c34: tmp1:= NOTAND_DSZ32(tmp2, tmp1) 
U5c35: tmp5:= OR_DSZ64(tmp1, tmp5) 
U5c36: tmp1:= BT_DSZ64(tmp5, 0x00000031) 

U5c38: tmp1:= SELECTCC_DSZ32_CONDB(tmp1, 0x00038000) SEQW GOTO U3056
FUN_ucode_0005c39:
U5c39: tmp13:= READUIP_REGOVR(0x00) 
U5c3a: tmp7:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp14) 

U5c3c: tmp4:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp14, 0x00000050) 
U5c3d: tmp15:= SHL_DSZ32(tmp4, 0x00000004) 
U5c3e: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, U5f15, tmp7) !m2 

U5c40: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000054) 
U5c41: tmp15:= SUB_DSZ32(0x0000ffff, tmp15) 
U5c42: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 

U5c44: tmp15:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp14, 0x00000052) 
U5c45: tmp15:= AND_DSZ16(0x0000f8ff, tmp15) 
U5c46: tmp15:= SUB_DSZ16(0x000000f3, tmp15) 

U5c48: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) SEQW URET0
U5c49: NOP SEQW GOTO U688d
U5c4a: tmp0:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U5c4c: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000008, U5c4d) !m2 SEQW GOTO U1b0c
U5c4d: WRITEURAM( , 0x00000000, 0x0067, 64) 
U5c4e: tmp0:= ZEROEXT_DSZ16(0x00001b0c) 

U5c50: tmp0:= CONCAT_DSZ16(0x00000083, tmp0) 
U5c51: WRITEURAM(tmp0, 0x0007, 32) SEQW GOTO U3a44
U5c52: tmp2:= ZEROEXT_DSZ32(0x00000001) 

U5c54: SAVEUIP_REGOVR(0x01, U5c55, 0x0032) !m0 SEQW GOTO U07b5
U5c55: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 
U5c56: tmp0:= SUB_DSZ32(tmp2, tmp0) 

U5c58: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp0, tmp1) 
U5c59: tmp4:= ADD_DSZ32(tmp1, tmp4) SEQW GOTO U1ea6
U5c5a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x7fe) !m2 

U5c5c: SAVEUIP_REGOVR(0x00, U5c5d, 0x0007) SEQW GOTO U02fa
U5c5d: tmp7:= RDSEGFLD(CS, FLGS) 
U5c5e: MOVETOCREG_DSZ64(tmp7, 0x7f5) 

U5c60: tmp15:= ZEROEXT_DSZ32(0x00000034) 
U5c61: tmp3:= ZEROEXT_DSZ32(0x00000028) SEQW GOTO U6436
send_op_data_pcu_mailbox:
U5c62: tmpv2:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U5c64: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmpv2, 0x0000001f, U5c65) !m0,m2 SEQW GOTO U5c62
U5c65: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmpv1) !m2 
FUN_ucode_0005c66:
U5c66: tmpv0:= BTS_DSZ32(tmpv0, 0x0000001f) 

U5c68: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmpv0) !m2 
U5c69: SYNCFULL-> tmpv1:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U5c6a: BTUJNB_DIRECT_NOTTAKEN(tmpv1, 0x0000001f, U1cbe) !m0,m2 SEQW GOTO U5c69

U5c6c: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp11, tmp4) SEQW GOTO U639a
U5c6d: tmp15:= SUB_DSZ32(0x00000003, tmp5) 
U5c6e: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp15, U5f15) 

U5c70: tmp15:= SUB_DSZ32(0x00000003, tmp5) 
U5c71: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00001000) 
U5c72: tmp15:= AND_DSZ32(tmp10, tmp15) 

U5c74: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U5f15) 
U5c75: tmp15:= SUB_DSZ32(0x00000001, tmp5) 
U5c76: tmp14:= unk_201(0x00000001, tmp15) 

U5c78: tmp15:= SETCC_CONDZ(tmp15) 
U5c79: CMPUJZ_DIRECT_NOTTAKEN(tmp14, 0x00000000, U5f15) !m2 
U5c7a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U5f15) 

U5c7c: LFNCEMARK-> tmp3:= OR_DSZ32(tmp3, tmp15) SEQW GOTO U1638
FUN_ucode_0005c7d:
U5c7d: TESTUSTATE( , VMX, 0x0001) !m2 ? SEQW URET1
U5c7e: tmp0:= ZEROEXT_DSZ32(0x00002001) 

U5c80: tmp11:= READURAM( , 0x0043, 64) 
U5c81: tmp1:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U5c89
U5c82: tmp15:= READURAM( , 0x004c, 64) 

U5c84: tmp15:= BT_DSZ64(tmp15, 0x00000037) 
U5c85: tmp11:= CMOVCC_DSZ64_CONDB(tmp15, tmp11) 
U5c86: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00020000) 

U5c88: tmp0:= OR_DSZ32(tmp15, tmp0) 
U5c89: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x0000003f, U611c) !m0,m1 
U5c8a: MOVETOCREG_DSZ64(tmp10, 0x7fe) !m2 

U5c8c: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U1f91) !m2 SEQW GOTO U4e82
FUN_ucode_0005c8d:
U5c8d: tmp13:= READUIP_REGOVR(0x00) 
U5c8e: tmp7:= SHR_DSZ32(tmp0, 0x00000001) 

U5c90: tmp7:= AND_DSZ64(0x00000070, tmp7) 
U5c91: tmp7:= ADD_DSZ64(tmp8, tmp7) 
U5c92: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, tmp7) 

U5c94: tmp9:= BTR_DSZ32(tmp9, tmp0) 
U5c95: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, tmp7, tmp9) 
U5c96: tmp9:= ADD_DSZ32(0x00000070, tmp8) 

U5c98: tmp7:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, tmp9) 
U5c99: CMPUJNZ_DIRECT_NOTTAKEN(tmp7, 0x00000000, U4b39) 
U5c9a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U304e) 

U5c9c: tmp9:= SUB_DSZ8(0x00000010, tmp9) SEQW GOTO U5c98
U5c9d: TESTUSTATE( , UCODE, 0x0400) ? SEQW URET1
FUN_ucode_0005c9e:
U5c9e: tmpv2:= MOVEFROMCREG_DSZ64( , 0x529) 

FUN_ucode_0005ca0:
U5ca0: LFNCEMARK-> tmpv1:= READURAM( , 0x0052, 64) 
U5ca1: tmpv0:= NOTAND_DSZ64(0x0000001f, tmpv2) 
U5ca2: tmpv0:= SUB_DSZ64(tmpv1, tmpv0) 

U5ca4: tmpv0:= SELECTCC_DSZ32_CONDNZ(tmpv0, 0x00000001) 
U5ca5: LFNCEWAIT-> tmpv1:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U5ca6: tmpv1:= BT_DSZ32(tmpv1, 0x00000007) 

U5ca8: tmpv1:= MOVEMERGEFLGS_DSZ32(0x00000001, tmpv1) 
U5ca9: tmpv0:= CMOVCC_DSZ32_CONDNB(tmpv1, tmpv0) 
U5caa: tmpv0:= OR_DSZ32(0x000000b4, tmpv0) 

U5cac: LFNCEMARK-> MOVETOCREG_DSZ64(0x00000002, tmpv0) !m2 SEQW URET0
U5cad: rdi:= READURAM( , 0x0022, 64) !m2 SEQW GOTO U217c
FUN_ucode_0005cae:
U5cae: tmp15:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U5cb0: MOVETOCREG_BTR_DSZ64(tmp15, 0x00000003, 0x6c3) !m0,m2 SEQW SAVEUIP1 U5cb1SEQW GOTO U2074
U5cb1: tmp15:= MOVEFROMCREG_DSZ64( , 0x105) 
U5cb2: LFNCEWAIT-> MOVETOCREG_OR_DSZ64(tmp15, 0x00000004, 0x105) 

U5cb4: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x4c18) !m2 
U5cb5: tmp15:= OR_DSZ32(0x00000001, tmp15) 
U5cb6: SYNCMARK-> PORTOUT_DSZ32_ASZ16_SC1(0x4c18,  , tmp15) !m2 SEQW URET0

U5cb8: tmp7:= READURAM( , 0x0000, 64) !m2 SEQW GOTO U20d6
U5cb9: TESTUSTATE( , UCODE, 0x3000) ? SEQW URET1
U5cba: LFNCEWAIT-> tmp3:= MOVEFROMCREG_DSZ64( , 0x01c) 

U5cbc: tmp9:= AND_DSZ32(0x0000000f, tmp3) 
U5cbd: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U06ae) 
U5cbe: tmp9:= READURAM( , 0x0012, 64) 

U5cc0: BTUJNB_DIRECT_NOTTAKEN(tmp9, 0x0000000a, U06ae) !m0 
U5cc1: tmp5:= ZEROEXT_DSZ32(0x0000040a) 
U5cc2: tmp5:= BTS_DSZ32(tmp5, 0x00000010) 

U5cc4: SAVEUIP_REGOVR( , 0x01, U5cc5, 0xc859) !m0 SEQW GOTO U6bfd
U5cc5: tmpv0:= AND_DSZ64(0x0000000f, tmp3) 
U5cc6: SAVEUIP( , 0x01, U2abd) !m0 

U5cc8: SAVEUIP( , 0x00, U38d0) SEQW GOTO U334d
U5cc9: tmp7:= LDZX_DSZ32_ASZ32_SC1(tmp11, 0x00000018, mode=0x18) 
U5cca: tmp3:= AND_DSZ32(0xffff0000, tmp7) 

U5ccc: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U2711) 
U5ccd: tmm5:= unk_707(mm7) 
U5cce: LDHINT_BUFFER_ASZ32_SC1(tmp11, 0x000018c0) 

U5cd0: LFNCEMARK-> tmm6:= unk_691(tmm5) 
U5cd1: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U5d45
U5cd2: SAVEUIP( , 0x00, U2509) 

U5cd4: tmp3:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 
U5cd5: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000003f, U5d46) !m0,m2 
U5cd6: tmp3:= unk_205() !m1 

U5cd8: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U5d46) SEQW URET0
U5cd9: tmp7:= READURAM( , 0x0001, 64) !m2 SEQW GOTO U20d6
FUN_ucode_0005cda:
U5cda: tmp15:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U5cdc: MOVETOCREG_OR_DSZ64(tmp15, 0x00000008, 0x6c3) !m2 SEQW SAVEUIP1 U5cddSEQW GOTO U2074
U5cdd: tmp15:= MOVEFROMCREG_DSZ64( , 0x105) 
U5cde: tmp15:= NOTAND_DSZ64(0x00004004, tmp15) 

U5ce0: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp15, 0x105) 
U5ce1: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x4c18) !m2 
U5ce2: tmp15:= NOTAND_DSZ32(0x00000001, tmp15) SEQW GOTO U5cb6

U5ce4: tmp0:= READURAM( , 0x0008, 64) !m2 SEQW GOTO U2746
U5ce5: tmp9:= LDZX_DSZ64_ASZ32_SC1(tmp8, mode=0x18) 
U5ce6: tmp10:= LDZX_DSZ64_ASZ32_SC1(tmp8, 0x00000008, mode=0x18) 

U5ce8: LFNCEWAIT-> WRITEURAM(tmp10, 0x004b, 64) 
U5ce9: tmp10:= NOTAND_DSZ64(0x00000fff, tmp9) 
U5cea: tmp10:= SHL_DSZ64(tmp10, 0x00000010) 

U5cec: tmp10:= SAR_DSZ64(tmp10, 0x00000010) 
U5ced: WRSEGFLD(tmp10) 
U5cee: tmp10:= MOVEFROMCREG_DSZ64( , 0x701) 

U5cf0: tmp9:= AND_DSZ32(0x00000003, tmp9) 
U5cf1: tmp9:= SHL_DSZ32(tmp9, 0x0000001c) 
U5cf2: tmp10:= NOTAND_DSZ64(0x30000000, tmp10) 

U5cf4: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp10, 0x701, tmp9) SEQW URET1
U5cf5: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U24f9
U5cf6: tmp12:= WRMSLOOPCTRFBR(0x0000000f) 

U5cf8: tmp11:= ADD_DSZN(0x00000080, tmp11) !m1 
U5cf9: tmp11:= ADD_DSZN(0x00000080, tmp11) !m1 SEQW GOTO U24fc
U5cfa: tmp1:= ZEROEXT_DSZ32() 

U5cfc: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U5d00
U5cfd: tmpv1:= READURAM( , 0x004c, 64) 
U5cfe: BTUJB_DIRECT_NOTTAKEN(tmpv1, U1f90, tmpv0) !m2 

U5d00: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U1cbe
U5d01: tmpv1:= READURAM( , 0x0043, 64) 
U5d02: BTUJB_DIRECT_NOTTAKEN(tmpv1, U4e81, tmpv0) SEQW URET1

U5d04: LFNCEWAIT-> WRITEURAM(tmp1, 0x0008, 64) !m2 SEQW GOTO U217c
U5d05: tmp0:= READURAM( , 0x0077, 64) 
U5d06: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000022, U5d12) !m0,m2 

U5d08: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x50dc) !m2 
U5d09: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U5d12) !m2 
U5d0a: tmp0:= MOVEFROMCREG_DSZ64( , 0x575) 

U5d0c: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000000b, U5d12) !m0,m2 
U5d0d: LFNCEMARK-> tmp0:= MOVEFROMCREG_DSZ64( , 0x562) 
U5d0e: tmp0:= NOTAND_DSZ64(0x00000fff, tmp0) 

U5d10: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, 0x00000018, mode=0x01) 
U5d11: CMPUJNZ_DIRECT_NOTTAKEN(tmp4, 0x00000000, U1b41) !m2 
U5d12: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 

U5d14: tmp5:= BTS_DSZ32(0x00000000, 0x00000010) SEQW GOTO U2814
U5d15: tmp15:= READURAM( , 0x0020, 64) 
U5d16: tmp15:= BT_DSZ64(tmp15, 0x00000001) 

U5d18: tmp15:= SELECTCC_DSZ64_CONDNB(tmp15, 0x00003b00) 
U5d19: tmp15:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp15, 0x00000020) 
U5d1a: SYNCFULL-> UFLOWCTRL( , tmp15, URET1) 

U5d1c: tmpv1:= MOVEFROMCREG_DSZ64( , 0x562) 
U5d1d: tmpv1:= NOTAND_DSZ64(0x00000fff, tmpv1) 
U5d1e: tmpv0:= LDPPHYS_DSZ32_ASZ64_SC1(tmpv1, mode=0x01) !m2 

U5d20: tmpv2:= ZEROEXT_DSZ32(0x00000001) 
U5d21: STADPPHYS_DSZ32_ASZ64_SC1(tmpv1, mode=0x01,  , tmpv2) !m2 
U5d22: SYNCFULL-> CMPUJZ_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U2455) !m1 

U5d24: MSSTOP-> NOP SEQW GOTO U5d1e
U5d25: tmp15:= SUB_DSZ64(0x00000009, rcx) 
U5d26: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp15, U2711) 

U5d28: tmp5:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U5d29: tmp2:= READURAM( , 0x0011, 64) 
U5d2a: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000270, mode=0x01, tmp2) 

U5d2c: MOVETOCREG_DSZ64(tmp2, 0x7fe) !m2 
U5d2d: tmp0:= SHL_DSZ32(rcx, 0x0000000b) 
U5d2e: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmp3, 0x752, tmp0) !m2 

U5d30: tmp15:= unk_20f() !m1 
U5d31: tmp4:= MOVEMERGEFLGS_DSZ64(tmp4, tmp15) 
U5d32: r64dst:= CMOVCC_DSZ64_CONDZ(tmp4, r64dst) 

U5d34: SYNCFULL-> MOVETOCREG_DSZ64(tmp5, 0x7fe) !m2 SEQW GOTO U17ec
U5d35: tmm2:= unk_6a7(tmm1, tmm0) 
U5d36: mm6:= unk_76a(tmm2) 

U5d38: SAVEUIP( , 0x00, U5b04) 
FUN_ucode_0005d39:
U5d39: tmp6:= AND_DSZ32(0x00000007, tmp6) 
U5d3a: tmp2:= SHR_DSZ32(tmp6, 0x00000002) 

U5d3c: tmp3:= AND_DSZ32(0x00000002, tmp6) 
U5d3d: tmp3:= SHL_DSZ32(tmp3, 0x00000002) 
U5d3e: tmp2:= OR_DSZ32(tmp3, tmp2) 

U5d40: tmp3:= AND_DSZ32(0x00000001, tmp6) 
U5d41: tmp3:= SHL_DSZ32(tmp3, 0x00000001) 
U5d42: tmp2:= OR_DSZ32(tmp3, tmp2) 

U5d44: tmm5:= unk_741(mm2) !m2 SEQW URET0
U5d45: TESTUSTATE( , SYS, UST_ADDR_SIZE_64BIT) !m1 ? SEQW GOTO U2509
U5d46: tmp12:= WRMSLOOPCTRFBR(0x0000000f) 

U5d48: tmp11:= ADD_DSZN(0x00000080, tmp11) !m1 
U5d49: tmp11:= ADD_DSZN(0x00000080, tmp11) !m1 SEQW GOTO U250c
U5d4a: tmp14:= READUIP_REGOVR(0x01) !m0 

U5d4c: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U5cf5
U5d4d: SAVEUIP( , 0x00, U24f9) 
U5d4e: tmp7:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 

U5d50: BTUJB_DIRECT_NOTTAKEN(tmp7, 0x0000003f, U5cf6) !m0,m2 
U5d51: tmp7:= unk_205() !m1 
U5d52: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U5cf6) SEQW URET0

U5d54: SAVEUIP_REGOVR(0x01, U5d55, 0x0000) !m0 SEQW GOTO U2b15
U5d55: SIGEVENT( , 0x000000b2) SEQW UEND2
U5d56: tmp1:= MOVEFROMCREG_DSZ64( , 0x701) 

U5d58: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000010, U5d59) !m2 SEQW GOTO U5d5e
U5d59: tmp0:= READURAM( , 0x005c, 64) 
U5d5a: tmp0:= OR_DSZ32(0x00001000, tmp0) 

U5d5c: WRITEURAM(tmp0, 0x005c, 32) 
U5d5d: WRITEURAM( , 0x00000000, 0x004b, 64) 
U5d5e: SIGEVENT( , 0x00000015) SEQW GOTO U079d

U5d60: tmp14:= MOVEFROMCREG_DSZ64( , 0x000) SEQW SAVEUIP0 U5d61SEQW GOTO U694e
U5d61: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000015, 0x06d) !m2 
U5d62: tmp0:= ZEROEXT_DSZ32(0x00000002) 

U5d64: SAVEUIP( , 0x01, U079d) !m0 SEQW GOTO U0c69
U5d65: SYNCFULL-> tmp1:= MOVEFROMCREG_DSZ64( , 0x2bc, 32) !m1 
U5d66: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000002, 0x2bc) !m0,m1 

U5d68: tmp1:= XOR_DSZ32(0x00000001, tmp2) 
U5d69: tmp2:= SHR_DSZ32(tmp2, 0x0000001e) 
U5d6a: tmp2:= AND_DSZ32(0x00000001, tmp2) 

U5d6c: tmp1:= AND_DSZ32(tmp1, tmp2) 
U5d6d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U35fd) 
U5d6e: tmp1:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 

U5d70: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x2c4) !m1,m2 
U5d71: tmp1:= READURAM( , 0x0070, 64) 
U5d72: tmp1:= BTS_DSZ64(tmp1, 0x00000001) 

U5d74: WRITEURAM(tmp1, 0x0070, 64) !m2 SEQW GOTO U35fd
U5d75: tmp0:= ZEROEXT_DSZ32() 
U5d76: tmp1:= ZEROEXT_DSZ32() 

U5d78: tmp2:= ADD_DSZ64(0xfffffffffffffe40, tmp0) 
U5d79: tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp2) 
U5d7a: tmp1:= ADD_DSZ8(tmp2, tmp1) 

U5d7c: tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0) 
U5d7d: tmp1:= ADD_DSZ8(tmp2, tmp1) 
U5d7e: tmp3:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp1) 

U5d80: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0, tmp3) 
U5d81: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp1, tmp2) 
U5d82: tmp0:= ADD_DSZ8(0x00000001, tmp0) 

U5d84: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U2b45) SEQW GOTO U5d78
U5d85: tmp0:= ZEROEXT_DSZ32(IMM_MACRO_ALIAS_MSLOOPCTR) !m0 
U5d86: WRITEURAM(tmp0, 0x0108, 64) !m2 

U5d88: tmp0:= AND_DSZ32(0x000000ff, tmp1) 
U5d89: SYNCFULL-> UFLOWCTRL( , tmp0, MSLOOPCTR) 
U5d8a: tmp0:= SHR_DSZ32(tmp1, 0x00000008) 

U5d8c: tmp1:= AND_DSZ32(0x0000000f, tmp1) 
U5d8d: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U20d4) !m1 
U5d8e: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000010, U20dc) !m1 

U5d90: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000001, U2742) !m1 
U5d91: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000011, U5c02) !m2 
U5d92: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000012, U5cad) !m0,m2 

U5d94: WRITEURAM(rdi, 0x0022, 64) !m2 SEQW GOTO U217c
U5d95: tmp1:= PINTMOVDTMM2I_DSZ64(tmm1) 
U5d96: tmp3:= SUB_DSZ64(tmp1, rdx) 

U5d98: tmp4:= OR_DSZ64(tmp3, tmp4) 
U5d99: tmp3:= MOVEMERGEFLGS_DSZ32(0x00000008) !m2 
U5d9a: GENARITHFLAGS(tmp3, tmp4) !m2 

U5d9c: tmp0:= CMOVCC_DSZ64_CONDZ(rbx, tmp0) !m2 
U5d9d: tmp1:= CMOVCC_DSZ64_CONDZ(rcx, tmp1) !m2 
U5d9e: tmm2:= unk_744(mm0) 

U5da0: tmm3:= unk_744(mm1) 
U5da1: tmm4:= MOVHLPS(tmm2, tmm3) 
U5da2: tmp12:= unk_c1e(tmp2) !m1,m2 

U5da4: rax:= CMOVCC_DSZ64_CONDNZ(tmp0, rax) !m2 
U5da5: rdx:= CMOVCC_DSZ64_CONDNZ(tmp1, rdx) !m2 SEQW UEND0
U5da6: TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U3210

U5da8: SYNCWAIT-> UJMPCC_DIRECT_NOTTAKEN_CONDP(tmp8, U4809) 
U5da9: tmp13:= SAVEUIP(0x00, U4422) 
U5daa: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U08e6

U5dac: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x00000008, mode=0x01,  , tmp5) SEQW URET0
U5dad: TESTUSTATE( , SYS, UST_VMX_OP_DIS) !m1 ? SEQW GOTO U5db2
U5dae: LFNCEWAIT-> tmp6:= READURAM( , 0x0079, 64) 

U5db0: tmp6:= unk_163(0x00000000, tmp6) 
U5db1: MOVETOCREG_SHR_DSZ64(tmp6, 0x00000008, 0x79d) 
U5db2: SAVEUIP( , 0x00, U75b5) SEQW GOTO U23d1

U5db4: MOVETOCREG_BTS_DSZ64( , 0x0000000a, 0x00b) !m0,m2 SEQW SAVEUIP1 U5db5SEQW GOTO U2012
U5db5: tmp13:= SAVEUIP(0x00, U5a64) 
U5db6: LFNCEMARK-> tmp9:= ZEROEXT_DSZ32(0x00000109) 

U5db8: tmp10:= MOVEFROMCREG_DSZ64( , 0x101) SEQW GOTO U3c22
U5db9: tmp3:= READURAM( , 0x0056, 64) 
U5dba: tmp13:= ZEROEXT_DSZ32(0x00000002) 

U5dbc: SAVEUIP_REGOVR(0x01, U5dbd, 0x0056) !m0 SEQW GOTO U1856
U5dbd: MOVEINSERTFLGS_DSZ32() !m2 
U5dbe: tmp2:= SUB_DSZ64(tmp12, tmp3) 

U5dc0: tmp2:= MOVEMERGEFLGS_DSZ64(0xffffffffffffffff, tmp2) 
U5dc1: tmp3:= CMOVCC_DSZ64_CONDZ(tmp2, tmp3) 
U5dc2: LFNCEWTMRK-> WRITEURAM(tmp3, 0x0056, 64) 

U5dc4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000278, tmp12, 0x00000000) 
U5dc5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b0, tmp12, 0x00000000) 
U5dc6: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d8, tmp12, 0x00000000) 

U5dc8: tmp5:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U5dc9: BTUJB_DIRECT_NOTTAKEN(tmp5, 0x00000039, U57b9) !m2 SEQW GOTO U008e
U5dca: tmpv0:= READURAM( , 0x0043, 64) 

FUN_ucode_0005dcc:
U5dcc: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U38c8
U5dcd: tmpv1:= READURAM( , 0x004c, 64) 
U5dce: tmpv2:= CONCAT_DSZ16(0x00000038) 

U5dd0: tmpv2:= CONCAT_DSZ32(0x00000008, tmpv2) 
U5dd1: tmpv1:= NOTAND_DSZ64(tmpv2, tmpv1) 
U5dd2: tmpv0:= OR_DSZ64(tmpv1, tmpv0) SEQW GOTO U38c8

U5dd4: tmp1:= MOVEFROMCREG_DSZ64( , 0x565) SEQW SAVEUIP1 U5dd5SEQW GOTO U043c
U5dd5: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x0000000a, U2711) !m0,m1 
U5dd6: tmp1:= MOVEFROMCREG_DSZ64( , 0x105) 

U5dd8: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp1, 0x0000000f, 0x105) !m0,m2 SEQW GOTO U60d2
FUN_ucode_0005dd9:
U5dd9: tmp14:= READUIP_REGOVR(0x01) !m0 
U5dda: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000f0, mode=0x1c, tmpv1) 

U5ddc: tmpv3:= NOTAND_DSZ32(0x0000001f, tmp10) 
U5ddd: tmp10:= MOVEMERGEFLGS_DSZ64(tmp10, tmpv3) 
U5dde: tmp10:= CMOVCC_DSZ32_CONDZ(tmp10, 0x0000001f) 

U5de0: tmp10:= SHL_DSZ64(tmp10, 0x0000002a) 
U5de1: tmpv2:= OR_DSZ64(tmp10, tmpv2) 
U5de2: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000e8, mode=0x1c, tmpv1) 

U5de4: tmp10:= AND_DSZ32(0x0000001f, tmp10) 
U5de5: tmp10:= SELECTCC_DSZ32_CONDNZ(tmpv3, tmp10) 
U5de6: tmp10:= SHL_DSZ64(tmp10, 0x00000025) 

U5de8: tmpv2:= OR_DSZ64(tmp10, tmpv2) 
U5de9: LFNCEMARK-> WRITEURAM(tmpv2, 0x011f, 64) SEQW URET1
FUN_ucode_0005dea:
U5dea: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U1cbe

U5dec: tmpv0:= READURAM( , 0x0012, 64) 
U5ded: tmpv1:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U5dee: tmpv0:= SHR_DSZ32(tmpv0, 0x0000001a) 

U5df0: tmpv0:= AND_DSZ32(0x00000020, tmpv0) 
U5df1: SYNCFULL-> MOVETOCREG_OR_DSZ64(tmpv1, 0x6c3, tmpv0) SEQW URET1
U5df2: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U54ad

U5df4: tmp0:= MOVEFROMCREG_DSZ64( , 0x3ff, 32) !m1 
U5df5: tmp0:= OR_DSZ32(0x30000000, tmp0) 
U5df6: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3ff, 32) !m1 

U5df8: tmp0:= OR_DSZ32(0xc0000040, tmp0) 
U5df9: MOVETOCREG_DSZ64(tmp0, 0x3ff, 32) !m1,m2 SEQW GOTO U54ad
FUN_ucode_0005dfa:
U5dfa: tmp12:= READURAM( , 0x0057, 64) 

U5dfc: TESTUSTATE( , VMX, 0x1000) !m2 ? SEQW SAVEUIP0 U5dfd? SEQW GOTO U00e9
U5dfd: tmp4:= MOVEFROMCREG_DSZ64( , 0x513) 
U5dfe: tmp5:= ZEROEXT_DSZ32(0x000000ff) 

U5e00: tmp5:= CONCAT_DSZ32(tmp5, 0xfffffffffffff000) 
U5e01: tmp4:= AND_DSZ64(tmp5, tmp4) 
U5e02: tmp14:= READUIP_REGOVR(0x01) !m0 

U5e04: tmp3:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp4, 0x00000080, mode=0x1c) SEQW GOTO U0c72
U5e05: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x0b5) !m2 
FUN_ucode_0005e06:
U5e06: tmpv1:= TESTUSTATE( , UCODE, 0x0400) ? SEQW URET1

U5e08: tmpv0:= READUIP_REGOVR(0x01) !m0 
U5e09: tmp14:= CONCAT_DSZ32(tmp14, tmpv0) 
U5e0a: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x0b1) 

U5e0c: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000002, U0416) !m0 
U5e0d: tmpv0:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U5e0e: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x0000000a, U6b44) !m0,m1 

U5e10: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmpv3, U6b28) 
U5e11: tmpv0:= MOVEFROMCREG_DSZ64( , 0x000) 
U5e12: tmpv0:= AND_DSZ32(0x0000003f, tmpv0) 

U5e14: tmpv0:= SUB_DSZ32(0x0000000a, tmpv0) 
U5e15: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv0, U6b2e) SEQW GOTO U6b29
U5e16: tmp0:= ZEROEXT_DSZ32(0x0000001d) 

U5e18: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U5e1d
U5e19: tmp2:= READURAM( , 0x0043, 64) 
U5e1a: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000017, U590c) !m0,m2 

U5e1c: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U05fc
U5e1d: tmp0:= OR_DSZ32(0x00020000, tmp0) 
U5e1e: tmp2:= READURAM( , 0x004c, 64) 

U5e20: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000017, U590c) !m0,m2 SEQW GOTO U05fc
FUN_ucode_0005e21:
U5e21: tmp4:= SHR_DSZ64(tmp6, 0x00000012) 
U5e22: tmp4:= AND_DSZ32(0x0000003f, tmp4) 

U5e24: tmp1:= ZEROEXT_DSZ32(0x00000003) 
U5e25: tmp5:= unk_2e6(tmp1, tmp4) 
U5e26: tmp4:= unk_361(tmp5) 

U5e28: tmp4:= SETCC_CONDNZ(tmp4) 
U5e29: tmp4:= ADD_DSZ8(tmp5, tmp4) 
U5e2a: tmp4:= unk_2e4(tmp1, tmp4) 

U5e2c: tmp4:= AND_DSZ32(0x0000003f, tmp4) 
U5e2d: tmp4:= SHL_DSZ32(tmp4, 0x00000009) 
U5e2e: tmp5:= MOVEFROMCREG_DSZ64( , 0x401) 

U5e30: tmp5:= NOTAND_DSZ32(0x00007e00, tmp5) 
U5e31: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmp5, 0x401, tmp4) SEQW URET0
U5e32: SAVEUIP_REGOVR(0x01, U5e34, 0x000e) !m0 SEQW GOTO U02ba

U5e34: SYNCWAIT-> tmp14:= PORTIN_DSZ32_ASZ16_SC1(0x9708) !m2 
U5e35: tmp14:= BTS_DSZ32(tmp14, 0x00000000) 
U5e36: PORTOUT_DSZ32_ASZ16_SC1(0x9708,  , tmp14) !m2 

U5e38: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
U5e39: LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(0x0000000b) SEQW GOTO U079e
U5e3a: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U192a) 

U5e3c: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U192a
U5e3d: SAVEUIP( , 0x01, U4714) !m0 
U5e3e: tmp0:= MOVEFROMCREG_DSZ64( , 0x574) 

U5e40: tmp0:= NOTAND_DSZ64(0x00000fff, tmp0) 
U5e41: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 
U5e42: tmp2:= PORTIN_DSZ64_ASZ16_SC1(0x4cd8) !m2 

U5e44: tmp3:= PORTIN_DSZ64_ASZ16_SC1(0x4ce0) !m2 
U5e45: tmp3:= NOTAND_DSZ64(0x00000200, tmp3) SEQW URET1
U5e46: SAVEUIP_REGOVR(0x00, U5e48, 0x0000) SEQW GOTO U0725

U5e48: tmp0:= MOVEFROMCREG_DSZ64( , 0x7bb) 
U5e49: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000008, 0x7bb) !m2 
U5e4a: MOVETOCREG_DSZ64( , 0x00000000, 0x2f1, 32) !m1,m2 

U5e4c: PORTOUT_DSZ64_ASZ16_SC1(0x4620,  , 0x00000000) !m2 
U5e4d: SAVEUIP( , 0x01, U0f65) !m0 SEQW GOTO U2174
FUN_ucode_0005e4e:
U5e4e: tmpv0:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 

U5e50: BTUJB_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U1cbe) !m2 SEQW SAVEUIP0 U5e51SEQW GOTO U02b2
U5e51: tmpv0:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U5e52: BTUJB_DIRECT_NOTTAKEN(tmpv0, 0x00000000, U5e59) !m2 

U5e54: tmpv0:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U5e55: tmpv0:= BTS_DSZ32(tmpv0, 0x00000012) 
U5e56: PORTOUT_DSZ32_ASZ16_SC1(0x50d8,  , tmpv0) !m2 

U5e58: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x208) !m0,m1,m2 
U5e59: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 SEQW GOTO U06c6
U5e5a: tmp13:= OR_DSZ32(tmp15, tmp13) 

U5e5c: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp13, U5e5d) SEQW GOTO U040c
U5e5d: SYNCMARK-> UFLOWCTRL( , tmp14, URET1) 
U5e5e: tmp13:= READURAM( , 0x005c, 64) 

U5e60: tmp13:= BTR_DSZ32(tmp13, 0x0000000c) 
U5e61: WRITEURAM(tmp13, 0x005c, 32) 
U5e62: tmp15:= READURAM( , 0x004b, 64) 

U5e64: tmp13:= MOVEMERGEFLGS_DSZ32(0x00000001, tmp13) 
U5e65: tmp15:= CMOVCC_DSZ64_CONDNB(tmp13, tmp15) 
U5e66: SYNCWAIT-> WRITEURAM(tmp15, 0x004b, 64) SEQW GOTO U040c

fit_process_error:
U5e68: WRITEURAM(tmp11, 0x000e, 64) !m2 SEQW SAVEUIP0 U5e69SEQW GOTO U60b8
U5e69: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x00c0) !m2 
U5e6a: tmp1:= BTR_DSZ32(tmp1, 0x00000003) 

U5e6c: PORTOUT_DSZ8_ASZ16_SC1(0x00c0,  , tmp1) !m2 SEQW GOTO U65f2
U5e6d: tmp3:= AND_DSZ32(0x00000007, tmp3) 
U5e6e: tmp0:= NOTAND_DSZ32(0x00000038, tmp10) 

U5e70: tmp0:= MOVEMERGEFLGS_DSZ64(tmp0, tmp3) 
U5e71: tmp10:= CMOVCC_DSZ32_CONDNZ(tmp0, tmp10) 
U5e72: tmp0:= OR_DSZ32(tmp10, tmp15) 

U5e74: tmp0:= OR_DSZ32(tmp9, tmp0) 
U5e75: tmm5:= unk_707(mm0) 
U5e76: LFNCEMARK-> tmm6:= unk_691(tmm5) 

U5e78: tmp3:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U5e79: tmp3:= BT_DSZ32(tmp3, 0x0000000a) 
U5e7a: LFNCEWAIT-> tmp1:= MOVEMERGEFLGS_DSZ64(0x00000019, tmp3) 

U5e7c: tmp1:= CMOVCC_DSZ32_CONDNB(tmp1, 0x0000004d) 
U5e7d: SIGEVENT( , tmp1) SEQW GOTO U079d
U5e7e: SAVEUIP( , 0x01, U76ec) !m0 

FUN_ucode_0005e80:
U5e80: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U044c
U5e81: tmp5:= AND_DSZ32(0x0000000f, tmp5) 
U5e82: tmp9:= AND_DSZ32(0x00000001, tmp5) 

U5e84: tmp6:= MOVEMERGEFLGS_DSZ64(tmp6, tmp9) 
U5e85: tmp9:= CMOVCC_DSZ64_CONDNZ(tmp6, tmp11) 
U5e86: tmp9:= AND_DSZ32(0x00000001, tmp9) 

U5e88: tmp4:= OR_DSZ64(tmp9, tmp10) 
U5e89: tmp4:= AND_DSZ64(tmp4, tmp5) 
U5e8a: tmp3:= AND_DSZ64(tmp6, tmp5) 

U5e8c: LFNCEWTMRK-> CMPUJNZ_DIRECT_NOTTAKEN(tmp4, U5914, tmp3) !m2 SEQW URET1
U5e8d: SAVEUIP_REGOVR(0x01, U5e8e, 0x0010) !m0 SEQW GOTO U5dea
U5e8e: tmp0:= READURAM( , 0x0053, 64) 

U5e90: WRITEURAM( , 0x00000000, 0x0053, 64) !m2 
U5e91: tmp15:= READURAM( , 0x0078, 64) 
U5e92: WRITEURAM(tmp15, 0x0007, 32) !m2 

U5e94: tmp15:= BT_DSZ32(tmp15, 0x00000017) 
U5e95: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp15, tmp15) SEQW GOTO U3a81
U5e96: tmp1:= ZEROEXT_DSZ32(0x00000003) 

U5e98: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U6382
U5e99: MOVETOCREG_DSZ64( , 0x00000000, 0x6c0) 
U5e9a: tmp12:= READURAM( , 0x0057, 64) 

U5e9c: WRITEURAM(tmp12, 0x0056, 64) !m2 
U5e9d: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b8, tmp12) 
U5e9e: SYNCFULL-> WRITEURAM(tmp0, 0x0057, 64) !m2 

U5ea0: tmp0:= ZEROEXT_DSZ32(0x00000023) 
U5ea1: ROVR<- tmp0:= BTS_DSZ32(tmp0, 0x0000001e) SEQW SAVEUIP1 U5ea2
U5ea2: SAVEUIP( , 0x00, U02f2) 

U5ea4: SAVEUIP( , 0x01, U1f91) !m0 SEQW GOTO U02ea
U5ea5: SAVEUIP( , 0x00, U3872) 
FUN_ucode_0005ea6:
U5ea6: tmm4:= unk_624(tmm0, tmm0) 

U5ea8: tmm5:= unk_624(tmm1, tmm1) 
U5ea9: tmp0:= PINTMOVDTMM2I_DSZ32(tmm4) 
U5eaa: tmp1:= PINTMOVDTMM2I_DSZ32(tmm5) 

U5eac: tmp0:= SHR_DSZ32(tmp0, 0x00000002) 
U5ead: tmp2:= AND_DSZ32(0x00000007, tmp0) 
U5eae: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 

U5eb0: tmp8:= AND_DSZ32(0x0000000f, tmp1) 
U5eb1: tmp2:= OR_DSZ32(tmp8, tmp2) 
U5eb2: tmm0:= unk_72a(tmm0) 

U5eb4: tmp8:= SHL_DSZ32(tmp8, 0x00000004) 
U5eb5: tmp2:= OR_DSZ32(tmp8, tmp2) SEQW URET0
U5eb6: TESTUSTATE( , SYS, 0x4000) !m1 ? SEQW GOTO U4e75

U5eb8: tmp1:= SUB_DSZ32(0x0000004e, tmp8) 
U5eb9: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp8, U4586) 
U5eba: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U3188) 

U5ebc: tmp1:= SUB_DSZ32(0x0000004f, tmp8) 
U5ebd: tmp2:= ZEROEXT_DSZ32(0x00008418) 
U5ebe: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U318c) SEQW GOTO U2711

U5ec0: tmp0:= ZEROEXT_DSZ32(0x00000002) SEQW SAVEUIP0 U5ec1SEQW GOTO U60aa
U5ec1: WRITEURAM( , 0x00000000, 0x0053, 64) 
U5ec2: tmp14:= READURAM( , 0x004e, 64) 

U5ec4: tmp6:= READURAM( , 0x002c, 64) 
U5ec5: SAVEUIP( , 0x00, U0414) SEQW GOTO U2bcc
U5ec6: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) 

U5ec8: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U3e06
U5ec9: tmp0:= READURAM( , 0x0011, 64) 
U5eca: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000004c8, mode=0x01, tmp0) 

U5ecc: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000009, U5ecd) !m2 SEQW GOTO U3e06
U5ecd: tmp0:= MOVE_DSZ32(0x00000002) 
U5ece: tmp0:= BTS_DSZ32(tmp0, 0x00000010) 

U5ed0: LFNCEWAIT-> tmp4:= READURAM( , 0x001f, 64) !m2 
U5ed1: tmp4:= NOTAND_DSZ32(0x00000007, tmp4) 
U5ed2: tmp4:= OR_DSZ32(tmp4, tmp5) 

U5ed4: WRITEURAM(tmp4, 0x001f, 32) !m2 SEQW GOTO U1f90
rc4_decrypt:
U5ed5: tmp0:= ADD_DSZ8(0x00000001, tmp0) 
U5ed6: tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0) 

U5ed8: tmp1:= ADD_DSZ8(tmp2, tmp1) 
U5ed9: tmp3:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp1) 
U5eda: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp0, tmp3) 

U5edc: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp1, tmp2) 
U5edd: tmp2:= ADD_DSZ8(tmp3, tmp2) 
U5ede: tmp2:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp7, tmp2) 

U5ee0: tmp3:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp5, mode=0x01) 
U5ee1: tmp3:= XOR_DSZ8(tmp2, tmp3) 
U5ee2: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp5, mode=0x01,  , tmp3) 

U5ee4: tmp5:= ADD_DSZ64(0x00000001, tmp5) 
U5ee5: tmp6:= SUB_DSZ32(0x00000001, tmp6) 
U5ee6: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp6, tmp8) SEQW GOTO U5ed5

FUN_ucode_0005ee8:
U5ee8: NOP SEQW SAVEUIP1 U5ee9SEQW GOTO U0bc9
U5ee9: tmp7:= PORTIN_DSZ32_ASZ16_SC1(0x0018) !m2 
U5eea: tmp7:= SUB_DSZ32(0x00000001, tmp7) 

U5eec: tmp7:= SUB_DSZ32(tmp5, tmp7) 
U5eed: PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , tmp7) !m2 
U5eee: PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 SEQW GOTO U304e

U5ef0: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U37d2
U5ef1: tmp1:= unk_207(0x00180000) 
U5ef2: tmp1:= AND_DSZ32(tmp1, tmp7) 

U5ef4: tmp1:= SUB_DSZ32(0x00180000, tmp1) 
U5ef5: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2711) 
U5ef6: MOVETOCREG_DSZ64(tmp7, 0x7fe) !m2 

U5ef8: BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000011, U1eea) !m2 SEQW GOTO U1eea
U5ef9: MOVETOCREG_BTS_DSZ64( , 0x00000003, 0x29d) !m0,m1,m2 
U5efa: tmp2:= ZEROEXT_DSZ32() 

U5efc: tmp1:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 
U5efd: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000003, U2bc8) !m0,m1 
U5efe: tmp0:= ZEROEXT_DSZ32(0x00002bc6) 

U5f00: WRITEURAM(tmp0, 0x000d, 32) !m2 
U5f01: tmp2:= OR_DSZ32(0x000000c0, tmp2) 
U5f02: tmp1:= READURAM( , 0x0035, 64) 

U5f04: tmp1:= BT_DSZ32(tmp1, 0x00000007) 
U5f05: tmp1:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00000002) 
U5f06: MOVETOCREG_OR_DSZ64(tmp2, 0x6c5, tmp1) !m2 

U5f08: tmp0:= READURAM( , 0x005c, 64) 
U5f09: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U112e) !m2 
U5f0a: tmp14:= ZEROEXT_DSZ32(0x0000112e) SEQW GOTO U1ac5

U5f0c: SAVEUIP_REGOVR(0x01, U5f0d, 0x0003) !m0 SEQW GOTO U2931
U5f0d: LFNCEMARK-> tmp5:= READURAM( , 0x0070, 64) 
U5f0e: tmp5:= MOVETOCREG_BTS_DSZ64(tmp5, 0x0000000a, 0x2c4) !m0,m1,m2 

U5f10: WRITEURAM(tmp5, 0x0070, 32) !m2 
U5f11: tmp1:= CONCAT_DSZ8(0x00000002, tmp2) 
U5f12: tmp4:= unk_203( , 0x00000001) 

U5f14: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp4, U4f1d) SEQW GOTO U1a36
U5f15: tmp1:= ZEROEXT_DSZ32() 
U5f16: tmp0:= ZEROEXT_DSZ32(0x00000021) 

U5f18: tmp12:= READURAM( , 0x000b, 64) 
U5f19: tmp0:= BTS_DSZ32(tmp0, 0x0000001f) 
U5f1a: WRITEURAM(tmp12, 0x0057, 64) !m2 

U5f1c: WRITEURAM(tmp0, 0x0005, 32) !m2 
U5f1d: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000023c, tmp12, tmp0) 
U5f1e: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000280, tmp12, tmp1) 

U5f20: unk_eff() 
U5f21: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U57bd
U5f22: tmp0:= OR_DSZ32(0x00100000, tmp0) 

U5f24: MOVETOCREG_OR_DSZ64( , 0x00000008, 0x63a) !m2 
U5f25: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x63e) !m0,m2 
U5f26: LFNCEWTMRK-> unk_dff() SEQW GOTO U57c1

U5f28: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U5f2e
FUN_ucode_0005f29:
U5f29: tmp13:= READUIP_REGOVR(0x00) 
U5f2a: tmp6:= READURAM( , 0x0011, 64) 

U5f2c: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000004c8, mode=0x01, tmp6) 
U5f2d: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp6, U07de, tmp4) 
U5f2e: TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW URET0

U5f30: NOP SEQW GOTO U2711
U5f31: unk_256() !m1 
FUN_ucode_0005f32:
U5f32: MOVETOCREG_DSZ64( , 0x00000000, 0x7f0) !m2 

U5f34: MOVETOCREG_DSZ64( , 0x00000000, 0x101) !m2 
U5f35: tmp10:= ZEROEXT_DSZ32(0x0000007f) 
U5f36: MOVETOCREG_DSZ64(tmp10, 0x102) !m2 

U5f38: MOVETOCREG_DSZ64( , 0x00000000, 0x0b1) !m2 
U5f39: WRITEURAM( , 0x00000000, 0x0052, 64) !m2 
U5f3a: MOVETOCREG_DSZ64( , 0x00000000, 0x080) !m2 

U5f3c: MOVETOCREG_DSZ64( , 0x00000000, 0x081) !m2 
U5f3d: MOVETOCREG_DSZ64( , 0x00000000, 0x082) !m2 
U5f3e: MOVETOCREG_DSZ64( , 0x00000000, 0x083) !m2 

U5f40: tmp10:= READURAM( , 0x003a, 64) 
U5f41: tmp10:= BTS_DSZ64(tmp10, 0x00000020) 
U5f42: LFNCEMARK-> WRITEURAM(tmp10, 0x003a, 64) !m2 SEQW URET1

U5f44: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U6afd
U5f45: SAVEUIP( , 0x01, U6afd) !m0 
U5f46: tmpv2:= READURAM( , 0x0057, 64) 

U5f48: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U5f4a
U5f49: tmpv2:= ZEROEXT_DSZ64(tmp0) 
U5f4a: tmpv2:= ZEROEXT_DSZ8(0x00000073, tmpv2) 

U5f4c: SAVEUIP( , 0x00, U0674) SEQW GOTO U76d8
U5f4d: tmp0:= READURAM( , 0x003f, 64) 
U5f4e: MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1,m2 

U5f50: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000018, 0x2da) !m1,m2 
U5f51: LFNCEMARK-> MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x008) !m2 
U5f52: SAVEUIP( , 0x01, U5e21) !m0 SEQW SAVEUIP0 U5f54SEQW GOTO U6c86

U5f54: tmp14:= READURAM( , 0x0007, 64) 
U5f55: tmp14:= BT_DSZ32(tmp14, 0x00000017) 
U5f56: tmp14:= CMOVCC_DSZ32_CONDB(tmp14, 0x00003a81) 

U5f58: tmp13:= ZEROEXT_DSZ32() 
U5f59: tmp5:= SUB_DSZ8(0x00000001, tmp11) 
U5f5a: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp5, U5f5c) SEQW GOTO U23fc

U5f5c: tmp13:= SELECTCC_DSZ32_CONDNZ(tmp5, 0x00000002) 
U5f5d: MOVETOCREG_DSZ64(tmp13, 0x2f2, 32) !m1 
U5f5e: SAVEUIP( , 0x00, U3c60) SEQW GOTO U3048

U5f60: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U3154
U5f61: tmp0:= READURAM( , 0x005c, 64) 
U5f62: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U1925) !m2 

U5f64: tmp0:= ZEROEXT_DSZ32(0x00003148) 
U5f65: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000180,  , tmp0) 
U5f66: tmp8:= MOVEFROMCREG_DSZ64( , 0x574) 

U5f68: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 
U5f69: STADSTGBUF_DSZ64_ASZ16_SC1(0x000000a0,  , tmp1) SEQW GOTO U0434
U5f6a: tmp2:= RDSEGFLD(UNK_SEG_09, SEL) 

U5f6c: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U07fe
U5f6d: tmp2:= RDSEGFLD(SS_USERM, SEL) 
U5f6e: tmp1:= RDSEGFLD(GS, SEL) 

U5f70: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_fb, mode=0x0a, tmp1) !m0,m1 
U5f71: tmp1:= RDSEGFLD(FS, SEL) 
U5f72: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_f3, mode=0x0a, tmp1) !m0,m1 

U5f74: tmp1:= RDSEGFLD(DS, SEL) 
U5f75: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_eb, mode=0x0a, tmp1) !m0,m1 
U5f76: tmp1:= RDSEGFLD(ES, SEL) 

U5f78: STAD_DSZN_ASZ32_SC1(rsp, SS,  , IMM_MACRO_e3, mode=0x0a, tmp1) !m0,m1 
U5f79: rsp:= ADD_DSZN(IMM_MACRO_e3, rsp) !m0,m1 SEQW GOTO U3408
FUN_ucode_0005f7a:
U5f7a: tmp3:= READURAM( , 0x003b, 64) 

U5f7c: tmp1:= SAVEUIP_REGOVR(0x00, U5f7d, 0x0012) SEQW GOTO U3044
U5f7d: tmp3:= ADD_DSZ64(tmp3, tmp1) 
U5f7e: tmp2:= SUB_DSZ64(tmp3, tmp5) 

U5f80: tmp3:= ADD_DSZ64(tmp2, tmp1) 
U5f81: tmp3:= CMOVCC_DSZ64_CONDNB(tmp3, 0xffffffffffffffff) 
U5f82: tmp3:= SELECTCC_DSZ64_CONDB(tmp2, tmp3) 

U5f84: tmp2:= READURAM( , 0x0087, 64) 
U5f85: tmp2:= ZEROEXT_DSZ32(tmp2) 
U5f86: tmp3:= unk_156( , tmp3) 

U5f88: tmp3:= unk_266(tmp2, tmp3) 
U5f89: unk_154( , tmp3) SEQW URET1
U5f8a: tmp12:= TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U408c

U5f8c: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U5f8d: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, mode=0x01) 
U5f8e: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, mode=0x01, tmp0) 

U5f90: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(rsp, 0x00000008, mode=0x01, tmp0) 
U5f91: MOVETOCREG_DSZ64(tmp1, 0x7fe) !m2 
U5f92: unk_13f(tmp1) !m2 

U5f94: LFNCEWAIT-> rsp:= unk_a6f(rsp, tmp0) SEQW GOTO U1936
U5f95: tmm0:= unk_480(tmm2, tmm3) 
U5f96: tmp5:= SHR_DSZ64(tmp2, 0x00000020) 

U5f98: tmp2:= OR_DSZ32(tmp2, tmp5) 
U5f99: tmp2:= OR_DSZ32(tmp2, tmp3) 
U5f9a: mm3:= unk_72a(tmm2) 

U5f9c: tmm3:= unk_743(mm3, tmm3) 
U5f9d: tmm4:= unk_482(tmm3) 
U5f9e: tmp2:= CMOVCC_DSZ32_CONDZ(tmp2, 0x00000001) 

U5fa0: tmm6:= unk_743(mm2, tmm0) 
U5fa1: tmm6:= unk_482(tmm6, tmm4) 
U5fa2: tmm0:= unk_53f(tmm6, tmm0) 

U5fa4: mm5:= unk_7e8(tmm0) 
U5fa5: tmp5:= OR_DSZ16(0x00000002, tmp5) 
U5fa6: tmm0:= unk_782(mm5, tmm0) SEQW URET1

U5fa8: tmpv0:= TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U65aa
U5fa9: tmpv1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U5faa: tmpv1:= BT_DSZ64(tmpv1, 0x0000000d) 

U5fac: tmpv1:= SELECTCC_DSZ32_CONDNB(tmpv1, 0x00000100) 
U5fad: tmpv0:= OR_DSZ64(tmpv1, tmpv0) 
U5fae: tmpv1:= READURAM( , 0x0043, 64) 

U5fb0: tmpv1:= BT_DSZ64(tmpv1, 0x00000033) 
U5fb1: tmpv1:= SELECTCC_DSZ32_CONDB(tmpv1, 0x00000100) 
U5fb2: tmpv0:= OR_DSZ64(tmpv1, tmpv0) SEQW GOTO U65aa

U5fb4: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U2711
U5fb5: tmp13:= ZEROEXT_DSZ32(0x00000001) 
U5fb6: LFNCEWAIT-> MOVETOCREG_DSZ64(0x00000406, 0x000) 

U5fb8: tmp2:= RDSEGFLD(TSS, SEL) 
U5fb9: tmp2:= LDPPHYS_DSZ16_ASZ32_SC1(mode=0x0f) 
U5fba: tmp0:= unk_f61(tmp2) 

U5fbc: LFNCEMARK-> unk_e7b(tmp0, tmp2) !m1 
U5fbd: tmp12:= ZEROEXT_DSZ16(0x000001da) 
U5fbe: tmp9:= AND_DSZ32(0x003f3fd7, tmp10) 

U5fc0: tmp5:= WRITEURAM( , 0x00000000, 0x006f, 64) !m2 SEQW GOTO U3801
U5fc1: tmm0:= unk_574(tmm4) 
U5fc2: tmm1:= unk_574(tmm7) 

U5fc4: tmm5:= unk_664(tmm1, tmm0) 
U5fc5: tmm5:= unk_694(tmm5, tmm2) 
U5fc6: tmp6:= PINTMOVDTMM2I_DSZ32(tmm5) 

U5fc8: tmp4:= SHR_DSZ32(tmp6, 0x00000008) 
U5fc9: tmp6:= NOTAND_DSZ32(0x00000f00, tmp6) 
U5fca: tmp6:= BT_DSZ32(tmp6, 0x00000010) 

U5fcc: tmp6:= CMOVCC_DSZ64_CONDB(tmp6, tmp13) 
U5fcd: SYNCMARK-> tmp6:= UFLOWCTRL( , tmp6, URET0) 
U5fce: tmp4:= AND_DSZ32(0x0000000f, tmp4) 

U5fd0: tmm0:= unk_69d( , tmm0) 
U5fd1: tmm1:= unk_69d( , tmm1) 
U5fd2: SYNCWTMRK-> tmp10:= OR_DSZ32(tmp4, tmp10) SEQW URET0

U5fd4: TESTUSTATE( , UCODE, 0x0800) ? SEQW GOTO U5fd6
U5fd5: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000003f, U2711) !m0,m1 
U5fd6: tmp2:= READURAM( , tmp10) 

U5fd8: tmp12:= ZEROEXT_DSZ32N(tmp12) !m1 
U5fd9: tmp1:= OR_DSZ32(0x00010000, tmp8) 
U5fda: tmp1:= MSR2CR( , tmp1) 

U5fdc: tmp12:= ROL_DSZ64(tmp12, tmp1) 
U5fdd: tmp2:= NOTAND_DSZ64(tmp12, tmp2) 
U5fde: tmp5:= ROL_DSZ64(tmp5, tmp1) 

U5fe0: tmp5:= OR_DSZ64(tmp2, tmp5) SEQW URET1
U5fe1: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp5, U5fe2) SEQW GOTO U3210
U5fe2: tmp6:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 

U5fe4: LFNCEWAIT-> tmp5:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U5fe5: MOVETOCREG_OR_DSZ64( , 0x0000000c, 0x005) !m2 
U5fe6: tmp5:= AND_DSZ32(0x00000100, tmp5) 

U5fe8: tmp5:= SHR_DSZ32(tmp5, 0x00000008) 
U5fe9: tmp6:= SHR_DSZ32(tmp6, 0x00000001) 
U5fea: tmp5:= NOTAND_DSZ32(tmp6, tmp5) 

U5fec: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, 0x070) !m2 
U5fed: tmp1:= MOVE_DSZ32() SEQW GOTO U5914
FUN_ucode_0005fee:
U5fee: tmp14:= READUIP_REGOVR(0x01) !m0 

U5ff0: TESTUSTATE( , UCODE, !0x0010) !m0 ? SEQW GOTO U5ff2
U5ff1: tmp8:= ADD_DSZN(tmp11, 0x00000400) !m1 
U5ff2: tmp7:= RDSEGFLD(UNK_SEG_11, BASE) 

U5ff4: tmp1:= MOVEFROMCREG_DSZ64( , 0x701) 
U5ff5: tmp1:= SHR_DSZ32(tmp1, 0x0000001c) 
U5ff6: tmp1:= AND_DSZ32(0x00000003, tmp1) 

U5ff8: tmp7:= OR_DSZ64(tmp1, tmp7) 
U5ff9: STAD_DSZ64_ASZ32_SC1(tmp8, mode=0x18, tmp7) 
U5ffa: tmp7:= READURAM( , 0x004b, 64) 

U5ffc: STAD_DSZ64_ASZ32_SC1(tmp8, 0x00000008, mode=0x18, tmp7) 
U5ffd: tmp8:= ADD_DSZN(tmp8, 0x00000040) !m1 SEQW URET1
U5ffe: TESTUSTATE( , SYS, 0x0800) !m1 ? SEQW GOTO U65bc

U6000: tmp11:= MOVEFROMCREG_DSZ64( , 0x004) 
U6001: SYNCFULL-> tmp3:= MOVETOCREG_AND_DSZ64(tmp11, 0x00000004, 0x005) !m2 
U6002: tmp3:= MOVEMERGEFLGS_DSZ32(0x00000020, tmp3) 

U6004: tmp11:= BT_DSZ32(tmp11, 0x00000003) SEQW SAVEUIP1 U6005SEQW GOTO U2012
U6005: tmp11:= SELECTCC_DSZ32_CONDNB(tmp11, 0x00000004) 
U6006: tmp3:= CMOVCC_DSZ32_CONDNZ(tmp3, tmp11) 

U6008: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 
U6009: unk_256() !m1 
U600a: LFNCEMARK->MSSTOP-> unk_25e( , tmp3) SEQW GOTO U3dfa

U600c: ROVR<- MOVE_DSZ32() SEQW SAVEUIP1 U600dSEQW GOTO U02ba
U600d: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x50dc) !m2 
U600e: tmp1:= OR_DSZ32(0x00000001, tmp1) 

U6010: PORTOUT_DSZ32_ASZ16_SC1(0x50dc,  , tmp1) !m2 
U6011: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
U6012: tmp15:= READURAM( , 0x005c, 64) 

U6014: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000008, U079e) 
U6015: tmp2:= ZEROEXT_DSZ32(0x00000cf9) 
U6016: tmp1:= ZEROEXT_DSZ32(0x00000006) 

U6018: PORTOUT_DSZ8_ASZ16_SC1(tmp2,  , tmp1) SEQW GOTO U66d2
U6019: CMPUJZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U5ef9) !m2 
U601a: tmp15:= ZEROEXT_DSZ32(0x00006024) 

U601c: tmp15:= CONCAT_DSZ16(0x000000ed, tmp15) 
U601d: WRITEURAM(tmp15, 0x0007, 32) !m2 
U601e: tmp0:= READURAM( , 0x0053, 64) !m2 

U6020: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000002, U1840) !m0,m2 
U6021: tmp3:= ZEROEXT_DSZ32(0x00000002) 
U6022: SYNCFULL-> PORTOUT_DSZ32_ASZ16_SC1(0x0050,  , tmp3) !m2 

U6024: tmp3:= PORTIN_DSZ32_ASZ16_SC1(0x0050) !m2 
U6025: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000000, U1840) !m2 
U6026: tmp3:= MOVEFROMCREG_DSZ64( , 0x2dc, 32) !m1 

U6028: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000001, U2805) !m1 
U6029: tmp3:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U602a: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000005, U20a8) !m1 SEQW GOTO U6024

U602c: SAVEUIP_REGOVR(0x01, U602d, 0x0005) !m0 SEQW GOTO U32cd
U602d: tmp5:= MOVEFROMCREG_DSZ64( , 0x389, 32) !m1 
U602e: tmp5:= NOTAND_DSZ32(0x00000003, tmp5) 

U6030: tmp5:= MOVETOCREG_DSZ64(tmp5, 0x389, 32) !m1 
U6031: tmp10:= ZEROEXT_DSZ32(tmp10, tmp5) 
U6032: tmp5:= NOTAND_DSZ32(0x00000003, tmp10) 

U6034: tmp5:= MOVETOCREG_DSZ64(tmp5, 0x389, 32) !m1 
U6035: tmp10:= ZEROEXT_DSZ64(tmp10, tmp5) 
U6036: MOVETOCREG_DSZ64(tmp10, 0x389, 32) !m1 

U6038: SYNCFULL-> MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 SEQW GOTO U2162
U6039: tmp5:= AND_DSZ16(0x00000001, tmp3) 
U603a: tmp0:= CMOVCC_DSZ32_CONDZ(tmp4, tmp1) 

U603c: tmp2:= SHL_DSZ8(tmp1, 0x00000004) 
U603d: rax:= ADD_DSZ8(tmp0, rax) 
U603e: tmp2:= CMOVCC_DSZ32_CONDZ(tmp5, tmp2) 

U6040: tmp0:= SETCC_CONDB(tmp1) 
U6041: rax:= ADD_DSZ8(tmp2, rax) 
U6042: tmp0:= CMOVCC_DSZ32_CONDZ(tmp4, tmp0) 

U6044: tmp1:= SHR_DSZ32(tmp4, 0x00000002) 
U6045: rax:= ADD_DSZ8(0x00000000, rax) !m2 
U6046: tmp2:= OR_DSZ16(tmp5, tmp0) 

U6048: tmp7:= OR_DSZ16(tmp2, tmp1) 
U6049: tmp7:= MOVEINSERTFLGS_DSZ32(tmp7) 
U604a: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000005) !m2 

U604c: GENARITHFLAGS(tmp0, tmp7) !m2 SEQW UEND0
U604d: TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U6054
U604e: tmp9:= SUB_DSZ32(0x000000b0, tmp1) 

U6050: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U64d1) 
U6051: tmp9:= SUB_DSZ32(0x00000300, tmp1) 
U6052: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U60e2) 

U6054: tmp9:= SHR_DSZ32(tmp1, 0x00000004) 
U6055: tmp9:= SUB_DSZ32(0x00000031, tmp9) 
U6056: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U401c) 

U6058: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000310) 
U6059: tmp9:= NOTAND_DSZ32(0x00ffffff, tmp9) 
U605a: LFNCEMARK-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000310, tmp9) SEQW GOTO U17ec

U605c: SYNCWAIT-> tmp1:= SAVEUIP(tmp5, 0x01, U5919) !m0 SEQW SAVEUIP0 U605dSEQW GOTO U05c4
U605d: tmp1:= SHR_DSZ64(tmp5, 0x00000014) 
U605e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U6064) 

U6060: tmp2:= READURAM( , 0x0010, 64) 
U6061: tmp2:= SHR_DSZ64(tmp2, 0x00000014) 
U6062: tmp1:= OR_DSZ32(tmp2, tmp1) SEQW SAVEUIP1 U6064SEQW GOTO U0484

U6064: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x0000000a, U3200) !m0,m1,m2 
U6065: tmp1:= OR_DSZ64(0x00000200, tmp5) 
U6066: PORTOUT_DSZ64_ASZ16_SC1(0x4ce0,  , tmp1) !m2 

U6068: tmp14:= MOVEFROMCREG_DSZ64( , 0x574) 
U6069: SYNCFULL-> PORTOUT_DSZ64_ASZ16_SC1(0x4cd8,  , tmp14) !m2 SEQW GOTO U3200
U606a: tmp3:= READURAM( , 0x005c, 64) 

U606c: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000026, U606d) !m0,m1 SEQW GOTO U6070
U606d: tmp14:= MOVEFROMCREG_DSZ64( , 0x7bb) 
U606e: BTUJB_DIRECT_NOTTAKEN(tmp14, 0x00000008, U5e32) !m2 

U6070: SAVEUIP_REGOVR(0x01, U6071, 0x0003) !m0 SEQW GOTO U2931
U6071: unk_eff() 
U6072: SAVEUIP( , 0x00, U6329) 

U6074: MOVETOCREG_BTS_DSZ64( , 0x28e) !m1,m2 
U6075: tmp0:= MOVEFROMCREG_DSZ64( , 0x28e, 32) !m1,m2 
U6076: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U6078) !m1 SEQW GOTO U6075

U6078: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x2d6) !m0,m1 
U6079: LFNCEMARK-> MOVETOCREG_BTR_DSZ64(tmp0, 0x28e) !m1 SEQW URET0
U607a: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U38e4

U607c: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0xffffffffffffffd6) 
U607d: tmp2:= MOVEFROMCREG_DSZ64( , 0x562) 
U607e: tmp2:= NOTAND_DSZ64(0x00000fff, tmp2) 

U6080: tmp7:= MOVEFROMCREG_DSZ64( , 0x563) 
U6081: tmp7:= NOTAND_DSZ64(0x00000fff, tmp7) 
U6082: tmp5:= MOVEFROMCREG_DSZ64( , 0x51b) 

U6084: tmp11:= ADD_DSZ64(0x00040000, tmp5) 
U6085: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U3b6d
U6086: tmp0:= CONCAT_DSZ32(rdx, rax) 

U6088: tmp0:= ADD_DSZN(tmp8, tmp0) !m1 
U6089: WRITEURAM(tmp0, 0x0015, 64) !m2 SEQW GOTO U3b8e
fit_load_end:
U608a: tmp11:= OR_DSZ32(0x00000007, tmp12) 

U608c: BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000020, U5e68) !m2 SEQW SAVEUIP0 U608dSEQW GOTO U60b8
U608d: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x00c0) !m2 
U608e: tmp1:= BTR_DSZ32(tmp1, 0x00000003) 

U6090: PORTOUT_DSZ8_ASZ16_SC1(0x00c0,  , tmp1) !m2 
U6091: tmp4:= ADD_DSZ32(0x00000030, tmp10) 
U6092: SAVEUIP( , 0x01, U327c) !m0 

U6094: tmp11:= ZEROEXT_DSZ32(0x0000000b) 
U6095: WRITEURAM(tmp11, 0x0073, 32) !m2 
U6096: tmp1:= MOVEFROMCREG_DSZ64( , 0x6c5) 

U6098: tmp1:= SHL_DSZ32(tmp1, 0x00000007) 
U6099: tmp1:= OR_DSZ32(0x00000004, tmp1) 
U609a: WRITEURAM(tmp1, 0x0053, 32) !m2 SEQW URET1

U609c: tmp9:= READURAM( , 0x0055, 64) SEQW SAVEUIP0 U609dSEQW GOTO U5cae
U609d: tmp4:= READURAM( , 0x0057, 64) 
U609e: WRITEURAM(tmp4, 0x004a, 64) !m2 

U60a0: SYNCWAIT-> STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000040, tmp9, tmp4) 
U60a1: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U60a4
U60a2: tmp0:= BTS_DSZ32(tmp0, 0x0000001d) 

U60a4: LFNCEMARK-> WRITEURAM(tmp9, 0x0057, 64) !m2 
U60a5: tmp0:= OR_DSZ32(0x0000c000, tmp0) 
U60a6: tmp0:= OR_DSZ32(0x00100000, tmp0) 

U60a8: tmp4:= READURAM( , 0x0071, 64) 
U60a9: LFNCEWAIT-> STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001dc, tmp9, tmp4) SEQW GOTO U4e82
FUN_ucode_00060aa:
U60aa: tmp1:= READURAM( , 0x0053, 64) !m2 

U60ac: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 
U60ad: tmp7:= SUB_DSZ64(0x00000000, tmp1) 
U60ae: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp7, U304e) SEQW SAVEUIP1 U60b0SEQW GOTO U0bc9

U60b0: tmp7:= unk_222(tmp1) 
U60b1: tmp7:= CONCAT_DSZ16(tmp7, tmp7) 
U60b2: tmp7:= unk_0fc(tmp0, tmp7) 

U60b4: PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , tmp7) !m2 
U60b5: SYNCFULL-> PORTOUT_DSZ32_ASZ16_SC1(0x0064,  , tmp1) !m2 
U60b6: PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 

FUN_ucode_00060b8:
U60b8: NOP SEQW SAVEUIP1 U60b9SEQW GOTO U0bc9
U60b9: tmp7:= PORTIN_DSZ32_ASZ16_SC1(0x0018) !m2 
U60ba: PORTOUT_DSZ32_ASZ16_SC1(0x004c,  , 0x00000000) !m2 

U60bc: tmp1:= AND_DSZ32(0x000000ff, tmp7) 
U60bd: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U304e) SEQW GOTO U60b8
FUN_ucode_00060be:
U60be: tmp1:= SHR_DSZ32(tmpv1, 0x00000004) 

U60c0: tmp2:= OR_DSZ32(0x00002000, tmp1) 
U60c1: tmp1:= OR_DSZ32(tmp2, 0xffca5800) 
U60c2: tmp4:= SELECTCC_DSZ32_CONDNP(tmp6, 0x00008000) 

U60c4: tmp1:= OR_DSZ32(tmp4, tmp1) 
U60c5: tmp4:= READURAM( , 0x005c, 64) 
U60c6: tmp4:= BT_DSZ64(tmp4, 0x0000001a) 

U60c8: tmp4:= SELECTCC_DSZ32_CONDB(tmp4, 0x00008000) 
U60c9: tmp1:= OR_DSZ32(tmp4, tmp1) 
U60ca: tmp4:= SELECTCC_DSZ32_CONDZ(tmp6, 0x00200000) 

U60cc: tmp1:= OR_DSZ32(tmp4, tmp1) 
U60cd: tmp1:= CONCAT_DSZ32(0xffffffffffffffff, tmp1) 
U60ce: tmp1:= AND_DSZ64(tmp1, tmpv0) 

U60d0: tmp1:= SUB_DSZ64(tmp2, tmp1) 
U60d1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, tmpv2) SEQW URET1
U60d2: LFNCEWAIT-> TESTUSTATE( , SYS, 0x8000) !m1 ? SEQW GOTO U320c

U60d4: tmp4:= SUB_DSZ32(0x00000001, tmp4) 
U60d5: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp4, U0162) 
U60d6: LFNCEWAIT-> tmp7:= ADD_DSZ64(0x00000010, tmp7) SEQW SAVEUIP1 U60d8SEQW GOTO U024a

U60d8: tmp15:= SUB_DSZ32(0x00000079, tmp8) 
U60d9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U37f2) 
U60da: tmp15:= SUB_DSZ32(0x0000007a, tmp8) 

U60dc: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U37f2) 
U60dd: tmp15:= NOTAND_DSZ32(0x00000001, tmp8) 
U60de: tmp15:= SUB_DSZ32(0xc0000100, tmp15) 

U60e0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U37f2) 
U60e1: SYNCWAIT-> SAVEUIP( , 0x01, U00fd) !m0 SEQW GOTO U442a
U60e2: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000300) 

U60e4: tmp10:= AND_DSZ32(0xffffffffffffb700, tmp5) 
U60e5: tmp10:= XOR_DSZ32(0x00040000, tmp10) 
U60e6: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, U401c) 

U60e8: tmp14:= SAVEUIP(0x01, U17ec) !m0 
U60e9: tmp10:= AND_DSZ32(0x000000f0, tmp5) 
U60ea: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp10, U401c) 

U60ec: tmp0:= AND_DSZ32(0x000000ff, tmp5) 
U60ed: tmp8:= ZEROEXT_DSZ32(0x00000200) SEQW SAVEUIP0 U60eeSEQW GOTO U2df1
U60ee: tmp8:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(0x00000398, tmp12) 

U60f0: tmp9:= SUB_DSZ32(tmp8, tmp0) 
U60f1: tmp9:= MOVEMERGEFLGS_DSZ32(tmp0, tmp9) 
U60f2: tmp9:= CMOVCC_DSZ32_CONDNBE(tmp9, tmp8) 

U60f4: STADPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp12, 0x00000398, tmp9) 
U60f5: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x000000a0) SEQW GOTO U668a
FUN_ucode_00060f6:
U60f6: tmpv0:= CONCAT_DSZ16(0x0000060f) 

U60f8: tmpv0:= OR_DSZ32(tmpv0, 0x00000003) 
U60f9: tmpv1:= READURAM( , 0x0020, 64) 
U60fa: tmpv1:= CONCAT_DSZ8(tmpv1, 0x00000046) 

U60fc: tmpv1:= SHL_DSZ64(tmpv1, 0x00000030) 
U60fd: tmpv1:= OR_DSZ64(0x000046b4, tmpv1) 
U60fe: tmpv3:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1 

U6100: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmpv3, 0x00000000, U60fe) !m1 
U6101: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x22e) !m0,m1 
U6102: MOVETOCREG_DSZ64(tmpv1, 0x22b, 32) !m1 

U6104: MOVETOCREG_DSZ64(tmpv0, 0x229, 32) !m1,m2 
U6105: tmpv3:= MOVEFROMCREG_DSZ64( , 0x22f, 32) !m1,m2 
U6106: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmpv3, 0x00000000, U6105) !m1 

U6108: MOVETOCREG_DSZ64( , 0x00000000, 0x22e, 32) !m1 
U6109: tmpv2:= MOVEFROMCREG_DSZ64( , 0x22d, 32) !m1,m2 SEQW URET0
FUN_ucode_000610a:
U610a: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U6115

U610c: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 
FUN_ucode_000610d:
U610d: tmp5:= CONCAT_DSZ32(tmp9, tmp12) 
U610e: WRITEURAM(tmp5, 0x0009, 64) 

U6110: MOVETOCREG_OR_DSZ64( , 0x0000000c, 0x005) 
U6111: tmp1:= CONCAT_DSZ8(0x00000004, tmp2) 
U6112: MOVETOCREG_BTS_DSZ64( , 0x00000015, 0x072) 

U6114: WRITEURAM(tmp1, 0x0046, 64) 
U6115: tmp13:= READUIP_REGOVR(0x00) 
U6116: tmp5:= LDPPHYS_DSZ16_ASZ32_SC1(0x00000066, mode=0x0f) 

U6118: tmp7:= SHR_DSZ32(tmp2, 0x00000003) 
U6119: LFNCEMARK-> tmp7:= LDPPHYS_DSZ8_ASZ32_SC1(tmp5, 0xffffffffffffffe0, mode=0x0f, tmp7) 
U611a: tmp5:= AND_DSZ32(0x00000007, tmp2) SEQW URET0

U611c: tmp0:= BTS_DSZ32(tmp0, 0x0000000c) SEQW SAVEUIP0 U611dSEQW GOTO U063c
U611d: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000011, U6126) !m1 
U611e: tmp12:= READURAM( , 0x0057, 64) 

U6120: tmp11:= BT_DSZ64(tmp11, 0x0000003e) 
U6121: tmp5:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(0x0000039c, tmp12) 
U6122: tmp15:= SELECTCC_DSZ32_CONDB(tmp11, 0xffffffffffffffff) 

U6124: tmp5:= OR_DSZ32(tmp15, tmp5) 
U6125: CMPUJZ_DIRECT_NOTTAKEN(tmp5, U551e, tmp2) !m2 
U6126: tmp2:= AND_DSZ32(0x000000ff, tmp2) 

U6128: tmp2:= BTS_DSZ32(tmp2, 0x0000001f) 
U6129: tmp4:= ZEROEXT_DSZ32() SEQW GOTO U5c8a
U612a: tmp0:= CONCAT_DSZ32(tmp1, tmp0) 

U612c: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp0) 
U612d: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
FUN_ucode_000612e:
U612e: tmp2:= CONCAT_DSZ32(tmp3, tmp2) 

U6130: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp2) 
U6131: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
FUN_ucode_0006132:
U6132: tmp4:= CONCAT_DSZ32(tmp5, tmp4) 

U6134: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp4) 
U6135: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
FUN_ucode_0006136:
U6136: tmp6:= CONCAT_DSZ32(tmp7, tmp6) 

U6138: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp6) 
U6139: tmp12:= ADD_DSZ32(0x00000020, tmp12) 
U613a: tmp8:= CONCAT_DSZ32(tmp9, tmp8) 

U613c: STADSTGBUF_DSZ64_ASZ16_SC1(tmp12,  , tmp8) 
U613d: tmp12:= ADD_DSZ32(0x00000020, tmp12) SEQW URET0
U613e: TESTUSTATE( , SYS, !UST_USER_MODE | UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U5b05

U6140: tmp0:= ZEROEXT_DSZ32(0x0000042e) 
U6141: SAVEUIP( , 0x01, U5b05) !m0 
U6142: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U6144: TESTUSTATE( , VMX, 0x0040) !m2 ? SEQW URET1
U6145: tmp15:= READURAM( , 0x0043, 64) 
U6146: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000022, U07de) !m0 

U6148: SAVEUIP( , 0x00, U4e82) 
U6149: tmp3:= ZEROEXT_DSZ64(IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U614a: tmp11:= unk_88f() !m0,m1 

U614c: tmp11:= ZEROEXT_DSZ16N(tmp11) !m1 
U614d: tmp1:= BT_DSZ64(tmp3, 0x00000022) 
U614e: tmp1:= SELECTCC_DSZ64_CONDNB(tmp1, tmp11) SEQW URET0

U6150: tmp3:= SUB_DSZ32(0x00000001, tmp5) SEQW SAVEUIP1 U6151SEQW GOTO U32cd
U6151: tmp2:= SELECTCC_DSZ32_CONDB(tmp3, 0x000000bd) 
U6152: tmp2:= MOVEMERGEFLGS_DSZ64(tmp2, tmp3) 

U6154: tmp2:= CMOVCC_DSZ32_CONDNZ(tmp2, 0x000000ac) 
U6155: tmp1:= MOVEFROMCREG_DSZ64( , 0x38f, 32) !m1 
U6156: tmp1:= NOTAND_DSZ32(0x000000bd, tmp1) 

U6158: tmp2:= OR_DSZ32(0x00000080, tmp2) 
U6159: MOVETOCREG_OR_DSZ64(tmp1, 0x38f, tmp2) !m1 
U615a: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 

U615c: tmp1:= MOVEFROMCREG_DSZ64( , 0x104) 
U615d: tmp1:= NOTAND_DSZ64(0x00200000, tmp1) 
U615e: tmp2:= SELECTCC_DSZ32_CONDB(tmp3, 0x00200000) 

U6160: MOVETOCREG_OR_DSZ64(tmp1, 0x104, tmp2) SEQW GOTO U3230
gen_key_first_step:
U6161: tmp6:= ZEROEXT_DSZ32(0x00000007) 
U6162: WRITEURAM(tmp6, 0x0048, 32) !m2 

U6164: tmp7:= ADD_DSZ64(0x00000020, tmp7) 
U6165: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7,  , tmp0) 
U6166: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004,  , tmp1) 

U6168: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008,  , tmp2) 
U6169: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c,  , tmp3) 
U616a: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010,  , tmp4) 

U616c: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014,  , tmp8) 
U616d: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018,  , tmp9) 
U616e: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c,  , tmp10) 

U6170: tmp5:= SUB_DSZ64(0x00000040, tmp5) 
U6171: tmp6:= ZEROEXT_DSZ32(0x00000001) 
U6172: tmp11:= ZEROEXT_DSZ16(0x000057fd) 

U6174: WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U50da
U6175: tmp10:= unk_6a0() 
U6176: tmp11:= FCOM2(tmp8, tmp10) 

U6178: mm1:= unk_76a(tmm3) 
U6179: tmp1:= MOVEINSERTFLGS_DSZ32(tmp1) 
U617a: UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp1, U066c) 

U617c: mm0:= unk_7ea(tmm0) 
U617d: tmp1:= SUB_DSZ32(0x0000fffc, tmp0) 
U617e: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U5b65) 

U6180: tmp10:= unk_6a0() 
U6181: tmm4:= unk_6c9(tmm0, tmm2) 
U6182: tmm2:= unk_5be( , tmm4) 

U6184: tmm0:= unk_7a8(tmm4) 
U6185: tmm3:= unk_649(tmm4, tmm2) 
U6186: tmm5:= unk_494( , tmm2) 

U6188: tmm4:= unk_649(tmm4, tmm5) SEQW GOTO U6e9d
U6189: tmp15:= READURAM( , 0x0047, 64) 
U618a: tmp8:= ZEROEXT_DSZ32(tmp15) 

U618c: SYNCMARK-> MOVETOCREG_SHR_DSZ64(tmp15, 0x00000020, 0x6c5) 
U618d: tmm1:= unk_5ba( , tmm7) 
U618e: tmm2:= unk_5ba( , tmm7) 

U6190: tmm0:= unk_5ba( , tmm6) 
U6191: tmm4:= unk_5ba( , tmm6) 
U6192: mm5:= unk_72f(tmm2) 

U6194: tmm3:= unk_72f(tmm1) 
U6195: tmp7:= ZEROEXT_DSZ64(tmp0) 
U6196: tmp10:= READURAM( , 0x004f, 64) 

U6198: tmp12:= READURAM( , 0x000b, 64) 
U6199: tmp12:= MOVEMERGEFLGS_DSZ64(tmp12, tmp0) 
U619a: tmp3:= READURAM( , 0x004e, 64) 

U619c: SYNCWAIT-> tmp14:= READURAM( , 0x0043, 64) SEQW GOTO U4ded
U619d: tmp11:= OR_DSZ32(tmp12, tmp11) 
U619e: tmp9:= ZEROEXT_DSZ32(0xffffffffffffbfff) 

U61a0: tmp9:= CONCAT_DSZ32(tmp9, 0xffffffffffffffdf) 
U61a1: tmp7:= ZEROEXT_DSZ32(0x00000020) 
U61a2: tmp8:= ZEROEXT_DSZ32(0x0000000f) 

U61a4: tmp5:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U61a5: tmp6:= MOVEFROMCREG_DSZ64( , 0x2da, 32) !m1 
U61a6: tmp6:= SHL_DSZ32(tmp6, 0x00000018) 

U61a8: tmp6:= OR_DSZ32(tmp5, tmp6) 
U61a9: tmp5:= MOVEFROMCREG_DSZ64( , 0x008) 
U61aa: tmp6:= CONCAT_DSZ32(tmp5, tmp6) 

U61ac: WRITEURAM(tmp6, 0x003f, 64) !m2 
U61ad: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x2f3) !m1,m2 
U61ae: SAVEUIP( , 0x01, U3048) !m0 

U61b0: SAVEUIP( , 0x00, U7575) SEQW GOTO U669d
U61b1: tmp11:= CONCAT_DSZ32(0x0000000b) 
U61b2: WRITEURAM(tmp11, 0x0073, 64) !m2 

U61b4: tmp1:= ZEROEXT_DSZ32(0x00030000) 
U61b5: tmp2:= ZEROEXT_DSZ32(0x00030012) 
U61b6: SAVEUIP( , 0x00, U4406) SEQW SAVEUIP1 U61b8SEQW GOTO U27c1

U61b8: tmp11:= ZEROEXT_DSZ32(0x00000004) 
U61b9: WRITEURAM(tmp11, 0x0073, 32) !m2 
U61ba: SYNCFULL-> tmp2:= MOVEFROMCREG_DSZ64( , 0x630) !m2 

U61bc: tmp2:= AND_DSZ32(0x00000fff, tmp2) 
U61bd: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U61be) SEQW GOTO U61ba
U61be: MOVETOCREG_DSZ64( , 0x00000000, 0x631) 

U61c0: tmp11:= ZEROEXT_DSZ32(0x00000005) 
U61c1: WRITEURAM(tmp11, 0x0073, 32) 
U61c2: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x63a) !m2 

U61c4: SYNCFULL-> UJMP( , tmp14) 
U61c5: SAVEUIP( , 0x00, U31e9) 
U61c6: ROVR<- tmp1:= CONCAT_DSZ8(tmp3, tmp2) SEQW SAVEUIP1 U61c8SEQW GOTO U2178

U61c8: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW URET0
U61c9: MOVETOCREG_DSZ64(0x00000009, 0x000) 
U61ca: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U61d0

U61cc: tmp12:= MOVEFROMCREG_DSZ64( , 0x065) 
U61cd: tmp0:= READURAM( , 0x0014, 64) 
U61ce: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U6930) !m1 

U61d0: tmp9:= ZEROEXT_DSZ32(tmp10) 
U61d1: tmp5:= ZEROEXT_DSZ16(0x00000025) SEQW GOTO U34c5
U61d2: tmp14:= unk_52b(tmp14) 

U61d4: tmp15:= unk_52b(tmp15) 
U61d5: tmm5:= unk_5b9(tmm6) 
U61d6: tmm6:= unk_4ee(tmm7, tmm6) 

U61d8: tmm7:= unk_4d7(tmm5, tmm7) 
U61d9: tmp14:= unk_ece(tmp7) 
U61da: tmp15:= unk_ece(tmp7) 

U61dc: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7) 
U61dd: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000004) 
U61de: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000008) 

U61e0: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000000c) 
U61e1: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000010) 
U61e2: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000014) 

U61e4: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x00000018) 
U61e5: tmp10:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0x0000001c) SEQW GOTO U0011
U61e6: tmp2:= MOVEFROMCREG_DSZ64( , 0x280, 32) !m1 

U61e8: tmp2:= AND_DSZ32(0x00070000, tmp2) 
U61e9: tmp2:= OR_DSZ32(tmp10, tmp2) 
U61ea: tmp0:= READURAM( , 0x005c, 64) 

U61ec: tmp0:= BT_DSZ64(tmp0, 0x00000010) 
U61ed: tmp2:= SELECTCC_DSZ32_CONDB(tmp0, tmp2) 
U61ee: tmp0:= ZEROEXT_DSZ32(0x00000012) 

U61f0: tmp0:= CONCAT_DSZ16(0x00000100, tmp0) 
U61f1: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000000, U3be4) !m1,m2 
U61f2: tmp0:= ZEROEXT_DSZ32(0x00000011) 

U61f4: tmp0:= CONCAT_DSZ16(0x00000100, tmp0) 
U61f5: tmp2:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U61f6: SYNCFULL-> BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000f, U3be4) !m0,m1,m2 

U61f8: tmp14:= READURAM( , 0x000d, 64) 
U61f9: tmp14:= ZEROEXT_DSZ16(tmp14) SEQW GOTO U0414
U61fa: tmm4:= unk_624(tmm0, tmm0) 

U61fc: tmp4:= PINTMOVDTMM2I_DSZ32(tmm4) 
U61fd: tmm3:= unk_624(tmm1, tmm1) 
U61fe: tmp1:= PINTMOVDTMM2I_DSZ32(tmm3) 

U6200: tmp4:= SHR_DSZ32(tmp4, 0x00000002) 
U6201: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 
U6202: tmp2:= OR_DSZ32(tmp1, tmp4) 

U6204: tmp2:= AND_DSZ32(0x0000000f, tmp2) 
U6205: mm3:= unk_72a(tmm1) 
U6206: tmp3:= SHL_DSZ32(tmp3, 0x00000004) 

U6208: tmp2:= OR_DSZ32(tmp3, tmp2) 
U6209: tmm6:= unk_704(mm2) 
U620a: tmm6:= unk_620(tmm6) 

U620c: tmp3:= PINTMOVDTMM2I_DSZ32(tmm6) 
U620d: SYNCFULL-> UJMP( , tmp3) 
U620e: SAVEUIP( , 0x01, U5e21) !m0 SEQW SAVEUIP0 U6210SEQW GOTO U6c86

U6210: tmp2:= MOVEFROMCREG_DSZ64( , 0x630) 
U6211: tmp2:= AND_DSZ32(0x00000fff, tmp2) 
U6212: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U6210) 

U6214: MOVETOCREG_DSZ64( , 0x00000000, 0x631) !m2 
U6215: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x63a) !m2 
U6216: TESTUSTATE( , UCODE, 0x0028) ? SEQW GOTO U5dad

U6218: MOVETOCREG_DSZ64( , 0x00000000, 0x221, 32) !m1,m2 
U6219: tmp12:= OR_DSZ32(0x00000030) SEQW SAVEUIP1 U621aSEQW GOTO U18d0
U621a: NOP 

U621c: tmp11:= READURAM( , 0x000f, 64) SEQW GOTO U3c98
U621d: tmp15:= CONCAT_DSZ16(tmp15, 0x0000622a) 
U621e: WRITEURAM(tmp15, 0x0007, 32) !m2 

U6220: tmp15:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U6221: tmp15:= AND_DSZ64(0x00000400, tmp15) 
U6222: tmp15:= SHL_DSZ64(tmp15, 0x00000006) 

U6224: tmp1:= READURAM( , 0x005c, 64) 
U6225: tmp1:= NOTAND_DSZ64(tmp15, tmp1) 
U6226: WRITEURAM(tmp1, 0x005c, 64) !m2 

U6228: SAVEUIP_REGOVR(0x01, U6229, 0x0210) !m0 SEQW GOTO U281d
U6229: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp0, U43a6) 
U622a: SYNCFULL-> MOVE_DSZ32() 

U622c: tmp15:= MOVEFROMCREG_DSZ64( , 0x29d, 32) !m1 
U622d: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000c, U43a6) 
U622e: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000000d, U378a) !m1,m2 

U6230: NOP 
U6231: NOP SEQW GOTO U622a
U6232: tmp2:= SELECTCC_DSZ32_CONDNP(tmp14, 0x00000300) 

U6234: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U6235: tmp2:= SELECTCC_DSZ32_CONDNZ(tmp14, 0x00004000) 
U6236: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 

U6238: tmp2:= SELECTCC_DSZ32_CONDNO(tmp14, 0x00040000) 
U6239: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U623a: tmp2:= SELECTCC_DSZ32_CONDNB(tmp14, 0x00002000) 

U623c: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U623d: tmp2:= BT_DSZ64(tmp3, 0x0000002b) 
U623e: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00008000) 

U6240: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U6241: tmp2:= READURAM( , 0x003a, 64) 
U6242: tmp2:= NOTAND_DSZ32(tmp2, 0x00080001) 

U6244: tmp2:= SELECTCC_DSZ32_CONDZ(tmp2, 0x00200000) 
U6245: tmp10:= NOTAND_DSZ32(tmp2, tmp10) 
U6246: tmp2:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00080000) SEQW GOTO U30e1

U6248: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U624a
U6249: tmp14:= BTS_DSZ32(tmp14, 0x00000015) 
U624a: tmp2:= SHL_DSZ32(tmp2, 0x00000002) 

U624c: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp14, 0x000) 
U624d: tmp9:= OR_DSZ32(0x00003000, tmp10) 
U624e: tmp8:= SHR_DSZ32(tmp10, 0x0000000a) 

U6250: tmp11:= unk_207(tmp8, tmp9) 
U6251: tmp11:= AND_DSZ32(0x00000200, tmp11) 
U6252: tmp9:= BTR_DSZ32(tmp9, 0x00000009) 

U6254: tmp9:= OR_DSZ32(tmp9, tmp11) 
U6255: tmp6:= ZEROEXT_DSZ32(0x00010300) 
U6256: tmp6:= unk_207(0x00090100, tmp6) 

U6258: LFNCEMARK-> tmp0:= LDPPHYS_DSZ32_ASZ32_SC1(tmp2) SEQW GOTO U34d8
U6259: tmp10:= ZEROEXT_DSZ32(0x00004000) 
U625a: tmp10:= CONCAT_DSZ16(tmp10, 0x00001e60) 

U625c: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ32_SC1(tmp5, tmp12) 
U625d: PORTOUT_DSZ64_ASZ16_SC1(tmp10,  , tmp1) 
U625e: tmp10:= SUB_DSZ64(0x00000008, tmp10) 

U6260: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U625c
U6261: tmp3:= PORTIN_DSZ64_ASZ16_SC1(0x4ce0) !m2 
U6262: tmp3:= OR_DSZ64(0x00000800, tmp3) 

U6264: PORTOUT_DSZ64_ASZ16_SC1(0x4ce0,  , tmp3) !m2 
U6265: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000011, U60d2) !m1 
U6266: tmp1:= ZEROEXT_DSZ32(0x00000001) 

U6268: PORTOUT_DSZ8_ASZ16_SC1(0x1e70,  , tmp1) !m2 
U6269: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x1e70) !m2 
U626a: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000000, U6269) !m1 

U626c: tmp1:= ZEROEXT_DSZ32(0x00000001) 
U626d: SYNCFULL-> PORTOUT_DSZ8_ASZ16_SC1(0x1e74,  , tmp1) !m2 SEQW GOTO U60d2
U626e: tmp12:= READURAM( , 0x0057, 64) 

U6270: tmp4:= MOVEFROMCREG_DSZ64( , 0x513) 
U6271: tmp0:= ZEROEXT_DSZ32(0x000000ff) 
U6272: tmp0:= CONCAT_DSZ32(tmp0, 0xfffffffffffff000) 

U6274: tmp4:= AND_DSZ64(tmp0, tmp4) 
U6275: tmp0:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(0x00000398, tmp12) 
U6276: tmp2:= ZEROEXT_DSZ64(tmp0) 

U6278: tmp8:= ZEROEXT_DSZ32(0x00000100) SEQW SAVEUIP0 U6279SEQW GOTO U2df1
U6279: tmp8:= AND_DSZ32(0x000000f0, tmp0) 
U627a: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000a0, tmp4, tmp8) 

U627c: tmp8:= ZEROEXT_DSZ32(0x00000200) SEQW SAVEUIP0 U627dSEQW GOTO U5c8d
U627d: tmp8:= SHL_DSZ16(tmp2, 0x00000008) 
U627e: tmp8:= OR_DSZ8(tmp9, tmp8) 

U6280: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp12, 0x00000398, tmp8) 
U6281: tmp8:= MOVEFROMCREG_DSZ64( , 0x01d) 
U6282: MOVETOCREG_BTR_DSZ64(tmp8, 0x00000001, 0x01d) !m2 SEQW URET1

U6284: TESTUSTATE( , VMX, !0x0002) !m0,m2 ? SEQW GOTO U6288
U6285: LFNCEWAIT-> tmp1:= MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000a, 0x2c4) !m0,m1 
U6286: WRITEURAM(tmp1, 0x0070, 64) !m2 

U6288: WRITEURAM(tmp0, 0x000a, 32) !m2 
U6289: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U628a: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x6c5) !m0 

U628c: tmp10:= OR_DSZ32(tmp0, tmp10) 
U628d: MOVETOCREG_DSZ64(0x00000016, 0x000) 
U628e: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U3bfd

U6290: tmp1:= unk_208(IMM_MACRO_ALIAS_DATASIZE) !m0 
U6291: tmp1:= unk_207(0x00000004, tmp1) 
U6292: tmp1:= SUB_DSZ32(IMM_MACRO_ALIAS_DATASIZE, tmp1) !m0 

U6294: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2711) SEQW GOTO U3bfe
U6295: tmp5:= SHR_DSZ64(tmp1, 0x0000000b) 
U6296: tmp1:= OR_DSZ64(tmp5, tmp3) 

U6298: tmp1:= OR_DSZ64(tmp1, tmp0) 
U6299: MOVE_DSZ32() 
U629a: LFNCEWAIT-> tmp5:= unk_163(0x00000000, tmp1) 

U629c: tmp5:= SHR_DSZ32(tmp5, 0x00000008) 
U629d: MOVETOCREG_DSZ64(tmp5, 0x79d) 
U629e: WRITEURAM(tmp1, 0x0079, 64) 

U62a0: tmp13:= MOVE_DSZ32(0x000021fe) 
U62a1: tmp15:= SHR_DSZ32(r64dst, 0x00000011) 
U62a2: tmp14:= MOVEINSERTFLGS_DSZ32(tmp15, 0x0000043c) 

U62a4: tmp15:= MOVEINSERTFLGS_DSZ32(tmp15, 0x00000164) 
U62a5: tmp13:= CMOVCC_DSZ32_CONDP(tmp14, tmp13) 
U62a6: tmp13:= CMOVCC_DSZ32_CONDB(tmp15, tmp13) 

U62a8: SYNCFULL-> UFLOWCTRL( , tmp13, URET0) 
U62a9: SAVEUIP( , 0x01, U21fe) !m0 SEQW URET0
U62aa: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U62ae

U62ac: STAD_DSZ64_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp7) 
U62ad: tmp5:= ADD_DSZ64(0x00000008, tmp5) 
U62ae: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U62b2

U62b0: STAD_DSZ32_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp7) 
U62b1: tmp5:= ADD_DSZ64(0x00000004, tmp5) 
U62b2: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U62b6

U62b4: STAD_DSZ16_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp7) 
U62b5: tmp5:= ADD_DSZ64(0x00000002, tmp5) 
U62b6: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U62b9

U62b8: STAD_DSZ8_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp7) 
U62b9: tmp15:= SHL_DSZN(rcx, tmp2) !m1 
U62ba: rdi:= ADD_DSZN(tmp15, rdi) !m1 

U62bc: rcx:= ZEROEXT_DSZ16N( , rcx) !m1 
U62bd: SYNCWAIT-> SFENCE() SEQW UEND0
U62be: rax:= ADD_DSZ16(tmp1, tmp0) 

U62c0: rax:= CONCAT_DSZ16(0x00003c00, rax) 
U62c1: tmp0:= ADD_DSZ32(tmp9, 0x00000009) 
U62c2: tmp0:= ADD_DSZ32(tmp9, tmp0) 

U62c4: tmp1:= unk_222(tmp3) 
U62c5: tmp1:= SHL_DSZ32(tmp1, 0x00000001) 
U62c6: tmp1:= SUB_DSZ32(0x00000001, tmp1) 

U62c8: tmp1:= MOVEMERGEFLGS_DSZ32(tmp1, tmp9) 
U62c9: tmp0:= CMOVCC_DSZ32_CONDZ(tmp1, tmp0) 
U62ca: rbx:= SHL_DSZ32(tmp0, 0x00000016) 

U62cc: rbx:= OR_DSZ32(0x0000003f, rbx) 
U62cd: tmp2:= MOVEMERGEFLGS_DSZ32(0x000007ff, tmp2) 
U62ce: tmp2:= CMOVCC_DSZ32_CONDNB(tmp2, 0x000003ff) 

U62d0: tmp0:= MOVEMERGEFLGS_DSZ32(0x0000003f, tmp9) 
U62d1: rcx:= CMOVCC_DSZ32_CONDNZ(tmp0, tmp2) 
U62d2: rdx:= ZEROEXT_DSZ32(0x00000001) SEQW GOTO U17ec

U62d4: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U62d5: PORTOUT_DSZ32_ASZ16_SC1(0x005c,  , tmp15) !m2 
U62d6: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x005c) !m2 

U62d8: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U62d6) !m1 
U62d9: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U62da: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U62dc) !m0,m1 SEQW GOTO U62d9

U62dc: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U62dd: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U62de: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U62e0: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U62e1: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U62e2: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U62e4: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U62e5) !m0,m1 SEQW GOTO U62e2
U62e5: tmp15:= SHR_DSZ64(tmpv0, 0x00000030) 
U62e6: tmp15:= CONCAT_DSZ8(0x00000007, tmp15) 

U62e8: tmp15:= CONCAT_DSZ16(0x000000c0, tmp15) SEQW GOTO U720d
U62e9: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U62ea: PORTOUT_DSZ32_ASZ16_SC1(0x005c,  , tmp15) !m2 

U62ec: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x005c) !m2 
U62ed: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U62ec) !m1 
U62ee: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U62f0: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U62f1) !m0,m1 SEQW GOTO U62ee
U62f1: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U62f2: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U62f4: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U62f5: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U62f6: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U62f8: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U62f9: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U62fa) !m0,m1 SEQW GOTO U62f8
U62fa: tmp15:= SHR_DSZ64(tmpv0, 0x00000030) 

U62fc: tmp15:= CONCAT_DSZ8(0x00000007, tmp15) 
U62fd: tmp15:= CONCAT_DSZ16(0x000001c0, tmp15) SEQW GOTO U6f92
U62fe: tmp1:= AND_DSZ32(tmp1, 0x00006000) 

U6300: tmp1:= SUB_DSZ32(0x00002000, tmp1) 
U6301: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U6455) 
U6302: tmp1:= TEST_DSZ64(tmp3, tmp3) 

U6304: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U6455) 
U6305: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U630a
U6306: tmp1:= RDSEGFLD(CS, SEL) 

U6308: LFNCEWAIT-> STADPPHYS_DSZN_ASZ64_SC1(rsp, IMM_MACRO_fb, mode=0x0a,  , tmp1) !m0,m1 
U6309: STADPPHYS_DSZN_ASZ64_SC1(rsp, IMM_MACRO_f3, mode=0x0a,  , tmp4) !m0,m1 
U630a: rsp:= ADD_DSZ64(tmp9, rsp) 

U630c: LFNCEWAIT-> FETCHFROMEIP1_ASZ64( , tmp3) 
U630d: tmp0:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U630e: WRSEGFLD(tmp0, CS, SEL+FLGS+LIM) 

U6310: tmp0:= RDSEGFLD(UNK_SEG_09, BASE) 
U6311: WRSEGFLD(tmp0, CS, BASE) 
U6312: MJMPTARGET_INDIRECT_ASZ64( , tmp3) SEQW UEND0

U6314: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U2651
U6315: tmp0:= LDZX_DSZ32_ASZ32_SC1(tmp11, mode=0x18) 
U6316: tmp1:= LDZX_DSZ32_ASZ32_SC1(tmp11, 0x00000004, mode=0x18) 

U6318: tmp9:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000008, mode=0x18) 
U6319: tmp6:= LDZX_DSZ64_ASZ32_SC1(tmp11, 0x00000010, mode=0x18) 
U631a: tmp3:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 

U631c: tmp3:= BT_DSZ64(tmp3, 0x0000003f) 
U631d: tmp8:= ZEROEXT_DSZ32(tmp9) 
U631e: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp3) 

U6320: tmp8:= CMOVCC_DSZ64_CONDB(tmp9, tmp8) 
U6321: tmp9:= ZEROEXT_DSZ32(tmp6) 
U6322: tmp6:= MOVEMERGEFLGS_DSZ64(tmp6, tmp3) 

U6324: tmp6:= CMOVCC_DSZ64_CONDB(tmp6, tmp9) 
U6325: tmp10:= SHR_DSZ64(tmp8, 0x00000020) 
U6326: tmp10:= MOVSX_DSZ16(tmp10) 

U6328: tmp8:= CONCAT_DSZ32(tmp10, tmp8) SEQW URET0
U6329: tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 
U632a: LFNCEMARK-> MOVETOCREG_DSZ64(tmp0, 0x71a) 

U632c: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U6332
U632d: tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 
U632e: AETTRACE( , tmp0, 0x0c) 

U6330: tmp2:= SAVEUIP( , 0x00, U5fa8) 
U6331: SAVEUIP_REGOVR(0x01, U6332, 0x0210) !m0 SEQW GOTO U5ca0
U6332: MOVETOCREG_BTS_DSZ64( , 0x0000000a, 0x29e) !m0,m1,m2 

U6334: rax:= ZEROEXT_DSZ32() 
U6335: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U6336: tmp0:= AND_DSZ32(0x60000000, tmp0) 

U6338: MOVETOCREG_DSZ64(tmp0, 0x7f6) 
U6339: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U633a: tmp0:= AND_DSZ32(0x0000080c, tmp0) 

U633c: tmp0:= OR_DSZ32(0x00000010, tmp0) 
U633d: LFNCEWAIT-> tmp14:= ZEROEXT_DSZ16(0x00002d9e) SEQW GOTO U4f4c
U633e: BTUJNB_DIRECT_NOTTAKEN(tmp3, 0x0000000b, U6341) !m0,m1 

U6340: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) SEQW SAVEUIP0 U6341SEQW GOTO U5919
U6341: tmp2:= NOTAND_DSZ32(0x00000800, tmp2) 
U6342: tmp2:= AND_DSZ32(tmp3, tmp2) 

U6344: tmp3:= CONCAT_DSZ32(0x000000ff, tmp3) 
U6345: tmp1:= MOVEFROMCREG_DSZ64( , 0x513) 
U6346: tmp13:= SHR_DSZ64(tmp1, 0x00000020) 

U6348: tmp14:= AND_DSZ32(0x0000ffff, tmp13) 
U6349: tmp1:= CONCAT_DSZ32(tmp14, tmp1) 
U634a: tmp14:= AND_DSZ64(tmp3, tmp1) 

U634c: tmp2:= SUB_DSZ64(tmp14, tmp2) 
U634d: tmp3:= NOTAND_DSZ32(tmp3, 0x00000800) 
U634e: tmp2:= OR_DSZ64(tmp3, tmp2) 

U6350: LFNCEMARK-> MOVETOCREG_DSZ64(tmp5, tmp10) !m2 
U6351: tmp3:= NOTAND_DSZ32(tmp1, 0x00000001) 
U6352: tmp2:= OR_DSZ64(tmp3, tmp2) 

U6354: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U05bc) SEQW GOTO U60d2
U6355: mm1:= unk_7ea(tmm0) 
U6356: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000002, U2af1) !m0,m1 

U6358: tmp5:= ZEROEXT_DSZ16(0x0000fc01) 
U6359: tmp11:= SUB_DSZ32(tmp1, 0x0000fc01) 
U635a: tmm4:= unk_7c2(tmm3) 

U635c: tmm0:= unk_7c2( , tmm0) 
U635d: tmm0:= unk_6aa(tmm0, tmm4) 
U635e: LFNCEMARK-> tmm0:= unk_66e(tmm0) !m2 

U6360: mm2:= unk_7e8(tmm0) 
U6361: tmp2:= AND_DSZ8(0x00000004, tmp2) 
U6362: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U5ac4) 

U6364: tmm0:= unk_7c2( , tmm0) 
U6365: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000008, U636a) !m1 
U6366: mm0:= unk_76a(tmm0) 

U6368: tmp0:= AND_DSZ8(0x00000010, tmp0) 
U6369: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U1236) 
U636a: tmp12:= OR_DSZ16(0x00000010, tmp12) SEQW GOTO U1236

U636c: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U6379
U636d: tmp4:= AND_DSZ32(0x00000fe0, tmp2) 
U636e: MOVETOCREG_DSZ64(tmp4, 0x2dd, 32) !m1,m2 

U6370: tmp4:= READURAM( , 0x0024, 64) 
U6371: tmp0:= ZEROEXT_DSZ32(0x00010004) 
U6372: tmp0:= OR_DSZ32(0x00002000, tmp0) 

U6374: tmp1:= SHR_DSZ32(tmp2, 0x00000005) 
U6375: tmp10:= ZEROEXT_DSZ32() 
U6376: tmp4:= AND_DSZ32(tmp1, tmp4) 

U6378: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U1f95) 
U6379: tmp4:= AND_DSZ32(0x200fffff, tmp2) 
U637a: SYNCMARK-> MOVETOCREG_DSZ64(tmp4, 0x2dd, 32) !m1,m2 

U637c: tmp4:= AND_DSZ32(0x000c0000, tmp2) 
U637d: tmp0:= ZEROEXT_DSZ32(0x00000005) 
U637e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U079e) 

U6380: tmp0:= ZEROEXT_DSZ32(0x00000006) 
U6381: SYNCWAIT-> BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000010, U079e) SEQW GOTO U5e91
U6382: tmp12:= READURAM( , 0x0057, 64) 

U6384: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000004, tmp12, tmp1) 
U6385: MOVETOCREG_OR_DSZ64( , 0x00000003, 0x005) !m0,m2 
U6386: tmp15:= ZEROEXT_DSZ32(0x000000bf) 

U6388: MOVETOCREG_DSZ64(tmp15, 0x00b) !m2 
U6389: WRITEURAM( , 0x00000000, 0x0014, 64) !m2 
U638a: MOVETOCREG_DSZ64( , 0x00000000, 0x6c0) !m2 

U638c: unk_eff() 
U638d: MOVETOCREG_DSZ64( , 0x00000000, 0x01d) !m2 
U638e: tmp15:= READURAM( , 0x0070, 64) 

U6390: tmp12:= ZEROEXT_DSZ32(0x0000f615) 
U6391: tmp12:= CONCAT_DSZ32(0x00020800, tmp12) 
U6392: tmp15:= OR_DSZ64(tmp12, tmp15) 

U6394: WRITEURAM(tmp15, 0x0070, 64) !m2 
U6395: tmp15:= READURAM( , 0x001f, 64) 
U6396: tmp15:= BTS_DSZ64(tmp15, 0x0000002f) 

U6398: SYNCMARK-> WRITEURAM(tmp15, 0x001f, 64) !m2 SEQW GOTO U2e50
U6399: tmp5:= PORTIN_DSZ32_ASZ16_SC1(tmp4) 
U639a: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000010) 

U639c: tmp10:= ADD_DSZ64(tmp5, tmp10) 
U639d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000010,  , tmp10) 
U639e: tmp10:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp8, 0x0000001a) 

U63a0: tmp10:= ADD_DSZ16(0x00000001, tmp10) 
U63a1: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp8, 0x0000001a,  , tmp10) 
U63a2: tmp8:= ADD_DSZ32(0x00000020, tmp8) 

U63a4: LFNCEMARK-> tmp6:= AND_DSZ32(0x0000c000, tmp6) 
U63a5: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp6, U63a6) SEQW GOTO U57e4
U63a6: tmp7:= PORTIN_DSZ32_ASZ16_SC1(0x50cc) !m2 

U63a8: tmp6:= AND_DSZ32(0x00008000, tmp6) 
U63a9: tmp8:= MOVEMERGEFLGS_DSZ64(tmp8, tmp6) 
U63aa: tmp8:= CMOVCC_DSZ32_CONDZ(tmp8, tmp7) 

U63ac: PORTOUT_DSZ32_ASZ16_SC1(0x50d0,  , tmp8) !m2 
U63ad: tmp1:= BTS_DSZ32(0x00000000, 0x0000001e) 
U63ae: PORTOUT_DSZ32_ASZ16_SC1(0x50c8,  , tmp1) !m2 SEQW GOTO U5502

U63b0: LFNCEMARK-> tmp11:= unk_e7b(tmp0, tmp1) !m1 
U63b1: tmp1:= CONCAT_DSZ32(0x0000001f) 
U63b2: tmp0:= NOTAND_DSZ64(tmp1, tmp0) 

U63b4: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, tmp11) 
U63b5: tmp8:= SHR_DSZ64(tmp0, 0x0000001f) 
U63b6: tmp8:= NOTAND_DSZ32(tmp8, 0x00000200) 

U63b8: tmp2:= NOTAND_DSZ32(tmp8, tmp7) 
U63b9: tmp7:= NOTAND_DSZ32(0x0000003f, tmp14) 
U63ba: tmp7:= OR_DSZ32(0x00000008, tmp7) 

U63bc: tmp8:= AND_DSZ32(0x00000003, tmp6) 
U63bd: tmp8:= SELECTCC_DSZ32_CONDZ(tmp8, 0x00000001) 
U63be: tmp12:= SHR_DSZ64(tmp0, 0x00000020) 

U63c0: TESTUSTATE( , SYS, UST_OP_SIZE_32BIT) !m1 ? SEQW GOTO U63c5
U63c1: tmp11:= AND_DSZ32(0x00000007, tmp12) 
U63c2: tmp1:= SELECTCC_DSZ32_CONDZ(tmp11, 0x00000004) 

U63c4: tmp8:= OR_DSZ32(tmp1, tmp8) 
U63c5: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp2, 0x7fe) SEQW GOTO U5a5a
U63c6: tmm3:= unk_624(0x00000000) 

U63c8: tmp2:= PINTMOVDTMM2I_DSZ32(tmm3) 
U63c9: tmm4:= unk_624(tmm1, tmm1) 
U63ca: tmp3:= PINTMOVDTMM2I_DSZ32(tmm4) 

U63cc: tmp1:= AND_DSZ32(0x00000010, tmp2) 
U63cd: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U1961) 
U63ce: tmp1:= AND_DSZ32(0x00000004, tmp3) 

U63d0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U1961) 
U63d1: tmp1:= AND_DSZ32(0x00000040, tmp2) 
U63d2: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U5bc4) 

U63d4: tmp1:= OR_DSZ32(tmp3, tmp2) 
U63d5: tmp1:= AND_DSZ32(0x00000020, tmp1) 
U63d6: tmp1:= SHR_DSZ32(tmp1, 0x00000004) 

U63d8: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U63d9: tmp8:= OR_DSZ32(tmp1, tmp4) 
U63da: tmp8:= NOTAND_DSZ32(0x00004700, tmp8) 

U63dc: LFNCEMARK-> MOVETOCREG_DSZ64(tmp8, 0x48c) !m2 SEQW GOTO U17ec
U63dd: tmp5:= SUB_DSZ32(0x00000800, tmp5) 
U63de: tmp1:= AND_DSZ32(0x00001800, tmp5) 

U63e0: tmp1:= SHL_DSZ64(tmp1, 0x00000018) 
U63e1: tmp5:= OR_DSZ64(tmp1, tmp5) 
U63e2: tmp1:= AND_DSZ32(0x00000180, tmp5) 

U63e4: tmp2:= AND_DSZ32(0x00000100, tmp1) 
U63e5: tmp2:= SELECTCC_DSZ32_CONDNZ(tmp2, 0x00000080) 
U63e6: tmp1:= XOR_DSZ32(tmp2, tmp1) 

U63e8: tmp1:= SHL_DSZ64(tmp1, 0x00000019) 
U63e9: tmp5:= OR_DSZ64(tmp1, tmp5) 
U63ea: tmp1:= CONCAT_DSZ32(0x00020020) 

U63ec: tmp5:= OR_DSZ64(tmp1, tmp5) 
U63ed: tmp1:= NOTAND_DSZ32(tmp5, 0x00038000) 
U63ee: tmp2:= ZEROEXT_DSZ32(0x00038000) 

U63f0: tmp2:= BTS_DSZ64(tmp2, 0x00000031) 
U63f1: tmp2:= SELECTCC_DSZ64_CONDNZ(tmp1, tmp2) 
U63f2: tmp5:= NOTAND_DSZ64(tmp2, tmp5) 

U63f4: tmp5:= NOTAND_DSZ64(0x00007ffc, tmp5) SEQW GOTO U3208
U63f5: tmp10:= AND_DSZ32(0x00000700, tmp11) 
U63f6: tmp9:= SUB_DSZ32(0x00000700, tmp10) 

U63f8: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U5a54) 
U63f9: MOVETOCREG_OR_DSZ64( , 0x00000004, 0x00b) !m2 
U63fa: tmp9:= SUB_DSZ32(0x00000400, tmp10) 

U63fc: tmp9:= SUB_DSZ32(0x00000200, tmp9) 
U63fd: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000002c8, mode=0x01, tmp12) 
U63fe: tmp8:= SELECTCC_DSZ32_CONDNBE(tmp9, tmp8) 

U6400: tmp9:= AND_DSZ32(0x00000800, tmp11) 
U6401: tmp0:= ZEROEXT_DSZ64(tmp12) 
U6402: tmp12:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000100, mode=0x01, tmp12) 

U6404: tmp12:= SELECTCC_DSZ32_CONDZ(tmp9, tmp12) 
U6405: LFNCEWAIT-> tmp12:= CONCAT_DSZ16(tmp8, tmp12) 
U6406: tmp9:= TESTUSTATE( , SYS, UST_SMM | 0x2000) !m1 ? SEQW GOTO U26a5

U6408: tmp5:= ZEROEXT_DSZ32(0x00002ab5) 
U6409: tmp15:= MOVEFROMCREG_DSZ64( , 0x6c5) 
U640a: WRITEURAM(tmp15, 0x0047, 64) 

U640c: tmp1:= ZEROEXT_DSZ32(tmp11) SEQW GOTO U6968
U640d: tmp11:= SHR_DSZ64(tmp13, 0x00000020) 
U640e: tmp11:= AND_DSZ32(0x0000001f, tmp11) 

U6410: tmp1:= SELECTCC_DSZ32_CONDZ(tmp11, 0x00000004) 
U6411: tmp8:= OR_DSZ32(tmp1, tmp8) 
U6412: tmp1:= RDSEGFLD(TSS, FLGS) 

U6414: tmp1:= AND_DSZ32(0x00000008, tmp1) 
U6415: tmp8:= MOVETOCREG_OR_DSZ64(tmp8, 0x6c5, tmp1) 
U6416: tmp1:= AND_DSZ32(0x00000800, tmp12) 

U6418: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x00001001) 
U6419: tmp8:= ZEROEXT_DSZ32(0x00000003, tmp8) 
U641a: tmp1:= XOR_DSZ32(tmp1, tmp8) 

U641c: tmp14:= SAVEUIP(0x01, U3ae9) !m0 
U641d: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U6420
U641e: tmp14:= SAVEUIP(0x01, U439e) !m0 

U6420: tmp8:= SHL_DSZ64(tmp1, 0x00000018) 
U6421: tmp8:= MOVETOCREG_OR_DSZ64(tmp8, 0x752, tmp1) 
U6422: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp7, 0x000) 

U6424: MOVETOCREG_DSZ64(tmp8, 0x01b) !m2 SEQW GOTO U2bd9
U6425: tmp15:= RDSEGFLD(SS, FLGS) 
U6426: MOVETOCREG_DSZ64(tmp15, 0x73c) 

U6428: rsp:= ZEROEXT_DSZ64N(tmp5) !m1 
U6429: tmp0:= RDSEGFLD(SS, BASE) 
U642a: WRSEGFLD(tmp0, SS_USERM, BASE) 

U642c: tmp0:= RDSEGFLD(SS, SEL+FLGS+LIM) 
U642d: WRSEGFLD(tmp0, SS_USERM, SEL+FLGS+LIM) 
U642e: MOVETOCREG_SHR_DSZ64(tmp15, 0x00000005, 0x79e) 

U6430: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp13, U00c9) 
U6431: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp13, U0414) 
U6432: tmp3:= MOVEMERGEFLGS_DSZ32(0x00000030, tmp13) 

U6434: tmp3:= CMOVCC_DSZ32_CONDZ(tmp3, 0x00000028) 
U6435: tmp15:= ZEROEXT_DSZ32(0x00000034) 
U6436: tmp1:= AND_DSZ32(0x000000fc, tmp6) 

U6438: tmp1:= SUB_DSZ32(tmp15, tmp1) 
U6439: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U0414) 
U643a: tmp6:= NOTAND_DSZ32(0x000000fc, tmp6) 

U643c: tmp6:= OR_DSZ32(tmp3, tmp6) SEQW GOTO U00cd
U643d: tmm5:= unk_496(tmm0, tmm0) 
U643e: tmm4:= unk_53e( , tmm5) 

U6440: mm3:= unk_728(tmm5) 
U6441: ROVR<- tmm0:= unk_6c9(tmm5, tmm4) SEQW SAVEUIP0 U6442SEQW GOTO U6d84
U6442: tmm2:= unk_494( , tmm3) 

U6444: tmm5:= unk_649(tmm0, tmm5) 
U6445: tmm2:= unk_6e1(tmm2, tmm5) 
U6446: tmm0:= unk_6e1(tmm4, tmm5) 

U6448: tmm5:= unk_6e1(tmm4, tmm6) 
U6449: tmm7:= unk_6e1(tmm3, tmm6) 
U644a: tmm6:= unk_6c9(tmm2, tmm5) 

U644c: tmm5:= unk_6c9(tmm0, tmm7) 
U644d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U644e) SEQW GOTO U649e
U644e: tmm6:= unk_6c9(tmm4, tmm6) 

U6450: tmm5:= unk_6c9(tmm3, tmm5) 
U6451: tmp1:= SHR_DSZ32(tmp8, 0x00000004) 
U6452: tmm7:= unk_702(mm1) 

U6454: tmm5:= unk_496(tmm5, tmm7) SEQW GOTO U3ea1
U6455: tmp15:= MOVEFROMCREG_DSZ64( , 0x065) 
U6456: tmp10:= MOVEFROMCREG_DSZ64( , 0x067) 

U6458: tmp1:= SUB_DSZ64(tmp15, tmp10) 
U6459: tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp4) 
U645a: tmp10:= SUB_DSZ32(tmp15, tmp10) 

U645c: tmp1:= CMOVCC_DSZ64_CONDB(tmp1, tmp10) 
U645d: SYNCMARK-> MOVETOCREG_DSZ64(tmp1, 0x71a) 
U645e: MOVETOCREG_DSZ64(0x00000009, 0x000) 

U6460: MOVE_DSZ64() 
U6461: UPDATEUSTATE( , 0xfc) 
U6462: tmp10:= MOVEFROMCREG_DSZ64( , 0x01b) 

U6464: MOVETOCREG_DSZ64(tmp10, 0x752) 
U6465: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U6466: tmp10:= READAFLAGS( , tmp10) !m2 

U6468: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp11, U00da) 
U6469: BTUJB_DIRECT_NOTTAKEN(tmp8, 0x00000000, U3945) !m1,m2 
U646a: LFNCEMARK-> LEA_DSZ8_ASZ32_SC1(tmp3) 

U646c: rsp:= ADD_DSZN(tmp9, rsp) !m1 SEQW GOTO U2bf9
U646d: STAD_DSZN_ASZ32_SC1(tmp11, mode=0x18,  , tmp0) !m1 
U646e: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_ALIAS_DATASIZE, mode=0x18,  , tmp10) !m0,m1 

U6470: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_13, mode=0x18,  , tmp8) !m0,m1 
U6471: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U2aa1
U6472: tmp1:= SHL_DSZ32(0x00000000, 0x00000004) 

U6474: tmp1:= ADD_DSZ32(tmp3, tmp1) 
U6475: tmp6:= SHR_DSZ32(tmp1, 0x00000010) 
U6476: tmp5:= CONCAT_DSZ16(0xffffffffffffffff, tmp1) 

U6478: tmp6:= SHL_DSZ32(tmp6, 0x0000000c) 
U6479: tmp2:= OR_DSZ32(tmp7, tmp6) 
U647a: tmp1:= SHL_DSZ32(0x00000000, 0x00000004) 

U647c: tmp1:= ADD_DSZ32(tmp4, tmp1) 
U647d: tmp8:= SHR_DSZ32(tmp1, 0x00000010) 
U647e: tmp7:= CONCAT_DSZ16(0xffffffffffffffff, tmp1) 

U6480: tmp8:= SHL_DSZ32(tmp8, 0x0000000c) 
U6481: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_1b, mode=0x18,  , tmp5) !m0,m1 
U6482: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_23, mode=0x18,  , tmp2) !m0,m1 

U6484: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_2b, mode=0x18,  , tmp7) !m0,m1 
U6485: STAD_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_33, mode=0x18,  , tmp8) !m0,m1 SEQW URET0
FUN_ucode_0006486:
U6486: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U648c

U6488: tmp9:= READURAM( , 0x0011, 64) 
U6489: LDHINT_CACHEALL_ASZ64_SC1(0x000001c8, tmp9) 
U648a: LDHINT_CACHEALL_ASZ64_SC1(0x00008100, tmp9) 

U648c: tmp15:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U648d: tmp2:= READURAM( , 0x005c, 64) 
U648e: tmp1:= SHR_DSZ64(tmp2, 0x0000000b) 

U6490: tmp1:= NOTAND_DSZ32(tmp15, tmp1) 
U6491: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000f, U2769) !m0,m1 
U6492: TESTUSTATE( , UCODE, 0x0800) ? SEQW GOTO U2769

U6494: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x003c) !m2 
U6495: tmp15:= READURAM( , 0x0020, 64) 
U6496: BTUJNB_DIRECT_NOTTAKEN(tmp1, U2769, tmp15) !m1 

U6498: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW URET0
U6499: tmp15:= SHL_DSZ64(tmp2, 0x00000015) 
U649a: tmp2:= READURAM( , 0x0043, 64) 

U649c: tmp15:= NOTAND_DSZ64(tmp2, tmp15) 
U649d: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x0000002f, U2769) !m0,m1 SEQW URET0
U649e: tmp0:= SHR_DSZ32(tmp8, 0x00000003) 

U64a0: tmp2:= SHR_DSZ32(tmp8, 0x00000001) 
U64a1: tmp1:= XOR_DSZ32(tmp0, tmp2) 
U64a2: tmp2:= XOR_DSZ32(tmp8, tmp2) 

U64a4: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp11, U64a5) SEQW GOTO U2b09
U64a5: tmm6:= FMOV( , tmm6) 
U64a6: tmm2:= unk_6e1(tmm0, tmm5) 

U64a8: tmm1:= FMOV( , tmm0) 
U64a9: tmp13:= unk_6a0() 
U64aa: tmp3:= AND_DSZ32(0x00000001, tmp8) 

U64ac: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U4acd) 
U64ad: tmm0:= unk_702(mm1) 
U64ae: tmm1:= unk_496(tmm1, tmm0) 

U64b0: tmm2:= unk_496(tmm2, tmm0) 
U64b1: mm0:= unk_689(tmm1, tmm2) !m0 
U64b2: tmm0:= unk_702(mm2) 

U64b4: tmm5:= unk_496(tmm5, tmm0) 
U64b5: tmm6:= unk_496(tmm6, tmm0) 
U64b6: LFNCEWAIT-> mm7:= unk_689(tmm5, tmm6) !m0,m2 SEQW GOTO U17ec

U64b8: MOVETOCREG_SHR_DSZ64(tmp2, 0x00000010, 0x6c5) SEQW SAVEUIP1 U64b9SEQW GOTO U3912
U64b9: tmp9:= SHL_DSZN(rcx, tmp2) !m1 
U64ba: tmp12:= SHR_DSZN(tmp9, 0x00000004) !m1 

U64bc: tmp1:= SUB_DSZN(0x0008000f, tmp9) !m1 
U64bd: tmp12:= SUB_DSZ16(tmp12, 0x00018000) 
U64be: tmp12:= SELECTCC_DSZ64_CONDNBE(tmp1, tmp12) 

U64c0: tmp12:= ZEROEXT_DSZ16(tmp12, 0x00018000) 
U64c1: SYNCMARK-> tmp4:= UFLOWCTRL( , tmp12, MSLOOPCTR) 
U64c2: tmp15:= MOVEMERGEFLGS_DSZ32(0x000064b9, tmp1) 

U64c4: tmp11:= AND_DSZ32(0x0000000f, tmp9) 
U64c5: tmp1:= unk_0aa(tmp12) 
U64c6: tmp14:= MOVEMERGEFLGS_DSZ32(0x00000466, tmp11) 

U64c8: SAVEUIP( , 0x01, U068e) !m0 
U64c9: tmp1:= SUB_DSZN(tmp1) !m1 
U64ca: tmp14:= CMOVCC_DSZ32_CONDZ(tmp14, 0x00006551) 

U64cc: tmp2:= CONCAT_DSZ32(tmp12, tmp2) 
U64cd: tmp1:= SHL_DSZN(tmp1, 0x00000004) !m1 
U64ce: tmp14:= CMOVCC_DSZ32_CONDNBE(tmp15, tmp14) 

U64d0: UFLOWCTRL(tmp4, tmp14, URET1) SEQW GOTO U1a58
U64d1: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x000000b0, 0x00000000) 
U64d2: tmp14:= SAVEUIP(0x01, U17ec) !m0 

U64d4: tmp3:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x00000398, tmp12) 
U64d5: tmp0:= SHR_DSZ16(tmp3, 0x00000008) 
U64d6: tmp8:= ZEROEXT_DSZ32(0x00000100) SEQW SAVEUIP0 U64d8SEQW GOTO U5c8d

U64d8: tmp1:= ZEROEXT_DSZ32(tmp0) 
U64d9: tmp5:= SHR_DSZ32(tmp0, 0x00000003) 
U64da: tmp5:= AND_DSZ32(0x00000018, tmp5) 

U64dc: tmp5:= OR_DSZ32(0x000003a0, tmp5) 
U64dd: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp12, tmp5) 
U64de: tmp3:= AND_DSZ32(0x000000ff, tmp3) 

U64e0: tmp9:= SHL_DSZ16(tmp9, 0x00000008) 
U64e1: tmp9:= OR_DSZ16(tmp3, tmp9) 
U64e2: LFNCEMARK-> STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp12, 0x00000398, tmp9) 

U64e4: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000080) 
U64e5: tmp2:= ZEROEXT_DSZ8(tmp2) 
U64e6: tmp5:= BT_DSZ64(tmp5, tmp1) 

U64e8: tmp5:= SELECTCC_DSZ32_CONDNB(tmp5, 0x00000001) 
U64e9: tmp9:= CONCAT_DSZ32(tmp5, tmp9) SEQW GOTO U6680
ucode_fit_xlat_found:
U64ea: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0) 

U64ec: tmp1:= SHR_DSZ64(tmp4, 0x00000020) 
U64ed: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U6e42) 
U64ee: tmp1:= ADD_DSZ32(0x0000004c, tmp4) 

U64f0: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp1) 
U64f1: tmp1:= ADD_DSZ64(tmp1, tmp4) 
U64f2: tmp1:= SHR_DSZ64(tmp4, 0x00000020) 

U64f4: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U6e42) 
U64f5: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4) 
U64f6: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U6e42) !m1 

U64f8: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x0000000c) 
U64f9: CMPUJNZ_DIRECT_NOTTAKEN(rdx, U6e42, tmp1) !m1 
U64fa: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000018) 

U64fc: BTUJNB_DIRECT_NOTTAKEN(tmp2, U6e42, tmp6) !m1 
U64fd: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x00000004) 
U64fe: tmp2:= SUB_DSZ32(tmp1, tmp9) 

U6500: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp2, U6e42) 
U6501: tmp9:= ZEROEXT_DSZ32(tmp1) 
U6502: tmp10:= ZEROEXT_DSZ32(tmp4) SEQW GOTO U6e42

U6504: MOVETOCREG_SHR_DSZ64(tmp2, 0x00000010, 0x6c5) SEQW SAVEUIP1 U6505SEQW GOTO U3912
U6505: tmp9:= SHL_DSZN(rcx, tmp2) !m1 
U6506: tmp12:= SHR_DSZN(tmp9, 0x00000004) !m1 

U6508: tmp1:= SUB_DSZN(0x0008000f, tmp9) !m1 
U6509: tmp12:= SUB_DSZ16(tmp12, 0x00018000) 
U650a: tmp12:= SELECTCC_DSZ64_CONDNBE(tmp1, tmp12) 

U650c: tmp12:= ZEROEXT_DSZ16(tmp12, 0x00018000) 
U650d: SYNCMARK-> tmp4:= UFLOWCTRL( , tmp12, MSLOOPCTR) 
U650e: tmp15:= MOVEMERGEFLGS_DSZ32(0x00006505, tmp1) 

U6510: tmp11:= AND_DSZ32(0x0000000f, tmp9) 
U6511: tmp1:= unk_0aa(tmp12) 
U6512: tmp14:= MOVEMERGEFLGS_DSZ32(0x00000466, tmp11) 

U6514: SAVEUIP( , 0x01, U068e) !m0 
U6515: tmp1:= SUB_DSZN(tmp1) !m1 
U6516: tmp14:= CMOVCC_DSZ32_CONDZ(tmp14, 0x000062aa) 

U6518: tmp2:= CONCAT_DSZ32(tmp12, tmp2) 
U6519: tmp1:= SHL_DSZN(tmp1, 0x00000004) !m1 
U651a: tmp14:= CMOVCC_DSZ32_CONDNBE(tmp15, tmp14) 

U651c: UFLOWCTRL(tmp4, tmp14, URET1) SEQW GOTO U3a25
U651d: tmp1:= SUB_DSZ32(0x0000ffff, tmp1) 
U651e: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp1, U6535) 

U6520: tmp2:= SUB_DSZ32(0x00000010, tmp1) 
U6521: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp2, U5ba5) 
U6522: mm0:= unk_72a(tmm1) 

U6524: tmm1:= unk_702( , tmm1) 
U6525: tmm1:= unk_6c2( , tmm1) 
U6526: tmp1:= PINTMOVDTMM2I_DSZ32(tmm1) 

U6528: tmp3:= SUB_DSZ32(tmp1) 
U6529: tmp3:= MOVEINSERTFLGS_DSZ64(tmp0, tmp3) 
U652a: tmp1:= CMOVCC_DSZ32_CONDB(tmp3, tmp1) 

U652c: mm2:= unk_7ea(tmm0) 
U652d: tmp2:= ADD_DSZ32(tmp1, tmp2) 
U652e: tmm0:= unk_7c2(mm2, tmm0) 

U6530: tmp1:= SUB_DSZ32(0x00019ffe, tmp2) 
U6531: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp1, U5ba5) 
U6532: tmp1:= SUB_DSZ32(0x00006001, tmp2) 

U6534: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp1, U2b01) 
U6535: mm0:= unk_6dd( , tmm0) SEQW GOTO U17ec
U6536: tmp7:= MOVEFROMCREG_DSZ64( , 0x01c) 

U6538: tmp13:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U6539: tmp5:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 
U653a: tmp13:= NOTAND_DSZ32(0x00002000, tmp13) 

U653c: tmp12:= READURAM( , 0x003d, 64) 
U653d: tmp12:= NOTAND_DSZ32(0x0000000f, tmp12) 
U653e: tmp12:= OR_DSZ32(tmp7, tmp12) 

U6540: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U6544
U6541: tmp8:= READURAM( , 0x0014, 64) 
U6542: BTUJB_DIRECT_NOTTAKEN(tmp8, 0x00000001, U6549) !m1 

U6544: tmp5:= NOTAND_DSZ32(0x00000003, tmp5) 
U6545: MOVETOCREG_DSZ64(tmp13, 0x7f8) !m2 
U6546: MOVETOCREG_DSZ64(tmp5, 0x7f9, 32) !m1,m2 

U6548: LFNCEMARK-> WRITEURAM(tmp12, 0x003d, 64) !m2 
U6549: tmp11:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U654a: tmp8:= SUB_DSZ32(0x00000005, tmp3) 

U654c: tmp8:= MOVEMERGEFLGS_DSZ32(0x00000036, tmp8) 
U654d: tmp8:= CMOVCC_DSZ32_CONDZ(tmp8, 0x00000000) 
U654e: BTUJB_DIRECT_NOTTAKEN(tmp11, U2aad, tmp8) !m1 

U6550: SYNCFULL-> tmp0:= unk_203( , 0x00000001) SEQW URET0
U6551: TESTUSTATE( , UCODE, 0x0020) ? SEQW GOTO U6556
U6552: tmp0:= LDZX_DSZ64_ASZ32_SC1(rsi, mode=0x18, tmp5) 

U6554: STAD_DSZ64_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp0) 
U6555: tmp5:= ADD_DSZ64(0x00000008, tmp5) 
U6556: TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U655c

U6558: tmp0:= LDZX_DSZ32_ASZ32_SC1(rsi, mode=0x18, tmp5) 
U6559: STAD_DSZ32_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp0) 
U655a: tmp5:= ADD_DSZ64(0x00000004, tmp5) 

U655c: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U6561
U655d: tmp0:= LDZX_DSZ16_ASZ32_SC1(rsi, mode=0x18, tmp5) 
U655e: STAD_DSZ16_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp0) 

U6560: tmp5:= ADD_DSZ64(0x00000002, tmp5) 
U6561: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U6565
U6562: tmp0:= LDZX_DSZ8_ASZ32_SC1(rsi, mode=0x18, tmp5) 

U6564: STAD_DSZ8_ASZ32_SC1(rdi, mode=0x08, tmp5, tmp0) 
U6565: tmp15:= SHL_DSZN(rcx, tmp2) !m1 
U6566: rsi:= ADD_DSZN(tmp15, rsi) !m1 

U6568: rdi:= ADD_DSZN(tmp15, rdi) !m1 
U6569: rcx:= ZEROEXT_DSZ16N( , rcx) !m1 
U656a: SYNCWAIT-> SFENCE() SEQW UEND0

U656c: tmp7:= MOVETOCREG_BTR_DSZ64(tmp7, 0x0000000c, 0x01c) !m2 
U656d: tmp7:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00000004) 
U656e: MOVETOCREG_DSZ64(tmp7, 0x070) !m2 

U6570: WRITEURAM(tmp12, 0x0009, 64) SEQW SAVEUIP1 U6571SEQW GOTO U026a
U6571: tmp10:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000248, mode=0x01, tmp0) 
U6572: WRITEURAM(tmp10, 0x0046, 64) 

U6574: tmp10:= BT_DSZ32(tmp10, 0x0000001f) 
U6575: tmp10:= SELECTCC_DSZ64_CONDNB(tmp10, 0x00200000) 
U6576: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp14, 0x000, tmp10) 

U6578: tmp4:= ZEROEXT_DSZ16(tmp13) 
U6579: tmp0:= ZEROEXT_DSZ32(0x00001000) 
U657a: tmp10:= AND_DSZ32(0x00000700, tmp1) 

U657c: tmp10:= SUB_DSZ32(0x00000400, tmp10) 
U657d: tmp10:= SUB_DSZ32(0x00000200, tmp10) 
U657e: tmp10:= SELECTCC_DSZ32_CONDNBE(tmp10, 0x00200000) 

U6580: tmp0:= OR_DSZ32(tmp10, tmp0) 
U6581: tmp10:= SUB_DSZ32(0x0000000e, tmp2) 
U6582: tmp2:= BTS_DSZ32(tmp1, 0x0000001f) 

U6584: tmp1:= SELECTCC_DSZ64_CONDNZ(tmp10, tmp11) 
U6585: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x000) SEQW GOTO U4e84
U6586: tmp10:= MOVEFROMCREG_DSZ64( , 0x7f8) 

U6588: tmp15:= MOVEFROMCREG_DSZ64( , 0x004) 
U6589: tmp10:= CONCAT_DSZ32(tmp15, tmp10) 
U658a: SYNCMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x7f8) !m2 

U658c: MOVETOCREG_DSZ64(0x0000001e, 0x000) !m2 
U658d: tmp4:= READURAM( , 0x0060, 64) 
U658e: SYNCWAIT-> tmp3:= unk_d60(tmp4, tmp9) 

U6590: tmp5:= unk_d60(tmp4, tmp9) 
U6591: tmp6:= unk_d60(tmp4, tmp9) 
U6592: tmp7:= unk_d60(tmp4, tmp9) 

U6594: TESTUSTATE( , SYS, !UST_OP_SIZE_32BIT) !m0,m1 ? SEQW GOTO U659a
U6595: tmp3:= ZEROEXT_DSZ32(tmp3) 
U6596: tmp5:= ZEROEXT_DSZ32(tmp5) 

U6598: tmp6:= ZEROEXT_DSZ32(tmp6) 
U6599: tmp7:= ZEROEXT_DSZ32(tmp7) 
U659a: tmp12:= ADD_DSZ64(tmp1, tmp5) 

U659c: tmp1:= SUB_DSZ64(tmp3, tmp5) 
U659d: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp1, tmp2) 
U659e: tmp1:= SUB_DSZ64(tmp6, tmp12) 

U65a0: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp1, tmp2) SEQW URET1
U65a1: tmpv0:= ZEROEXT_DSZ64(tmp6) 
U65a2: tmpv1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 

U65a4: tmpv1:= BT_DSZ64(tmpv1, 0x0000000d) 
U65a5: tmpv1:= SELECTCC_DSZ64_CONDB(tmpv1, tmpv0) 
U65a6: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000011, U6afd) !m1 

U65a8: tmpv0:= TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U65aa
U65a9: tmpv0:= OR_DSZ32(0x00000100, tmpv0) 
U65aa: tmpv2:= NOTAND_DSZ64(0x0000001f, tmpv2) 

U65ac: tmpv2:= SHL_DSZ64(tmpv2, 0x00000004) 
U65ad: tmpv0:= OR_DSZ32(0x00000083, tmpv0) 
U65ae: tmpv2:= OR_DSZ64(tmpv0, tmpv2) SEQW SAVEUIP0 U65b0SEQW GOTO U76d8

U65b0: tmpv0:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U65b1: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000002, U1cbe) !m0,m2 
U65b2: tmpv1:= ZEROEXT_DSZ8(tmpv2) 

U65b4: tmpv0:= SHR_DSZ64(tmpv2, 0x00000008) 
U65b5: tmpv0:= SHL_DSZ64(tmpv0, 0x00000010) 
U65b6: tmpv0:= OR_DSZ64(0x00004302, tmpv0) 

FUN_ucode_00065b8:
U65b8: MOVETOCREG_SHR_DSZ64(tmpv0, 0x00000038, 0x08b) !m2 
FUN_ucode_00065b9:
U65b9: tmpv0:= SHL_DSZ64(tmpv0, 0x00000008) 
U65ba: MOVETOCREG_OR_DSZ64(tmpv0, 0x08a, tmpv1) !m2 SEQW GOTO U06c6

U65bc: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x000) !m2 
U65bd: tmp14:= ZEROEXT_DSZ32(0x000022c0) 
U65be: WRMSLOOPCTRFBR( , 0x00000009) 

U65c0: SAVEUIP( , 0x00, U04d4) SEQW SAVEUIP1 U65c1SEQW GOTO U025a
U65c1: tmp15:= ZEROEXT_DSZ64(0xfffffffffffff000) 
U65c2: LFNCEWAIT-> MOVETOCREG_AND_DSZ64(tmp0, 0x511, tmp15) 

U65c4: MOVETOCREG_DSZ64(tmp1, 0x510) 
U65c5: MOVETOCREG_AND_DSZ64(tmp2, 0x518, tmp15) 
U65c6: MOVETOCREG_DSZ64(tmp8, 0x000) 

U65c8: MOVETOCREG_DSZ64(tmp7, 0x070) 
U65c9: tmp15:= MOVEFROMCREG_DSZ64( , 0x004) 
U65ca: tmp15:= NOTAND_DSZ32(0x00000003, tmp15) 

U65cc: tmp3:= AND_DSZ32(0x00000003, tmp3) 
U65cd: tmp15:= OR_DSZ32(0x00000200, tmp15) 
U65ce: MOVETOCREG_OR_DSZ64(tmp15, 0x004, tmp3) SEQW SAVEUIP1 U65d0SEQW GOTO U043c

U65d0: tmp15:= READURAM( , 0x001f, 64) 
U65d1: tmp15:= NOTAND_DSZ64(0x00000200, tmp15) 
U65d2: WRITEURAM(tmp15, 0x001f, 64) 

U65d4: MOVETOCREG_DSZ64(tmp6, 0x71a) 
U65d5: MOVETOCREG_DSZ64(tmp6, 0x067) SEQW GOTO U2529
U65d6: tmp4:= XOR_DSZ32(0xffffffffffffb22a, tmp3) 

U65d8: tmp6:= SHL_DSZ32(tmp0, 0x0000000a) 
U65d9: ROVR<- tmp9:= AND_DSZ32(tmp4, tmp0) SEQW SAVEUIP1 U65daSEQW GOTO U2178
U65da: tmp6:= AND_DSZ32(0x00080000, tmp6) 

U65dc: tmp7:= AND_DSZ32(0x00080000, tmp5) 
U65dd: tmp8:= unk_207(tmp6, tmp7) 
U65de: tmp1:= NOTAND_DSZ32(0x0009cdfd, tmp5) 

U65e0: tmp2:= AND_DSZ32(0x00000100, tmp0) 
U65e1: ROVR<- tmp1:= AND_DSZ32(tmp3, tmp1) SEQW SAVEUIP1 U65e2
U65e2: tmp1:= OR_DSZ32(tmp8, tmp1) 

U65e4: tmp9:= OR_DSZ32(tmp1, tmp9) 
U65e5: tmp5:= BTR_DSZ32(tmp5, 0x00000010) SEQW SAVEUIP1 U65e6SEQW GOTO U2e09
U65e6: unk_13f(tmp9) !m2 

U65e8: SYNCFULL-> MOVETOCREG_DSZ64(tmp9, 0x7fe) !m2 
U65e9: tmp2:= unk_207(tmp2) 
U65ea: tmp8:= unk_207(tmp6) 

U65ec: tmp8:= SHL_DSZ32(tmp8, 0x00000001) 
U65ed: tmp10:= AND_DSZ32(tmp5, tmp8) 
U65ee: tmp2:= ADD_DSZ32(tmp10, tmp2) 

U65f0: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U06f5) 
U65f1: rsp:= ADD_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 SEQW UEND0
U65f2: tmp11:= CONCAT_DSZ32(0x0000000c) 

U65f4: WRITEURAM(tmp11, 0x0073, 64) SEQW SAVEUIP1 U65f5SEQW GOTO U6916
U65f5: SYNCWAIT-> tmp2:= READURAM( , 0x0077, 64) 
U65f6: SAVEUIP_REGOVR(0x01, U65f8, 0x0001) !m0 

U65f8: SAVEUIP( , 0x01, U6ac0) !m0 
U65f9: tmp0:= ZEROEXT_DSZ32(0x00000013) 
U65fa: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000002b, U5e4e) !m0,m2 

U65fc: SAVEUIP_REGOVR(0x00, U65fd, 0x0002) SEQW GOTO U02b2
U65fd: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 
U65fe: tmp1:= AND_DSZ32(0x00020000, tmp2) 

U6600: tmp4:= AND_DSZ32(0x00040000, tmp2) 
U6601: tmp3:= READURAM( , 0x000d, 64) 
U6602: tmp3:= SHR_DSZ64(tmp3, 0x00000020) 

U6604: tmp3:= AND_DSZ32(0x000000ff, tmp3) 
U6605: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U6a5e
U6606: tmp1:= SELECTCC_DSZ32_CONDNZ(tmp1, 0x00040000) 

U6608: tmp0:= AND_DSZ32(0x000000ff, tmp2) 
U6609: tmp0:= SUB_DSZ32(tmp0, tmp3) 
U660a: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00040000) 

U660c: tmp1:= OR_DSZ32(tmp1, tmp0) 
U660d: tmp2:= ZEROEXT_DSZ8(tmp2, tmp1) SEQW GOTO U6a64
U660e: tmp0:= ZEROEXT_DSZ32(0x0000974c) 

U6610: tmp0:= CONCAT_DSZ16(0x00004000, tmp0) 
U6611: tmp2:= ZEROEXT_DSZ32(0x0000140d) 
U6612: PORTOUT_DSZ16_ASZ16_SC1(tmp0,  , tmp2) 

U6614: MOVETOCREG_DSZ64( , 0x00000000, 0x06c) 
U6615: tmp3:= CONCAT_DSZ16(0x00000080) 
U6616: rax:= ZEROEXT_DSZ32(0x0000000c) 

U6618: tmp2:= SUB_DSZ64(0x00000001) 
U6619: WRITEURAM(tmp2, 0x0030, 64) !m2 
U661a: WRITEURAM(tmp2, 0x0031, 64) !m2 

U661c: WRITEURAM(tmp2, 0x0032, 64) !m2 
U661d: WRITEURAM(tmp2, 0x0040, 64) !m2 
U661e: tmp14:= ZEROEXT_DSZ16(0x000059f9) 

U6620: tmp15:= ZEROEXT_DSZ16(0x00004005) 
U6621: tmp0:= ZEROEXT_DSZ16(0x00000001) 
U6622: tmp0:= CONCAT_DSZ16(tmp0, 0x00000800) 

U6624: tmp2:= ZEROEXT_DSZ16(0x0000017f) 
U6625: tmp2:= CONCAT_DSZ16(tmp2, 0x0000001f) 
U6626: tmp4:= SUB_DSZ32(0x00000001) 

U6628: tmp4:= CONCAT_DSZ32(0x000000ff, tmp4) 
U6629: tmp5:= ZEROEXT_DSZ32() SEQW GOTO U5bb4
U662a: tmp14:= AND_DSZ32(0x0000000a, tmp9) 

U662c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp14, U3a76) 
U662d: tmp15:= READURAM( , 0x0078, 64) 
U662e: LFNCEMARK-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000017, U6630) !m0,m1 SEQW GOTO U07a5

U6630: tmp0:= MOVEFROMCREG_DSZ64( , 0x01d) 
U6631: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000001, U3a80) !m1,m2 
U6632: tmp0:= ZEROEXT_DSZ64(tmp10) 

U6634: tmp14:= NOTAND_DSZ32(tmp0, 0x000000f0) 
U6635: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp14, U3a80) 
U6636: LFNCEMARK-> tmp3:= AND_DSZ64(0x000000ff, tmp0) 

U6638: tmp4:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U6639: tmp0:= ZEROEXT_DSZ32(0x0000000c) 
U663a: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp4, 0x0000000a, U079e) !m0 

U663c: tmp0:= ZEROEXT_DSZ64(tmp3) 
U663d: unk_eff() 
U663e: ROVR<- NOP SEQW SAVEUIP1 U6640SEQW GOTO U2b15

U6640: tmp1:= ZEROEXT_DSZ32(0x00000110) 
U6641: MOVETOCREG_DSZ64(tmp1, 0x29e, 32) !m1 
U6642: tmp3:= OR_DSZ32(0x00000001) 

U6644: tmp5:= OR_DSZ32() 
U6645: tmp1:= OR_DSZ32(0x00000001) SEQW GOTO U48f6
U6646: SAVEUIP( , 0x01, U08fe) !m0 

U6648: tmp15:= READURAM( , 0x0042, 64) 
U6649: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000000a, U7615) !m0,m1,m2 
U664a: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000003, U7615) !m0,m1,m2 

U664c: tmp15:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U664d: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000009, U7615) !m1,m2 
U664e: tmp0:= READURAM( , 0x0044, 64) 

U6650: tmp15:= SHR_DSZ32(tmp0, 0x00000010) 
U6651: tmp15:= AND_DSZ32(0x00000007, tmp15) 
U6652: tmp0:= SUB_DSZ16(tmp0, tmp1) 

U6654: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, U7615) 
U6655: tmp15:= SUB_DSZ16(tmp15, tmp0) 
U6656: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp15, U7615) 

U6658: SYNCMARK-> tmp0:= ADD_DSZ32(0x00000001, tmp0) 
U6659: tmp0:= SHL_DSZ32(tmp0, 0x00000004) 
U665a: unk_eff() 

U665c: ROVR<-SYNCWAIT-> tmp3:= MOVE_DSZ32(0x00000001) SEQW SAVEUIP1 U665dSEQW GOTO U2b15
U665d: tmp1:= ZEROEXT_DSZ32(0x00000110) 
U665e: MOVETOCREG_DSZ64(tmp1, 0x29e, 32) !m1,m2 

U6660: tmp1:= OR_DSZ32(0x00000001) 
U6661: tmp5:= OR_DSZ32() SEQW GOTO U48f6
FUN_ucode_0006662:
U6662: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW URET0

U6664: TESTUSTATE( , SYS, UST_VMX_DIS | UST_VMX_OP_DIS) !m1 ? SEQW GOTO U2769
U6665: tmp3:= READURAM( , 0x0043, 64) 
U6666: tmp3:= BT_DSZ64(tmp3, 0x0000002e) 

U6668: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U5f28
U6669: tmp4:= unk_88f() !m0,m1 
U666a: tmp4:= ZEROEXT_DSZ16N(tmp4) !m1 

U666c: WRITEURAM(tmp4, 0x0073, 64) !m2 
U666d: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp0, U05cc) 
U666e: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp3, U05cc) 

U6670: tmp3:= SHR_DSZN(r64dst, 0x0000000f) !m1 
U6671: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U05cc) 
U6672: tmp3:= ZEROEXT_DSZ32(0x0000002d) 

U6674: tmp4:= SELECTCC_DSZ32_CONDP(tmp0, 0x00000001) 
U6675: tmp3:= ADD_DSZ32(tmp4, tmp3) 
U6676: tmp3:= READURAM( , tmp3) 

U6678: tmp4:= SHR_DSZ32(r64dst, 0x00000003) 
U6679: tmp13:= READUIP_REGOVR(0x00) 
U667a: LFNCEWAIT-> tmp4:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp3, tmp4) 

U667c: tmp3:= AND_DSZ32(0x00000007, r64dst) 
U667d: BTUJB_DIRECT_NOTTAKEN(tmp4, U05cc, tmp3) SEQW GOTO U5f2e
U667e: tmp9:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x00000398, tmp12) 

U6680: tmp0:= SHR_DSZ16(tmp9, 0x00000008) 
U6681: tmp0:= AND_DSZ32(0x000000f0, tmp0) 
U6682: tmp8:= AND_DSZ32(0x000000f0, tmp2) 

U6684: tmp8:= SUB_DSZ32(tmp8, tmp0) 
U6685: tmp8:= MOVEMERGEFLGS_DSZ32(tmp0, tmp8) 
U6686: tmp8:= CMOVCC_DSZ32_CONDNBE(tmp8, tmp2) 

U6688: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp4, 0x000000a0, tmp8) 
U6689: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp9, 0x00000020, U4034) 
U668a: tmp9:= AND_DSZ32(0x000000f0, tmp9) 

U668c: tmp8:= AND_DSZ32(0x000000f0, tmp8) 
U668d: tmp9:= SUB_DSZ32(tmp8, tmp9) 
U668e: tmp9:= SELECTCC_DSZ32_CONDBE(tmp9, 0x00000002) 

U6690: tmp0:= READURAM( , 0x0043, 64) 
U6691: tmp0:= BT_DSZ64(tmp0, 0x00000002) 
U6692: tmp9:= SELECTCC_DSZ32_CONDB(tmp0, tmp9) 

U6694: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000002) 
U6695: tmp8:= MOVEFROMCREG_DSZ64( , 0x01d) 
U6696: tmp8:= NOTAND_DSZ32(tmp0, tmp8) 

U6698: tmp8:= OR_DSZ32(tmp9, tmp8) 
U6699: LFNCEWTMRK-> MOVETOCREG_DSZ64(tmp8, 0x01d) SEQW URET1
U669a: SAVEUIP( , 0x00, U2acd) 

U669c: SAVEUIP( , 0x01, U3048) !m0 
FUN_ucode_000669d:
U669d: tmp4:= AND_DSZ32(0x00000070, tmp11) 
U669e: tmp4:= SUB_DSZ32(0x00000020, tmp4) 

U66a0: tmp4:= SELECTCC_DSZ32_CONDZ(tmp4, 0x00000004) 
U66a1: tmp4:= OR_DSZ32(0x00000002, tmp4) 
U66a2: tmp1:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 

U66a4: tmp1:= NOTAND_DSZ32(tmp4, tmp1) 
U66a5: MOVETOCREG_DSZ64(tmp1, 0x223, 32) !m1,m2 
U66a6: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U66ae

U66a8: tmp2:= READURAM( , 0x005c, 64) 
U66a9: tmp2:= BT_DSZ32(tmp2, 0x00000008) 
U66aa: tmp2:= SELECTCC_DSZ32_CONDB(tmp2, 0x00000002) 

U66ac: tmp9:= OR_DSZ64(tmp9, tmp2) 
U66ad: tmp7:= OR_DSZ64(0x00000002, tmp7) 
U66ae: tmp4:= READURAM( , 0x0070, 64) 

U66b0: tmp4:= NOTAND_DSZ64(tmp7, tmp4) 
U66b1: tmp4:= MOVETOCREG_OR_DSZ64(tmp4, 0x2c4, tmp9) !m1,m2 
U66b2: MOVETOCREG_SHR_DSZ64(tmp4, 0x00000020, 0x008) !m2 

U66b4: tmp4:= SHR_DSZ32(tmp4, 0x00000018) 
U66b5: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp4, 0x2da, tmp8) !m1,m2 SEQW URET1
U66b6: tmp14:= unk_52b(tmp14) 

U66b8: tmp15:= unk_52b(tmp15) 
U66b9: tmm5:= unk_5b9(tmm6) 
U66ba: tmm6:= unk_4ee(tmm7, tmm6) 

U66bc: tmm7:= unk_4d7(tmm5, tmm7) 
U66bd: tmm6:= unk_6d8(xmm2, tmm6) 
U66be: tmm7:= unk_6d8(xmm2, tmm7) 

U66c0: tmp15:= ZEROEXT_DSZ32(0x00000300) 
U66c1: tmp8:= unk_ea6(tmp15) 
U66c2: tmp9:= unk_ea6(tmp15) 

U66c4: xmm0:= MOVHLPS(tmm1, tmm0) 
U66c5: tmp8:= unk_ea6(tmp15) 
U66c6: tmp9:= unk_ea6(tmp15) 

U66c8: xmm1:= MOVHLPS(tmm1, tmm0) 
U66c9: tmp15:= ZEROEXT_DSZ32(0x00000380) 
U66ca: tmp8:= unk_ea6(tmp15) 

U66cc: tmp9:= unk_ea6(tmp15) 
U66cd: xmm2:= MOVHLPS(tmm1, tmm0) 
U66ce: tmp8:= unk_ea6(tmp15) 

U66d0: tmp9:= unk_ea6(tmp15) 
U66d1: xmm3:= MOVHLPS(tmm1, tmm0) SEQW GOTO U61d9
U66d2: LFNCEWAIT-> tmp15:= MOVEFROMCREG_DSZ64( , 0x068) 

U66d4: tmp0:= BTS_DSZ32(tmp0, 0x0000001f) 
U66d5: tmp1:= READURAM( , 0x000e, 64) 
U66d6: SYNCFULL-> tmp1:= SHR_DSZ64(tmp1, 0x00000030) 

U66d8: tmp1:= CONCAT_DSZ16(tmp1, tmp15) 
U66d9: tmp1:= CONCAT_DSZ32(tmp1, tmp0) 
U66da: WRITEURAM(tmp1, 0x000e, 64) !m2 

U66dc: tmp0:= READURAM( , 0x005c, 64) 
U66dd: tmp0:= BT_DSZ32(tmp0, 0x00000008) 
U66de: tmp15:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000002) 

U66e0: tmp0:= SUB_DSZ64(0x00000001) 
U66e1: tmp0:= NOTAND_DSZ64(tmp15, tmp0) 
U66e2: WRITEURAM(tmp0, 0x0070, 64) !m2 

U66e4: tmp2:= READURAM( , 0x0020, 64) 
U66e5: tmp2:= AND_DSZ32(0x00007ffe, tmp2) 
U66e6: tmp2:= SHL_DSZ32(0x00000001, tmp2) 

U66e8: ROVR<- tmp1:= MOVE_DSZ32() SEQW SAVEUIP1 U66e9SEQW GOTO U02ba
U66e9: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x0004) !m2 
U66ea: tmp0:= OR_DSZ32(tmp2, tmp0) 

U66ec: PORTOUT_DSZ32_ASZ16_SC1(0x0004,  , tmp0) !m2 
U66ed: SYNCFULL-> PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 SEQW GOTO U6385
U66ee: tmp15:= SUB_DSZ32(0x00000400, tmp14) 

U66f0: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp15, U7639) 
U66f1: TESTUSTATE( , VMX, 0x0020) !m2 ? SEQW GOTO U66f8
U66f2: tmp15:= SUB_DSZ32(0x000000b0, tmp14) 

U66f4: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U18c4) 
U66f5: tmp15:= SUB_DSZ32(0x00000300, tmp14) 
U66f6: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U18c4) 

U66f8: tmp15:= READURAM( , 0x0043, 64) 
U66f9: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000028, U7639) !m1,m2 
U66fa: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp14, U5b75) 

U66fc: tmp15:= SHR_DSZ32(tmp14, 0x00000004) 
U66fd: tmp14:= CONCAT_DSZ32(tmp14, tmp15) 
U66fe: tmp15:= ZEROEXT_DSZ32(0xffffe90c) 

U6700: tmp15:= CONCAT_DSZ32(0x41ff01ff, tmp15) 
U6701: BTUJNB_DIRECT_NOTTAKEN(tmp15, U7639, tmp14) !m1,m2 
U6702: tmp15:= ZEROEXT_DSZ32(0x0000e904) 

U6704: tmp15:= CONCAT_DSZ32(0x41ff0100, tmp15) 
U6705: tmp15:= BT_DSZ64(tmp15, tmp14) 
U6706: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00000002) 

U6708: tmp15:= OR_DSZ32(0x00000001, tmp15) 
U6709: tmp14:= SHR_DSZ64(tmp14, 0x0000001e) SEQW GOTO U18c6
U670a: SYNCFULL-> NOP 

U670c: tmp11:= MOVEFROMCREG_DSZ64( , 0x070) 
U670d: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000004, U3074) !m1,m2 
U670e: BTUJNB_DIRECT_NOTTAKEN(tmp11, 0x00000006, U5ffe) !m0,m2 

U6710: SYNCMARK-> MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x00b) !m0,m2 
U6711: tmp11:= NOTAND_DSZ32(0x00000050, tmp11) 
U6712: tmp6:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 

U6714: tmp15:= ZEROEXT_DSZ32(0x00000009) 
U6715: tmp15:= unk_201(tmp15, 0x0000000a) 
U6716: BTUJB_DIRECT_NOTTAKEN(tmp6, U5ffe, tmp15) !m2 

U6718: SYNCWAIT-> tmp8:= MOVEFROMCREG_DSZ64( , 0x009) 
U6719: tmp8:= OR_DSZ32(0x00000040, tmp8) 
U671a: tmp8:= MOVEFROMCREG_DSZ64( , tmp8) 

U671c: tmp8:= SHL_DSZ64(tmp8, 0x00000010) 
U671d: tmp8:= SAR_DSZ64(tmp8, 0x00000010) 
U671e: tmp5:= MOVEFROMCREG_DSZ64( , 0x009) 

U6720: SAVEUIP_REGOVR(0x00, U6721, 0x0000) SEQW GOTO U30c4
U6721: tmp0:= SHL_DSZ64(tmp5, 0x00000001) 
U6722: tmp0:= SAR_DSZ64(tmp0, 0x00000001) 

U6724: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000007, U0292) !m0 
U6725: NOP SEQW GOTO U586a
U6726: MOVETOCREG_DSZ64(tmp0, 0x207, 32) !m1 

U6728: SYNCFULL-> MOVETOCREG_DSZ64(tmp1, 0x209, 32) !m1 
U6729: tmp0:= MOVEFROMCREG_DSZ64( , 0x233, 32) !m1 
U672a: tmp1:= MOVEFROMCREG_DSZ64( , 0x234, 32) !m1 

U672c: tmm0:= unk_747(mm0) 
U672d: tmm0:= unk_746(mm1, tmm0) 
U672e: tmp0:= MOVEFROMCREG_DSZ64( , 0x20a, 32) !m1 

U6730: tmp1:= MOVEFROMCREG_DSZ64( , 0x20b, 32) !m1 
U6731: tmm1:= unk_747(mm0) 
U6732: SYNCFULL-> tmm1:= unk_746(mm1, tmm1) 

U6734: MOVETOCREG_DSZ64( , 0x00000000, 0x233, 32) !m1 
U6735: MOVETOCREG_DSZ64( , 0x00000000, 0x234, 32) !m1 
U6736: MOVETOCREG_DSZ64( , 0x00000000, 0x207, 32) !m1 

U6738: MOVETOCREG_DSZ64( , 0x00000000, 0x209, 32) !m1 
U6739: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x208) !m0,m1 SEQW SAVEUIP0 U673aSEQW GOTO U7661
U673a: tmp0:= PORTIN_DSZ8_ASZ16_SC1(0x50d8) !m2 

U673c: tmp0:= SUB_DSZ8(tmp0, 0x00000020) 
U673d: SAVEUIP( , 0x00, U673e) 
U673e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U3899) 

U6740: tmm0:= XORPD(tmm0, tmm0) 
U6741: tmp0:= SUB_DSZ8(0x00000001, tmp0) SEQW GOTO U7661
U6742: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U421d) 

U6744: tmp2:= AND_DSZ32(0x00000010, tmp5) 
U6745: tmp2:= CMOVCC_DSZ32_CONDZ(tmp2, 0x00000001) 
U6746: tmp10:= ZEROEXT_DSZ32(0x00000001) 

U6748: tmm1:= unk_704(tmm2) 
U6749: tmm4:= unk_743(mm2, tmm1) 
U674a: tmm7:= unk_483(tmm4) 

U674c: tmp0:= BT_DSZ16(tmp5, 0x0000000a) 
U674d: tmp1:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000001) 
U674e: tmm1:= unk_743(mm1, tmm0) 

U6750: tmm0:= unk_482(tmm1, tmm7) 
U6751: tmm6:= unk_496(tmm3, tmm2) 
U6752: tmm0:= unk_53f(tmm6, tmm0) 

U6754: tmp8:= PINTMOVDTMM2I_DSZ32(tmm0) 
U6755: tmp3:= AND_DSZ8(0x00000001, tmp8) 
U6756: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U6758) SEQW GOTO U1236

U6758: tmp12:= OR_DSZ16(0x00000004, tmp12) 
U6759: tmp9:= unk_6a0() 
U675a: tmm0:= unk_53f(tmm0, tmm1) 

U675c: tmp4:= MOVEFROMCREG_DSZ64( , 0x486) 
U675d: tmp0:= AND_DSZ16(0x00000004, tmp4) 
U675e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U1948) SEQW GOTO U1236

U6760: tmp8:= MOVEFROMCREG_DSZ64( , 0x01b) SEQW SAVEUIP1 U6761SEQW GOTO U3916
U6761: tmp14:= AND_DSZ32(0x00007800, tmp2) 
U6762: tmp8:= XOR_DSZ64(tmp14, tmp8) 

U6764: SYNCMARK-> MOVETOCREG_DSZ64(tmp8, 0x752) !m2 
U6765: tmp5:= AETTRACE( , 0x00000000, 0x08, tmp8) 
U6766: tmp2:= OR_DSZ32(0x00008000, tmp2) 

U6768: tmp10:= ADDSUB_DSZ16_CONDD(0x00000001) 
U6769: tmp10:= SELECTCC_DSZ32_CONDNS(tmp10, 0x00000001) 
U676a: tmp10:= SUB_DSZ16(rcx, tmp10) 

U676c: tmp10:= ADDSUB_DSZ16_CONDD(tmp10, 0x00018000) 
U676d: SYNCWAIT-> tmp15:= SUB_DSZN(0x00008001, rcx) !m1 
U676e: tmp10:= SELECTCC_DSZ32_CONDNB(tmp15, tmp10) 

U6770: tmp10:= ZEROEXT_DSZ16(tmp10, 0x00018000) 
U6771: tmp4:= UFLOWCTRL( , tmp10, MSLOOPCTR) 
U6772: tmp11:= MOVEMERGEFLGS_DSZ32(0x00002549, tmp15) 

U6774: tmp11:= CMOVCC_DSZ32_CONDNB(tmp11, 0x00002558) 
U6775: SYNCMARK-> tmp4:= UFLOWCTRL( , tmp11, URET0) 
U6776: tmp2:= CONCAT_DSZ32(tmp10, tmp2) 

U6778: tmp1:= unk_0aa(tmp10) 
U6779: tmp1:= SUB_DSZN(tmp1) !m1 
U677a: tmp1:= SHL_DSZN(tmp1, tmp2) !m1 

U677c: SYNCWAIT-> tmp14:= SAVEUIP(0x01, U0466) !m0 SEQW URET0
FUN_ucode_000677d:
U677d: TESTUSTATE( , SYS, !UST_USER_MODE) !m0,m1 ? SEQW GOTO U6782
U677e: tmp2:= MOVEFROMCREG_DSZ64( , 0x7e1) 

U6780: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000000, U2711) !m1 
U6781: LFNCEMARK-> TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW URET0
U6782: tmp13:= READUIP_REGOVR(0x00) 

U6784: tmp0:= MOVEMERGEFLGS_DSZ32(0x0000001f, tmp8) 
U6785: tmp0:= CMOVCC_DSZ32_CONDB(tmp0, 0x00000020) 
U6786: tmp7:= SELECTCC_DSZ32_CONDB(tmp8, 0x00000800) 

U6788: tmp3:= SELECTCC_DSZ32_CONDB(tmp8, 0x00010000) 
U6789: MOVETOCREG_DSZ64(tmp3, 0x000) !m2 
U678a: tmp3:= CONCAT_DSZ16(tmp0, 0x00004e81) 

U678c: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U6791
U678d: tmp2:= READURAM( , 0x0043, 64) 
U678e: tmp12:= READURAM( , 0x004d, 64) 

U6790: SAVEUIP_REGOVR(0x01, U6791, 0x0000) !m0 SEQW GOTO U3979
U6791: tmp12:= READURAM( , 0x0011, 64) 
U6792: tmp3:= ZEROEXT_DSZ16(0x00001f90, tmp3) 

U6794: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW URET0
U6795: tmp2:= READURAM( , 0x004c, 64) 
U6796: tmp12:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002c0, mode=0x01, tmp12) 

U6798: SAVEUIP_REGOVR(0x01, U6799, 0x0001) !m0 SEQW GOTO U3979
U6799: NOP SEQW URET0
U679a: tmp11:= unk_6a0() 

U679c: tmp12:= unk_6a0() 
U679d: tmm5:= unk_6e1(tmm2, tmm3) 
U679e: tmp11:= unk_6a0() 

U67a0: tmm6:= unk_6e1(tmm2, tmm4) 
U67a1: tmm5:= unk_649(tmm3, tmm5) 
U67a2: tmp12:= unk_6a0() 

U67a4: tmm5:= unk_6e1(tmm2, tmm5) 
U67a5: tmm6:= unk_649(tmm4, tmm6) 
U67a6: tmp11:= unk_6a0() 

U67a8: tmm6:= unk_6e1(tmm2, tmm6) 
U67a9: tmp12:= unk_6a0() 
U67aa: tmm5:= unk_649(tmm3, tmm5) 

U67ac: tmm6:= unk_649(tmm4, tmm6) 
U67ad: tmm5:= unk_6e1(tmm1, tmm5) 
U67ae: tmm6:= unk_6e1(tmm2, tmm6) 

U67b0: tmp12:= unk_6a0() 
U67b1: tmm5:= unk_6c9(tmm5, tmm6) 
U67b2: tmm7:= unk_702(mm2) 

U67b4: tmm4:= unk_496(tmm4, tmm7) 
U67b5: tmm5:= unk_496(tmm5, tmm7) 
U67b6: mm0:= unk_689(tmm4, tmm5) !m2 SEQW GOTO U17ec

U67b8: tmp14:= READUIP_REGOVR(0x01) !m0 
U67b9: tmp15:= BT_DSZ16(tmp1, 0x0000000f) 
U67ba: tmp8:= MOVEMERGEFLGS_DSZ64(tmp8, tmp15) 

U67bc: tmp8:= CMOVCC_DSZ64_CONDNB(tmp8, tmp9) 
U67bd: tmp12:= ADD_DSZ16(0x00000008, tmp1) 
U67be: tmp10:= SHR_DSZ32(tmp12, 0x00000003) 

U67c0: tmp10:= BTR_DSZ32(tmp10, 0x0000000c) 
U67c1: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp10) 
U67c2: tmp9:= CMOVCC_DSZ64_CONDB(tmp9, tmp8) 

U67c4: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp12) 
U67c5: tmp12:= SHR_DSZ32(tmp1, 0x00000003) 
U67c6: tmp12:= BTR_DSZ32(tmp12, 0x0000000c) 

U67c8: tmp10:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp9, mode=0x1c, tmp10) 
U67c9: tmp15:= SELECTCC_DSZ32_CONDNB(tmp9, 0xffffffffffffffff) 
U67ca: tmp10:= OR_DSZ8(tmp15, tmp10) 

U67cc: tmp12:= LDPPHYSTICKLE_DSZ8_ASZ64_SC1(tmp8, mode=0x1c, tmp12) 
U67cd: tmp12:= CONCAT_DSZ8(tmp10, tmp12) 
U67ce: tmp15:= AND_DSZ32(0x00000007, tmp1) 

U67d0: tmp12:= SHR_DSZ32(tmp12, tmp15) 
U67d1: tmp15:= SHR_DSZ32(0x0000000f, tmp2) 
U67d2: tmp12:= AND_DSZ32(tmp15, tmp12) 

U67d4: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp12, U30d4) SEQW URET1
U67d5: tmp2:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U67d6: STAD_DSZN_ASZ32_SC1(tmp2, SS,  , mode=0x1a, rbp) !m1 

U67d8: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U67d9) SEQW GOTO U67ed
U67d9: tmp7:= MOVEFROMCREG_DSZ64( , 0x01b) 
U67da: SYNCFULL-> MOVETOCREG_DSZ64(tmp7, 0x752) 

U67dc: tmp0:= SUB_DSZ32(0x00000001, tmp0) 
U67dd: tmp5:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 
U67de: tmp2:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, tmp2) !m0,m1 

U67e0: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U67ea) 
U67e1: tmp3:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rbp) !m0,m1 
U67e2: tmp4:= LDZX_DSZN_ASZ32_SC1(tmp3, SS, mode=0x1a) !m1 

U67e4: tmp3:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, tmp3) !m0,m1 
U67e5: STAD_DSZN_ASZ32_SC1(tmp2, SS,  , mode=0x1a, tmp4) !m1 
U67e6: tmp2:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, tmp2) !m0,m1 

U67e8: tmp0:= SUB_DSZ32(0x00000001, tmp0) 
U67e9: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U67ea) SEQW GOTO U67e2
U67ea: STAD_DSZN_ASZ32_SC1(tmp2, SS,  , mode=0x1a, tmp5) !m1 

U67ec: unk_256() !m1 
U67ed: unk_c32(tmp2, tmp1) !m1 
U67ee: tmp3:= SUB_DSZN(IMM_MACRO_ALIAS_DATASIZE, rsp) !m0,m1 

U67f0: tmp2:= ADD_DSZN(tmp1, tmp2) !m1 
U67f1: rbp:= ZEROEXT_DSZ32N(tmp3, rbp) !m1 
U67f2: rsp:= ZEROEXT_DSZ8N(tmp2, rsp) !m1 SEQW UEND0

U67f4: unk_13f(tmp5) !m2 
U67f5: MOVETOCREG_DSZ64(tmp5, 0x7fe) 
U67f6: tmp9:= AND_DSZ32(tmp5, tmp9) 

U67f8: tmp7:= BT_DSZ32(tmp5, 0x00000011) 
U67f9: tmp7:= SELECTCC_DSZ32_CONDNB(tmp7, 0x00000003) 
U67fa: tmp4:= SELECTCC_DSZ32_CONDNZ(tmp13, 0x00000003) 

U67fc: tmp7:= OR_DSZ32(tmp7, tmp4) 
U67fd: tmp4:= RDSEGFLD(UNK_SEG_09, SEL) 
U67fe: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp4, 0x79e, tmp7) !m2 

U6800: tmp4:= SELECTCC_DSZ32_CONDNZ(tmp13, 0x00000060) 
U6801: tmp4:= SHL_DSZ32(tmp4, 0x00000010) 
U6802: LFNCEWAIT-> tmp7:= RDSEGFLD(SS, SEL+FLGS+LIM) 

U6804: tmp7:= OR_DSZ64(tmp7, tmp4) 
U6805: WRSEGFLD(tmp7, SS, SEL+FLGS+LIM) 
U6806: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x072) !m2 

U6808: UJMPCC_DIRECT_NOTTAKEN_CONDO(tmp13, U0414) 
U6809: tmp3:= ZEROEXT_DSZ32(0x00000028) 
U680a: tmp1:= AND_DSZ32(0x000000fc, tmp6) 

U680c: tmp15:= SUB_DSZ32(0x00000034, tmp1) 
U680d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U643a) 
U680e: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp13, U0414) 

U6810: tmp15:= SUB_DSZ32(0x0000002c, tmp1) 
U6811: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U0414) SEQW GOTO U643a
U6812: tmp12:= OR_DSZ16(0x00000008, tmp12) 

U6814: tmp3:= MOVEFROMCREG_DSZ64( , 0x486) 
U6815: tmp2:= AND_DSZ16(0x00000008, tmp3) 
U6816: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U0cb9) 

U6818: tmp4:= SHR_DSZ16(tmp3, 0x0000000a) 
U6819: tmp4:= AND_DSZ8(0x00000003, tmp4) 
U681a: mm5:= unk_72a(tmm0) 

U681c: tmp2:= AND_DSZ8(0x00000001, tmp5) 
U681d: tmp3:= MOVEMERGEFLGS_DSZ32(0x0000000c, tmp2) 
U681e: tmp2:= CMOVCC_DSZ32_CONDNZ(tmp3, 0x0000000a) 

U6820: tmp3:= SHR_DSZ8(tmp2, tmp4) 
U6821: tmp3:= AND_DSZ8(0x00000001, tmp3) 
U6822: tmp12:= unk_6a0() 

U6824: tmp10:= unk_6a0() 
U6825: tmm4:= unk_743(mm3, tmm4) 
U6826: tmm0:= unk_483(tmm4, tmm2) 

U6828: tmm0:= unk_702(mm5, tmm0) 
U6829: tmp4:= MOVEMERGEFLGS_DSZ32(0x00000012, tmp3) 
U682a: tmp5:= CMOVCC_DSZ32_CONDZ(tmp4, 0x00000010) 

U682c: LFNCEMARK-> tmm6:= unk_740(mm5) !m2 
U682d: tmp2:= SHR_DSZ16(tmp6, 0x00000009) 
U682e: tmp3:= AND_DSZ8(tmp3, tmp2) 

U6830: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp3, U0be9) SEQW GOTO U1236
U6831: tmp1:= CONCAT_DSZ32(tmp1, tmp0) 
U6832: tmp12:= CONCAT_DSZ32(tmp3, tmp2) 

U6834: tmp0:= CONCAT_DSZ32(tmp8, tmp4) 
U6835: tmp10:= CONCAT_DSZ32(tmp10, tmp9) 
U6836: tmp2:= MOVEFROMCREG_DSZ64( , 0x562) 

U6838: tmp2:= NOTAND_DSZ64(0x00000fff, tmp2) 
U6839: tmp4:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000120) 
U683a: tmp6:= ADD_DSZ64(tmp14, tmp13) 

U683c: tmp6:= ADD_DSZ64(0x00000060, tmp6) 
U683d: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0xffffffffffffffde) 
U683e: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, U38d9, tmp5) !m1,m2 

U6840: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0xffffffffffffffe6) 
U6841: CMPUJNZ_DIRECT_NOTTAKEN(tmp12, U38d9, tmp5) !m1,m2 
U6842: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0xffffffffffffffee) 

U6844: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, U38d9, tmp5) !m1,m2 
U6845: tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp4, 0xfffffffffffffff6) 
U6846: CMPUJNZ_DIRECT_NOTTAKEN(tmp10, U38d9, tmp5) !m1,m2 

U6848: tmp0:= READURAM( , 0x0015, 64) 
U6849: WRITEURAM(tmp6, 0x0015, 64) !m2 
U684a: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000020, mode=0x01) 

U684c: MOVETOCREG_BTS_DSZ64( , 0x00000011, 0x2dd) !m1,m2 
U684d: CMPUJNZ_DIRECT_NOTTAKEN(tmp6, 0x00000000, U1ea6) !m2 
U684e: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, 0x00000020, mode=0x01,  , tmp0) SEQW GOTO U1ea6

U6850: tmp8:= MOVEFROMCREG_DSZ64( , 0x01b) SEQW SAVEUIP1 U6851SEQW GOTO U3916
U6851: tmp14:= AND_DSZ32(0x00007800, tmp2) 
U6852: tmp8:= XOR_DSZ64(tmp14, tmp8) 

U6854: SYNCMARK-> MOVETOCREG_DSZ64(tmp8, 0x752) !m2 
U6855: tmp5:= AETTRACE( , 0x00000000, 0x08, tmp8) 
U6856: tmp2:= OR_DSZ32(0x00008000, tmp2) 

U6858: tmp10:= ADDSUB_DSZ16_CONDD(0x00000001) 
U6859: tmp10:= SELECTCC_DSZ32_CONDNS(tmp10, 0x00000001) 
U685a: tmp10:= SUB_DSZ16(rcx, tmp10) 

U685c: tmp10:= ADDSUB_DSZ16_CONDD(tmp10, 0x00018000) 
U685d: SYNCWAIT-> tmp15:= SUB_DSZN(0x00008001, rcx) !m1 
U685e: tmp10:= SELECTCC_DSZ32_CONDNB(tmp15, tmp10) 

U6860: tmp10:= ZEROEXT_DSZ16(tmp10, 0x00018000) 
U6861: tmp4:= UFLOWCTRL( , tmp10, MSLOOPCTR) 
U6862: tmp11:= MOVEMERGEFLGS_DSZ32(0x00001bea, tmp15) 

U6864: tmp11:= CMOVCC_DSZ32_CONDNB(tmp11, 0x00001bf9) 
U6865: SAVEUIP( , 0x00, U0686) 
U6866: tmp4:= UFLOWCTRL(tmp4, tmp11, URET0) 

U6868: tmp2:= CONCAT_DSZ32(tmp10, tmp2) 
U6869: tmp1:= unk_0aa(tmp10) 
U686a: tmp1:= SUB_DSZN(tmp1) !m1 

U686c: tmp1:= SHL_DSZN(tmp1, tmp2) !m1 
U686d: tmp14:= SAVEUIP(0x01, U0466) !m0 SEQW URET0
U686e: tmp0:= ZEROEXT_DSZ32(0x00000037) 

U6870: SAVEUIP_REGOVR(0x01, U6871, 0x0032) !m0 SEQW GOTO U1d02
U6871: tmp0:= OR_DSZ32(rcx) 
U6872: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U2711) !m1 

U6874: tmp4:= CONCAT_DSZ32(rdx, rax) 
U6875: BTUJNB_DIRECT_NOTTAKEN(tmp4, 0x00000000, U2711) !m1 
U6876: tmp0:= NOTAND_DSZ64(0x0000001b, tmp4) 

U6878: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 
U6879: tmp0:= AND_DSZ32(0x00000008, tmp4) 
U687a: tmp1:= AND_DSZ32(0x00000010, tmp4) 

U687c: tmp0:= SELECTCC_DSZ64_CONDZ(tmp0, 0x00000010) 
U687d: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, U2711, tmp1) !m1 
U687e: tmp0:= READURAM( , 0x0035, 64) !m2 

U6880: tmp0:= BT_DSZ64(tmp0, 0x0000003c) 
U6881: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x00000018) 
U6882: tmp0:= AND_DSZ32(tmp0, tmp4) 

U6884: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U2711) 
U6885: LFNCEWAIT-> tmp1:= READURAM( , 0x005b, 64) 
U6886: tmp0:= SHL_DSZ64(tmp4, 0x00000038) 

U6888: WRITEURAM(tmp0, 0x005b, 64) !m2 
U6889: tmp1:= XOR_DSZ64(tmp1, tmp0) 
U688a: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000003b, U3869) !m0,m1,m2 

U688c: NOP SEQW UEND0
U688d: tmp0:= MOVEFROMCREG_DSZ64( , 0x38c, 32) !m1 
U688e: tmp0:= NOTAND_DSZ32(tmp0, 0xa0000000) 

U6890: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000400, tmp0) 
U6891: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x000007a8) 
U6892: MOVETOCREG_DSZ64(rbx, tmp0) !m2 

U6894: tmp0:= MOVE_DSZ32(0x00006898) 
U6895: tmp0:= CONCAT_DSZ16(0x00000088, tmp0) 
U6896: WRITEURAM(tmp0, 0x0007, 32) !m2 

U6898: SIGEVENT( , 0x0000007f) 
U6899: LFNCEWAIT-> tmp0:= READURAM( , 0x001f, 64) 
U689a: tmp0:= OR_DSZ32(0x00000001, tmp0) 

U689c: WRITEURAM(tmp0, 0x001f, 32) !m2 SEQW SAVEUIP0 U689dSEQW GOTO U04fc
U689d: tmp9:= MOVE_DSZ32(0x00700084) 
U689e: tmp9:= CONCAT_DSZ32(tmp9, 0x00000000) 

U68a0: tmp7:= ZEROEXT_DSZ32(0x00000000) 
U68a1: TESTUSTATE( , VMX, !0x0001) !m0,m2 ? SEQW GOTO U68a8
U68a2: tmp8:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U68a4: tmp8:= NOTAND_DSZ32(tmp8, 0x00000200) 
U68a5: tmp8:= SHR_DSZ32(tmp8, 0x00000009) 
U68a6: tmp9:= OR_DSZ64(tmp8, tmp9) 

U68a8: tmp2:= ZEROEXT_DSZ32(0x00000200) 
U68a9: MOVETOCREG_DSZ64(tmp2, 0x2f1, 32) !m1,m2 
U68aa: tmp8:= ZEROEXT_DSZ32(0x00000008) 

U68ac: tmp11:= ZEROEXT_DSZ32(0x00020101) SEQW GOTO U669a
U68ad: WRITEURAM(tmp14, 0x008d, 64) !m2 
U68ae: tmp7:= READURAM( , 0x005c, 64) 

U68b0: tmp7:= BT_DSZ32(tmp7, 0x00000010) 
U68b1: tmp9:= SUB_DSZ64(0x00001000, tmp14) 
U68b2: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp7) 

U68b4: tmp7:= MOVEFROMCREG_DSZ64( , 0x51b) 
U68b5: tmp7:= ZEROEXT_DSZ8( , tmp7) 
U68b6: tmp7:= CMOVCC_DSZ64_CONDB(tmp9, tmp7) 

U68b8: tmp8:= ADD_DSZ64(0x00000320, tmp7) 
U68b9: LFNCEMARK-> WRITEURAM(tmp8, 0x004e, 64) !m2 
U68ba: WRMSLOOPCTRFBR( , 0x0000001f) 

U68bc: tmp9:= ZEROEXT_DSZ32(0x00000124) 
U68bd: tmm5:= FPREADROM_DTYPENOP(tmp9) 
U68be: tmp10:= PINTMOVDTMM2I_DSZ64(tmm5) 

U68c0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8,  , tmp10) 
U68c1: tmp9:= ADD_DSZ32(0x00000001, tmp9) 
U68c2: tmp8:= ADD_DSZ64(0x00000008, tmp8) 

U68c4: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U68bd
U68c5: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp13, U236a) 
U68c6: tmp5:= ADD_DSZ64(0x00000080, tmp14) 

U68c8: tmp6:= ZEROEXT_DSZ32(0x00000004) 
U68c9: tmp11:= ZEROEXT_DSZ16(0x00004644) 
U68ca: tmp11:= CONCAT_DSZ16(0x00000001, tmp11) 

U68cc: WRITEURAM(tmp11, 0x0047, 32) !m2 SEQW GOTO U50c4
U68cd: tmp15:= unk_203( , 0x00000001) 
U68ce: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U2c61) 

U68d0: BTUJB_DIRECT_NOTTAKEN(tmp13, 0x00000015, U2c61) !m1 
U68d1: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x0000000b, U2c61) !m0,m1 
U68d2: tmp5:= READURAM( , 0x0025, 64) 

U68d4: tmp6:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000004, tmp5) 
U68d5: CMPUJNZ_DIRECT_NOTTAKEN(tmp6, 0x00000000, U2c61) !m1 
U68d6: tmp3:= MOVEFROMCREG_DSZ64( , 0x004) 

U68d8: tmp15:= READURAM( , 0x001f, 64) 
U68d9: tmp15:= OR_DSZ32(tmp15, tmp3) 
U68da: tmp15:= AND_DSZ32(0x00000200, tmp15) 

U68dc: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x08000000) 
U68dd: tmp0:= OR_DSZ32(tmp15, tmp0) 
U68de: tmp3:= NOTAND_DSZ32(0x00000003, tmp3) 

U68e0: MOVETOCREG_OR_DSZ64(tmp3, 0x00000002, 0x004) !m0,m2 
U68e1: tmp6:= SUB_DSZ32(0x00000001) 
U68e2: tmp3:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x0000039e, mode=0x01, tmp12) 

U68e4: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, tmp0) 
U68e5: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000004, tmp5, tmp6) 
U68e6: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(0x00000020, tmp5, tmp3) 

U68e8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000008, tmp5, tmp1) 
U68e9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000018, tmp5, tmp2) 
U68ea: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000010, tmp5, tmp9) 

U68ec: SIGEVENT( , 0x00000051) SEQW GOTO U079d
FUN_ucode_00068ed:
U68ed: tmp3:= MOVEFROMCREG_DSZ64( , 0x575) 
U68ee: tmp4:= NOTAND_DSZ32(tmp3, 0x00000800) 

U68f0: tmp3:= NOTAND_DSZ64(0x00000fff, tmp3) 
U68f1: tmp13:= MOVEFROMCREG_DSZ64( , 0x574) 
U68f2: tmp4:= OR_DSZ32(tmp11, tmp4) 

U68f4: tmp13:= AND_DSZ64(tmp3, tmp13) 
U68f5: tmp3:= AND_DSZ64(tmp3, tmp15) 
U68f6: tmp3:= SUB_DSZ64(tmp13, tmp3) 

U68f8: tmp4:= OR_DSZ64(tmp4, tmp3) 
U68f9: tmp4:= SELECTCC_DSZ32_CONDNZ(tmp4, 0x00000003) 
U68fa: tmp3:= MOVEFROMCREG_DSZ64( , 0x573) 

U68fc: tmp13:= NOTAND_DSZ32(tmp3, 0x00000800) 
U68fd: tmp13:= OR_DSZ32(tmp11, tmp13) 
U68fe: tmp3:= NOTAND_DSZ64(0x00000fff, tmp3) 

U6900: tmp11:= MOVEFROMCREG_DSZ64( , 0x572) 
U6901: tmp11:= AND_DSZ32(tmp3, tmp11) 
U6902: tmp3:= AND_DSZ64(tmp3, tmp15) 

U6904: tmp3:= SUB_DSZ64(tmp11, tmp3) 
U6905: tmp13:= OR_DSZ64(tmp13, tmp3) 
U6906: tmp13:= SELECTCC_DSZ32_CONDNZ(tmp13, 0x00000003) 

U6908: tmp13:= SELECTCC_DSZ32_CONDB(tmp12, tmp13) 
U6909: tmp4:= OR_DSZ32(tmp4, tmp13) 
U690a: tmp3:= MOVEFROMCREG_DSZ64( , 0x51b) 

U690c: tmp3:= ZEROEXT_DSZ16(tmp4, tmp3) SEQW URET1
U690d: tmp11:= ZEROEXT_DSZ32(0x00000004) 
U690e: tmp3:= ADD_DSZN(tmp13, tmp4) !m1 

U6910: tmp3:= SUB_DSZN(0x00000001, tmp3) !m1 
U6911: tmp2:= TEST_DSZ64(tmp3, tmp3) 
U6912: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U27f1) 

U6914: WRITEURAM(tmp4, 0x008d, 64) !m2 
U6915: SAVEUIP( , 0x01, U6019) !m0 
FUN_ucode_0006916:
U6916: tmp1:= READURAM( , 0x0020, 64) 

U6918: tmp0:= SHR_DSZ64(tmp1, 0x00000030) 
U6919: tmp1:= AND_DSZ32(0x00007ffe, tmp1) 
U691a: tmp1:= SHR_DSZ32(tmp1, 0x00000001) 

U691c: tmp0:= BTR_DSZ32(tmp0, tmp1) 
U691d: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x0004) !m2 
U691e: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U692a) !m1 

U6920: tmp3:= WRMSLOOPCTRFBR( , 0x0000000f) 
U6921: tmp3:= SHL_DSZ32(tmp3, 0x00000001) 
U6922: tmp2:= SHR_DSZ32(tmp1, 0x0000001e) 

U6924: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U6925: tmp3:= OR_DSZ32(tmp2, tmp3) 
U6926: tmp1:= SHL_DSZ32(tmp1, 0x00000002) 

U6928: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U6921
U6929: tmp0:= NOTAND_DSZ32(tmp3, tmp0) 
U692a: tmp0:= CONCAT_DSZ32(tmp0) 

U692c: SYNCMARK-> WRITEURAM(tmp0, 0x0153, 64) !m2 SEQW URET1
U692d: tmp10:= MOVEFROMCREG_DSZ64( , 0x7fe) !m2 
U692e: tmp10:= READAFLAGS( , tmp10) !m2 

U6930: tmp9:= ZEROEXT_DSZ32() 
U6931: tmp4:= ZEROEXT_DSZ32(tmp13) 
U6932: tmp13:= TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U6939

U6934: tmp15:= READURAM( , 0x0014, 64) 
U6935: tmp15:= SHR_DSZ64(tmp15, 0x00000015) 
U6936: tmp15:= BT_DSZ32(tmp15, tmp2) 

U6938: tmp13:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00020000) 
U6939: ROVR<- tmp2:= ZEROEXT_DSZ32(tmp1) SEQW SAVEUIP1 U693aSEQW GOTO U050c
U693a: tmp1:= ZEROEXT_DSZ32() 

U693c: tmp10:= MOVETOCREG_OR_DSZ64(tmp10, 0x7fe, tmp9) 
U693d: LFNCEMARK-> tmp10:= SUB_DSZ8(0x00000012, tmp2) 
U693e: tmp10:= SELECTCC_DSZ32_CONDNZ(tmp10, 0x00000800) 

U6940: tmp15:= SUB_DSZ8(0x00000001, tmp2) 
U6941: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U6942) SEQW GOTO U6948
U6942: tmp15:= ZEROEXT_DSZ32(0x000000f5) 

U6944: MOVETOCREG_DSZ64(tmp15, 0x00b) 
U6945: tmp1:= MOVEFROMCREG_DSZ64( , 0x01c) 
U6946: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x01c) !m2 

U6948: tmp0:= OR_DSZ32(0x00001000, tmp10) SEQW SAVEUIP0 U6949SEQW GOTO U2899
U6949: tmp2:= BTS_DSZ32(tmp2, 0x0000001f) 
U694a: tmp2:= OR_DSZ32(tmp5, tmp2) 

U694c: LFNCEWAIT-> tmp10:= MOVEFROMCREG_DSZ64( , 0x000) 
U694d: BTUJB_DIRECT_NOTTAKEN(tmp13, 0x00000011, U1f92) !m2 SEQW GOTO U4e84
FUN_ucode_000694e:
U694e: tmp4:= SHR_DSZ32(tmp14, 0x0000000d) 

U6950: tmp2:= AND_DSZ16(0xfffffffffffffffc, tmp2) 
U6951: tmp4:= AND_DSZ32(0x00000003, tmp4) 
U6952: tmp2:= OR_DSZ16(tmp4, tmp2) 

U6954: tmp4:= AND_DSZ32(0x00000001, tmp4) 
U6955: tmp1:= AND_DSZ32(0x00000003, tmp6) 
U6956: tmp1:= SHL_DSZ32(tmp1, 0x00000004) 

U6958: tmp4:= MOVEINSERTFLGS_DSZ64(tmp1, tmp4) 
U6959: tmp2:= MOVEINSERTFLGS_DSZ64(tmp1, tmp2) 
U695a: tmp3:= CMOVCC_DSZ32_CONDS(tmp4, tmp0) 

U695c: tmp3:= CMOVCC_DSZ32_CONDNO(tmp2, tmp3) 
U695d: tmp1:= MOVEMERGEFLGS_DSZ32(0x00000003, tmp1) 
U695e: tmp1:= CMOVCC_DSZ32_CONDZ(tmp1, 0x0000000b) 

FUN_ucode_0006960:
U6960: tmp2:= AND_DSZ32(0x000000fc, tmp6) 
U6961: tmp2:= SHR_DSZ32(tmp2, 0x00000002) 
U6962: tmp1:= CONCAT_DSZ8(tmp1, tmp2) 

U6964: TESTUSTATE( , SYS, UST_SMM | 0x2000) !m1 ? SEQW GOTO U144c
U6965: tmp13:= READUIP_REGOVR(0x00) 
U6966: tmp5:= ZEROEXT_DSZ32(0x00001449) 

U6968: tmp8:= AND_DSZ32(0x000007ff, tmp1) 
U6969: tmp8:= CONCAT_DSZ16(0x00008000, tmp8) 
U696a: tmp15:= AND_DSZ32(0x000000e0, tmp1) 

U696c: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, 0xd600d000) 
U696d: tmp15:= SHL_DSZ32(tmp15, tmp1) 
U696e: tmp8:= SELECTCC_DSZ32_CONDNS(tmp15, tmp8) SEQW GOTO U479a

U6970: LFNCEMARK-> NOP SEQW SAVEUIP1 U6971SEQW GOTO U2e21
U6971: tmp12:= MOVEFROMCREG_DSZ64( , 0x511) 
U6972: tmp12:= SHL_DSZ64(tmp12, 0x00000010) 

U6974: tmp12:= SAR_DSZ64(tmp12, 0x00000010) 
U6975: tmp5:= AND_DSZ16(0xfffffffffffff000, tmp12) 
U6976: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000006, U3b45) !m0,m1,m2 

U6978: SAVEUIP( , 0x00, U27ac) SEQW SAVEUIP1 U6979SEQW GOTO U0bbc
U6979: tmp15:= MOVEFROMCREG_DSZ64( , 0x000) 
U697a: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000016, U6984) !m0,m1 

U697c: TESTUSTATE( , SYS, 0x2000) !m1 ? SEQW GOTO U1a18
U697d: tmp3:= MOVEFROMCREG_DSZ64( , 0x555) 
U697e: tmp15:= MOVEFROMCREG_DSZ64( , 0x556) 

U6980: tmp3:= AND_DSZ64(tmp15, tmp3) 
U6981: tmp15:= AND_DSZ64(tmp15, tmp12) 
U6982: CMPUJNZ_DIRECT_NOTTAKEN(tmp3, U1a18, tmp15) !m2 

U6984: tmp15:= AND_DSZ32(0x00140000, tmp11) 
U6985: tmp15:= SUB_DSZ32(0x00040000, tmp15) 
U6986: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U4481) 

U6988: tmp11:= AND_DSZ32(0x0000001f, tmp11) 
U6989: LFNCEWTMRK-> tmp15:= READURAM( , 0x005c, 64) 
U698a: tmp15:= BT_DSZ64(tmp15, 0x00000029) 

U698c: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00000020) 
U698d: tmp11:= OR_DSZ32(tmp15, tmp11) SEQW GOTO U1a1c
U698e: tmp2:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U6990: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000012, U2769) !m0,m1 
U6991: tmp11:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U6992: BTUJB_DIRECT_NOTTAKEN(tmp11, 0x00000003, U2771) !m0,m1 

U6994: tmp6:= READURAM( , 0x005b, 64) !m2 
U6995: tmp6:= SHR_DSZ64(tmp6, 0x00000038) 
U6996: tmp11:= ZEROEXT_DSZ64() 

U6998: tmp13:= SAVEUIP(0x00, U4cdd) 
U6999: tmp4:= AND_DSZ32(rax, tmp6) 
U699a: tmp4:= BTS_DSZ64(tmp4, 0x0000003f) 

U699c: tmp5:= OR_DSZ64(0x00000004, tmp4) 
U699d: tmp5:= OR_DSZ64(tmp11, tmp5) 
U699e: SYNCMARK-> UFLOWCTRL( , tmp5, USTATE) 

U69a0: WRITEURAM(tmp5, 0x003f, 64) !m2 
U69a1: tmp11:= LA2LIN_DSZN(r64base, DS, r64idx, IMM_MACRO_ALIAS_DISPLACEMENT) !m0,m1 
U69a2: tmp11:= ZEROEXT_DSZ16N(tmp11) !m1 

U69a4: tmp4:= BT_DSZ64(tmp4, 0x00000003) 
U69a5: tmp7:= MOVEMERGEFLGS_DSZ64(0x0000027f, tmp4) 
U69a6: tmp8:= CMOVCC_DSZ64_CONDB(tmp7, 0x0000023f) 

U69a8: tmp4:= BT_DSZ64(tmp4, 0x00000004) 
U69a9: tmp7:= SELECTCC_DSZ64_CONDNB(tmp4, 0x00000040) 
U69aa: tmp8:= ADD_DSZ64(tmp8, tmp7) 

U69ac: tmp4:= BT_DSZ64(tmp4, 0x00000008) 
U69ad: tmp7:= SELECTCC_DSZ64_CONDNB(tmp4, 0x00000080) 
U69ae: tmp8:= ADD_DSZ64(tmp8, tmp7) SEQW URET0

compute_ucode_sha_end:
U69b0: tmp7:= ADD_DSZ64(0x00000020, tmp7) 
U69b1: tmp5:= ADD_DSZ64(0x00000184, tmp14) 
U69b2: tmp6:= ADD_DSZ64(0x00000080, tmp14) 

U69b4: unk_13f() !m2 
U69b5: tmp0:= BTS_DSZ64(0x00000000, 0x00000020) 
U69b6: tmm1:= unk_744(mm0) 

U69b8: tmm1:= unk_645(tmm1) 
U69b9: tmp11:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, 0x000000f8) 
U69ba: tmp11:= SHR_DSZ64(tmp11, 0x00000010) 

U69bc: tmp11:= ADD_DSZ64(0x00000002, tmp11) 
U69bd: tmm5:= unk_744(tmm3) 
U69be: tmm5:= unk_645(tmm5) 

U69c0: tmp12:= WRMSLOOPCTRFBR(0x0000001f) 
U69c1: tmp0:= ZEROEXT_DSZ32() 
U69c2: tmm5:= unk_6e6(tmm5, tmm1) 

U69c4: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp0) 
U69c5: tmp1:= unk_37f(tmp1) !m2 
U69c6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp0, tmp1) 

U69c8: tmp0:= ADD_DSZ64(0x00000008, tmp0) 
U69c9: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U69c4
U69ca: tmp10:= ZEROEXT_DSZ64(tmp5) 

U69cc: tmp9:= ZEROEXT_DSZ32(0x00000004) 
U69cd: tmp8:= ZEROEXT_DSZ32(0x00000100) 
U69ce: tmp8:= ADD_DSZ32(0x00000008, tmp8) 

U69d0: SAVEUIP( , 0x00, U191a) SEQW GOTO U735c
U69d1: tmp1:= SHR_DSZ64(tmp5, 0x00000020) 
U69d2: tmp3:= MOVEFROMCREG_DSZ64( , 0x573) 

U69d4: tmp2:= NOTAND_DSZ32(tmp3, 0x00000800) 
U69d5: tmp1:= OR_DSZ32(tmp2, tmp1) 
U69d6: TESTUSTATE( , UCODE, 0x0800) ? SEQW GOTO U69e0

U69d8: tmp3:= AND_DSZ32(tmp3, tmp5) 
U69d9: tmp2:= MOVEFROMCREG_DSZ64( , 0x572) 
U69da: tmp3:= XOR_DSZ32(tmp2, tmp3) 

U69dc: tmp3:= NOTAND_DSZ32(0x00000fff, tmp3) 
U69dd: tmp1:= OR_DSZ32(tmp3, tmp1) 
U69de: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U2711) 

U69e0: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 
U69e1: tmp2:= SAVEUIP(tmp5, 0x01, U5919) !m0 SEQW SAVEUIP0 U69e2SEQW GOTO U5918
U69e2: tmp1:= AND_DSZ32(0x00000c00, tmp5) 

U69e4: tmp1:= SHR_DSZ32(tmp1, 0x0000000a) 
U69e5: CMPUJZ_DIRECT_NOTTAKEN(tmp1, 0x00000001, U2711) !m1 
U69e6: tmp3:= MOVEFROMCREG_DSZ64( , 0x7bb) 

U69e8: tmp3:= AND_DSZ32(0x00000c00, tmp3) 
U69e9: tmp3:= SHR_DSZ32(tmp3, 0x00000008) 
U69ea: tmp3:= OR_DSZ32(tmp1, tmp3) 

U69ec: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000003, U2711) !m0,m1 
U69ed: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x0000000e, U2711) !m0,m1 
U69ee: MOVETOCREG_DSZ64(tmp5, 0x7bb) !m2 

U69f0: tmp3:= AND_DSZ32(0x00000800, tmp5) 
U69f1: tmp3:= SELECTCC_DSZ32_CONDNZ(tmp3, 0x00020003) 
U69f2: LFNCEMARK-> MOVETOCREG_DSZ64(tmp3, 0x2d6, 32) !m1,m2 SEQW GOTO U60d2

U69f4: tmp0:= BT_DSZ64(tmp6, 0x0000003c) 
U69f5: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x00004000) 
U69f6: tmp1:= OR_DSZ32(tmp0, tmp1) 

U69f8: tmp0:= BT_DSZ64(tmp7, 0x0000002b) 
U69f9: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000004) 
U69fa: tmp1:= OR_DSZ32(tmp0, tmp1) 

U69fc: tmp0:= AND_DSZ64(0x00020000, tmp7) 
U69fd: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00008000) 
U69fe: tmp1:= OR_DSZ32(tmp0, tmp1) 

U6a00: tmp3:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U6a01: tmp0:= SHR_DSZ64(tmp7, 0x00000021) 
U6a02: tmp0:= OR_DSZ32(tmp3, tmp0) 

U6a04: tmp0:= BT_DSZ32(tmp0, 0x0000000d) 
U6a05: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x02000000) 
U6a06: tmp1:= OR_DSZ32(tmp0, tmp1) 

U6a08: tmp0:= AND_DSZ32(0x00040000, tmp7) 
U6a09: tmp0:= SELECTCC_DSZ32_CONDNZ(tmp0, 0x20000000) 
U6a0a: tmp1:= OR_DSZ32(tmp0, tmp1) 

U6a0c: tmp0:= SHR_DSZ64(tmp7, 0x0000001f) 
U6a0d: tmp0:= NOTAND_DSZ32(tmp0, 0x00800000) 
U6a0e: tmp1:= OR_DSZ32(tmp0, tmp1) 

U6a10: tmp0:= READURAM( , 0x003a, 64) 
U6a11: tmp0:= NOTAND_DSZ32(tmp0, 0x00080001) 
U6a12: tmp0:= SELECTCC_DSZ32_CONDNZ(tmp0, 0x00400000) 

U6a14: tmp1:= OR_DSZ32(tmp0, tmp1) 
U6a15: rbx:= SELECTCC_DSZ32_CONDNZ(tmp8, tmp1) SEQW GOTO U17ec
U6a16: unk_cc1(tmp2, tmp1) 

U6a18: mm4:= unk_73a() 
U6a19: tmp9:= LDZX_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_ALIAS_DATASIZE, mode=0x18) !m0,m1 
U6a1a: tmp1:= LDZX_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_13, mode=0x18) !m0,m1 

U6a1c: tmp8:= LDZX_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_1b, mode=0x18) !m0,m1 
U6a1d: tmp7:= LDZX_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_23, mode=0x18) !m0,m1 
U6a1e: tmp6:= LDZX_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_2b, mode=0x18) !m0,m1 

U6a20: tmp5:= LDZX_DSZN_ASZ32_SC1(tmp11, IMM_MACRO_33, mode=0x18) !m0,m1 
U6a21: tmp4:= NOTAND_DSZ16(0x00007f00, tmp4) 
U6a22: tmp3:= AND_DSZ16(0x00007f00, tmp9) 

U6a24: tmp3:= OR_DSZ16(tmp3, tmp4) 
U6a25: MOVETOCREG_DSZ64(tmp3, 0x48c) !m2 
U6a26: tmp2:= SHR_DSZ16(tmp9, 0x0000000b) 

U6a28: tmp2:= AND_DSZ8(0x00000007, tmp2) 
U6a29: MOVETOCREG_DSZ64(tmp1, 0x06a) !m2 
U6a2a: SYNCFULL-> MOVETOCREG_DSZ64(tmp2, 0x073) !m2 

U6a2c: tmp3:= MOVEFROMCREG_DSZ64( , 0x069) 
U6a2d: MOVETOCREG_BTS_DSZ64(tmp3, 0x069) 
U6a2e: TESTUSTATE( , SYS, !UST_8086_MODE) !m0,m1 ? SEQW GOTO U4a21

U6a30: tmp1:= SHR_DSZ32(tmp7, 0x0000000c) 
U6a31: tmp2:= CONCAT_DSZ16(tmp1, tmp8) 
U6a32: tmp5:= SHR_DSZ32(tmp5, 0x0000000c) 

U6a34: tmp3:= CONCAT_DSZ16(tmp5, tmp6) 
U6a35: MOVETOCREG_DSZ64(tmp2, 0x00a) 
U6a36: MOVETOCREG_DSZ64( , 0x00000000, 0x00d) 

U6a38: MOVETOCREG_DSZ64(tmp3, 0x00e) 
U6a39: MOVETOCREG_DSZ64(tmp7, 0x00f) SEQW URET0
FUN_ucode_0006a3a:
U6a3a: tmp1:= TESTUSTATE( , UCODE, !0x0800) !m0 ? SEQW GOTO U6a3d

U6a3c: tmp1:= ZEROEXT_DSZ32(0x00000200) 
U6a3d: tmp1:= OR_DSZ32(0x00000400, tmp1) 
U6a3e: tmp15:= READURAM( , 0x0070, 64) 

U6a40: tmp1:= AND_DSZ32(tmp1, tmp15) 
U6a41: tmp1:= SHR_DSZ32(tmp1, 0x00000007) 
U6a42: tmp2:= BT_DSZ64(tmp2, 0x0000003c) 

U6a44: tmp15:= SELECTCC_DSZ64_CONDNB(tmp2, tmp15) 
U6a45: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000008) 
U6a46: tmp15:= BT_DSZ64(tmp15, 0x00000032) 

U6a48: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00000008) 
U6a49: tmp1:= NOTAND_DSZ32(tmp2, tmp1) 
U6a4a: tmp1:= OR_DSZ32(tmp15, tmp1) 

FUN_ucode_0006a4c:
U6a4c: tmp15:= AND_DSZ32(0x0000000c, tmp11) 
U6a4d: tmp15:= ROR_DSZ64(tmp15, 0x00000003) 
U6a4e: tmp1:= OR_DSZ32(tmp15, tmp1) 

U6a50: tmp15:= SELECTCC_DSZ32_CONDNS(tmp15, 0x00000002) 
U6a51: tmp1:= OR_DSZ32(tmp15, tmp1) 
U6a52: tmp15:= AND_DSZ32(0x00000200, tmp11) 

U6a54: tmp15:= SHR_DSZ32(tmp15, 0x00000005) 
U6a55: tmp1:= OR_DSZ32(tmp15, tmp1) 
U6a56: tmp15:= AND_DSZ32(0x00000200, tmp6) 

U6a58: tmp15:= SHR_DSZ32(tmp15, 0x00000005) 
U6a59: tmp1:= OR_DSZ32(tmp15, tmp1) 
U6a5a: tmp15:= AND_DSZ32(0x00000010, tmp1) 

U6a5c: tmp15:= SELECTCC_DSZ32_CONDZ(tmp15, 0x08000000) 
U6a5d: tmp0:= OR_DSZ32(tmp15, tmp0) SEQW URET1
U6a5e: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 

U6a60: MOVETOCREG_BTS_DSZ64(tmp0, 0x0000000b, 0x285) !m0,m1,m2 
U6a61: tmp1:= SELECTCC_DSZ32_CONDZ(tmp1, 0x00040000) 
U6a62: tmp2:= ZEROEXT_DSZ8(tmp3, tmp1) 

U6a64: tmp0:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U6a65: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U6a66: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00040000) 

U6a68: tmp2:= OR_DSZ32(tmp0, tmp2) 
U6a69: tmp2:= OR_DSZ32(tmp2, tmp4) 
U6a6a: tmp2:= BTS_DSZ32(tmp2, 0x00000011) 

U6a6c: PORTOUT_DSZ32_ASZ16_SC1(0x50d8,  , tmp2) !m2 
U6a6d: PORTOUT_DSZ64_ASZ16_SC1(0x50b0,  , 0x00000000) !m2 
U6a6e: PORTOUT_DSZ64_ASZ16_SC1(0x50b8,  , 0x00000000) !m2 

U6a70: PORTOUT_DSZ64_ASZ16_SC1(0x50a0,  , 0x00000000) !m2 
U6a71: PORTOUT_DSZ64_ASZ16_SC1(0x50a8,  , 0x00000000) !m2 
U6a72: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 

U6a74: tmp0:= ZEROEXT_DSZ32(0x0000000f) SEQW SAVEUIP0 U6a75SEQW GOTO U60aa
U6a75: tmp11:= ZEROEXT_DSZ32(0x0000000d) 
U6a76: WRITEURAM(tmp11, 0x0073, 32) 

U6a78: tmp0:= AND_DSZ32(0x00040000, tmp2) 
U6a79: tmp7:= OR_DSZ32(tmp0, tmp7) 
U6a7a: tmp7:= AND_DSZ32(0x00ff0000, tmp7) 

U6a7c: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000010, tmp7) 
U6a7d: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x00000011) 
U6a7e: tmp14:= MOVEMERGEFLGS_DSZ32(0x00003b64, tmp7) 

U6a80: tmp14:= CMOVCC_DSZ32_CONDNZ(tmp14, 0x00003b68) 
U6a81: UFLOWCTRL( , tmp14, URET0) SEQW GOTO U58c1
U6a82: tmp8:= MOVEFROMCREG_DSZ64( , 0x562) 

U6a84: tmp8:= NOTAND_DSZ64(0x00000fff, tmp8) 
U6a85: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) 
U6a86: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000020, mode=0x01) 

U6a88: tmp0:= READURAM( , 0x005c, 64) !m2 
U6a89: tmp15:= SHR_DSZ64(tmp0, 0x0000001d) 
U6a8a: tmp15:= AND_DSZ32(0x00002000, tmp15) 

U6a8c: tmp0:= NOTAND_DSZ64(0x00002000, tmp0) 
U6a8d: tmp0:= OR_DSZ64(tmp15, tmp0) 
U6a8e: WRITEURAM(tmp0, 0x005c, 64) !m2 

U6a90: tmp0:= SUB_DSZ64(0x00000020, tmp8) 
U6a91: WRITEURAM(tmp0, 0x001b, 64) !m2 
U6a92: tmp13:= READURAM( , 0x0070, 64) 

U6a94: tmp13:= OR_DSZ64(0x000000e2, tmp13) 
U6a95: WRITEURAM(tmp13, 0x0070, 64) !m2 
U6a96: tmp12:= ADD_DSZ64(0x00000800, tmp8) 

U6a98: LFNCEMARK-> WRITEURAM(tmp12, 0x0011, 64) !m2 
U6a99: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000034, mode=0x01) 
U6a9a: tmp13:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000024, mode=0x01) 

U6a9c: tmp0:= ADD_DSZ64(tmp13, tmp0) 
U6a9d: tmp0:= ADD_DSZ64(tmp0, tmp2) 
U6a9e: tmp3:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000010, mode=0x01) 

U6aa0: LFNCEMARK-> CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000000, U6aa1) !m1 SEQW GOTO U6aa6
U6aa1: tmp3:= ZEROEXT_DSZ64(tmp0) 
U6aa2: tmp7:= ZEROEXT_DSZ32(0x00000001) 

U6aa4: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp8, 0x0000000c, mode=0x01,  , tmp7) 
U6aa5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000020, mode=0x01,  , tmp2) 
U6aa6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000d8, mode=0x01, tmp12, tmp3) 

U6aa8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000c8, mode=0x01, tmp12, tmp12) 
U6aa9: LFNCEWAIT-> tmp0:= ZEROEXT_DSZ32(0x00002000) SEQW GOTO U1f90
U6aaa: tmp2:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 

U6aac: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U6aad: tmp2:= SHL_DSZ32(tmp2, 0x00000010) SEQW SAVEUIP0 U6aaeSEQW GOTO U60b8
U6aae: tmp2:= OR_DSZ32(tmp2, tmp7) 

U6ab0: tmp2:= AND_DSZ32(0x00ff0000, tmp2) 
U6ab1: tmp11:= ZEROEXT_DSZ32(0x0000000e) 
U6ab2: WRITEURAM(tmp11, 0x0073, 32) 

U6ab4: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x8408) !m2 
U6ab5: tmp0:= AND_DSZ32(0xffff0180, tmp0) 
U6ab6: tmp1:= SUB_DSZ32(0x00000100, tmp0) 

U6ab8: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x8404) !m2 
U6ab9: tmp0:= AND_DSZ32(0x80000000, tmp0) 
U6aba: tmp1:= OR_DSZ32(tmp0, tmp1) 

U6abc: tmp1:= OR_DSZ32(tmp2, tmp1) SEQW SAVEUIP1 U6abdSEQW GOTO U2799
U6abd: tmp0:= MOVEMERGEFLGS_DSZ32(0x00000012, tmp1) 
U6abe: tmp0:= CMOVCC_DSZ32_CONDNZ(tmp0, 0x00000014) 

U6ac0: SAVEUIP_REGOVR(0x00, U6ac1, 0x0000) SEQW GOTO U60aa
U6ac1: tmp11:= ZEROEXT_DSZ32(0x0000000f) 
U6ac2: WRITEURAM(tmp11, 0x0073, 32) 

U6ac4: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U6ac9
U6ac5: MOVETOCREG_DSZ64( , 0x00000000, 0x207, 32) !m1 
U6ac6: MOVETOCREG_DSZ64( , 0x00000000, 0x209, 32) !m1 

U6ac8: LFNCEMARK-> MOVETOCREG_OR_DSZ64( , 0x00000002, 0x208) !m0,m1 
U6ac9: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U6aca: MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000b, 0x285) !m0,m1,m2 

U6acc: PORTOUT_DSZ32_ASZ16_SC1(0x0010,  , 0x00000000) !m2 
U6acd: PORTOUT_DSZ32_ASZ16_SC1(0x0018,  , 0x00000000) !m2 
U6ace: tmp1:= PORTIN_DSZ8_ASZ16_SC1(0x00c0) !m2 

U6ad0: tmp1:= BTR_DSZ32(tmp1, 0x00000003) 
U6ad1: LFNCEWAIT-> PORTOUT_DSZ8_ASZ16_SC1(0x00c0,  , tmp1) !m2 SEQW GOTO U1e6e
U6ad2: tmm1:= unk_57e( , 0x00000000) 

U6ad4: tmp1:= SUB_DSZ32(0x0000ffff, tmp0) 
U6ad5: UJMPCC_DIRECT_NOTTAKEN_CONDNL(tmp1, U2b21) 
U6ad6: mm2:= unk_768(0x00000000) 

U6ad8: tmm1:= unk_649(0x00000000, tmm1) 
U6ad9: tmp2:= ADD_DSZ32(0x00000075, tmp2) 
U6ada: tmm2:= FPREADROM_DTYPENOP(tmp2) 

U6adc: tmm1:= unk_661(tmm7, tmm1) 
U6add: tmm3:= unk_6e1(tmm1, tmm1) 
U6ade: tmp12:= unk_6a0() 

U6ae0: tmp13:= unk_6a0() 
U6ae1: tmm6:= unk_6e1(tmm3, tmm4) 
U6ae2: tmp12:= unk_6a0() 

U6ae4: tmm7:= unk_6e1(tmm3, tmm4) 
U6ae5: tmm6:= unk_649(tmm5, tmm6) 
U6ae6: tmp12:= unk_6a0() 

U6ae8: tmm7:= unk_649(tmm4, tmm7) 
U6ae9: tmm6:= unk_6e1(tmm3, tmm6) 
U6aea: tmp13:= unk_6a0() 

U6aec: tmm7:= unk_6e1(tmm3, tmm7) 
U6aed: tmm6:= unk_649(tmm5, tmm6) 
U6aee: tmp12:= unk_6a0() 

U6af0: tmm7:= unk_649(tmm4, tmm7) 
U6af1: tmm6:= unk_6e1(tmm3, tmm6) 
U6af2: tmm7:= unk_6e1(tmm3, tmm7) 

U6af4: tmm6:= unk_649(tmm1, tmm6) 
U6af5: tmm7:= unk_6e1(tmm7, tmm1) 
U6af6: tmp9:= unk_6a0() 

U6af8: tmm3:= unk_649(tmm2, tmm1) 
U6af9: tmm7:= unk_649(tmm7, tmm6) 
U6afa: tmm1:= unk_6e1(tmm3, tmm7) 

U6afc: LFNCEWAIT-> mm0:= unk_689(tmm2, tmm1) !m2 SEQW GOTO U17ec
U6afd: tmp0:= ZEROEXT_DSZ16( , tmp14) 
U6afe: tmp0:= AND_DSZ64(tmp0, tmp5) 

U6b00: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U5f15) 
U6b01: tmp7:= TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U6b10
U6b02: tmp4:= NOTAND_DSZ64(0x00000fb8, tmp4) 

U6b04: mm7:= unk_72f(tmm4) 
U6b05: tmp15:= TESTUSTATE( , VMX, 0x0100) !m2 ? SEQW GOTO U6b0a
U6b06: tmp4:= MOVETOCREG_BTS_DSZ64(tmp4, 0x0000003f, 0x51c) !m0 

U6b08: tmp15:= SHR_DSZ64(tmp4, 0x0000000b) 
U6b09: tmp15:= OR_DSZ32(0x00000001, tmp15) 
U6b0a: tmp7:= SHL_DSZ64(tmp7, 0x0000001d) 

U6b0c: tmp7:= OR_DSZ64(tmp7, tmp15) 
U6b0d: tmp3:= BT_DSZ64(tmp3, 0x00000025) 
U6b0e: tmp7:= SELECTCC_DSZ64_CONDNB(tmp3, tmp7) 

U6b10: WRITEURAM(tmp7, 0x0079, 64) 
U6b11: LFNCEWAIT-> tmp7:= unk_163(0x00000000, tmp7) 
U6b12: tmp15:= SHR_DSZ32(tmp7, 0x00000008) 

U6b14: tmm4:= unk_707(mm7) 
U6b15: MOVETOCREG_DSZ64(tmp15, 0x79d) 
U6b16: tmp11:= ZEROEXT_DSZ32(0x00005f15) 

U6b18: ROVR<- mm0:= unk_76f(tmm6) SEQW SAVEUIP1 U6b19SEQW GOTO U60be
U6b19: MOVETOCREG_DSZ64(tmp0, 0x7c5) 
U6b1a: tmp15:= ZEROEXT_DSZ32(0x00000500) 

U6b1c: TESTUSTATE( , VMX, !0x1000) !m0,m2 ? SEQW GOTO U2f0e
U6b1d: tmp4:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U6b1e: tmp9:= ZEROEXT_DSZ32(0x00000500) 

U6b20: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U6b24
U6b21: tmp9:= SELECTCC_DSZ32_CONDNB(tmp10, 0x00000500) 
U6b22: tmp15:= OR_DSZ32(tmp9, 0x00000400) 

U6b24: tmp4:= NOTAND_DSZ32(tmp15, tmp4) 
U6b25: tmp9:= SELECTCC_DSZ32_CONDZ(tmp13, tmp9) 
U6b26: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp4, 0x7ff, tmp9) SEQW GOTO U2f24

U6b28: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON | UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U6b2e
U6b29: tmpv0:= READURAM( , 0x0043, 64) 
U6b2a: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000003, U6b2e) !m0,m1 

U6b2c: tmpv1:= READURAM( , 0x0057, 64) 
U6b2d: LFNCEWAIT-> tmpv1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000060, tmpv1) 
U6b2e: tmpv0:= READURAM( , 0x003b, 64) 

U6b30: tmpv1:= ADD_DSZ64(tmpv0, tmpv1) 
U6b31: LFNCEWTMRK-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x2d7, 32) !m1 
U6b32: tmpv2:= ZEROEXT_DSZ64(tmpv0) SEQW SAVEUIP0 U6b34SEQW GOTO U3045

U6b34: tmpv0:= SHL_DSZ64(tmpv1, 0x00000008) 
U6b35: tmpv0:= OR_DSZ64(0x00000019, tmpv0) 
U6b36: tmpv1:= ZEROEXT_DSZ32(0x00000083) SEQW SAVEUIP1 U6b38SEQW GOTO U65b8

U6b38: tmpv0:= MOVEFROMCREG_DSZ64( , 0x7f0) 
U6b39: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x00000009, U6b44) !m1 
U6b3a: tmpv0:= SHR_DSZ64(tmpv2, 0x00000037) 

U6b3c: tmpv0:= SHL_DSZ64(tmpv0, 0x00000018) 
U6b3d: tmpv1:= AND_DSZ32(0x0000ffff, tmpv2) 
U6b3e: tmpv0:= OR_DSZ64(tmpv1, tmpv0) 

U6b40: tmpv0:= SHL_DSZ64(tmpv0, 0x00000010) 
U6b41: tmpv0:= OR_DSZ64(0x00007302, tmpv0) 
U6b42: tmpv1:= ZEROEXT_DSZ32(0x00000071) SEQW SAVEUIP1 U6b44SEQW GOTO U65b9

U6b44: SYNCMARK-> UFLOWCTRL( , tmp14, URET1) 
U6b45: tmpv0:= MOVEFROMCREG_DSZ64( , 0x220, 32) !m1 
U6b46: tmpv0:= AND_DSZ32(0x00003f00, tmpv0) 

U6b48: tmpv0:= SHL_DSZ32(tmpv0, 0x00000008) 
U6b49: tmpv0:= OR_DSZ32(0x00000302, tmpv0) 
U6b4a: SYNCWAIT-> tmpv1:= ZEROEXT_DSZ32(0x00000041) SEQW GOTO U65b9

U6b4c: MOVE_DSZ32() SEQW SAVEUIP1 U6b4dSEQW GOTO U319a
U6b4d: tmp0:= READURAM( , 0x0053, 64) 
U6b4e: tmp0:= BTR_DSZ64(tmp0, 0x00000006) 

U6b50: WRITEURAM(tmp0, 0x0053, 64) 
U6b51: MOVETOCREG_BTS_DSZ64( , 0x00000008, 0x005) 
U6b52: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000060) 

U6b54: MOVETOCREG_DSZ64(tmp0, 0x7c6) 
U6b55: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x7f1) 
U6b56: tmp1:= AND_DSZ32(0x00002000, tmp0) 

U6b58: tmp2:= AND_DSZ32(0x00008000, tmp0) 
U6b59: tmp0:= READURAM( , 0x005c, 64) 
U6b5a: tmp0:= NOTAND_DSZ32(0x00002000, tmp0) 

U6b5c: tmp0:= OR_DSZ32(tmp1, tmp0) 
U6b5d: WRITEURAM(tmp0, 0x005c, 32) 
U6b5e: tmp0:= MOVEFROMCREG_DSZ64( , 0x105) 

U6b60: tmp0:= NOTAND_DSZ64(0x00008000, tmp0) 
U6b61: MOVETOCREG_OR_DSZ64(tmp0, 0x105, tmp2) 
U6b62: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000160) 

U6b64: WRITEURAM(tmp0, 0x001b, 64) 
U6b65: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000020) 
U6b66: MOVETOCREG_DSZ64(tmp0, 0x20f, 32) !m1,m2 

U6b68: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000040) 
U6b69: MOVETOCREG_DSZ64(tmp0, 0x7f8) 
U6b6a: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x7f9) !m1 

U6b6c: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1() 
U6b6d: WRITEURAM(tmp0, 0x0070, 64) 
U6b6e: MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1 

U6b70: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000018, 0x2da) !m1 
U6b71: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x008) 
U6b72: tmp14:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000180) 

U6b74: SAVEUIP( , 0x01, U0416) !m0 SEQW GOTO U2d30
U6b75: tmp0:= BT_DSZ64(tmp0, 0x00000020) 
U6b76: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x00020000) 

U6b78: tmp1:= MOVEFROMCREG_DSZ64( , 0x7bb) 
U6b79: tmp1:= AND_DSZ32(0x00000800, tmp1) 
U6b7a: tmp1:= SHR_DSZ32(tmp1, 0x00000002) 

U6b7c: tmp1:= OR_DSZ16(0x0000f9ff, tmp1) 
U6b7d: rdx:= CONCAT_DSZ16(0x0000bfe9, tmp1) 
U6b7e: rdx:= OR_DSZ32(tmp0, rdx) 

U6b80: tmp0:= ZEROEXT_DSZ32(0x0000eb37) 
U6b81: rcx:= CONCAT_DSZ16(0x000005d8, tmp0) 
U6b82: tmp0:= BT_DSZ64(tmp7, 0x00000024) 

U6b84: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, 0x00000080) 
U6b85: rcx:= OR_DSZ32(tmp0, rcx) 
U6b86: tmp0:= AND_DSZ64(0x00040000, tmp10) 

U6b88: tmp1:= READURAM( , 0x005c, 64) 
U6b89: tmp1:= SHR_DSZ32(tmp1, 0x00000006) 
U6b8a: tmp0:= NOTAND_DSZ32(tmp1, tmp0) 

U6b8c: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000008) 
U6b8d: rcx:= OR_DSZ32(tmp0, rcx) 
U6b8e: tmp0:= MOVEFROMCREG_DSZ64( , 0x701) 

U6b90: tmp0:= NOTAND_DSZ32(tmp0, 0x00000003) 
U6b91: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x02000000) 
U6b92: rcx:= OR_DSZ32(tmp0, rcx) 

U6b94: tmp0:= AND_DSZ64(0x02000000, tmp7) 
U6b95: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00200000) 
U6b96: rcx:= OR_DSZ32(tmp0, rcx) 

U6b98: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c5) 
U6b99: tmp0:= BT_DSZ32(tmp0, 0x00000012) 
U6b9a: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x08000000) 

U6b9c: rcx:= OR_DSZ32(tmp0, rcx) 
U6b9d: tmp0:= BT_DSZ64(tmp6, 0x00000037) 
U6b9e: tmp0:= SELECTCC_DSZ32_CONDNB(tmp0, 0x40000000) 

U6ba0: rcx:= OR_DSZ32(tmp0, rcx) SEQW GOTO U17ec
FUN_ucode_0006ba1:
U6ba1: tmp15:= OR_DSZ32(tmp7, 0xff000000) 
U6ba2: WRITEURAM(tmp15, 0x000e, 64) !m2 

U6ba4: tmp6:= unk_04e(tmp0, 0x00000003) 
U6ba5: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00d0) !m2 
U6ba6: tmp15:= AND_DSZ32(0x00007c00, tmp15) 

U6ba8: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U0686) 
U6ba9: tmp4:= ZEROEXT_DSZ32(0x00000413) 
U6baa: PORTOUT_DSZ32_ASZ16_SC1(0x0070,  , tmp4) !m2 

U6bac: tmp7:= PORTIN_DSZ32_ASZ16_SC1(0x0074) !m2 
U6bad: BTUJNB_DIRECT_NOTTAKEN(tmp7, 0x00000000, U6bcd) !m1 
U6bae: tmp7:= SHR_DSZ32(tmp7, 0x00000008) 

U6bb0: tmp7:= AND_DSZ32(0x0000fffc, tmp7) 
U6bb1: tmp4:= SUBR_DSZ64(tmp4, 0x00000001) SEQW GOTO U6baa
U6bb2: tmp7:= CONCAT_DSZ32(0xaa000000, tmp7) 

U6bb4: tmp8:= READURAM( , 0x0020, 64) 
U6bb5: ROVR<- tmp8:= AND_DSZ32(0x00007fff, tmp8) SEQW SAVEUIP1 U6bb6SEQW GOTO U02ba
U6bb6: tmp8:= SHL_DSZ32(tmp8, 0x00000018) 

U6bb8: tmp4:= PORTIN_DSZ64_ASZ16_SC1(0x0000, tmp0) !m2 
U6bb9: tmp4:= AND_DSZ32(0x00000040, tmp4) 
U6bba: tmp4:= SHL_DSZ64(tmp4, 0x00000036) 

U6bbc: tmp7:= OR_DSZ64(tmp4, tmp7) 
U6bbd: tmp4:= PORTIN_DSZ64_ASZ16_SC1(0x0000, tmp1) !m2 
U6bbe: tmp4:= BT_DSZ64(tmp4, 0x0000003f) 

U6bc0: tmp15:= CONCAT_DSZ32(0x40000000) 
U6bc1: tmp15:= SELECTCC_DSZ64_CONDNB(tmp4, tmp15) 
U6bc2: tmp4:= SELECTCC_DSZ64_CONDNB(tmp4, tmp4) 

U6bc4: tmp4:= BT_DSZ64(tmp4, 0x0000003d) 
U6bc5: tmp7:= CMOVCC_DSZ64_CONDB(tmp4, tmp7) 
U6bc6: tmp7:= OR_DSZ64(tmp15, tmp7) 

U6bc8: PORTOUT_DSZ64_ASZ16_SC1(0x0000, tmp1, tmp7) !m2 
U6bc9: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp4, U6bcc) 
U6bca: PORTOUT_DSZ64_ASZ16_SC1(0x0000, tmp3, tmp8) !m2 

U6bcc: PORTOUT_DSZ32_ASZ16_SC1(0x0040,  , 0x00000000) !m2 
U6bcd: SYNCFULL-> tmp0:= ZEROEXT_DSZ64(tmp6) SEQW URET0
U6bce: MOVE_DSZ32() 

U6bd0: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U6bd1: tmp8:= MOVEFROMCREG_DSZ64( , 0x562) 
U6bd2: tmp1:= MOVEFROMCREG_DSZ64( , 0x563) 

U6bd4: CMPUJNZ_DIRECT_NOTTAKEN(tmp1, 0x00000000, U6bda) !m1 
U6bd5: tmp8:= MOVEFROMCREG_DSZ64( , 0x574) 
U6bd6: MOVETOCREG_DSZ64(tmp8, 0x562) !m2 

U6bd8: tmp1:= MOVEFROMCREG_DSZ64( , 0x575) 
U6bd9: SYNCFULL-> MOVETOCREG_DSZ64(tmp1, 0x563) !m2 
U6bda: tmp3:= CONCAT_DSZ32(rbx, rdx) 

U6bdc: tmp8:= NOTAND_DSZ64(0x00000fff, tmp8) 
U6bdd: tmp1:= NOTAND_DSZ64(0x00000fff, tmp1) 
U6bde: tmp2:= ADD_DSZ64(0x00001000, tmp8) 

U6be0: tmp4:= LDZX_DSZ32_ASZ32_SC1(tmp3) 
U6be1: tmp5:= LDZX_DSZ32_ASZ32_SC1(tmp3) 
U6be2: tmp4:= ADD_DSZ32(tmp5, tmp4) 

U6be4: tmp4:= ADD_DSZ32(0x00000007, tmp4) 
U6be5: tmp4:= NOTAND_DSZ32(0x00000007, tmp4) 
U6be6: ROVR<- tmp0:= ADD_DSZ64(tmp4, tmp2) SEQW SAVEUIP1 U6be8

U6be8: tmp0:= SUB_DSZ64(0x00000001, tmp0) 
U6be9: tmp0:= AND_DSZ64(tmp1, tmp0) 
U6bea: tmp5:= AND_DSZ64(tmp1, tmp8) 

U6bec: SYNCFULL-> CMPUJNZ_DIRECT_NOTTAKEN(tmp0, U1b9d, tmp5) !m2 SEQW SAVEUIP1 U6bedSEQW GOTO U1ab6
U6bed: tmp5:= READURAM( , 0x005c, 64) 
U6bee: tmp5:= BTS_DSZ64(tmp5, 0x0000002a) 

U6bf0: WRITEURAM(tmp5, 0x005c, 64) 
U6bf1: tmp5:= LDPPHYS_DSZ32_ASZ64_SC1(tmp8, 0x00000004, mode=0x01) 
U6bf2: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000000, U6bf4) !m1 SEQW GOTO U6a86

U6bf4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp8, 0x00000020, mode=0x01,  , tmp2) 
U6bf5: tmp0:= ZEROEXT_DSZ32() 
U6bf6: tmp5:= LDZX_DSZ64_ASZ32_SC1(tmp3, tmp0) 

U6bf8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2, mode=0x01, tmp0, tmp5) 
U6bf9: tmp0:= ADD_DSZ32(0x00000008, tmp0) 
U6bfa: CMPUJZ_DIRECT_NOTTAKEN(tmp0, U6a88, tmp4) !m1 SEQW GOTO U6bf6

FUN_ucode_0006bfc:
U6bfc: tmpv1:= BTS_DSZ32(tmpv1, 0x00000011) 
FUN_ucode_0006bfd:
U6bfd: LFNCEMARK-> tmpv0:= SHR_DSZ32(tmpv1, 0x00000010) 
U6bfe: tmpv0:= AND_DSZ64(0x00000003, tmpv0) 

U6c00: tmpv0:= CONCAT_DSZ32(tmpv0) 
U6c01: LFNCEWAIT-> tmpv2:= READURAM( , 0x008c, 64) 
U6c02: tmpv2:= BTR_DSZ64(tmpv2, 0x00000020) 

U6c04: tmpv2:= BTR_DSZ64(tmpv2, 0x00000021) 
U6c05: tmpv2:= OR_DSZ64(tmpv0, tmpv2) 
U6c06: LFNCEMARK-> WRITEURAM(tmpv2, 0x018c, 64) !m2 

U6c08: tmpv1:= NOTAND_DSZ32(0x00030000, tmpv1) 
U6c09: tmpv1:= SHL_DSZ64(tmpv1, 0x00000028) 
U6c0a: LFNCEWAIT-> tmpv0:= READURAM( , 0x008c, 64) 

U6c0c: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x0000001d, U6c11) !m1 
U6c0d: tmpv2:= BTS_DSZ64(0x00000000, 0x00000030) 
U6c0e: tmpv1:= SUB_DSZ64(tmpv2, tmpv1) 

U6c10: tmpv1:= BTS_DSZ64(tmpv1, 0x00000012) 
U6c11: BTUJNB_DIRECT_NOTTAKEN(tmpv0, 0x0000001c, U6c16) !m1 
U6c12: tmpv2:= BTS_DSZ64(0x00000000, 0x00000030) 

U6c14: tmpv1:= SUB_DSZ64(tmpv2, tmpv1) 
U6c15: tmpv1:= BTS_DSZ64(tmpv1, 0x00000011) 
U6c16: tmpv2:= SHR_DSZ64(tmpv1, 0x00000028) 

U6c18: tmpv2:= AND_DSZ32(0x0000001f, tmpv2) 
U6c19: BTUJNB_DIRECT_NOTTAKEN(tmpv0, U6c1e, tmpv2) !m1 
U6c1a: tmpv2:= CONCAT_DSZ32(0x00410000) 

U6c1c: tmpv1:= ADD_DSZ64(tmpv2, tmpv1) 
U6c1d: tmpv1:= BTS_DSZ64(tmpv1, 0x00000010) 
U6c1e: tmpv0:= MOVEFROMCREG_DSZ64( , 0x2b9, 32) !m1 

U6c20: tmpv0:= AND_DSZ32(0x000000ff, tmpv0) 
U6c21: tmpv0:= SHL_DSZ32(tmpv0, 0x00000018) 
U6c22: tmpv0:= OR_DSZ64(tmpv1, tmpv0) 

U6c24: tmpv0:= OR_DSZ64(0x0000fade, tmpv0) 
U6c25: tmpv2:= SHR_DSZ64(tmpv1, 0x00000028) 
U6c26: tmpv2:= AND_DSZ64(0x0000001f, tmpv2) 

U6c28: SAVEUIP( , 0x00, U0bfa) SEQW GOTO U334d
U6c29: unk_cc2(tmp0, tmp1) 
U6c2a: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x486) 

U6c2c: tmp0:= CONCAT_DSZ16(0xffffffffffffffff, tmp0) 
U6c2d: tmm2:= unk_73a() 
U6c2e: tmp2:= SHR_DSZ16(tmp10, 0x0000000b) 

U6c30: tmp2:= AND_DSZ8(0x00000007, tmp2) 
U6c31: tmp8:= SHL_DSZ8(tmp2, 0x00000001) 
U6c32: tmp3:= SUB_DSZ8(0x00000001, tmp2) 

U6c34: tmp4:= MOVEFROMCREG_DSZ64( , 0x06a) 
U6c35: tmp5:= ROR_DSZ8(tmp4, tmp3) 
U6c36: tmm5:= unk_704(mm5) 

U6c38: tmm7:= unk_6a3(tmm5, IMM_MACRO_31) !m0 
U6c39: tmp6:= PINTMOVDTMM2I_DSZ32(tmm7) 
U6c3a: tmp12:= WRMSLOOPCTRFBR(0x00000006) 

U6c3c: tmp6:= ROL_DSZ16(tmp6, 0x00000002) 
U6c3d: tmp5:= ROL_DSZ8(tmp5, 0x00000001) 
U6c3e: tmm5:= unk_704(mm5) 

U6c40: tmm7:= unk_6a3(tmm5, IMM_MACRO_31) !m0 
U6c41: tmp4:= PINTMOVDTMM2I_DSZ32(tmm7) 
U6c42: tmp6:= OR_DSZ32(tmp4, tmp6) 

U6c44: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U6c3c
U6c45: tmp6:= ROL_DSZ16(tmp6, tmp8) 
U6c46: tmp10:= CONCAT_DSZ16(0xffffffffffffffff, tmp10) 

U6c48: tmp8:= CONCAT_DSZ16(0xffffffffffffffff, tmp6) 
U6c49: tmp3:= MOVEFROMCREG_DSZ64( , 0x00a) 
U6c4a: tmp6:= MOVEFROMCREG_DSZ64( , 0x00d) 

U6c4c: tmp2:= MOVEFROMCREG_DSZ64( , 0x069) 
U6c4d: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U6c4e: tmp2:= CMOVCC_DSZ64_CONDZ(tmp2, 0xffffffffffffffff) 

U6c50: tmp2:= CONCAT_DSZ32(tmp2, 0xffffffffffffffff) 
U6c51: tmp3:= SUB_DSZ64(tmp6, tmp3) 
U6c52: tmp3:= AND_DSZ64(tmp2, tmp3) 

U6c54: tmp3:= AND_DSZ64(tmp2, tmp3) 
U6c55: tmp4:= MOVEFROMCREG_DSZ64( , 0x00e) 
U6c56: tmp7:= MOVEFROMCREG_DSZ64( , 0x00f) SEQW GOTO U646d

FUN_ucode_0006c58:
U6c58: tmpv3:= ADD_DSZ32(0x0000000c, tmpv3) 
U6c59: tmpv3:= SHL_DSZ64(0xffffffffffffffff, tmpv3) 
U6c5a: tmpv0:= READURAM( , 0x0010, 64) 

U6c5c: tmpv3:= NOTAND_DSZ64(tmpv0, tmpv3) 
U6c5d: TESTUSTATE( , UCODE, !0x0400) !m0 ? SEQW GOTO U6c66
U6c5e: tmpv0:= SUB_DSZ32(0x0000010a, tmp9) 

U6c60: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmpv0, U6c66) 
U6c61: tmpv0:= MOVEFROMCREG_DSZ64( , 0x102) 
U6c62: tmpv0:= SHR_DSZ64(tmpv0, 0x00000020) 

U6c64: tmpv0:= AND_DSZ32(tmpv0, tmpv3) 
U6c65: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv0, U2b31) 
FUN_ucode_0006c66:
U6c66: tmpv0:= NOTAND_DSZ64(tmpv3, tmpv2) 

U6c68: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv0, U2b31) 
FUN_ucode_0006c69:
U6c69: tmpv0:= MOVEFROMCREG_DSZ64( , 0x574) 
U6c6a: tmpv1:= MOVEFROMCREG_DSZ64( , 0x575) 

U6c6c: tmpv1:= NOTAND_DSZ64(0x00000fff, tmpv1) 
U6c6d: tmpv1:= AND_DSZ64(tmpv3, tmpv1) 
U6c6e: tmpv0:= AND_DSZ64(tmpv1, tmpv0) 

U6c70: tmpv1:= AND_DSZ64(tmpv1, tmpv2) 
U6c71: tmpv0:= SUB_DSZ64(tmpv1, tmpv0) 
U6c72: tmpv1:= MOVEFROMCREG_DSZ64( , 0x575) 

U6c74: tmpv1:= NOTAND_DSZ32(tmpv1, 0x00000400) 
U6c75: tmpv0:= OR_DSZ64(tmpv1, tmpv0) 
U6c76: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmpv0, U2b31) 

U6c78: tmpv0:= MOVEFROMCREG_DSZ64( , 0x572) 
U6c79: tmpv1:= MOVEFROMCREG_DSZ64( , 0x573) 
U6c7a: tmpv1:= NOTAND_DSZ64(0x00000fff, tmpv1) 

U6c7c: tmpv1:= AND_DSZ64(tmpv3, tmpv1) 
U6c7d: tmpv0:= AND_DSZ64(tmpv1, tmpv0) 
U6c7e: tmpv1:= AND_DSZ64(tmpv1, tmpv2) 

U6c80: tmpv0:= SUB_DSZ64(tmpv1, tmpv0) 
U6c81: tmpv1:= MOVEFROMCREG_DSZ64( , 0x573) 
U6c82: tmpv1:= NOTAND_DSZ32(tmpv1, 0x00000800) 

U6c84: tmpv0:= OR_DSZ64(tmpv1, tmpv0) 
U6c85: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmpv0, U2b31) SEQW URET1
FUN_ucode_0006c86:
U6c86: tmp6:= MOVEFROMCREG_DSZ64( , 0x231, 32) !m1 

U6c88: tmp1:= AND_DSZ32(0x0003f000, tmp6) 
U6c89: tmp4:= SHR_DSZ32(tmp6, 0x00000006) 
U6c8a: tmp4:= AND_DSZ32(0x0003f000, tmp4) 

U6c8c: tmp1:= SUB_DSZ32(tmp1, tmp4) 
U6c8d: tmp1:= SELECTCC_DSZ32_CONDB(tmp1, 0x00000001) 
U6c8e: tmp5:= SHR_DSZ32(tmp4, 0x0000000c) 

U6c90: tmp4:= AND_DSZ32(0x00000f00, tmp6) 
U6c91: tmp4:= SHR_DSZ64(tmp4, 0x00000008) 
U6c92: tmp4:= ADD_DSZ32(0x00000001, tmp4) 

U6c94: tmp4:= unk_2e4(tmp4, tmp5) 
U6c95: tmp3:= AND_DSZ32(0x0000001e, tmp6) 
U6c96: tmp3:= SHR_DSZ32(tmp3, 0x00000001) 

U6c98: tmp3:= ADD_DSZ32(0x00000009, tmp3) 
U6c99: tmp5:= READURAM( , 0x0020, 64) 
U6c9a: tmp5:= SHR_DSZ64(tmp5, 0x00000030) 

U6c9c: tmp5:= NOTAND_DSZ32(tmp5, 0x00000003) 
U6c9d: tmp5:= SELECTCC_DSZ32_CONDNZ(tmp5, tmp3) 
U6c9e: tmp3:= ADD_DSZ32(tmp5, tmp3) 

U6ca0: tmp3:= unk_2a4(tmp4, tmp3) 
U6ca1: tmp4:= SHR_DSZ32(tmp3, 0x00000002) 
U6ca2: tmp4:= AND_DSZ32(0x00003ffe, tmp4) 

U6ca4: tmp1:= OR_DSZ32(tmp4, tmp1) 
U6ca5: tmp4:= AND_DSZ32(0x000000e0, tmp6) 
U6ca6: tmp4:= SHR_DSZ32(tmp4, 0x00000005) 

U6ca8: tmp5:= SHL_DSZ32(tmp4, 0x00000002) 
U6ca9: tmp4:= ADD_DSZ32(tmp5, tmp4) 
U6caa: tmp4:= SUB_DSZ32(tmp4, 0x00000080) 

U6cac: tmp4:= unk_2a4(tmp3, tmp4) 
U6cad: tmp4:= SHL_DSZ32(tmp4, 0x00000004) 
U6cae: tmp4:= AND_DSZ32(0x07ffc000, tmp4) 

U6cb0: tmp5:= READURAM( , 0x001c, 64) 
U6cb1: tmp5:= SHR_DSZ64(tmp5, 0x00000020) 
U6cb2: tmp1:= CONCAT_DSZ32(tmp5, tmp1) 

U6cb4: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmp1, 0x232, tmp4) !m1 SEQW URET1
U6cb5: tmp10:= unk_6a0() 
U6cb6: tmm2:= unk_649(tmm0, tmm2) 

U6cb8: tmp11:= unk_6a0() 
U6cb9: tmp15:= FCOM2(tmp8, tmp11) 
U6cba: tmm3:= unk_6c9(tmm0, tmm3) 

U6cbc: tmp12:= unk_6a0() 
U6cbd: tmm2:= unk_6e1(tmm4, tmm2) 
U6cbe: mm0:= unk_76a(tmm7) 

U6cc0: tmp0:= AND_DSZ32(0x00000008, tmp0) 
U6cc1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U5b14) 
U6cc2: tmm2:= unk_6e6(tmm3, tmm2) 

U6cc4: tmm0:= unk_661(tmm2, tmm2) 
U6cc5: tmm3:= unk_6e1(tmm0, tmm0) 
U6cc6: tmp15:= unk_6a0() 

U6cc8: tmp13:= unk_6a0() 
U6cc9: tmm6:= unk_6e1(tmm3, tmm7) 
U6cca: tmp15:= unk_6a0() 

U6ccc: tmm4:= unk_6e1(tmm3, tmm5) 
U6ccd: tmp13:= unk_6a0() 
U6cce: tmm6:= unk_649(tmm7, tmm6) 

U6cd0: tmm4:= unk_649(tmm5, tmm4) 
U6cd1: tmm6:= unk_6e1(tmm3, tmm6) 
U6cd2: tmp15:= unk_6a0() 

U6cd4: tmm4:= unk_6e1(tmm3, tmm4) 
U6cd5: tmm6:= unk_649(tmm7, tmm6) 
U6cd6: tmp13:= unk_6a0() 

U6cd8: tmm4:= unk_649(tmm5, tmm4) 
U6cd9: tmm6:= unk_6e1(tmm3, tmm6) 
U6cda: tmm4:= unk_6e1(tmm0, tmm4) 

U6cdc: tmp3:= ZEROEXT_DSZ32(0x00000010) 
U6cdd: tmm3:= unk_700(mm3) !m2 
U6cde: tmm4:= unk_649(tmm4, tmm6) 

U6ce0: tmm4:= unk_6e1(tmm2, tmm4) 
U6ce1: tmm0:= unk_6c9(tmm2, tmm4) 
U6ce2: LFNCEMARK-> tmm7:= unk_6a1(tmm0, tmm1) !m2 SEQW GOTO U01a2

U6ce4: tmm1:= unk_6e1(tmm0, tmm0) 
U6ce5: tmm2:= unk_6e1(tmm1, tmm1) 
U6ce6: tmp2:= AND_DSZ32(0x00000003, tmp2) 

U6ce8: tmp8:= OR_DSZ32(tmp2, tmp8) 
U6ce9: mm1:= unk_72a(tmm0) 
U6cea: tmp1:= SHL_DSZ32(tmp1, 0x00000004) 

U6cec: tmp8:= OR_DSZ32(tmp1, tmp8) 
U6ced: mm0:= unk_7ea(tmm0) 
U6cee: tmp11:= SUB_DSZ32(0x0000fffd, tmp0) 

U6cf0: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp11, U6cf1) SEQW GOTO U6d75
U6cf1: tmp1:= SHR_DSZ32(tmp8, 0x00000001) 
U6cf2: tmp2:= SHR_DSZ32(tmp8, 0x00000003) 

U6cf4: tmp2:= XOR_DSZ32(tmp1, tmp2) 
U6cf5: tmp1:= AND_DSZ32(0x00000001, tmp8) 
U6cf6: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp1, U679a) 

U6cf8: tmp11:= unk_6a0() 
U6cf9: tmp12:= unk_6a0() 
U6cfa: tmm5:= unk_6e1(tmm2, tmm3) 

U6cfc: tmp11:= unk_6a0() 
U6cfd: tmm6:= unk_6e1(tmm2, tmm4) 
U6cfe: tmm5:= unk_649(tmm3, tmm5) 

U6d00: tmp12:= unk_6a0() 
U6d01: tmm5:= unk_6e1(tmm2, tmm5) 
U6d02: tmm6:= unk_649(tmm4, tmm6) 

U6d04: tmp11:= unk_6a0() 
U6d05: tmm6:= unk_6e1(tmm2, tmm6) 
U6d06: tmp12:= unk_6a0() 

U6d08: tmm5:= unk_649(tmm3, tmm5) 
U6d09: tmm6:= unk_649(tmm4, tmm6) 
U6d0a: tmm5:= unk_6e1(tmm1, tmm5) 

U6d0c: tmm6:= unk_6e1(tmm2, tmm6) 
U6d0d: tmm5:= unk_649(tmm5, tmm6) 
U6d0e: tmm7:= unk_702(mm2) 

U6d10: tmm0:= unk_496(tmm0, tmm7) 
U6d11: tmm5:= unk_6e1(tmm0, tmm5) 
U6d12: mm0:= unk_689(tmm0, tmm5) !m2 SEQW GOTO U17ec

U6d14: mm0:= unk_7ea(tmm3) 
U6d15: tmp0:= ADD_DSZ32(0x00000005, tmp0) 
U6d16: tmm3:= unk_7c2(mm0, tmm3) 

U6d18: tmm6:= unk_704(mm6) 
U6d19: tmm6:= unk_644(tmm6) 
U6d1a: tmm2:= unk_6e1(tmm2, tmm6) 

U6d1c: tmm2:= unk_6c9(tmm2, tmm3) 
U6d1d: tmm4:= unk_6e6(tmm2, tmm4) 
U6d1e: tmm2:= unk_661(tmm4, tmm4) 

U6d20: tmm6:= unk_702(tmm1) 
U6d21: tmm4:= unk_496(tmm4, tmm6) 
U6d22: tmm3:= unk_6e1(tmm2, tmm2) 

U6d24: tmp13:= unk_6a0() 
U6d25: tmm7:= unk_6e1(tmm3, tmm5) 
U6d26: tmp13:= unk_6a0() 

U6d28: tmm3:= unk_6e1(tmm3, tmm5) 
U6d29: tmp13:= unk_6a0() 
U6d2a: tmm7:= unk_6c9(tmm5, tmm7) 

U6d2c: tmp13:= unk_6a0() 
U6d2d: tmm3:= unk_649(tmm5, tmm3) 
U6d2e: tmm5:= unk_6e1(tmm4, tmm2) 

U6d30: tmm3:= unk_6e1(tmm2, tmm3) 
U6d31: tmm2:= unk_649(tmm7, tmm3) 
U6d32: tmm2:= unk_6e1(tmm5, tmm2) 

U6d34: tmp8:= ADD_DSZ32(0x000000f5, tmp6) 
U6d35: tmm3:= FPREADROM_DTYPENOP(tmp8) 
U6d36: tmm4:= unk_6c9(tmm4, tmm2) 

U6d38: tmm5:= unk_496(tmm3, tmm6) 
U6d39: mm0:= unk_72a(tmm0) 
U6d3a: tmp0:= AND_DSZ32(0x00000001, tmp0) 

U6d3c: tmm6:= unk_6c9(tmm4, tmm5) 
U6d3d: tmp11:= unk_6a0() 
U6d3e: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp7, U57ba) 

U6d40: tmp11:= unk_6a0() 
U6d41: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U57ba) 
U6d42: LFNCEWAIT-> tmm7:= unk_689(tmm4, tmm5) !m2 SEQW GOTO U0404

U6d44: tmp9:= SHR_DSZ32(tmp0, 0x00000010) 
U6d45: LDHINT_BUFFER_ASZ32_SC1(tmp11) 
U6d46: tmp13:= SAVEUIP(0x00, U2ff0) 

U6d48: LDHINT_BUFFER_ASZ32_SC1(tmp11, 0x00001880) 
U6d49: LDHINT_BUFFER_ASZ32_SC1(tmp11, 0x000018c0) 
U6d4a: tmp3:= TEST_DSZ64(tmp6, tmp6) 

U6d4c: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp3, U6d4d) SEQW GOTO U6d5c
U6d4d: tmp10:= CONCAT_DSZ32(0xffff0000) 
U6d4e: tmp3:= READURAM( , 0x005c, 64) 

U6d50: tmp7:= NOTAND_DSZ64(tmp10, tmp3) 
U6d51: tmp3:= AND_DSZ64(tmp10, tmp6) 
U6d52: tmp3:= OR_DSZ64(tmp7, tmp3) 

U6d54: WRITEURAM(tmp3, 0x015c, 64) 
U6d55: tmp10:= NOTAND_DSZ64(tmp10, tmp6) 
U6d56: tmp3:= SHR_DSZ64(tmp10, 0x0000002f) 

U6d58: tmp3:= XOR_DSZ64(0x00000001, tmp3) 
U6d59: tmp3:= SHL_DSZ64(tmp3, 0x00000030) 
U6d5a: tmp6:= OR_DSZ64(tmp10, tmp3) 

U6d5c: tmp10:= NOTAND_DSZ16(tmp0, tmp9) 
U6d5d: tmp10:= AND_DSZ16(0x0000003f, tmp10) 
U6d5e: tmp9:= NOTAND_DSZ16(0x00008080, tmp9) 

U6d60: tmp12:= CMOVCC_DSZ16_CONDZ(tmp10, 0x00008080) 
U6d61: tmp12:= OR_DSZ16(tmp9, tmp12) 
U6d62: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp12, 0x48c) 

U6d64: MOVETOCREG_DSZ64(tmp1, 0x06b) 
U6d65: tmp3:= SHR_DSZ16(tmp9, 0x0000000b) 
U6d66: tmp3:= AND_DSZ8(0x00000007, tmp3) 

U6d68: SYNCMARK-> MOVETOCREG_DSZ64(tmp3, 0x073) 
U6d69: MOVETOCREG_DSZ64(tmp0, 0x486) 
U6d6a: LDHINT_BUFFER_ASZ32_SC1(tmp11, 0x00003800) 

U6d6c: tmp10:= SHR_DSZ32(tmp1, 0x00000010) 
U6d6d: MOVETOCREG_DSZ64(tmp6, 0x00e) 
U6d6e: MOVETOCREG_DSZ64(tmp10, 0x00f) 

U6d70: MOVETOCREG_DSZ64(tmp8, 0x00a) 
U6d71: MOVETOCREG_DSZ64( , 0x00000000, 0x00d) 
U6d72: tmp9:= MOVEFROMCREG_DSZ64( , 0x069) 

U6d74: LFNCEMARK-> MOVETOCREG_BTS_DSZ64(tmp9, 0x069) SEQW URET0
U6d75: tmm5:= unk_496(tmm0, tmm0) 
U6d76: tmm4:= unk_53e( , tmm5) 

U6d78: mm3:= unk_728(tmm5) 
U6d79: tmm0:= unk_6c9(tmm5, tmm4) 
U6d7a: tmp1:= SHL_DSZ32(tmp8, 0x00000002) 

U6d7c: tmp1:= AND_DSZ32(0x00000008, tmp1) 
U6d7d: tmp8:= XOR_DSZ32(tmp1, tmp8) 
U6d7e: tmp2:= SHL_DSZ32(tmp8, 0x00000001) 

U6d80: tmp2:= AND_DSZ32(0x00000010, tmp2) 
U6d81: tmp8:= XOR_DSZ32(tmp2, tmp8) 
U6d82: SAVEUIP( , 0x00, U5a21) 

FUN_ucode_0006d84:
U6d84: tmm2:= unk_6e1(tmm0, tmm0) 
U6d85: tmp12:= unk_6a0() 
U6d86: tmp11:= unk_6a0() 

U6d88: tmm5:= unk_6e1(tmm2, tmm4) 
U6d89: tmp12:= unk_6a0() 
U6d8a: tmm6:= unk_6e1(tmm2, tmm3) 

U6d8c: tmm5:= unk_649(tmm4, tmm5) 
U6d8d: tmp11:= unk_6a0() 
U6d8e: tmm6:= unk_649(tmm3, tmm6) 

U6d90: tmm5:= unk_6e1(tmm2, tmm5) 
U6d91: tmp12:= unk_6a0() 
U6d92: tmm6:= unk_6e1(tmm2, tmm6) 

U6d94: tmm5:= unk_649(tmm4, tmm5) 
U6d95: tmp11:= unk_6a0() 
U6d96: tmm6:= unk_649(tmm3, tmm6) 

U6d98: tmm5:= unk_6e1(tmm2, tmm5) 
U6d99: tmp12:= unk_6a0() 
U6d9a: tmm6:= unk_6e1(tmm2, tmm6) 

U6d9c: tmm5:= unk_649(tmm4, tmm5) 
U6d9d: tmp11:= unk_6a0() 
U6d9e: tmm6:= unk_649(tmm3, tmm6) 

U6da0: tmm5:= unk_6e1(tmm2, tmm5) 
U6da1: tmp1:= ADD_DSZ32(0x00000065, tmp3) 
U6da2: tmm3:= FPREADROM_DTYPENOP(tmp1) 

U6da4: tmm6:= unk_661(tmm2, tmm6) 
U6da5: tmp1:= ADD_DSZ32(0x0000006d, tmp3) 
U6da6: tmm4:= FPREADROM_DTYPENOP(tmp1) 

U6da8: tmm5:= unk_6e1(tmm5, tmm0) SEQW URET0
FUN_ucode_0006da9:
U6da9: tmp7:= ZEROEXT_DSZ32N(0xffffffffffffffff) !m1 
U6daa: tmp7:= BT_DSZ64(tmp7, 0x0000003f) 

U6dac: tmp13:= READUIP_REGOVR(0x00) 
U6dad: tmp14:= READUIP_REGOVR(0x01) !m0 
U6dae: LFNCEWAIT-> tmp0:= MOVEFROMCREG_DSZ64( , 0x486) 

U6db0: tmm4:= unk_73a() 
U6db1: tmp0:= CONCAT_DSZ16(tmp12, tmp0) 
U6db2: STAD_DSZ32_ASZ32_SC1(tmp11, mode=0x18,  , tmp0) 

U6db4: tmp10:= MOVEFROMCREG_DSZ64( , 0x06a) 
U6db5: tmp2:= MOVEFROMCREG_DSZ64( , 0x00f) 
U6db6: tmp2:= AND_DSZ32(0x000007ff, tmp2) 

U6db8: tmp10:= CONCAT_DSZ16(tmp2, tmp10) 
U6db9: STAD_DSZ32_ASZ32_SC1(tmp11, 0x00000004, mode=0x18,  , tmp10) 
U6dba: tmp10:= ZEROEXT_DSZ64() 

U6dbc: tmp3:= MOVEFROMCREG_DSZ64( , 0x00a) 
U6dbd: tmp6:= MOVEFROMCREG_DSZ64( , 0x00d) 
U6dbe: tmp2:= MOVEFROMCREG_DSZ64( , 0x069) 

U6dc0: tmp2:= AND_DSZ32(0x00000001, tmp2) 
U6dc1: tmp2:= CMOVCC_DSZ64_CONDZ(tmp2, 0xffffffffffffffff) 
U6dc2: tmp2:= CONCAT_DSZ32(tmp2, 0xffffffffffffffff) 

U6dc4: tmp3:= SUB_DSZ64(tmp6, tmp3) 
U6dc5: tmp3:= AND_DSZ64(tmp2, tmp3) 
U6dc6: tmp3:= AND_DSZ64(tmp2, tmp3) 

U6dc8: tmp10:= CONCAT_DSZ32(tmp10, tmp3) 
U6dc9: tmp10:= MOVEMERGEFLGS_DSZ64(tmp10, tmp7) 
U6dca: tmp10:= CMOVCC_DSZ64_CONDNB(tmp10, tmp3) 

U6dcc: STAD_DSZ64_ASZ32_SC1(tmp11, 0x00000008, mode=0x18,  , tmp10) 
U6dcd: tmp10:= MOVEFROMCREG_DSZ64( , 0x00e) 
U6dce: tmp9:= CONCAT_DSZ32(0xffff0000) 

U6dd0: tmp1:= READURAM( , 0x005c, 64) 
U6dd1: tmp2:= NOTAND_DSZ64(tmp9, tmp10) 
U6dd2: tmp1:= AND_DSZ64(tmp9, tmp1) 

U6dd4: tmp9:= OR_DSZ64(tmp2, tmp1) 
U6dd5: tmp1:= TEST_DSZ64( , tmp10) 
U6dd6: tmp9:= MOVEMERGEFLGS_DSZ64(tmp9, tmp1) 

U6dd8: tmp10:= CMOVCC_DSZ64_CONDZ(tmp9, tmp10) 
U6dd9: tmp3:= ZEROEXT_DSZ32(tmp10) 
U6dda: tmp3:= MOVEMERGEFLGS_DSZ64(tmp3, tmp7) 

U6ddc: tmp3:= CMOVCC_DSZ64_CONDNB(tmp3, tmp10) 
U6ddd: STAD_DSZ64_ASZ32_SC1(tmp11, 0x00000010, mode=0x18,  , tmp3) SEQW URET0
U6dde: SAVEUIP( , 0x01, U212a) !m0 

U6de0: tmp0:= ZEROEXT_DSZ32(0x00640fa0) 
U6de1: LFNCEMARK-> tmp0:= CONCAT_DSZ32(0x03e80190, tmp0) 
U6de2: tmp13:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 

U6de4: tmp13:= SHR_DSZ32(tmp13, 0x0000000b) 
U6de5: tmp13:= AND_DSZ32(0x00000030, tmp13) 
U6de6: tmp0:= SHR_DSZ64(tmp0, tmp13) 

U6de8: tmp13:= ZEROEXT_DSZ16(tmp0) 
U6de9: tmp0:= MOVEFROMCREG_DSZ64( , 0x220, 32) !m1 
U6dea: tmp3:= SHR_DSZ32(tmp0, 0x00000008) 

U6dec: tmp4:= READURAM( , 0x0023, 64) 
U6ded: tmp4:= BT_DSZ64(tmp4, 0x00000003) 
U6dee: tmp0:= MOVEMERGEFLGS_DSZ64(tmp0, tmp4) 

U6df0: tmp4:= CMOVCC_DSZ32_CONDB(tmp0, tmp3) 
U6df1: tmp4:= AND_DSZ32(0x0000003f, tmp4) 
U6df2: tmp2:= unk_0bc(tmp3) 

U6df4: tmp2:= BTR_DSZ32(tmp2, 0x00000003) 
U6df5: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, tmp2) 
U6df6: tmp3:= ZEROEXT_DSZ8(tmp3) 

U6df8: tmp0:= SUB_DSZ32(tmp2, 0x00000008) 
U6df9: tmp0:= unk_2e4(tmp0, tmp4) 
U6dfa: tmp0:= unk_2a4(tmp13, tmp0) 

U6dfc: tmp0:= SHR_DSZ32(tmp0, 0x00000003) 
U6dfd: tmp2:= unk_116( , tmp0) 
U6dfe: tmp2:= unk_226(tmp3, tmp2) 

U6e00: tmp0:= unk_114( , tmp2) 
U6e01: tmp0:= OR_DSZ32(tmp0) 
U6e02: tmp0:= SETCC_CONDNZ(tmp0) 

U6e04: tmp2:= ADD_DSZ32(tmp0, tmp2) 
U6e05: tmp0:= SUB_DSZ32(tmp2, tmp13) 
U6e06: tmp1:= CONCAT_DSZ16(tmp2, tmp0) 

U6e08: tmp1:= OR_DSZ32(0x80000000, tmp1) 
U6e09: tmp1:= SELECTCC_DSZ32_CONDZ(tmp0, tmp1) 
U6e0a: tmp1:= OR_DSZ32(0x00008000, tmp1) 

U6e0c: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp1, 0x221, 32) !m1 
U6e0d: tmp0:= CONCAT_DSZ32(0x0000003f) 
U6e0e: tmp4:= SHL_DSZ64(tmp4, 0x00000020) 

U6e10: tmp9:= READURAM( , 0x005c, 64) 
U6e11: tmp9:= NOTAND_DSZ64(tmp0, tmp9) 
U6e12: tmp4:= AND_DSZ64(tmp0, tmp4) 

U6e14: tmp9:= OR_DSZ64(tmp4, tmp9) 
U6e15: LFNCEMARK-> WRITEURAM(tmp9, 0x015c, 64) !m2 SEQW URET1
fit_load_start:
U6e16: tmp0:= ZEROEXT_DSZ32(0xffffffffffffffc0) 

U6e18: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0) 
U6e19: tmp12:= CONCAT_DSZ16(0x00000200) 
U6e1a: tmp11:= OR_DSZ32(0x00000001, tmp12) 

U6e1c: tmp1:= SUB_DSZ64(0xffffffb0, tmp0) 
U6e1d: UJMPCC_DIRECT_NOTTAKEN_CONDNLE(tmp1, U5e68) 
U6e1e: tmp11:= OR_DSZ32(0x00000002, tmp12) 

U6e20: tmp1:= SUB_DSZ64(0xff000000, tmp0) 
U6e21: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp1, U5e68) 
U6e22: tmp11:= OR_DSZ32(0x00000003, tmp12) 

U6e24: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0) 
U6e25: tmp2:= ZEROEXT_DSZ32(0x5449465f) 
U6e26: tmp2:= CONCAT_DSZ32(0x2020205f, tmp2) 

U6e28: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U5e68, tmp1) !m2 
U6e29: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, 0x00000008) 
U6e2a: tmp11:= OR_DSZ32(0x00000004, tmp12) 

U6e2c: tmp2:= SHR_DSZ64(tmp1, 0x00000018) 
U6e2d: tmp2:= BTR_DSZ32(tmp2, 0x0000001f) 
U6e2e: tmp2:= SUB_DSZ32(0x00010000, tmp2) 

U6e30: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U5e68) 
U6e31: tmp11:= OR_DSZ32(0x00000005, tmp12) 
U6e32: tmp3:= ADD_DSZ32(0x00000000, tmp1) 

U6e34: CMPUJZ_DIRECT_NOTTAKEN(tmp3, 0x00000000, U5e68) !m2 
U6e35: tmp11:= OR_DSZ32(0x00000006, tmp12) 
U6e36: tmp3:= SHL_DSZ32(tmp3, 0x00000004) 

U6e38: tmp3:= ADD_DSZ64(tmp3, tmp0) 
U6e39: tmp2:= SUB_DSZ64(0xffffffc0, tmp3) 
U6e3a: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp2, U5e68) 

U6e3c: tmp9:= BTS_DSZ32(0x00000000, 0x0000001f) 
U6e3d: tmp10:= CONCAT_DSZ32(0x00000001) 
U6e3e: tmp6:= PORTIN_DSZ64_ASZ16_SC1(0x4710) !m2 

U6e40: tmp6:= SHR_DSZ64(tmp6, 0x00000032) 
U6e41: tmp6:= AND_DSZ32(0x00000007, tmp6) 
process_next_fit_xlat:
U6e42: tmp0:= ADD_DSZ32(0x00000010, tmp0) 

U6e44: tmp1:= SUB_DSZ32(tmp3, tmp0) 
U6e45: UJMPCC_DIRECT_NOTTAKEN_CONDNB(tmp1, U608a) 
U6e46: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp0, 0x00000008) 

U6e48: tmp2:= SHR_DSZ64(tmp1, 0x00000030) 
U6e49: tmp2:= AND_DSZ32(0x0000007f, tmp2) 
U6e4a: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, 0x00000001, U6e4c) !m1 SEQW GOTO U64ea

non_ucode_fit_xlat_found:
U6e4c: tmp11:= OR_DSZ32(0x00000008, tmp12) 
U6e4d: tmp2:= SUB_DSZ32(0x0000007f, tmp2) 
U6e4e: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U6e42) SEQW GOTO U608a

U6e50: tmp1:= AND_DSZ32(0x00000003, tmp1) 
U6e51: tmp2:= BT_DSZ16(tmp6, 0x00000009) 
U6e52: tmp1:= MOVEMERGEFLGS_DSZ64(tmp1, tmp2) 

U6e54: tmp2:= CMOVCC_DSZ32_CONDB(tmp1, 0x00000003) 
U6e55: tmp3:= MOVEINSERTFLGS_DSZ32(tmp2, 0x00000003) 
U6e56: tmp2:= CMOVCC_DSZ32_CONDB(tmp3, tmp2) 

U6e58: tmp3:= ADD_DSZ8(tmp2, 0x00000059) 
U6e59: tmm1:= FPREADROM_DTYPENOP(tmp3) 
U6e5a: tmp4:= ADD_DSZ8(tmp2, 0x0000005d) 

U6e5c: tmm4:= FPREADROM_DTYPENOP(tmp4) 
U6e5d: tmp5:= ADD_DSZ8(tmp2, 0x00000061) 
U6e5e: tmm6:= FPREADROM_DTYPENOP(tmp5) 

U6e60: tmm6:= unk_53f(tmm7, tmm6) 
U6e61: mm0:= unk_7ea(tmm7) 
U6e62: tmp0:= SUB_DSZ32(0x00000001, tmp0) 

U6e64: tmm6:= unk_7c2(mm0, tmm6) 
U6e65: tmp1:= PINTMOVDTMM2I_DSZ64(tmm7) 
U6e66: tmp1:= SHL_DSZ64(tmp1, 0x00000001) 

U6e68: tmp1:= NOTAND_DSZ64(0x00000000, tmp1) 
U6e69: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U0554) 
U6e6a: mm3:= unk_76b(tmm7) 

U6e6c: tmm1:= unk_743(mm3, tmm1) 
U6e6d: tmm1:= unk_485(tmm1) 
U6e6e: mm5:= unk_7ea(tmm7) 

U6e70: tmm1:= unk_7c2(mm5, tmm1) 
U6e71: tmm0:= unk_68c(tmm7, tmm1) 
U6e72: mm3:= unk_76a(tmm7) 

U6e74: tmp3:= AND_DSZ8(0x00000010, tmp3) 
U6e75: tmp8:= CMOVCC_DSZ16_CONDZ(tmp3, 0x00000001) 
U6e76: tmm4:= unk_743(tmm0, tmm4) 

U6e78: tmm4:= unk_482(tmm4) 
U6e79: mm5:= unk_7ea(tmm0) 
U6e7a: tmm4:= unk_7c2(mm5, tmm4) 

U6e7c: tmm0:= unk_688(tmm0, tmm4) 
U6e7d: tmp4:= MOVEFROMCREG_DSZ64( , 0x486) 
U6e7e: tmp5:= AND_DSZ16(0x00000010, tmp4) 

U6e80: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp5, U2989) 
U6e81: tmp5:= ZEROEXT_DSZ32(0x0000c001) 
U6e82: tmm1:= unk_7c2(mm5, tmm0) 

U6e84: tmm0:= unk_6aa(tmm0, tmm1) 
U6e85: BTUJB_DIRECT_NOTTAKEN(tmp6, 0x00000009, U5ab4) !m2 
U6e86: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp6, U6360) 

U6e88: LFNCEMARK-> tmm0:= unk_6ee(tmm0) !m2 SEQW GOTO U6360
U6e89: tmp0:= OR_DSZ32(tmp8, tmp0) 
U6e8a: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U76b6) 

U6e8c: tmp10:= unk_6a0() 
U6e8d: tmp11:= unk_6a0() 
U6e8e: tmp12:= FCOM2(tmp8, tmp10) 

U6e90: tmp13:= FCOM2(tmp11, tmp8) 
U6e91: mm0:= unk_76a(tmm4) 
U6e92: mm1:= unk_76a(tmm5) 

U6e94: tmp0:= AND_DSZ32(tmp1, tmp0) 
U6e95: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U6cb5) 
U6e96: tmm2:= unk_5be( , tmm0) 

U6e98: tmm0:= unk_7a8(tmm0) 
U6e99: tmm3:= unk_649(tmm0, tmm2) 
U6e9a: tmm4:= unk_494( , tmm2) 

U6e9c: tmm4:= unk_649(tmm4, tmm0) 
U6e9d: tmm3:= unk_649(tmm3, tmm3) 
U6e9e: mm0:= unk_7ea(tmm2) 

U6ea0: tmp0:= SUB_DSZ32(0x0000ffff, tmp0) 
U6ea1: tmp10:= unk_6a0() 
U6ea2: tmm3:= unk_666(tmm4, tmm3) 

U6ea4: tmm2:= unk_6e1(tmm2, tmm3) 
U6ea5: tmm4:= unk_6e1(tmm3, tmm3) 
U6ea6: tmp13:= unk_6a0() 

U6ea8: tmm0:= unk_6e1(tmm4, tmm5) 
U6ea9: tmp13:= unk_6a0() 
U6eaa: tmm0:= unk_649(tmm5, tmm0) 

U6eac: tmm0:= unk_6e1(tmm4, tmm0) 
U6ead: tmp13:= unk_6a0() 
U6eae: tmm0:= unk_649(tmm5, tmm0) 

U6eb0: tmm5:= unk_704(mm0) 
U6eb1: tmm5:= unk_644(tmm5) 
U6eb2: tmm0:= unk_6e1(tmm4, tmm0) 

U6eb4: tmp0:= ADD_DSZ32(0x000000b5, tmp8) 
U6eb5: tmm4:= FPREADROM_DTYPENOP(tmp0) 
U6eb6: tmm5:= unk_649(tmm5, tmm4) 

U6eb8: tmm0:= unk_6e1(tmm0, tmm3) 
U6eb9: tmp0:= ADD_DSZ32(0x000000d5, tmp8) 
U6eba: tmm3:= FPREADROM_DTYPENOP(tmp0) 

U6ebc: tmm0:= unk_649(tmm2, tmm0) 
U6ebd: tmp3:= ZEROEXT_DSZ32(0x00000010) 
U6ebe: tmm2:= unk_700(mm3) !m2 

U6ec0: tmm0:= unk_6c9(tmm3, tmm0) 
U6ec1: tmm0:= unk_6c9(tmm5, tmm0) 
U6ec2: LFNCEMARK-> tmm7:= unk_6a1(tmm0, tmm1) !m2 SEQW GOTO U01a2

FUN_ucode_0006ec4:
U6ec4: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000001c0) 
U6ec5: SAVEUIP_REGOVR(0x01, U6ec6, 0x0008) !m0 SEQW GOTO U32cd
U6ec6: MOVETOCREG_DSZ64(tmp2, 0x383, 32) !m1 

U6ec8: tmp2:= MOVETOCREG_SHR_DSZ64(tmp2, 0x00000008, 0x384) !m1 
U6ec9: tmp2:= MOVETOCREG_SHR_DSZ64(tmp2, 0x00000008, 0x10c) 
U6eca: tmp8:= AND_DSZ64(0x00000100, tmp2) 

U6ecc: tmp7:= MOVEFROMCREG_DSZ64( , 0x692) 
U6ecd: tmp7:= NOTAND_DSZ64(0x00000100, tmp7) 
U6ece: tmp7:= MOVETOCREG_OR_DSZ64(tmp7, 0x692, tmp8) 

U6ed0: MOVETOCREG_SHR_DSZ64(tmp2, 0x00000010, 0x7f6) 
U6ed1: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000200) 
U6ed2: MOVETOCREG_DSZ64(tmp8, 0x3f0, 32) !m1 

U6ed4: MOVETOCREG_SHR_DSZ64(tmp8, 0x00000008, 0x3f1) !m1 
U6ed5: MOVETOCREG_SHR_DSZ64(tmp8, 0x00000010, 0x3f2) !m1 
U6ed6: MOVETOCREG_SHR_DSZ64(tmp8, 0x00000018, 0x3f3) !m1 

U6ed8: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000080) 
U6ed9: MOVETOCREG_DSZ64(tmp1, 0x574) 
U6eda: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000a0) 

U6edc: MOVETOCREG_DSZ64(tmp1, 0x575) 
U6edd: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000c0) 
U6ede: MOVETOCREG_DSZ64(tmp1, 0x562) 

U6ee0: tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000e0) 
U6ee1: MOVETOCREG_DSZ64(tmp1, 0x563) 
U6ee2: SAVEUIP_REGOVR(0x01, U6ee4, 0x0008) !m0 SEQW GOTO U2b15

U6ee4: tmp0:= ZEROEXT_DSZ32(0x00000080) 
U6ee5: tmp1:= ZEROEXT_DSZ32(0x000002df) 
U6ee6: SAVEUIP( , 0x00, U027a) SEQW SAVEUIP1 U6ee8SEQW GOTO U17f6

U6ee8: MOVETOCREG_SHR_DSZ64(tmp8, 0x00000020, 0x39e) !m1 
U6ee9: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000001e0) 
U6eea: MOVETOCREG_DSZ64(tmp8, 0x104) 

U6eec: MOVETOCREG_BTS_DSZ64( , 0x0000001f, 0x29d) !m0,m1 
U6eed: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
U6eee: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x000) 

U6ef0: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000001a0) 
U6ef1: unk_13f(tmp8) !m2 
U6ef2: MOVETOCREG_DSZ64(tmp8, 0x7fe) 

U6ef4: tmp8:= MOVEFROMCREG_DSZ64( , 0x51b) 
U6ef5: MOVETOCREG_BTR_DSZ64(tmp8, 0x51b) 
U6ef6: tmp12:= READURAM( , 0x0047, 64) 

U6ef8: TESTUSTATE( , SYS, 0xc000) !m1 ? SEQW GOTO U283a
U6ef9: tmp8:= READURAM( , 0x005c, 64) 
U6efa: tmp8:= BT_DSZ32(tmp8, 0x00000007) 

U6efc: tmp8:= MOVEMERGEFLGS_DSZ32(0x00000c75, tmp8) 
U6efd: tmp12:= CMOVCC_DSZ32_CONDB(tmp8, tmp12) SEQW GOTO U2825
FUN_ucode_0006efe:
U6efe: tmp14:= READUIP_REGOVR(0x01) !m0 

U6f00: MOVETOCREG_DSZ64(tmp2, 0x63a) 
U6f01: tmp15:= AND_DSZ32(0x00000003, tmp8) 
U6f02: tmp15:= SHR_DSZ32(0x0000000f, tmp15) 

U6f04: MOVETOCREG_DSZ64(tmp15, 0x63e) 
U6f05: tmp15:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U6f06: tmp1:= OR_DSZ32(0x80000021, tmp1) 

U6f08: tmp15:= AND_DSZ32(0x60000000, tmp15) 
U6f09: tmp1:= AND_DSZ32(0x8005003f, tmp1) 
U6f0a: tmp15:= OR_DSZ32(tmp15, tmp1) 

U6f0c: MOVETOCREG_DSZ64(tmp15, 0x7f6) 
U6f0d: tmp4:= NOTAND_DSZ32(0xffca5800, tmp4) 
U6f0e: tmp4:= OR_DSZ32(0x00002000, tmp4) 

U6f10: tmp15:= READURAM( , 0x005c, 64) 
U6f11: tmp15:= BT_DSZ64(tmp15, 0x0000001a) 
U6f12: tmp15:= SELECTCC_DSZ32_CONDB(tmp15, 0x00008000) 

U6f14: tmp4:= NOTAND_DSZ32(tmp15, tmp4) 
U6f15: tmp15:= READURAM( , 0x0035, 64) 
U6f16: tmp15:= BT_DSZ64(tmp15, 0x00000029) 

U6f18: tmp15:= SELECTCC_DSZ32_CONDB(tmp15, 0x00200000) 
U6f19: tmp4:= NOTAND_DSZ32(tmp15, tmp4) 
U6f1a: tmp15:= READURAM( , 0x0077, 64) 

U6f1c: tmp15:= BT_DSZ64(tmp15, 0x0000002b) 
U6f1d: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0x00008000) 
U6f1e: tmp4:= NOTAND_DSZ32(tmp15, tmp4) 

U6f20: tmp1:= SELECTCC_DSZ32_CONDZ(tmp13, 0x00000020) 
U6f21: MOVETOCREG_DSZ64(tmp7, 0x529) 
U6f22: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp4, 0x7c5, tmp1) 

U6f24: tmp15:= MOVEFROMCREG_DSZ64( , 0x701) 
U6f25: TESTUSTATE( , UCODE, 0x0040) ? SEQW GOTO U6f29
U6f26: WRSEGFLD(0x00000000) 

U6f28: tmp15:= NOTAND_DSZ64(0xc0000000, tmp15) 
U6f29: tmp12:= READURAM( , 0x005c, 64) 
U6f2a: tmp12:= AND_DSZ32(0x00040000, tmp12) 

U6f2c: tmp15:= NOTAND_DSZ64(0x00040000, tmp15) 
U6f2d: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp15, 0x701, tmp12) 
U6f2e: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U6f32

U6f30: MOVETOCREG_DSZ64( , 0x00000000, 0x7f9, 32) !m1 
U6f31: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x7f8) 
U6f32: TESTUSTATE( , UCODE, 0x00a0) ? SEQW URET1

U6f34: tmp12:= WRMSLOOPCTRFBR(0x00000003) 
U6f35: tmp2:= NOTAND_DSZ32(0x0000001f, tmp7) 
U6f36: tmp3:= ZEROEXT_DSZ32(0x00000540) 

U6f38: tmp4:= READURAM( , 0x0010, 64) 
U6f39: tmp4:= ZEROEXT_DSZ16(0x000001e6, tmp4) 
U6f3a: LFNCEWAIT-> tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp2) 

U6f3c: tmp2:= ZEROEXT_DSZ64(tmp2, tmp1) SEQW GOTO U57ca
process_plain_patch:
U6f3d: tmp11:= ZEROEXT_DSZ32(0x00000008) 
U6f3e: tmp2:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 

U6f40: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x0000000a, U27dc) !m0,m1 
U6f41: tmp11:= ZEROEXT_DSZ32(0x00000009) 
U6f42: tmp2:= PORTIN_DSZ64_ASZ16_SC1(0x4710) !m2 

U6f44: tmp2:= SHR_DSZ64(tmp2, 0x00000032) 
U6f45: tmp2:= AND_DSZ32(0x00000007, tmp2) 
U6f46: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000044) 

U6f48: BTUJNB_DIRECT_NOTTAKEN(tmp1, U27dc, tmp2) !m1 
U6f49: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x00000010) 
U6f4a: tmp11:= ZEROEXT_DSZ32(0x0000000a) 

U6f4c: tmp4:= READURAM( , 0x0034, 64) 
U6f4d: tmp4:= SHR_DSZ64(tmp4, 0x00000020) 
U6f4e: tmp2:= SUB_DSZ32(tmp4, tmp2) 

U6f50: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp2, U27dc) 
U6f51: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp14, 0x0000000c) 
U6f52: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000001f, U6f54) !m0,m1 SEQW GOTO U6f69

U6f54: tmp0:= READURAM( , 0x0053, 64) 
U6f55: tmp0:= OR_DSZ32(0x00000020, tmp0) 
U6f56: tmp0:= WRITEURAM(tmp0, 0x0053, 32) 

U6f58: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U6f59: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x0000000a, U6f5d) !m0,m1 
U6f5a: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x8404) !m2 

U6f5c: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U27dc) !m1 
U6f5d: tmp11:= ZEROEXT_DSZ32(0x0000000b) 
U6f5e: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x50d8) !m2 

U6f60: tmp2:= MOVEFROMCREG_DSZ64( , 0x208, 32) !m1 
U6f61: tmp0:= SHR_DSZ32(tmp1, 0x00000010) 
U6f62: tmp0:= NOTAND_DSZ32(tmp2, tmp0) 

U6f64: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U27dc) !m1 
U6f65: TESTUSTATE( , SYS, !0xc000) !m0,m1 ? SEQW GOTO U6f69
U6f66: tmp11:= ZEROEXT_DSZ32(0x0000000c) 

U6f68: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000012, U27dc) !m0,m1 
check_cpumodel_matches:
U6f69: tmp1:= ADD_DSZN(0x00000024, tmp14) !m1 
U6f6a: ROVR<- tmp10:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U6f6cSEQW GOTO U0ba9

U6f6c: tmp5:= ZEROEXT_DSZ32(0x00000001) 
U6f6d: tmp12:= WRMSLOOPCTRFBR(0x00000007) 
U6f6e: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp1) 

U6f70: tmp2:= SUB_DSZ32(tmp3, tmp2) 
U6f71: tmp2:= SELECTCC_DSZ32_CONDNZ(tmp2, tmp5) 
U6f72: tmp10:= OR_DSZ32(tmp2, tmp10) 

U6f74: tmp5:= ADD_DSZ32(tmp5, tmp5) 
U6f75: tmp1:= ADD_DSZN(0x00000004, tmp1) !m1 
U6f76: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U6f6e

U6f78: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000001a0) 
U6f79: tmp0:= CONCAT_DSZ32(tmp10, tmp0) 
U6f7a: STADSTGBUF_DSZ64_ASZ16_SC1(0x000001a0,  , tmp0) 

U6f7c: tmp4:= ADD_DSZ64(0x00000284, tmp14) SEQW GOTO U1e88
U6f7d: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U6f7e: PORTOUT_DSZ32_ASZ16_SC1(0x005c,  , tmp15) !m2 

U6f80: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x005c) !m2 
U6f81: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U6f80) !m1 
U6f82: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U6f84: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U6f85) !m0,m1 SEQW GOTO U6f82
U6f85: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U6f86: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U6f88: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U6f89: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U6f8a: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U6f8c: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U6f8d: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U6f8e) !m0,m1 SEQW GOTO U6f8c
U6f8e: tmp15:= SHR_DSZ64(tmpv0, 0x00000030) 

U6f90: tmp15:= CONCAT_DSZ8(0x00000007, tmp15) 
U6f91: tmp15:= CONCAT_DSZ16(0x000041c0, tmp15) 
U6f92: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U6f94: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U6f95: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U6f96: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U6f98: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U6f99: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U6f9a) !m0,m1 SEQW GOTO U6f98
U6f9a: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 

U6f9c: tmp15:= ADD_DSZ32(0x00000010, tmp15) 
U6f9d: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U6f9e: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U6fa0: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U6fa1: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U6fa2: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U6fa4: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U6fa5) !m0,m1 SEQW GOTO U6fa2
U6fa5: tmp15:= ZEROEXT_DSZ64(tmpv1) 
U6fa6: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 

U6fa8: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U6fa9: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U6faa: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 

U6fac: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U6fad: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U6fae: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U6fb0) !m0,m1 SEQW GOTO U6fad

U6fb0: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U6fb1: tmp15:= ADD_DSZ32(0x00000004, tmp15) 
U6fb2: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U6fb4: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U6fb5: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U6fb6: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U6fb8: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U6fb9: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U6fba) !m0,m1 SEQW GOTO U6fb8
U6fba: tmp15:= ZEROEXT_DSZ64(tmpv0) 

U6fbc: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 
U6fbd: tmp15:= ROR_DSZ32(tmp15, 0x00000010) 
U6fbe: tmp15:= OR_DSZ32(0x000000ff, tmp15) SEQW GOTO U7226

U6fc0: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x0000027c, tmp11) 
U6fc1: tmp9:= MOVEFROMCREG_DSZ64( , 0x008) 
U6fc2: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000280, tmp9) 

U6fc4: tmp9:= MOVEFROMCREG_DSZ64( , 0x070) 
U6fc5: STADPPHYSTICKLE_DSZ16_ASZ64_SC1(tmp2, 0x0000027e, tmp9) 
U6fc6: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp10, 0x00000005, U6fc8) !m1 SEQW GOTO U6fcd

U6fc8: tmp9:= MOVEFROMCREG_DSZ64( , 0x105) 
U6fc9: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000278, tmp9) 
U6fca: tmp9:= NOTAND_DSZ32(0x00004000, tmp9) 

U6fcc: MOVETOCREG_DSZ64(tmp9, 0x105) 
U6fcd: MOVETOCREG_DSZ64( , 0x00000000, 0x20f, 32) !m1,m2 
U6fce: LFNCEWAIT-> WRSEGFLD(tmp4, DS_16bit, BASE) 

U6fd0: tmp9:= RDSEGFLD(UNK_SEG_09, SEL+FLGS+LIM) 
U6fd1: WRSEGFLD(tmp9, DS_16bit, SEL+FLGS+LIM) 
U6fd2: tmp9:= ZEROEXT_DSZ32(0x00008093) 

U6fd4: tmp9:= SHL_DSZ32(tmp9, 0x00000010) 
U6fd5: tmp9:= CONCAT_DSZ32(0xffffffffffffffff, tmp9) 
U6fd6: WRSEGFLD(tmp9, UNK_SEG_04, SEL+FLGS+LIM) 

U6fd8: WRSEGFLD(tmp9, DS, SEL+FLGS+LIM) 
U6fd9: WRSEGFLD(tmp9, FS, SEL+FLGS+LIM) 
U6fda: WRSEGFLD(tmp9, ES, SEL+FLGS+LIM) 

U6fdc: WRSEGFLD(tmp9, GS, SEL+FLGS+LIM) 
U6fdd: WRSEGFLD(tmp9, SS_USERM, SEL+FLGS+LIM) 
U6fde: WRSEGFLD(tmp9, SS, SEL+FLGS+LIM) 

U6fe0: MOVE_DSZ32() 
U6fe1: tmp10:= SHR_DSZ32(tmp4, 0x00000004) 
U6fe2: tmp10:= CONCAT_DSZ16(0x0000809b, tmp10) 

U6fe4: tmp10:= CONCAT_DSZ32(0xffffffffffffffff, tmp10) 
U6fe5: WRSEGFLD(0x00000000, DS, BASE) 
U6fe6: WRSEGFLD(0x00000000, ES, BASE) 

U6fe8: WRSEGFLD(0x00000000, FS, BASE) 
U6fe9: WRSEGFLD(0x00000000, GS, BASE) 
U6fea: WRSEGFLD(0x00000000, SS_USERM, BASE) 

U6fec: WRSEGFLD(0x00000000, SS, BASE) 
U6fed: MOVETOCREG_DSZ64(tmp9, 0x73c) !m2 
U6fee: WRSEGFLD(tmp4, UNK_SEG_09, BASE) 

U6ff0: WRSEGFLD(tmp4, CS, BASE) 
U6ff1: WRSEGFLD(tmp10, UNK_SEG_09, FLGS) 
U6ff2: WRSEGFLD(tmp10, CS, SEL+FLGS+LIM) 

U6ff4: MOVETOCREG_SHR_DSZ64(tmp10, 0x00000010, 0x7f5) !m2 
U6ff5: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x79e) 
U6ff6: tmp9:= SUB_DSZ32(0x00000001) 

U6ff8: MOVETOCREG_DSZ64(tmp9, 0x410) 
U6ff9: MOVETOCREG_DSZ64( , 0x00000000, 0x700) 
U6ffa: SYNCMARK-> MOVETOCREG_DSZ64(tmp4, 0x78e) 

U6ffc: tmp11:= OR_DSZ32(0x00003e14, tmp11) 
U6ffd: tmp10:= TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW GOTO U1d0c
U6ffe: tmp9:= READURAM( , 0x005c, 64) !m2 

U7000: tmp9:= NOTAND_DSZ32(tmp9, 0x00000800) 
U7001: tmp11:= NOTAND_DSZ32(tmp9, tmp11) SEQW GOTO U1d0d
U7002: tmp11:= unk_6a0() 

U7004: tmp12:= unk_6a0() 
U7005: tmm2:= unk_495(tmm1, tmm4) 
U7006: tmp5:= ZEROEXT_DSZ32(0x0000ffff) 

U7008: tmm2:= unk_7c2(mm5, tmm2) 
U7009: tmm3:= unk_7c2(mm5, tmm3) 
U700a: tmm2:= unk_6e1(tmm2, tmm3) 

U700c: tmm2:= unk_7c2( , tmm2) 
U700d: tmm1:= unk_68c(tmm1, tmm2) 
U700e: tmp11:= unk_6a0() 

U7010: tmp12:= unk_6a0() 
U7011: tmm2:= unk_495(tmm1, tmm4) 
U7012: tmm2:= unk_7c2(mm5, tmm2) 

U7014: tmm3:= unk_7c2(mm5, tmm3) 
U7015: tmm2:= unk_6e1(tmm2, tmm3) 
U7016: tmm2:= unk_7c2( , tmm2) 

U7018: tmm1:= unk_68c(tmm1, tmm2) 
U7019: tmp1:= AND_DSZ32(0x000000f0, tmp0) 
U701a: tmp2:= SHR_DSZ32(tmp1, 0x00000003) 

U701c: tmp3:= SHR_DSZ32(tmp1, 0x00000002) 
U701d: tmp1:= ADD_DSZ32(tmp3, tmp2) 
U701e: tmp3:= SUB_DSZ32(tmp1, tmp0) 

U7020: tmp11:= unk_6a0() 
U7021: tmp12:= unk_6a0() 
U7022: tmm2:= unk_495(tmm1, tmm4) 

U7024: tmm2:= unk_7c2(mm5, tmm2) 
U7025: tmm3:= unk_7c2(mm5, tmm3) 
U7026: tmm2:= unk_6e1(tmm2, tmm3) 

U7028: tmm2:= unk_7c2( , tmm2) 
U7029: tmm1:= unk_68c(tmm1, tmm2) 
U702a: tmp11:= unk_6a0() 

U702c: tmp12:= unk_6a0() 
U702d: tmm2:= unk_495(tmm1, tmm4) 
U702e: tmm2:= unk_7c2(mm5, tmm2) 

U7030: tmm3:= unk_7c2(mm5, tmm3) 
U7031: tmm2:= unk_6e1(tmm2, tmm3) 
U7032: tmm2:= unk_7c2( , tmm2) 

U7034: tmm1:= unk_68c(tmm1, tmm2) 
U7035: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U7036) SEQW GOTO U7041
U7036: tmp3:= SHL_DSZ64(tmp3, 0x00000035) 

U7038: tmm5:= unk_744(mm3) 
U7039: tmp11:= unk_6a0() 
U703a: tmm5:= unk_7c2(mm5, tmm5) 

U703c: tmm3:= unk_7c2(mm5, tmm3) 
U703d: tmm2:= unk_6e1(tmm5, tmm3) 
U703e: tmm2:= unk_7c2( , tmm2) 

U7040: tmm1:= unk_688(tmm1, tmm2) 
U7041: tmp5:= ZEROEXT_DSZ32(0x0001003e) 
U7042: tmm1:= unk_7c2(mm5, tmm1) 

U7044: tmp3:= SHR_DSZ32(tmp6, 0x0000000f) 
U7045: tmm1:= unk_702(mm3, tmm1) 
U7046: tmm1:= unk_69d( , tmm1) 

U7048: mm7:= FMOV( , tmm1) !m0 SEQW GOTO U17ec
U7049: tmm0:= unk_72f(tmm1) 
U704a: tmp15:= AND_DSZ32(0x7ffff000, tmp8) 

U704c: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U3380) 
U704d: tmp9:= AND_DSZ32(0x000007ff, tmp8) 
U704e: tmp15:= unk_3e5(0x00000001, tmp9) 

U7050: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U3380) 
U7051: tmp15:= unk_3e5(0x00000004, tmp9) 
U7052: tmp15:= unk_3e5(0x00000002, tmp15) 

U7054: tmp8:= MOVEMERGEFLGS_DSZ64(tmp8, tmp15) 
U7055: tmp15:= unk_3e5(0x00000002, tmp9) 
U7056: tmp0:= SUB_DSZ8(tmp9, 0x00000002) 

U7058: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, tmp0) 
U7059: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000000, U3380) !m1,m2 
U705a: tmp0:= ZEROEXT_DSZ8(tmp9) 

U705c: tmp15:= unk_3e5(0x00000007, tmp9) 
U705d: TESTUSTATE( , SYS, !UST_VMX_GUEST) !m0,m1 ? SEQW GOTO U7060
U705e: tmp0:= OR_DSZ32(0x00000001, tmp0) 

U7060: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, tmp0) 
U7061: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000000, U3380) !m1,m2 
U7062: tmp0:= SUB_DSZ8(0x00000008, tmp9) 

U7064: tmp5:= SETCC_CONDZ(tmp0) 
U7065: tmp0:= SUB_DSZ8(0x0000000a, tmp9) 
U7066: tmp0:= SUB_DSZ8(0x00000004, tmp0) 

U7068: tmp0:= SETCC_CONDBE(tmp0) 
U7069: tmp5:= OR_DSZ32(tmp0, tmp5) 
U706a: tmp0:= SUB_DSZ8(0x00000011, tmp9) 

U706c: tmp0:= SETCC_CONDZ(tmp0) 
U706d: tmp5:= OR_DSZ32(tmp0, tmp5) 
U706e: tmp15:= unk_3e5(0x00000003, tmp9) 

U7070: tmp0:= SELECTCC_DSZ32_CONDNZ(tmp15, tmp9) 
U7071: tmp0:= AND_DSZ8(0xffffffffffffffe0, tmp0) 
U7072: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U3380) 

U7074: tmp5:= SELECTCC_DSZ32_CONDNZ(tmp15, tmp5) 
U7075: tmp9:= AND_DSZ32(0x00000800, tmp8) 
U7076: tmp9:= SHR_DSZ32(tmp9, 0x0000000b) 

U7078: tmp0:= SELECTCC_DSZ32_CONDZ(tmp15, tmp9) 
U7079: CMPUJNZ_DIRECT_NOTTAKEN(tmp0, 0x00000000, U3380) !m1,m2 
U707a: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U7081

U707c: tmp15:= NOTAND_DSZ32(tmp10, 0x00000001) 
U707d: tmp3:= BT_DSZ64(tmp3, 0x00000027) 
U707e: tmp15:= SELECTCC_DSZ64_CONDNB(tmp3, tmp15) 

U7080: tmp5:= NOTAND_DSZ32(tmp15, tmp5) 
U7081: CMPUJNZ_DIRECT_NOTTAKEN(tmp5, U3380, tmp9) !m1,m2 
U7082: tmp5:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x00000100, tmp12) 

U7084: tmp5:= SELECTCC_DSZ32_CONDZ(tmp9, tmp5) 
U7085: tmp15:= AND_DSZ32(0xffff0000, tmp5) 
U7086: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U3380) 

U7088: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000002c8, tmp12) 
U7089: tmp15:= SUB_DSZ32(0x0000000f, tmp0) 
U708a: tmp15:= SETCC_CONDNBE(tmp15) 

U708c: tmp15:= SELECTCC_DSZ32_CONDNBE(tmp8, tmp15) 
U708d: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000000, U3380) !m1,m2 
U708e: LFNCEMARK-> tmp0:= SELECTCC_DSZ32_CONDNBE(tmp8, tmp0) 

U7090: tmp0:= CONCAT_DSZ16(tmp0, tmp5) 
U7091: WRITEURAM(tmp0, 0x000a, 64) !m2 SEQW GOTO U713e
U7092: LFNCEMARK-> tmp4:= MOVETOCREG_OR_DSZ64(tmp4, 0x00000020, 0x48c) !m2 

U7094: tmp1:= AND_DSZ32(0x00000020, tmp5) 
U7095: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U7096) SEQW GOTO U7099
U7096: tmp1:= OR_DSZ16(0x00008080, tmp4) 

U7098: LFNCEMARK-> MOVETOCREG_DSZ64(tmp1, 0x48c) 
U7099: tmm4:= unk_496(tmm1, tmm1) 
U709a: tmm5:= unk_496(tmm0, tmm0) 

U709c: tmp15:= FCOM2(tmp12, tmp13) 
U709d: tmm2:= unk_496(tmm0, tmm1) 
U709e: tmm1:= unk_72a(tmm2) 

U70a0: mm7:= unk_76a(tmm7) 
U70a1: tmp7:= MOVEINSERTFLGS_DSZ32(tmp7) 
U70a2: tmp1:= SELECTCC_DSZ32_CONDBE(tmp7, 0x00000001) 

U70a4: tmp9:= XOR_DSZ32(tmp1, tmp9) 
U70a5: tmm4:= unk_57f(tmm7, tmm4) 
U70a6: tmm3:= unk_487(tmm4, tmm5) 

U70a8: tmm2:= unk_486(tmm4, tmm5) 
U70a9: mm0:= unk_7ea(tmm2) 
U70aa: tmp0:= ADD_DSZ32(0x00000005, tmp0) 

U70ac: tmm4:= unk_7c2(mm0, tmm2) 
U70ad: tmm4:= unk_6a7(tmm3, tmm4) 
U70ae: mm6:= unk_76a(tmm4) 

U70b0: tmm4:= unk_69d( , tmm4) 
U70b1: mm0:= unk_7ea(tmm3) 
U70b2: tmp0:= SUB_DSZ32(0x00000001, tmp0) 

U70b4: tmm6:= unk_7c2(mm0, tmm3) 
U70b5: tmp13:= FCOM2(tmp14, tmp12) 
U70b6: tmm6:= unk_494( , tmm3) 

U70b8: tmm6:= unk_6c9(tmm4, tmm6) 
U70b9: mm1:= unk_76a(tmm5) 
U70ba: tmm5:= unk_743(mm1, tmm4) 

U70bc: tmm4:= unk_483(tmm5, tmm6) 
U70bd: tmp1:= AND_DSZ32(0x00000001, tmp1) 
U70be: tmp6:= ADD_DSZ32(tmp1, tmp6) 

U70c0: tmp0:= SUB_DSZ32(0x00000002, tmp6) 
U70c1: UJMPCC_DIRECT_NOTTAKEN_CONDL(tmp0, U70c2) SEQW GOTO U6d14
U70c2: tmm4:= unk_702(tmm1) 

U70c4: tmm2:= unk_496(tmm2, tmm4) 
U70c5: tmm5:= unk_6e6(tmm3, tmm2) 
U70c6: mm0:= unk_7ea(tmm5) 

U70c8: tmp0:= SUB_DSZ32(0x0000ffd7, tmp0) 
U70c9: UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp0, U5b74) 
U70ca: tmm2:= unk_661(tmm5, tmm5) 

U70cc: tmm3:= unk_6e1(tmm2, tmm2) 
U70cd: tmp15:= unk_6a0() 
U70ce: tmp14:= unk_6a0() 

U70d0: tmm4:= unk_6e1(tmm3, tmm7) 
U70d1: tmp15:= unk_6a0() 
U70d2: tmm6:= unk_6e1(tmm3, tmm6) 

U70d4: tmm4:= unk_649(tmm7, tmm4) 
U70d5: tmp15:= unk_6a0() 
U70d6: tmm6:= unk_649(tmm7, tmm6) 

U70d8: tmm4:= unk_6e1(tmm3, tmm4) 
U70d9: tmp15:= unk_6a0() 
U70da: tmm6:= unk_6e1(tmm3, tmm6) 

U70dc: tmm4:= unk_6c9(tmm7, tmm4) 
U70dd: tmp15:= unk_6a0() 
U70de: tmm6:= unk_6c9(tmm7, tmm6) 

U70e0: tmm4:= unk_6e1(tmm4, tmm2) 
U70e1: tmm7:= unk_6e1(tmm5, tmm2) 
U70e2: tmm4:= unk_649(tmm4, tmm6) 

U70e4: tmm4:= unk_6e1(tmm7, tmm4) SEQW GOTO U6d39
U70e5: tmp0:= ZEROEXT_DSZ32(0x00000000) 
U70e6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000100, mode=0x01, tmp8, 0x00000000) 

U70e8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000108, mode=0x01, tmp8, 0x00000000) 
U70e9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000110, mode=0x01, tmp8, 0x00000000) 
U70ea: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x00000080) 

U70ec: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000118, mode=0x01, tmp8, tmp0) 
U70ed: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000a0) 
U70ee: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000120, mode=0x01, tmp8, tmp0) 

U70f0: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000c0) 
U70f1: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000128, mode=0x01, tmp8, tmp0) 
U70f2: tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(0x000000e0) 

U70f4: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000130, mode=0x01, tmp8, tmp0) 
U70f5: tmp0:= ZEROEXT_DSZ32(0x00000001) 
U70f6: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000010, mode=0x01, tmp8, tmp0) 

U70f8: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000140,  , tmp0) 
U70f9: LFNCEMARK-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U70fa: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 

U70fc: MOVETOCREG_DSZ64( , 0x00000000, 0x7f8) !m2 
U70fd: MOVETOCREG_DSZ64( , 0x00000000, 0x7f9, 32) !m1,m2 
U70fe: tmp0:= CONCAT_DSZ32(tmp1, tmp0) 

U7100: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000040,  , tmp0) 
U7101: tmp0:= MOVEFROMCREG_DSZ64( , 0x20f, 32) !m1 
U7102: MOVETOCREG_DSZ64( , 0x00000000, 0x20f, 32) !m1,m2 

U7104: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000020,  , tmp0) 
U7105: tmp0:= READURAM( , 0x005c, 64) 
U7106: tmp1:= AND_DSZ32(0x00002000, tmp0) 

U7108: tmp0:= OR_DSZ32(0x00002000, tmp0) 
U7109: WRITEURAM(tmp0, 0x005c, 32) !m2 
U710a: tmp0:= MOVEFROMCREG_DSZ64( , 0x105) 

U710c: MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000f, 0x105) !m0,m2 
U710d: tmp0:= AND_DSZ32(0x00008000, tmp0) 
U710e: tmp1:= OR_DSZ32(tmp0, tmp1) 

U7110: tmp0:= MOVEFROMCREG_DSZ64( , 0x7c6) 
U7111: tmp0:= OR_DSZ32(tmp1, tmp0) 
U7112: tmp1:= MOVEFROMCREG_DSZ64( , 0x7f1) 

U7114: MOVETOCREG_DSZ64( , 0x00000000, 0x7f1) !m2 
U7115: tmp0:= CONCAT_DSZ32(tmp1, tmp0) 
U7116: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000060,  , tmp0) 

U7118: tmp0:= READURAM( , 0x001b, 64) 
U7119: STADSTGBUF_DSZ64_ASZ16_SC1(0x00000160,  , tmp0) 
U711a: tmp13:= READURAM( , 0x0070, 64) 

U711c: STADSTGBUF_DSZ64_ASZ16_SC1( , tmp13) 
U711d: tmp13:= OR_DSZ64(0x000000e2, tmp13) SEQW SAVEUIP0 U711eSEQW GOTO U5721
U711e: tmp0:= ZEROEXT_DSZ32(0x00000000) 

U7120: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(mode=0x01, tmp8, tmp0) 
U7121: tmp0:= ZEROEXT_DSZ32(0x00000001) 
U7122: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000008, mode=0x01, tmp8, tmp0) 

U7124: tmp1:= ADD_DSZ64(0x00000040, tmp8) SEQW SAVEUIP0 U7125SEQW GOTO U318e
U7125: tmp6:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000034, mode=0x01) 
U7126: tmp6:= ADD_DSZ64(tmp6, tmp2) 

U7128: tmp13:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp2, 0x00000024, mode=0x01) 
U7129: tmp6:= ADD_DSZ64(tmp13, tmp6) 
U712a: tmp0:= ZEROEXT_DSZ32(0x00000003) 

U712c: MOVETOCREG_DSZ64(tmp0, 0x7c6) !m2 
U712d: tmp0:= READURAM( , 0x0053, 64) 
U712e: tmp0:= BTS_DSZ64(tmp0, 0x00000006) 

U7130: WRITEURAM(tmp0, 0x0053, 64) !m2 
U7131: MOVETOCREG_BTS_DSZ64( , 0x00000008, 0x007) !m2 
U7132: LFNCEWAIT-> MOVETOCREG_DSZ64( , 0x00000000, 0x78e) 

U7134: unk_13f() !m2 
U7135: MOVETOCREG_DSZ64( , 0x00000000, 0x7fe) 
U7136: rdi:= NOTAND_DSZ64(0x000000ff, tmp8) 

U7138: rsp:= ADD_DSZ64(0x00001000, rdi) SEQW GOTO U1936
U7139: tmp11:= ZEROEXT_DSZ64(tmp13) 
U713a: tmp3:= ZEROEXT_DSZ64(tmp0) 

U713c: tmm2:= unk_76f(tmm7) 
U713d: TESTUSTATE( , UCODE, !0x0008) !m0 ? SEQW GOTO U7049
U713e: LFNCEMARK-> WRITEURAM(tmp3, 0x0043, 64) !m2 

U7140: tmp15:= MOVE_DSZ32(0x00005f15) 
U7141: WRITEURAM(tmp15, 0x002c, 32) !m2 
U7142: tmp0:= ZEROEXT_DSZ64(tmp3) 

U7144: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U7148
U7145: tmp1:= READURAM( , 0x004c, 64) 
U7146: tmp0:= OR_DSZ64(tmp1, tmp3) 

U7148: WRITEURAM(tmp12, 0x000b, 64) !m2 
U7149: tmp15:= SHR_DSZ32(tmp0, 0x00000001) 
U714a: tmp9:= AND_DSZ32(0x00000002, tmp15) 

U714c: tmp15:= READURAM( , 0x004a, 64) !m2 
U714d: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 
U714e: tmp9:= OR_DSZ32(tmp15, tmp9) 

U7150: tmp15:= SHR_DSZ32(tmp0, 0x00000018) 
U7151: tmp15:= AND_DSZ32(0x00000008, tmp15) 
U7152: tmp9:= OR_DSZ32(tmp15, tmp9) 

U7154: tmp5:= SHR_DSZ64(tmp0, 0x00000037) 
U7155: tmp15:= AND_DSZ32(0x00000001, tmp5) 
U7156: tmp9:= OR_DSZ32(tmp15, tmp9) 

U7158: tmp15:= SHR_DSZ32(tmp0, 0x00000014) 
U7159: tmp15:= AND_DSZ32(0x00000004, tmp15) 
U715a: tmp9:= OR_DSZ32(tmp15, tmp9) 

U715c: WRITEURAM(tmp9, 0x0078, 32) !m2 
U715d: tmp9:= READURAM( , 0x0070, 64) 
U715e: tmp15:= AND_DSZ32(0x00000020, tmp5) 

U7160: tmp15:= SHL_DSZ32(tmp15, 0x00000005) 
U7161: tmp9:= NOTAND_DSZ64(tmp15, tmp9) 
U7162: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U7174

U7164: tmp15:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x0000025c, tmp11) 
U7165: tmp15:= AND_DSZ32(0x001fffff, tmp15) 
U7166: tmp13:= SHL_DSZ64(tmp15, 0x0000002a) 

U7168: tmp15:= OR_DSZ64(tmp13, tmp15) 
U7169: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U716d
U716a: tmp13:= READURAM( , 0x0014, 64) 

U716c: tmp15:= OR_DSZ64(tmp15, tmp13) 
U716d: LFNCEWAIT-> WRITEURAM(tmp15, 0x0014, 64) 
U716e: tmp15:= BT_DSZ64(tmp6, 0x0000000a) 

U7170: tmp15:= SELECTCC_DSZ32_CONDB(tmp15, 0x00001000) 
U7171: ROVR<- tmp9:= NOTAND_DSZ64(tmp15, tmp9) SEQW SAVEUIP1 U7172SEQW GOTO U5731
U7172: tmp14:= READURAM( , 0x0010, 64) 

U7174: tmp13:= ZEROEXT_DSZ32(0x00000037) 
U7175: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp13, 0x00b) 
U7176: tmp13:= AND_DSZ32(0x00000200, tmp6) 

U7178: WRITEURAM(tmp9, 0x004f, 64) 
U7179: tmp1:= READURAM( , 0x0057, 64) 
U717a: WRITEURAM(tmp11, 0x0057, 64) !m2 

U717c: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b8, tmp12, tmp1) 
U717d: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000218, tmp12) 
U717e: WRITEURAM(tmp0, 0x0046, 64) !m2 

U7180: tmp10:= BT_DSZ64(tmp10, 0x0000001f) 
U7181: tmp1:= SETCC_CONDNB(tmp10) 
U7182: tmp2:= SELECTCC_DSZ64_CONDNZ(tmp13, tmp3) 

U7184: tmp2:= SHR_DSZ64(tmp2, 0x00000027) 
U7185: tmp1:= AND_DSZ32(tmp2, tmp1) 
U7186: tmp2:= ZEROEXT_DSZ32(0x80000021) 

U7188: tmp2:= CONCAT_DSZ32(0xffffffffffffffff, tmp2) 
U7189: tmp2:= NOTAND_DSZ64(tmp1, tmp2) 
U718a: tmp1:= MOVEMERGEFLGS_DSZ32(0x00000020, tmp1) 

U718c: tmp1:= CMOVCC_DSZ32_CONDNZ(tmp1, 0x80000021) 
U718d: tmp2:= AND_DSZ64(tmp10, tmp2) 
U718e: CMPUJNZ_DIRECT_NOTTAKEN(tmp2, U5f15, tmp1) !m2 

U7190: LFNCEMARK-> tmp5:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000000a8, tmp12) 
U7191: MOVETOCREG_DSZ64(tmp5, 0x529) 
U7192: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U6afd

U7194: SAVEUIP_REGOVR(0x01, U7195, 0x0721) !m0 
U7195: tmp7:= SAVEUIP(tmp5, 0x00, U65a1) 
U7196: SAVEUIP( , 0x01, U5f44) !m0 SEQW GOTO U5ca0

U7198: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U7199: PORTOUT_DSZ32_ASZ16_SC1(0x005c,  , tmp15) !m2 
U719a: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x005c) !m2 

U719c: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U719a) !m1,m2 
U719d: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U719e: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U71a0) !m0,m1,m2 SEQW GOTO U719d

U71a0: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U71a1: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U71a2: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U71a4: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U71a5: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U71a6: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U71a8: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U71a9) !m0,m1,m2 SEQW GOTO U71a6
U71a9: tmp15:= SHR_DSZ64(tmpv0, 0x00000030) 
U71aa: tmp15:= CONCAT_DSZ8(0x00000006, tmp15) 

U71ac: tmp15:= CONCAT_DSZ16(0x000000c0, tmp15) 
U71ad: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U71ae: tmp15:= ZEROEXT_DSZ32(0x00000007) 

U71b0: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U71b1: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U71b2: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U71b4: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U71b5) !m0,m1,m2 SEQW GOTO U71b2
U71b5: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U71b6: tmp15:= ADD_DSZ32(0x00000004, tmp15) 

U71b8: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U71b9: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U71ba: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 

U71bc: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U71bd: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U71be: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U71c0) !m0,m1,m2 SEQW GOTO U71bd

U71c0: tmp15:= ZEROEXT_DSZ64(tmpv0) 
U71c1: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 
U71c2: tmp15:= ROR_DSZ32(tmp15, 0x00000010) 

U71c4: tmp15:= NOTAND_DSZ32(0x000000ff, tmp15) 
U71c5: tmp15:= OR_DSZ32(0x0000000f, tmp15) 
U71c6: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U71c8: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U71c9: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U71ca: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U71cc: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U71cd: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U71ce) !m0,m1,m2 SEQW GOTO U71cc
U71ce: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 

U71d0: tmp15:= ADD_DSZ32(0x00000008, tmp15) 
U71d1: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U71d2: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U71d4: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U71d5: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U71d6: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U71d8: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U71d9) !m0,m1,m2 SEQW GOTO U71d6
U71d9: tmp15:= ZEROEXT_DSZ32(tmpv0) 
U71da: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U71dc: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U71dd: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U71de: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U71e0: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U71e1: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U71e2) !m0,m1,m2 SEQW GOTO U71e0
U71e2: tmp15:= ZEROEXT_DSZ32() 

U71e4: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U71e5: tmp15:= ZEROEXT_DSZ32(0x00000019) 
U71e6: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 

U71e8: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U71e9: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U71ea: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U71ec) !m0,m1,m2 SEQW GOTO U71e9

U71ec: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U71ed: tmp15:= ADD_DSZ32(0x0000000c, tmp15) 
U71ee: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U71f0: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U71f1: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U71f2: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U71f4: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U71f5: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U71f6) !m0,m1,m2 SEQW GOTO U71f4
U71f6: tmpv1:= PORTIN_DSZ32_ASZ16_SC1(0x00a0) !m2 SEQW URET1

U71f8: tmp15:= ZEROEXT_DSZ32(0x00000002) 
U71f9: PORTOUT_DSZ32_ASZ16_SC1(0x005c,  , tmp15) !m2 
U71fa: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x005c) !m2 

U71fc: BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000000, U71fa) !m1,m2 
U71fd: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U71fe: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7200) !m0,m1,m2 SEQW GOTO U71fd

U7200: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U7201: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U7202: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U7204: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U7205: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U7206: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U7208: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7209) !m0,m1,m2 SEQW GOTO U7206
U7209: tmp15:= SHR_DSZ64(tmpv0, 0x00000030) 
U720a: tmp15:= CONCAT_DSZ8(0x00000007, tmp15) 

U720c: tmp15:= CONCAT_DSZ16(0x000040c0, tmp15) 
U720d: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U720e: tmp15:= ZEROEXT_DSZ32(0x00000007) 

U7210: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U7211: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U7212: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U7214: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7215) !m0,m1,m2 SEQW GOTO U7212
U7215: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 
U7216: tmp15:= ADD_DSZ32(0x00000004, tmp15) 

U7218: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U7219: tmp15:= ZEROEXT_DSZ32(0x00000005) 
U721a: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 

U721c: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U721d: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U721e: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7220) !m0,m1,m2 SEQW GOTO U721d

U7220: tmp15:= ZEROEXT_DSZ64(tmpv0) 
U7221: tmp15:= SHR_DSZ64(tmp15, 0x00000020) 
U7222: tmp15:= ROR_DSZ32(tmp15, 0x00000010) 

U7224: tmp15:= NOTAND_DSZ32(0x000000ff, tmp15) 
U7225: tmp15:= OR_DSZ32(0x0000000f, tmp15) 
U7226: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U7228: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U7229: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U722a: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U722c: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U722d: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U722e) !m0,m1,m2 SEQW GOTO U722c
U722e: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 

U7230: tmp15:= ADD_DSZ32(0x00000008, tmp15) 
U7231: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U7232: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U7234: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U7235: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U7236: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U7238: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7239) !m0,m1,m2 SEQW GOTO U7236
U7239: tmp15:= ZEROEXT_DSZ32(tmpv0) 
U723a: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U723c: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U723d: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U723e: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U7240: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U7241: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7242) !m0,m1,m2 SEQW GOTO U7240
U7242: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x50c4) !m2 

U7244: tmp15:= ADD_DSZ32(0x0000000c, tmp15) 
U7245: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U7246: tmp15:= ZEROEXT_DSZ32(0x00000005) 

U7248: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U7249: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U724a: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 

U724c: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U724d) !m0,m1,m2 SEQW GOTO U724a
U724d: tmp15:= ZEROEXT_DSZ32(tmpv1) 
U724e: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 

U7250: tmp15:= ZEROEXT_DSZ32(0x00000007) 
U7251: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 
U7252: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 

U7254: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U7255: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U7256) !m0,m1,m2 SEQW GOTO U7254
U7256: tmp15:= ZEROEXT_DSZ32() 

U7258: PORTOUT_DSZ32_ASZ16_SC1(0x00a0,  , tmp15) !m2 
U7259: tmp15:= ZEROEXT_DSZ32(0x00000019) 
U725a: tmp15:= BTS_DSZ32(tmp15, 0x0000001f) 

U725c: PORTOUT_DSZ32_ASZ16_SC1(0x00a4,  , tmp15) !m2 
U725d: tmp15:= PORTIN_DSZ32_ASZ16_SC1(0x00a4) !m2 
U725e: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x0000001f, U068e) !m0 SEQW GOTO U725d

FUN_ucode_0007260:
U7260: tmp14:= READUIP_REGOVR(0x01) !m0 
U7261: SYNCWAIT-> TESTUSTATE( , UCODE, 0x0010) ? SEQW GOTO U7269
FUN_ucode_0007262:
U7262: tmp14:= READUIP_REGOVR(0x01) !m0 

U7264: tmp5:= MOVEFROMCREG_DSZ64( , 0x7f8) 
U7265: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000080, mode=0x1c, tmp9, tmp5) 
U7266: tmp5:= MOVEFROMCREG_DSZ64( , 0x7f9, 32) !m1 

U7268: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002e8, mode=0x1c, tmp9, tmp5) 
U7269: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000280, mode=0x1c, tmp9, tmp1) 
U726a: tmp6:= MOVEFROMCREG_DSZ64( , 0x7fe) 

U726c: tmp15:= AND_DSZ32(0x00001000, tmp0) 
U726d: tmp2:= CONCAT_DSZ32(tmp4, tmp2) 
U726e: tmp2:= SELECTCC_DSZ64_CONDZ(tmp15, tmp2) 

U7270: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000240, mode=0x1c, tmp9, tmp2) 
U7271: tmp4:= MOVEFROMCREG_DSZ64( , 0x070) 
U7272: LFNCEMARK-> tmp11:= MOVEFROMCREG_DSZ64( , 0x004) 

U7274: tmp1:= READURAM( , 0x0046, 64) 
U7275: tmp1:= BTS_DSZ64(tmp1, 0x0000001f) 
U7276: tmp15:= BT_DSZ32(tmp10, 0x00000015) 

U7278: tmp1:= SELECTCC_DSZ64_CONDNB(tmp15, tmp1) 
U7279: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000248, mode=0x1c, tmp9, tmp1) 
U727a: tmp1:= BT_DSZ64(tmp1, 0x0000000a) 

U727c: tmp2:= READURAM( , 0x0009, 64) 
U727d: tmp15:= BT_DSZ32(tmp0, 0x00000015) 
U727e: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, tmp2) 

U7280: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp1) 
U7281: tmp1:= MOVEFROMCREG_DSZ64( , 0x065) 
U7282: tmp2:= CMOVCC_DSZ64_CONDB(tmp2, tmp1) 

U7284: tmp2:= CMOVCC_DSZ64_CONDNZ(tmp15, tmp2) 
U7285: tmp15:= SHR_DSZ64(tmp3, 0x0000002b) 
U7286: tmp15:= AND_DSZ32(0x00001f80, tmp15) 

U7288: tmp3:= NOTAND_DSZ32(0x00007f84, tmp3) 
U7289: tmp3:= OR_DSZ32(tmp15, tmp3) 
U728a: tmp15:= CONCAT_DSZ16(0x00000840) 

U728c: tmp3:= XOR_DSZ32(tmp15, tmp3) 
U728d: tmp15:= AND_DSZ32(0x00000400, tmp0) 
U728e: tmp3:= SELECTCC_DSZ32_CONDZ(tmp15, tmp3) 

U7290: tmp3:= CONCAT_DSZ32(tmp3, tmp2) 
U7291: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000250, mode=0x1c, tmp9, tmp3) 
U7292: tmp2:= READURAM( , 0x0056, 64) 

U7294: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000218, mode=0x1c, tmp9, tmp2) 
U7295: tmp2:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000fc, mode=0x1c, tmp9) 
U7296: tmp2:= NOTAND_DSZ32(0x80000000, tmp2) 

U7298: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000000fc, mode=0x1c, tmp9, tmp2) 
U7299: tmp2:= READURAM( , 0x003e, 64) 
U729a: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002a8, mode=0x1c, tmp9, tmp2) 

U729c: tmp2:= READURAM( , 0x000a, 64) 
U729d: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000288, mode=0x1c, tmp9, tmp2) 
U729e: tmp2:= READURAM( , 0x0009, 64) 

U72a0: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000290, mode=0x1c, tmp9, tmp2) 
U72a1: tmp2:= READURAM( , 0x000b, 64) 
U72a2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000298, mode=0x1c, tmp9, tmp2) 

U72a4: tmp2:= READURAM( , 0x006e, 64) 
U72a5: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002a0, mode=0x1c, tmp9, tmp2) 
U72a6: tmp3:= AND_DSZ32(0x00000001, tmp4) 

U72a8: tmp3:= SHL_DSZ32(tmp3, 0x0000000e) 
U72a9: tmp15:= AND_DSZ32(0x00000004, tmp4) 
U72aa: tmp15:= SHL_DSZ32(tmp15, 0x0000000a) 

U72ac: tmp3:= OR_DSZ32(tmp15, tmp3) 
U72ad: tmp15:= MOVEFROMCREG_DSZ64( , 0x01c) 
U72ae: tmp3:= OR_DSZ32(tmp15, tmp3) 

U72b0: tmp2:= BT_DSZ32(tmp0, 0x0000000b) 
U72b1: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0xffffffffffffffff) 
U72b2: tmp15:= BT_DSZ32(tmp11, 0x00000002) 

U72b4: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, 0xffffffffffffffff) 
U72b5: tmp2:= OR_DSZ32(tmp15, tmp2) 
U72b6: tmp2:= AND_DSZ32(tmp2, tmp3) 

U72b8: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002b0, mode=0x1c, tmp9, tmp3) 
U72b9: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002d0, mode=0x1c, tmp9, tmp2) 
U72ba: tmp6:= READAFLAGS( , tmp6) !m2 

U72bc: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000270, mode=0x1c, tmp9, tmp6) 
U72bd: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000278, mode=0x1c, tmp9, tmp6) 
U72be: tmp6:= READURAM( , 0x001f, 64) 

U72c0: tmp2:= AND_DSZ32(0x00000007, tmp6) 
U72c1: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001d4, mode=0x1c, tmp9, tmp2) 
U72c2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000260, mode=0x1c, tmp9, rsp) 

U72c4: tmp3:= MOVEFROMCREG_DSZ64( , 0x01a) 
U72c5: tmp2:= MOVEFROMCREG_DSZ64( , 0x067) 
U72c6: tmp1:= OR_DSZ64(0x00000000, tmp1) 

U72c8: tmp3:= MOVEMERGEFLGS_DSZ64(tmp3, tmp1) 
U72c9: tmp3:= CMOVCC_DSZ64_CONDNZ(tmp3, tmp2) 
U72ca: tmp1:= SUB_DSZN(tmp1, tmp3) !m1 

U72cc: tmp15:= AND_DSZ32(0x00002000, tmp0) 
U72cd: tmp2:= MOVEMERGEFLGS_DSZ64(tmp2, tmp15) 
U72ce: tmp2:= CMOVCC_DSZ64_CONDNZ(tmp2, tmp1) 

U72d0: tmp15:= RDSEGFLD(UNK_SEG_09, UNK_FLD_0c) 
U72d1: tmp3:= SUB_DSZN(tmp15, tmp2) !m1 
U72d2: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000268, mode=0x1c, tmp9, tmp3) 

U72d4: tmp15:= NOTAND_DSZ32(0x0000000c, tmp11) 
U72d5: tmp11:= MOVEMERGEFLGS_DSZ32(tmp11, tmp10) 
U72d6: tmp15:= CMOVCC_DSZ32_CONDNB(tmp11, tmp15) 

U72d8: tmp15:= NOTAND_DSZ32(0x00000013, tmp15) 
U72d9: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp15, 0x004) SEQW URET1
U72da: tmp15:= AND_DSZ32(0x00000310, tmp1) 

U72dc: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 
U72dd: tmp3:= ZEROEXT_DSZ64(tmp0) 
U72de: tmp11:= ZEROEXT_DSZ64(tmp13) 

U72e0: tmp13:= ZEROEXT_DSZ64(tmp8) 
U72e1: tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(0x000001c4, tmp11) 
U72e2: tmp15:= SUB_DSZ32(0x00000004, tmp0) 

U72e4: UJMPCC_DIRECT_NOTTAKEN_CONDNBE(tmp15, U2891) 
U72e5: tmp0:= CONCAT_DSZ32(tmp0) 
U72e6: SAVEUIP_REGOVR( , 0x01, U72e8, 0x80b0) !m0 SEQW GOTO U5dd9

U72e8: tmp15:= SHR_DSZ64(tmp7, 0x00000020) 
U72e9: tmp15:= AND_DSZ32(0x00008000, tmp15) 
U72ea: tmp15:= SHL_DSZ32(tmp15, 0x00000010) 

U72ec: tmp2:= SHL_DSZ32(tmp13, 0x00000017) 
U72ed: tmp15:= OR_DSZ32(tmp2, tmp15) 
U72ee: tmp1:= BTC_DSZ32(tmp1, 0x00000003) 

U72f0: tmp15:= OR_DSZ32(tmp1, tmp15) 
U72f1: tmp3:= CONCAT_DSZ32(tmp15, tmp3) 
U72f2: tmp15:= AND_DSZ32(0xffffffffffffff16, tmp13) 

U72f4: tmp15:= SUB_DSZ32(0x00000016, tmp15) 
U72f5: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 
U72f6: tmp15:= SELECTCC_DSZ32_CONDNP(tmp7, tmp13) 

U72f8: tmp0:= BT_DSZ64(tmp3, 0x0000003f) 
U72f9: tmp0:= SELECTCC_DSZ32_CONDB(tmp0, tmp13) 
U72fa: tmp15:= OR_DSZ32(tmp0, tmp15) 

U72fc: TESTUSTATE( , VMX, !0x0020) !m0,m2 ? SEQW GOTO U72fe
U72fd: tmp15:= OR_DSZ32(tmp13, tmp15) 
U72fe: tmp15:= AND_DSZ32(0x00000080, tmp15) 

U7300: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 
U7301: tmp0:= AND_DSZ32(0x00000080, tmp13) 
U7302: tmp15:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x0000039c, tmp11) 

U7304: tmp15:= SELECTCC_DSZ32_CONDZ(tmp0, tmp15) 
U7305: tmp15:= NOTAND_DSZ16(0x000000ff, tmp15) 
U7306: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 

U7308: tmp15:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000390, tmp11) 
U7309: tmp15:= SELECTCC_DSZ64_CONDZ(tmp0, tmp15) 
U730a: tmp14:= READURAM( , 0x0010, 64) 

U730c: tmp0:= NOTAND_DSZ64(0x00000fc0, tmp14) 
U730d: tmp15:= AND_DSZ64(tmp0, tmp15) 
U730e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 

U7310: tmp2:= AND_DSZ32(0x00000028, tmp13) 
U7311: tmp15:= SUB_DSZ32(0x00000020, tmp2) 
U7312: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U2891) 

U7314: tmp2:= SUB_DSZ32(0x00000028, tmp2) 
U7315: tmp15:= BT_DSZ32(tmp3, 0x00000016) 
U7316: tmp15:= SELECTCC_DSZ32_CONDNB(tmp15, tmp2) 

U7318: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000000, U2891) !m1 
U7319: tmp1:= BT_DSZ32(tmp1, 0x00000012) 
U731a: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000003c0, tmp11) 

U731c: WRITEURAM(tmp9, 0x0025, 64) 
U731d: tmp9:= SELECTCC_DSZ64_CONDNB(tmp1, tmp9) 
U731e: tmp1:= AND_DSZ32(0x00004000, tmp1) 

U7320: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000380, tmp11) 
U7321: WRITEURAM(tmp0, 0x002d, 64) 
U7322: tmp0:= SELECTCC_DSZ64_CONDZ(tmp1, tmp0) 

U7324: tmp0:= OR_DSZ64(tmp9, tmp0) 
U7325: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000388, tmp11) 
U7326: WRITEURAM(tmp9, 0x002e, 64) 

U7328: tmp9:= SELECTCC_DSZ64_CONDZ(tmp1, tmp9) 
U7329: tmp4:= OR_DSZ64(tmp9, tmp0) 
U732a: tmp3:= BT_DSZ64(tmp3, 0x00000019) 

U732c: tmp0:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000018, tmp11) 
U732d: WRITEURAM(tmp0, 0x0015, 64) 
U732e: tmp0:= SELECTCC_DSZ64_CONDNB(tmp3, tmp0) 

U7330: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000020, tmp11) 
U7331: WRITEURAM(tmp9, 0x0016, 64) 
U7332: tmp9:= SELECTCC_DSZ64_CONDNB(tmp3, tmp9) 

U7334: tmp3:= BT_DSZ64(tmp3, 0x0000001c) 
U7335: tmp2:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x000002c0, tmp11) 
U7336: WRITEURAM(tmp2, 0x004d, 64) 

U7338: tmp2:= SELECTCC_DSZ64_CONDNB(tmp3, tmp2) 
U7339: tmp15:= OR_DSZ64(tmp0, tmp4) 
U733a: tmp15:= OR_DSZ64(tmp9, tmp15) 

U733c: tmp15:= OR_DSZ64(tmp2, tmp15) 
U733d: tmp15:= AND_DSZ64(tmp14, tmp15) 
U733e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 

U7340: tmp2:= LDPPHYSTICKLE_DSZ16_ASZ64_SC1(0x00000366, tmp11) 
U7341: tmm4:= unk_707(mm2) 
U7342: tmp3:= BT_DSZ64(tmp3, 0x00000025) 

U7344: tmp15:= SETCC_CONDNB(tmp3) 
U7345: tmp15:= OR_DSZ32(tmp15, tmp2) 
U7346: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U2891) 

U7348: tmp4:= TESTUSTATE( , VMX, 0x0100) !m2 ? SEQW GOTO U7356
U7349: tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(0x00000300, tmp11) 
U734a: tmp15:= NOTAND_DSZ64(0x00000fff, tmp4) 

U734c: tmp15:= AND_DSZ64(tmp14, tmp15) 
U734d: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp15, U2891) 
U734e: tmp9:= SELECTCC_DSZ32_CONDNB(tmp6, 0x00000040) 

U7350: tmp9:= AND_DSZ32(tmp9, tmp4) 
U7351: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp9, U2891) 
U7352: tmp15:= AND_DSZ32(0x00000fbf, tmp4) 

U7354: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x0000001e, U7355) !m0,m1,m2 SEQW GOTO U7356
U7355: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000018, U2891) !m1 
U7356: tmp15:= SELECTCC_DSZ32_CONDZ(tmp12, tmp7) 

U7358: tmp15:= SHR_DSZ32(tmp15, 0x00000010) 
U7359: tmp15:= NOTAND_DSZ32(tmp13, tmp15) 
U735a: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000006, U2891) !m0,m1 SEQW GOTO U713c

rsa_decrypt_modular_multiplication:
U735c: WRITEURAM(tmp8, 0x0046, 64) !m2 
U735d: tmp4:= ZEROEXT_DSZ64() 
U735e: WRITEURAM(tmp9, 0x002c, 32) !m2 

U7360: tmp8:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp10, 0x000000fc) 
U7361: tmp2:= ZEROEXT_DSZ64() 
U7362: tmp1:= ZEROEXT_DSZ32(0x00000040) 

U7364: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, tmp2) 
U7365: tmp3:= IMUL64L_DSZ64(tmp8, tmp9) 
U7366: tmp3:= ADD_DSZ64(tmp4, tmp3) 

U7368: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2, tmp3) 
U7369: tmp2:= ADD_DSZ64(0x00000004, tmp2) 
U736a: tmp4:= SHR_DSZ64(tmp3, 0x00000020) 

U736c: tmp1:= SUB_DSZ32(0x00000001, tmp1) 
U736d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp1, U736e) SEQW GOTO U7364
U736e: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2, tmp4) 

U7370: tmp4:= ZEROEXT_DSZ64() 
U7371: tmp2:= ZEROEXT_DSZ64(0x000000f8) 
U7372: tmp13:= SHL_DSZ64(tmp4, 0x00000030) 

U7374: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x000000fc) 
U7375: tmp1:= SHR_DSZ64(tmp1, 0x00000010) 
U7376: tmp13:= ADD_DSZ64(tmp1, tmp13) 

U7378: LFNCEWAIT-> tmp0:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp10, tmp2) 
U7379: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, 0x000000fc) 
U737a: tmp4:= IMUL64L_DSZ64(tmp1, tmp0) 

U737c: tmp4:= SHR_DSZ64(tmp4, 0x00000030) 
U737d: tmp13:= ADD_DSZ64(tmp4, tmp13) 
U737e: tmm1:= unk_744(tmm5) 

U7380: tmm1:= unk_645(tmm1) 
U7381: tmm1:= unk_6e1(tmm1, tmm5) 
U7382: tmm1:= unk_6c2( , tmm1) 

U7384: tmp13:= PINTMOVDTMM2I_DSZ64(tmm1) 
U7385: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5) 
U7386: tmp1:= IMUL64L_DSZ64(tmp1, tmp0) 

U7388: tmp3:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7) 
U7389: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7,  , tmp1) 
U738a: tmp4:= SHR_DSZ64(tmp1, 0x00000020) 

U738c: tmp4:= ADD_DSZ64(tmp3, tmp4) 
U738d: tmp3:= ZEROEXT_DSZ32(0x00000004) 
U738e: tmp11:= SHR_DSZ64(tmp13, 0x00000020) 

U7390: tmp11:= CMOVCC_DSZ32_CONDZ(tmp11, 0xffffffffffffffff) 
U7391: tmp8:= ZEROEXT_DSZ64() 
U7392: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp5, tmp3) 

U7394: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp6, 0xfffffffffffffffc, tmp3) 
U7395: tmp3:= ADD_DSZ32(0x00000004, tmp3) 
U7396: tmp1:= IMUL64L_DSZ64(tmp1, tmp0) 

U7398: tmp14:= ZEROEXT_DSZ32(tmp13) 
U7399: tmp12:= IMUL64L_DSZ64(tmp9, tmp14) 
U739a: tmp4:= ADD_DSZ64(tmp8, tmp4) 

U739c: tmp8:= ZEROEXT_DSZ32(tmp1) 
U739d: tmp14:= ZEROEXT_DSZ32(tmp12) 
U739e: tmp8:= ADD_DSZ64(tmp4, tmp8) 

U73a0: tmp4:= SHR_DSZ64(tmp12, 0x00000020) 
U73a1: tmp8:= ADD_DSZ64(tmp14, tmp8) 
U73a2: tmp1:= SHR_DSZ64(tmp1, 0x00000020) 

U73a4: tmp4:= ADD_DSZ64(tmp1, tmp4) 
U73a5: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0xfffffffffffffffc, tmp3) 
U73a6: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0xfffffffffffffffc, tmp3, tmp8) 

U73a8: tmp9:= AND_DSZ32(tmp11, tmp9) 
U73a9: tmp4:= ADD_DSZ64(tmp9, tmp4) 
U73aa: tmp8:= SHR_DSZ64(tmp8, 0x00000020) 

U73ac: tmp4:= ADD_DSZ64(tmp1, tmp4) 
U73ad: BTUJB_DIRECT_NOTTAKEN(tmp3, 0x00000008, U73ae) !m1,m2 SEQW GOTO U7392
U73ae: tmp4:= ADD_DSZ64(tmp8, tmp4) 

U73b0: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp6, 0x000000fc) 
U73b1: tmp14:= ZEROEXT_DSZ32(tmp13) 
U73b2: tmp12:= IMUL64L_DSZ64(tmp9, tmp14) 

U73b4: tmp8:= ZEROEXT_DSZ32(tmp12) 
U73b5: tmp8:= ADD_DSZ64(tmp8, tmp4) 
U73b6: tmp12:= SHR_DSZ64(tmp12, 0x00000020) 

U73b8: tmp4:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp3) 
U73b9: tmp4:= ADD_DSZ64(tmp12, tmp4) 
U73ba: tmp9:= AND_DSZ32(tmp11, tmp9) 

U73bc: tmp4:= ADD_DSZ64(tmp9, tmp4) 
U73bd: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp3, tmp8) 
U73be: tmp8:= SHR_DSZ64(tmp8, 0x00000020) 

U73c0: tmp4:= ADD_DSZ64(tmp8, tmp4) 
U73c1: tmp4:= XOR_DSZ64(tmp13, tmp4) 
U73c2: tmp4:= AND_DSZ64(0x00000001, tmp4) 

U73c4: tmp2:= SUB_DSZ32(0x00000004, tmp2) 
U73c5: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDS(tmp2, U73c6) SEQW GOTO U7372
U73c6: tmp13:= SHL_DSZ64(tmp4, 0x00000030) 

U73c8: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, 0x000000fc) 
U73c9: tmp1:= SHR_DSZ64(tmp1, 0x00000010) 
U73ca: tmp13:= ADD_DSZ64(tmp1, tmp13) 

U73cc: tmm1:= unk_744(tmm5) 
U73cd: tmm1:= unk_645(tmm1) 
U73ce: tmm1:= unk_6e1(tmm1, tmm5) 

U73d0: tmm1:= unk_6c2( , tmm1) 
U73d1: tmp13:= PINTMOVDTMM2I_DSZ64(tmm1) 
U73d2: tmp11:= SHR_DSZ64(tmp13, 0x00000020) 

U73d4: tmp4:= ZEROEXT_DSZ64() 
U73d5: tmp2:= ZEROEXT_DSZ32() 
U73d6: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp6, tmp2) 

U73d8: tmp1:= ZEROEXT_DSZ32(tmp13) 
U73d9: tmp8:= IMUL64L_DSZ64(tmp1, tmp9) 
U73da: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2) 

U73dc: tmp12:= ZEROEXT_DSZ32(tmp8) 
U73dd: tmp12:= ADD_DSZ64(tmp1, tmp12) 
U73de: tmp12:= ADD_DSZ64(tmp4, tmp12) 

U73e0: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2, tmp12) 
U73e1: tmp12:= SHR_DSZ64(tmp12, 0x00000020) 
U73e2: tmp4:= SHR_DSZ64(tmp8, 0x00000020) 

U73e4: tmp4:= ADD_DSZ64(tmp12, tmp4) 
U73e5: tmp9:= CMOVCC_DSZ64_CONDZ(tmp11, tmp9) 
U73e6: tmp4:= ADD_DSZ64(tmp9, tmp4) 

U73e8: tmp2:= ADD_DSZ32(0x00000004, tmp2) 
U73e9: BTUJB_DIRECT_NOTTAKEN(tmp2, 0x00000008, U73ea) !m1,m2 SEQW GOTO U73d6
U73ea: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2) 

U73ec: tmp4:= ADD_DSZ64(tmp4, tmp1) 
U73ed: tmp4:= XOR_DSZ64(tmp13, tmp4) 
U73ee: tmp4:= AND_DSZ64(0x00000001, tmp4) 

U73f0: STADPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, tmp2, tmp4) 
U73f1: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U73fc) 
U73f2: tmp9:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp6, 0xfffffffffffffffc, tmp2) 

U73f4: tmp1:= LDPPHYSTICKLE_DSZ32_ASZ64_SC1(tmp7, 0xfffffffffffffffc, tmp2) 
U73f5: tmp9:= MOVSX_SSZ32_DSZ64(tmp9) 
U73f6: tmp1:= MOVSX_SSZ32_DSZ64(tmp1) 

U73f8: tmp1:= ADD_DSZ64(tmp1, tmp9) 
U73f9: tmp1:= SUB_DSZ64(tmp1, 0xffffffffffffffff) 
U73fa: UJMPCC_DIRECT_NOTTAKEN_CONDLE(tmp1, U73fc) SEQW GOTO U7416

U73fc: tmp12:= WRMSLOOPCTRFBR(0x0000001f) 
U73fd: tmp2:= ZEROEXT_DSZ32() 
U73fe: unk_13f() !m2 

U7400: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp2) 
U7401: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2) 
U7402: tmp0:= unk_37e(tmp9, tmp1) !m2 

U7404: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2, tmp0) 
U7405: tmp2:= ADD_DSZ64(0x00000008, tmp2) 
U7406: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U7400

U7408: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp4, U7416) 
U7409: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, U7416) 
U740a: tmp12:= WRMSLOOPCTRFBR(0x0000001f) 

U740c: tmp2:= ZEROEXT_DSZ32() 
U740d: unk_13f() !m2 
U740e: tmp9:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, tmp2) 

U7410: tmp1:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2) 
U7411: tmp0:= unk_37f(tmp9, tmp1) !m2 
U7412: STADPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp7, tmp2, tmp0) 

U7414: tmp2:= ADD_DSZ64(0x00000008, tmp2) 
U7415: tmp12:= SUBR_DSZ64(tmp12, 0x00000001) SEQW GOTO U740e
U7416: tmp8:= READURAM( , 0x0046, 64) 

U7418: tmp9:= READURAM( , 0x002c, 64) 
U7419: tmp9:= ZEROEXT_DSZ32(tmp9) SEQW URET0
U741a: tmp9:= BTR_DSZ32(tmp9, 0x0000000f) 

U741c: tmp9:= OR_DSZ32(0x00004002, tmp9) 
U741d: PORTOUT_DSZ16_ASZ16_SC1(tmp0,  , tmp9) 
U741e: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000001, 0x38e) !m1 

U7420: MOVETOCREG_BTS_DSZ64( , 0x0000001c, 0x3ff) !m1 
U7421: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 
U7422: tmp2:= ZEROEXT_DSZ32(0x00001012) 

U7424: tmp0:= CONCAT_DSZ16(0x00005432, tmp2) 
U7425: tmp2:= ZEROEXT_DSZ16(0x0000fedc) 
U7426: tmp1:= CONCAT_DSZ16(0x0000bcde, tmp2) 

U7428: tmp10:= CONCAT_DSZ32(tmp1, tmp0) 
U7429: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 
U742a: tmp2:= ZEROEXT_DSZ16(0x00009876) 

U742c: tmp0:= CONCAT_DSZ16(0x0000dcba, tmp2) 
U742d: tmp2:= ZEROEXT_DSZ16(0x0000789a) 
U742e: tmp1:= CONCAT_DSZ16(0x00003456, tmp2) 

U7430: tmp11:= CONCAT_DSZ32(tmp1, tmp0) 
U7431: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 
U7432: tmp2:= ZEROEXT_DSZ16(0x00003210) 

U7434: tmp0:= CONCAT_DSZ16(0x00007654, tmp2) 
U7435: tmp2:= ZEROEXT_DSZ16(0x0000defe) 
U7436: tmp1:= CONCAT_DSZ16(0x00009abc, tmp2) 

U7438: tmp12:= CONCAT_DSZ32(tmp1, tmp0) 
U7439: MOVETOCREG_DSZ64(tmp12, 0x3c6, 32) !m1,m2 
U743a: tmp2:= ZEROEXT_DSZ16(0x0000ba98) 

U743c: tmp0:= CONCAT_DSZ16(0x0000fedc, tmp2) 
U743d: tmp2:= ZEROEXT_DSZ16(0x00005678) 
U743e: tmp1:= CONCAT_DSZ16(0x00001234, tmp2) 

U7440: tmp13:= CONCAT_DSZ32(tmp1, tmp0) 
U7441: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 
U7442: tmp2:= ZEROEXT_DSZ16(0x00000012) 

U7444: tmp0:= CONCAT_DSZ16(0x00000040, tmp2) 
U7445: tmp1:= ZEROEXT_DSZ32(0x00000012) 
U7446: tmp14:= CONCAT_DSZ32(tmp1, tmp0) 

U7448: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 
U7449: tmp15:= ZEROEXT_DSZ32(0x00004b27) 
U744a: MOVETOCREG_DSZ64(tmp15, 0x3c9, 32) !m1,m2 

U744c: tmp0:= CONCAT_DSZ16(0x00000005) 
U744d: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 
U744e: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 

U7450: tmp0:= CONCAT_DSZ16(0x0000000d) 
U7451: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 
U7452: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 

U7454: tmp0:= CONCAT_DSZ16(0x00000009) 
U7455: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 
U7456: tmp0:= CONCAT_DSZ16(0x000000c0) 

U7458: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 
U7459: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 
U745a: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 

U745c: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U745d: tmp9:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U745e: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 

U7460: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U7461: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U7462: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U7464: tmp9:= OR_DSZ32(tmp0, tmp9) 
U7465: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 
U7466: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 

U7468: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 
U7469: MOVETOCREG_OR_DSZ64(tmp12, 0x00000001, 0x3c6) !m1,m2 
U746a: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 

U746c: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 
U746d: MOVETOCREG_DSZ64(tmp15, 0x3c9, 32) !m1,m2 
U746e: tmp0:= CONCAT_DSZ16(0x00000005) 

U7470: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 
U7471: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U7472: tmp0:= CONCAT_DSZ16(0x0000000d) 

U7474: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 
U7475: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U7476: tmp0:= CONCAT_DSZ16(0x00000009) 

U7478: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 
U7479: tmp0:= CONCAT_DSZ16(0x000000c0) 
U747a: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 

U747c: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 
U747d: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U747e: tmp0:= AND_DSZ32(0x0000000f, tmp0) 

U7480: tmp0:= SUB_DSZ32(0x0000000f, tmp0) 
U7481: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U7482: tmp9:= OR_DSZ32(tmp0, tmp9) 

U7484: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 
U7485: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U7486: tmp0:= AND_DSZ32(0x0000000f, tmp0) 

U7488: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U7489: tmp9:= OR_DSZ32(tmp0, tmp9) 
U748a: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 

U748c: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 
U748d: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 
U748e: MOVETOCREG_OR_DSZ64(tmp12, 0x00000003, 0x3c6) !m0,m1,m2 

U7490: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 
U7491: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 
U7492: MOVETOCREG_DSZ64(tmp15, 0x3c9, 32) !m1,m2 

U7494: tmp0:= CONCAT_DSZ16(0x00000005) 
U7495: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 
U7496: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 

U7498: tmp0:= CONCAT_DSZ16(0x0000000d) 
U7499: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 
U749a: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 

U749c: tmp0:= CONCAT_DSZ16(0x00000009) 
U749d: MOVETOCREG_DSZ64(tmp0, 0x3c1, 32) !m1,m2 
U749e: tmp0:= CONCAT_DSZ16(0x000000c0) 

U74a0: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 
U74a1: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 
U74a2: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 

U74a4: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U74a5: tmp0:= SUB_DSZ32(0x0000000c, tmp0) 
U74a6: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U74a8: tmp9:= OR_DSZ32(tmp0, tmp9) 
U74a9: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 
U74aa: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 

U74ac: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U74ad: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U74ae: tmp9:= OR_DSZ32(tmp0, tmp9) 

U74b0: tmp0:= MOVEFROMCREG_DSZ64( , 0x39e, 32) !m1 
U74b1: tmp0:= AND_DSZ32(0x000000ff, tmp0) 
U74b2: tmp0:= unk_222(tmp0) 

U74b4: tmp0:= SHL_DSZ32(tmp0, 0x00000001) 
U74b5: tmp0:= SUB_DSZ32(0x00000001, tmp0) 
U74b6: tmp1:= UFLOWCTRL( , tmp0, MSLOOPCTR) 

U74b8: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 
U74b9: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 
U74ba: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 

U74bc: MOVETOCREG_DSZ64(tmp12, 0x3c6, 32) !m1,m2 
U74bd: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 
U74be: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 

U74c0: MOVETOCREG_BTS_DSZ64(tmp15, 0x00000007, 0x3c9) !m0,m1,m2 
U74c1: tmp0:= CONCAT_DSZ16(0x00000005) 
U74c2: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U74c4: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U74c5: tmp0:= CONCAT_DSZ16(0x0000000d) 
U74c6: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U74c8: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U74c9: tmp0:= CONCAT_DSZ16(0x00000009) 
U74ca: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U74cc: tmp0:= CONCAT_DSZ16(0x000000c0) 
U74cd: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 
U74ce: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 

U74d0: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U74d1: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U74d2: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U74d4: tmp9:= OR_DSZ32(tmp0, tmp9) 
U74d5: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 
U74d6: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 

U74d8: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U74d9: tmp0:= SUB_DSZ32(0x00000008, tmp0) 
U74da: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U74dc: tmp9:= OR_DSZ32(tmp0, tmp9) 
U74dd: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 
U74de: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 

U74e0: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 
U74e1: MOVETOCREG_DSZ64(tmp12, 0x3c6, 32) !m1,m2 
U74e2: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 

U74e4: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 
U74e5: tmp0:= ZEROEXT_DSZ32(0x000000e0) 
U74e6: MOVETOCREG_OR_DSZ64(tmp15, 0x3c9, tmp0) !m1,m2 

U74e8: tmp0:= CONCAT_DSZ16(0x00000005) 
U74e9: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U74ea: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 

U74ec: tmp0:= CONCAT_DSZ16(0x0000000d) 
U74ed: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U74ee: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 

U74f0: tmp0:= CONCAT_DSZ16(0x00000009) 
U74f1: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U74f2: tmp0:= CONCAT_DSZ16(0x000000c0) 

U74f4: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 
U74f5: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 
U74f6: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 

U74f8: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U74f9: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U74fa: tmp9:= OR_DSZ32(tmp0, tmp9) 

U74fc: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 
U74fd: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U74fe: tmp0:= AND_DSZ32(0x0000000f, tmp0) 

U7500: tmp0:= SUB_DSZ32(0x00000004, tmp0) 
U7501: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U7502: tmp9:= OR_DSZ32(tmp0, tmp9) 

U7504: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 
U7505: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 
U7506: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 

U7508: MOVETOCREG_DSZ64(tmp12, 0x3c6, 32) !m1,m2 
U7509: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 
U750a: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 

U750c: unk_b22(tmp15, IMM_MACRO_c9) !m0,m1,m2 
U750d: tmp0:= CONCAT_DSZ16(0x00000005) 
U750e: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U7510: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U7511: tmp0:= CONCAT_DSZ16(0x0000000d) 
U7512: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U7514: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U7515: tmp0:= CONCAT_DSZ16(0x00000009) 
U7516: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U7518: tmp0:= CONCAT_DSZ16(0x000000c0) 
U7519: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 
U751a: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 

U751c: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U751d: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U751e: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U7520: tmp9:= OR_DSZ32(tmp0, tmp9) 
U7521: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 
U7522: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 

U7524: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U7525: tmp0:= SUB_DSZ32(0x00000002, tmp0) 
U7526: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 

U7528: tmp9:= OR_DSZ32(tmp0, tmp9) 
U7529: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 
U752a: MOVETOCREG_DSZ64(tmp10, 0x3c4, 32) !m1,m2 

U752c: MOVETOCREG_DSZ64(tmp11, 0x3c5, 32) !m1,m2 
U752d: MOVETOCREG_DSZ64(tmp12, 0x3c6, 32) !m1,m2 
U752e: MOVETOCREG_DSZ64(tmp13, 0x3c7, 32) !m1,m2 

U7530: MOVETOCREG_DSZ64(tmp14, 0x3c8, 32) !m1,m2 
U7531: tmp0:= ZEROEXT_DSZ32(0x00004b28) 
U7532: MOVETOCREG_DSZ64(tmp0, 0x3c9, 32) !m1,m2 

U7534: tmp0:= CONCAT_DSZ16(0x00000005) 
U7535: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U7536: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 

U7538: tmp0:= CONCAT_DSZ16(0x0000000d) 
U7539: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U753a: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 

U753c: tmp0:= CONCAT_DSZ16(0x00000009) 
U753d: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 
U753e: tmp0:= CONCAT_DSZ16(0x000000c0) 

U7540: SYNCFULL-> MOVETOCREG_DSZ64(tmp0, 0x3c0, 32) !m1,m2 
U7541: tmp0:= MOVEFROMCREG_DSZ64( , 0x304, 32) !m1 
U7542: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 

U7544: tmp0:= AND_DSZ32(0x0000000f, tmp0) 
U7545: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U7546: tmp9:= OR_DSZ32(tmp0, tmp9) 

U7548: tmp0:= MOVEFROMCREG_DSZ64( , 0x350, 32) !m1 
U7549: tmp0:= SHR_DSZ32(tmp0, 0x00000018) 
U754a: tmp0:= AND_DSZ32(0x0000000f, tmp0) 

U754c: tmp0:= SUB_DSZ32(0x00000001, tmp0) 
U754d: tmp0:= SELECTCC_DSZ32_CONDZ(tmp0, 0x00000002) 
U754e: tmp9:= OR_DSZ32(tmp0, tmp9) 

U7550: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x3c1) !m1 
U7551: MOVETOCREG_DSZ64( , 0x00000000, 0x3c4, 32) !m1,m2 
U7552: MOVETOCREG_DSZ64( , 0x00000000, 0x3c5, 32) !m1,m2 

U7554: MOVETOCREG_DSZ64( , 0x00000000, 0x3c6, 32) !m1,m2 
U7555: MOVETOCREG_DSZ64( , 0x00000000, 0x3c7, 32) !m1,m2 
U7556: MOVETOCREG_DSZ64( , 0x00000000, 0x3c8, 32) !m1,m2 

U7558: MOVETOCREG_DSZ64( , 0x00000000, 0x3c9, 32) !m1,m2 
U7559: tmp0:= CONCAT_DSZ16(0x00000005) 
U755a: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U755c: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U755d: tmp0:= CONCAT_DSZ16(0x0000000d) 
U755e: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U7560: MOVETOCREG_BTS_DSZ64( , 0x00000017, 0x3c0) !m0,m1,m2 
U7561: tmp0:= CONCAT_DSZ16(0x00000009) 
U7562: MOVETOCREG_OR_DSZ64(tmp0, 0x3c1, tmp1) !m1,m2 

U7564: SYNCFULL-> MOVETOCREG_DSZ64( , 0x00000000, 0x3c1, 32) !m1,m2 
U7565: tmp1:= ADD_DSZ32(0x00000001, tmp1) 
U7566: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U74b8

U7568: MOVETOCREG_DSZ64( , 0x00000000, 0x3ff, 32) !m1 
U7569: tmp0:= ZEROEXT_DSZ32(0x0000974c) 
U756a: tmp0:= CONCAT_DSZ16(0x00004000, tmp0) 

U756c: tmp2:= PORTIN_DSZ16_ASZ16_SC1(tmp0) 
U756d: tmp2:= NOTAND_DSZ32(0x00004002, tmp2) 
U756e: tmp2:= OR_DSZ32(0x00008000, tmp2) 

U7570: tmp2:= OR_DSZ32(tmp9, tmp2) 
U7571: PORTOUT_DSZ16_ASZ16_SC1(tmp0,  , tmp2) 
U7572: NOP SEQW UEND3

U7574: NOP 
U7575: LFNCEWAIT-> tmp1:= READURAM( , 0x000f, 64) SEQW SAVEUIP0 U7576SEQW GOTO U04fc
U7576: tmp1:= AND_DSZ32(0x00000070, tmp1) 

U7578: tmp9:= MOVEFROMCREG_DSZ64( , 0x2f1, 32) !m1 
U7579: WRITEURAM(tmp9, 0x001c, 32) !m2 
U757a: tmp9:= NOTAND_DSZ32(0x00000607, tmp9) 

U757c: MOVETOCREG_OR_DSZ64(tmp9, 0x2f1, tmp1) !m1,m2 
U757d: tmp9:= SUB_DSZ32(0x00000030, tmp1) 
U757e: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp9, U7580) SEQW GOTO U3c5c

U7580: tmp14:= ZEROEXT_DSZ32(0x00003c5a) SEQW GOTO U0434
U7581: NOP 
U7582: NOP 

U7584: NOP 
FUN_ucode_0007585:
U7585: tmp11:= ZEROEXT_DSZ32(0x00000405) SEQW SAVEUIP0 U7586SEQW GOTO U2c0d
U7586: tmp9:= SHL_DSZ32(tmp9, 0x00000002) 

U7588: tmp9:= ADD_DSZ32(tmp9, 0x00003114) 
U7589: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, tmp9) 
U758a: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp2, tmp1) 

U758c: tmp15:= XOR_DSZ32(0x00000cf8, tmp15) 
U758d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U4489) 
U758e: tmp10:= ZEROEXT_DSZ16(tmp1) 

U7590: tmp15:= NOTAND_DSZ32(0x00000003, tmp1) 
U7591: tmp15:= XOR_DSZ32(0x00000cfc, tmp15) 
U7592: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U58d5) SEQW SAVEUIP0 U7594

U7594: LFNCEMARK-> PORTOUT_DSZ32_ASZ16_SC1(tmp10,  , tmp0) !m1 SEQW GOTO U5ac5
U7595: NOP 
U7596: NOP 

U7598: NOP 
U7599: WRITEURAM( , 0x00000000, 0x0007, 64) !m2 
U759a: SAVEUIP( , 0x00, U0049) SEQW SAVEUIP1 U759cSEQW GOTO U2074

U759c: TESTUSTATE( , UCODE, !0x0004) !m0 ? SEQW URET0
U759d: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U75a1
U759e: tmp15:= MOVEFROMCREG_DSZ64( , 0x7c5) 

U75a0: LFNCEWTMRK-> BTUJNB_DIRECT_NOTTAKEN(tmp15, 0x00000006, U75a5) !m0,m1,m2 
U75a1: tmp0:= READURAM( , 0x0023, 64) 
U75a2: NOP 

U75a4: LFNCEWTMRK-> BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000c, U75a5) !m1,m2 SEQW GOTO U19f1
U75a5: tmp15:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
U75a6: NOP 

U75a8: LFNCEWTMRK-> MOVETOCREG_OR_DSZ64(tmp15, 0x00000001, 0x2cd) !m1,m2 SEQW GOTO U2e50
U75a9: NOP 
U75aa: NOP 

U75ac: NOP 
U75ad: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000004, 0x2cf) !m1 
U75ae: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x06d) !m0,m2 SEQW SAVEUIP0 U75b0SEQW GOTO U23d1

U75b0: tmp4:= SAVEUIP_REGOVR( , 0x00, U75b1, 0x2401) SEQW GOTO U25a5
U75b1: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d3, 32) !m1,m2 
U75b2: NOP 

U75b4: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000000c, U75b5) !m1,m2 SEQW GOTO U75b1
U75b5: tmp0:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
U75b6: NOP 

U75b8: MOVETOCREG_OR_DSZ64(tmp0, 0x00000011, 0x223) !m1 SEQW SAVEUIP1 U75b9SEQW GOTO U208d
U75b9: SIGEVENT( , 0x00000063) 
U75ba: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x2f1) !m1 

U75bc: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2f2) !m0,m1 
U75bd: tmp0:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U75be: tmp0:= NOTAND_DSZ32(0x00000060, tmp0) 

U75c0: MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1 SEQW GOTO U2acd
U75c1: NOP 
U75c2: NOP 

U75c4: NOP 
U75c5: WRITEURAM( , 0x00000000, 0x0007, 32) 
enclu_impl:
U75c6: LFNCEMARK-> tmp0:= MOVE_DSZ32(0x00010011) SEQW SAVEUIP0 U75c8SEQW GOTO U6486

U75c8: TESTUSTATE( , SYS, UST_8086_MODE) !m1 ? SEQW GOTO U2769
U75c9: tmp15:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U75ca: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000003, U2771) !m0,m1 

U75cc: tmp15:= MOVEFROMCREG_DSZ64( , 0x79e) 
U75cd: CMPUJNZ_DIRECT_NOTTAKEN(tmp15, 0x00000003, U2769) !m0,m1 
U75ce: LFNCEWAIT-> tmp1:= READURAM( , 0x001f, 64) 

U75d0: tmp15:= NOTAND_DSZ32(0x00000001, rax) 
U75d1: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp15, 0x00000400) 
U75d2: tmp1:= OR_DSZ64(tmp15, tmp1) 

U75d4: WRITEURAM(tmp1, 0x001f, 64) !m2 
U75d5: tmp10:= ZEROEXT_DSZ32() 
U75d6: tmp1:= TESTUSTATE( , SYS, UST_VMX_DUAL_MON) !m1 ? SEQW GOTO U1f95

U75d8: tmp0:= ZEROEXT_DSZ32(0x00000022) 
U75d9: tmp7:= ZEROEXT_DSZ32(0x00000004) SEQW GOTO U3365
U75da: NOP 

U75dc: NOP 
U75dd: tmp12:= ZEROEXT_DSZ32(0x00007700) 
U75de: WRMSLOOPCTRFBR( , 0x00002803) SEQW SAVEUIP0 U75e0SEQW GOTO U2031

U75e0: WRMSLOOPCTRFBR( , 0x00001014) SEQW SAVEUIP0 U75e1SEQW GOTO U3399
U75e1: tmp12:= ZEROEXT_DSZ32(0x000076c0) 
U75e2: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U75e4: LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 
U75e5: tmp6:= NOTAND_DSZ32(0x00000003, tmp8) 
U75e6: tmp6:= MOVETOCREG_DSZ64(tmp6, 0x389, 32) !m1 

U75e8: tmp8:= ZEROEXT_DSZ32(tmp8, tmp6) 
U75e9: MOVETOCREG_DSZ64(tmp8, 0x389, 32) !m1 
U75ea: tmp0:= MOVEFROMCREG_DSZ64( , 0x3cf, 32) !m1 

U75ec: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U75ea) !m1,m2 
U75ed: tmp0:= ZEROEXT_DSZ32(0x00000080) 
U75ee: tmp1:= ZEROEXT_DSZ32(0x00000002) 

U75f0: SAVEUIP( , 0x00, U027a) SEQW SAVEUIP1 U75f1SEQW GOTO U17f6
U75f1: tmp6:= MOVEFROMCREG_DSZ64( , 0x238, 32) !m1 
U75f2: tmp6:= OR_DSZ32(0x00000300, tmp6) 

U75f4: MOVETOCREG_DSZ64(tmp6, 0x238, 32) !m1 
U75f5: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x208) !m0,m1 
U75f6: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x289) !m0,m1,m2 SEQW GOTO U299e

U75f8: NOP 
U75f9: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2db) !m0,m1,m2 
U75fa: tmp5:= ZEROEXT_DSZ32() SEQW SAVEUIP0 U75fcSEQW GOTO U5ee8

U75fc: tmp15:= READURAM( , 0x0053, 64) 
U75fd: tmp15:= BTR_DSZ32(tmp15, 0x00000003) 
U75fe: WRITEURAM(tmp15, 0x0053, 32) 

U7600: WRITEURAM( , 0x00000000, 0x0007, 32) 
U7601: tmp12:= ZEROEXT_DSZ32(0x00000c52) 
U7602: tmp5:= TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U7606

U7604: MOVETOCREG_BTS_DSZ64( , 0x00000004, 0x0b4) 
U7605: tmp5:= ZEROEXT_DSZ64(0x00000001) SEQW SAVEUIP0 U7606SEQW GOTO U28ec
U7606: tmp0:= READURAM( , 0x005c, 64) 

U7608: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000010, U7611) !m1,m2 
U7609: tmp1:= MOVEFROMCREG_DSZ64( , 0x516) 
U760a: LFNCEMARK-> tmp2:= MOVEFROMCREG_DSZ64( , 0x517) 

U760c: LFNCEWAIT-> MOVETOCREG_BTR_DSZ64(tmp1, 0x0000000b, 0x516) !m0 
U760d: MOVETOCREG_BTR_DSZ64(tmp2, 0x0000000b, 0x517) !m0 
U760e: tmp5:= OR_DSZ32(tmp5, tmp1) 

U7610: tmp5:= CONCAT_DSZ32(tmp2, tmp5) 
U7611: WRITEURAM(tmp5, 0x004f, 64) 
U7612: UJMP( , tmp12) 

U7614: NOP 
FUN_ucode_0007615:
U7615: tmp11:= ZEROEXT_DSZ32(0x00000425) SEQW SAVEUIP0 U7616SEQW GOTO U2c0d
U7616: tmp9:= SHL_DSZ32(tmp9, 0x00000003) 

U7618: tmp9:= ADD_DSZ32(tmp9, 0x00002141) 
U7619: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp10, tmp9) 
U761a: tmp15:= SELECTCC_DSZ32_CONDNZ(tmp2, tmp1) 

U761c: tmp15:= XOR_DSZ32(0x00000cf8, tmp15) 
U761d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U042c) 
U761e: tmp15:= READURAM( , 0x008a, 64) 

U7620: tmp15:= XOR_DSZ16(tmp1, tmp15) 
U7621: tmp15:= SELECTCC_DSZ64_CONDNZ(tmp15, tmp15) 
U7622: tmp15:= SELECTCC_DSZ64_CONDNZ(tmp2, tmp15) 

U7624: BTUJB_DIRECT_NOTTAKEN(tmp15, 0x00000010, U01f2) 
U7625: tmp15:= XOR_DSZ32(0x00000003, tmp2) 
U7626: tmp15:= SELECTCC_DSZ64_CONDNZ(tmp15, tmp1) 

U7628: tmp10:= READURAM( , 0x005c, 64) 
U7629: tmp10:= BT_DSZ64(tmp10, 0x0000002d) 
U762a: tmp15:= SELECTCC_DSZ64_CONDNB(tmp10, tmp15) 

U762c: tmp15:= XOR_DSZ32(0x00000061, tmp15) 
U762d: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U2859) 
U762e: tmp10:= ZEROEXT_DSZ16(tmp1) 

U7630: tmp15:= NOTAND_DSZ32(0x00000003, tmp1) 
U7631: tmp15:= XOR_DSZ32(0x00000cfc, tmp15) 
U7632: SYNCMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U58d5) SEQW SAVEUIP0 U7634

U7634: LFNCEMARK-> tmp0:= PORTIN_DSZ32_ASZ16_SC1(tmp10) !m1 SEQW GOTO U5ac8
U7635: NOP 
U7636: NOP 

U7638: NOP 
U7639: tmp11:= MOVEFROMCREG_DSZ64( , 0x510) SEQW SAVEUIP1 U763aSEQW GOTO U2e21
U763a: tmp12:= MOVEFROMCREG_DSZ64( , 0x511) 

U763c: tmp12:= NOTAND_DSZ32(0xfffffffffffff000, tmp12) 
U763d: tmp14:= ZEROEXT_DSZ32(tmp9) SEQW SAVEUIP1 U763eSEQW GOTO U080e
U763e: tmp2:= AND_DSZ32(tmp11, 0x00000002) 

U7640: tmp3:= BT_DSZ32(tmp11, 0x00000010) 
U7641: tmp2:= MOVEMERGEFLGS_DSZ32(tmp2, tmp3) 
U7642: tmp2:= CMOVCC_DSZ32_CONDB(tmp2, 0x0000001e) 

U7644: tmp3:= SELECTCC_DSZ32_CONDB(tmp3, 0x00007000) 
U7645: tmp2:= SHL_DSZ32(tmp2, 0x0000000b) 
U7646: LFNCEWAIT-> MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x005) 

U7648: tmp0:= MOVEFROMCREG_DSZ64( , 0x7fe) 
U7649: tmp10:= BTS_DSZ32(tmp0, 0x00000010) 
U764a: BTUJB_DIRECT_NOTTAKEN(tmp13, 0x00000015, U764c) !m1,m2 SEQW GOTO U7650

U764c: tmp2:= ADD_DSZ32(0x00003000, tmp3) 
U764d: tmp10:= READURAM( , 0x0009, 64) 
U764e: tmp10:= SHR_DSZ64(tmp10, 0x00000020) 

U7650: tmp15:= AND_DSZ32(0x0000003f, tmp13) 
U7651: tmp15:= SUB_DSZ32(0x0000001e, tmp15) 
U7652: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp15, U7654) SEQW GOTO U7656

U7654: tmp2:= ADD_DSZ32(0x00004000, tmp3) 
U7655: tmp10:= ZEROEXT_DSZ32(tmp0) 
U7656: LFNCEMARK-> MOVETOCREG_DSZ64(tmp10, 0x7fe) !m2 

U7658: tmp1:= OR_DSZ64(tmp12, tmp2) 
U7659: tmp0:= ZEROEXT_DSZ32(0x0000002c) 
U765a: tmp10:= TESTUSTATE(tmp13, SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U4e84

U765c: tmp0:= CONCAT_DSZ32(tmp1, 0x00000703) SEQW GOTO U407c
U765d: NOP 
U765e: NOP 

U7660: NOP 
FUN_ucode_0007661:
U7661: tmm0:= XORPD(tmm0, tmm1) 
U7662: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7664SEQW GOTO U4859

U7664: tmm0:= unk_7c8(tmm0, tmm1) 
U7665: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7666SEQW GOTO U4859
U7666: tmm0:= unk_7c8(tmm0, tmm1) 

U7668: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7669SEQW GOTO U4859
U7669: tmm0:= unk_7c8(tmm0, tmm1) 
U766a: NOP 

U766c: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U766dSEQW GOTO U4859
U766d: tmm0:= unk_7c8(tmm0, tmm1) 
U766e: NOP 

U7670: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7671SEQW GOTO U4859
U7671: tmm0:= unk_7c8(tmm0, tmm1) 
U7672: NOP 

U7674: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7675SEQW GOTO U4859
U7675: tmm0:= unk_7c8(tmm0, tmm1) 
U7676: NOP 

U7678: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7679SEQW GOTO U4859
U7679: tmm0:= unk_7c8(tmm0, tmm1) 
U767a: NOP 

U767c: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U767dSEQW GOTO U4859
U767d: tmm0:= unk_7c8(tmm0, tmm1) 
U767e: NOP 

U7680: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7681SEQW GOTO U4859
U7681: tmm0:= unk_7c8(tmm0, tmm1) 
U7682: NOP 

U7684: tmm2:= unk_6e2(tmm1) SEQW SAVEUIP1 U7685SEQW GOTO U4859
U7685: NOP 
U7686: NOP 

U7688: tmm1:= unk_7c9(tmm0, tmm1) SEQW URET0
U7689: NOP 
U768a: NOP 

U768c: NOP 
U768d: tmp0:= ZEROEXT_DSZ32(0x00000007) SEQW SAVEUIP0 U768eSEQW GOTO U60aa
U768e: WRITEURAM( , 0x00000000, 0x0053, 64) !m2 

U7690: SAVEUIP( , 0x00, U6a82) SEQW GOTO U2bcc
U7691: NOP 
U7692: NOP 

U7694: NOP 
U7695: unk_c02(rdi) !m1 SEQW SAVEUIP1 U7696SEQW GOTO U7615
U7696: LFNCEWAIT-> STAD_DSZN_ASZ32_SC1(rdi, mode=0x08,  , tmp0) !m1 

U7698: rdi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rdi) !m0,m1 SEQW UEND0
U7699: NOP 
U769a: NOP 

U769c: NOP 
U769d: tmp0:= LDZX_DSZN_ASZ32_SC1(rsi, mode=0x18) !m1 SEQW SAVEUIP1 U769eSEQW GOTO U7585
U769e: rsi:= ADDSUB_DSZ16_CONDD(IMM_MACRO_ALIAS_DATASIZE, rsi) !m0,m1 

U76a0: LFNCEWAIT-> unk_256() !m1 SEQW UEND0
U76a1: NOP 
U76a2: NOP 

U76a4: NOP 
U76a5: tmp14:= ZEROEXT_DSZ32(0x00000004) SEQW SAVEUIP0 U76a6SEQW GOTO U238a
U76a6: tmp14:= AND_DSZ32(0x000000fc, tmp14) 

U76a8: SYNCWAIT-> r64dst:= SHR_DSZ32(tmp14, 0x00000002) SEQW GOTO U04ae
U76a9: NOP 
U76aa: NOP 

U76ac: NOP 
U76ad: tmp9:= ZEROEXT_DSZ32(tmp10) SEQW SAVEUIP0 U76aeSEQW GOTO U610d
U76ae: MOVE_DSZ32() 

U76b0: LFNCEMARK-> BTUJB_DIRECT_NOTTAKEN(tmp7, U2701, tmp5) !m1 SEQW GOTO U25c4
U76b1: NOP 
U76b2: NOP 

U76b4: NOP 
U76b5: NOP 
U76b6: ROVR<- NOP SEQW SAVEUIP0 U76b8SEQW GOTO U5ea6

U76b8: tmp3:= ZEROEXT_DSZ32(0x00000001) 
U76b9: tmm2:= unk_743(mm3) 
U76ba: tmp8:= AND_DSZ32(0x00000018, tmp0) 

U76bc: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp8, U76c0) 
U76bd: tmp10:= unk_6a0() 
U76be: tmp10:= FCOM2(tmp8, tmp10) 

U76c0: tmm6:= unk_704(mm2) 
U76c1: tmm6:= unk_620(tmm6) 
U76c2: tmp8:= PINTMOVDTMM2I_DSZ32(tmm6) 

U76c4: tmp5:= MOVEFROMCREG_DSZ64( , 0x486) 
U76c5: tmp4:= MOVEFROMCREG_DSZ64( , 0x48c) 
U76c6: UJMP( , tmp8) 

U76c8: NOP 
U76c9: NOP 
U76ca: MOVETOCREG_DSZ64( , 0x00000000, 0x000) !m2 SEQW SAVEUIP1 U76ccSEQW GOTO U2012

U76cc: LFNCEMARK-> MOVETOCREG_BTS_DSZ64( , 0x0000000b, 0x00b) !m0,m2 
U76cd: TESTUSTATE( , UCODE, 0x0400) ? SEQW GOTO U2ebc
U76ce: tmp1:= MOVEFROMCREG_DSZ64( , 0x088) 

U76d0: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x0000000e, U2ebc) !m0,m1 
U76d1: tmp1:= ZEROEXT_DSZ32(0x00000009) 
U76d2: ROVR<- tmp0:= ZEROEXT_DSZ32() SEQW SAVEUIP1 U76d4SEQW GOTO U65b9

U76d4: tmp8:= SAVEUIP_REGOVR( , 0x01, U76d5, 0x8321) !m0 SEQW GOTO U5e06
U76d5: SAVEUIP( , 0x00, U3772) 
U76d6: tmpv2:= SAVEUIP( , 0x01, U2eb6) !m0 

FUN_ucode_00076d8:
U76d8: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x088) 
U76d9: tmpv0:= AND_DSZ32(0x00100000, tmpv0) 
U76da: tmpv1:= MOVEFROMCREG_DSZ64( , 0x0b1) 

U76dc: tmpv1:= NOTAND_DSZ32(tmpv1, 0x00000006) 
U76dd: tmpv1:= OR_DSZ32(tmpv0, tmpv1) 
U76de: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmpv1, U1cbe) SEQW URET0

U76e0: NOP 
U76e1: NOP 
FUN_ucode_00076e2:
U76e2: UPDATEUSTATE( , 0xfc) SEQW SAVEUIP1 U76e4SEQW GOTO U0c62

U76e4: AETTRACE( , 0x08, IMM_MACRO_ALIAS_INSTRUCTION) !m0 
U76e5: tmp0:= ZEROEXT_DSZ32(0x0000001c) 
U76e6: TESTUSTATE( , SYS, UST_USER_MODE) !m1 ? SEQW GOTO U2711

U76e8: TESTUSTATE( , SYS, UST_VMX_GUEST) !m1 ? SEQW GOTO U5e7e
U76e9: tmp5:= ZEROEXT_DSZ32() 
U76ea: tmp3:= ZEROEXT_DSZ32() 

U76ec: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U76fa
U76ed: MOVETOCREG_BTS_DSZ64( , 0x00000010, 0x072) !m2 
U76ee: tmp6:= READURAM( , 0x0011, 64) 

U76f0: tmp13:= READUIP_REGOVR(0x00) 
U76f1: LFNCEWAIT-> tmp4:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, mode=0x01, tmp2) 
U76f2: tmp6:= LDPPHYSTICKLE_DSZ64_ASZ64_SC1(tmp6, 0x00000010, mode=0x01, tmp2) 

U76f4: tmp6:= AND_DSZ64(tmp4, tmp6) 
U76f5: tmp6:= NOTAND_DSZ64(tmp5, tmp6) 
U76f6: tmp6:= OR_DSZ64(tmp6, tmp3) 

U76f8: tmp5:= OR_DSZ64(tmp4, tmp5) 
U76f9: tmp0:= ZEROEXT_DSZ32(0x0002001c) SEQW SAVEUIP1 U76faSEQW GOTO U5e80
U76fa: tmp4:= AND_DSZ64(tmp11, tmp5) 

U76fc: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U76fe
U76fd: tmp10:= OR_DSZ64(tmp9, tmp10) 
U76fe: tmp3:= NOTAND_DSZ64(tmp5, tmp10) 

U7700: tmp10:= OR_DSZ64(tmp3, tmp4) SEQW URET0
U7701: NOP 
U7702: NOP 

U7704: NOP 
U7705: NOP 
U7706: tmpv0:= MOVEFROMCREG_DSZ64( , 0x2d7, 32) !m1 SEQW SAVEUIP0 U7708SEQW GOTO U334d

U7708: tmpv0:= READURAM( , 0x008c, 64) 
U7709: BTUJNB_DIRECT_NOTTAKEN(tmpv0, U7721, tmpv2) !m1,m2 
U770a: tmpv0:= MOVEFROMCREG_DSZ64( , 0x009) SEQW SAVEUIP0 U770cSEQW GOTO U334d

U770c: WRMSLOOPCTRFBR( , 0x0000001f) 
U770d: tmpv3:= ZEROEXT_DSZ32(0x00000020) 
U770e: tmpv0:= MOVEFROMCREG_DSZ64( , tmpv3) 

U7710: tmpv1:= SHR_DSZ64(tmpv0, 0x00000030) 
U7711: tmpv1:= AND_DSZ32(0x0000000f, tmpv1) 
U7712: tmpv2:= SHL_DSZ64(tmpv0, 0x00000010) 

U7714: tmpv2:= SAR_DSZ64(tmpv2, 0x00000010) 
U7715: tmpv2:= SUB_DSZ64(tmpv1, tmpv2) 
U7716: tmpv1:= SUB_DSZ32(tmpv1, tmpv0) 

U7718: tmpv0:= BT_DSZ64(tmpv0, 0x00000034) 
U7719: tmpv2:= MOVEMERGEFLGS_DSZ64(tmpv2, tmpv0) 
U771a: tmpv0:= CMOVCC_DSZ64_CONDB(tmpv2, tmpv1) SEQW SAVEUIP0 U771cSEQW GOTO U334d

U771c: tmpv2:= ADD_DSZ32(0x00000020, tmpv3) 
U771d: tmpv0:= MOVEFROMCREG_DSZ64( , tmpv2) SEQW SAVEUIP0 U771eSEQW GOTO U334d
U771e: tmpv3:= ADD_DSZ32(0x00000001, tmpv3) 

U7720: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U770e
U7721: tmpv1:= READURAM( , 0x008c, 64) 
U7722: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x0000001c, U06c6) 

U7724: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000021, U06c6) 
U7725: LFNCEWAIT-> tmpv0:= MOVEFROMCREG_DSZ64( , 0x067) 
U7726: BTUJB_DIRECT_NOTTAKEN(tmpv1, 0x00000020, U772a) !m1,m2 

U7728: tmpv1:= MOVEFROMCREG_DSZ64( , 0x065) 
U7729: tmpv0:= SUB_DSZN(tmpv1, tmpv0) !m1 
U772a: SAVEUIP( , 0x00, U06c6) SEQW GOTO U334d

U772c: NOP 
U772d: NOP 
U772e: NOP SEQW SAVEUIP1 U7730SEQW GOTO U4406

U7730: TESTUSTATE( , UCODE, 0x0044) ? SEQW GOTO U4b9c
U7731: NOP 
U7732: NOP 

U7734: SAVEUIP_REGOVR(0x01, U7735, 0x0004) !m0 SEQW GOTO U32cd
U7735: LFNCEMARK-> MOVETOCREG_DSZ64( , 0x00000000, 0x387, 32) !m1 
U7736: tmp12:= ZEROEXT_DSZ32(0x00007600) 

U7738: tmp4:= BTS_DSZ64(0x00000000, 0x0000003f) 
U7739: LFNCEWAIT-> tmp0:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U773a: tmp2:= NOTAND_DSZ32(tmp0, 0x00000002) 

U773c: tmp2:= SHL_DSZ64(tmp2, 0x0000003b) 
U773d: tmp0:= BT_DSZ64(tmp0, 0x00000030) 
U773e: LFNCEMARK-> tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U7740: tmp4:= AND_DSZ64(tmp4, tmp1) 
U7741: LFNCEWAIT-> tmp3:= MOVEFROMCREG_DSZ64( , 0x387, 32) !m1 
U7742: tmp3:= SELECTCC_DSZ64_CONDNB(tmp0, tmp3) 

U7744: MOVETOCREG_DSZ64(tmp0, 0x383, 32) !m1 
U7745: MOVETOCREG_SHR_DSZ64(tmp0, 0x00000020, 0x388) !m1 
U7746: tmp4:= AND_DSZ64(tmp4, tmp3) 

U7748: tmp4:= SHR_DSZ64(tmp4, 0x00000001) 
U7749: tmp3:= NOTAND_DSZ64(tmp2, tmp3) 
U774a: tmp1:= OR_DSZ64(tmp4, tmp1) 

U774c: LFNCEMARK-> MOVETOCREG_OR_DSZ64(tmp1, 0x387, tmp3) !m1 
U774d: tmp12:= ZEROEXT_DSZ32(0x00007640) 
U774e: NOP 

U7750: LFNCEWAIT-> tmp1:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 
U7751: MOVETOCREG_DSZ64(tmp1, 0x386, 32) !m1 
U7752: tmp2:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U7754: MOVETOCREG_DSZ64(tmp2, 0x385, 32) !m1 
U7755: tmp12:= ZEROEXT_DSZ32(0x00007680) 
U7756: LFNCEWAIT-> tmp6:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12) 

U7758: MOVETOCREG_DSZ64(tmp6, 0x2e9, 32) !m1 
U7759: MOVETOCREG_SHR_DSZ64(tmp6, 0x00000020, 0x392) !m1 
U775a: tmp8:= LDSTGBUF_DSZ64_ASZ16_SC1(tmp12, 0x00000020) 

U775c: MOVETOCREG_DSZ64(tmp8, 0x20c, 32) !m1 
U775d: tmp10:= SHR_DSZ64(tmp8, 0x00000020) 
U775e: tmp10:= MOVETOCREG_BTS_DSZ64(tmp10, 0x00000009, 0x238) !m1,m2 SEQW GOTO U4b9e

U7760: NOP 
U7761: NOP 
U7762: BTUJB_DIRECT_NOTTAKEN(tmp12, 0x0000001e, U03dc) !m0 SEQW SAVEUIP1 U7764SEQW GOTO U3ad0

U7764: tmp11:= ZEROEXT_DSZ32(0x00000007) 
U7765: WRITEURAM(tmp11, 0x0073, 32) 
U7766: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U776d

U7768: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U776c
U7769: tmp0:= MOVEFROMCREG_DSZ64( , 0x387, 32) !m1 
U776a: STADSTGBUF_DSZ64_ASZ16_SC1(0x00007620,  , tmp0) 

U776c: MOVETOCREG_DSZ64( , 0x00000000, 0x387, 32) !m1,m2 
U776d: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U7776
U776e: tmp1:= MOVEFROMCREG_DSZ64( , 0x21d, 32) !m1 

U7770: tmp1:= BT_DSZ32(tmp1, 0x00000008) 
U7771: tmp1:= SELECTCC_DSZ32_CONDNB(tmp1, 0x00003b00) 
U7772: tmp1:= ADD_DSZ32(0x000000c0, tmp1) 

U7774: tmp5:= MOVEFROMCREG_DSZ64( , 0x693) 
U7775: STADSTGBUF_DSZ64_ASZ16_SC1(tmp1,  , tmp5) 
U7776: MOVETOCREG_DSZ64( , 0x00000000, 0x693) !m2 

U7778: tmp0:= MOVEFROMCREG_DSZ64( , 0x285, 32) !m1 
U7779: tmp0:= MOVETOCREG_BTR_DSZ64(tmp0, 0x0000000b, 0x285) !m0,m1 
U777a: tmp1:= PORTIN_DSZ32_ASZ16_SC1(0x4740) !m2 

U777c: tmp3:= unk_222(tmp1) 
U777d: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x4744) !m2 
U777e: tmp2:= unk_222(tmp2) 

U7780: tmp0:= CONCAT_DSZ8(tmp2, tmp3) 
U7781: tmp0:= CONCAT_DSZ16(tmp1, tmp0) 
U7782: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x0060) !m2 

U7784: tmp0:= CONCAT_DSZ32(tmp0, tmp2) 
U7785: tmp2:= SHR_DSZ32(tmp2, 0x00000001) 
U7786: tmp2:= XOR_DSZ32(0x00000001, tmp2) 

U7788: tmp2:= BT_DSZ16(tmp1, tmp2) 
U7789: tmp2:= SELECTCC_DSZ32_CONDNB(tmp2, 0x00000001) 
U778a: tmp2:= SHL_DSZ64(tmp2, 0x0000002f) 

U778c: tmp0:= OR_DSZ64(tmp2, tmp0) 
U778d: WRITEURAM(tmp0, 0x0020, 64) 
U778e: tmp0:= AND_DSZ32(0x00000002, tmp0) 

U7790: tmp0:= SHL_DSZ64(tmp0, 0x00000027) 
U7791: tmp1:= MOVEFROMCREG_DSZ64( , 0x701) 
U7792: MOVETOCREG_OR_DSZ64(tmp1, 0x701, tmp0) 

U7794: tmp5:= READURAM( , 0x0035, 64) 
U7795: BTUJNB_DIRECT_NOTTAKEN(tmp5, 0x00000003, U779e) !m0,m1,m2 
U7796: tmp2:= PORTIN_DSZ32_ASZ16_SC1(0x9700) !m2 

U7798: LFNCEMARK-> tmp2:= AND_DSZ32(0x0000000c, tmp2) 
U7799: tmp2:= SHL_DSZ64(tmp2, 0x00000024) 
U779a: tmp5:= READURAM( , 0x005c, 64) 

U779c: tmp5:= OR_DSZ64(tmp2, tmp5) 
U779d: WRITEURAM(tmp5, 0x015c, 64) !m2 
U779e: tmp3:= READURAM( , 0x0020, 64) !m2 

U77a0: tmp3:= AND_DSZ32(0x000000ff, tmp3) 
U77a1: MOVETOCREG_DSZ64(tmp3, 0x2b9, 32) !m1,m2 
U77a2: LFNCEWAIT-> tmp6:= MOVEFROMCREG_DSZ64( , 0x231, 32) !m1 SEQW SAVEUIP0 U77a4SEQW GOTO U5e21

U77a4: tmp6:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 
U77a5: tmp6:= OR_DSZ32(0x00000097, tmp6) 
U77a6: MOVETOCREG_DSZ64(tmp6, 0x223, 32) !m1,m2 

U77a8: NOP 
U77a9: NOP 
U77aa: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x2a1) !m1,m2 

U77ac: TESTUSTATE( , UCODE, 0x0004) ? SEQW GOTO U77c6
U77ad: NOP 
U77ae: NOP 

U77b0: SYNCWAIT-> SAVEUIP_REGOVR(0x01, U77b1, 0x0001) !m0 SEQW GOTO U32cd
U77b1: tmp0:= MOVEFROMCREG_DSZ64( , 0x39c, 32) !m1 
U77b2: tmp1:= ZEROEXT_DSZ32(0x00000003) 

U77b4: tmp1:= SHL_DSZ64(tmp1, 0x00000013) 
U77b5: tmp0:= NOTAND_DSZ64(tmp1, tmp0) 
U77b6: MOVETOCREG_BTS_DSZ64(tmp0, 0x00000013, 0x39c) !m0,m1 

U77b8: tmp0:= ZEROEXT_DSZ32(0x00000080) 
U77b9: tmp1:= ZEROEXT_DSZ32(0x00000002) 
U77ba: SAVEUIP( , 0x00, U027a) SEQW SAVEUIP1 U77bcSEQW GOTO U17f6

U77bc: tmp3:= MOVEFROMCREG_DSZ64( , 0x2e6, 32) !m1 
U77bd: tmp1:= CONCAT_DSZ16(0x0000004b) 
U77be: MOVETOCREG_OR_DSZ64(tmp3, 0x2e6, tmp1) !m1 SEQW SAVEUIP1 U77c0SEQW GOTO U6c86

U77c0: MOVETOCREG_BTS_DSZ64( , 0x00000001, 0x289) !m1,m2 
U77c1: tmp1:= MOVEFROMCREG_DSZ64( , 0x22a, 32) !m1 
U77c2: MOVETOCREG_BTS_DSZ64(tmp1, 0x00000013, 0x22a) !m0,m1 

U77c4: tmp1:= MOVEFROMCREG_DSZ64( , 0x213, 32) !m1 
U77c5: MOVETOCREG_BTS_DSZ64(tmp1, 0x0000001f, 0x213) !m0,m1 
U77c6: LFNCEWAIT-> unk_eff() 

U77c8: tmp0:= READURAM( , 0x0020, 64) !m2 
U77c9: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x0000001f, U5e46) !m0,m2 
U77ca: SAVEUIP_REGOVR(0x00, U77cc, 0x0000) SEQW GOTO U0725

U77cc: tmp15:= ZEROEXT_DSZ32(0x00000009) SEQW SAVEUIP0 U77cd
U77cd: tmp0:= PORTIN_DSZ32_ASZ16_SC1(0x00c0) !m2 
U77ce: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000003, U0082) !m0 

U77d0: tmp11:= ZEROEXT_DSZ32(0x0000000a) 
U77d1: WRITEURAM(tmp11, 0x0073, 32) 
U77d2: tmp5:= SAVEUIP( , 0x00, U0c52) SEQW GOTO U5ee8

U77d4: NOP 
U77d5: NOP 
U77d6: MOVETOCREG_OR_DSZ64( , 0x00000002, 0x2f3) !m0,m1,m2 SEQW SAVEUIP0 U77d8SEQW GOTO U04fc

U77d8: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U37a2
U77d9: NOP 
U77da: NOP 

U77dc: tmp11:= READURAM( , 0x000f, 64) SEQW SAVEUIP0 U77ddSEQW GOTO U3048
U77dd: tmp2:= MOVEFROMCREG_DSZ64( , 0x2c4, 32) !m1 
U77de: tmp2:= OR_DSZ32(0x00000060, tmp2) 

U77e0: MOVETOCREG_DSZ64(tmp2, 0x2c4, 32) !m1,m2 
U77e1: tmp0:= OR_DSZ32(0x00000040) 
U77e2: tmp9:= MOVETOCREG_DSZ64(tmp0, 0x2d5, 32) !m1 

U77e4: tmp0:= MOVEFROMCREG_DSZ64(tmp9, 0x2d4, 32) !m1,m2 
U77e5: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U77e4) !m1,m2 
U77e6: LFNCEMARK-> tmp10:= MOVEFROMCREG_DSZ64( , 0x2d9, 32) !m1 

U77e8: tmp0:= AND_DSZ32(0x00000100, tmp0) 
U77e9: tmp10:= MOVEMERGEFLGS_DSZ64(tmp10, tmp0) 
U77ea: tmp10:= CMOVCC_DSZ64_CONDNZ(tmp10, 0xffffffffffffffff) 

U77ec: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d0, 32) !m1 
U77ed: tmp0:= SUB_DSZ64(tmp0, tmp10) 
U77ee: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, U75b5) 

U77f0: tmp9:= LDSTGBUF_DSZ64_ASZ16_SC1(0x0000b740) 
U77f1: tmp9:= SUB_DSZ64(tmp9, tmp0) 
U77f2: LFNCEWTMRK-> UJMPCC_DIRECT_NOTTAKEN_CONDBE(tmp9, U75b5) 

U77f4: PORTOUT_DSZ64_ASZ16_SC1(0x4658,  , tmp10) !m2 
U77f5: SAVEUIP_REGOVR(0x01, U77f6, 0x0008) !m0 SEQW GOTO U2b15
U77f6: MOVETOCREG_BTS_DSZ64( , 0x00000005, 0x63a) 

U77f8: WRMSLOOPCTRFBR( , 0x0000017f) 
U77f9: tmp8:= ZEROEXT_DSZ32(0x00000006) 
U77fa: NOP 

U77fc: unk_def(tmp8) 
U77fd: tmp8:= ADD_DSZ32(0x00000040, tmp8) 
U77fe: TESTUSTATE( , UCODE, UST_MSLOOPCTR_NONZERO) ? SEQW GOTO U77fc

U7800: LBSYNC(0x00000001) 
U7801: LFNCEMARK-> LBSYNC(0x00000001) 
U7802: tmp8:= MOVEFROMCREG_DSZ64( , 0x223, 32) !m1 

U7804: tmp8:= NOTAND_DSZ32(0x00000011, tmp8) 
U7805: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U2905
U7806: MOVETOCREG_BTS_DSZ64(tmp8, 0x00000004, 0x223) !m1,m2 

U7808: tmp0:= MOVEFROMCREG_DSZ64( , 0x2d2, 32) !m1 
U7809: tmp0:= BTR_DSZ64(tmp0, 0x0000003f) 
U780a: LFNCEMARK-> UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, U780c) SEQW GOTO U7812

U780c: PORTOUT_DSZ32_ASZ16_SC1(0x5140,  , tmp0) !m2 
U780d: tmp1:= SHR_DSZ64(tmp0, 0x00000020) 
U780e: PORTOUT_DSZ32_ASZ16_SC1(0x5144,  , tmp1) !m2 

U7810: MOVETOCREG_DSZ64( , 0x00000000, 0x2d2, 32) !m1 
U7811: SAVEUIP_REGOVR(0x01, U7812, 0x0000) !m0 SEQW GOTO U2b15
U7812: MOVETOCREG_BTS_DSZ64( , 0x00000006, 0x072) !m0,m2 

U7814: MOVETOCREG_DSZ64( , 0x00000000, 0x2d3, 32) !m1,m2 
U7815: tmp4:= ZEROEXT_DSZ32(0x01000000) 
U7816: ROVR<- ADD_DSZ32(0x00000000, 0x00002401) SEQW SAVEUIP0 U7818SEQW GOTO U25a5

U7818: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cf, 32) !m1,m2 
U7819: BTUJB_DIRECT_NOTTAKEN(tmp0, 0x00000004, U75ad) !m1,m2 
U781a: tmp0:= BTR_DSZ32(tmp0, 0x00000003) 

U781c: UJMPCC_DIRECT_NOTTAKEN_CONDB(tmp0, U781d) SEQW GOTO U7818
U781d: MOVETOCREG_DSZ64(tmp0, 0x2cf, 32) !m1 
U781e: MSLOOP-> NOP 

U7820: MOVETOCREG_OR_DSZ64( , 0x00000001, 0x2ce) !m1,m2 
U7821: tmp0:= MOVEFROMCREG_DSZ64( , 0x2ce, 32) !m1,m2 
U7822: BTUJNB_DIRECT_NOTTAKEN(tmp0, 0x00000000, U7824) !m1,m2 SEQW GOTO U7821

U7824: LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(0x0000ffff) 
U7825: NOP 
U7826: NOP 

U7828: LFNCEWAIT-> MOVETOCREG_DSZ64(tmp0, 0x2c4, 32) !m1 
U7829: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cf, 32) !m1 
U782a: MOVETOCREG_OR_DSZ64(tmp0, 0x00000002, 0x2cf) !m0,m1 

U782c: TESTUSTATE( , UCODE, 0x0008) ? SEQW GOTO U2cba
U782d: tmp10:= ZEROEXT_DSZ32(0x0000bd40) 
U782e: tmp0:= READURAM( , 0x000f, 64) 

U7830: tmp0:= NOTAND_DSZ32(0x000f0000, tmp0) 
U7831: tmp0:= BTS_DSZ32(tmp0, 0x00000018) 
U7832: PORTOUT_DSZ32_ASZ16_SC1(0x00b4,  , tmp0) !m2 

U7834: TESTUSTATE( , UCODE, !0x0020) !m0 ? SEQW GOTO U5d54
U7835: NOP 
U7836: NOP 

U7838: MOVE_DSZ32() SEQW SAVEUIP1 U7839SEQW GOTO U2ad0
U7839: LBSYNC(0x00000001) 
U783a: SYNCFULL-> LBSYNC(0x00000007) 

U783c: tmp0:= MOVEFROMCREG_DSZ64( , 0x29f, 32) !m1 
U783d: tmp0:= AND_DSZ32(0x0000c000, tmp0) 
U783e: UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp0, U7840) SEQW GOTO U5d55

U7840: tmp0:= ZEROEXT_DSZ32(0x00000020) 
U7841: tmp0:= BTS_DSZ32(tmp0, 0x0000001f) 
U7842: tmp1:= READURAM( , 0x000e, 64) 

U7844: tmp1:= SHR_DSZ64(tmp1, 0x00000030) 
U7845: tmp1:= CONCAT_DSZ16(tmp1, 0x00007840) 
U7846: tmp1:= CONCAT_DSZ32(tmp1, tmp0) 

U7848: WRITEURAM(tmp1, 0x000e, 64) !m2 
U7849: SAVEUIP_REGOVR( , 0x00, U784a, 0x4201) SEQW GOTO U60f6
U784a: tmp2:= AND_DSZ32(0x00000007, tmp2) 

U784c: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp2, U7849) 
U784d: tmp2:= ZEROEXT_DSZ32(0x01000000) 
U784e: ROVR<- ADD_DSZ32(0x00000000, 0x00004201) SEQW SAVEUIP0 U7850SEQW GOTO U25a5

U7850: SAVEUIP_REGOVR( , 0x00, U7851, 0x4201) SEQW GOTO U60f6
U7851: tmp2:= AND_DSZ32(0x00000007, tmp2) 
U7852: SYNCFULL-> UJMPCC_DIRECT_NOTTAKEN_CONDNZ(tmp2, U7850) 

U7854: LFNCEMARK-> tmp0:= ZEROEXT_DSZ32(0x00000021) SEQW GOTO U079e
U7855: NOP 
U7856: NOP 

U7858: NOP 
U7859: NOP 
U785a: NOP SEQW SAVEUIP1 U785cSEQW GOTO U20bd

U785c: tmp5:= ZEROEXT_DSZ32(0x0000785e) 
U785d: TESTUSTATE( , SYS, !UST_SMM | 0x2000) !m0,m1 ? SEQW GOTO U4798
U785e: SYNCFULL-> tmp1:= READURAM( , 0x0070, 64) 

U7860: WRITEURAM(tmp1, 0x0038, 64) 
U7861: tmp0:= MOVEFROMCREG_DSZ64( , 0x01d) 
U7862: tmp7:= SHL_DSZ32(tmp0, 0x00000008) 

U7864: tmp0:= MOVEFROMCREG_DSZ64( , 0x20f, 32) !m1 
U7865: WRITEURAM(tmp0, 0x006f, 64) 
U7866: tmp0:= MOVEFROMCREG_DSZ64( , 0x7f1) 

U7868: WRITEURAM(tmp0, 0x006d, 32) !m2 
U7869: tmp1:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U786a: BTUJB_DIRECT_NOTTAKEN(tmp1, 0x00000006, U786e) !m0,m1,m2 

U786c: tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 
U786d: WRITEURAM(tmp0, 0x0067, 64) !m2 
U786e: SYNCFULL-> tmp0:= MOVEFROMCREG_DSZ64( , 0x065) 

U7870: tmp0:= SHL_DSZ64(tmp0, 0x00000020) 
U7871: WRITEURAM(tmp0, 0x016d, 64) !m2 
U7872: MOVETOCREG_DSZ64( , 0x00000000, 0x01d) !m2 

U7874: MOVETOCREG_DSZ64( , 0x00000000, 0x7f1) !m2 
U7875: MOVETOCREG_DSZ64( , 0x00000000, 0x20f, 32) !m1,m2 
U7876: tmp0:= MOVEFROMCREG_DSZ64( , 0x51e) 

U7878: MOVETOCREG_BTR_DSZ64(tmp0, 0x51e) !m2 
U7879: tmp0:= AND_DSZ32(0x00000001, tmp0) 
U787a: tmp0:= SHL_DSZ32(tmp0, 0x0000000f) 

U787c: tmp7:= OR_DSZ32(tmp0, tmp7) 
U787d: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c5) 
U787e: tmp7:= OR_DSZ32(tmp0, tmp7) 

U7880: MOVETOCREG_DSZ64( , 0x00000000, 0x6c5) !m2 
U7881: MOVETOCREG_DSZ64(rcx, 0x2c0, 32) !m1 
U7882: WRITEURAM(rdx, 0x0063, 64) 

U7884: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U7885: tmp2:= NOTAND_DSZ64(0x00000018, tmp2) 
U7886: MOVETOCREG_DSZ64(tmp2, 0x2df, 32) !m1 

U7888: tmp0:= RDSEGFLD(UNK_SEG_09, FLGS) 
U7889: tmp1:= MOVEFROMCREG_DSZ64( , 0x7ff) 
U788a: TESTUSTATE( , SYS, !UST_SMM) !m0,m1 ? SEQW GOTO U788d

U788c: tmp1:= BTS_DSZ32(tmp1, 0x0000001f) 
U788d: tmp1:= CONCAT_DSZ32(tmp0, tmp1) 
U788e: MOVETOCREG_DSZ64(tmp1, 0x2c1, 32) !m1 

U7890: WRITEURAM(rax, 0x0068, 64) 
U7891: tmp2:= MOVEFROMCREG_DSZ64( , 0x7f6) 
U7892: WRITEURAM(tmp2, 0x0069, 64) 

U7894: tmp0:= READURAM( , 0x0043, 64) 
U7895: WRITEURAM(tmp0, 0x0064, 64) 
U7896: tmp0:= MOVEFROMCREG_DSZ64( , 0x6c3) 

U7898: tmp1:= AND_DSZ32(0x00000100, tmp0) 
U7899: tmp1:= SHR_DSZ32(tmp1, 0x00000008) 
U789a: WRITEURAM(tmp1, 0x0065, 32) 

U789c: MOVETOCREG_BTR_DSZ64(tmp0, 0x00000008, 0x6c3) 
U789d: tmp0:= SHL_DSZ32(tmp0, 0x00000010) 
U789e: tmp7:= OR_DSZ32(tmp0, tmp7) 

U78a0: WRITEURAM(tmp7, 0x0026, 32) 
U78a1: tmp0:= ZEROEXT_DSZ32(0x00000002) 
U78a2: MOVETOCREG_DSZ64(tmp0, 0x2f3, 32) !m1 

U78a4: WRITEURAM( , 0x00000000, 0x0007, 32) 
U78a5: tmp1:= READURAM( , 0x005c, 64) 
U78a6: LFNCEMARK-> tmp0:= MOVEFROMCREG_DSZ64( , 0x7c6) 

U78a8: tmp0:= AND_DSZ32(0x00000003, tmp0) 
U78a9: tmp0:= SHL_DSZ32(tmp0, 0x0000001b) 
U78aa: tmp1:= NOTAND_DSZ32(0x18000000, tmp1) 

U78ac: tmp1:= OR_DSZ32(tmp0, tmp1) 
U78ad: WRITEURAM(tmp1, 0x005c, 32) 
U78ae: MOVETOCREG_OR_DSZ64( , 0x00000008, 0x0b4) 

U78b0: tmp0:= READURAM( , 0x0050, 64) 
U78b1: tmp0:= SHR_DSZ32(tmp0, 0x00000010) 
U78b2: tmp0:= SUB_DSZ32(0x00000083, tmp0) 

U78b4: UJMPCC_DIRECT_NOTTAKEN_CONDZ(tmp0, U78b9) 
U78b5: tmp0:= MOVEFROMCREG_DSZ64( , 0x067) 
U78b6: AETTRACE( , tmp0, 0x0c) 

U78b8: AETTRACE(0x0e) 
U78b9: TESTUSTATE( , SYS, UST_SMM) !m1 ? SEQW GOTO U78c4
U78ba: NOP 

U78bc: TESTUSTATE( , SYS, !UST_VMX_DUAL_MON) !m0,m1 ? SEQW GOTO U78c0
U78bd: BTUJNB_DIRECT_NOTTAKEN(tmp1, 0x00000008, U403c) 
U78be: NOP 

U78c0: LFNCEMARK-> SAVEUIP_REGOVR(0x01, U78c1, 0x0000) !m0 SEQW GOTO U38c2
U78c1: NOP 
U78c2: NOP 

U78c4: SYNCFULL-> NOP 
U78c5: SAVEUIP_REGOVR(0x01, U78c6, 0x0000) !m0 SEQW GOTO U2b15
U78c6: MOVETOCREG_BTS_DSZ64( , 0x7e1) 

U78c8: tmp1:= MOVEFROMCREG_DSZ64( , 0x6c3) 
U78c9: MOVETOCREG_BTR_DSZ64(tmp1, 0x00000004, 0x6c3) 
U78ca: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 

U78cc: SYNCFULL-> MOVETOCREG_BTS_DSZ64(tmp0, 0x00000012, 0x2cd) !m0,m1,m2 
U78cd: tmp1:= ZEROEXT_DSZ32(0x00013fff) 
U78ce: MOVETOCREG_DSZ64(tmp1, 0x2c4, 32) !m1 

U78d0: tmp1:= ZEROEXT_DSZ32(0x007fcfcc) 
U78d1: SYNCFULL-> MOVETOCREG_DSZ64(tmp1, 0x008) 
U78d2: MOVETOCREG_DSZ64( , 0x00000000, 0x000) 

U78d4: tmp2:= MOVEFROMCREG_DSZ64( , 0x2df, 32) !m1 
U78d5: BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000002, U35a5) !m0,m1,m2 
U78d6: SYNCFULL-> BTUJNB_DIRECT_NOTTAKEN(tmp2, 0x00000003, U78d4) !m0,m1,m2 

U78d8: tmp0:= MOVEFROMCREG_DSZ64( , 0x2cd, 32) !m1 
U78d9: SYNCFULL-> MOVETOCREG_BTR_DSZ64(tmp0, 0x00000012, 0x2cd) !m0,m1 
U78da: FETCHFROMEIP0_ASZ64() !m1 SEQW UEND3

U78dc: NOP 
U78dd: NOP 
U78de: NOP 

U78e0: NOP 
U78e1: NOP 
U78e2: NOP 

U78e4: NOP 
U78e5: NOP 
U78e6: NOP 

U78e8: NOP 
U78e9: NOP 
U78ea: NOP 

U78ec: NOP 
U78ed: NOP 
U78ee: NOP 

U78f0: NOP 
U78f1: NOP 
U78f2: NOP 

U78f4: NOP 
U78f5: NOP 
U78f6: NOP 

U78f8: NOP 
U78f9: NOP 
U78fa: NOP 

U78fc: NOP 
U78fd: NOP 
U78fe: NOP 

U7900: NOP 
U7901: NOP 
U7902: NOP 

U7904: NOP 
U7905: NOP 
U7906: NOP 

U7908: NOP 
U7909: NOP 
U790a: NOP 

U790c: NOP 
U790d: NOP 
U790e: NOP 

U7910: NOP 
U7911: NOP 
U7912: NOP 

U7914: NOP 
U7915: NOP 
U7916: NOP 

U7918: NOP 
U7919: NOP 
U791a: NOP 

U791c: NOP 
U791d: NOP 
U791e: NOP 

U7920: NOP 
U7921: NOP 
U7922: NOP 

U7924: NOP 
U7925: NOP 
U7926: NOP 

U7928: NOP 
U7929: NOP 
U792a: NOP 

U792c: NOP 
U792d: NOP 
U792e: NOP 

U7930: NOP 
U7931: NOP 
U7932: NOP 

U7934: NOP 
U7935: NOP 
U7936: NOP 

U7938: NOP 
U7939: NOP 
U793a: NOP 

U793c: NOP 
U793d: NOP 
U793e: NOP 

U7940: NOP 
U7941: NOP 
U7942: NOP 

U7944: NOP 
U7945: NOP 
U7946: NOP 

U7948: NOP 
U7949: NOP 
U794a: NOP 

U794c: NOP 
U794d: NOP 
U794e: NOP 

U7950: NOP 
U7951: NOP 
U7952: NOP 

U7954: NOP 
U7955: NOP 
U7956: NOP 

U7958: NOP 
U7959: NOP 
U795a: NOP 

U795c: NOP 
U795d: NOP 
U795e: NOP 

U7960: NOP 
U7961: NOP 
U7962: NOP 

U7964: NOP 
U7965: NOP 
U7966: NOP 

U7968: NOP 
U7969: NOP 
U796a: NOP 

U796c: NOP 
U796d: NOP 
U796e: NOP 

U7970: NOP 
U7971: NOP 
U7972: NOP 

U7974: NOP 
U7975: NOP 
U7976: NOP 

U7978: NOP 
U7979: NOP 
U797a: NOP 

U797c: NOP 
U797d: NOP 
U797e: NOP 

U7980: NOP 
U7981: NOP 
U7982: NOP 

U7984: NOP 
U7985: NOP 
U7986: NOP 

U7988: NOP 
U7989: NOP 
U798a: NOP 

U798c: NOP 
U798d: NOP 
U798e: NOP 

U7990: NOP 
U7991: NOP 
U7992: NOP 

U7994: NOP 
U7995: NOP 
U7996: NOP 

U7998: NOP 
U7999: NOP 
U799a: NOP 

U799c: NOP 
U799d: NOP 
U799e: NOP 

U79a0: NOP 
U79a1: NOP 
U79a2: NOP 

U79a4: NOP 
U79a5: NOP 
U79a6: NOP 

U79a8: NOP 
U79a9: NOP 
U79aa: NOP 

U79ac: NOP 
U79ad: NOP 
U79ae: NOP 

U79b0: NOP 
U79b1: NOP 
U79b2: NOP 

U79b4: NOP 
U79b5: NOP 
U79b6: NOP 

U79b8: NOP 
U79b9: NOP 
U79ba: NOP 

U79bc: NOP 
U79bd: NOP 
U79be: NOP 

U79c0: NOP 
U79c1: NOP 
U79c2: NOP 

U79c4: NOP 
U79c5: NOP 
U79c6: NOP 

U79c8: NOP 
U79c9: NOP 
U79ca: NOP 

U79cc: NOP 
U79cd: NOP 
U79ce: NOP 

U79d0: NOP 
U79d1: NOP 
U79d2: NOP 

U79d4: NOP 
U79d5: NOP 
U79d6: NOP 

U79d8: NOP 
U79d9: NOP 
U79da: NOP 

U79dc: NOP 
U79dd: NOP 
U79de: NOP 

U79e0: NOP 
U79e1: NOP 
U79e2: NOP 

U79e4: NOP 
U79e5: NOP 
U79e6: NOP 

U79e8: NOP 
U79e9: NOP 
U79ea: NOP 

U79ec: NOP 
U79ed: NOP 
U79ee: NOP 

U79f0: NOP 
U79f1: NOP 
U79f2: NOP 

U79f4: NOP 
U79f5: NOP 
U79f6: NOP 

U79f8: NOP 
U79f9: NOP 
U79fa: NOP 

U79fc: NOP 
U79fd: NOP 
U79fe: NOP 

U7a00: NOP 
U7a01: NOP 
U7a02: NOP 

U7a04: NOP 
U7a05: NOP 
U7a06: NOP 

U7a08: NOP 
U7a09: NOP 
U7a0a: NOP 

U7a0c: NOP 
U7a0d: NOP 
U7a0e: NOP 

U7a10: NOP 
U7a11: NOP 
U7a12: NOP 

U7a14: NOP 
U7a15: NOP 
U7a16: NOP 

U7a18: NOP 
U7a19: NOP 
U7a1a: NOP 

U7a1c: NOP 
U7a1d: NOP 
U7a1e: NOP 

U7a20: NOP 
U7a21: NOP 
U7a22: NOP 

U7a24: NOP 
U7a25: NOP 
U7a26: NOP 

U7a28: NOP 
U7a29: NOP 
U7a2a: NOP 

U7a2c: NOP 
U7a2d: NOP 
U7a2e: NOP 

U7a30: NOP 
U7a31: NOP 
U7a32: NOP 

U7a34: NOP 
U7a35: NOP 
U7a36: NOP 

U7a38: NOP 
U7a39: NOP 
U7a3a: NOP 

U7a3c: NOP 
U7a3d: NOP 
U7a3e: NOP 

U7a40: NOP 
U7a41: NOP 
U7a42: NOP 

U7a44: NOP 
U7a45: NOP 
U7a46: NOP 

U7a48: NOP 
U7a49: NOP 
U7a4a: NOP 

U7a4c: NOP 
U7a4d: NOP 
U7a4e: NOP 

U7a50: NOP 
U7a51: NOP 
U7a52: NOP 

U7a54: NOP 
U7a55: NOP 
U7a56: NOP 

U7a58: NOP 
U7a59: NOP 
U7a5a: NOP 

U7a5c: NOP 
U7a5d: NOP 
U7a5e: NOP 

U7a60: NOP 
U7a61: NOP 
U7a62: NOP 

U7a64: NOP 
U7a65: NOP 
U7a66: NOP 

U7a68: NOP 
U7a69: NOP 
U7a6a: NOP 

U7a6c: NOP 
U7a6d: NOP 
U7a6e: NOP 

U7a70: NOP 
U7a71: NOP 
U7a72: NOP 

U7a74: NOP 
U7a75: NOP 
U7a76: NOP 

U7a78: NOP 
U7a79: NOP 
U7a7a: NOP 

U7a7c: NOP 
U7a7d: NOP 
U7a7e: NOP 

U7a80: NOP 
U7a81: NOP 
U7a82: NOP 

U7a84: NOP 
U7a85: NOP 
U7a86: NOP 

U7a88: NOP 
U7a89: NOP 
U7a8a: NOP 

U7a8c: NOP 
U7a8d: NOP 
U7a8e: NOP 

U7a90: NOP 
U7a91: NOP 
U7a92: NOP 

U7a94: NOP 
U7a95: NOP 
U7a96: NOP 

U7a98: NOP 
U7a99: NOP 
U7a9a: NOP 

U7a9c: NOP 
U7a9d: NOP 
U7a9e: NOP 

U7aa0: NOP 
U7aa1: NOP 
U7aa2: NOP 

U7aa4: NOP 
U7aa5: NOP 
U7aa6: NOP 

U7aa8: NOP 
U7aa9: NOP 
U7aaa: NOP 

U7aac: NOP 
U7aad: NOP 
U7aae: NOP 

U7ab0: NOP 
U7ab1: NOP 
U7ab2: NOP 

U7ab4: NOP 
U7ab5: NOP 
U7ab6: NOP 

U7ab8: NOP 
U7ab9: NOP 
U7aba: NOP 

U7abc: NOP 
U7abd: NOP 
U7abe: NOP 

U7ac0: NOP 
U7ac1: NOP 
U7ac2: NOP 

U7ac4: NOP 
U7ac5: NOP 
U7ac6: NOP 

U7ac8: NOP 
U7ac9: NOP 
U7aca: NOP 

U7acc: NOP 
U7acd: NOP 
U7ace: NOP 

U7ad0: NOP 
U7ad1: NOP 
U7ad2: NOP 

U7ad4: NOP 
U7ad5: NOP 
U7ad6: NOP 

U7ad8: NOP 
U7ad9: NOP 
U7ada: NOP 

U7adc: NOP 
U7add: NOP 
U7ade: NOP 

U7ae0: NOP 
U7ae1: NOP 
U7ae2: NOP 

U7ae4: NOP 
U7ae5: NOP 
U7ae6: NOP 

U7ae8: NOP 
U7ae9: NOP 
U7aea: NOP 

U7aec: NOP 
U7aed: NOP 
U7aee: NOP 

U7af0: NOP 
U7af1: NOP 
U7af2: NOP 

U7af4: NOP 
U7af5: NOP 
U7af6: NOP 

U7af8: NOP 
U7af9: NOP 
U7afa: NOP 

U7afc: NOP 
U7afd: NOP 
U7afe: NOP 

U7b00: NOP 
U7b01: NOP 
U7b02: NOP 

U7b04: NOP 
U7b05: NOP 
U7b06: NOP 

U7b08: NOP 
U7b09: NOP 
U7b0a: NOP 

U7b0c: NOP 
U7b0d: NOP 
U7b0e: NOP 

U7b10: NOP 
U7b11: NOP 
U7b12: NOP 

U7b14: NOP 
U7b15: NOP 
U7b16: NOP 

U7b18: NOP 
U7b19: NOP 
U7b1a: NOP 

U7b1c: NOP 
U7b1d: NOP 
U7b1e: NOP 

U7b20: NOP 
U7b21: NOP 
U7b22: NOP 

U7b24: NOP 
U7b25: NOP 
U7b26: NOP 

U7b28: NOP 
U7b29: NOP 
U7b2a: NOP 

U7b2c: NOP 
U7b2d: NOP 
U7b2e: NOP 

U7b30: NOP 
U7b31: NOP 
U7b32: NOP 

U7b34: NOP 
U7b35: NOP 
U7b36: NOP 

U7b38: NOP 
U7b39: NOP 
U7b3a: NOP 

U7b3c: NOP 
U7b3d: NOP 
U7b3e: NOP 

U7b40: NOP 
U7b41: NOP 
U7b42: NOP 

U7b44: NOP 
U7b45: NOP 
U7b46: NOP 

U7b48: NOP 
U7b49: NOP 
U7b4a: NOP 

U7b4c: NOP 
U7b4d: NOP 
U7b4e: NOP 

U7b50: NOP 
U7b51: NOP 
U7b52: NOP 

U7b54: NOP 
U7b55: NOP 
U7b56: NOP 

U7b58: NOP 
U7b59: NOP 
U7b5a: NOP 

U7b5c: NOP 
U7b5d: NOP 
U7b5e: NOP 

U7b60: NOP 
U7b61: NOP 
U7b62: NOP 

U7b64: NOP 
U7b65: NOP 
U7b66: NOP 

U7b68: NOP 
U7b69: NOP 
U7b6a: NOP 

U7b6c: NOP 
U7b6d: NOP 
U7b6e: NOP 

U7b70: NOP 
U7b71: NOP 
U7b72: NOP 

U7b74: NOP 
U7b75: NOP 
U7b76: NOP 

U7b78: NOP 
U7b79: NOP 
U7b7a: NOP 

U7b7c: NOP 
U7b7d: NOP 
U7b7e: NOP 

U7b80: NOP 
U7b81: NOP 
U7b82: NOP 

U7b84: NOP 
U7b85: NOP 
U7b86: NOP 

U7b88: NOP 
U7b89: NOP 
U7b8a: NOP 

U7b8c: NOP 
U7b8d: NOP 
U7b8e: NOP 

U7b90: NOP 
U7b91: NOP 
U7b92: NOP 

U7b94: NOP 
U7b95: NOP 
U7b96: NOP 

U7b98: NOP 
U7b99: NOP 
U7b9a: NOP 

U7b9c: NOP 
U7b9d: NOP 
U7b9e: NOP 

U7ba0: NOP 
U7ba1: NOP 
U7ba2: NOP 

U7ba4: NOP 
U7ba5: NOP 
U7ba6: NOP 

U7ba8: NOP 
U7ba9: NOP 
U7baa: NOP 

U7bac: NOP 
U7bad: NOP 
U7bae: NOP 

U7bb0: NOP 
U7bb1: NOP 
U7bb2: NOP 

U7bb4: NOP 
U7bb5: NOP 
U7bb6: NOP 

U7bb8: NOP 
U7bb9: NOP 
U7bba: NOP 

U7bbc: NOP 
U7bbd: NOP 
U7bbe: NOP 

U7bc0: NOP 
U7bc1: NOP 
U7bc2: NOP 

U7bc4: NOP 
U7bc5: NOP 
U7bc6: NOP 

U7bc8: NOP 
U7bc9: NOP 
U7bca: NOP 

U7bcc: NOP 
U7bcd: NOP 
U7bce: NOP 

U7bd0: NOP 
U7bd1: NOP 
U7bd2: NOP 

U7bd4: NOP 
U7bd5: NOP 
U7bd6: NOP 

U7bd8: NOP 
U7bd9: NOP 
U7bda: NOP 

U7bdc: NOP 
U7bdd: NOP 
U7bde: NOP 

U7be0: NOP 
U7be1: NOP 
U7be2: NOP 

U7be4: NOP 
U7be5: NOP 
U7be6: NOP 

U7be8: NOP 
U7be9: NOP 
U7bea: NOP 

U7bec: NOP 
U7bed: NOP 
U7bee: NOP 

U7bf0: NOP 
U7bf1: NOP 
U7bf2: NOP 

U7bf4: NOP 
U7bf5: NOP 
U7bf6: NOP 

U7bf8: NOP 
U7bf9: NOP 
U7bfa: NOP 

U7bfc: NOP 
U7bfd: NOP 
U7bfe: tmp14:= ADD_DSZ32(tmp4, r15) !m0 
