# ARG0: {result} resulting sequence word
# ARG1: {address} jump address
# ARG2: {buf} temporary value
# ARG3: {tmp} temporary value
# computes SYNCFULL, JUMP {address} for uidx 0

{result} := ZEROEXT_DSZ32(0x2) # output
{buf} := ZEROEXT_DSZ32({address})

func lib/crc_calc({buf}, {result}, {tmp})

{result} := SHL_DSZ32({result}, 0x03)
{result} := OR_DSZ32({result}, 0x04)
{result} := SHL_DSZ32({result}, 0x11)
{result} := OR_DSZ32({result}, {address})
{result} := SHL_DSZ32({result}, 0x08)


