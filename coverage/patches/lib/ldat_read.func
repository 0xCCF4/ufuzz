# ARG0: addr - index of the hook
# ARG1: value - value to read
# ARG2: tmp - temporary value that will be overwritten
# ARG2: zero - later used as zero reg
# ARG3: {SELECTOR} - ldat selector (one hex char)

# it sometimes hangs, if not reading from PDAT before writing to it
tmp := MOVEFROMCREG_DSZ64( , 0x6a1) !m2

tmp := ZEROEXT_DSZ32(0x0000010{SELECTOR})
tmp := SHL_DSZ32(tmp, 0x00000008)

MOVETOCREG_DSZ64(tmp, 0x6a1) !m2    # selector

tmp := ZEROEXT_DSZ32(0x0000000c)
tmp := SHL_DSZ32(tmp, 0x014)
tmp := OR_DSZ32(tmp, addr)

MOVETOCREG_DSZ64(tmp, 0x6a0) !m2    # address

value := MOVEFROMCREG_DSZ64( , 0x6a2) !m2

zero := ZEROEXT_DSZ32(0x000000)

MOVETOCREG_DSZ64(zero, 0x6a1) !m2    # selector

